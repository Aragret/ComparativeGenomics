%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[-29.56438828 633.14025879]
[-31.97490120 647.97290039]
[-36.51946640 662.29644775]
[-43.10121155 675.80566406]
[-51.57985306 688.21252441]
[-61.77466202 699.25262451]
[-73.46833801 708.69061279]
[-86.41162872 716.32531738]
[-100.32865143 721.99407959]
[-114.92275238 725.57592773]
[-129.88287354 726.99468994]
[-144.89012146 726.21997070]
[-159.62463379 723.26831055]
[-173.77233887 718.20269775]
[-187.03166199 711.13104248]
[-199.11999512 702.20416260]
[-209.77967834 691.61218262]
[-218.78347778 679.58099365]
[-225.93949890 666.36706543]
[-231.09521484 652.25195312]
[-234.14070129 637.53656006]
[-235.01107788 622.53454590]
[-233.68775940 607.56567383]
[-230.19897461 592.94903564]
[-224.61909485 578.99615479]
[-217.06703186 566.00445557]
[-207.70376587 554.25085449]
[-196.72889709 543.98583984]
[-184.37631226 535.42828369]
[-170.90934753 528.76055908]
[-156.61503601 524.12475586]
[-141.79806519 521.61975098]
[-126.77425385 521.29888916]
[-111.86383820 523.16900635]
[-97.38463593 527.19030762]
[-91.31080627 513.47503662]
[-85.23696899 499.75976562]
[-79.16313171 486.04449463]
[-89.52134705 475.29104614]
[-94.98816681 461.35336304]
[-94.70154572 446.34393311]
[-88.67401886 432.55056763]
[-77.79555511 422.08764648]
[-63.70228195 416.57199097]
[-48.53042984 416.87307739]
[-42.45659637 403.15780640]
[-36.38276291 389.44253540]
[-30.30892944 375.72729492]
[-24.23509598 362.01202393]
[-36.49740982 353.40911865]
[-46.84896088 342.57568359]
[-54.89055252 329.92678833]
[-60.31153107 315.94757080]
[-62.90180206 301.17462158]
[-62.55997467 286.17538452]
[-59.29730606 271.52639771]
[-53.23736572 257.79107666]
[-44.61134720 245.49807739]
[-33.74924850 235.12094116]
[-21.06724167 227.05984497]
[-7.05174160 221.62620544]
[7.75926208 219.03059387]
[22.79685211 219.37460327]
[37.48303604 222.64689636]
[43.55686951 208.93162537]
[41.63581467 194.16142273]
[54.29841995 184.67622375]
[52.37736893 169.90602112]
[65.03997040 160.42082214]
[71.11380768 146.70556641]
[77.18764496 132.99029541]
[83.26147461 119.27503204]
[89.33531189 105.55976105]
[95.20426941 91.75558472]
[93.24934387 76.05562592]
[105.21888733 67.19112396]
[110.88167572 53.30109787]
[116.54446411 39.41107178]
[121.47605133 25.24493599]
[125.66306305 10.84115314]
[129.85008240 -3.56262851]
[119.33951569 -14.67457676]
[115.82532501 -29.45792198]
[120.15386200 -43.91925430]
[131.06671143 -54.20350647]
[145.56437683 -57.62156677]
[149.75138855 -72.02534485]
[153.93840027 -86.42913055]
[158.12541199 -100.83290863]
[162.20507812 -115.26746368]
[166.17716980 -129.73199463]
[169.82525635 -144.28161621]
[173.14752197 -158.90907288]
[176.46978760 -173.53652954]
[179.79203796 -188.16398621]
[183.11430359 -202.79144287]
[186.43655396 -217.41891479]
[172.65794373 -223.46426392]
[160.27256775 -232.00820923]
[149.72816467 -242.74189758]
[141.40589905 -255.27729797]
[135.60661316 -269.16128540]
[132.53994751 -283.89193726]
[132.31677246 -298.93673706]
[134.94512939 -313.75189209]
[140.33004761 -327.80175781]
[148.27682495 -340.57852173]
[158.49819946 -351.62023926]
[170.62469482 -360.52780151]
[184.21792603 -366.97921753]
[198.78651428 -370.74124146]
[213.80380249 -371.67788696]
[228.72694397 -369.75527954]
[243.01646423 -365.04293823]
[256.15582275 -357.71124268]
[267.67001343 -348.02517700]
[277.14282227 -336.33489990]
[284.23181152 -323.06301880]
[288.68069458 -308.68930054]
[290.32870483 -293.73333740]
[289.11621094 -278.73580933]
[285.08706665 -264.23883057]
[278.38693237 -250.76644897]
[269.25799561 -238.80572510]
[258.03027344 -228.78901672]
[245.10961914 -221.07839966]
[230.96313477 -215.95263672]
[216.10220337 -213.59700012]
[201.06402588 -214.09664917]
[197.74176025 -199.46919250]
[194.41949463 -184.84173584]
[191.09724426 -170.21426392]
[187.77497864 -155.58680725]
[184.45272827 -140.95935059]
[186.01232910 -137.79707336]
[186.11775208 -133.72229004]
[184.35676575 -129.42668152]
[180.64169312 -125.75989532]
[176.66960144 -111.29537201]
[177.92964172 -104.01291656]
[172.52919006 -96.64590454]
[168.34217834 -82.24211884]
[164.15516663 -67.83833313]
[159.96815491 -53.43455505]
[170.37428284 -42.77725220]
[174.07339478 -28.24547577]
[169.97500610 -13.71724224]
[159.08341980 -3.12149072]
[144.25386047 0.62438267]
[140.06684875 15.02816486]
[135.87983704 29.43194771]
[148.98301697 22.13079834]
[163.73692322 24.83675003]
[173.39627075 36.31267548]
[173.54495239 51.31193924]
[164.11495972 62.97707748]
[149.41758728 65.97494507]
[136.17227173 58.93496323]
[130.43449402 45.07385635]
[124.77169800 58.96388245]
[119.10891724 72.85391235]
[121.46887970 87.56036377]
[109.09429932 97.41837311]
[109.98127747 102.58821106]
[107.90855408 107.88699341]
[103.05057526 111.63359833]
[96.97674561 125.34886169]
[90.90290833 139.06413269]
[84.82907104 152.77940369]
[78.75524139 166.49465942]
[80.24185181 182.24586487]
[68.01368713 190.75006104]
[69.50029755 206.50126648]
[57.27213669 215.00546265]
[51.19829941 228.72073364]
[63.49160767 237.39634705]
[73.85274506 248.30021667]
[81.88484955 261.01196289]
[87.28081512 275.04202271]
[89.83499146 289.85046387]
[89.45105743 304.86788940]
[86.14565277 319.51712036]
[80.04763031 333.23559570]
[71.39308167 345.49676514]
[60.51615524 355.83050537]
[47.83618164 363.84100342]
[33.84150696 369.22195435]
[19.07066154 371.76831055]
[4.09166718 371.38406372]
[-10.51982880 368.08584595]
[-16.59366226 381.80111694]
[-22.66749573 395.51638794]
[-28.74133110 409.23165894]
[-34.81516266 422.94689941]
[-24.39557838 433.97903442]
[-19.00807953 448.12182617]
[-19.44453812 463.20898438]
[-25.60731506 476.94244385]
[-36.52889252 487.24215698]
[-50.52362442 492.56127930]
[-65.44786835 492.11831665]
[-71.52170563 505.83358765]
[-77.59553528 519.54888916]
[-83.66937256 533.26416016]
[-70.96057129 541.28314209]
[-59.55484009 551.06713867]
[-49.69529343 562.40765381]
[-41.59208679 575.06292725]
[-35.41793823 588.76324463]
[-31.30445099 603.21649170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 204]
[36 203]
[37 202]
[38 201]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[64 175]
[65 174]
[67 172]
[69 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 163]
[76 161]
[77 160]
[78 159]
[79 151]
[80 150]
[81 149]
[86 144]
[87 143]
[88 142]
[89 141]
[90 139]
[91 138]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
