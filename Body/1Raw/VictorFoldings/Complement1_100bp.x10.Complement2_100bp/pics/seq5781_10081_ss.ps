%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[142.11528015 492.20199585]
[137.99919128 506.65454102]
[131.82258606 520.35369873]
[123.71710205 533.00750732]
[113.85551453 544.34625244]
[102.44802856 554.12823486]
[89.73779297 562.14495850]
[75.99571991 568.22552490]
[61.51473236 572.24035645]
[46.60348511 574.10382080]
[31.57981873 573.77630615]
[16.76395988 571.26470947]
[2.47171164 566.62255859]
[-10.99228668 559.94879150]
[-23.34104919 551.38574219]
[-34.31136322 541.11590576]
[-43.66939163 529.35815430]
[-51.21567154 516.36303711]
[-56.78934860 502.40771484]
[-60.27162552 487.78952026]
[-61.58827209 472.82006836]
[-60.71123123 457.81845093]
[-57.65918732 443.10440063]
[-52.49720383 428.99157715]
[-45.33530045 415.78079224]
[-36.32614136 403.75363159]
[-25.66175079 393.16644287]
[-13.56944656 384.24487305]
[-0.30697286 377.17913818]
[13.84297848 372.11981201]
[28.57880020 369.17474365]
[43.58639526 368.40670776]
[58.54588318 369.83209229]
[73.13838959 373.42047119]
[78.80117798 359.53042603]
[84.46396637 345.64041138]
[84.07823181 338.25982666]
[90.31584930 331.58676147]
[96.18480682 317.78256226]
[102.05377197 303.97839355]
[104.82938385 289.23742676]
[104.38277435 274.24407959]
[103.93617249 259.25073242]
[103.48956299 244.25738525]
[102.81977844 229.27233887]
[101.92696381 214.29893494]
[101.03414917 199.32553101]
[100.14133453 184.35212708]
[99.24851227 169.37872314]
[98.02153778 154.42898560]
[96.46101379 139.51039124]
[94.90049744 124.59178162]
[93.33997345 109.67317200]
[86.85986328 123.20122528]
[75.49060822 132.98591614]
[61.14813614 137.37834167]
[46.24940109 135.63832092]
[33.30509949 128.05906677]
[24.49657822 115.91782379]
[21.30822563 101.26058960]
[24.27733421 86.55738068]
[32.90355682 74.28594208]
[45.73322678 66.51422119]
[60.60431290 64.55189514]
[75.01078033 68.72965240]
[86.52488708 78.34346008]
[93.20672607 91.77483368]
[94.54496002 76.83464813]
[95.88319397 61.89446259]
[86.11444855 52.62158585]
[83.50801849 39.60555649]
[88.79573822 27.64219475]
[99.84221649 21.00857353]
[101.40274048 6.08996916]
[99.18309784 -2.77067566]
[103.09916687 -9.03854752]
[104.88162994 -23.93226433]
[106.66410065 -38.82598114]
[97.16970062 -51.17483521]
[99.18953705 -66.25379181]
[111.02079010 -75.22914886]
[112.80326080 -90.12286377]
[114.58572388 -105.01657867]
[116.36819458 -119.91030121]
[108.73046112 -136.66578674]
[119.78878784 -150.29225159]
[121.34931183 -165.21086121]
[122.90983582 -180.12945557]
[116.65021515 -194.65969849]
[125.66960907 -206.51295471]
[127.23013306 -221.43156433]
[128.79066467 -236.35015869]
[114.34984589 -240.55761719]
[100.89246368 -247.27615356]
[88.85112000 -256.28979492]
[78.61289215 -267.30880737]
[70.50688934 -279.97894287]
[64.79369354 -293.89294434]
[61.65695572 -308.60351562]
[61.19750977 -323.63775635]
[63.43013000 -338.51239014]
[68.28304291 -352.74929810]
[75.60024261 -365.89077759]
[85.14652252 -377.51437378]
[96.61499786 -387.24649048]
[109.63701630 -394.77423096]
[123.79396057 -399.85562134]
[138.63075256 -402.32733154]
[153.67045593 -402.10989380]
[168.42959595 -399.21029663]
[182.43373108 -393.72174072]
[195.23268127 -385.82070923]
[206.41500854 -375.76110840]
[215.62127686 -363.86639404]
[222.55551147 -350.51889038]
[226.99481201 -336.14764404]
[228.79649353 -321.21466064]
[227.90260315 -306.19998169]
[224.34190369 -291.58624268]
[218.22886658 -277.84323120]
[209.75996399 -265.41271973]
[199.20745850 -254.69432068]
[186.91056824 -246.03254700]
[173.26458740 -239.70585632]
[158.70817566 -235.91763306]
[143.70925903 -234.78964233]
[142.14874268 -219.87103271]
[140.58821106 -204.95243835]
[146.95945740 -191.48927307]
[137.82844543 -178.56893921]
[136.26791382 -163.65032959]
[134.70739746 -148.73171997]
[142.07852173 -139.14042664]
[140.90051270 -126.69871521]
[131.26190186 -118.12783051]
[129.47944641 -103.23411560]
[127.69697571 -88.34040070]
[125.91451263 -73.44667816]
[135.29364014 -61.93288422]
[133.69813538 -46.80314636]
[121.55781555 -37.04351807]
[119.77535248 -22.14979935]
[117.99288177 -7.25608206]
[116.32134247 7.65049219]
[114.76081848 22.56909752]
[125.89965820 35.16929626]
[124.45047760 52.26358795]
[110.82337952 63.23269653]
[109.48514557 78.17288208]
[108.14691162 93.11306763]
[108.25857544 108.11265564]
[109.81909943 123.03125763]
[111.37962341 137.94985962]
[112.94014740 152.86846924]
[116.00763702 157.09191895]
[117.04466248 161.61717224]
[116.27626038 165.62023926]
[114.22192383 168.48590088]
[115.11473846 183.45932007]
[116.00755310 198.43272400]
[116.90036774 213.40612793]
[117.79318237 228.37953186]
[121.10907745 234.09934998]
[121.04778290 239.78207397]
[118.48291779 243.81077576]
[118.92951965 258.80413818]
[119.37612915 273.79748535]
[119.82273102 288.79083252]
[126.06342316 275.15066528]
[134.88845825 263.02142334]
[145.94633484 252.88616943]
[158.79663086 245.14862061]
[172.92752075 240.11692810]
[187.77618408 237.99151611]
[202.75119019 238.85704041]
[217.25610352 242.67904663]
[230.71318054 249.30526733]
[242.58645630 258.47180176]
[252.40299988 269.81356812]
[259.77185059 282.87878418]
[264.39947510 297.14712524]
[266.10156250 312.05023193]
[264.81033325 326.99453735]
[260.57723999 341.38485718]
[253.57083130 354.64797974]
[244.07022095 366.25564575]
[232.45376587 375.74554443]
[219.18418884 382.73968506]
[204.78997803 386.95950317]
[189.84446716 388.23693848]
[174.94293213 386.52105713]
[160.67889404 381.88027954]
[147.62046814 374.49935913]
[136.28778076 364.67233276]
[127.13221741 352.79061890]
[120.51842499 339.32742310]
[116.70982361 324.81900024]
[115.85794830 309.84735107]
[109.98899078 323.65151978]
[104.12002563 337.45571899]
[98.35399628 351.30319214]
[92.69120789 365.19323730]
[87.02841949 379.08325195]
[99.97033691 386.72030640]
[111.66232300 396.16040039]
[121.85514832 407.20233154]
[130.33155823 419.61071777]
[136.91087341 433.12109375]
[141.45286560 447.44549561]
[143.86071777 462.27856445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 203]
[35 202]
[36 201]
[38 200]
[39 199]
[40 198]
[41 168]
[42 167]
[43 166]
[44 165]
[45 162]
[46 161]
[47 160]
[48 159]
[49 158]
[50 154]
[51 153]
[52 152]
[53 151]
[67 150]
[68 149]
[69 148]
[73 145]
[74 144]
[76 143]
[77 142]
[78 141]
[81 138]
[82 137]
[83 136]
[84 135]
[86 132]
[87 131]
[88 130]
[90 128]
[91 127]
[92 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
