%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[115.73999786 751.86737061]
[101.18131256 748.23272705]
[86.89467621 743.64385986]
[72.94255829 738.12084961]
[59.38597107 731.68774414]
[46.28419113 724.37274170]
[33.69450760 716.20788574]
[21.67197609 707.22875977]
[10.26916790 697.47467041]
[-0.46405548 686.98834229]
[-10.48075962 675.81555176]
[-19.73714447 664.00518799]
[-28.19273376 651.60882568]
[-35.81055069 638.68078613]
[-42.55728912 625.27752686]
[-48.40344238 611.45770264]
[-53.32344818 597.28167725]
[-57.29579544 582.81152344]
[-60.30310822 568.11041260]
[-62.33223724 553.24273682]
[-63.37431335 538.27343750]
[-63.42478180 523.26800537]
[-62.48341370 508.29202271]
[-60.55432892 493.41101074]
[-57.64596558 478.69003296]
[-53.77103806 464.19348145]
[-48.94649506 449.98468018]
[-43.19342804 436.12582397]
[-36.53699493 422.67749023]
[-29.00630379 409.69848633]
[-20.63428497 397.24557495]
[-11.45754814 385.37322998]
[-1.51622045 374.13330078]
[9.14622784 363.57498169]
[20.48317146 353.74444580]
[32.44503403 344.68469238]
[44.97951508 336.43527222]
[58.03179932 329.03234863]
[71.54481506 322.50820923]
[85.45946503 316.89144897]
[99.71491241 312.20657349]
[114.24881744 308.47412109]
[128.99763489 305.71038818]
[127.21516418 290.81665039]
[125.43269348 275.92294312]
[123.65023041 261.02923584]
[121.42511749 246.19517517]
[118.75931549 231.43395996]
[116.09352112 216.67274475]
[113.42772675 201.91152954]
[110.76193237 187.15031433]
[108.09613800 172.38909912]
[105.43034363 157.62788391]
[102.76454926 142.86665344]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[71.64228821 69.77405548]
[63.58705521 56.85249710]
[64.67225647 41.84295273]
[74.27267456 30.48646164]
[70.51637268 15.96440125]
[66.76007080 1.44234240]
[63.69545364 16.12594223]
[57.77603149 29.90855598]
[49.23757935 42.24123001]
[38.42017746 52.63275528]
[25.75467682 60.66924286]
[11.74554443 66.03060150]
[-3.04924536 68.50329590]
[-18.04042053 67.98883057]
[-32.63088608 64.50769806]
[-46.23951721 58.19855881]
[-58.32427597 49.31269836]
[-68.40383911 38.20403290]
[-76.07673645 25.31502151]
[-81.03736877 11.15902805]
[-83.08814240 -3.70012069]
[-82.14739227 -18.67059135]
[-78.25257111 -33.15611267]
[-71.55881500 -46.57973862]
[-62.33273697 -58.40680313]
[-50.94180679 -68.16624451]
[-37.83971786 -75.46934509]
[-23.54832458 -80.02522278]
[-8.63684559 -81.65242767]
[6.30080080 -80.28614044]
[20.66965294 -75.98078918]
[33.89740372 -68.90783691]
[45.45719910 -59.34901428]
[54.88861847 -47.68503571]
[61.81600571 -34.38047791]
[65.96269989 -19.96936417]
[68.62850189 -34.73057938]
[71.29429626 -49.49179840]
[73.96009064 -64.25301361]
[76.62588501 -79.01422882]
[62.85942078 -85.15816498]
[50.96375275 -94.41864777]
[41.63048553 -106.25729370]
[35.40223694 -119.98581696]
[32.64111328 -134.80606079]
[33.50764465 -149.85639954]
[37.95144272 -164.26181030]
[45.71416092 -177.18479919]
[56.34447861 -187.87403870]
[69.22436523 -195.70806885]
[83.60500336 -200.23141479]
[98.65032196 -201.18110657]
[113.48559570 -198.50193787]
[127.24833679 -192.34967041]
[139.13838196 -183.08197021]
[148.46447754 -171.23767090]
[154.68440247 -157.50537109]
[157.43653870 -142.68345642]
[156.56088257 -127.63365173]
[152.10835266 -113.23092651]
[144.33779907 -100.31264496]
[133.70100403 -89.62985992]
[120.81636810 -81.80364227]
[106.43299103 -77.28900909]
[91.38710022 -76.34843445]
[88.72130585 -61.58721924]
[86.05551147 -46.82600403]
[83.38971710 -32.06478500]
[80.72392273 -17.30356789]
[81.28213501 -2.31395841]
[85.03842926 12.20810127]
[88.79473114 26.73015976]
[102.69762421 32.00724792]
[110.92456818 44.60809326]
[110.14506531 59.81486130]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[123.81906891 113.05591583]
[138.81481934 113.41333008]
[148.00625610 125.26733398]
[144.61779785 139.87960815]
[131.14730835 146.47851562]
[117.52576447 140.20086670]
[120.19155884 154.96208191]
[122.85735321 169.72329712]
[125.52314758 184.48451233]
[128.18894958 199.24572754]
[130.85473633 214.00694275]
[133.52053833 228.76817322]
[136.18632507 243.52938843]
[139.10736084 246.74209595]
[140.69450378 250.35395813]
[140.98605347 253.89660645]
[140.16851807 256.96228027]
[138.54394531 259.24676514]
[140.32641602 274.14047241]
[142.10888672 289.03417969]
[143.89134216 303.92791748]
[158.87580872 303.13320923]
[173.88003540 303.33056641]
[188.83840942 304.51916504]
[203.68553162 306.69375610]
[218.35646057 309.84484863]
[232.78706360 313.95864868]
[246.91421509 319.01721191]
[260.67617798 324.99838257]
[274.01272583 331.87600708]
[286.86560059 339.62002563]
[299.17852783 348.19659424]
[310.89773560 357.56814575]
[321.97192383 367.69375610]
[332.35269165 378.52914429]
[341.99462891 390.02688599]
[350.85562134 402.13674927]
[358.89688110 414.80575562]
[366.08325195 427.97854614]
[372.38330078 441.59744263]
[377.76950073 455.60296631]
[382.21826172 469.93383789]
[385.71020508 484.52740479]
[388.22998047 499.31985474]
[389.76660156 514.24652100]
[390.31335449 529.24206543]
[389.86782837 544.24096680]
[388.43200684 559.17761230]
[386.01214600 573.98675537]
[382.61880493 588.60357666]
[378.26687622 602.96417236]
[372.97534180 617.00567627]
[366.76736450 630.66687012]
[359.67010498 643.88781738]
[351.71453857 656.61083984]
[342.93551636 668.78021240]
[333.37139893 680.34283447]
[323.06399536 691.24798584]
[312.05841064 701.44812012]
[300.40274048 710.89862061]
[288.14797974 719.55810547]
[275.34768677 727.38867188]
[262.05786133 734.35620117]
[248.33660889 740.43011475]
[234.24391174 745.58392334]
[219.84141541 749.79504395]
[205.19209290 753.04510498]
[190.35998535 755.31988525]
[175.40997314 756.60943604]
[160.40742493 756.90808105]
[145.41793823 756.21453857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 160]
[44 159]
[45 158]
[46 157]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[55 139]
[56 138]
[58 136]
[59 135]
[63 131]
[64 130]
[65 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
