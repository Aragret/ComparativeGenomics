%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[100.01817322 431.15573120]
[85.09467316 429.18750000]
[70.87297058 424.25512695]
[57.93543625 416.56063843]
[46.81185913 406.41909790]
[37.95774078 394.24578857]
[31.73565102 380.53921509]
[28.40037918 365.86062622]
[28.08850288 350.81112671]
[30.81279564 336.00695801]
[36.46169662 322.05438232]
[44.80389023 309.52468872]
[55.49776459 298.93103027]
[68.10541534 290.70715332]
[82.11056519 285.18984985]
[96.93972015 282.60504150]
[97.38632202 267.61169434]
[97.83293152 252.61834717]
[88.69424438 237.63664246]
[98.50205231 222.05177307]
[98.72537994 207.05343628]
[98.94870758 192.05509949]
[91.40175629 179.21403503]
[99.34366608 165.53059387]
[99.56699371 150.53225708]
[98.45134735 135.57380676]
[96.00561523 120.77452850]
[93.55989075 105.97525787]
[91.24151611 103.99671173]
[89.59181976 101.13087463]
[88.94081879 97.62378693]
[89.52302551 93.83996582]
[91.43653870 90.22452545]
[82.30552673 77.30419159]
[88.67676544 63.84103012]
[77.51764679 49.19330978]
[85.28328705 33.45603561]
[83.50082397 18.56232071]
[81.71836090 3.66860271]
[79.93589020 -11.22511482]
[78.15342712 -26.11883163]
[76.37095642 -41.01255035]
[62.35061264 -47.12623215]
[53.33238983 -59.35604858]
[51.65764618 -74.35810089]
[57.67664337 -88.09228516]
[69.68117523 -96.91026306]
[67.89870453 -111.80398560]
[66.11624146 -126.69770050]
[64.33377838 -141.59141541]
[49.88040543 -143.21104431]
[36.15933609 -148.01072693]
[23.86059189 -155.74551392]
[13.60187340 -166.02299500]
[5.89753914 -178.32310486]
[1.13281381 -192.02452087]
[-0.45547017 -206.43600464]
[1.20935678 -220.83126831]
[6.04010773 -234.48564148]
[13.79029751 -246.71243286]
[24.06671906 -256.89761353]
[36.34938812 -264.53051758]
[50.01786423 -269.22952271]
[48.45734024 -284.14813232]
[46.89681625 -299.06671143]
[45.33629227 -313.98532104]
[43.77577209 -328.90393066]
[42.21524811 -343.82254028]
[40.65472412 -358.74114990]
[25.64440346 -358.58386230]
[10.68531132 -359.83285522]
[-4.09108973 -362.47717285]
[-18.55493927 -366.49359131]
[-32.57912827 -371.84677124]
[-46.04040527 -378.48971558]
[-58.82047272 -386.36398315]
[-70.80701447 -395.40042114]
[-81.89469147 -405.51962280]
[-91.98606110 -416.63259888]
[-100.99243927 -428.64175415]
[-108.83467865 -441.44152832]
[-115.44385529 -454.91940308]
[-120.76188660 -468.95697021]
[-124.74203491 -483.43081665]
[-127.34932709 -498.21380615]
[-128.56085205 -513.17596436]
[-128.36595154 -528.18585205]
[-126.76634216 -543.11151123]
[-123.77608490 -557.82183838]
[-119.42146301 -572.18750000]
[-113.74073792 -586.08221436]
[-106.78383636 -599.38397217]
[-98.61189270 -611.97576904]
[-89.29673004 -623.74700928]
[-78.92021179 -634.59423828]
[-67.57353210 -644.42211914]
[-55.35639572 -653.14428711]
[-42.37617874 -660.68408203]
[-28.74695587 -666.97521973]
[-14.58849907 -671.96246338]
[-0.02523853 -675.60198975]
[14.81484032 -677.86175537]
[29.80132103 -678.72192383]
[44.80249786 -678.17492676]
[59.68653488 -676.22558594]
[74.32263184 -672.89105225]
[88.58216095 -668.20062256]
[102.33980560 -662.19549561]
[115.47466278 -654.92840576]
[127.87129974 -646.46331787]
[139.42077637 -636.87457275]
[150.02157593 -626.24639893]
[159.58055115 -614.67230225]
[168.01370239 -602.25390625]
[175.24690247 -589.10040283]
[181.21658325 -575.32733154]
[185.87028503 -561.05572510]
[189.16712952 -546.41113281]
[191.07810974 -531.52209473]
[191.58645630 -516.51959229]
[190.68769836 -501.53533936]
[188.38972473 -486.70114136]
[184.71273804 -472.14730835]
[179.68905640 -458.00173950]
[173.36280823 -444.38876343]
[165.78961182 -431.42800903]
[157.03601074 -419.23336792]
[147.17893982 -407.91204834]
[136.30503845 -397.56347656]
[124.50983429 -388.27868652]
[111.89701843 -380.13919067]
[98.57741547 -373.21655273]
[84.66809082 -367.57165527]
[70.29127502 -363.25402832]
[55.57332993 -360.30166626]
[57.13385391 -345.38305664]
[58.69437408 -330.46444702]
[60.25489807 -315.54586792]
[61.81542206 -300.62725830]
[63.37594604 -285.70864868]
[64.93647003 -270.79003906]
[80.29821777 -268.76937866]
[94.74092102 -263.13507080]
[107.42712402 -254.20938110]
[117.62014008 -242.50550842]
[124.72686005 -228.69812012]
[128.33224487 -213.58447266]
[128.22354126 -198.03840637]
[124.40288544 -182.95974731]
[117.08737946 -169.22227478]
[106.69675446 -157.62304688]
[93.82932281 -148.83625793]
[79.22749329 -143.37388611]
[81.00995636 -128.48016357]
[82.79242706 -113.58644867]
[84.57489014 -98.69273376]
[98.32124329 -92.95658875]
[107.41122437 -81.03063965]
[109.32393646 -66.05706787]
[103.44637299 -52.04453278]
[91.26467896 -42.79501343]
[93.04714203 -27.90129852]
[94.82960510 -13.00758076]
[96.61207581 1.88613689]
[98.39453888 16.77985382]
[100.17700958 31.67357063]
[109.48937988 39.39407730]
[111.09627533 51.78769302]
[103.59536743 62.28050613]
[112.61476135 74.13376617]
[106.35514832 88.66400146]
[108.35916138 103.52953339]
[110.80488586 118.32880402]
[113.25061798 133.12806702]
[119.21546173 119.36505890]
[130.50434875 109.48775482]
[144.93754578 105.40329742]
[159.72824097 107.90035248]
[172.02058411 116.49676514]
[179.44111633 129.53269958]
[180.55703735 144.49113464]
[175.15289307 158.48382568]
[164.27214050 168.80899048]
[150.01567078 173.47302246]
[135.13619995 171.57534790]
[122.50670624 163.48240662]
[114.56533051 150.75558472]
[114.34200287 165.75392151]
[121.87297821 179.66775513]
[113.94705200 192.27842712]
[113.72371674 207.27676392]
[113.50038910 222.27510071]
[121.90750885 232.05686951]
[121.41272736 244.54443359]
[112.82627869 253.06495667]
[112.37967682 268.05831909]
[111.93306732 283.05166626]
[126.58207703 286.51452637]
[140.23399353 292.85565186]
[152.32980347 301.81536865]
[162.37417603 313.02676392]
[169.95579529 326.03076172]
[174.76420593 340.29483032]
[176.60250854 355.23489380]
[175.39543152 370.23916626]
[171.19238281 384.69320679]
[164.16549683 398.00512695]
[154.60250854 409.62985229]
[142.89501953 419.09133911]
[129.52243042 426.00213623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 197]
[17 196]
[18 195]
[20 192]
[21 191]
[22 190]
[24 188]
[25 187]
[26 174]
[27 173]
[28 172]
[33 171]
[35 169]
[37 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[47 156]
[48 155]
[49 154]
[50 153]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
