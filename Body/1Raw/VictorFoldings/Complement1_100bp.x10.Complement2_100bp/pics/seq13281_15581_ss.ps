%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[116.08712769 862.39508057]
[101.57218933 858.59643555]
[87.28635406 854.01086426]
[73.27224731 848.65197754]
[59.57170105 842.53576660]
[46.22560120 835.68054199]
[33.27377319 828.10668945]
[20.75487900 819.83685303]
[8.70627403 810.89569092]
[-2.83608174 801.30993652]
[-13.83774185 791.10815430]
[-24.26587296 780.32080078]
[-34.08935165 768.98004150]
[-43.27886581 757.11981201]
[-51.80698395 744.77539062]
[-59.64825439 731.98370361]
[-66.77928162 718.78289795]
[-73.17877960 705.21240234]
[-78.82765198 691.31262207]
[-83.70903778 677.12512207]
[-87.80837250 662.69226074]
[-91.11341858 648.05700684]
[-93.61431122 633.26318359]
[-95.30358887 618.35479736]
[-96.17620850 603.37646484]
[-96.22957611 588.37280273]
[-95.46351624 573.38854980]
[-93.88032532 558.46856689]
[-91.48471832 543.65728760]
[-88.28385925 528.99896240]
[-84.28729248 514.53723145]
[-79.50695038 500.31539917]
[-73.95709229 486.37582397]
[-67.65428162 472.76010132]
[-60.61733246 459.50891113]
[-52.86724472 446.66177368]
[-44.42715073 434.25701904]
[-35.32223129 422.33169556]
[-25.57966805 410.92138672]
[-15.22853184 400.06011963]
[-4.29971552 389.78036499]
[7.17416430 380.11273193]
[19.15886497 371.08612061]
[31.61861992 362.72744751]
[44.51624298 355.06167603]
[57.81324768 348.11166382]
[71.46994019 341.89816284]
[85.44557190 336.43969727]
[99.69843292 331.75259399]
[114.18598175 327.85083008]
[111.08187103 313.17553711]
[107.97776031 298.50024414]
[104.87364960 283.82495117]
[101.76953888 269.14962769]
[98.66542816 254.47433472]
[94.20578766 248.58082581]
[95.62606812 239.55749512]
[90.07363892 253.49200439]
[79.08384705 263.70104980]
[64.77865601 268.21340942]
[49.92016983 266.15783691]
[37.37733078 257.93121338]
[29.57196236 245.12200928]
[28.01115990 230.20343018]
[32.99629211 216.05604553]
[43.56480408 205.41148376]
[57.67608643 200.32505798]
[72.60546875 201.77886963]
[85.47032166 209.49220276]
[93.78710175 221.97694397]
[93.56377411 206.97860718]
[93.34044647 191.98027039]
[85.41451263 179.36959839]
[92.94548798 165.45576477]
[92.72216034 150.45742798]
[89.47942352 143.81616211]
[92.60883331 135.23451233]
[92.60883331 120.23451233]
[92.60883331 105.23451233]
[90.29588318 102.14863586]
[89.35436249 98.05822754]
[90.20242310 93.59865570]
[92.95877075 89.56846619]
[85.84539795 75.43656921]
[94.14328003 63.06748199]
[94.81306458 48.08244324]
[95.48284912 33.09740448]
[88.36947632 18.96550751]
[96.66736603 6.59641886]
[89.55399323 -7.53547764]
[97.85187531 -19.90456581]
[95.14904022 -25.93832207]
[95.80120087 -31.58382607]
[98.77127838 -35.32383728]
[99.88692474 -50.28228760]
[101.00257874 -65.24074554]
[94.31311798 -79.57816315]
[102.97559357 -91.69470978]
[88.89685059 -97.19746399]
[77.06658173 -106.60683441]
[68.53674316 -119.08614349]
[64.06578064 -133.52574158]
[64.05126953 -148.64166260]
[68.49449158 -163.08982849]
[77.00035095 -175.58549500]
[88.81252289 -185.01756287]
[102.88067627 -190.54734802]
[117.95388031 -191.68313599]
[132.69183350 -188.32392883]
[145.78404236 -180.76844788]
[156.06636047 -169.68849182]
[162.62449646 -156.06930542]
[164.87530518 -141.12188721]
[162.61863708 -126.17536163]
[156.05516052 -112.55874634]
[145.76849365 -101.48283386]
[132.67332458 -93.93247986]
[117.93405151 -90.57906342]
[124.70330811 -77.31156921]
[115.96102905 -64.12509155]
[114.84538269 -49.16664124]
[113.72972870 -34.20818710]
[112.83691406 -19.23478127]
[119.99819946 -6.17471504]
[111.65240479 7.26620388]
[118.81368256 20.32627106]
[110.46788788 33.76718903]
[109.79810333 48.75222778]
[109.12831879 63.73726654]
[116.28960419 76.79733276]
[107.94380951 90.23825073]
[107.60883331 105.23451233]
[107.60883331 120.23451233]
[107.60883331 135.23451233]
[107.72049713 150.23410034]
[107.94382477 165.23243713]
[115.88573456 178.91587830]
[108.33878326 191.75694275]
[108.56211090 206.75527954]
[108.78543854 221.75361633]
[110.34596252 236.67221069]
[113.34073639 251.37022400]
[116.44484711 266.04553223]
[119.54895020 280.72082520]
[122.65306091 295.39611816]
[125.75717163 310.07144165]
[128.86128235 324.74673462]
[143.68789673 322.44799805]
[158.61793518 320.96234131]
[173.60681152 320.29421997]
[188.60981750 320.44564819]
[203.58215332 321.41613770]
[218.47915649 323.20281982]
[233.25636292 325.80035400]
[247.86965942 329.20098877]
[262.27545166 333.39456177]
[276.43072510 338.36856079]
[290.29327393 344.10815430]
[303.82168579 350.59622192]
[316.97561646 357.81335449]
[329.71578979 365.73806763]
[342.00418091 374.34667969]
[353.80410767 383.61352539]
[365.08041382 393.51089478]
[375.79937744 404.00930786]
[385.92904663 415.07742310]
[395.43914795 426.68218994]
[404.30136108 438.78897095]
[412.48919678 451.36163330]
[419.97824097 464.36270142]
[426.74612427 477.75329590]
[432.77264404 491.49353027]
[438.03982544 505.54235840]
[442.53195190 519.85784912]
[446.23562622 534.39733887]
[449.13980103 549.11730957]
[451.23574829 563.97399902]
[452.51727295 578.92291260]
[452.98056030 593.91949463]
[452.62417603 608.91906738]
[451.44921875 623.87670898]
[449.45916748 638.74792480]
[446.66000366 653.48828125]
[443.06005859 668.05377197]
[438.67004395 682.40087891]
[433.50311279 696.48693848]
[427.57467651 710.26971436]
[420.90237427 723.70825195]
[413.50619507 736.76232910]
[405.40817261 749.39306641]
[396.63247681 761.56268311]
[387.20529175 773.23492432]
[377.15478516 784.37493896]
[366.51089478 794.94946289]
[355.30545044 804.92700195]
[343.57183838 814.27764893]
[331.34509277 822.97363281]
[318.66174316 830.98895264]
[305.55957031 838.29968262]
[292.07775879 844.88397217]
[278.25646973 850.72222900]
[264.13699341 855.79699707]
[249.76145935 860.09307861]
[235.17276001 863.59777832]
[220.41444397 866.30053711]
[205.53054810 868.19335938]
[190.56550598 869.27056885]
[175.56396484 869.52886963]
[160.57070923 868.96759033]
[145.63046265 867.58837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[57 141]
[70 140]
[71 139]
[72 138]
[74 136]
[75 135]
[77 134]
[78 133]
[79 132]
[83 131]
[85 129]
[86 128]
[87 127]
[89 125]
[91 123]
[94 122]
[95 121]
[96 120]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
