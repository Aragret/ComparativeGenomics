%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[-9.33394623 498.85513306]
[-5.87602663 513.49890137]
[-5.25221252 528.53240967]
[-7.48505402 543.41229248]
[-12.49383450 557.60064697]
[-20.09749222 570.58453369]
[-30.02115631 581.89459229]
[-41.90609360 591.12194824]
[-55.32267380 597.93310547]
[-69.78588867 602.08184814]
[-84.77291107 603.41815186]
[-99.74196625 601.89367676]
[-114.15193176 597.56359863]
[-127.48189545 590.58447266]
[-139.24998474 581.20849609]
[-149.03079224 569.77471924]
[-156.47076416 556.69635010]
[-161.30091858 542.44622803]
[-163.34667969 527.53942871]
[-162.53407288 512.51495361]
[-158.89248657 497.91577148]
[-152.55354309 484.26974487]
[-143.74641418 472.07012939]
[-132.78945923 461.75790405]
[-120.07877350 453.70590210]
[-106.07382965 448.20516968]
[-91.28090668 445.45452881]
[-76.23475647 445.55349731]
[-61.47928238 448.49841309]
[-55.81649780 434.60836792]
[-50.15370941 420.71835327]
[-44.49092484 406.82833862]
[-44.87665558 399.44775391]
[-38.63904190 392.77465820]
[-32.77008057 378.97048950]
[-44.62476349 370.62026978]
[-54.48257828 359.97793579]
[-61.90858078 347.50930786]
[-66.57434845 333.76089478]
[-68.27250671 319.33587646]
[-66.92592621 304.86773682]
[-62.59126282 290.99227905]
[-55.45652390 278.31988525]
[-45.83295822 267.40853882]
[-34.14146805 258.73928833]
[-20.89418221 252.69500732]
[-6.67205095 249.54354858]
[7.90065336 249.42585754]
[22.18372536 252.34962463]
[28.25755882 238.63435364]
[34.33139420 224.91908264]
[30.26794243 213.52545166]
[35.21590805 202.04933167]
[47.02360153 196.85884094]
[53.30096054 183.23551941]
[51.60002518 168.43835449]
[64.40245056 159.14273071]
[70.67980957 145.51942444]
[76.95716858 131.89610291]
[83.23453522 118.27278900]
[89.51189423 104.64947510]
[76.40616608 111.94603729]
[61.40677261 111.81101990]
[48.43452072 104.27970123]
[40.88032532 91.32076263]
[40.71883774 76.32163239]
[47.99226379 63.20304871]
[60.79935455 55.39418030]
[75.79235840 54.93624115]
[89.05215454 61.94894028]
[97.11264801 74.59917450]
[97.86703491 89.57933044]
[106.09584808 77.03793335]
[114.32465363 64.49652863]
[122.55345917 51.95513153]
[130.78227234 39.41373062]
[139.01107788 26.87233162]
[147.05224609 14.20980549]
[154.90400696 1.42896318]
[162.75576782 -11.35187912]
[153.90348816 -23.67717552]
[150.45376587 -38.41293335]
[152.90197754 -53.30655289]
[160.84431458 -66.09353638]
[173.04402161 -74.84178162]
[187.62393188 -78.24349213]
[202.35520935 -75.81063080]
[202.98629761 -91.61924744]
[216.24101257 -98.41350555]
[224.09277344 -111.19434357]
[224.72386169 -127.00296021]
[237.97857666 -133.79722595]
[245.83032227 -146.57806396]
[253.10356140 -159.69676208]
[259.78375244 -173.12713623]
[266.46395874 -186.55751038]
[273.14413452 -199.98788452]
[279.82434082 -213.41825867]
[286.50451660 -226.84863281]
[293.18472290 -240.27900696]
[280.84667969 -248.85748291]
[269.88919067 -259.14105225]
[260.54586792 -270.91049194]
[253.01582336 -283.91497803]
[247.45957947 -297.87728882]
[243.99557495 -312.49981689]
[242.69761658 -327.47088623]
[243.59341431 -342.47140503]
[246.66383362 -357.18161011]
[251.84344482 -371.28799438]
[259.02185059 -384.48980713]
[268.04602051 -396.50573730]
[278.72363281 -407.07958984]
[290.82705688 -415.98602295]
[304.09835815 -423.03518677]
[318.25460815 -428.07684326]
[332.99411011 -431.00347900]
[348.00265503 -431.75277710]
[362.96035767 -430.30871582]
[377.54837036 -426.70211792]
[391.45574951 -421.00982666]
[404.38610840 -413.35317993]
[416.06375122 -403.89538574]
[426.23986816 -392.83801270]
[434.69744873 -380.41680908]
[441.25631714 -366.89648438]
[445.77661133 -352.56521606]
[448.16198730 -337.72851562]
[448.36160278 -322.70260620]
[446.37121582 -307.80776978]
[442.23324585 -293.36148071]
[436.03588867 -279.67166138]
[427.91125488 -267.03015137]
[418.03250122 -255.70635986]
[406.61022949 -245.94168091]
[393.88784790 -237.94421387]
[380.13659668 -231.88447571]
[365.64953613 -227.89158630]
[350.73550415 -226.05067444]
[335.71234131 -226.40098572]
[320.90029907 -228.93502808]
[306.61511230 -233.59881592]
[299.93490601 -220.16844177]
[293.25469971 -206.73806763]
[286.57452393 -193.30769348]
[279.89431763 -179.87731934]
[273.21411133 -166.44692993]
[266.53393555 -153.01655579]
[281.06179810 -156.75038147]
[294.04437256 -149.23689270]
[298.04464722 -134.78013611]
[290.77111816 -121.66161346]
[276.39035034 -117.39620972]
[263.14031982 -124.42733765]
[258.61117554 -138.72630310]
[250.75941467 -125.94546509]
[250.68992615 -111.05101776]
[236.87361145 -103.34259033]
[229.02185059 -90.56174469]
[228.95237732 -75.66730499]
[215.13606262 -67.95887756]
[223.96473694 -55.91796112]
[227.52046204 -41.37484360]
[225.23114014 -26.53827477]
[217.41484070 -13.67385960]
[205.23605347 -4.75810671]
[190.53221130 -1.17476130]
[175.53660583 -3.50012374]
[167.68484497 9.28071880]
[159.83309937 22.06156158]
[160.05181885 26.83243179]
[157.27584839 31.79135704]
[151.55247498 35.10113907]
[143.32366943 47.64253998]
[135.09486389 60.18394089]
[126.86605072 72.72534180]
[118.63724518 85.26673889]
[110.40843964 97.80814362]
[103.13520813 110.92683411]
[96.85784912 124.55014801]
[90.58049011 138.17346191]
[84.30312347 151.79678345]
[78.02576447 165.42010498]
[79.27770233 181.19169617]
[66.92427826 189.51287842]
[60.64691544 203.13619995]
[62.76033401 221.42868042]
[48.04665756 230.99291992]
[41.97282410 244.70819092]
[35.89899063 258.42346191]
[48.37247467 267.68777466]
[58.47367096 279.48458862]
[65.70088196 293.22323608]
[69.69619751 308.21667480]
[70.26324463 323.71600342]
[67.37681580 338.94763184]
[61.18399048 353.15209961]
[51.99662018 365.62185669]
[40.27564621 375.73645020]
[26.60797119 382.99356079]
[11.67705631 387.03375244]
[-3.77123356 387.65841675]
[-18.96590233 384.83944702]
[-24.83486366 398.64361572]
[-30.60089684 412.49111938]
[-36.26368332 426.38113403]
[-41.92647171 440.27117920]
[-47.58925629 454.16119385]
[-34.98071289 462.37222290]
[-24.15415955 472.82125854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 208]
[30 207]
[31 206]
[32 205]
[34 204]
[35 203]
[49 190]
[50 189]
[51 188]
[54 186]
[55 185]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[72 178]
[73 177]
[74 176]
[75 175]
[76 174]
[77 173]
[78 170]
[79 169]
[80 168]
[87 161]
[89 159]
[90 158]
[92 156]
[93 155]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
