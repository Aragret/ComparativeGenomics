%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[171.64866638 720.28192139]
[165.08265686 706.78082275]
[159.91622925 692.68475342]
[156.20240784 678.13836670]
[153.97930908 663.29083252]
[153.26972961 648.29455566]
[154.08096313 633.30346680]
[156.40466309 618.47137451]
[160.21702576 603.95043945]
[165.47888184 589.88977051]
[172.13627625 576.43353271]
[180.12086487 563.71984863]
[189.35072327 551.87921143]
[199.73114014 541.03308105]
[211.15560913 531.29284668]
[223.50686646 522.75836182]
[236.65818787 515.51727295]
[230.78923035 501.71307373]
[224.92025757 487.90890503]
[219.05130005 474.10470581]
[204.48165894 464.32247925]
[206.86718750 446.06347656]
[200.79335022 432.34820557]
[194.71951294 418.63293457]
[188.64569092 404.91769409]
[182.57185364 391.20242310]
[178.11451721 405.52484131]
[166.15924072 414.58416748]
[151.16505432 415.00149536]
[138.72439575 406.62115479]
[133.47735596 392.56878662]
[137.38092041 378.08563232]
[148.97917175 368.57351685]
[163.94624329 367.58020020]
[176.70054626 375.47711182]
[172.29956055 361.13726807]
[167.89855957 346.79742432]
[163.49755859 332.45755005]
[159.09655762 318.11770630]
[144.21295166 319.82608032]
[129.26489258 318.77011108]
[114.76155853 314.98428345]
[101.19725800 308.59613037]
[89.03457642 299.82186890]
[78.68859863 288.95913696]
[70.51273346 276.37689209]
[64.78665924 262.50280762]
[61.70674133 247.80889893]
[61.37930298 232.79525757]
[63.81696320 217.97315979]
[68.93814850 203.84764099]
[76.56983185 190.90029907]
[86.45335388 179.57279968]
[98.25322723 170.25189209]
[111.56848145 163.25616455]
[107.16748047 148.91632080]
[93.92947388 142.18647766]
[89.26195526 127.70653534]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[71.53894806 33.20785141]
[59.93184662 22.45676994]
[63.37908936 7.96657372]
[58.76507950 -6.30615950]
[44.97418976 -13.54832935]
[40.49824524 -28.08864021]
[47.48753738 -41.19151688]
[42.87352753 -55.46424866]
[38.25952148 -69.73698425]
[33.64551163 -84.00971985]
[22.03840637 -94.76079559]
[25.48565292 -109.25099182]
[20.87164307 -123.52372742]
[5.98834896 -121.37999725]
[-9.04314995 -121.78256226]
[-23.79036713 -124.71984100]
[-37.82899475 -130.10731506]
[-50.75511551 -137.78997803]
[-62.19681931 -147.54679871]
[-71.82490540 -159.09703064]
[-79.36235046 -172.10836792]
[-84.59229279 -186.20645142]
[-87.36425781 -200.98562622]
[-87.59848022 -216.02069092]
[-85.28823090 -230.87905884]
[-80.49997711 -245.13319397]
[-73.37148285 -258.37301636]
[-64.10785675 -270.21755981]
[-52.97562790 -280.32604980]
[-40.29508972 -288.40762329]
[-26.43109322 -294.22979736]
[-11.78252697 -297.62500000]
[3.22913790 -298.49560547]
[18.17198563 -296.81652832]
[32.61608124 -292.63607788]
[46.14583969 -286.07455444]
[58.37198257 -277.32070923]
[68.94273376 -266.62646484]
[77.55396271 -254.29946899]
[83.95790100 -240.69441223]
[87.97029114 -226.20272827]
[89.47570038 -211.24139404]
[88.43080139 -196.24085999]
[84.86566162 -181.63270569]
[78.88286591 -167.83728027]
[70.65454102 -155.25146484]
[60.41743469 -144.23739624]
[48.46609497 -135.11196899]
[35.14437485 -128.13774109]
[39.75838470 -113.86500549]
[51.03546524 -104.13480377]
[47.91824341 -88.62372589]
[52.53225327 -74.35099030]
[57.14626312 -60.07825851]
[61.76027298 -45.80552673]
[75.09701538 -39.27353287]
[79.97959137 -24.86468124]
[73.03781128 -10.92016888]
[77.65182495 3.35256457]
[88.92890167 13.08276367]
[85.81168365 28.59383965]
[90.86025238 33.99140549]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[124.43196869 116.91261292]
[128.69093323 131.51795959]
[121.50733185 144.51531982]
[125.90832520 158.85516357]
[140.85556030 157.17694092]
[155.85267639 158.27366638]
[170.38902283 162.10653687]
[183.96990967 168.54360962]
[196.13345337 177.36430359]
[206.46624756 188.26705933]
[214.61746216 200.87954712]
[220.31071472 214.77140808]
[223.35346985 229.46899414]
[223.64355469 244.47145081]
[221.17251587 259.26782227]
[216.02598572 273.35440063]
[208.38061523 286.25195312]
[198.49803162 297.52197266]
[186.71589661 306.78164673]
[173.43640137 313.71670532]
[177.83740234 328.05657959]
[182.23840332 342.39642334]
[186.63940430 356.73626709]
[191.04040527 371.07611084]
[196.28712463 385.12857056]
[202.36094666 398.84384155]
[208.43478394 412.55911255]
[214.50862122 426.27438354]
[220.58245850 439.98965454]
[232.31155396 445.35534668]
[237.08811951 456.90386963]
[232.85548401 468.23574829]
[238.72444153 482.03991699]
[244.59339905 495.84411621]
[250.46235657 509.64828491]
[264.80172729 505.20150757]
[279.51739502 502.22827148]
[294.45834351 500.75906372]
[309.47128296 500.80895996]
[324.40216064 502.37744141]
[339.09774780 505.44845581]
[353.40722656 509.99044800]
[367.18377686 515.95684814]
[380.28601074 523.28637695]
[392.57952881 531.90380859]
[403.93811035 541.72082520]
[414.24523926 552.63659668]
[423.39514160 564.53912354]
[431.29394531 577.30627441]
[437.86053467 590.80706787]
[443.02758789 604.90289307]
[446.74203491 619.44915771]
[448.96578979 634.29656982]
[449.67602539 649.29278564]
[448.86544800 664.28393555]
[446.54238892 679.11614990]
[442.73068237 693.63720703]
[437.46945190 707.69818115]
[430.81265259 721.15472412]
[422.82861328 733.86871338]
[413.59927368 745.70977783]
[403.21932983 756.55633545]
[391.79531860 766.29705811]
[379.44442749 774.83209229]
[366.29342651 782.07379150]
[352.47726440 787.94787598]
[338.13769531 792.39398193]
[323.42190552 795.36657715]
[308.48086548 796.83514404]
[293.46792603 796.78460693]
[278.53713989 795.21545410]
[263.84167480 792.14379883]
[249.53240967 787.60119629]
[235.75611877 781.63421631]
[222.65419006 774.30407715]
[210.36106873 765.68603516]
[199.00291443 755.86859131]
[188.69625854 744.95233154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 167]
[18 166]
[19 165]
[20 164]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[55 136]
[56 135]
[59 132]
[61 130]
[62 129]
[63 128]
[64 127]
[65 125]
[67 123]
[68 122]
[71 119]
[72 118]
[73 117]
[74 116]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
