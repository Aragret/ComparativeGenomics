%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[162.96553040 674.06646729]
[152.22341919 663.58721924]
[142.28457642 652.34326172]
[133.20326233 640.39599609]
[125.02909851 627.81066895]
[117.80671692 614.65606689]
[111.57556152 601.00396729]
[106.36968231 586.92895508]
[102.21749115 572.50787354]
[99.14167786 557.81958008]
[97.15903473 542.94421387]
[96.28040314 527.96307373]
[96.51056671 512.95788574]
[97.84828186 498.01074219]
[100.28623199 483.20318604]
[103.81110382 468.61611938]
[108.40364838 454.32922363]
[114.03878784 440.42050171]
[120.68572998 426.96594238]
[128.30818176 414.03900146]
[136.86451721 401.71032715]
[146.30798340 390.04721069]
[156.58702087 379.11337280]
[167.64547729 368.96853638]
[179.42297363 359.66812134]
[191.85516357 351.26287842]
[204.87414551 343.79876709]
[198.39465332 330.27041626]
[185.91870117 322.13406372]
[186.93568420 306.34558105]
[180.45619202 292.81723022]
[173.97669983 279.28890991]
[167.49719238 265.76055908]
[161.77276611 261.08587646]
[161.02362061 251.98220825]
[154.74626160 238.35890198]
[143.51055908 233.87721252]
[138.16929626 222.57876587]
[142.07893372 210.28741455]
[136.00509644 196.57214355]
[121.29141998 187.00790405]
[123.40483856 168.71542358]
[117.12747192 155.09210205]
[110.85011292 141.46878052]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[78.26242065 93.00782013]
[67.47648621 103.43199921]
[52.78826523 106.47439575]
[38.74906158 101.19227600]
[29.70907784 89.22237396]
[28.46944809 74.27368164]
[35.41428757 60.97822189]
[48.39165878 53.45573807]
[63.38039017 54.03715134]
[75.73621368 62.54250336]
[71.33521271 48.20265579]
[60.32682800 41.48117828]
[56.95644379 29.44688416]
[62.50566483 18.69827080]
[58.31865311 4.29448843]
[54.13164139 -10.10929394]
[40.56248856 -17.75885963]
[36.52145386 -32.42598724]
[43.89776611 -45.31496048]
[39.71075439 -59.71874237]
[35.52374268 -74.12252045]
[31.33673286 -88.52630615]
[27.14972115 -102.93008423]
[14.67748737 -108.01515961]
[7.51573849 -119.19190979]
[8.09039593 -132.25912476]
[15.96782112 -142.45596313]
[11.99572563 -156.92048645]
[8.02362919 -171.38500977]
[4.05153275 -185.84953308]
[-10.92150497 -184.44267273]
[-25.91135216 -185.65742493]
[-40.46248245 -189.45684814]
[-54.13270950 -195.72550964]
[-66.50659943 -204.27290344]
[-77.20813751 -214.83927917]
[-85.91210175 -227.10353088]
[-92.35400391 -240.69299316]
[-96.33806610 -255.19465637]
[-97.74322510 -270.16784668]
[-96.52678680 -285.15756226]
[-92.72570038 -299.70825195]
[-86.45549011 -313.37777710]
[-77.90670013 -325.75070190]
[-67.33911133 -336.45101929]
[-55.07386017 -345.15359497]
[-41.48368454 -351.59396362]
[-26.98156548 -355.57638550]
[-12.00820732 -356.97985840]
[2.98136353 -355.76171875]
[17.53163338 -351.95898438]
[31.20043564 -345.68722534]
[43.57238770 -337.13702393]
[54.27152634 -326.56820679]
[62.97271347 -314.30197144]
[69.41152954 -300.71105957]
[73.39230347 -286.20849609]
[74.79406738 -271.23498535]
[73.57422638 -256.24554443]
[69.76984406 -241.69570923]
[63.49653244 -228.02761841]
[54.94493103 -215.65663147]
[44.37491608 -204.95869446]
[32.10769653 -196.25891113]
[18.51605606 -189.82162476]
[22.48815346 -175.35710144]
[26.46024895 -160.89257812]
[30.43234444 -146.42805481]
[45.39096832 -138.74182129]
[50.25806046 -122.29109192]
[41.55350494 -107.11709595]
[45.74051666 -92.71331787]
[49.92752457 -78.30953217]
[54.11453629 -63.90575409]
[58.30154800 -49.50197220]
[71.43789673 -42.57579041]
[75.88930511 -28.02795219]
[68.53542328 -14.29630470]
[72.72243500 0.10747721]
[76.90944672 14.51125908]
[90.21342468 25.95551682]
[85.67506409 43.80165863]
[90.07605743 58.14150620]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.47342682 135.19142151]
[130.75079346 148.81474304]
[137.02815247 162.43806458]
[148.83584595 167.62855530]
[153.78381348 179.10467529]
[149.72035217 190.49830627]
[155.79418945 204.21357727]
[170.91790771 214.71855164]
[168.36958313 232.08152771]
[174.64694214 245.70484924]
[181.02554321 259.28106689]
[187.50503540 272.80941772]
[193.98454285 286.33773804]
[200.46403503 299.86608887]
[213.40342712 308.97006226]
[211.92300415 323.79092407]
[218.40249634 337.31927490]
[232.37876892 331.85382080]
[246.72050476 327.43548584]
[261.34939575 324.08840942]
[276.18551636 321.83084106]
[291.14785767 320.67514038]
[306.15469360 320.62759399]
[321.12405396 321.68850708]
[335.97418213 323.85202026]
[350.62396240 327.10635376]
[364.99340820 331.43374634]
[379.00402832 336.81054688]
[392.57928467 343.20739746]
[405.64505005 350.58932495]
[418.12994385 358.91604614]
[429.96582031 368.14208984]
[441.08798218 378.21704102]
[451.43569946 389.08587646]
[460.95248413 400.68923950]
[469.58633423 412.96377563]
[477.29006958 425.84240723]
[484.02166748 439.25482178]
[489.74432373 453.12777710]
[494.42681885 467.38546753]
[498.04351807 481.95001221]
[500.57473755 496.74191284]
[502.00659180 511.68035889]
[502.33132935 526.68377686]
[501.54708862 541.67016602]
[499.65823364 556.55773926]
[496.67501831 571.26513672]
[492.61380005 585.71203613]
[487.49670410 599.81958008]
[481.35168457 613.51068115]
[474.21234131 626.71057129]
[466.11764526 639.34710693]
[457.11178589 651.35137939]
[447.24398804 662.65771484]
[436.56814575 673.20446777]
[425.14251709 682.93389893]
[413.02957153 691.79302979]
[400.29541016 699.73333740]
[387.00961304 706.71148682]
[373.24475098 712.68945312]
[359.07598877 717.63446045]
[344.58068848 721.51959229]
[329.83807373 724.32354736]
[314.92864990 726.03112793]
[299.93380737 726.63287354]
[284.93548584 726.12561035]
[270.01556396 724.51202393]
[255.25556946 721.80096436]
[240.73609924 718.00726318]
[226.53645325 713.15161133]
[212.73419189 707.26055908]
[199.40469360 700.36627197]
[186.62075806 692.50634766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 154]
[28 153]
[30 151]
[31 150]
[32 149]
[33 148]
[35 147]
[36 146]
[39 144]
[40 143]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[48 134]
[49 133]
[59 132]
[60 131]
[63 129]
[64 128]
[65 127]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
[76 117]
[77 116]
[78 115]
[79 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
