%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[164.18917847 449.82556152]
[164.78848267 434.82153320]
[167.06398010 419.97897339]
[170.98703003 405.48449707]
[176.50831604 391.52041626]
[183.55839539 378.26232910]
[192.04859924 365.87701416]
[201.87216187 354.52017212]
[212.90553284 344.33465576]
[225.00997925 335.44857788]
[217.54223633 322.43963623]
[210.07449341 309.43066406]
[202.60675049 296.42172241]
[195.13900757 283.41278076]
[187.67126465 270.40380859]
[174.62472534 263.21792603]
[174.46459961 247.39753723]
[166.70820618 234.55859375]
[158.66702271 221.89607239]
[150.62585449 209.23353577]
[144.86009216 223.08114624]
[130.48147583 227.35375977]
[118.08937836 218.90177917]
[116.81879425 203.95568848]
[127.60636139 193.53318787]
[142.49847412 195.31648254]
[129.67166138 187.74533081]
[129.98263550 171.92718506]
[122.90553284 158.70164490]
[115.82843018 145.47612000]
[108.75132751 132.25059509]
[101.67421722 119.02507019]
[87.83744049 114.72509003]
[81.00118256 101.94965363]
[85.10025787 88.05204010]
[71.76724243 79.53491211]
[72.58441925 64.66274261]
[65.50731659 51.43721390]
[58.43021011 38.21168518]
[51.35310364 24.98615837]
[44.27599716 11.76062965]
[41.60834503 26.52151108]
[31.46199036 37.56920624]
[16.98089790 41.48046112]
[2.65218735 37.04333496]
[-7.08423233 25.63272095]
[-9.21142578 10.78431988]
[-3.07025933 -2.90093088]
[9.43635941 -11.18250561]
[24.43311882 -11.49426842]
[37.27328491 -3.73942757]
[32.02656555 -17.79189873]
[26.77985001 -31.84436989]
[21.53313065 -45.89684296]
[16.28641319 -59.94931412]
[11.03969479 -74.00178528]
[-0.34924302 -80.05611420]
[-4.42994785 -91.86846161]
[0.46966678 -102.92831421]
[-4.56724930 -117.05734253]
[-9.60416603 -131.18637085]
[-14.64108181 -145.31539917]
[-19.67799759 -159.44442749]
[-31.60005569 -169.84515381]
[-28.58576584 -184.43156433]
[-39.88330078 -190.65478516]
[-43.78768539 -202.52659607]
[-38.72394943 -213.51226807]
[-43.54994583 -227.71472168]
[-48.37594604 -241.91717529]
[-53.20194244 -256.11962891]
[-58.02793884 -270.32208252]
[-72.77829742 -267.46890259]
[-87.77978516 -266.65087891]
[-102.75292969 -267.88323975]
[-117.41879272 -271.14300537]
[-131.50415039 -276.36950684]
[-144.74661255 -283.46536255]
[-156.89949036 -292.29833984]
[-167.73635864 -302.70391846]
[-177.05532837 -314.48825073]
[-184.68283081 -327.43176270]
[-190.47673035 -341.29339600]
[-194.32911682 -355.81484985]
[-196.16821289 -370.72564697]
[-195.95974731 -385.74795532]
[-193.70762634 -400.60198975]
[-189.45378113 -415.01095581]
[-183.27748108 -428.70645142]
[-175.29377747 -441.43338013]
[-165.65138245 -452.95458984]
[-154.52996826 -463.05545044]
[-142.13667297 -471.54782104]
[-128.70242310 -478.27346802]
[-114.47745514 -483.10711670]
[-99.72679138 -485.95870972]
[-84.72521210 -486.77511597]
[-69.75220490 -485.54113770]
[-55.08669281 -482.27975464]
[-41.00189590 -477.05172729]
[-27.76019859 -469.95446777]
[-15.60828876 -461.12017822]
[-4.77254820 -450.71340942]
[4.54515934 -438.92810059]
[12.17125034 -425.98373413]
[17.96365738 -412.12149048]
[21.81446838 -397.59960938]
[23.65194893 -382.68862915]
[23.44186401 -367.66632080]
[21.18812943 -352.81253052]
[16.93272972 -338.40402222]
[10.75494289 -324.70919800]
[2.76985526 -311.98315430]
[-6.87377596 -300.46298218]
[-17.99629402 -290.36331177]
[-30.39049721 -281.87228394]
[-43.82548523 -275.14810181]
[-38.99948502 -260.94561768]
[-34.17348862 -246.74317932]
[-29.34749031 -232.54072571]
[-24.52149391 -218.33827209]
[-10.71976948 -207.49948120]
[-14.45673656 -189.46849060]
[-2.89495301 -180.07836914]
[-5.54896832 -164.48135376]
[-0.51205230 -150.35232544]
[4.52486372 -136.22329712]
[9.56177998 -122.09426117]
[14.59869671 -107.96523285]
[28.56026459 -97.33312988]
[25.09216690 -79.24850464]
[30.33888435 -65.19602966]
[35.58560181 -51.14355850]
[40.83232117 -37.09108734]
[46.07904053 -23.03861618]
[51.32575607 -8.98614597]
[57.50152588 4.68352461]
[64.57862854 17.90905190]
[71.65573883 31.13457870]
[78.73284149 44.36010742]
[85.80994415 57.58563614]
[98.63675690 65.15678406]
[98.32578278 80.97492981]
[112.16255951 85.27490997]
[118.99881744 98.05034637]
[114.89974213 111.94795990]
[121.97685242 125.17349243]
[129.05395508 138.39901733]
[136.13105774 151.62454224]
[143.20816040 164.85006714]
[156.54118347 173.36720276]
[155.72399902 188.23936462]
[163.28837585 201.19236755]
[171.32955933 213.85488892]
[179.37072754 226.51742554]
[183.99813843 228.93283081]
[186.94194031 232.52270508]
[188.03671265 236.44909668]
[187.47354126 239.92979431]
[201.05422974 248.04617310]
[200.68022156 262.93606567]
[208.14796448 275.94503784]
[215.61570740 288.95397949]
[223.08343506 301.96292114]
[230.55117798 314.97189331]
[238.01892090 327.98083496]
[251.79652405 322.00942993]
[266.15609741 317.61822510]
[280.91705322 314.86239624]
[295.89373779 313.77664185]
[310.89779663 314.37460327]
[325.74060059 316.64877319]
[340.23541260 320.57052612]
[354.19998169 326.09057617]
[367.45867920 333.13943481]
[379.84478760 341.62854004]
[391.20248413 351.45108032]
[401.38900757 362.48355103]
[410.27618408 374.58718872]
[417.75225830 387.60977173]
[423.72326660 401.38757324]
[428.11404419 415.74728394]
[430.86941528 430.50830078]
[431.95471191 445.48501587]
[431.35629272 460.48907471]
[429.08169556 475.33178711]
[425.15951538 489.82650757]
[419.63906860 503.79089355]
[412.58978271 517.04937744]
[404.10031128 529.43524170]
[394.27743530 540.79266357]
[383.24465942 550.97882080]
[371.14077759 559.86566162]
[358.11795044 567.34136963]
[344.33996582 573.31188965]
[329.98013306 577.70227051]
[315.21902466 580.45721436]
[300.24227905 581.54205322]
[285.23825073 580.94323730]
[270.39559937 578.66815186]
[255.90100098 574.74554443]
[241.93676758 569.22467041]
[228.67848206 562.17498779]
[216.29289246 553.68518066]
[204.93577576 543.86193848]
[194.74993896 532.82885742]
[185.86347961 520.72467041]
[178.38816833 507.70166016]
[172.41799927 493.92349243]
[168.02807617 479.56353760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[17 159]
[18 155]
[19 154]
[20 153]
[26 152]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[35 143]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[51 136]
[52 135]
[53 134]
[54 133]
[55 132]
[56 131]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[65 123]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
