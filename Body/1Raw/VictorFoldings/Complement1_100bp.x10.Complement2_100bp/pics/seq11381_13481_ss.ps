%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[213.52073669 428.79492188]
[221.60173035 416.13574219]
[231.14971924 404.54293823]
[242.02548218 394.18557739]
[233.06478882 382.15618896]
[224.10409546 370.12680054]
[215.14340210 358.09744263]
[206.18270874 346.06805420]
[197.22200012 334.03866577]
[188.26130676 322.00930786]
[174.45330811 316.42465210]
[172.41435242 300.73538208]
[163.45365906 288.70602417]
[154.49296570 276.67663574]
[140.68495178 271.09201050]
[138.64599609 255.40272522]
[140.95227051 270.22436523]
[138.62760925 285.04315186]
[131.89356995 298.44659424]
[121.39202881 309.15722656]
[108.12390137 316.15414429]
[93.35383606 318.77044678]
[78.48960876 316.75680542]
[64.94799805 310.30508423]
[54.01968765 300.03024292]
[46.74630737 286.91165161]
[43.82110214 272.19964600]
[45.52288437 257.29647827]
[51.68945312 243.62265015]
[61.73305130 232.48146057]
[74.69638824 224.93481445]
[89.34387207 221.70199585]
[104.27941132 223.09115601]
[118.07943726 228.96986389]
[129.42935181 238.77868652]
[117.59311676 229.73696899]
[119.78157806 214.06785583]
[114.32621765 200.09504700]
[108.87085724 186.12225342]
[103.41550446 172.14945984]
[101.58491516 187.03733826]
[95.07871246 200.55285645]
[84.58350372 211.26969910]
[71.20687103 218.05686951]
[56.36049271 220.19812012]
[41.61113358 217.46748352]
[28.51533127 210.15312195]
[18.45511627 199.02693176]
[12.49217033 185.26309204]
[11.25577354 170.31413269]
[14.87640762 155.75765991]
[22.97197723 143.12983704]
[34.68814087 133.76332092]
[48.78845978 128.64659119]
[63.78489304 128.31961060]
[78.09483337 132.81689453]
[90.20812225 141.66381836]
[98.84649658 153.92694092]
[97.06403351 139.03323364]
[95.28156281 124.13951111]
[93.49909973 109.24579620]
[85.03573608 121.63011932]
[70.94860840 126.78306580]
[56.49187088 122.78272247]
[47.05752945 111.12110901]
[46.16435623 96.14772797]
[54.14548492 83.44727325]
[68.02415466 77.75669861]
[82.62396240 81.19845581]
[92.50000000 92.48992157]
[92.50000000 77.48992157]
[89.53043365 71.58287048]
[89.92986298 65.91387939]
[92.72998047 62.04497910]
[93.17658234 47.05162811]
[85.85359955 33.02720642]
[93.96640778 20.53594589]
[94.41300964 5.54259634]
[94.85961914 -9.45075321]
[95.30622101 -24.44410324]
[82.76498413 -16.21504784]
[68.46505737 -20.74407387]
[62.94781494 -34.69255066]
[70.28036499 -47.77818298]
[85.05741882 -50.35472870]
[96.38523102 -40.52436447]
[97.94574738 -55.44297028]
[99.50627136 -70.36157227]
[101.06679535 -85.28018188]
[102.62731934 -100.19878387]
[92.95011902 -112.40490723]
[94.74523163 -127.51226807]
[106.44154358 -136.66278076]
[107.89096069 -151.59259033]
[101.41571045 -166.02801514]
[110.25762177 -178.01425171]
[111.59585571 -192.95443726]
[97.42435455 -198.13427734]
[85.07692719 -206.80627441]
[75.39545441 -218.37915039]
[69.04003143 -232.06385803]
[66.44397736 -246.92732239]
[67.78430176 -261.95617676]
[72.96961975 -276.12567139]
[81.64638519 -288.46975708]
[93.22299957 -298.14675903]
[106.91014862 -304.49688721]
[121.77462769 -307.08718872]
[136.80294800 -305.74105835]
[150.97045898 -300.55029297]
[163.31117249 -291.86874390]
[172.98370361 -280.28842163]
[179.32856750 -266.59881592]
[181.91313171 -251.73332214]
[180.56120300 -236.70553589]
[175.36494446 -222.54002380]
[166.67864990 -210.20266724]
[155.09457397 -200.53459167]
[141.40251160 -194.19503784]
[126.53604126 -191.61619568]
[125.19780731 -176.67601013]
[131.76878357 -163.30920410]
[122.83114624 -150.25434875]
[125.36536407 -143.31176758]
[121.36014557 -135.10224915]
[130.90966797 -123.72937775]
[129.53959656 -108.57756042]
[117.54592133 -98.63825989]
[115.98540497 -83.71965790]
[114.42488098 -68.80104828]
[112.86435699 -53.88244629]
[111.30383301 -38.96384048]
[110.29957581 -23.99749756]
[109.85296631 -9.00414753]
[109.40635681 5.98920250]
[108.95975494 20.98255157]
[116.31468964 33.93455124]
[108.16993713 47.49823761]
[107.72332764 62.49158478]
[107.50000000 77.48992157]
[107.50000000 92.48992157]
[108.39281464 107.46332550]
[110.17528534 122.35704803]
[111.95774841 137.25076294]
[113.74021149 152.14448547]
[117.38829803 166.69410706]
[122.84365845 180.66690063]
[128.29901123 194.63969421]
[133.75437927 208.61248779]
[145.98081970 218.65364075]
[143.40214539 233.32333374]
[150.67538452 246.44203186]
[165.12431335 252.88708496]
[166.52233887 267.71594238]
[175.48303223 279.74533081]
[184.44372559 291.77468872]
[198.89266968 298.21975708]
[200.29069519 313.04861450]
[209.25138855 325.07797241]
[218.21208191 337.10736084]
[227.17277527 349.13674927]
[236.13346863 361.16610718]
[245.09416199 373.19549561]
[254.05487061 385.22488403]
[267.09219360 377.76934814]
[280.93316650 371.93966675]
[295.37594604 367.82092285]
[310.20983887 365.47311401]
[325.21859741 364.93048096]
[340.18334961 366.20095825]
[354.88583374 369.26602173]
[369.11163330 374.08096313]
[382.65332031 380.57559204]
[395.31341553 388.65515137]
[406.90728760 398.20184326]
[417.26586914 409.07644653]
[426.23812866 421.12039185]
[433.69317627 434.15802002]
[439.52230835 447.99920654]
[443.64053345 462.44210815]
[445.98779297 477.27612305]
[446.52984619 492.28488159]
[445.25878906 507.24957275]
[442.19317627 521.95190430]
[437.37771606 536.17755127]
[430.88259888 549.71899414]
[422.80255127 562.37878418]
[413.25543213 573.97235107]
[402.38043213 584.33050537]
[390.33618164 593.30230713]
[377.29827881 600.75683594]
[363.45684814 606.58544922]
[349.01379395 610.70318604]
[334.17971802 613.04986572]
[319.17089844 613.59136963]
[304.20626831 612.31976318]
[289.50402832 609.25360107]
[275.27856445 604.43756104]
[261.73736572 597.94195557]
[249.07788086 589.86145020]
[237.48471069 580.31390381]
[227.12693787 569.43853760]
[218.15559387 557.39392090]
[210.70152283 544.35571289]
[204.87342834 530.51409912]
[200.75627136 516.07086182]
[198.41012573 501.23669434]
[197.86918640 486.22787476]
[199.14135742 471.26330566]
[202.20806885 456.56115723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[12 156]
[13 155]
[14 154]
[16 152]
[35 151]
[37 149]
[38 148]
[39 147]
[40 146]
[58 145]
[59 144]
[60 143]
[61 142]
[70 141]
[71 140]
[74 139]
[75 138]
[77 136]
[78 135]
[79 134]
[80 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[93 125]
[94 123]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
