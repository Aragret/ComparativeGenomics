%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[124.19639587 835.60644531]
[109.38442993 833.22186279]
[94.69839478 830.15576172]
[80.16963196 826.41467285]
[65.82914734 822.00659180]
[51.70754623 816.94097900]
[37.83496094 811.22851562]
[24.24100113 804.88146973]
[10.95467377 797.91339111]
[-1.99566519 790.33911133]
[-14.58238029 782.17486572]
[-26.77861023 773.43798828]
[-38.55833054 764.14721680]
[-49.89639664 754.32232666]
[-60.76861572 743.98425293]
[-71.15178680 733.15509033]
[-81.02375031 721.85797119]
[-90.36344147 710.11700439]
[-99.15092468 697.95721436]
[-107.36745453 685.40454102]
[-114.99548340 672.48577881]
[-122.01874542 659.22857666]
[-128.42224121 645.66113281]
[-134.19232178 631.81237793]
[-139.31665039 617.71197510]
[-143.78431702 603.38995361]
[-147.58576965 588.87689209]
[-150.71289062 574.20367432]
[-153.15902710 559.40179443]
[-154.91894531 544.50268555]
[-155.98889160 529.53820801]
[-156.36659241 514.54022217]
[-156.05122375 499.54089355]
[-155.04347229 484.57208252]
[-153.34548950 469.66580200]
[-150.96087646 454.85382080]
[-147.89476013 440.16778564]
[-144.15364075 425.63903809]
[-139.74554443 411.29855347]
[-134.67984009 397.17697144]
[-128.96737671 383.30441284]
[-122.62030792 369.71044922]
[-115.65219879 356.42413330]
[-108.07791901 343.47381592]
[-99.91362762 330.88711548]
[-91.17675018 318.69091797]
[-81.88593292 306.91119385]
[-72.06100464 295.57315063]
[-61.72291946 284.70095825]
[-50.89375687 274.31781006]
[-39.59661484 264.44586182]
[-27.85560608 255.10620117]
[-15.69578838 246.31874084]
[-3.14310908 238.10224915]
[9.77564335 230.47424316]
[23.03289795 223.45100403]
[36.60036469 217.04753113]
[50.44908905 211.27749634]
[64.54952240 206.15318298]
[78.87155914 201.68556213]
[93.38465118 197.88414001]
[108.05782318 194.75703430]
[105.61209106 179.95776367]
[103.16636658 165.15849304]
[100.72064209 150.35922241]
[91.01171875 139.06382751]
[96.39537811 124.18676758]
[93.94965363 109.38749695]
[91.39382172 94.60684204]
[88.72802734 79.84562683]
[76.85249329 73.49060059]
[70.89237976 61.62942505]
[72.82336426 48.69290924]
[81.71887207 39.37092209]
[79.27313995 24.57165146]
[76.82741547 9.77238083]
[74.05180359 -4.96858215]
[70.94769287 -19.64388466]
[67.84358215 -34.31918716]
[64.73947144 -48.99448776]
[49.71860123 -48.34394455]
[34.79553223 -50.17477417]
[20.37738609 -54.43703842]
[6.85749626 -61.01445770]
[-5.39530420 -69.72759247]
[-16.04674911 -80.33874512]
[-24.80626106 -92.55843353]
[-31.43487358 -106.05329895]
[-35.75175095 -120.45519257]
[-37.63912964 -135.37121582]
[-37.04551697 -150.39443970]
[-33.98710632 -165.11503601]
[-28.54733849 -179.13140869]
[-20.87460899 -192.06118774]
[-11.17823982 -203.55163574]
[0.27724740 -213.28927612]
[13.17933846 -221.00846863]
[27.17605400 -226.49862671]
[41.88555527 -229.60997009]
[56.90655518 -230.25761414]
[71.82926941 -228.42390442]
[86.24658966 -224.15887451]
[99.76521301 -217.57884216]
[112.01633453 -208.86335754]
[122.66574097 -198.25015259]
[131.42289734 -186.02876282]
[138.04890442 -172.53262329]
[142.36300659 -158.12991333]
[144.24751282 -143.21351624]
[143.65100098 -128.19039917]
[140.58976746 -113.47039795]
[135.14729309 -99.45507050]
[127.47207642 -86.52677155]
[117.77349091 -75.03820038]
[106.31612396 -65.30276489]
[93.41255188 -57.58605957]
[79.41477966 -52.09859848]
[82.51888275 -37.42329788]
[85.62299347 -22.74799538]
[88.72710419 -8.07269192]
[91.46695709 -5.85333252]
[93.26796722 -2.19663692]
[93.46627808 2.44167852]
[91.62668610 7.32665348]
[94.07241058 22.12592506]
[96.51814270 36.92519379]
[110.59595490 46.12594986]
[113.72518921 62.99375534]
[103.48924255 77.17983246]
[106.15503693 91.94104767]
[110.57276917 98.68316650]
[108.74892426 106.94177246]
[111.19464874 121.74104309]
[121.07850647 134.09498596]
[115.51991272 147.91349792]
[117.96563721 162.71276855]
[120.41136169 177.51203918]
[122.85709381 192.31130981]
[137.75617981 190.55130005]
[152.72065735 189.48124695]
[167.71859741 189.10346985]
[182.71797180 189.41873169]
[197.68678284 190.42639160]
[212.59307861 192.12429810]
[227.40505981 194.50880432]
[242.09111023 197.57484436]
[256.61987305 201.31585693]
[270.96038818 205.72387695]
[285.08200073 210.78948975]
[298.95462036 216.50187683]
[312.54861450 222.84884644]
[325.83496094 229.81687927]
[338.78533936 237.39108276]
[351.37207031 245.55528259]
[363.56832886 254.29208374]
[375.34811401 263.58282471]
[386.68621826 273.40768433]
[397.55847168 283.74569702]
[407.94168091 294.57479858]
[417.81369019 305.87188721]
[427.15344238 317.61285400]
[435.94097900 329.77261353]
[444.15756226 342.32522583]
[451.78564453 355.24392700]
[458.80895996 368.50115967]
[465.21249390 382.06857300]
[470.98263550 395.91726685]
[476.10702515 410.01766968]
[480.57473755 424.33969116]
[484.37625122 438.85275269]
[487.50344849 453.52590942]
[489.94964600 468.32781982]
[491.70962524 483.22689819]
[492.77963257 498.19137573]
[493.15740967 513.18933105]
[492.84210205 528.18872070]
[491.83441162 543.15747070]
[490.13647461 558.06378174]
[487.75192261 572.87579346]
[484.68585205 587.56182861]
[480.94482422 602.09057617]
[476.53677368 616.43109131]
[471.47113037 630.55267334]
[465.75872803 644.42529297]
[459.41171265 658.01928711]
[452.44366455 671.30560303]
[444.86944580 684.25598145]
[436.70520020 696.84271240]
[427.96835327 709.03894043]
[418.67758179 720.81866455]
[408.85272217 732.15673828]
[398.51467896 743.02899170]
[387.68554688 753.41217041]
[376.38845825 763.28417969]
[364.64749146 772.62390137]
[352.48770142 781.41143799]
[339.93505859 789.62792969]
[327.01632690 797.25604248]
[313.75912476 804.27929688]
[300.19168091 810.68286133]
[286.34295654 816.45294189]
[272.24255371 821.57727051]
[257.92053223 826.04498291]
[243.40745544 829.84649658]
[228.73429871 832.97363281]
[213.93238831 835.41979980]
[199.03327942 837.17974854]
[184.06880188 838.24975586]
[169.07086182 838.62744141]
[154.07150269 838.31213379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 138]
[63 137]
[64 136]
[65 135]
[67 133]
[68 132]
[69 130]
[70 129]
[74 126]
[75 125]
[76 124]
[77 120]
[78 119]
[79 118]
[80 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
