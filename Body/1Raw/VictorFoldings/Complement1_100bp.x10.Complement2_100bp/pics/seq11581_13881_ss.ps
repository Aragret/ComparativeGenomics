%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[82.24331665 352.85629272]
[77.15596771 366.97619629]
[70.93463898 380.63446045]
[63.62072754 393.74017334]
[55.26290512 406.20608521]
[45.91679764 417.94931030]
[35.64460373 428.89166260]
[24.51467896 438.96029663]
[12.60109520 448.08822632]
[-0.01686448 456.21472168]
[-13.25522709 463.28570557]
[-27.02589417 469.25408936]
[-41.23722076 474.08013916]
[-55.79463196 477.73181152]
[-70.60124969 480.18472290]
[-85.55854034 481.42260742]
[-100.56695557 481.43719482]
[-115.52661896 480.22842407]
[-130.33798218 477.80429077]
[-144.90246582 474.18096924]
[-159.12315369 469.38253784]
[-172.90541077 463.44094849]
[-186.15750122 456.39575195]
[-198.79122925 448.29382324]
[-210.72254944 439.18905640]
[-221.87203979 429.14208984]
[-232.16549683 418.21975708]
[-241.53442383 406.49472046]
[-249.91647339 394.04507446]
[-257.25585938 380.95361328]
[-263.50375366 367.30749512]
[-268.61856079 353.19750977]
[-272.56622314 338.71755981]
[-275.32052612 323.96401978]
[-276.86306763 309.03509521]
[-277.18365479 294.03009033]
[-276.28009033 279.04888916]
[-274.15844727 264.19119263]
[-270.83279419 249.55586243]
[-266.32528687 235.24029541]
[-260.66592407 221.33978271]
[-253.89234924 207.94682312]
[-246.04966736 195.15052795]
[-237.19004822 183.03607178]
[-227.37246704 171.68406677]
[-216.66224670 161.17007446]
[-205.13067627 151.56405640]
[-192.85449219 142.92993164]
[-179.91539001 135.32516479]
[-166.39947510 128.80036926]
[-152.39669800 123.39897156]
[-138.00025940 119.15691376]
[-123.30594635 116.10241699]
[-108.41155243 114.25581360]
[-93.41620636 113.62939453]
[-78.41970062 114.22733307]
[-63.52182770 116.04564667]
[-48.82173920 119.07222748]
[-34.41726303 123.28694153]
[-20.40425682 128.66174316]
[-6.87597847 135.16085815]
[6.07754421 142.74102783]
[18.37010574 151.35182190]
[29.91989708 160.93592834]
[40.40739822 150.21154785]
[50.89490128 139.48716736]
[61.38240051 128.76278687]
[71.86990356 118.03841400]
[82.35740662 107.31403351]
[82.30056000 92.82462311]
[92.43115234 82.46520996]
[106.91822052 82.19847107]
[117.40571594 71.47409058]
[118.04233551 58.59163666]
[126.99818420 49.87518311]
[139.09175110 49.60663605]
[149.73776245 39.03958511]
[160.38377380 28.47253990]
[150.44474792 17.23236465]
[141.16979980 5.43825006]
[132.58975220 -6.87062359]
[124.73308563 -19.65336800]
[117.62591553 -32.86751938]
[111.29183960 -46.46918488]
[105.75190735 -60.41317368]
[101.02452087 -74.65317535]
[97.12538910 -89.14186859]
[94.06745148 -103.83114624]
[91.86087036 -118.67219543]
[90.51298523 -133.61572266]
[90.02826691 -148.61207581]
[90.40832520 -163.61145020]
[91.65189362 -178.56402588]
[93.75484467 -193.42010498]
[96.71019745 -208.13035583]
[100.50813293 -222.64591980]
[105.13603210 -236.91856384]
[110.57852173 -250.90086365]
[116.81752014 -264.54641724]
[123.83230591 -277.80984497]
[131.59956360 -290.64709473]
[140.09352112 -303.01553345]
[149.28593445 -314.87408447]
[159.14627075 -326.18334961]
[169.64178467 -336.90576172]
[180.73760986 -347.00567627]
[192.39688110 -356.44958496]
[204.58087158 -365.20605469]
[217.24909973 -373.24606323]
[230.35949707 -380.54287720]
[243.86848450 -387.07223511]
[257.73123169 -392.81246948]
[271.90164185 -397.74453735]
[286.33267212 -401.85198975]
[300.97634888 -405.12121582]
[315.78408813 -407.54138184]
[330.70663452 -409.10440063]
[345.69445801 -409.80514526]
[360.69775391 -409.64120483]
[375.66668701 -408.61315918]
[390.55151367 -406.72445679]
[405.30282593 -403.98132324]
[419.87158203 -400.39291382]
[434.20941162 -395.97113037]
[448.26867676 -390.73062134]
[462.00268555 -384.68887329]
[475.36578369 -377.86587524]
[488.31362915 -370.28436279]
[500.80316162 -361.96948242]
[512.79290771 -352.94885254]
[524.24304199 -343.25247192]
[535.11553955 -332.91250610]
[545.37426758 -321.96334839]
[554.98516846 -310.44134521]
[563.91625977 -298.38476562]
[572.13793945 -285.83367920]
[579.62286377 -272.82977295]
[586.34619141 -259.41622925]
[592.28552246 -245.63764954]
[597.42120361 -231.53974915]
[601.73614502 -217.16940308]
[605.21600342 -202.57432556]
[607.84924316 -187.80300903]
[609.62707520 -172.90452576]
[610.54364014 -157.92834473]
[610.59588623 -142.92425537]
[609.78363037 -127.94207001]
[608.10955811 -113.03156281]
[605.57922363 -98.24227142]
[602.20104980 -83.62331390]
[597.98626709 -69.22327423]
[592.94885254 -55.08996582]
[587.10559082 -41.27035141]
[580.47583008 -27.81033134]
[573.08160400 -14.75462532]
[564.94750977 -2.14659858]
[556.10058594 9.97186470]
[546.57012939 21.56050682]
[536.38793945 32.58083344]
[525.58764648 42.99623489]
[514.20532227 52.77210999]
[502.27865601 61.87598801]
[489.84732056 70.27762604]
[476.95260620 77.94911194]
[463.63732910 84.86495972]
[449.94570923 91.00220490]
[435.92327881 96.34045410]
[421.61657715 100.86196899]
[407.07315063 104.55173492]
[392.34130859 107.39749908]
[377.46997070 109.38980103]
[362.50854492 110.52201843]
[347.50677490 110.79040527]
[332.51443481 110.19406128]
[317.58135986 108.73496246]
[302.75714111 106.41796112]
[288.09103394 103.25075531]
[273.63177490 99.24386597]
[259.42736816 94.41059875]
[245.52500916 88.76702118]
[231.97087097 82.33186340]
[218.80999756 75.12651825]
[206.08609009 67.17491150]
[193.84143066 58.50345993]
[182.11669922 49.14097214]
[170.95082092 39.11854935]
[160.30480957 49.68559647]
[149.65879822 60.25264359]
[145.97291565 77.41018677]
[128.13009644 81.96158600]
[117.64259338 92.68596649]
[117.69944000 107.17537689]
[107.56884766 117.53479004]
[93.08177948 117.80152893]
[82.59428406 128.52590942]
[72.10678101 139.25028992]
[61.61927795 149.97467041]
[51.13177872 160.69905090]
[40.64427948 171.42343140]
[50.48392105 182.75631714]
[59.36708069 194.85351562]
[67.23464203 207.63452148]
[74.03424072 221.01429749]
[79.72063446 234.90377808]
[84.25597382 249.21054077]
[87.61008453 263.83938599]
[89.76063538 278.69293213]
[90.69332123 293.67233276]
[90.40193176 308.67794800]
[88.88841248 323.60986328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 199]
[65 198]
[66 197]
[67 196]
[68 195]
[69 194]
[72 191]
[73 190]
[76 188]
[77 187]
[78 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
