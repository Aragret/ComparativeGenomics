%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[90.95194244 507.93603516]
[81.99942017 495.87652588]
[74.59677124 482.80822754]
[68.85620880 468.92926025]
[64.86476898 454.45004272]
[62.68294907 439.59005737]
[62.34383774 424.57458496]
[63.85256577 409.63122559]
[67.18626404 394.98657227]
[72.29440308 380.86260986]
[79.09953308 367.47344971]
[87.49848938 355.02206421]
[97.36396027 343.69720459]
[108.54637146 333.67056274]
[120.87620544 325.09417725]
[134.16654968 318.09799194]
[148.21592712 312.78814697]
[137.69378662 302.24612427]
[141.95602417 287.00985718]
[138.41636658 272.43350220]
[134.87669373 257.85711670]
[131.33702087 243.28074646]
[127.58071136 228.75868225]
[123.60861969 214.29415894]
[119.63652039 199.82963562]
[115.66442871 185.36511230]
[104.83306885 175.14106750]
[108.63978577 159.78465271]
[95.60801697 152.66366577]
[91.37369537 138.05116272]
[98.93120575 124.43052673]
[94.95910645 109.96600342]
[90.87944031 95.53144836]
[86.69242859 81.12767029]
[75.41057587 70.03576660]
[79.28771973 55.65463257]
[75.10070801 41.25085068]
[70.59307861 26.94416428]
[65.76708221 12.74170971]
[60.94108200 -1.46074629]
[56.11508560 -15.66320229]
[51.28908920 -29.86565781]
[45.56506729 -36.98418427]
[46.49867630 -44.31563568]
[41.88466644 -58.58836746]
[30.27756310 -69.33944702]
[33.72480774 -83.82964325]
[22.11770439 -94.58072662]
[25.56495094 -109.07092285]
[20.95094109 -123.34365082]
[16.33693123 -137.61639404]
[1.76822329 -134.01893616]
[-13.01795578 -131.45811462]
[-27.94794273 -129.94667053]
[-42.94735336 -129.49214172]
[-57.94146347 -130.09680176]
[-72.85556793 -131.75762939]
[-87.61537170 -134.46633911]
[-102.14733887 -138.20945740]
[-116.37906647 -142.96832275]
[-130.23965454 -148.71923828]
[-143.66004944 -155.43353271]
[-156.57341003 -163.07777405]
[-168.91535950 -171.61387634]
[-180.62445068 -180.99929810]
[-191.64233398 -191.18728638]
[-201.91410828 -202.12710571]
[-211.38861084 -213.76423645]
[-220.01864624 -226.04069519]
[-227.76119995 -238.89532471]
[-234.57771301 -252.26409912]
[-240.43423462 -266.08041382]
[-245.30155945 -280.27539062]
[-249.15545654 -294.77838135]
[-251.97673035 -309.51708984]
[-253.75131226 -324.41809082]
[-254.47038269 -339.40713501]
[-254.13032532 -354.40957642]
[-252.73286438 -369.35067749]
[-250.28494263 -384.15594482]
[-246.79878235 -398.75167847]
[-242.29171753 -413.06515503]
[-236.78622437 -427.02505493]
[-230.30972290 -440.56179810]
[-222.89447021 -453.60800171]
[-214.57743835 -466.09863281]
[-205.40002441 -477.97146606]
[-195.40798950 -489.16735840]
[-184.65107727 -499.63052368]
[-173.18290710 -509.30883789]
[-161.06060791 -518.15411377]
[-148.34455872 -526.12225342]
[-135.09811401 -533.17352295]
[-121.38727570 -539.27282715]
[-107.28034973 -544.38983154]
[-92.84761810 -548.49902344]
[-78.16098022 -551.57983398]
[-63.29360580 -553.61700439]
[-48.31956482 -554.60040283]
[-33.31345749 -554.52502441]
[-18.35004425 -553.39135742]
[-3.50387311 -551.20501709]
[11.15109253 -547.97686768]
[25.54184151 -543.72302246]
[39.59667969 -538.46466064]
[53.24558258 -532.22796631]
[66.42055511 -525.04400635]
[79.05596161 -516.94860840]
[91.08885193 -507.98211670]
[102.45926666 -498.18911743]
[113.11058044 -487.61846924]
[122.98970795 -476.32284546]
[132.04743958 -464.35845947]
[140.23864746 -451.78494263]
[147.52252197 -438.66497803]
[153.86279297 -425.06387329]
[159.22784424 -411.04940796]
[163.59097290 -396.69140625]
[166.93041992 -382.06140137]
[169.22955322 -367.23226929]
[170.47694397 -352.27792358]
[170.66633606 -337.27282715]
[169.79681396 -322.29171753]
[167.87271118 -307.40930176]
[164.90359497 -292.69967651]
[160.90428162 -278.23611450]
[155.89466858 -264.09069824]
[149.89973450 -250.33389282]
[142.94932556 -237.03424072]
[135.07809448 -224.25799561]
[126.32524109 -212.06880188]
[116.73437500 -200.52738953]
[106.35327148 -189.69125366]
[95.23365784 -179.61439514]
[83.43092346 -170.34701538]
[71.00388336 -161.93525696]
[58.01443481 -154.42106628]
[44.52729797 -147.84184265]
[30.60966492 -142.23039246]
[35.22367477 -127.95766449]
[39.83768463 -113.68492889]
[51.11476135 -103.95472717]
[47.99754333 -88.44365692]
[59.27462006 -78.71345520]
[56.15739822 -63.20237732]
[60.77140808 -48.92964554]
[65.49154663 -34.69165421]
[70.31754303 -20.48920059]
[75.14353943 -6.28674412]
[79.96953583 7.91571188]
[84.79553223 22.11816788]
[87.77970123 23.99622154]
[90.00247192 27.41299248]
[90.75056458 31.99487686]
[89.50448608 37.06383896]
[93.69149780 51.46762085]
[104.67387390 61.52927017]
[101.09621429 76.94065857]
[105.28322601 91.34443665]
[110.37839508 97.59037781]
[109.42363739 105.99390411]
[113.39572906 120.45843506]
[126.84948730 128.30917358]
[130.67170715 143.03483582]
[123.10430908 155.81256104]
[134.21977234 167.07119751]
[130.12895203 181.39302063]
[134.10104370 195.85754395]
[138.07313538 210.32206726]
[142.04524231 224.78659058]
[146.47302246 229.69641113]
[147.58903503 235.26879883]
[145.91339111 239.74107361]
[149.45306396 254.31744385]
[152.99273682 268.89382935]
[156.53240967 283.47021484]
[167.30773926 295.05480957]
[162.79229736 309.24847412]
[177.71223450 307.52352905]
[192.73104858 307.64520264]
[207.62106323 309.61163330]
[222.15657043 313.39303589]
[236.11718750 318.93203735]
[249.29129028 326.14471436]
[261.47915649 334.92169189]
[272.49603271 345.12991333]
[282.17492676 356.61465454]
[290.36904907 369.20178223]
[296.95419312 382.70050049]
[301.83056641 396.90615845]
[304.92425537 411.60339355]
[306.18829346 426.56942749]
[305.60354614 441.57733154]
[303.17892456 456.39965820]
[298.95111084 470.81164551]
[292.98425293 484.59481812]
[285.36880493 497.54025269]
[276.22018433 509.45169067]
[265.67709351 520.14855957]
[253.89935303 529.46868896]
[241.06553650 537.27075195]
[227.37019348 543.43658447]
[213.02091980 547.87255859]
[198.23527527 550.51159668]
[183.23739624 551.31353760]
[168.25463867 550.26629639]
[153.51414490 547.38580322]
[139.23937988 542.71557617]
[125.64674377 536.32653809]
[112.94229126 528.31555176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 178]
[19 176]
[20 175]
[21 174]
[22 173]
[23 170]
[24 169]
[25 168]
[26 167]
[28 165]
[31 162]
[32 161]
[33 159]
[34 158]
[36 156]
[37 155]
[38 151]
[39 150]
[40 149]
[41 148]
[42 147]
[44 146]
[45 145]
[47 143]
[49 141]
[50 140]
[51 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
