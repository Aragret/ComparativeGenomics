%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[100.95623779 295.42016602]
[111.07621002 284.15673828]
[124.30629730 276.79171753]
[121.64050293 262.03048706]
[118.97470856 247.26928711]
[106.63021088 239.01405334]
[103.71643066 224.08204651]
[112.45898438 211.18997192]
[109.79318237 196.42875671]
[107.12738800 181.66754150]
[104.46159363 166.90632629]
[101.79579926 152.14511108]
[99.13000488 137.38389587]
[89.25398254 126.23429108]
[94.41555786 111.27873230]
[91.42078400 96.58072662]
[80.81912994 84.83698273]
[85.54537964 70.71212006]
[82.22311401 56.08465576]
[78.90085602 41.45719910]
[75.57859802 26.82973671]
[70.62621307 19.15434074]
[72.31748199 11.95980072]
[69.21337128 -2.71550179]
[66.10926056 -17.39080429]
[63.00515366 -32.06610489]
[59.90104294 -46.74140930]
[56.79693222 -61.41670990]
[46.37129974 -73.31699371]
[51.30732346 -87.36992645]
[48.20321274 -102.04523468]
[33.39757156 -99.62169647]
[18.49579811 -97.88452148]
[3.52969575 -96.83741760]
[-11.46879482 -96.48262024]
[-26.46766853 -96.82088470]
[-41.43491364 -97.85148621]
[-56.33859253 -99.57222748]
[-71.14690399 -101.97943878]
[-85.82823181 -105.06797791]
[-100.35125732 -108.83126068]
[-114.68498993 -113.26125336]
[-128.79882812 -118.34850311]
[-142.66267395 -124.08214569]
[-156.24690247 -130.44995117]
[-169.52256775 -137.43833923]
[-182.46131897 -145.03237915]
[-195.03553772 -153.21586609]
[-207.21839905 -161.97135925]
[-218.98390198 -171.28015137]
[-230.30693054 -181.12237549]
[-241.16334534 -191.47703552]
[-251.52993774 -202.32205200]
[-261.38464355 -213.63424683]
[-270.70635986 -225.38949585]
[-279.47525024 -237.56271362]
[-287.67257690 -250.12791443]
[-295.28085327 -263.05828857]
[-302.28384399 -276.32626343]
[-308.66659546 -289.90350342]
[-314.41549683 -303.76101685]
[-319.51824951 -317.86923218]
[-323.96401978 -332.19808960]
[-327.74328613 -346.71697998]
[-330.84799194 -361.39489746]
[-333.27148438 -376.20053101]
[-335.00863647 -391.10232544]
[-336.05569458 -406.06842041]
[-336.41046143 -421.06692505]
[-336.07217407 -436.06579590]
[-335.04153442 -451.03302002]
[-333.32077026 -465.93670654]
[-330.91351318 -480.74499512]
[-327.82495117 -495.42633057]
[-324.06164551 -509.94934082]
[-319.63162231 -524.28308105]
[-314.54434204 -538.39691162]
[-308.81066895 -552.26074219]
[-302.44284058 -565.84497070]
[-295.45443726 -579.12060547]
[-287.86035156 -592.05932617]
[-279.67684937 -604.63354492]
[-270.92132568 -616.81640625]
[-261.61251831 -628.58184814]
[-251.77026367 -639.90484619]
[-241.41557312 -650.76123047]
[-230.57054138 -661.12786865]
[-219.25833130 -670.98248291]
[-207.50305176 -680.30419922]
[-195.32981873 -689.07305908]
[-182.76460266 -697.27038574]
[-169.83419800 -704.87860107]
[-156.56622314 -711.88159180]
[-142.98898315 -718.26428223]
[-129.13145447 -724.01318359]
[-115.02320862 -729.11590576]
[-100.69435120 -733.56164551]
[-86.17546844 -737.34088135]
[-71.49753571 -740.44555664]
[-56.69188309 -742.86901855]
[-41.79010391 -744.60614014]
[-26.82399940 -745.65319824]
[-11.82550621 -746.00793457]
[3.17336559 -745.66961670]
[18.14060783 -744.63891602]
[33.04428101 -742.91815186]
[47.85257721 -740.51086426]
[62.53389740 -737.42224121]
[77.05690765 -733.65887451]
[91.39061737 -729.22888184]
[105.50444031 -724.14154053]
[119.36824799 -718.40783691]
[132.95246887 -712.03997803]
[146.22810364 -705.05157471]
[159.16680908 -697.45745850]
[171.74099731 -689.27392578]
[183.92382812 -680.51837158]
[195.68928528 -671.20953369]
[207.01228333 -661.36724854]
[217.86865234 -651.01251221]
[228.23519897 -640.16748047]
[238.08984375 -628.85528564]
[247.41152954 -617.09997559]
[256.18035889 -604.92669678]
[264.37762451 -592.36145020]
[271.98587036 -579.43103027]
[278.98880005 -566.16308594]
[285.37149048 -552.58581543]
[291.12033081 -538.72827148]
[296.22305298 -524.61999512]
[300.66876221 -510.29116821]
[304.44793701 -495.77224731]
[307.55258179 -481.09432983]
[309.97604370 -466.28866577]
[311.71310425 -451.38687134]
[312.76013184 -436.42077637]
[313.11483765 -421.42227173]
[312.77645874 -406.42340088]
[311.74578857 -391.45617676]
[310.02493286 -376.55249023]
[307.61764526 -361.74420166]
[304.52899170 -347.06289673]
[300.76562500 -332.53988647]
[296.33554077 -318.20617676]
[291.24822998 -304.09237671]
[285.51449585 -290.22857666]
[279.14660645 -276.64437866]
[272.15814209 -263.36877441]
[264.56399536 -250.43005371]
[256.38043213 -237.85589600]
[247.62487793 -225.67308044]
[238.31600952 -213.90763855]
[228.47370911 -202.58467102]
[218.11897278 -191.72831726]
[207.27391052 -181.36178589]
[195.96165466 -171.50717163]
[184.20634460 -162.18551636]
[172.03306580 -153.41670227]
[159.46780396 -145.21945190]
[146.53738403 -137.61125183]
[133.26937866 -130.60835266]
[119.69210815 -124.22568512]
[105.83455658 -118.47687531]
[91.72628784 -113.37418365]
[77.39741516 -108.92851257]
[62.87851715 -105.14934540]
[65.98262787 -90.47403717]
[76.18623352 -79.62342834]
[71.47223663 -64.52082062]
[74.57634735 -49.84552002]
[77.68045044 -35.17021561]
[80.78456116 -20.49491501]
[83.88867188 -5.81961203]
[86.99278259 8.85569000]
[90.20605469 23.50747681]
[93.52832031 38.13493729]
[96.85057831 52.76239777]
[100.17283630 67.38986206]
[110.53685760 78.08734894]
[106.04824066 93.25846863]
[108.98722076 95.75541687]
[110.81130981 99.53570557]
[110.97203827 104.07235718]
[109.17677307 108.61293793]
[119.24346924 120.81835175]
[113.89122009 134.71809387]
[116.55701447 149.47930908]
[119.22280884 164.24052429]
[121.88861084 179.00173950]
[124.55440521 193.76295471]
[127.22019958 208.52418518]
[139.91989136 217.54389954]
[142.41311646 232.55184937]
[133.73593140 244.60348511]
[136.40171814 259.36471558]
[139.06752014 274.12591553]
[154.03802490 276.39807129]
[167.45846558 283.41021729]
[177.87310791 294.40176392]
[184.15222168 308.18041992]
[185.61473083 323.25158691]
[182.10195923 337.98043823]
[173.99496460 350.76931763]
[162.17312622 360.23095703]
[147.91879272 365.33908081]
[132.77816772 365.53955078]
[118.39359283 360.81060791]
[106.32539368 351.66528320]
[97.88264465 339.09552002]
[93.98114777 324.46481323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[15 184]
[16 180]
[18 178]
[19 177]
[20 176]
[21 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[30 167]
[31 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
