%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[1.69291270 606.59014893]
[-9.95841408 616.04675293]
[-22.23440361 624.67694092]
[-35.07655334 632.43969727]
[-48.42366791 639.29791260]
[-62.21213531 645.21893311]
[-76.37625122 650.17462158]
[-90.84851074 654.14123535]
[-105.55995941 657.09997559]
[-120.44047546 659.03668213]
[-135.41915894 659.94219971]
[-150.42460632 659.81207275]
[-165.38534546 658.64703369]
[-180.23004150 656.45263672]
[-194.88798523 653.23931885]
[-209.28929138 649.02233887]
[-223.36537170 643.82189941]
[-237.04910278 637.66265869]
[-250.27531433 630.57409668]
[-262.98095703 622.58984375]
[-275.10546875 613.74810791]
[-286.59109497 604.09094238]
[-297.38308716 593.66436768]
[-307.43002319 582.51806641]
[-316.68402100 570.70520020]
[-325.10098267 558.28198242]
[-332.64077759 545.30773926]
[-339.26751709 531.84417725]
[-344.94958496 517.95550537]
[-349.65991211 503.70794678]
[-353.37606812 489.16934204]
[-356.08032227 474.40899658]
[-357.75979614 459.49725342]
[-358.40649414 444.50518799]
[-358.01730347 429.50421143]
[-356.59411621 414.56582642]
[-354.14370728 399.76123047]
[-350.67773438 385.16094971]
[-346.21273804 370.83459473]
[-340.76998901 356.85043335]
[-334.37539673 343.27508545]
[-327.05947876 330.17324829]
[-318.85705566 317.60739136]
[-309.80725098 305.63735962]
[-299.95318604 294.32019043]
[-289.34182739 283.70986938]
[-278.02371216 273.85690308]
[-266.05279541 264.80825806]
[-253.48611450 256.60705566]
[-240.38357544 249.29241943]
[-226.80760193 242.89915466]
[-212.82290649 237.45776367]
[-198.49612427 232.99414062]
[-183.89550781 229.52960205]
[-169.09068298 227.08062744]
[-154.15216064 225.65888977]
[-139.15115356 225.27117920]
[-124.15913391 225.91932678]
[-109.24755096 227.60025024]
[-94.48747253 230.30593872]
[-79.94923401 234.02351379]
[-65.70211792 238.73522949]
[-51.81401825 244.41865540]
[-38.35111618 251.04669189]
[-25.37756920 258.58776855]
[-16.96295166 246.17027283]
[-8.54833221 233.75277710]
[-8.85105133 230.23983765]
[-7.46728754 226.40574646]
[-4.26463032 223.04475403]
[0.52960986 220.98020935]
[9.49030590 208.95083618]
[18.45100212 196.92146301]
[27.41169739 184.89207458]
[28.80971909 170.06323242]
[43.25865555 163.61816406]
[52.21935272 151.58879089]
[61.18004608 139.55941772]
[70.14074707 127.53003693]
[79.10144043 115.50065613]
[73.98048401 100.07010651]
[79.01821136 84.61218262]
[92.24777985 75.16206360]
[108.50400543 75.40930939]
[117.28460693 63.24785233]
[119.08974457 47.52996445]
[132.81307983 41.74036407]
[141.59367371 29.57890892]
[144.07994080 20.78934860]
[150.59664917 17.30306244]
[159.55734253 5.27368546]
[168.51803589 -6.75569201]
[157.32000732 -16.75076675]
[147.04916382 -27.69642067]
[137.78588867 -39.50698853]
[129.60270691 -52.09003830]
[122.56363678 -65.34708405]
[116.72379303 -79.17436218]
[112.12886810 -93.46366882]
[108.81481934 -108.10316467]
[106.80760193 -122.97826385]
[106.12290192 -137.97256470]
[106.76609802 -152.96868896]
[108.73215485 -167.84928894]
[112.00566864 -182.49789429]
[116.56103516 -196.79986572]
[122.36259460 -210.64326477]
[129.36494446 -223.91972351]
[137.51327515 -236.52537537]
[146.74382019 -248.36152649]
[156.98434448 -259.33557129]
[168.15467834 -269.36160278]
[180.16741943 -278.36114502]
[192.92852783 -286.26376343]
[206.33815002 -293.00762939]
[220.29132080 -298.53997803]
[234.67883301 -302.81744385]
[249.38810730 -305.80661011]
[264.30398560 -307.48403931]
[279.30978394 -307.83663940]
[294.28799438 -306.86163330]
[309.12142944 -304.56665039]
[323.69396973 -300.96966553]
[337.89160156 -296.09881592]
[351.60317993 -289.99221802]
[364.72137451 -282.69769287]
[377.14355469 -274.27230835]
[388.77246094 -264.78201294]
[399.51712036 -254.30107117]
[409.29342651 -242.91152954]
[418.02484131 -230.70251465]
[425.64303589 -217.76957703]
[432.08840942 -204.21395874]
[437.31048584 -190.14173889]
[441.26843262 -175.66305542]
[443.93124390 -160.89122009]
[445.27807617 -145.94184875]
[445.29840088 -130.93194580]
[443.99206543 -115.97898102]
[441.36929321 -101.19998932]
[437.45059204 -86.71063995]
[432.26663208 -72.62432098]
[425.85800171 -59.05128860]
[418.27487183 -46.09777451]
[409.57656860 -33.86515427]
[399.83114624 -22.44916725]
[389.11492920 -11.93916321]
[377.51174927 -2.41739607]
[365.11245728 6.04161072]
[352.01403809 13.37165260]
[338.31906128 19.51536179]
[324.13470459 24.42465401]
[309.57192993 28.06110764]
[294.74478149 30.39625931]
[279.76925659 31.41183662]
[264.76257324 31.09988785]
[249.84220886 29.46285629]
[235.12489319 26.51355553]
[220.72584534 22.27506447]
[206.75773621 16.78055763]
[193.32989502 10.07303905]
[180.54742432 2.20500398]
[171.58673096 14.23438168]
[162.62602234 26.26375961]
[153.75512695 38.35951233]
[144.97453308 50.52096558]
[143.79743958 65.36898804]
[129.44606018 72.02845764]
[120.66545868 84.18991089]
[125.76964569 96.40203094]
[124.20557404 109.54517365]
[116.37796783 120.21836853]
[104.31233215 125.65977478]
[91.13081360 124.46135712]
[82.17012024 136.49073792]
[73.20942688 148.52011108]
[64.24872589 160.54948425]
[55.28803253 172.57885742]
[53.24908447 188.26814270]
[39.44107437 193.85276794]
[30.48037910 205.88215637]
[21.51968384 217.91152954]
[12.55898762 229.94090271]
[3.86916304 242.16738892]
[-4.54545546 254.58488464]
[-12.96007442 267.00238037]
[-1.14783525 276.25720215]
[9.99775410 286.30490112]
[20.42358017 297.09762573]
[30.07995987 308.58392334]
[38.92087555 320.70907593]
[46.90419006 333.41525269]
[53.99186707 346.64196777]
[60.15012741 360.32611084]
[65.34962463 374.40255737]
[69.56557465 388.80416870]
[72.77789307 403.46234131]
[74.97127533 418.30718994]
[76.13525391 433.26800537]
[76.26429749 448.27346802]
[75.35778046 463.25207520]
[73.42003632 478.13244629]
[70.46028137 492.84368896]
[66.49263000 507.31567383]
[61.53599167 521.47943115]
[55.61398315 535.26751709]
[48.75482559 548.61413574]
[40.99121094 561.45574951]
[32.36013412 573.73114014]
[22.90272522 585.38183594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 186]
[66 185]
[67 184]
[71 183]
[72 182]
[73 181]
[74 180]
[76 178]
[77 177]
[78 176]
[79 175]
[80 174]
[84 169]
[85 168]
[87 166]
[88 165]
[90 164]
[91 163]
[92 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
