%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[111.33645630 442.56942749]
[99.16940308 451.37658691]
[85.99443054 458.58929443]
[72.01933289 464.09384155]
[57.46452332 467.80337524]
[42.55954361 469.65942383]
[27.53947449 469.63269043]
[12.64119911 467.72360229]
[-1.90031457 463.96224976]
[-15.85572529 458.40802002]
[-29.00493622 451.14843750]
[-41.14056396 442.29803467]
[-52.07121658 431.99636841]
[-61.62449646 420.40594482]
[-69.64973450 407.70953369]
[-76.02037048 394.10739136]
[-80.63591766 379.81402588]
[-83.42359161 365.05490112]
[-84.33942413 350.06274414]
[-83.36896515 335.07403564]
[-80.52752686 320.32516479]
[-75.85992432 306.04870605]
[-69.43976593 292.46987915]
[-61.36831284 279.80279541]
[-51.77285767 268.24725342]
[-40.80474091 257.98550415]
[-28.63694000 249.17938232]
[-15.46136189 241.96775818]
[-1.48580396 236.46440125]
[13.06931973 232.75608826]
[27.97445297 230.90130615]
[42.99452209 230.92929077]
[57.89263535 232.83964539]
[61.64893723 218.31758118]
[65.40523529 203.79551697]
[69.16153717 189.27346802]
[72.91783905 174.75140381]
[76.67414093 160.22933960]
[80.43044281 145.70729065]
[84.18674469 131.18522644]
[79.88313293 116.92590332]
[90.82974243 105.50302124]
[92.83375549 90.63748932]
[93.05708313 75.63915253]
[93.28041077 60.64081573]
[93.50373840 45.64247894]
[93.72706604 30.64414024]
[93.95039368 15.64580250]
[94.17372131 0.64746505]
[94.39704895 -14.35087204]
[94.62037659 -29.34920883]
[80.21257019 -33.85420609]
[67.67061615 -42.22807693]
[58.00621033 -53.78507996]
[51.99601364 -67.58311462]
[50.11927795 -82.50054932]
[52.51961136 -97.32736969]
[58.99405289 -110.86333466]
[69.01018524 -122.01514435]
[81.74991608 -129.88475037]
[96.17629242 -133.84162903]
[96.39962006 -148.83996582]
[96.62294769 -163.83830261]
[96.84627533 -178.83663940]
[97.06960297 -193.83497620]
[82.12387085 -195.19236755]
[67.32360077 -197.67619324]
[52.75356674 -201.27223206]
[38.49723053 -205.95989990]
[24.63624573 -211.71234131]
[11.25001335 -218.49659729]
[-1.58479381 -226.27381897]
[-13.79465771 -234.99945068]
[-25.30964088 -244.62350464]
[-36.06378555 -255.09088135]
[-45.99549103 -266.34158325]
[-55.04787064 -278.31121826]
[-63.16907120 -290.93118286]
[-70.31257629 -304.12921143]
[-76.43746185 -317.82968140]
[-81.50865936 -331.95413208]
[-85.49710083 -346.42166138]
[-88.37995911 -361.14941406]
[-90.14070892 -376.05300903]
[-90.76927185 -391.04708862]
[-90.26204681 -406.04577637]
[-88.62193298 -420.96310425]
[-85.85832977 -435.71371460]
[-81.98706818 -450.21304321]
[-77.03031921 -464.37808228]
[-71.01647949 -478.12765503]
[-63.97999191 -491.38302612]
[-55.96116257 -504.06829834]
[-47.00592422 -516.11077881]
[-37.16556931 -527.44146729]
[-26.49646759 -537.99548340]
[-15.05972672 -547.71240234]
[-2.92086005 -556.53656006]
[9.85060310 -564.41735840]
[23.18150902 -571.30969238]
[36.99549484 -577.17407227]
[51.21343994 -581.97692871]
[65.75389862 -585.69073486]
[80.53359222 -588.29425049]
[95.46784973 -589.77252197]
[110.47113800 -590.11706543]
[125.45751953 -589.32598877]
[140.34114075 -587.40368652]
[155.03675842 -584.36132812]
[169.46020508 -580.21624756]
[183.52883911 -574.99218750]
[197.16210938 -568.71911621]
[210.28189087 -561.43292236]
[222.81304932 -553.17535400]
[234.68380737 -543.99371338]
[245.82617188 -533.94055176]
[256.17630005 -523.07354736]
[265.67492676 -511.45489502]
[274.26766968 -499.15112305]
[281.90524292 -486.23275757]
[288.54394531 -472.77374268]
[294.14575195 -458.85119629]
[298.67855835 -444.54486084]
[302.11639404 -429.93670654]
[304.43960571 -415.11035156]
[305.63482666 -400.15078735]
[305.69528198 -385.14367676]
[304.62057495 -370.17495728]
[302.41687012 -355.33038330]
[299.09677124 -340.69500732]
[294.67935181 -326.35263062]
[289.18988037 -312.38543701]
[282.65979004 -298.87338257]
[275.12649536 -285.89389038]
[266.63314819 -273.52133179]
[257.22839355 -261.82653809]
[246.96611023 -250.87651062]
[235.90509033 -240.73397827]
[224.10867310 -231.45703125]
[211.64442444 -223.09880066]
[198.58374023 -215.70716858]
[185.00144958 -209.32447815]
[170.97534180 -203.98728943]
[156.58575439 -199.72616577]
[141.91511536 -196.56550598]
[127.04745483 -194.52343750]
[112.06793976 -193.61164856]
[111.84461212 -178.61331177]
[111.62128448 -163.61497498]
[111.39795685 -148.61663818]
[111.17462921 -133.61830139]
[125.47679901 -129.23364258]
[137.97657776 -120.98822021]
[147.65623474 -109.54313660]
[153.72477722 -95.82040405]
[155.68260193 -80.92869568]
[153.36254883 -66.07375336]
[146.94419861 -52.46077728]
[136.93998718 -41.19664383]
[124.15427399 -33.19990540]
[109.61872101 -29.12588120]
[109.39539337 -14.12754440]
[109.17206573 0.87079275]
[108.94873810 15.86913013]
[108.72541046 30.86746788]
[108.50208282 45.86580658]
[108.27874756 60.86414337]
[108.05541992 75.86248016]
[107.83209229 90.86081696]
[115.28473663 77.84320831]
[126.69541931 68.10686493]
[140.72361755 62.79560471]
[155.72132874 62.53338623]
[169.92662048 67.35101318]
[181.67068481 76.68252563]
[189.57383728 89.43164825]
[192.70761108 104.10064697]
[190.70385742 118.96620941]
[183.79798889 132.28195190]
[172.80128479 142.48355103]
[159.00563049 148.37252808]
[144.03173828 149.25706482]
[129.63871765 145.03323364]
[117.51743317 136.19725037]
[109.09189606 123.78715515]
[105.35180664 109.25931549]
[109.38673401 124.55735779]
[98.70880127 134.94152832]
[94.95249939 149.46359253]
[91.19619751 163.98564148]
[87.43989563 178.50770569]
[83.68360138 193.02976990]
[79.92729950 207.55181885]
[76.17099762 222.07388306]
[72.41469574 236.59594727]
[86.37057495 242.14901733]
[99.52039337 249.40750122]
[111.65676880 258.25689697]
[122.58828735 268.55761719]
[132.14254761 280.14724731]
[140.16885376 292.84298706]
[146.54063416 306.44458008]
[151.15737915 320.73754883]
[153.94630432 335.49645996]
[154.86338806 350.48852539]
[153.89419556 365.47732544]
[151.05400085 380.22644043]
[146.38758850 394.50326538]
[139.96858215 408.08264160]
[131.89819336 420.75039673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 195]
[34 194]
[35 193]
[36 192]
[37 191]
[38 190]
[39 189]
[40 188]
[42 186]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
