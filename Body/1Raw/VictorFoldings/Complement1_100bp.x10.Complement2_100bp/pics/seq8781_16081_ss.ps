%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[172.97204590 406.77474976]
[183.88307190 396.39382935]
[196.77082825 388.60153198]
[191.94482422 374.39907837]
[187.11883545 360.19662476]
[175.69813538 350.63540649]
[178.58407593 335.07962036]
[164.78234863 324.24084473]
[168.51931763 306.20986938]
[163.48239136 292.08084106]
[149.52082825 281.44873047]
[152.98892212 263.36410522]
[147.74220276 249.31163025]
[142.49548340 235.25915527]
[128.88038635 229.32919312]
[123.35928345 215.15272522]
[129.67147827 200.91215515]
[124.42476654 186.85969543]
[119.17804718 172.80722046]
[113.93132782 158.75474548]
[108.68460846 144.70227051]
[103.43788910 130.64981079]
[89.93291473 129.15275574]
[78.38187408 121.99741364]
[71.02672577 110.57255554]
[69.29504395 97.09565735]
[73.52292633 84.18246460]
[82.88978577 74.33932495]
[77.85287476 60.21029282]
[72.81595612 46.08126450]
[67.77903748 31.95223427]
[62.74212265 17.82320595]
[50.82006836 7.42247820]
[53.83435822 -7.16393089]
[48.79743958 -21.29296112]
[43.76052475 -35.42198944]
[37.93115616 -42.45450592]
[38.75550461 -49.79904175]
[33.92950821 -64.00149536]
[29.10350990 -78.20395660]
[25.46251869 -63.65255737]
[15.93518829 -52.06679153]
[2.36109591 -45.68368530]
[-12.63881397 -45.73572159]
[-26.16829300 -52.21284866]
[-35.61501312 -63.86443710]
[-39.15495682 -78.44075012]
[-36.10461807 -93.12731934]
[-27.05297279 -105.08840942]
[-13.74774742 -112.01451874]
[1.24202573 -112.56832123]
[15.02205658 -106.64289093]
[24.93224907 -95.38121033]
[22.70713043 -110.21525574]
[20.48201370 -125.04930115]
[18.25689697 -139.88334656]
[16.03178024 -154.71739197]
[13.80666256 -169.55142212]
[11.58154583 -184.38546753]
[6.35113668 -170.32691956]
[-3.31935048 -158.86038208]
[-16.29383659 -151.33291626]
[-31.04809189 -148.62884521]
[-45.84880066 -151.06585693]
[-58.95719147 -158.35763550]
[-68.83330536 -169.64756775]
[-74.31690216 -183.60929871]
[-74.76377106 -198.60264587]
[-70.12142944 -212.86619568]
[-60.93523788 -224.72425842]
[-48.28439331 -232.78379822]
[-33.65509796 -236.09796143]
[-18.76598549 -234.27742004]
[-5.36621904 -227.53602600]
[4.97001314 -216.66578674]
[11.02879810 -202.94216919]
[12.36703205 -217.88235474]
[13.70526695 -232.82254028]
[14.82091522 -247.78099060]
[15.71373081 -262.75439453]
[16.60654640 -277.72781372]
[17.49936295 -292.70120239]
[18.39217949 -307.67462158]
[3.62876797 -310.43957520]
[-10.67167282 -315.03311157]
[-24.28360748 -321.38278198]
[-36.99235153 -329.38848877]
[-48.59747696 -338.92391968]
[-58.91594696 -349.83868408]
[-67.78502655 -361.96069336]
[-75.06484222 -375.09869385]
[-80.64057159 -389.04553223]
[-84.42428589 -403.58123779]
[-86.35630798 -418.47656250]
[-86.40615845 -433.49658203]
[-84.57306671 -448.40438843]
[-80.88594055 -462.96490479]
[-75.40291595 -476.94845581]
[-68.21047974 -490.13452148]
[-59.42207336 -502.31512451]
[-49.17628860 -513.29815674]
[-37.63472366 -522.91040039]
[-24.97940636 -531.00030518]
[-11.40992546 -537.44018555]
[2.85970521 -542.12860107]
[17.60443497 -544.99145508]
[32.59171677 -545.98376465]
[47.58518219 -545.08972168]
[62.34835815 -542.32354736]
[76.64841461 -537.72882080]
[90.25981140 -531.37799072]
[102.96788788 -523.37121582]
[114.57220459 -513.83477783]
[124.88975525 -502.91915894]
[133.75781250 -490.79641724]
[141.03652954 -477.65777588]
[146.61108398 -463.71047974]
[150.39356995 -449.17443848]
[152.32434082 -434.27896118]
[152.37292480 -419.25894165]
[150.53858948 -404.35128784]
[146.85021973 -389.79110718]
[141.36602783 -375.80801392]
[134.17248535 -362.62255859]
[125.38304901 -350.44268799]
[115.13634491 -339.46051025]
[103.59397125 -329.84921265]
[90.93796539 -321.76040649]
[77.36795044 -315.32165527]
[63.09791946 -310.63446045]
[48.35295105 -307.77279663]
[33.36558533 -306.78179932]
[32.47276688 -291.80841064]
[31.57995224 -276.83499146]
[30.68713760 -261.86160278]
[29.79432106 -246.88818359]
[32.23810577 -242.78489685]
[32.13017273 -237.10287476]
[28.64545250 -231.48431396]
[27.30721664 -216.54412842]
[25.96898270 -201.60394287]
[26.41558838 -186.61059570]
[28.64070702 -171.77655029]
[30.86582375 -156.94250488]
[33.09094238 -142.10845947]
[35.31605911 -127.27441406]
[37.54117584 -112.44036865]
[39.76629257 -97.60633087]
[43.30596542 -83.02995300]
[48.13196182 -68.82749939]
[52.95795822 -54.62504196]
[57.88955307 -40.45890427]
[62.92646790 -26.32987595]
[67.96338654 -12.20084667]
[79.52516937 -2.81072259]
[76.87115479 12.78628922]
[81.90807343 26.91531944]
[86.94498444 41.04434967]
[91.98190308 55.17337799]
[97.01882172 69.30240631]
[112.86483765 71.96920013]
[125.21873474 82.24486542]
[130.72709656 97.34009552]
[127.89469147 113.15734863]
[117.49036407 125.40308380]
[122.73708344 139.45555115]
[127.98380280 153.50802612]
[133.23051453 167.56050110]
[138.47723389 181.61297607]
[143.72395325 195.66543579]
[157.82447815 202.28459167]
[162.94520569 216.61053467]
[156.54795837 230.01243591]
[161.79467773 244.06491089]
[167.04139709 258.11737061]
[178.43034363 264.17172241]
[182.51104736 275.98406982]
[177.61141968 287.04391479]
[182.64834595 301.17294312]
[193.94587708 307.39614868]
[197.85026550 319.26794434]
[192.78652954 330.25363159]
[204.55241394 340.83071899]
[201.32128906 355.37063599]
[206.14727783 369.57308960]
[210.97328186 383.77554321]
[225.94042969 382.10272217]
[240.91722107 383.68698120]
[255.20315552 388.45416260]
[268.13006592 396.18136597]
[279.09329224 406.50711060]
[287.58010864 418.94848633]
[293.19357300 432.92358398]
[295.67111206 447.77874756]
[294.89685059 462.81918335]
[290.90701294 477.34143066]
[283.88821411 490.66622925]
[274.16870117 502.17037964]
[262.20312500 511.31579590]
[248.55108643 517.67474365]
[233.85115051 520.94976807]
[218.79086304 520.98779297]
[204.07458496 517.78692627]
[190.39065552 511.49688721]
[178.37908936 502.41195679]
[168.60169983 490.95697021]
[161.51576233 477.66775513]
[157.45272827 463.16583252]
[156.60261536 448.12948608]
[159.00518799 433.26202393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[7 182]
[9 179]
[10 178]
[12 175]
[13 174]
[14 173]
[17 170]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[28 160]
[29 159]
[30 158]
[31 157]
[32 156]
[34 154]
[35 153]
[36 152]
[38 151]
[39 150]
[40 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[76 141]
[77 140]
[78 139]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
