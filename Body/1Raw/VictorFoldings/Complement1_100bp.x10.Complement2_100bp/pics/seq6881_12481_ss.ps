%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[98.49645233 708.33062744]
[85.35450745 701.07769775]
[72.92656708 692.65979004]
[61.31560898 683.14660645]
[50.61784363 672.61694336]
[40.92192841 661.15814209]
[32.30819702 648.86511230]
[24.84803200 635.83972168]
[18.60325432 622.18988037]
[13.62560654 608.02868652]
[9.95633888 593.47357178]
[7.62585497 578.64508057]
[6.65346766 563.66613770]
[7.04723406 548.66076660]
[8.80389118 533.75341797]
[11.90888214 519.06756592]
[16.33647728 504.72491455]
[22.04998970 490.84432983]
[29.00207138 477.54080200]
[37.13511658 464.92459106]
[46.38172913 453.10021973]
[56.66528702 442.16571045]
[67.90058136 432.21163940]
[79.99449921 423.32049561]
[92.84683228 415.56597900]
[106.35108185 409.01229858]
[120.39534760 403.71383667]
[134.86323547 399.71441650]
[132.19744873 384.95318604]
[129.53164673 370.19198608]
[125.24945068 364.16830444]
[126.93775940 355.19125366]
[124.49203491 340.39199829]
[122.04631042 325.59271240]
[119.60057831 310.79345703]
[117.15485382 295.99417114]
[112.96281433 289.90740967]
[114.78459167 280.95648193]
[112.55947113 266.12243652]
[109.31945038 262.61370850]
[108.24920654 257.03234863]
[110.49578857 250.81427002]
[108.71332550 235.92054749]
[106.93085480 221.02684021]
[105.14839172 206.13311768]
[103.36592102 191.23939514]
[94.17105103 179.52174377]
[100.21363831 164.89991760]
[98.43117523 150.00619507]
[84.40853882 147.53932190]
[71.64862823 141.22233582]
[61.18484116 131.56683350]
[53.86461639 119.35478210]
[50.28080750 105.57523346]
[50.72365952 91.34415436]
[55.15730667 77.81410217]
[63.22267914 66.08083344]
[74.26657104 57.09461594]
[87.39456177 51.58322144]
[85.83404541 36.66461945]
[84.27352142 21.74601364]
[82.71299744 6.82740879]
[81.15247345 -8.09119606]
[73.10970306 4.57031631]
[59.54344940 10.97005844]
[44.65735626 9.12500000]
[33.06404495 -0.39314750]
[28.35582924 -14.63508224]
[31.99160004 -29.18778610]
[42.84477234 -39.54194260]
[57.55237961 -42.48920822]
[71.55709839 -37.11634064]
[80.51951599 -25.08793449]
[80.96612549 -40.08128357]
[81.41272736 -55.07463455]
[81.52439880 -70.07421875]
[81.30107117 -85.07255554]
[81.07774353 -100.07089233]
[78.39927673 -104.55117035]
[77.77011108 -109.15089417]
[78.89258575 -113.06945801]
[81.19439697 -115.74040985]
[81.64099884 -130.73376465]
[81.97597504 -145.73002625]
[82.19930267 -160.72836304]
[72.85986328 -176.59834290]
[82.44055939 -191.30131531]
[82.44055939 -206.30131531]
[82.44055939 -221.30131531]
[82.44055939 -236.30131531]
[82.44055939 -251.30131531]
[82.44055939 -266.30130005]
[67.75196838 -269.64694214]
[54.17635345 -276.17764282]
[42.39465714 -285.56591797]
[32.99784088 -297.34078979]
[26.45724678 -310.91165161]
[23.10095024 -325.59780884]
[23.09729958 -340.66256714]
[26.44647980 -355.35034180]
[32.98049545 -368.92437744]
[42.37160492 -380.70382690]
[54.14875031 -390.09777832]
[67.72119904 -396.63507080]
[82.40816498 -399.98782349]
[97.47294617 -399.98782349]
[112.15991211 -396.63507080]
[125.73236084 -390.09777832]
[137.50950623 -380.70382690]
[146.90061951 -368.92437744]
[153.43463135 -355.35034180]
[156.78381348 -340.66256714]
[156.78016663 -325.59780884]
[153.42387390 -310.91165161]
[146.88327026 -297.34078979]
[137.48645020 -285.56591797]
[125.70475769 -276.17764282]
[112.12914276 -269.64694214]
[97.44055939 -266.30130005]
[97.44055939 -251.30131531]
[97.44055939 -236.30131531]
[97.44055939 -221.30131531]
[97.44055939 -206.30131531]
[97.44055939 -191.30131531]
[105.76951599 -182.52890015]
[105.89227295 -170.03216553]
[97.19763947 -160.50503540]
[96.97431183 -145.50669861]
[100.01788330 -138.77182007]
[96.63435364 -130.28715515]
[96.18774414 -115.29380798]
[96.07608032 -100.29421997]
[96.29940796 -85.29588318]
[96.52273560 -70.29754639]
[98.78452301 -67.59261322]
[99.84852600 -63.65777969]
[99.15095520 -59.06793213]
[96.40608215 -54.62802887]
[95.95947266 -39.63467789]
[95.51287079 -24.64132881]
[96.07107544 -9.65171909]
[97.63159943 5.26688623]
[99.19212341 20.18549156]
[100.75264740 35.10409546]
[102.31317139 50.02270126]
[117.63505554 53.18027878]
[131.23272705 60.91550446]
[141.77673340 72.47208405]
[148.23614502 86.72010803]
[149.97943115 102.26654053]
[146.83615112 117.59136200]
[139.11361694 131.19624329]
[127.56688690 141.75102234]
[113.32489014 148.22373962]
[115.10735321 163.11744690]
[124.42972565 175.90040588]
[118.25964355 189.45693970]
[120.04210663 204.35064697]
[121.82456970 219.24436951]
[123.60704041 234.13809204]
[125.38950348 249.03179932]
[127.39351654 263.89733887]
[129.61863708 278.73138428]
[131.95411682 293.54843140]
[134.39985657 308.34771729]
[136.84558105 323.14697266]
[139.29130554 337.94625854]
[141.73703003 352.74551392]
[144.29286194 367.52618408]
[146.95866394 382.28738403]
[149.62445068 397.04861450]
[164.57734680 395.73480225]
[179.58776855 395.78616333]
[194.53132629 397.20230103]
[209.28417969 399.97149658]
[223.72410583 404.07077026]
[237.73141479 409.46615601]
[251.19006348 416.11294556]
[263.98852539 423.95608521]
[276.02072144 432.93057251]
[287.18698120 442.96203613]
[297.39474487 453.96731567]
[306.55944824 465.85528564]
[314.60513306 478.52737427]
[321.46514893 491.87863159]
[327.08261108 505.79837036]
[331.41104126 520.17126465]
[334.41448975 534.87823486]
[336.06811523 549.79736328]
[336.35818481 564.80505371]
[335.28234863 579.77697754]
[332.84948730 594.58898926]
[329.07974243 609.11840820]
[324.00436401 623.24487305]
[317.66543579 636.85119629]
[310.11547852 649.82476807]
[301.41702271 662.05798340]
[291.64215088 673.44958496]
[280.87191772 683.90502930]
[269.19549561 693.33776855]
[256.70968628 701.66961670]
[243.51795959 708.83160400]
[229.72959900 714.76422119]
[215.45889282 719.41845703]
[200.82406616 722.75567627]
[185.94639587 724.74829102]
[170.94917297 725.37969971]
[155.95668030 724.64465332]
[141.09313965 722.54937744]
[126.48171234 719.11108398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 171]
[29 170]
[30 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[38 163]
[39 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[48 155]
[49 154]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[73 140]
[74 139]
[75 138]
[76 134]
[77 133]
[78 132]
[82 131]
[83 130]
[84 128]
[85 127]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
