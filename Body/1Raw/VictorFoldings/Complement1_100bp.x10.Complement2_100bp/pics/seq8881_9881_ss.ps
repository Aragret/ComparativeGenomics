%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[79.91646576 690.72515869]
[64.92509460 691.49542236]
[49.92746735 690.85845947]
[35.05538940 688.81988525]
[20.43955612 685.39764404]
[6.20841599 680.62176514]
[-7.51296377 674.53417969]
[-20.60399628 667.18847656]
[-32.94963455 658.64923096]
[-44.44138718 648.99133301]
[-54.97825241 638.29980469]
[-64.46763611 626.66857910]
[-72.82614899 614.19982910]
[-79.98032379 601.00311279]
[-85.86728668 587.19451904]
[-90.43531799 572.89526367]
[-93.64425659 558.23114014]
[-95.46590424 543.33093262]
[-95.88425446 528.32562256]
[-94.89563751 513.34704590]
[-92.50872803 498.52691650]
[-88.74451447 483.99539185]
[-83.63607025 469.88021851]
[-77.22829437 456.30541992]
[-69.57749176 443.39031982]
[-60.75091171 431.24841309]
[-50.82611847 419.98641968]
[-39.89032745 409.70327759]
[-28.03965378 400.48934937]
[-15.37823963 392.42565918]
[-2.01735663 385.58306885]
[11.92557621 380.02166748]
[26.32802391 375.79037476]
[41.06341934 372.92633057]
[56.00225830 371.45474243]
[71.01325226 371.38854980]
[72.35148621 356.44836426]
[73.68972015 341.50817871]
[63.97194290 330.27871704]
[65.11627197 315.10818481]
[76.96063232 304.99142456]
[78.29886627 290.05123901]
[79.63710022 275.11105347]
[80.97533417 260.17086792]
[82.31356812 245.23069763]
[83.65180206 230.29051208]
[84.99003601 215.35032654]
[86.32826996 200.41014099]
[87.66650391 185.46995544]
[89.00473785 170.52976990]
[90.00899506 155.56341553]
[82.84771729 142.50335693]
[91.19351196 129.06243896]
[91.86329651 114.07740021]
[83.75152588 99.39491272]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[93.82607269 55.36971283]
[94.27268219 40.37636566]
[78.10767365 32.54970932]
[67.02892303 18.48114777]
[63.23318863 1.03522527]
[67.44027710 -16.26155663]
[78.75708771 -29.93357468]
[94.86672211 -37.25447083]
[94.64339447 -52.25280762]
[94.42006683 -67.25114441]
[84.71422577 -55.81450653]
[70.16745758 -52.15507126]
[56.20534134 -57.63771439]
[48.03540802 -70.21754456]
[48.70483780 -85.20259857]
[57.96394730 -97.00382233]
[72.35932159 -101.21965027]
[86.52184296 -96.27767944]
[95.16958618 -84.02003479]
[96.73011017 -98.93863678]
[98.29063416 -113.85724640]
[99.85115051 -128.77584839]
[101.41167450 -143.69445801]
[102.97219849 -158.61305237]
[104.53272247 -173.53166199]
[106.09324646 -188.45027161]
[107.65377045 -203.36886597]
[100.15286255 -213.86169434]
[101.75975037 -226.25529480]
[111.07212830 -233.97581482]
[112.85459900 -248.86952209]
[114.63706207 -263.76324463]
[100.14727783 -267.75122070]
[86.41375732 -273.85430908]
[73.74329376 -281.93621826]
[62.41897202 -291.81637573]
[52.69376373 -303.27401733]
[44.78494263 -316.05325317]
[38.86919403 -329.86849976]
[35.07867432 -344.41119385]
[33.49806976 -359.35641479]
[34.16268539 -374.37026978]
[37.05768204 -389.11734009]
[42.11837769 -403.26821899]
[49.23171616 -416.50671387]
[58.23878098 -428.53710938]
[68.93835449 -439.09063721]
[81.09140778 -447.93151855]
[94.42642975 -454.86224365]
[108.64550781 -459.72796631]
[123.43099213 -462.42001343]
[138.45257568 -462.87820435]
[153.37464905 -461.09234619]
[167.86386108 -457.10232544]
[181.59651184 -450.99725342]
[194.26582336 -442.91354370]
[205.58874512 -433.03179932]
[215.31231689 -421.57275391]
[223.21931458 -408.79241943]
[229.13310242 -394.97628784]
[232.92153931 -380.43307495]
[234.50001526 -365.48764038]
[233.83326721 -350.47387695]
[230.93617249 -335.72720337]
[225.87345886 -321.57705688]
[218.75823975 -308.33956909]
[209.74945068 -296.31045532]
[199.04838562 -285.75845337]
[186.89407349 -276.91931152]
[173.55805969 -269.99047852]
[159.33828735 -265.12677002]
[144.55241394 -262.43685913]
[129.53077698 -261.98077393]
[127.74831390 -247.08706665]
[125.96584320 -232.19334412]
[133.73149109 -216.45606995]
[122.57237244 -201.80834961]
[121.01184845 -186.88973999]
[119.45132446 -171.97114563]
[117.89080811 -157.05253601]
[116.33028412 -142.13392639]
[114.76976013 -127.21532440]
[113.20923615 -112.29672241]
[111.64871216 -97.37811279]
[110.08818817 -82.45951080]
[109.41840363 -67.47447205]
[109.64173126 -52.47613525]
[109.86505890 -37.47779846]
[121.45264435 -33.55525970]
[131.29771423 -26.25242805]
[138.44187927 -16.26155663]
[142.18394470 -4.53745842]
[142.14874268 7.79373884]
[138.32466125 19.54275322]
[131.06623840 29.57185555]
[121.06135559 36.90503311]
[109.26602936 40.82297134]
[108.81941986 55.81631851]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[115.38739014 94.74573517]
[114.95397186 106.38417816]
[106.84833527 114.74718475]
[106.17855072 129.73222351]
[113.29192352 143.86412048]
[104.99403381 156.23320007]
[107.40108490 160.86497498]
[107.75534821 165.49398804]
[106.40163422 169.33879089]
[103.94492340 171.86799622]
[102.60668945 186.80818176]
[101.26845551 201.74836731]
[99.93022156 216.68855286]
[98.59198761 231.62873840]
[97.25375366 246.56892395]
[95.91551971 261.50912476]
[94.57728577 276.44927979]
[93.23905182 291.38946533]
[91.90081787 306.32965088]
[101.75867462 318.39035034]
[100.18869019 333.52276611]
[88.62990570 342.84640503]
[87.29167175 357.78659058]
[85.95343781 372.72677612]
[100.71371460 375.45968628]
[115.15321350 379.56277466]
[129.14503479 384.99996948]
[142.56623840 391.72351074]
[155.29884338 399.67431641]
[167.23097229 408.78250122]
[178.25775146 418.96798706]
[188.28228760 430.14132690]
[197.21647644 442.20428467]
[204.98179626 455.05084229]
[211.51000977 468.56811523]
[216.74374390 482.63732910]
[220.63702393 497.13479614]
[223.15559387 511.93316650]
[224.27734375 526.90234375]
[223.99243164 541.91076660]
[222.30332947 556.82659912]
[219.22488403 571.51867676]
[214.78417969 585.85797119]
[209.02021790 599.71838379]
[201.98365784 612.97814941]
[193.73634338 625.52069092]
[184.35073853 637.23583984]
[173.90934753 648.02062988]
[162.50392151 657.78027344]
[150.23469543 666.42901611]
[137.20948792 673.89080811]
[123.54277039 680.10015869]
[109.35465240 685.00238037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 181]
[37 180]
[38 179]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[51 163]
[53 161]
[54 160]
[56 157]
[57 156]
[58 155]
[59 154]
[65 145]
[66 144]
[67 143]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[87 132]
[88 131]
[89 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
