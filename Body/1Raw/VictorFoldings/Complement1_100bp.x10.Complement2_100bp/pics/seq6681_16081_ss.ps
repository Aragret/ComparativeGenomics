%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[100.04581451 670.26153564]
[88.79672241 680.23980713]
[76.02300262 688.17333984]
[62.09220123 693.83374023]
[47.40512085 697.05828857]
[32.38434219 697.75415039]
[17.46204376 695.90136719]
[3.06756878 691.55310059]
[-10.38492489 684.83459473]
[-22.50838280 675.93908691]
[-32.95398712 665.12255859]
[-41.42119980 652.69622803]
[-47.66639709 639.01757812]
[-51.50989914 624.48016357]
[-52.84111786 609.50231934]
[-51.62174606 594.51495361]
[-47.88687515 579.94927979]
[-41.74396133 566.22442627]
[-33.36975098 553.73516846]
[-23.00518417 542.84100342]
[-10.94846916 533.85522461]
[2.45349574 527.03649902]
[16.81511116 522.58093262]
[31.72316170 520.61676025]
[46.74871826 521.20043945]
[49.85282516 506.52514648]
[52.95693588 491.84985352]
[56.06104660 477.17456055]
[59.16515732 462.49923706]
[61.39027405 447.66519165]
[62.72850800 432.72500610]
[64.06674194 417.78482056]
[52.74153900 405.35186768]
[53.93605042 388.23791504]
[67.39833069 377.06710815]
[68.51397705 362.10867310]
[69.62962341 347.15020752]
[70.74527740 332.19177246]
[68.36285400 328.05255127]
[68.55536652 322.37274170]
[72.12335968 316.80670166]
[73.68387604 301.88809204]
[75.24440002 286.96948242]
[76.80492401 272.05087280]
[69.43379974 262.45959473]
[70.61180115 250.01786804]
[80.25041199 241.44699097]
[82.03287506 226.55326843]
[83.81533813 211.65956116]
[85.26476288 196.72975159]
[86.38040924 181.77128601]
[87.49605560 166.81283569]
[88.61170197 151.85438538]
[89.72735596 136.89593506]
[90.84300232 121.93747711]
[91.95864868 106.97902679]
[91.84698486 91.97943878]
[90.50875092 77.03925323]
[89.17051697 62.09907150]
[75.54341125 51.12995911]
[74.09423065 34.03567123]
[85.23307037 21.43547058]
[83.67255402 6.51686573]
[82.11203003 -8.40173912]
[80.55150604 -23.32034302]
[78.99098206 -38.23894882]
[73.50410461 -24.27849770]
[64.19308472 -12.51818943]
[51.86340714 -3.97540927]
[37.58171844 0.61080647]
[22.58352661 0.84370470]
[8.16632557 -3.29686260]
[-4.42265320 -11.45269489]
[-14.09433746 -22.91823196]
[-20.01202965 -36.70158768]
[-21.66378975 -51.61036682]
[-18.90672302 -66.35481262]
[-11.97934532 -79.65937042]
[-1.48094356 -90.37308502]
[11.68026638 -97.56909180]
[26.36570740 -100.62487793]
[41.30494308 -99.27607727]
[55.20557785 -93.63938141]
[66.86507416 -84.20242310]
[75.27475739 -71.78158569]
[79.70658112 -57.45487595]
[82.37237549 -72.21609497]
[85.03816986 -86.97731018]
[87.70396423 -101.73852539]
[89.70797729 -116.60405731]
[91.04621124 -131.54423523]
[92.38444519 -146.48442078]
[85.90919495 -160.91986084]
[94.75111389 -172.90608215]
[88.27585602 -187.34152222]
[97.11777496 -199.32774353]
[98.45600891 -214.26792908]
[99.79424286 -229.20811462]
[85.73303223 -234.72708130]
[73.79711151 -243.98509216]
[64.95407867 -256.23162842]
[59.92080307 -270.47390747]
[59.10530090 -285.55740356]
[62.57368469 -300.25933838]
[70.04479218 -313.38790894]
[80.91296387 -323.87881470]
[94.29718018 -330.88165283]
[109.11242676 -333.82867432]
[124.15770721 -332.48104858]
[138.21337891 -326.94793701]
[150.13998413 -317.67794800]
[158.97070312 -305.42254639]
[163.98966980 -291.17523193]
[164.79002380 -276.09091187]
[161.30686951 -261.39245605]
[153.82258606 -248.27140808]
[142.94386292 -237.79141235]
[129.55262756 -230.80204773]
[114.73442841 -227.86988831]
[113.39619446 -212.92970276]
[112.05796051 -197.98951721]
[118.62893677 -184.62271118]
[109.69129944 -171.56785583]
[116.26226807 -158.20104980]
[107.32463074 -145.14619446]
[105.98639679 -130.20600891]
[104.64816284 -115.26582336]
[116.82319641 -124.02759552]
[131.64930725 -121.75025940]
[140.63343811 -109.73838043]
[138.62907410 -94.87290192]
[126.78439331 -85.66944122]
[111.88457489 -87.40016937]
[102.46518707 -99.07273102]
[99.79938507 -84.31151581]
[97.13359070 -69.55030060]
[94.46779633 -54.78908157]
[93.90958405 -39.79947281]
[95.47010803 -24.88086700]
[97.03063202 -9.96226215]
[98.59115601 4.95634270]
[100.15167999 19.87494659]
[111.19815063 26.50856781]
[116.48587799 38.47193146]
[113.87944031 51.48795700]
[104.11070251 60.76083755]
[105.44893646 75.70101929]
[106.78717041 90.64120483]
[114.10614777 77.54798126]
[126.62086487 69.27864838]
[141.53549194 67.68058777]
[155.51808167 73.11082458]
[165.44485474 84.35622406]
[169.09817505 98.90452576]
[165.66188049 113.50561523]
[155.90362549 124.89756775]
[142.00344849 130.53538513]
[127.06668091 129.15957642]
[114.43022919 121.07749176]
[106.91710663 108.09467316]
[105.80145264 123.05313110]
[104.68580627 138.01158142]
[103.57015991 152.97003174]
[102.45451355 167.92848206]
[101.33885956 182.88694763]
[100.22321320 197.84539795]
[102.49128723 202.54676819]
[102.70757294 207.18428040]
[101.23998260 210.98707581]
[98.70906067 213.44201660]
[96.92658997 228.33573914]
[95.14412689 243.22946167]
[102.78185272 259.98495483]
[91.72353363 273.61141968]
[90.16300964 288.52999878]
[88.60248566 303.44860840]
[87.04196167 318.36721802]
[85.70372772 333.30740356]
[84.58808136 348.26586914]
[83.47242737 363.22430420]
[82.35678101 378.18276978]
[92.26249695 387.30917358]
[95.06243134 400.28494263]
[89.95341492 412.32571411]
[79.00692749 419.12307739]
[77.66869354 434.06326294]
[76.33045959 449.00344849]
[87.17343903 438.63861084]
[102.02198792 436.51239014]
[115.33795166 443.41784668]
[122.15480804 456.77935791]
[119.93004608 471.61346436]
[109.49343872 482.38739014]
[94.73758698 485.08270264]
[81.16605377 478.69415283]
[73.84046173 465.60336304]
[70.73635101 480.27865601]
[67.63224030 494.95394897]
[64.52812958 509.62927246]
[61.42401886 524.30456543]
[75.39900970 529.85504150]
[88.23486328 537.68756104]
[99.56226349 547.57684326]
[109.05530548 559.23834229]
[116.44084167 572.33648682]
[121.50639343 586.49450684]
[124.10620117 601.30493164]
[124.16546631 616.34167480]
[121.68248749 631.17218018]
[116.72869873 645.36962891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 200]
[26 199]
[27 198]
[28 197]
[29 196]
[30 187]
[31 186]
[32 185]
[35 181]
[36 180]
[37 179]
[38 178]
[41 177]
[42 176]
[43 175]
[44 174]
[47 172]
[48 171]
[49 170]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 148]
[58 147]
[59 146]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 127]
[91 126]
[92 125]
[94 123]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
