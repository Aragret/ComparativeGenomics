%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[37.54537964 690.61511230]
[25.32621574 699.33697510]
[12.29934788 706.79882812]
[-1.40575588 712.92651367]
[-15.65288448 717.65917969]
[-30.30043983 720.94970703]
[-45.20284271 722.76550293]
[-60.21198654 723.08837891]
[-75.17869568 721.91522217]
[-89.95421600 719.25769043]
[-104.39170837 715.14221191]
[-118.34767914 709.60961914]
[-131.68342590 702.71490479]
[-144.26638794 694.52667236]
[-155.97154236 685.12622070]
[-166.68252563 674.60705566]
[-176.29289246 663.07366943]
[-184.70713806 650.64068604]
[-191.84162903 637.43164062]
[-197.62545776 623.57794189]
[-202.00112915 609.21716309]
[-204.92517090 594.49206543]
[-206.36851501 579.54895020]
[-206.31681824 564.53643799]
[-204.77059937 549.60369873]
[-201.74520874 534.89904785]
[-197.27073669 520.56872559]
[-191.39164734 506.75518799]
[-184.16635132 493.59564209]
[-175.66668701 481.22088623]
[-165.97711182 469.75393677]
[-155.19393921 459.30877686]
[-143.42433167 449.98916626]
[-130.78526306 441.88778687]
[-117.40235138 435.08508301]
[-103.40861511 429.64874268]
[-88.94312286 425.63275146]
[-74.14964294 423.07705688]
[-59.17520905 422.00701904]
[-44.16864777 422.43328857]
[-29.27910233 424.35162354]
[-14.65455723 427.74298096]
[-9.82855892 413.54052734]
[-5.00256157 399.33807373]
[-0.17656408 385.13562012]
[4.54357004 370.89764404]
[9.15757942 356.62490845]
[13.77158833 342.35217285]
[18.38559723 328.07943726]
[14.93835354 313.58923340]
[26.54545593 302.83816528]
[31.15946579 288.56542969]
[35.77347565 274.29269409]
[25.68927002 263.33029175]
[22.42446136 248.69480896]
[26.95359612 234.29504395]
[38.15583801 224.02827454]
[53.09034729 220.72558594]
[57.70435715 206.45285034]
[62.31836319 192.18011475]
[66.93237305 177.90739441]
[71.54638672 163.63465881]
[76.16039276 149.36192322]
[63.23460007 140.65995789]
[53.27948380 128.67262268]
[47.09941864 114.36853027]
[45.19375992 98.90344238]
[47.71649170 83.52696228]
[54.46377182 69.48151398]
[64.89041138 57.90198135]
[78.15393829 49.72400284]
[93.18264008 45.60836792]
[108.76219177 45.88761520]
[113.16319275 31.54776764]
[117.56418610 17.20792198]
[121.96518707 2.86807394]
[118.61737823 -12.59487343]
[129.74833679 -22.49189186]
[125.20996857 -40.33803558]
[138.51394653 -51.78229141]
[142.70095825 -66.18607330]
[146.88796997 -80.58985901]
[150.75227356 -95.08354950]
[154.29194641 -109.65992737]
[157.83161926 -124.23629761]
[161.37129211 -138.81266785]
[164.91096497 -153.38905334]
[168.45063782 -167.96542358]
[154.38943481 -173.24179077]
[141.06677246 -180.17462158]
[128.67694092 -188.66279602]
[117.40059662 -198.58255005]
[107.40220642 -209.78921509]
[98.82756042 -222.11938477]
[91.80170441 -235.39321899]
[86.42710114 -249.41716003]
[82.78213501 -263.98669434]
[80.91994476 -278.88937378]
[80.86769104 -293.90783691]
[82.62614441 -308.82312012]
[86.16964722 -323.41766357]
[91.44654083 -337.47866821]
[98.37985992 -350.80108643]
[106.86850739 -363.19058228]
[116.78868103 -374.46655273]
[127.99572754 -384.46453857]
[140.32620239 -393.03872681]
[153.60031128 -400.06408691]
[167.62445068 -405.43817139]
[182.19412231 -409.08258057]
[197.09686279 -410.94421387]
[212.11534119 -410.99591064]
[227.03054810 -409.23690796]
[241.62496948 -405.69284058]
[255.68577576 -400.41543579]
[269.00790405 -393.48159790]
[281.39712524 -384.99249268]
[292.67272949 -375.07189941]
[302.67028809 -363.86447144]
[311.24398804 -351.53369141]
[318.26885986 -338.25933838]
[323.64242554 -324.23498535]
[327.28628540 -309.66516113]
[329.14736938 -294.76235962]
[329.19848633 -279.74386597]
[327.43893433 -264.82873535]
[323.89431763 -250.23445129]
[318.61639404 -236.17384338]
[311.68206787 -222.85195923]
[303.19250488 -210.46307373]
[293.27148438 -199.18785095]
[282.06369019 -189.19070435]
[269.73257446 -180.61744690]
[256.45794678 -173.59307861]
[242.43339539 -168.22004700]
[227.86344910 -164.57672119]
[212.96057129 -162.71620178]
[197.94209290 -162.66563416]
[183.02702332 -164.42575073]
[179.48735046 -149.84938049]
[175.94767761 -135.27299500]
[172.40800476 -120.69662476]
[168.86833191 -106.12025452]
[165.32865906 -91.54387665]
[166.84100342 -88.35873413]
[166.88574219 -84.28282166]
[165.06100464 -80.01390839]
[161.29174805 -76.40284729]
[157.10473633 -61.99906158]
[152.91773987 -47.59527969]
[158.46694946 -36.84666824]
[155.09657288 -24.81237221]
[144.08818054 -18.09089470]
[147.75077820 -3.65362930]
[136.30503845 7.26907206]
[131.90403748 21.60891914]
[127.50303650 35.94876480]
[123.10204315 50.28861237]
[135.18948364 57.96874237]
[144.87518311 68.51757050]
[151.49809265 81.21511841]
[154.60618591 95.19476318]
[153.98731995 109.50236511]
[149.68374634 123.16142273]
[141.98918152 135.23968506]
[131.42878723 144.91278076]
[118.72333527 151.52050781]
[104.73998260 154.61189270]
[90.43312836 153.97593689]
[85.81911469 168.24865723]
[81.20510864 182.52139282]
[76.59109497 196.79412842]
[71.97708893 211.06686401]
[67.36308289 225.33959961]
[77.53813171 236.75955200]
[80.61061096 251.64097595]
[75.85342407 265.96701050]
[64.63922119 275.92181396]
[50.04620743 278.90670776]
[45.43219757 293.17944336]
[40.81819153 307.45214844]
[43.93540955 322.96322632]
[32.65833282 332.69345093]
[28.04432297 346.96618652]
[23.43031311 361.23889160]
[18.81630325 375.51162720]
[19.15426636 384.63980103]
[14.02589130 389.96160889]
[9.19989395 404.16406250]
[4.37389612 418.36651611]
[-0.45210141 432.56896973]
[13.21099854 438.78979492]
[26.18680191 446.34008789]
[38.34634399 455.14486694]
[49.56877899 465.11660767]
[59.74256897 476.15618896]
[68.76659393 488.15393066]
[76.55117798 500.99053955]
[83.01894379 514.53851318]
[88.10560608 528.66308594]
[91.76062012 543.22399902]
[93.94765472 558.07641602]
[94.64497375 573.07287598]
[93.84564972 588.06414795]
[91.55762482 602.90142822]
[87.80363464 617.43707275]
[82.62099457 631.52679443]
[76.06121826 645.03039551]
[68.18949127 657.81378174]
[59.08404922 669.74981689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 191]
[43 190]
[44 189]
[45 188]
[46 186]
[47 185]
[48 184]
[49 183]
[51 181]
[52 180]
[53 179]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[63 169]
[73 158]
[74 157]
[75 156]
[76 155]
[78 153]
[80 150]
[81 149]
[82 148]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
