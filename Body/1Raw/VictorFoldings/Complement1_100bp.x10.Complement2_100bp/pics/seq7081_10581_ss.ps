%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[56.94388580 514.06121826]
[57.08172989 529.14904785]
[53.30891037 543.75823975]
[45.88266754 556.89270020]
[35.30933380 567.65686035]
[22.30981445 575.31677246]
[7.77044153 579.35028076]
[-7.31746674 579.48229980]
[-21.92519379 575.70385742]
[-35.05675888 568.27252197]
[-45.81682968 557.69506836]
[-53.47176743 544.69256592]
[-57.49964523 530.15167236]
[-57.62583542 515.06365967]
[-53.84173584 500.45742798]
[-46.40535355 487.32873535]
[-35.82370758 476.57275391]
[-22.81827927 468.92282104]
[-8.27579689 464.90057373]
[6.81220913 464.78018188]
[10.56851006 450.25814819]
[14.32481098 435.73608398]
[10.02120590 421.47674561]
[20.96781349 410.05386353]
[24.72411537 395.53179932]
[28.48041534 381.00973511]
[32.23671722 366.48770142]
[35.99301529 351.96563721]
[31.68941307 337.70629883]
[42.63602066 326.28341675]
[46.39232254 311.76135254]
[50.14862061 297.23928833]
[39.92560196 282.05358887]
[44.12098312 263.90664673]
[60.52500534 254.42918396]
[63.84726715 239.80172729]
[67.16952515 225.17427063]
[70.49178314 210.54681396]
[73.48655701 195.84880066]
[68.13431549 181.94906616]
[78.20101166 169.74365234]
[80.86680603 154.98242188]
[83.53260040 140.22120667]
[81.83334351 137.13172913]
[81.54608154 133.06571960]
[83.11349487 128.69575500]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[101.92468262 57.15921021]
[105.02879333 42.48390579]
[108.13290405 27.80860519]
[103.41890717 12.70599556]
[113.62251282 1.85538685]
[99.81845093 7.72461987]
[86.55105591 0.72631192]
[83.60056305 -13.98064518]
[93.14196014 -25.55482864]
[108.14168549 -25.46418381]
[117.54212189 -13.77713490]
[121.72912598 -28.18091774]
[118.15146637 -43.59230423]
[129.13385010 -53.65395355]
[133.32086182 -68.05773163]
[137.50785828 -82.46151733]
[141.69487000 -96.86529541]
[129.63917542 -104.73619080]
[120.30102539 -115.67380524]
[114.43077087 -128.78544617]
[112.49620819 -143.00428772]
[114.64531708 -157.17617798]
[120.69496155 -170.15335083]
[130.14648438 -180.88732910]
[142.22674561 -188.51370239]
[155.95147705 -192.42166138]
[170.20530701 -192.30294800]
[166.85749817 -207.76589966]
[177.98844910 -217.66291809]
[182.38945007 -232.00276184]
[186.79045105 -246.34260559]
[191.19145203 -260.68246460]
[195.59245300 -275.02230835]
[181.74151611 -280.81182861]
[168.52478027 -287.93112183]
[156.06950378 -296.31164551]
[144.49563599 -305.87261963]
[133.91467285 -316.52203369]
[124.42848206 -328.15728760]
[116.12844849 -340.66632080]
[109.09449768 -353.92871094]
[103.39437103 -367.81665039]
[99.08296967 -382.19644165]
[96.20181274 -396.92959595]
[94.77864838 -411.87420654]
[94.82718658 -426.88635254]
[96.34696198 -441.82144165]
[99.32332611 -456.53567505]
[103.72762299 -470.88729858]
[109.51743317 -484.73809814]
[116.63700104 -497.95471191]
[125.01774597 -510.40982056]
[134.57897949 -521.98345947]
[145.22859192 -532.56420898]
[156.86402893 -542.05017090]
[169.37324524 -550.34997559]
[182.63574219 -557.38366699]
[196.52381897 -563.08349609]
[210.90370178 -567.39459229]
[225.63691711 -570.27545166]
[240.58155823 -571.69836426]
[255.59368896 -571.64947510]
[270.52874756 -570.12945557]
[285.24291992 -567.15277100]
[299.59445190 -562.74816895]
[313.44512939 -556.95812988]
[326.66159058 -549.83825684]
[339.11654663 -541.45727539]
[350.69000244 -531.89581299]
[361.27056885 -521.24597168]
[370.75628662 -509.61035156]
[379.05581665 -497.10098267]
[386.08923340 -483.83834839]
[391.78881836 -469.95016479]
[396.09963989 -455.57019043]
[398.98019409 -440.83691406]
[400.40277100 -425.89224243]
[400.35363770 -410.88009644]
[398.83325195 -395.94506836]
[395.85629272 -381.23098755]
[391.45144653 -366.87954712]
[385.66107178 -353.02896118]
[378.54098511 -339.81265259]
[370.15972900 -327.35784912]
[360.59805298 -315.78457642]
[349.94799805 -305.20425415]
[338.31216431 -295.71875000]
[325.80264282 -287.41946411]
[312.53985596 -280.38632202]
[298.65155029 -274.68701172]
[284.27148438 -270.37649536]
[269.53817749 -267.49621582]
[254.59347534 -266.07394409]
[239.58132935 -266.12338257]
[224.64633179 -267.64404297]
[209.93229675 -270.62130737]
[205.53129578 -256.28146362]
[201.13029480 -241.94160461]
[196.72929382 -227.60176086]
[192.32830811 -213.26191711]
[195.99090576 -198.82464600]
[184.54515076 -187.90194702]
[197.45973206 -179.03968811]
[207.01544189 -166.60488892]
[212.26731873 -151.80747986]
[212.68995667 -136.09196472]
[208.22998047 -120.99640656]
[199.31245422 -108.00189209]
[186.80039978 -98.38726044]
[171.91131592 -93.10319519]
[156.09866333 -92.67828369]
[151.91165161 -78.27450562]
[147.72463989 -63.87072372]
[143.53762817 -49.46694183]
[147.41476440 -35.08580780]
[136.13290405 -23.99390602]
[131.94590759 -9.59012318]
[128.29780579 4.95949697]
[133.23384094 19.01243019]
[122.80820465 30.91271400]
[119.70409393 45.58801651]
[116.59998322 60.26332092]
[118.29125214 67.45786285]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[98.29381561 142.88700867]
[95.62802124 157.64822388]
[92.96222687 172.40943909]
[98.12379456 187.36500549]
[88.24777985 198.51460266]
[90.01443481 203.42642212]
[89.74708557 208.06126404]
[87.89183807 211.69075012]
[85.11924744 213.86906433]
[81.79698181 228.49652100]
[78.47472382 243.12399292]
[75.15246582 257.75143433]
[83.32508850 266.38537598]
[86.28485870 277.77575684]
[83.40846252 289.06381226]
[75.52256775 297.47384644]
[64.67068481 300.99560547]
[60.91437912 315.51766968]
[57.15808105 330.03973389]
[61.19300842 345.33776855]
[50.51507568 355.72192383]
[46.75877380 370.24398804]
[43.00247574 384.76605225]
[39.24617386 399.28811646]
[35.48987198 413.81018066]
[39.52480316 429.10821533]
[28.84687042 439.49237061]
[25.09056854 454.01443481]
[21.33426857 468.53649902]
[34.47156906 475.95767212]
[45.23980331 486.52685547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 208]
[21 207]
[22 206]
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[30 198]
[31 197]
[32 196]
[35 191]
[36 190]
[37 189]
[38 188]
[39 184]
[41 182]
[42 181]
[43 180]
[47 179]
[48 178]
[50 176]
[51 175]
[52 173]
[53 172]
[54 171]
[56 169]
[62 168]
[63 167]
[65 165]
[66 164]
[67 163]
[68 162]
[78 153]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
