%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[25.61757278 591.54156494]
[12.38077450 580.94799805]
[18.89602280 565.29589844]
[19.34263039 550.30255127]
[19.78923607 535.30920410]
[20.23584175 520.31585693]
[20.68244743 505.32247925]
[21.12905312 490.32913208]
[21.57565880 475.33578491]
[22.02226448 460.34243774]
[22.46887016 445.34909058]
[13.33018780 430.36740112]
[23.13799667 414.78250122]
[23.36132431 399.78417969]
[15.81437206 386.94311523]
[23.75627899 373.25967407]
[23.97960663 358.26132202]
[24.20293427 343.26300049]
[24.42626190 328.26464844]
[16.87930870 315.42361450]
[24.82121658 301.74014282]
[17.79159164 314.99096680]
[7.35482788 325.76473999]
[-5.66598845 333.21179199]
[-20.24398232 336.74478149]
[-35.22946930 336.08514404]
[-49.44063568 331.28485107]
[-61.75672531 322.72247314]
[-71.20644379 311.07333374]
[-77.04454803 297.25607300]
[-78.81060791 282.36041260]
[-76.36536407 267.56106567]
[-69.90164948 254.02516174]
[-59.92921448 242.82022095]
[-47.23453140 234.82991028]
[-32.81875992 230.68437195]
[-17.81878281 230.71054077]
[-3.41756201 234.90635681]
[9.24916172 242.94091797]
[19.18243790 254.18057251]
[25.59888649 267.73895264]
[27.99254799 282.55020142]
[32.60655594 268.27746582]
[37.22056580 254.00473022]
[35.88219452 249.42021179]
[37.40957642 243.94627380]
[42.19026566 239.37937927]
[47.22718430 225.25035095]
[52.26409912 211.12130737]
[57.30101776 196.99227905]
[50.70494461 183.68711853]
[55.61182022 169.28651428]
[69.61222839 162.45817566]
[74.64913940 148.32913208]
[79.68605804 134.20010376]
[84.72297668 120.07108307]
[89.75988770 105.94204712]
[78.24425507 115.55403137]
[63.94995880 120.10079193]
[48.99747086 118.90785217]
[35.60490799 112.15216827]
[25.75897217 100.83592224]
[20.92025375 86.63779449]
[21.80654716 71.66400146]
[28.28637505 58.13581085]
[39.39849472 48.06005859]
[53.49448776 42.93141556]
[68.48329926 43.51068878]
[82.14142609 49.71194077]
[92.44276428 60.61526108]
[97.85917664 74.60320282]
[97.58757782 89.59886932]
[105.43933105 76.81802368]
[113.29108429 64.03717804]
[121.14283752 51.25633621]
[128.99459839 38.47549438]
[136.84634399 25.69465256]
[143.42637634 12.21491909]
[148.67309570 -1.83755267]
[153.91981506 -15.89002419]
[158.95672607 -30.01905251]
[163.78273010 -44.22150803]
[168.07685852 -58.59372330]
[171.83316040 -73.11578369]
[175.58944702 -87.63784027]
[179.34574890 -102.15989685]
[175.31082153 -117.45793915]
[185.98875427 -127.84210968]
[181.95382690 -143.14013672]
[192.63175964 -153.52432251]
[196.38806152 -168.04637146]
[200.14436340 -182.56843567]
[203.90066528 -197.09049988]
[207.33172607 -211.69281006]
[210.43583679 -226.36811829]
[196.48513794 -231.98498535]
[183.72184753 -239.93920898]
[172.53381348 -249.98902893]
[163.26104736 -261.82910156]
[156.18531799 -275.09954834]
[151.52166748 -289.39715576]
[149.41178894 -304.28741455]
[149.91983032 -319.31781006]
[153.03034973 -334.03161621]
[158.64880371 -347.98165894]
[166.60446167 -360.74404907]
[176.65556335 -371.93093872]
[188.49665833 -381.20236206]
[201.76792908 -388.27658081]
[216.06605530 -392.93862915]
[230.95654297 -395.04681396]
[245.98689270 -394.53704834]
[260.70034790 -391.42489624]
[274.64974976 -385.80484009]
[287.41125488 -377.84774780]
[298.59698486 -367.79537964]
[307.86709595 -355.95321655]
[314.93978882 -342.68115234]
[319.60021973 -328.38247681]
[321.70669556 -313.49176025]
[321.19525146 -298.46148682]
[318.08142090 -283.74838257]
[312.45977783 -269.79959106]
[304.50125122 -257.03900146]
[294.44760132 -245.85440063]
[282.60440063 -236.58566284]
[269.33151245 -229.51445007]
[255.03233337 -224.85565186]
[240.14137268 -222.75085449]
[225.11114502 -223.26400757]
[222.00703430 -208.58869934]
[223.61354065 -205.45001221]
[223.77961731 -201.37722778]
[222.08279419 -197.05587769]
[218.42272949 -193.33419800]
[214.66642761 -178.81213379]
[210.91012573 -164.29006958]
[207.15382385 -149.76802063]
[211.45742798 -135.50869751]
[200.51081848 -124.08580780]
[204.81442261 -109.82648468]
[193.86781311 -98.40360260]
[190.11151123 -83.88153839]
[186.35520935 -69.35948181]
[182.59890747 -54.83742142]
[196.65127563 -60.08441544]
[209.59294128 -52.50066757]
[211.88380432 -37.67663574]
[201.83509827 -26.54003906]
[186.85438538 -27.30036926]
[177.98518372 -39.39551163]
[173.15917969 -25.19305611]
[174.42915344 -20.58912086]
[172.82043457 -15.13851833]
[167.97229004 -10.64330578]
[162.72557068 3.40916562]
[157.47885132 17.46163750]
[169.30554199 8.23507690]
[183.84266663 4.53752804]
[198.64047241 6.99209309]
[211.20527649 15.18513393]
[219.41966248 27.73597908]
[221.89938354 42.52959061]
[218.22656250 57.07298660]
[209.02012634 68.91535187]
[195.83152771 76.06102753]
[180.88327026 77.30585480]
[166.69439697 72.44005585]
[155.65599060 62.28359985]
[149.62821960 48.54803085]
[149.62719727 33.54640961]
[141.77543640 46.32725143]
[133.92367554 59.10809326]
[126.07192993 71.88893890]
[118.22016907 84.66977692]
[110.36841583 97.45062256]
[103.88892365 110.97896576]
[98.85200500 125.10799408]
[93.81508636 139.23703003]
[88.77817535 153.36605835]
[83.74125671 167.49508667]
[90.26477814 181.64009094]
[84.95535278 195.89718628]
[71.43004608 202.02920532]
[66.39312744 216.15823364]
[61.35621262 230.28726196]
[56.31929779 244.41629028]
[51.49329758 258.61874390]
[46.87929153 272.89147949]
[42.26528168 287.16421509]
[39.81955338 301.96347046]
[47.35053253 315.87731934]
[39.42459869 328.48797607]
[39.20127106 343.48632812]
[38.97794342 358.48464966]
[38.75461578 373.48300171]
[46.28559494 387.39685059]
[38.35966110 400.00750732]
[38.13633347 415.00582886]
[46.54345322 424.78762817]
[46.04867172 437.27517700]
[37.46221924 445.79568481]
[37.01561356 460.78906250]
[36.56900787 475.78240967]
[36.12240219 490.77575684]
[35.67579651 505.76910400]
[35.22919083 520.76245117]
[34.78258514 535.75579834]
[34.33597946 550.74914551]
[33.88937378 565.74249268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[13 199]
[14 198]
[16 196]
[17 195]
[18 194]
[19 193]
[21 191]
[42 190]
[43 189]
[44 188]
[47 187]
[48 186]
[49 185]
[50 184]
[53 181]
[54 180]
[55 179]
[56 178]
[57 177]
[72 176]
[73 175]
[74 174]
[75 173]
[76 172]
[77 171]
[78 157]
[79 156]
[80 155]
[81 152]
[82 151]
[83 145]
[84 144]
[85 143]
[86 142]
[88 140]
[90 138]
[91 137]
[92 136]
[93 135]
[94 131]
[95 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
