%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[35.49879456 932.49749756]
[20.49654579 932.57092285]
[5.50555086 931.98529053]
[-9.44525337 930.74176025]
[-24.32700729 928.84277344]
[-39.11098480 926.29193115]
[-53.76865005 923.09411621]
[-68.27170563 919.25561523]
[-82.59216309 914.78375244]
[-96.70237732 909.68725586]
[-110.57511139 903.97583008]
[-124.18358612 897.66058350]
[-137.50154114 890.75366211]
[-150.50325012 883.26849365]
[-163.16363525 875.21942139]
[-175.45825195 866.62200928]
[-187.36335754 857.49285889]
[-198.85598755 847.84960938]
[-209.91397095 837.71087646]
[-220.51593018 827.09619141]
[-230.64140320 816.02606201]
[-240.27087402 804.52191162]
[-249.38572693 792.60583496]
[-257.96838379 780.30090332]
[-266.00228882 767.63092041]
[-273.47189331 754.62023926]
[-280.36282349 741.29400635]
[-286.66174316 727.67797852]
[-292.35650635 713.79840088]
[-297.43612671 699.68206787]
[-301.89080811 685.35626221]
[-305.71194458 670.84863281]
[-308.89215088 656.18713379]
[-311.42526245 641.40014648]
[-313.30645752 626.51611328]
[-314.53204346 611.56384277]
[-315.09970093 596.57214355]
[-315.00830078 581.57000732]
[-314.25802612 566.58630371]
[-312.85031128 551.65008545]
[-310.78790283 536.79010010]
[-308.07479858 522.03503418]
[-304.71618652 507.41336060]
[-300.71856689 492.95336914]
[-296.08966064 478.68289185]
[-290.83840942 464.62951660]
[-284.97494507 450.82037354]
[-278.51055908 437.28210449]
[-271.45779419 424.04083252]
[-263.83020020 411.12213135]
[-255.64251709 398.55096436]
[-246.91055298 386.35153198]
[-237.65118408 374.54742432]
[-227.88224792 363.16143799]
[-217.62263489 352.21551514]
[-206.89212036 341.73080444]
[-195.71142578 331.72756958]
[-184.10214233 322.22506714]
[-172.08668518 313.24166870]
[-159.68821716 304.79470825]
[-146.93069458 296.90051270]
[-133.83874512 289.57427979]
[-120.43762970 282.83016968]
[-106.75321198 276.68121338]
[-92.81191254 271.13928223]
[-78.64064789 266.21502686]
[-64.26676941 261.91799927]
[-49.71801376 258.25650024]
[-35.02247238 255.23756409]
[-20.20850754 252.86703491]
[-5.30471945 251.14949036]
[9.66012669 250.08824158]
[24.65714455 249.68533325]
[39.65738678 249.94154358]
[54.63189697 250.85638428]
[69.55177307 252.42808533]
[71.77688599 237.59403992]
[74.00200653 222.75999451]
[76.22711945 207.92596436]
[78.45223999 193.09191895]
[72.68852234 179.35769653]
[82.38735199 166.85795593]
[84.61246490 152.02392578]
[86.83758545 137.18988037]
[81.07386780 123.45565796]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[80.01912689 77.42353821]
[71.22624969 62.73759460]
[69.74214172 45.74062729]
[75.81716919 29.85643578]
[88.18391418 18.26344681]
[104.32122040 13.25873089]
[98.27863312 -1.36309183]
[107.47350311 -13.08075333]
[109.25597382 -27.97447014]
[111.03843689 -42.86818695]
[112.82090759 -57.76190567]
[98.93024445 -63.69707870]
[87.27526855 -73.30635071]
[78.80078125 -85.81073761]
[74.19377899 -100.19657135]
[73.82772827 -115.29766083]
[77.73230743 -129.88981628]
[85.59098816 -142.79011536]
[96.76670074 -152.95280457]
[110.35347748 -159.55401611]
[125.24990082 -162.05865479]
[140.24839783 -160.26364136]
[154.13308716 -154.31451416]
[165.77839661 -144.69354248]
[174.24032593 -132.18064880]
[178.83287048 -117.79019165]
[179.18374634 -102.68875122]
[175.26451111 -88.10052490]
[167.39286804 -75.20812225]
[156.20695496 -65.05667114]
[142.61355591 -58.46910095]
[127.71462250 -55.97943878]
[125.93215942 -41.08572006]
[124.14968872 -26.19200516]
[122.36722565 -11.29828739]
[128.53730774 2.25823736]
[119.21494293 15.04119682]
[130.69953918 21.11142731]
[139.45930481 30.74683571]
[144.43553162 42.81515884]
[145.01583862 55.88823318]
[141.10951233 68.41098785]
[133.16075134 78.88642883]
[122.09837341 86.05459595]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[111.21130371 127.97629547]
[101.67163086 139.41499329]
[99.44651031 154.24903870]
[97.22139740 169.08308411]
[102.82595825 183.87832642]
[93.28628540 195.31703186]
[91.06116486 210.15107727]
[88.83605194 224.98512268]
[86.61093140 239.81916809]
[84.38581848 254.65321350]
[99.11019897 257.52816772]
[113.69409180 261.04711914]
[128.10934448 265.20324707]
[142.32812500 269.98852539]
[156.32299805 275.39376831]
[170.06694031 281.40850830]
[183.53341675 288.02111816]
[196.69645691 295.21884155]
[209.53062439 302.98782349]
[222.01116943 311.31301880]
[234.11398315 320.17837524]
[245.81571960 329.56680298]
[257.09378052 339.46014404]
[267.92639160 349.83932495]
[278.29266357 360.68429565]
[288.17254639 371.97415161]
[297.54702759 383.68704224]
[306.39794922 395.80041504]
[314.70828247 408.29089355]
[322.46194458 421.13430786]
[329.64398193 434.30590820]
[336.24057007 447.78027344]
[342.23889160 461.53137207]
[347.62744141 475.53265381]
[352.39581299 489.75714111]
[356.53475952 504.17733765]
[360.03631592 518.76538086]
[362.89370728 533.49322510]
[365.10147095 548.33227539]
[366.65527344 563.25402832]
[367.55215454 578.22967529]
[367.79040527 593.23016357]
[367.36950684 608.22668457]
[366.29031372 623.19024658]
[364.55490112 638.09197998]
[362.16662598 652.90307617]
[359.13006592 667.59503174]
[355.45111084 682.13934326]
[351.13687134 696.50811768]
[346.19564819 710.67346191]
[340.63699341 724.60809326]
[334.47164917 738.28509521]
[327.71148682 751.67816162]
[320.36956787 764.76129150]
[312.46005249 777.50933838]
[303.99826050 789.89770508]
[295.00045776 801.90234375]
[285.48403931 813.50024414]
[275.46740723 824.66894531]
[264.96984863 835.38690186]
[254.01162720 845.63336182]
[242.61392212 855.38861084]
[230.79873657 864.63385010]
[218.58885193 873.35119629]
[206.00785828 881.52380371]
[193.08003235 889.13586426]
[179.83032227 896.17279053]
[166.28430176 902.62091064]
[152.46813965 908.46783447]
[138.40847778 913.70220947]
[124.13247681 918.31402588]
[109.66768646 922.29431152]
[95.04201508 925.63537598]
[80.28371429 928.33081055]
[65.42125702 930.37542725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[82 139]
[83 138]
[84 137]
[86 135]
[88 133]
[94 125]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
