%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[56.34865189 561.50134277]
[56.48649597 576.58923340]
[52.71367645 591.19836426]
[45.28743362 604.33282471]
[34.71409988 615.09698486]
[21.71458054 622.75695801]
[7.17520809 626.79040527]
[-7.91270018 626.92242432]
[-22.52042580 623.14398193]
[-35.65198898 615.71264648]
[-46.41205978 605.13519287]
[-54.06699753 592.13269043]
[-58.09487915 577.59179688]
[-58.22106934 562.50384521]
[-54.43696976 547.89758301]
[-47.00058746 534.76885986]
[-36.41894150 524.01287842]
[-23.41351318 516.36297607]
[-8.87102985 512.34069824]
[6.21697569 512.22033691]
[9.97327614 497.69827271]
[13.72957706 483.17620850]
[9.42597198 468.91690063]
[20.37258148 457.49398804]
[14.50579262 446.91537476]
[17.51637840 434.78607178]
[28.31976128 427.73980713]
[32.29185867 413.27526855]
[36.26395416 398.81076050]
[40.23604965 384.34622192]
[44.20814514 369.88171387]
[42.94810486 362.59927368]
[48.34855270 355.23223877]
[52.53556442 340.82846069]
[56.07523727 326.25207520]
[58.96051025 311.53219604]
[61.84578323 296.81231689]
[64.73105621 282.09240723]
[67.61632538 267.37252808]
[70.50160217 252.65263367]
[73.38687134 237.93273926]
[75.83260345 223.13346863]
[69.86503601 209.48658752]
[79.37669373 196.84384155]
[81.38070679 181.97830200]
[83.38471985 167.11277771]
[77.41716003 153.46589661]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[95.98010254 72.01017761]
[97.54062653 57.09157181]
[99.10114288 42.17296982]
[99.99396515 27.19956207]
[100.21729279 12.20122528]
[100.44062042 -2.79711175]
[100.66394806 -17.79544830]
[92.25682831 -27.57722473]
[92.75160980 -40.06477737]
[101.33805847 -48.58530807]
[94.01506805 -62.60972977]
[102.12787628 -75.10099030]
[102.57448578 -90.09433746]
[103.02108765 -105.08769226]
[103.46769714 -120.08103943]
[91.24062347 -132.59175110]
[91.83304596 -149.73712158]
[104.39025116 -160.92440796]
[104.61357880 -175.92274475]
[104.83690643 -190.92108154]
[95.80821228 -178.94265747]
[82.03882599 -172.99252319]
[67.12803650 -174.62603760]
[54.97349167 -183.41619873]
[48.75234985 -197.06527710]
[50.09080887 -212.00544739]
[58.63899994 -224.33137512]
[72.16244507 -230.82109070]
[87.12614441 -229.77819824]
[99.61862946 -221.47532654]
[106.37420654 -208.08366394]
[108.81993866 -222.88293457]
[111.26566315 -237.68220520]
[113.71138763 -252.48147583]
[116.15711975 -267.28076172]
[110.77345276 -282.15780640]
[120.48237610 -293.45321655]
[107.68939972 -285.62124634]
[93.07373047 -288.99496460]
[85.00788116 -301.64181519]
[88.11234283 -316.31701660]
[100.60874176 -324.61401367]
[115.33856201 -321.77990723]
[123.86370087 -309.43908691]
[127.62000275 -323.96115112]
[131.37629700 -338.48321533]
[135.13259888 -353.00524902]
[121.61438751 -359.62664795]
[109.70597839 -368.83395386]
[99.89501953 -380.25018311]
[92.58325195 -393.40780640]
[88.07010651 -407.76803589]
[86.54037476 -422.74282837]
[88.05671692 -437.71899414]
[92.55702209 -452.08328247]
[99.85701752 -465.24743652]
[109.65776825 -476.67239380]
[121.55794525 -485.89038086]
[135.07023621 -492.52383423]
[149.64132690 -496.30117798]
[164.67453003 -497.06771851]
[179.55426025 -494.79205322]
[193.67118835 -489.56738281]
[206.44723511 -481.60766602]
[217.35925293 -471.23883057]
[225.96037292 -458.88546753]
[231.89839172 -445.05343628]
[234.93017578 -430.30917358]
[234.93153381 -415.25643921]
[231.90243530 -400.51162720]
[225.96691895 -386.67852783]
[217.36804199 -374.32360840]
[206.45791626 -363.95278931]
[193.68330383 -355.99072266]
[179.56732178 -350.76351929]
[164.68800354 -348.48513794]
[149.65466309 -349.24896240]
[145.89836121 -334.72689819]
[142.14205933 -320.20483398]
[138.38575745 -305.68276978]
[135.28164673 -291.00747681]
[140.84024048 -277.18896484]
[130.95639038 -264.83502197]
[128.51066589 -250.03575134]
[126.06493378 -235.23648071]
[123.61920929 -220.43721008]
[121.17347717 -205.63793945]
[119.83524323 -190.69775391]
[119.61191559 -175.69941711]
[119.38858795 -160.70108032]
[129.56851196 -152.80180359]
[133.39715576 -140.29486084]
[129.26248169 -127.68077850]
[118.46104431 -119.63443756]
[118.01444244 -104.64108276]
[117.56783295 -89.64773560]
[117.12123108 -74.65438080]
[124.47615814 -61.70238495]
[116.33140564 -48.13869858]
[125.47009277 -33.15699768]
[115.66228485 -17.57212067]
[115.43895721 -2.57378411]
[115.21562958 12.42455292]
[114.99230194 27.42289162]
[126.48193359 17.77984619]
[141.43637085 18.94815826]
[151.28901672 30.25856209]
[150.39584351 45.23194504]
[139.26849365 55.29087448]
[124.28121948 54.67314148]
[114.01975250 43.73348999]
[112.45922852 58.65209579]
[110.89870453 73.57070160]
[113.15682983 77.77901459]
[112.79528809 83.45055389]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[107.61856079 157.53732300]
[98.25024414 169.11679077]
[96.24623108 183.98231506]
[94.24221802 198.84785461]
[100.06644440 213.55801392]
[90.69812775 225.13748169]
[92.48930359 229.09294128]
[92.88848114 233.01788330]
[92.07617950 236.47845459]
[90.35528564 239.14399719]
[88.10676575 240.81800842]
[85.22148895 255.53790283]
[82.33621979 270.25778198]
[79.45095062 284.97769165]
[76.56567383 299.69757080]
[73.68040466 314.41748047]
[70.79512787 329.13735962]
[83.81562042 321.68975830]
[98.32436371 325.49716187]
[106.01009369 338.37854004]
[102.47006989 352.95483398]
[89.73218536 360.87606812]
[75.09327698 357.60464478]
[66.93934631 345.01547241]
[62.75233459 359.41925049]
[58.67266846 373.85382080]
[54.70057297 388.31832886]
[50.72847748 402.78286743]
[46.75638199 417.24737549]
[42.78428650 431.71191406]
[47.85198593 449.41500854]
[34.89464188 461.25030518]
[38.92956924 476.54833984]
[28.25163651 486.93249512]
[24.49533653 501.45455933]
[20.73903465 515.97662354]
[33.87633514 523.39782715]
[44.64456940 533.96697998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 208]
[21 207]
[22 206]
[24 204]
[27 202]
[28 201]
[29 200]
[30 199]
[31 198]
[33 197]
[34 196]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 178]
[44 176]
[45 175]
[46 174]
[48 172]
[49 171]
[50 170]
[52 168]
[53 165]
[54 164]
[55 163]
[56 156]
[57 155]
[58 154]
[59 153]
[62 151]
[64 149]
[65 148]
[66 147]
[67 146]
[70 142]
[71 141]
[72 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[89 133]
[96 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
