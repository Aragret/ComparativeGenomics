%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[162.19738770 895.95361328]
[147.36303711 893.71685791]
[132.63078308 890.88458252]
[118.02450562 887.46142578]
[103.56791687 883.45288086]
[89.28446198 878.86547852]
[75.19731140 873.70666504]
[61.32930374 867.98480225]
[47.70293808 861.70922852]
[34.34032059 854.89001465]
[21.26312065 847.53826904]
[8.49255180 839.66589355]
[-3.95067239 831.28576660]
[-16.04636955 822.41131592]
[-27.77491951 813.05706787]
[-39.11729813 803.23809814]
[-50.05510712 792.97039795]
[-60.57061005 782.27062988]
[-70.64674377 771.15612793]
[-80.26717377 759.64483643]
[-89.41629028 747.75555420]
[-98.07924652 735.50756836]
[-106.24200439 722.92065430]
[-113.89131927 710.01525879]
[-121.01477814 696.81231689]
[-127.60083008 683.33325195]
[-133.63879395 669.59991455]
[-139.11888123 655.63458252]
[-144.03218079 641.45996094]
[-148.37075806 627.09893799]
[-152.12754822 612.57489014]
[-155.29646301 597.91137695]
[-157.87237549 583.13214111]
[-159.85108948 568.26116943]
[-161.22941589 553.32257080]
[-162.00509644 538.34063721]
[-162.17689514 523.33953857]
[-161.74450684 508.34375000]
[-160.70866394 493.37750244]
[-159.07102966 478.46511841]
[-156.83425903 463.63076782]
[-154.00196838 448.89849854]
[-150.57878113 434.29223633]
[-146.57023621 419.83566284]
[-141.98283386 405.55221558]
[-136.82400513 391.46505737]
[-131.10212708 377.59707642]
[-124.82649231 363.97070312]
[-118.00726318 350.60809326]
[-110.65550232 337.53091431]
[-102.78314209 324.76034546]
[-94.40294647 312.31713867]
[-85.52851105 300.22146606]
[-76.17422485 288.49291992]
[-66.35527039 277.15054321]
[-56.08756256 266.21276855]
[-45.38776016 255.69726562]
[-34.27322006 245.62115479]
[-22.76197052 236.00073242]
[-10.87267971 226.85163879]
[1.37536561 218.18869019]
[13.96229935 210.02595520]
[26.86770630 202.37666321]
[40.07065201 195.25321960]
[53.54972458 188.66719055]
[67.28305817 182.62924194]
[81.24837494 177.14918518]
[95.42302704 172.23588562]
[109.78402710 167.89733887]
[106.02772522 153.37527466]
[102.27142334 138.85322571]
[98.51512146 124.33116150]
[94.75881958 109.80910492]
[86.23288727 122.15043640]
[71.50292969 124.98386383]
[59.00693512 116.68626404]
[55.90317535 102.01088715]
[63.96962738 89.36445618]
[78.58546448 85.99140930]
[91.37750244 93.82322693]
[81.49364471 81.46928406]
[87.05223846 67.65077209]
[84.60651398 52.85150146]
[82.16078949 38.05223083]
[79.71505737 23.25296021]
[77.26933289 8.45368862]
[62.22971344 7.66374397]
[47.71165085 3.65875793]
[34.39417648 -3.37394834]
[22.90017509 -13.10544300]
[13.76724052 -25.08056450]
[7.42253590 -38.73921967]
[4.16281557 -53.44256210]
[4.14054251 -68.50289154]
[7.35675859 -83.21581268]
[13.66103554 -96.89317322]
[22.75851059 -108.89525604]
[34.22367859 -118.66070557]
[47.52029037 -125.73277283]
[62.02644730 -129.78068542]
[77.06365967 -130.61511230]
[91.92861938 -128.19702148]
[105.92605591 -122.63952637]
[118.40129089 -114.20254517]
[128.77082825 -103.28070068]
[136.54968262 -90.38482666]
[141.37399292 -76.11808014]
[143.01814270 -61.14774704]
[141.40522766 -46.17401886]
[136.61068726 -31.89723969]
[128.85874939 -18.98516464]
[118.51202393 -8.04171085]
[106.05441284 0.42127410]
[92.06860352 6.00796175]
[94.51432800 20.80723190]
[96.96006012 35.60650253]
[99.40578461 50.40577316]
[101.85150909 65.20504761]
[111.56043243 76.50044250]
[106.17677307 91.37750244]
[109.28088379 106.05280304]
[113.03718567 120.57485962]
[116.79347992 135.09692383]
[120.54978180 149.61898804]
[124.30608368 164.14103699]
[138.96960449 160.97206116]
[153.74882507 158.39608765]
[168.61979675 156.41731262]
[183.55838013 155.03892517]
[198.54034424 154.26318359]
[213.54141235 154.09132385]
[228.53721619 154.52363586]
[243.50346375 155.55943298]
[258.41586304 157.19700623]
[273.25021362 159.43371582]
[287.98248291 162.26593018]
[302.58877563 165.68907166]
[317.04534912 169.69755554]
[331.32882690 174.28491211]
[345.41601562 179.44366455]
[359.28402710 185.16548157]
[372.91040039 191.44107056]
[386.27304077 198.26023865]
[399.35025024 205.61195374]
[412.12084961 213.48425293]
[424.56408691 221.86439514]
[436.65982056 230.73878479]
[448.38839722 240.09301758]
[459.73080444 249.91194153]
[470.66864014 260.17959595]
[481.18417358 270.87936401]
[491.26034546 281.99386597]
[500.88079834 293.50506592]
[510.02993774 305.39431763]
[518.69293213 317.64233398]
[526.85571289 330.22921753]
[534.50506592 343.13461304]
[541.62860107 356.33752441]
[548.21466064 369.81655884]
[554.25268555 383.54986572]
[559.73278809 397.51516724]
[564.64611816 411.68981934]
[568.98474121 426.05078125]
[572.74157715 440.57479858]
[575.91052246 455.23834229]
[578.48651123 470.01757812]
[580.46527100 484.88854980]
[581.84362793 499.82711792]
[582.61932373 514.80908203]
[582.79113770 529.81011963]
[582.35882568 544.80596924]
[581.32299805 559.77221680]
[579.68542480 574.68457031]
[577.44866943 589.51898193]
[574.61645508 604.25122070]
[571.19329834 618.85748291]
[567.18481445 633.31408691]
[562.59741211 647.59753418]
[557.43865967 661.68469238]
[551.71679688 675.55273438]
[545.44122314 689.17907715]
[538.62200928 702.54174805]
[531.27026367 715.61895752]
[523.39794922 728.38952637]
[515.01782227 740.83276367]
[506.14340210 752.92846680]
[496.78915405 764.65704346]
[486.97021484 775.99938965]
[476.70254517 786.93725586]
[466.00277710 797.45275879]
[454.88824463 807.52893066]
[443.37701416 817.14935303]
[431.48776245 826.29846191]
[419.23974609 834.96148682]
[406.65283203 843.12420654]
[393.74743652 850.77355957]
[380.54452515 857.89703369]
[367.06546021 864.48309326]
[353.33215332 870.52111816]
[339.36685181 876.00122070]
[325.19219971 880.91448975]
[310.83120728 885.25311279]
[296.30718994 889.00994873]
[281.64364624 892.17883301]
[266.86441040 894.75476074]
[251.99345398 896.73352051]
[237.05485535 898.11187744]
[222.07289124 898.88757324]
[207.07183838 899.05938721]
[192.07601929 898.62701416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[80 120]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
