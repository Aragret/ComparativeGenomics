%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[82.10410309 531.52929688]
[70.08403015 522.50842285]
[59.54276657 511.79678345]
[50.71581268 499.63363647]
[43.80036163 486.29067993]
[38.95091248 472.06604004]
[36.27580261 457.27746582]
[35.83479309 442.25540161]
[37.63773727 427.33535767]
[41.64435196 412.85073853]
[47.76513672 399.12506104]
[55.86334229 386.46502686]
[65.75805664 375.15344238]
[77.22823334 365.44299316]
[90.01761627 357.55062866]
[103.84048462 351.65264893]
[118.38803101 347.88085938]
[116.82750702 332.96224976]
[105.13119507 323.81173706]
[103.33608246 308.70437622]
[113.01328278 296.49826050]
[103.99388885 284.64501953]
[110.25350952 270.11477661]
[108.69298553 255.19616699]
[107.13246155 240.27755737]
[105.57193756 225.35894775]
[96.55254364 213.50569153]
[102.81215668 198.97546387]
[101.25163269 184.05685425]
[99.69110870 169.13824463]
[98.13059235 154.21963501]
[89.11119080 142.36637878]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[87.81729126 58.84434128]
[85.59217834 44.01029968]
[83.36705780 29.17625618]
[81.14194489 14.34221172]
[78.91682434 -0.49183223]
[76.69170380 -15.32587624]
[66.99287415 -27.82560730]
[72.75659943 -41.55982590]
[70.53147888 -56.39387131]
[62.44059372 -43.76305389]
[48.51313400 -38.19295883]
[33.94370270 -41.76110077]
[24.16633415 -53.13664627]
[22.82774353 -68.07679749]
[30.42719460 -81.00925446]
[44.13027954 -87.11051941]
[58.82608795 -84.10498047]
[69.03393555 -73.11256409]
[68.58733368 -88.10591888]
[68.14072418 -103.09926605]
[67.69412231 -118.09262085]
[65.28198242 -121.70309448]
[64.24819183 -125.51042938]
[64.48538208 -129.05714417]
[65.74863434 -131.96760559]
[67.69412231 -133.98582458]
[68.14072418 -148.97917175]
[68.58733368 -163.97253418]
[69.03393555 -178.96588135]
[69.48054504 -193.95922852]
[69.92714691 -208.95257568]
[70.37375641 -223.94592285]
[70.82035828 -238.93928528]
[71.26696777 -253.93263245]
[71.71357727 -268.92596436]
[72.16017914 -283.91934204]
[72.60678864 -298.91268921]
[73.05339050 -313.90603638]
[73.50000000 -328.89938354]
[73.94660187 -343.89273071]
[59.06818390 -345.90527344]
[44.48164749 -349.46206665]
[30.34681129 -354.52407837]
[16.81854057 -361.03588867]
[4.04506254 -368.92614746]
[-7.83367157 -378.10836792]
[-18.68751144 -388.48199463]
[-28.39753723 -399.93331909]
[-36.85735703 -412.33691406]
[-43.97428513 -425.55685425]
[-49.67034149 -439.44833374]
[-53.88312149 -453.85910034]
[-56.56645966 -468.63128662]
[-57.69096375 -483.60302734]
[-57.24430466 -498.61029053]
[-55.23138428 -513.48864746]
[-51.67425537 -528.07513428]
[-46.61188889 -542.20983887]
[-40.09975433 -555.73791504]
[-32.20920181 -568.51123047]
[-23.02667999 -580.38970947]
[-12.65280247 -591.24334717]
[-1.20122898 -600.95306396]
[11.20256996 -609.41259766]
[24.42269135 -616.52917480]
[38.31428909 -622.22491455]
[52.72515869 -626.43731689]
[67.49740601 -629.12030029]
[82.46918488 -630.24444580]
[97.47644043 -629.79742432]
[112.35475922 -627.78417969]
[126.94112396 -624.22668457]
[141.07571411 -619.16394043]
[154.60366821 -612.65148926]
[167.37677002 -604.76062012]
[179.25505066 -595.57781982]
[190.10839844 -585.20367432]
[199.81785583 -573.75189209]
[208.27708435 -561.34790039]
[215.39337158 -548.12756348]
[221.08874512 -534.23583984]
[225.30082703 -519.82489014]
[227.98344421 -505.05255127]
[229.10722351 -490.08074951]
[228.65983582 -475.07351685]
[226.64619446 -460.19522095]
[223.08834839 -445.60894775]
[218.02529907 -431.47448730]
[211.51251221 -417.94668579]
[203.62133789 -405.17379761]
[194.43823242 -393.29571533]
[184.06382751 -382.44262695]
[172.61178589 -372.73345947]
[160.20758057 -364.27453613]
[146.98710632 -357.15856934]
[133.09523010 -351.46353149]
[118.68415833 -347.25180054]
[103.91178131 -344.56951904]
[88.93995667 -343.44613647]
[88.49334717 -328.45275879]
[88.04673767 -313.45941162]
[87.60013580 -298.46606445]
[87.15352631 -283.47271729]
[86.70692444 -268.47937012]
[86.26031494 -253.48602295]
[85.81371307 -238.49267578]
[85.36710358 -223.49932861]
[84.92050171 -208.50596619]
[84.47389221 -193.51261902]
[84.02729034 -178.51927185]
[83.58068085 -163.52592468]
[83.13407898 -148.53257751]
[82.68746948 -133.53923035]
[82.68746948 -118.53922272]
[83.13407898 -103.54587555]
[83.58068085 -88.55252075]
[84.02729034 -73.55917358]
[85.36552429 -58.61898804]
[87.59063721 -43.78494263]
[97.13031769 -32.34624481]
[91.52574921 -17.55099297]
[93.75086975 -2.71694946]
[95.97598267 12.11709404]
[98.20110321 26.95113754]
[100.42621613 41.78518295]
[102.65133667 56.61922455]
[105.25423431 58.99773026]
[106.83439636 62.75513840]
[106.75627899 67.39703369]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[119.42042542 139.19595337]
[113.04919434 152.65911865]
[114.60971832 167.57772827]
[116.17024231 182.49632263]
[117.73076630 197.41493225]
[126.86177826 210.33526611]
[120.49053955 223.79843140]
[122.05106354 238.71704102]
[123.61158752 253.63563538]
[125.17211151 268.55422974]
[134.30313110 281.47457886]
[127.93189240 294.93774414]
[139.92555237 304.87704468]
[141.29562378 320.02886963]
[131.74610901 331.40173340]
[133.30664062 346.32034302]
[148.31982422 347.00000000]
[163.06399536 349.90979004]
[177.20979309 354.98464966]
[190.44116211 362.11126709]
[202.46252441 371.13040161]
[213.00531006 381.84054565]
[221.83398438 394.00244141]
[228.75134277 407.34442139]
[233.60281372 421.56835938]
[236.28002930 436.35653687]
[236.72317505 451.37857056]
[234.92236328 466.29882812]
[230.91781616 480.78405762]
[224.79898071 494.51058960]
[216.70257568 507.17178345]
[206.80947876 518.48480225]
[195.34068298 528.19683838]
[182.55242920 536.09106445]
[168.73039246 541.99096680]
[154.18338013 545.76483154]
[139.23637390 547.32836914]
[124.22328949 546.64654541]
[109.47952271 543.73468018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 187]
[18 186]
[21 183]
[23 181]
[24 180]
[25 179]
[26 178]
[28 176]
[29 175]
[30 174]
[31 173]
[33 171]
[34 170]
[36 168]
[37 167]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[45 156]
[46 155]
[55 154]
[56 153]
[57 152]
[58 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
