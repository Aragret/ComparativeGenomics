%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[70.64787292 705.86944580]
[64.22303009 692.09301758]
[63.56424713 676.90637207]
[68.77198792 662.62530518]
[79.05211639 651.42767334]
[92.83697510 645.02093506]
[92.16719055 630.03594971]
[91.49740601 615.05090332]
[90.82762146 600.06585693]
[90.15783691 585.08081055]
[89.48805237 570.09576416]
[88.81826782 555.11071777]
[88.14848328 540.12567139]
[87.47869110 525.14062500]
[86.58587646 510.16723633]
[85.47023010 495.20880127]
[84.35458374 480.25033569]
[83.23892975 465.29190063]
[82.12328339 450.33343506]
[81.00763702 435.37496948]
[79.89199066 420.41653442]
[78.10951996 405.52279663]
[75.66379547 390.72354126]
[73.21806335 375.92425537]
[70.77233887 361.12500000]
[68.32661438 346.32571411]
[65.88088226 331.52645874]
[61.23468018 345.78872681]
[52.64014816 358.08239746]
[40.84080887 367.34390259]
[26.85741615 372.77206421]
[11.89967823 373.89724731]
[-2.73841333 370.62216187]
[-15.79051685 363.23007202]
[-26.12749481 352.36053467]
[-32.85509491 338.95385742]
[-35.39131165 324.16983032]
[-33.51673889 309.28741455]
[-27.39354515 295.59411621]
[-17.55144691 284.27453613]
[-4.84188557 276.30789185]
[9.63563538 272.38345337]
[24.62866592 272.84066772]
[38.84015656 277.63998413]
[51.04067612 286.36621094]
[60.17475510 298.26449585]
[65.45146179 312.30200195]
[67.23392487 297.40829468]
[69.01639557 282.51455688]
[70.79885864 267.62084961]
[64.62877655 254.06433105]
[73.95114136 241.28137207]
[75.73361206 226.38764954]
[77.51607513 211.49392700]
[75.18968964 204.47897339]
[79.43755341 196.39234924]
[81.44156647 181.52682495]
[83.44558716 166.66128540]
[85.44960022 151.79576111]
[87.45361328 136.93023682]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[98.70233154 47.63799286]
[92.65973663 33.01617050]
[101.85461426 21.29850960]
[87.59902191 14.18388939]
[76.65987396 2.63743854]
[70.34645844 -11.93215942]
[69.40524292 -27.75603294]
[73.93167114 -42.91987610]
[83.36087036 -55.59553909]
[96.53803253 -64.26140594]
[111.85985565 -67.88507843]
[113.42037964 -82.80368042]
[114.98090363 -97.72229004]
[116.31913757 -112.66247559]
[117.43478394 -127.62092590]
[118.55043030 -142.57937622]
[119.66608429 -157.53782654]
[119.88941193 -172.53616333]
[119.21962738 -187.52120972]
[118.54984283 -202.50625610]
[106.05961609 -206.81854248]
[95.80301666 -215.09869385]
[88.98719788 -226.34423828]
[86.40486145 -239.20542908]
[88.34208679 -252.14718628]
[94.54683685 -263.63232422]
[104.26148224 -272.30413818]
[116.31527710 -277.14663696]
[116.09194946 -292.14495850]
[115.86862183 -307.14331055]
[115.64529419 -322.14163208]
[115.42196655 -337.13998413]
[101.17890167 -342.38397217]
[89.79457855 -352.42196655]
[82.80862427 -365.89642334]
[81.16584778 -380.98501587]
[85.08840942 -395.64715576]
[94.04581451 -407.89987183]
[106.82665253 -416.08612061]
[121.70242310 -419.09875488]
[136.66128540 -416.53036499]
[149.68019104 -408.72830200]
[158.99844360 -396.74768066]
[163.35580444 -382.20886230]
[162.16299438 -367.07803345]
[155.58132935 -353.40155029]
[144.50093079 -343.02905273]
[130.42030334 -337.36331177]
[130.64363098 -322.36495972]
[130.86695862 -307.36663818]
[131.09028625 -292.36828613]
[131.31361389 -277.36996460]
[146.84269714 -270.71356201]
[157.93624878 -257.89691162]
[162.32580566 -241.46688843]
[159.08148193 -224.71655273]
[148.80847168 -211.02507019]
[133.53488159 -203.17604065]
[134.20466614 -188.19099426]
[134.87445068 -173.20596313]
[144.23547363 -184.92649841]
[158.66683960 -189.01742554]
[172.78601074 -183.95291138]
[181.32685852 -171.62191772]
[181.10389709 -156.62356567]
[172.20025635 -144.55189514]
[157.93678284 -139.90934753]
[143.63340759 -144.42744446]
[134.62454224 -156.42218018]
[133.50888062 -141.46372986]
[132.39323425 -126.50527954]
[131.27758789 -111.54682159]
[133.66001892 -107.40760803]
[133.46749878 -101.72782135]
[129.89950562 -96.16176605]
[128.33898926 -81.24316406]
[126.77845764 -66.32455444]
[139.68766785 -60.51371765]
[150.18710327 -50.98570251]
[157.24133301 -38.66223907]
[160.14918518 -24.74160767]
[158.61338806 -10.58210659]
[152.77091980 2.43047380]
[143.18092346 13.01847553]
[130.77114868 20.13782501]
[116.74832916 23.08097458]
[122.91841125 36.63750076]
[113.59604645 49.42045975]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.31913757 138.93424988]
[100.31512451 153.79977417]
[98.31111145 168.66529846]
[96.30709839 183.53083801]
[94.30308533 198.39636230]
[92.40979004 213.27639771]
[90.62732697 228.17012024]
[88.84486389 243.06382751]
[94.88745117 257.68566895]
[85.69257355 269.40332031]
[83.91011047 284.29702759]
[82.12764740 299.19076538]
[80.34517670 314.08447266]
[80.68015289 329.08071899]
[83.12588501 343.88000488]
[85.57160950 358.67926025]
[88.01733398 373.47854614]
[90.46306610 388.27780151]
[92.90879059 403.07708740]
[102.50176239 391.54562378]
[117.42577362 390.03762817]
[129.13166809 399.41696167]
[130.91377258 414.31072998]
[121.75122833 426.18707275]
[106.89274597 428.24270630]
[94.85044098 419.30087280]
[95.96608734 434.25933838]
[97.08174133 449.21777344]
[98.19738770 464.17623901]
[99.31303406 479.13470459]
[100.42868042 494.09313965]
[101.54433441 509.05160522]
[104.94501495 514.72143555]
[104.96833801 520.40441895]
[102.46372986 524.47088623]
[103.13352203 539.45593262]
[103.80330658 554.44091797]
[104.47309113 569.42596436]
[105.14287567 584.41101074]
[105.81266022 599.39605713]
[106.48244476 614.38110352]
[107.15222931 629.36614990]
[107.82201385 644.35119629]
[122.12348938 649.50250244]
[133.36161804 659.73840332]
[139.82269287 673.49786377]
[140.52142334 688.68273926]
[135.35127258 702.97741699]
[125.10063934 714.20208740]
[111.33267975 720.64501953]
[96.14691162 721.32379150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 191]
[16 190]
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[27 173]
[47 172]
[48 171]
[49 170]
[50 169]
[52 167]
[53 166]
[54 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 156]
[64 155]
[65 154]
[66 153]
[68 151]
[76 142]
[77 141]
[78 140]
[79 137]
[80 136]
[81 135]
[82 134]
[83 125]
[84 124]
[85 123]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
