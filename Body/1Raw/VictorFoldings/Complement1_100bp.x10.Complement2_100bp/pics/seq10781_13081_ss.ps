%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[67.87503052 199.16931152]
[70.09884644 214.01278687]
[71.05582428 228.99136353]
[70.73907471 243.99714661]
[69.15087128 258.92199707]
[66.30266571 273.65841675]
[62.21498108 288.10018921]
[56.91725922 302.14324951]
[50.44768143 315.68646240]
[42.85285568 328.63220215]
[34.18750381 340.88723755]
[24.51406479 352.36322021]
[13.90223312 362.97750854]
[2.42847109 372.65359497]
[-9.82455158 381.32174683]
[-22.76855087 388.91958618]
[-36.31026459 395.39227295]
[-50.35211945 400.69323730]
[-64.79294586 404.78424072]
[-79.52868652 407.63586426]
[-94.45318604 409.22747803]
[-109.45889282 409.54769897]
[-124.43769836 408.59417725]
[-139.28167725 406.37377930]
[-153.88388062 402.90252686]
[-168.13908386 398.20538330]
[-181.94458008 392.31625366]
[-195.20091248 385.27755737]
[-207.81256104 377.13995361]
[-219.68864441 367.96212769]
[-230.74362183 357.81021118]
[-240.89779663 346.75732422]
[-250.07804871 334.88311768]
[-258.21823120 322.27313232]
[-265.25964355 309.01824951]
[-271.15161133 295.21395874]
[-275.85165405 280.95971680]
[-279.32589722 266.35821533]
[-281.54931641 251.51469421]
[-282.50592041 236.53608704]
[-282.18878174 221.53031921]
[-280.60018921 206.60549927]
[-277.75161743 191.86917114]
[-273.66354370 177.42750549]
[-268.36547852 163.38456726]
[-261.89553833 149.84152222]
[-254.30038452 136.89596558]
[-245.63471985 124.64117432]
[-235.96098328 113.16542816]
[-225.34887695 102.55142975]
[-213.87486267 92.87564087]
[-201.62161255 84.20777893]
[-188.67741394 76.61030579]
[-175.13554382 70.13795471]
[-161.09355164 64.83735657]
[-146.65261841 60.74671555]
[-131.91679382 57.89549255]
[-116.99225616 56.30423737]
[-101.98654175 55.98441696]
[-87.00775909 56.93833160]
[-72.16384125 59.15910721]
[-57.56173325 62.63074875]
[-43.30664825 67.32823944]
[-29.50129509 73.21772766]
[-16.24514580 80.25678253]
[-3.63371181 88.39469147]
[8.24213982 97.57282257]
[19.29684258 107.72502899]
[29.45074654 118.77818298]
[38.63068771 130.65263367]
[51.23300171 122.51741028]
[63.83531189 114.38219452]
[76.43762207 106.24697876]
[89.03993225 98.11176300]
[74.64264679 93.90247345]
[67.31800842 80.81241608]
[71.26189423 66.34017181]
[84.21507263 58.77610397]
[98.75737762 62.45325089]
[106.55831146 75.26517487]
[103.14969635 89.87184906]
[116.42754364 82.89339447]
[129.70538330 75.91494751]
[142.98323059 68.93649292]
[156.26107788 61.95804214]
[150.01647949 48.31554031]
[144.52619934 34.35238647]
[139.80664062 20.11024284]
[135.87185669 5.63162279]
[132.73362732 -9.04026890]
[130.40130615 -23.86164284]
[128.88185120 -38.78826904]
[128.17977905 -53.77559662]
[128.29722595 -68.77890015]
[129.23379517 -83.75340271]
[130.98674011 -98.65441132]
[133.55078125 -113.43746185]
[136.91830444 -128.05842590]
[141.07922363 -142.47367859]
[146.02116394 -156.64019775]
[151.72933960 -170.51570129]
[158.18673706 -184.05877686]
[165.37406921 -197.22901917]
[173.26989746 -209.98710632]
[181.85066223 -222.29496765]
[191.09074402 -234.11587524]
[200.96255493 -245.41453552]
[211.43666077 -256.15725708]
[222.48179626 -266.31198120]
[234.06498718 -275.84835815]
[246.15165710 -284.73794556]
[258.70574951 -292.95425415]
[271.68981934 -300.47271729]
[285.06506348 -307.27090454]
[298.79159546 -313.32855225]
[312.82846069 -318.62753296]
[327.13375854 -323.15209961]
[341.66479492 -326.88870239]
[356.37817383 -329.82617188]
[371.23004150 -331.95578003]
[386.17602539 -333.27117920]
[401.17153931 -333.76843262]
[416.17184448 -333.44601440]
[431.13217163 -332.30493164]
[446.00784302 -330.34860229]
[460.75445557 -327.58282471]
[475.32806396 -324.01586914]
[489.68511963 -319.65838623]
[503.78280640 -314.52334595]
[517.57904053 -308.62612915]
[531.03259277 -301.98431396]
[544.10345459 -294.61773682]
[556.75244141 -286.54833984]
[568.94195557 -277.80023193]
[580.63549805 -268.39950562]
[591.79821777 -258.37423706]
[602.39685059 -247.75434875]
[612.39971924 -236.57151794]
[621.77697754 -224.85911560]
[630.50061035 -212.65211487]
[638.54461670 -199.98693848]
[645.88500977 -186.90138245]
[652.49981689 -173.43449402]
[658.36938477 -159.62648010]
[663.47607422 -145.51852417]
[667.80474854 -131.15275574]
[671.34246826 -116.57203674]
[674.07867432 -101.81987762]
[676.00518799 -86.94031525]
[677.11627197 -71.97774506]
[677.40856934 -56.97683334]
[676.88128662 -41.98234177]
[675.53594971 -27.03901672]
[673.37652588 -12.19146252]
[670.40954590 2.51601362]
[666.64379883 17.03951836]
[662.09057617 31.33570671]
[656.76342773 45.36191177]
[650.67828369 59.07627869]
[643.85327148 72.43787384]
[636.30877686 85.40682220]
[628.06732178 97.94441986]
[619.15350342 110.01324463]
[609.59393311 121.57728577]
[599.41711426 132.60202026]
[588.65338135 143.05456543]
[577.33496094 152.90370178]
[565.49554443 162.12005615]
[553.17047119 170.67611694]
[540.39660645 178.54634094]
[527.21197510 185.70726013]
[513.65594482 192.13748169]
[499.76904297 197.81781006]
[485.59262085 202.73132324]
[471.16906738 206.86334229]
[456.54138184 210.20152283]
[441.75320435 212.73593140]
[426.84872437 214.45896912]
[411.87237549 215.36552429]
[396.86886597 215.45286560]
[381.88296509 214.72074890]
[366.95941162 213.17135620]
[352.14276123 210.80931091]
[337.47717285 207.64166260]
[323.00646973 203.67785645]
[308.77383423 198.92974854]
[294.82171631 193.41146851]
[281.19177246 187.13952637]
[267.92465210 180.13261414]
[255.05999756 172.41163635]
[242.63616943 163.99966431]
[230.69024658 154.92178345]
[219.25788879 145.20509338]
[208.37321472 134.87858582]
[198.06871033 123.97308350]
[188.37512207 112.52112579]
[179.32138062 100.55690765]
[170.93450928 88.11611176]
[163.23953247 75.23588562]
[149.96168518 82.21434021]
[136.68383789 89.19279480]
[123.40599823 96.17124176]
[110.12815094 103.14969635]
[97.17514801 110.71407318]
[84.57283783 118.84928894]
[71.97052765 126.98450470]
[59.36821747 135.11972046]
[46.76590347 143.25494385]
[53.80767441 156.50964355]
[59.69999313 170.31379700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 208]
[71 207]
[72 206]
[73 205]
[74 204]
[81 203]
[82 202]
[83 201]
[84 200]
[85 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
