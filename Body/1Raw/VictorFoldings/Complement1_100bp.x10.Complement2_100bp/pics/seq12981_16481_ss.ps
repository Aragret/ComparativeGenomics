%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[120.28479767 628.16278076]
[110.24629974 616.99102783]
[101.65680695 604.67028809]
[94.64652252 591.38739014]
[89.32173920 577.34362793]
[85.76316833 562.75201416]
[84.02474976 547.83361816]
[84.13285828 532.81469727]
[86.08583832 517.92291260]
[89.85408783 503.38400269]
[95.38047791 489.41839600]
[102.58123779 476.23776245]
[111.34719849 464.04196167]
[121.54547119 453.01586914]
[133.02145386 443.32662964]
[145.60118103 435.12115479]
[159.09393311 428.52377319]
[173.29518127 423.63458252]
[170.19107056 408.95925903]
[167.08695984 394.28396606]
[156.88334656 383.43334961]
[161.59735107 368.33074951]
[158.49324036 353.65545654]
[155.38912964 338.98013306]
[151.84945679 324.40377808]
[141.01809692 314.17971802]
[144.82481384 298.82330322]
[140.85272217 284.35879517]
[136.88063049 269.89425659]
[132.90853882 255.42973328]
[120.92827606 250.68600464]
[113.76071167 239.74488831]
[114.21001434 226.47805786]
[122.33610535 215.73649597]
[118.57980347 201.21443176]
[114.82350159 186.69238281]
[111.06720734 172.17031860]
[107.31090546 157.64825439]
[102.59255219 151.95976257]
[103.60849762 142.88200378]
[100.06882477 128.30563354]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.83066559 47.16372299]
[71.43021393 39.79670715]
[72.69025421 32.51425552]
[68.71815491 18.04973221]
[64.74606323 3.58520746]
[60.82022476 18.06235504]
[51.71400452 29.98195076]
[38.77825928 37.57579422]
[23.93192673 39.71738815]
[9.37737274 36.08903122]
[-2.72632051 27.22897530]
[-10.58364296 14.45155430]
[-13.02900696 -0.34777641]
[-9.69965839 -14.97362423]
[-1.08948457 -27.25633240]
[11.52424526 -35.37383270]
[26.27035904 -38.12194443]
[40.96136093 -35.09299850]
[53.41792297 -26.73632431]
[61.79145050 -14.29334354]
[60.89863586 -29.26675034]
[52.35365295 -42.58192444]
[59.31969452 -55.74716187]
[58.42687988 -70.72056580]
[57.53406143 -85.69396973]
[45.99617004 -96.15890503]
[45.30403137 -111.35678864]
[55.35184479 -122.29190826]
[54.45903015 -137.26531982]
[53.56621552 -152.23872375]
[37.64587784 -155.74551392]
[23.36502266 -163.57856750]
[11.87105846 -175.09959412]
[4.08496857 -189.37431335]
[0.62750363 -205.24829102]
[1.76970482 -221.44023132]
[7.41167068 -236.64546204]
[17.09124184 -249.64099121]
[30.02185059 -259.38394165]
[45.15642929 -265.09518433]
[43.81819534 -280.03536987]
[42.47996140 -294.97555542]
[41.14172745 -309.91574097]
[30.71765137 -299.12969971]
[15.72282124 -298.73590088]
[4.74695683 -308.95989990]
[4.07753038 -323.94494629]
[14.09802055 -335.10693359]
[29.06823540 -336.05175781]
[40.41212463 -326.23901367]
[40.41212463 -341.23901367]
[40.41212463 -356.23901367]
[40.41212463 -371.23901367]
[40.41212463 -386.23901367]
[27.07099724 -393.84887695]
[19.33602905 -407.11785889]
[19.28788567 -422.47665405]
[26.93951988 -435.79388428]
[40.23268127 -443.48721313]
[55.59157181 -443.48721313]
[68.88473511 -435.79388428]
[76.53636932 -422.47665405]
[76.48822021 -407.11785889]
[68.75325775 -393.84887695]
[55.41212463 -386.23901367]
[55.41212463 -371.23901367]
[55.41212463 -356.23901367]
[55.41212463 -341.23901367]
[55.41212463 -326.23901367]
[56.08190918 -311.25396729]
[57.42014694 -296.31378174]
[58.75838089 -281.37359619]
[60.09661484 -266.43341064]
[73.69252014 -264.22576904]
[86.37034607 -258.81576538]
[97.38715363 -250.51524353]
[106.09609985 -239.80560303]
[111.98442841 -227.30987549]
[114.70364380 -213.75645447]
[114.09013367 -199.93664551]
[110.17501831 -186.65847778]
[103.18257141 -174.69947815]
[93.51744080 -164.76106262]
[81.74117279 -157.42752075]
[68.53961945 -153.13154602]
[69.43243408 -138.15812683]
[70.32524872 -123.18473053]
[81.60131073 -113.52107239]
[82.72005463 -98.34863281]
[72.50746918 -86.58679199]
[73.40028381 -71.61338043]
[74.29309845 -56.63997650]
[82.77422333 -44.39580154]
[75.87203979 -30.15956497]
[76.76485443 -15.18616009]
[79.21058655 -0.38688880]
[83.18267822 14.07763481]
[87.15477753 28.54215813]
[91.23444366 42.97671127]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.37755585 113.23600006]
[116.20229340 117.50491333]
[116.15755463 121.58081818]
[114.64520264 124.76596069]
[118.18487549 139.34233093]
[121.83296204 153.89195251]
[125.58926392 168.41401672]
[129.34556580 182.93608093]
[133.10186768 197.45812988]
[136.85816956 211.98019409]
[152.09140015 220.58064270]
[156.30839539 237.20988464]
[147.37306213 251.45764160]
[151.34515381 265.92218018]
[155.31724548 280.38668823]
[159.28933716 294.85122681]
[170.40481567 306.10986328]
[166.31398010 320.43167114]
[169.50999451 323.37097168]
[171.41304016 326.82684326]
[172.01948547 330.32934570]
[171.47871399 333.45571899]
[170.06443787 335.87603760]
[173.16854858 350.55133057]
[176.27265930 365.22665405]
[186.69828796 377.12692261]
[181.76225281 391.17987061]
[184.86636353 405.85516357]
[187.97047424 420.53045654]
[202.93515015 419.25051880]
[217.94367981 419.81930542]
[232.76855469 422.22821045]
[247.18502808 426.44067383]
[260.97454834 432.39291382]
[273.92807007 439.99459839]
[285.84921265 449.13058472]
[296.55725098 459.66229248]
[305.88989258 471.43011475]
[313.70562744 484.25564575]
[319.88595581 497.94442749]
[324.33721924 512.28900146]
[326.99191284 527.07183838]
[327.80981445 542.06884766]
[326.77850342 557.05267334]
[323.91360474 571.79626465]
[319.25860596 586.07592773]
[312.88400269 599.67535400]
[304.88647461 612.38830566]
[295.38726807 624.02209473]
[284.53036499 634.40032959]
[272.48037720 643.36566162]
[259.41995239 650.78216553]
[245.54708862 656.53747559]
[231.07209778 660.54431152]
[216.21443176 662.74188232]
[201.19932556 663.09692383]
[186.25439453 661.60406494]
[171.60620117 658.28594971]
[157.47680664 653.19281006]
[144.08042908 646.40191650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 179]
[19 178]
[20 177]
[22 175]
[23 174]
[24 173]
[25 168]
[27 166]
[28 165]
[29 164]
[30 163]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[40 155]
[41 154]
[42 150]
[44 148]
[45 147]
[46 146]
[47 145]
[49 144]
[50 143]
[51 142]
[66 141]
[67 140]
[69 138]
[70 137]
[71 136]
[74 133]
[75 132]
[76 131]
[86 119]
[87 118]
[88 117]
[89 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
