%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[106.32171631 468.54782104]
[108.37078857 483.47262573]
[107.04689026 498.47912598]
[102.41642761 512.81463623]
[94.71166229 525.76007080]
[84.31906128 536.66607666]
[71.75991821 544.98565674]
[57.66418839 550.30151367]
[42.73891068 552.34698486]
[27.73273468 551.01947021]
[13.39835739 546.38549805]
[0.45478749 538.67761230]
[-10.44873047 528.28234863]
[-18.76528168 515.72119141]
[-24.07770920 501.62417603]
[-26.11954498 486.69842529]
[-24.78837395 471.69256592]
[-20.15096283 457.35931396]
[-12.43992615 444.41760254]
[-2.04204321 433.51660156]
[10.52113152 425.20309448]
[24.61943245 419.89407349]
[39.54570007 417.85586548]
[54.55123138 419.19067383]
[59.16524124 404.91793823]
[63.77925110 390.64520264]
[68.39325714 376.37246704]
[73.00727081 362.09973145]
[76.54694366 347.52337646]
[78.99266815 332.72409058]
[81.43839264 317.92483521]
[83.88412476 303.12554932]
[85.44464874 288.20693970]
[86.11443329 273.22189331]
[86.78421783 258.23687744]
[87.45400238 243.25183105]
[72.83924103 237.39540100]
[61.09336853 226.87068176]
[53.64881516 212.93652344]
[51.42188263 197.26899719]
[54.70001984 181.75981140]
[63.10485458 168.28794861]
[75.63578796 158.49197388]
[90.78904724 153.57075500]
[91.23565674 138.57740784]
[91.68225861 123.58406067]
[92.12886810 108.59070587]
[83.62806702 120.94936371]
[70.65008545 128.47079468]
[55.70075607 129.70272827]
[41.66656876 124.40728760]
[31.25730705 113.60695648]
[26.48283005 99.38710022]
[28.26501656 84.49334717]
[36.25975800 71.80145264]
[48.92338943 63.76202393]
[63.81076431 61.92734528]
[78.04736328 66.65166473]
[88.88432312 77.02279663]
[94.22937775 91.03948975]
[97.33348846 76.36418152]
[96.04771423 67.32070160]
[100.59460449 61.49424744]
[103.91687012 46.86678696]
[107.23912811 32.23932648]
[110.56138611 17.61186790]
[113.88364410 2.98440766]
[117.20590210 -11.64305210]
[120.52816772 -26.27051353]
[121.75514221 -41.22024536]
[120.86231995 -56.19365311]
[119.96950531 -71.16706085]
[119.07669067 -86.14046478]
[118.18387604 -101.11386871]
[117.29106140 -116.08727264]
[108.74607849 -129.40245056]
[115.71212006 -142.56768799]
[114.81930542 -157.54109192]
[113.92648315 -172.51449585]
[113.03366852 -187.48789978]
[112.14085388 -202.46130371]
[111.24803925 -217.43472290]
[109.46557617 -232.32843018]
[106.79977417 -247.08964539]
[104.13397980 -261.85086060]
[101.46818542 -276.61209106]
[86.41884613 -277.29400635]
[71.89869690 -281.30810547]
[58.63607025 -288.45306396]
[47.29621506 -298.37051392]
[38.44792938 -310.56292725]
[32.53504562 -324.41882324]
[29.85414314 -339.24313354]
[30.53970146 -354.29232788]
[34.55733109 -368.81149292]
[41.70550919 -382.07238770]
[51.62568283 -393.40985107]
[63.82026672 -402.25518799]
[77.67758179 -408.16470337]
[92.50255585 -410.84201050]
[107.55156708 -410.15280151]
[122.06976318 -406.13165283]
[135.32893372 -398.98028564]
[146.66397095 -389.05734253]
[155.50634766 -376.86062622]
[161.41252136 -363.00186157]
[164.08624268 -348.17623901]
[163.39338684 -333.12741089]
[159.36872864 -318.61019897]
[152.21412659 -305.35275269]
[142.28845215 -294.02011108]
[130.08958435 -285.18069458]
[116.22940063 -279.27789307]
[118.89520264 -264.51666260]
[121.56099701 -249.75544739]
[124.22679138 -234.99423218]
[131.93801880 -247.86033630]
[145.69346619 -253.84263611]
[160.36267090 -250.70986938]
[170.47439575 -239.63047791]
[172.25721741 -224.73680115]
[165.04618835 -211.58381653]
[151.53083801 -205.07725525]
[136.75205994 -207.64392090]
[126.22144318 -218.32752991]
[127.11425781 -203.35412598]
[128.00708008 -188.38072205]
[128.89988708 -173.40731812]
[129.79270935 -158.43391418]
[130.68553162 -143.46051025]
[139.16664124 -131.21632385]
[132.26446533 -116.98008728]
[133.15728760 -102.00668335]
[134.05009460 -87.03327942]
[134.94291687 -72.05987549]
[135.83572388 -57.08646774]
[136.72854614 -42.11306381]
[142.83331299 -55.81458664]
[152.66017151 -67.14740753]
[165.35900879 -75.13111877]
[179.83123779 -79.07505035]
[194.82487488 -78.63800812]
[209.04280090 -73.85781097]
[221.25505066 -65.14798737]
[230.40512085 -53.26202011]
[235.70146179 -39.22817230]
[236.68585205 -24.26050949]
[233.27316284 -9.65388203]
[225.75862122 3.32808852]
[214.79229736 13.56233311]
[201.32289124 20.16348648]
[186.51565552 22.56048203]
[171.65155029 20.54595757]
[158.01646423 14.29418945]
[146.78997803 4.34601688]
[138.94331360 -8.43794346]
[135.15562439 -22.94825363]
[131.83335876 -8.32079315]
[128.51110840 6.30666733]
[125.18884277 20.93412781]
[121.86658478 35.56158829]
[118.54432678 50.18904877]
[115.22206879 64.81650543]
[112.00879669 79.46829224]
[108.90468597 94.14360046]
[107.12221527 109.03731537]
[106.67561340 124.03066254]
[106.22900391 139.02401733]
[105.78240204 154.01736450]
[119.21348572 159.00811768]
[130.42985535 167.88957214]
[138.34313965 179.78302002]
[142.19065857 193.51831055]
[141.60902405 207.74897766]
[136.66835022 221.08424377]
[127.86407471 232.22492981]
[116.06740570 240.09002686]
[102.43904114 243.92161560]
[101.76925659 258.90664673]
[101.09947205 273.89169312]
[100.42968750 288.87673950]
[110.79904175 278.03808594]
[125.53783417 275.25097656]
[139.14886475 281.55493164]
[146.55554199 294.59872437]
[144.99537659 309.51739502]
[135.05026245 320.74658203]
[120.42947388 324.09808350]
[106.58621979 318.32192993]
[98.68339539 305.57128906]
[96.23767090 320.37054443]
[93.79193878 335.16983032]
[91.34621429 349.96908569]
[102.05191040 339.46252441]
[116.55160522 335.62078857]
[131.05509949 339.44812012]
[141.77124023 349.94403076]
[145.89883423 364.36495972]
[142.35893250 378.94128418]
[132.07687378 389.86279297]
[117.74036407 394.27462769]
[103.09691620 391.02352905]
[91.97430420 380.95938110]
[87.27999878 366.71374512]
[82.66599274 380.98648071]
[78.05198669 395.25921631]
[73.43797302 409.53195190]
[68.82396698 423.80468750]
[81.77127075 431.50631714]
[92.67982483 441.89627075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 208]
[25 207]
[26 206]
[27 205]
[28 204]
[29 193]
[30 192]
[31 191]
[32 190]
[33 181]
[34 180]
[35 179]
[36 178]
[44 169]
[45 168]
[46 167]
[47 166]
[60 165]
[61 164]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 116]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
