%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[49.79414749 846.68707275]
[34.81773758 847.59606934]
[19.81392479 847.66387939]
[4.82991171 846.89031982]
[-10.08715439 845.27783203]
[-24.89034081 842.83142090]
[-39.53306580 839.55889893]
[-53.96926498 835.47045898]
[-68.15351105 830.57904053]
[-82.04117584 824.89996338]
[-95.58856964 818.45117188]
[-108.75305176 811.25286865]
[-121.49321747 803.32775879]
[-133.76898193 794.70074463]
[-145.54170227 785.39904785]
[-156.77435303 775.45184326]
[-167.43159485 764.89050293]
[-177.47988892 753.74822998]
[-186.88760376 742.05999756]
[-195.62516785 729.86273193]
[-203.66508484 717.19470215]
[-210.98204041 704.09576416]
[-217.55300903 690.60723877]
[-223.35734558 676.77142334]
[-228.37677002 662.63195801]
[-232.59548950 648.23333740]
[-236.00021362 633.62078857]
[-238.58026123 618.84027100]
[-240.32749939 603.93841553]
[-241.23643494 588.96197510]
[-241.30419922 573.95819092]
[-240.53059387 558.97418213]
[-238.91802979 544.05712891]
[-236.47160339 529.25390625]
[-233.19900513 514.61120605]
[-229.11051941 500.17504883]
[-224.21902466 485.99081421]
[-218.53991699 472.10314941]
[-212.09104919 458.55578613]
[-204.89271545 445.39132690]
[-196.96755981 432.65121460]
[-188.34053040 420.37548828]
[-179.03877258 408.60278320]
[-169.09153748 397.37017822]
[-158.53013611 386.71298218]
[-147.38780212 376.66473389]
[-135.69956970 367.25704956]
[-123.50225067 358.51953125]
[-110.83419037 350.47967529]
[-97.73526001 343.16275024]
[-84.24667358 336.59182739]
[-70.41087341 330.78753662]
[-56.27139282 325.76818848]
[-41.87271500 321.54949951]
[-27.26014709 318.14483643]
[-12.47966385 315.56484985]
[2.42222881 313.81765747]
[17.39864349 312.90878296]
[32.40245819 312.84106445]
[47.38646698 313.61474609]
[62.30352020 315.22735596]
[64.74924469 300.42807007]
[67.19497681 285.62881470]
[69.64070129 270.82952881]
[72.08643341 256.03027344]
[74.53215790 241.23098755]
[76.97788239 226.43171692]
[79.09250641 211.58152771]
[80.87497711 196.68780518]
[82.65744019 181.79409790]
[84.43990326 166.90037537]
[86.22237396 152.00665283]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[82.49770355 86.07986450]
[67.70713806 83.58203888]
[58.90283966 71.43772888]
[61.12831116 56.60373688]
[73.10870361 47.57765198]
[87.98110199 49.53002548]
[97.22566223 61.34153366]
[100.11093903 46.62164307]
[95.17260742 31.59089088]
[105.21353149 20.58956909]
[108.09880066 5.86967707]
[110.98407745 -8.85021400]
[96.75806427 -13.67764854]
[83.30245209 -20.35820770]
[70.85736084 -28.77267265]
[59.64489746 -38.77087402]
[49.86515427 -50.17438889]
[41.69266510 -62.77969742]
[35.27327728 -76.36185455]
[30.72155380 -90.67845917]
[28.11872101 -105.47402191]
[27.51123428 -120.48449707]
[28.90993309 -135.44200134]
[32.28985596 -150.07962036]
[37.59068298 -164.13609314]
[44.71781540 -177.36059570]
[53.54406357 -189.51710510]
[63.91191101 -200.38868713]
[75.63632965 -209.78131104]
[88.50808716 -217.52735901]
[102.29747009 -223.48860168]
[116.75838470 -227.55865479]
[131.63276672 -229.66487122]
[146.65516663 -229.76966858]
[161.55749512 -227.87117004]
[176.07377625 -224.00326538]
[189.94499207 -218.23498535]
[202.92355347 -210.66926575]
[214.77787781 -201.44111633]
[225.29638672 -190.71524048]
[234.29136658 -178.68304443]
[241.60231018 -165.55926514]
[247.09872437 -151.57810974]
[250.68252563 -136.98907471]
[252.28976440 -122.05253601]
[251.89175415 -107.03504944]
[249.49559021 -92.20461273]
[245.14404297 -77.82589722]
[238.91476440 -64.15550995]
[230.91893005 -51.43740845]
[221.29924011 -39.89856720]
[210.22734070 -29.74490929]
[197.90086365 -21.15764046]
[184.53976440 -14.29000759]
[170.38247681 -9.26457405]
[155.68168640 -6.17102337]
[140.69972229 -5.06456423]
[125.70396423 -5.96494198]
[122.81869507 8.75494957]
[119.93342590 23.47484016]
[125.07812500 37.45272446]
[114.83082581 49.50691223]
[111.94555664 64.22680664]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.11608887 153.78912354]
[99.33362579 168.68284607]
[97.55115509 183.57655334]
[95.76869202 198.47027588]
[93.98622894 213.36399841]
[96.04210663 218.16195679]
[96.05110168 222.80448914]
[94.41517639 226.53796387]
[91.77715302 228.87745667]
[89.33142853 243.67672729]
[86.88570404 258.47598267]
[84.43997192 273.27526855]
[81.99424744 288.07452393]
[79.54851532 302.87380981]
[77.10279083 317.67306519]
[91.74554443 320.94552612]
[106.18177032 325.03384399]
[120.36605072 329.92517090]
[134.25376892 335.60412598]
[147.80119324 342.05285645]
[160.96574402 349.25103760]
[173.70596313 357.17605591]
[185.98178101 365.80294800]
[197.75457764 375.10455322]
[208.98730469 385.05166626]
[219.64462280 395.61294556]
[229.69299316 406.75518799]
[239.10081482 418.44329834]
[247.83845520 430.64053345]
[255.87846375 443.30850220]
[263.19552612 456.40734863]
[269.76660156 469.89587402]
[275.57101440 483.73159790]
[280.59054565 497.87103271]
[284.80938721 512.26965332]
[288.21423340 526.88220215]
[290.79437256 541.66265869]
[292.54171753 556.56451416]
[293.45077515 571.54089355]
[293.51864624 586.54473877]
[292.74514771 601.52874756]
[291.13269043 616.44580078]
[288.68637085 631.24902344]
[285.41387939 645.89172363]
[281.32550049 660.32794189]
[276.43411255 674.51220703]
[270.75512695 688.39990234]
[264.30633545 701.94732666]
[257.10809326 715.11181641]
[249.18305969 727.85205078]
[240.55612183 740.12780762]
[231.25444031 751.90057373]
[221.30729675 763.13330078]
[210.74597168 773.79052734]
[199.60371399 783.83886719]
[187.91555786 793.24664307]
[175.71829224 801.98425293]
[163.05029297 810.02423096]
[149.95141602 817.34124756]
[136.46289062 823.91223145]
[122.62712860 829.71661377]
[108.48767853 834.73608398]
[94.08903503 838.95489502]
[79.47649384 842.35968018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 151]
[69 150]
[70 149]
[71 148]
[72 147]
[73 146]
[74 145]
[75 144]
[76 142]
[77 141]
[84 140]
[85 139]
[87 137]
[88 136]
[89 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
