%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[53.36721802 603.80676270]
[46.68030548 617.25170898]
[38.53005981 629.86334229]
[29.01898003 641.48309326]
[18.26667786 651.96490479]
[6.40837669 661.17687988]
[-6.40679455 669.00323486]
[-20.01767159 675.34545898]
[-34.25308228 680.12384033]
[-48.93399811 683.27832031]
[-63.87579727 684.76916504]
[-78.89057159 684.57769775]
[-93.78948212 682.70623779]
[-108.38517761 679.17834473]
[-122.49408722 674.03845215]
[-135.93878174 667.35113525]
[-148.55017090 659.20050049]
[-160.16967773 649.68908691]
[-170.65115356 638.93646240]
[-179.86277771 627.07788086]
[-187.68872070 614.26251221]
[-194.03056335 600.65142822]
[-198.80853271 586.41589355]
[-201.96257019 571.73486328]
[-203.45297241 556.79302979]
[-203.26101685 541.77825928]
[-201.38912964 526.87939453]
[-197.86082458 512.28381348]
[-192.72048950 498.17504883]
[-186.03277588 484.73056030]
[-177.88177490 472.11941528]
[-168.36999512 460.50018311]
[-157.61706543 450.01904297]
[-145.75822449 440.80776978]
[-132.94258118 432.98220825]
[-119.33132935 426.64077759]
[-105.09562683 421.86322021]
[-90.41452026 418.70962524]
[-75.47263336 417.21966553]
[-60.45787430 417.41207886]
[-45.55907059 419.28442383]
[-30.96359253 422.81314087]
[-16.85499001 427.95391846]
[-10.17479420 414.52352905]
[-3.49459982 401.09313965]
[3.18559480 387.66278076]
[9.86578941 374.23239136]
[16.54598427 360.80203247]
[23.22617912 347.37164307]
[29.90637398 333.94128418]
[35.25756073 319.92825317]
[29.91232109 303.21313477]
[43.12083435 290.38281250]
[46.87713242 275.86074829]
[39.12033844 263.19711304]
[42.72288895 248.41618347]
[56.05826950 240.36599731]
[59.81456757 225.84394836]
[63.57086945 211.32188416]
[55.81407166 198.65824890]
[59.41662216 183.87730408]
[72.75200653 175.82713318]
[76.50830841 161.30506897]
[80.26460266 146.78300476]
[84.02090454 132.26094055]
[87.77720642 117.73889160]
[91.53350830 103.21682739]
[90.06701660 99.65007019]
[90.17982483 95.45422363]
[92.11762238 91.34910583]
[95.79538727 88.13758087]
[100.19638824 73.79772949]
[104.59738159 59.45788574]
[108.99838257 45.11803818]
[103.65585327 33.37835312]
[107.61666870 21.52526474]
[118.24019623 15.74017906]
[122.85420990 1.46744609]
[127.46821594 -12.80528736]
[131.65522766 -27.20907021]
[135.41152954 -41.73112869]
[139.16783142 -56.25318909]
[137.77212524 -62.71566010]
[139.57846069 -68.10400391]
[143.25820923 -71.14842224]
[139.68054199 -86.55981445]
[150.66291809 -96.62145996]
[154.84992981 -111.02523804]
[159.03694153 -125.42902374]
[163.22395325 -139.83280945]
[162.02128601 -146.33396912]
[163.98724365 -151.66613770]
[167.75599670 -154.59965515]
[172.37001038 -168.87237549]
[176.98400879 -183.14511108]
[181.59802246 -197.41784668]
[186.21203613 -211.69058228]
[190.82604980 -225.96331787]
[177.50433350 -232.93754578]
[165.55297852 -242.06297302]
[155.31587219 -253.07704163]
[147.08755493 -265.66284180]
[141.10475159 -279.45828247]
[137.53961182 -294.06643677]
[136.49472046 -309.06698608]
[138.00012207 -324.02832031]
[142.01251221 -338.51998901]
[148.41645813 -352.12506104]
[157.02767944 -364.45205688]
[167.59843445 -375.14630127]
[179.82458496 -383.90011597]
[193.35433960 -390.46166992]
[207.79843140 -394.64208984]
[222.74128723 -396.32116699]
[237.75294495 -395.45059204]
[252.40150452 -392.05535889]
[266.26550293 -386.23321533]
[278.94604492 -378.15161133]
[290.07827759 -368.04312134]
[299.34191895 -356.19857788]
[306.47039795 -342.95877075]
[311.25863647 -328.70462036]
[313.56890869 -313.84628296]
[313.33468628 -298.81121826]
[310.56271362 -284.03204346]
[305.33276367 -269.93395996]
[297.79531860 -256.92260742]
[288.16723633 -245.37237549]
[276.72552490 -235.61557007]
[263.79940796 -227.93289185]
[249.76078796 -222.54542542]
[235.01356506 -219.60813904]
[219.98207092 -219.20558167]
[205.09877014 -221.34930420]
[200.48477173 -207.07656860]
[195.87075806 -192.80383301]
[191.25674438 -178.53111267]
[186.64274597 -164.25837708]
[182.02873230 -149.98564148]
[177.62773132 -135.64579773]
[173.44071960 -121.24201202]
[169.25370789 -106.83822632]
[165.06669617 -92.43444824]
[168.94384766 -78.05331421]
[157.66198730 -66.96141052]
[153.68989563 -52.49688721]
[149.93359375 -37.97482681]
[146.17729187 -23.45276833]
[147.48208618 -20.97171211]
[147.88272095 -17.82431602]
[147.12046814 -14.35237312]
[145.06501770 -10.98493767]
[141.74095154 -8.19127846]
[137.12693787 6.08145523]
[132.51292419 20.35418892]
[137.10647583 37.29131699]
[123.33822632 49.51903534]
[118.93723297 63.85888290]
[114.53623199 78.19873047]
[110.13523102 92.53857422]
[106.05556488 106.97312927]
[102.29926300 121.49518585]
[98.54296875 136.01724243]
[94.78666687 150.53930664]
[91.03036499 165.06137085]
[87.27406311 179.58341980]
[95.03353119 193.09002686]
[91.01723480 207.76396179]
[78.09292603 215.07818604]
[74.33663177 229.60025024]
[70.58032990 244.12229919]
[78.33979034 257.62890625]
[74.32350159 272.30282593]
[61.39919281 279.61706543]
[57.64289093 294.13912964]
[63.50429535 305.62854004]
[60.07669830 317.64666748]
[49.72208405 323.90036011]
[60.67845917 313.65545654]
[74.82774353 308.67572021]
[89.78552246 309.80029297]
[103.03116608 316.83969116]
[112.33253479 328.60763550]
[116.12218475 343.12103271]
[113.76150513 357.93408203]
[105.64830780 370.55059814]
[93.14980316 378.84442139]
[78.37220764 381.41787720]
[63.80581665 377.83737183]
[51.90531540 368.70620728]
[44.67614746 355.56317139]
[43.33675003 340.62145996]
[36.65655518 354.05184937]
[29.97636032 367.48220825]
[23.29616547 380.91259766]
[16.61597061 394.34298706]
[9.93577576 407.77334595]
[3.25558138 421.20373535]
[-3.42461324 434.63409424]
[9.18727207 442.78396606]
[20.80734062 452.29470825]
[31.28945732 463.04669189]
[40.50179672 474.90472412]
[48.32851028 487.71966553]
[54.67116165 501.33035278]
[59.44998550 515.56561279]
[62.60488892 530.24645996]
[64.09619141 545.18817139]
[63.90513992 560.20294189]
[62.03413391 575.10192871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[50 192]
[51 178]
[53 175]
[54 174]
[57 171]
[58 170]
[59 169]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[71 160]
[72 159]
[73 158]
[74 157]
[77 155]
[78 154]
[79 153]
[80 148]
[81 147]
[82 146]
[85 145]
[87 143]
[88 142]
[89 141]
[90 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
