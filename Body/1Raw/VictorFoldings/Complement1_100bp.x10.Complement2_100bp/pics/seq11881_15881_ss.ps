%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[48.48316956 612.71905518]
[37.16085815 602.81732178]
[27.78869820 591.05285645]
[20.66796303 577.80389404]
[16.02755547 563.49633789]
[14.01664543 548.59008789]
[14.69987583 533.56433105]
[18.05528259 518.90209961]
[23.97500610 505.07473755]
[32.26874924 492.52667236]
[42.66990280 481.66134644]
[54.84411240 472.82797241]
[68.40002441 466.31054688]
[82.90188599 462.31854248]
[81.56365204 447.37835693]
[80.22541809 432.43817139]
[78.88718414 417.49798584]
[77.54895020 402.55780029]
[76.21071625 387.61761475]
[74.76129150 372.68780518]
[68.28118134 386.21585083]
[56.91193008 396.00054932]
[42.56945801 400.39297485]
[27.67072296 398.65295410]
[14.72642326 391.07369995]
[5.91790152 378.93246460]
[2.72954798 364.27523804]
[5.69865656 349.57202148]
[14.32487965 337.30056763]
[27.15454865 329.52886963]
[42.02563858 327.56652832]
[56.43210602 331.74429321]
[67.94621277 341.35809326]
[74.62804413 354.78945923]
[75.96627808 339.84927368]
[69.39530945 326.48248291]
[78.33294678 313.42761230]
[79.67118073 298.48742676]
[81.00941467 283.54724121]
[82.34764862 268.60705566]
[83.46329498 253.64862061]
[84.35610962 238.67521667]
[76.56406403 229.42260742]
[77.18534088 216.94071960]
[86.43161774 207.94799805]
[87.54727173 192.98953247]
[88.66291809 178.03108215]
[81.89366150 164.76359558]
[90.63594055 151.57711792]
[91.41725922 136.59747314]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[94.21656799 61.42790985]
[94.88635254 46.44287109]
[95.55613708 31.45783234]
[88.44276428 17.32593727]
[96.74064636 4.95684767]
[97.41043091 -10.02819157]
[98.08021545 -25.01322937]
[98.75000763 -39.99826813]
[99.41979218 -54.98330688]
[100.08957672 -69.96834564]
[100.75936127 -84.95338440]
[93.64598846 -99.08528137]
[101.94387054 -111.45436859]
[102.61365509 -126.43940735]
[103.28343964 -141.42445374]
[103.95322418 -156.40948486]
[96.83985138 -170.54138184]
[105.13774109 -182.91047668]
[104.35641479 -197.89010620]
[102.13130188 -212.72415161]
[97.76350403 -220.74662781]
[99.98519135 -227.79545593]
[97.98117828 -242.66098022]
[95.97716522 -257.52651978]
[86.46551514 -270.16925049]
[92.43307495 -283.81613159]
[90.42906189 -298.68167114]
[80.66391754 -307.10809326]
[79.30080414 -319.53088379]
[86.52831268 -329.23086548]
[84.74584961 -344.12460327]
[82.96337891 -359.01831055]
[81.18091583 -373.91201782]
[79.28762054 -388.79205322]
[77.28360748 -403.65759277]
[75.27959442 -418.52313232]
[60.36685944 -420.99328613]
[46.84549713 -427.75082397]
[35.91781616 -438.19482422]
[28.55550194 -451.39663696]
[25.41320229 -466.18234253]
[26.77033043 -481.23724365]
[32.50621033 -495.22262573]
[42.11081314 -506.89492798]
[54.73010254 -515.21630859]
[69.24198151 -519.44677734]
[84.35605621 -519.21014404]
[98.72840881 -514.52752686]
[111.08104706 -505.81524658]
[120.31558228 -493.84802246]
[125.61089325 -479.68994141]
[126.49612427 -464.59994507]
[122.89255524 -449.91983032]
[115.12061310 -436.95495605]
[103.87137604 -426.85812378]
[90.14512634 -420.52713013]
[92.14913940 -405.66159058]
[94.15315247 -390.79608154]
[98.16210175 -384.58718872]
[96.07463074 -375.69448853]
[97.85710144 -360.80078125]
[99.63956451 -345.90704346]
[101.42202759 -331.01333618]
[112.68200684 -317.55303955]
[105.29458618 -300.68569946]
[107.29859924 -285.82015991]
[116.66691589 -274.24069214]
[110.84268951 -259.53051758]
[112.84671021 -244.66499329]
[114.85072327 -229.79946899]
[116.96534729 -214.94926453]
[119.19046021 -200.11523438]
[125.06005096 -213.91914368]
[135.98104858 -224.20173645]
[150.11308289 -229.23020935]
[165.07466125 -228.15718079]
[178.34448242 -221.16348267]
[187.68635559 -209.42765808]
[191.52600098 -194.92741394]
[189.21638489 -180.10629272]
[181.14671326 -167.46191406]
[168.67686462 -159.12507629]
[153.90823364 -156.50067139]
[139.32958984 -160.03097534]
[127.39768982 -169.12106323]
[120.12277985 -182.24069214]
[127.28405762 -169.18061829]
[118.93826294 -155.73970032]
[118.26847839 -140.75466919]
[117.59869385 -125.76962280]
[116.92890930 -110.78458405]
[124.09019470 -97.72451782]
[115.74440002 -84.28359985]
[115.07461548 -69.29856110]
[114.40483093 -54.31352234]
[113.73504639 -39.32848358]
[113.06525421 -24.34344482]
[112.39546967 -9.35840607]
[111.72568512 5.62663269]
[118.88697052 18.68669891]
[110.54117584 32.12761688]
[109.87139130 47.11265564]
[109.20160675 62.09769440]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[106.41061401 137.04408264]
[108.88635254 141.63949585]
[109.30949402 146.26272583]
[108.01317596 150.12725830]
[105.59439087 152.69276428]
[112.28385162 167.03018188]
[103.62136841 179.14672852]
[102.50572205 194.10517883]
[101.39007568 209.06364441]
[109.76835632 225.46138000]
[99.32951355 239.56802368]
[98.43669891 254.54142761]
[101.04940033 260.61474609]
[100.31326294 266.24993896]
[97.28783417 269.94531250]
[95.94960022 284.88549805]
[94.61136627 299.82568359]
[93.27312469 314.76586914]
[99.74838257 329.20129395]
[90.90646362 341.18753052]
[89.56822968 356.12771606]
[89.67990112 371.12728882]
[93.68511963 379.33679199]
[91.15089417 386.27938843]
[92.48913574 401.21957397]
[93.82736969 416.15975952]
[95.16560364 431.09994507]
[96.50383759 446.04013062]
[97.84207153 460.98031616]
[112.82252502 462.33148193]
[127.32092285 466.33599854]
[140.87120056 472.86517334]
[153.03776550 481.70907593]
[163.42951965 492.58340454]
[171.71240234 505.13861084]
[177.62016296 518.97113037]
[180.96289062 533.63623047]
[181.63311768 548.66259766]
[179.60931396 563.56707764]
[174.95654297 577.87060547]
[167.82434082 591.11340332]
[158.44201660 602.86975098]
[147.11114502 612.76171875]
[134.19596863 620.47137451]
[120.11167908 625.75079346]
[105.31100464 628.43029785]
[90.26973724 628.42382812]
[75.47138977 625.73150635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[20 184]
[34 183]
[35 182]
[37 180]
[38 179]
[39 178]
[40 177]
[41 174]
[42 173]
[45 171]
[46 170]
[47 169]
[49 167]
[50 163]
[51 162]
[52 161]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[68 146]
[69 145]
[70 144]
[71 143]
[73 141]
[74 127]
[75 126]
[77 125]
[78 124]
[79 123]
[81 121]
[82 120]
[85 118]
[86 117]
[87 116]
[88 115]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
