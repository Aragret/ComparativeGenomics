%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[161.02934265 550.07818604]
[157.27304077 535.55615234]
[146.59510803 525.17193604]
[150.63003540 509.87393188]
[146.87373352 495.35186768]
[143.11743164 480.82980347]
[130.16009521 468.99450684]
[135.22778320 451.29141235]
[131.25569153 436.82687378]
[127.28359222 422.36236572]
[116.45223999 412.13830566]
[120.25895691 396.78189087]
[116.28685760 382.31738281]
[112.31476593 367.85284424]
[107.43921661 382.03839111]
[96.59334564 392.40017700]
[82.20014954 396.62341309]
[67.47509003 393.76461792]
[55.70780182 384.46243286]
[49.52711487 370.79498291]
[50.31381607 355.81561279]
[57.89215088 342.87078857]
[70.56910706 334.85235596]
[85.51261139 333.55172729]
[99.38424683 339.25939941]
[109.08507538 350.70031738]
[107.52455139 335.78170776]
[105.96402740 320.86309814]
[104.40350342 305.94451904]
[102.84297943 291.02590942]
[99.02066803 284.70040894]
[101.37197876 275.87380981]
[100.03374481 260.93362427]
[98.69551086 245.99343872]
[97.35727692 231.05325317]
[96.01904297 216.11306763]
[93.95688629 214.21421814]
[92.52263641 211.38409424]
[92.07476044 207.85780334]
[92.88010406 203.99568176]
[95.07306671 200.24803162]
[94.62645721 185.25468445]
[94.17985535 170.26132202]
[93.73324585 155.26797485]
[93.28664398 140.27462769]
[92.84003448 125.28128052]
[92.39343262 110.28793335]
[86.11374664 123.91017914]
[76.68333435 135.57496643]
[64.67884064 144.56896973]
[50.83436584 150.34222412]
[35.99649811 152.54168701]
[21.07257652 151.03286743]
[6.97520638 145.90800476]
[-5.43355227 137.48051453]
[-15.39490032 126.26571655]
[-22.29969597 112.94941711]
[-25.72570992 98.34590912]
[-25.46343803 83.34820557]
[-21.52892113 68.87341309]
[-14.16275311 55.80667877]
[-3.81538057 44.94703293]
[8.88045120 36.95855331]
[23.14838791 32.32973099]
[38.11594009 31.34362602]
[52.86783600 34.06053543]
[66.50199127 40.31432343]
[78.18466949 49.72256470]
[87.20146942 61.70994186]
[93.00102234 75.54342651]
[95.22866821 90.37711334]
[99.84268188 76.10438538]
[96.72545624 60.59330750]
[108.00254059 50.86310577]
[93.66277313 55.26438904]
[81.19544983 46.92378616]
[79.79100037 31.98967743]
[90.48474121 21.47093773]
[105.39363861 23.12158585]
[113.52720642 35.72319031]
[119.18998718 21.83316231]
[124.85277557 7.94313574]
[118.23461914 -3.78778934]
[119.56179810 -16.99570656]
[128.12686157 -26.88114166]
[140.63346863 -29.98178101]
[146.50244141 -43.78595734]
[152.37139893 -57.59013367]
[150.65043640 -73.31746674]
[162.75062561 -82.00276947]
[168.61959839 -95.80694580]
[172.91371155 -110.17916107]
[175.57951355 -124.94037628]
[174.02505493 -133.94157410]
[178.39645386 -139.90081787]
[181.28172302 -154.62071228]
[184.16699219 -169.34060669]
[187.05226135 -184.06048584]
[189.93754578 -198.78038025]
[192.82281494 -213.50027466]
[179.20529175 -219.98210144]
[167.62809753 -229.64746094]
[158.81895447 -241.88877869]
[153.33163452 -255.93655396]
[151.51106262 -270.90774536]
[153.47167969 -285.86123657]
[159.09025574 -299.85702515]
[168.01358032 -312.01535034]
[179.68074036 -321.57192993]
[193.35833740 -327.92602539]
[208.18656921 -330.67819214]
[223.23332214 -329.65542603]
[237.55274963 -324.92205811]
[250.24472046 -316.77560425]
[260.51138306 -305.72817993]
[267.70742798 -292.47418213]
[271.38043213 -277.84683228]
[271.29956055 -262.76556396]
[267.46987915 -248.17843628]
[260.13211060 -235.00239563]
[249.74754333 -224.06570435]
[236.96893311 -216.05583191]
[222.59956360 -211.47631836]
[207.54270935 -210.61500549]
[204.65742493 -195.89511108]
[201.77215576 -181.17521667]
[198.88688660 -166.45532227]
[196.00161743 -151.73544312]
[193.11634827 -137.01554871]
[190.34072876 -122.27458191]
[187.67494202 -107.51336670]
[197.29623413 -119.02120972]
[210.38954163 -126.34004974]
[225.23219299 -128.50695801]
[239.87139893 -125.23684692]
[252.38111877 -116.95994568]
[261.11547852 -104.76522827]
[264.92532349 -90.25712585]
[263.30938721 -75.34442139]
[256.48028564 -61.98913574]
[245.33653259 -51.94839478]
[231.34425354 -46.54322433]
[216.34436035 -46.48476791]
[202.31036377 -51.78071976]
[191.08868408 -61.73430252]
[184.15571594 -75.03595734]
[182.42376709 -89.93798828]
[176.55480957 -76.13381195]
[178.69555664 -61.39384842]
[166.17556763 -51.72117615]
[160.30661011 -37.91699600]
[154.43765259 -24.11282158]
[161.38937378 -8.79902458]
[154.98851013 7.11775303]
[138.74279785 13.60592175]
[133.08001709 27.49594879]
[127.41722870 41.38597488]
[122.27526855 55.47711563]
[125.72251892 69.96731567]
[114.11540985 80.71839142]
[109.50140381 94.99112701]
[107.38677979 109.84132385]
[107.83338165 124.83467102]
[108.27999115 139.82801819]
[108.72659302 154.82138062]
[109.17320251 169.81472778]
[109.61981201 184.80807495]
[110.06641388 199.80142212]
[110.95922852 214.77482605]
[112.29746246 229.71501160]
[113.63569641 244.65519714]
[114.97393036 259.59539795]
[116.31216431 274.53558350]
[117.76158905 289.46539307]
[119.32210541 304.38397217]
[120.88262939 319.30258179]
[122.44315338 334.22119141]
[124.00367737 349.13980103]
[126.77928925 363.88076782]
[130.75138855 378.34527588]
[134.72348022 392.80981445]
[145.83894348 404.06845093]
[141.74812317 418.39025879]
[145.72021484 432.85479736]
[149.69230652 447.31930542]
[160.49569702 454.36557007]
[163.50628662 466.49487305]
[157.63949585 477.07351685]
[161.39579773 491.59555054]
[165.15209961 506.11761475]
[176.09869385 517.54052734]
[171.79508972 531.79980469]
[175.55139160 546.32189941]
[190.65228271 547.22662354]
[204.73376465 552.75531006]
[216.41629028 562.36645508]
[224.55532837 575.11840820]
[228.35348511 589.76177979]
[227.43865967 604.86206055]
[221.90048218 618.93981934]
[212.28152466 630.61590576]
[199.52416992 638.74639893]
[184.87821960 642.53472900]
[169.77856445 641.60980225]
[155.70449829 636.06219482]
[144.03486633 626.43542480]
[135.91293335 613.67260742]
[132.13439941 599.02410889]
[133.06945801 583.92510986]
[138.62649536 569.85473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[4 190]
[5 189]
[6 188]
[8 185]
[9 184]
[10 183]
[12 181]
[13 180]
[14 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[46 163]
[47 162]
[71 161]
[72 160]
[74 158]
[80 157]
[81 156]
[82 155]
[86 152]
[87 151]
[88 150]
[90 148]
[91 147]
[92 131]
[93 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
