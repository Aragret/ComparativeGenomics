%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[96.63578796 514.47412109]
[81.85629272 517.18475342]
[66.84147644 517.76434326]
[51.89700699 516.20111084]
[37.32714462 512.52685547]
[23.42851067 506.81646729]
[10.48406219 499.18612671]
[-1.24266648 489.79119873]
[-11.51293564 478.82296753]
[-20.11765480 466.50469971]
[-26.88164330 453.08721924]
[-31.66719627 438.84362793]
[-34.37688446 424.06399536]
[-34.95554352 409.04913330]
[-33.39138794 394.10476685]
[-29.71626854 379.53512573]
[-24.00500298 365.63684082]
[-16.37386513 352.69287109]
[-6.97821569 340.96670532]
[3.99066186 330.69711304]
[16.30945587 322.09317017]
[29.72737122 315.33001709]
[43.97123718 310.54534912]
[58.75106430 307.83657837]
[73.76595306 307.25885010]
[75.32647705 292.34024048]
[76.88700104 277.42163086]
[78.44752502 262.50302124]
[80.00804901 247.58441162]
[73.63681030 234.12126160]
[82.76782990 221.20092773]
[84.32835388 206.28231812]
[85.66658783 191.34213257]
[86.78223419 176.38368225]
[87.89788055 161.42523193]
[76.02882385 157.83512878]
[65.10015869 151.97615051]
[55.54062271 144.07815552]
[47.72523117 134.45095825]
[41.96058655 123.47223663]
[38.47283554 111.57270813]
[37.39880371 99.21916962]
[38.78062439 86.89627075]
[42.56409073 75.08743286]
[48.60077667 64.25592041]
[56.65385818 54.82664871]
[66.40741730 47.16953659]
[77.47882080 41.58496857]
[89.43372345 38.29203033]
[101.80315399 37.41990662]
[104.02826691 22.58586311]
[106.25338745 7.75181866]
[97.13086700 -4.87424278]
[99.59877014 -19.88637543]
[111.69200897 -28.50549126]
[113.91712952 -43.33953476]
[116.14224243 -58.17358017]
[118.36736298 -73.00762177]
[120.59247589 -87.84166718]
[118.68035889 -92.69870758]
[118.80959320 -97.33946228]
[120.55596161 -101.02256775]
[123.26245880 -103.28247833]
[126.14773560 -118.00236511]
[129.03300476 -132.72225952]
[131.91827393 -147.44215393]
[134.80355835 -162.16204834]
[125.27716064 -150.57550049]
[112.53945160 -142.65396118]
[97.93466949 -139.23339844]
[83.00408173 -140.67480469]
[69.32335663 -146.82604980]
[58.33625412 -157.03797913]
[51.20226669 -170.23291016]
[48.67425919 -185.01834106]
[51.01902390 -199.83393860]
[57.98910522 -213.11618042]
[68.84893799 -223.46336365]
[82.45246124 -229.78350830]
[97.36405945 -231.40963745]
[112.01007080 -228.17015076]
[124.84487915 -220.40692139]
[134.51397705 -208.93920898]
[139.99699402 -194.97723389]
[140.71524048 -179.99424744]
[147.19473267 -193.52259827]
[153.67422485 -207.05094910]
[160.15371704 -220.57928467]
[166.63320923 -234.10763550]
[153.79435730 -241.88777161]
[141.77992249 -250.88890076]
[130.70562744 -261.02432251]
[120.67810822 -272.19641113]
[111.79394531 -284.29757690]
[104.13869476 -297.21130371]
[97.78609467 -310.81317139]
[92.79732513 -324.97222900]
[89.22042084 -339.55209351]
[87.08983612 -354.41235352]
[86.42608643 -369.40991211]
[87.23557281 -384.40029907]
[89.51049042 -399.23913574]
[93.22893524 -413.78353882]
[98.35509491 -427.89346313]
[104.83959961 -441.43295288]
[112.61999512 -454.27163696]
[121.62136078 -466.28588867]
[131.75698853 -477.36001587]
[142.92929077 -487.38729858]
[155.03063965 -496.27120972]
[167.94450378 -503.92620850]
[181.54652405 -510.27853394]
[195.70567322 -515.26702881]
[210.28561401 -518.84362793]
[225.14591980 -520.97393799]
[240.14347839 -521.63739014]
[255.13383484 -520.82757568]
[269.97265625 -518.55236816]
[284.51699829 -514.83361816]
[298.62677002 -509.70718384]
[312.16613770 -503.22241211]
[325.00469971 -495.44177246]
[337.01876831 -486.44015503]
[348.09265137 -476.30432129]
[358.11975098 -465.13180542]
[367.00341797 -453.03027344]
[374.65814209 -440.11627197]
[381.01019287 -426.51412964]
[385.99841309 -412.35485840]
[389.57473755 -397.77487183]
[391.70471191 -382.91452026]
[392.36785889 -367.91693115]
[391.55776978 -352.92660522]
[389.28225708 -338.08782959]
[385.56323242 -323.54357910]
[380.43652344 -309.43386841]
[373.95147705 -295.89462280]
[366.17056274 -283.05624390]
[357.16873169 -271.04235840]
[347.03265381 -259.96865845]
[335.85995483 -249.94180298]
[323.75823975 -241.05836487]
[310.84405518 -233.40390015]
[297.24179077 -227.05212402]
[283.08245850 -222.06419373]
[268.50234985 -218.48815918]
[253.64196777 -216.35847473]
[238.64439392 -215.69561768]
[223.65406799 -216.50601196]
[208.81533813 -218.78181458]
[194.27114868 -222.50112915]
[180.16156006 -227.62814331]
[173.68206787 -214.09979248]
[167.20257568 -200.57144165]
[160.72306824 -187.04310608]
[154.24357605 -173.51475525]
[149.52343750 -159.27676392]
[146.63816833 -144.55686951]
[143.75289917 -129.83699036]
[140.86763000 -115.11709595]
[137.98236084 -100.39720154]
[135.42652893 -85.61654663]
[133.20140076 -70.78250885]
[130.97628784 -55.94846344]
[128.75117493 -41.11441803]
[126.52605438 -26.28037453]
[135.55821228 -14.49243164]
[133.51295471 0.58309549]
[121.08743286 9.97693539]
[118.86231232 24.81097984]
[116.63719940 39.64502335]
[132.81266785 46.68162918]
[146.38322449 57.95103073]
[156.27156067 72.55857849]
[161.69264221 89.34462738]
[162.21612549 106.97657013]
[157.80046082 124.05467224]
[148.79615784 139.22312927]
[135.91807556 151.27778625]
[120.18856049 159.26164246]
[102.85633850 162.54087830]
[101.74068451 177.49932861]
[100.62503815 192.45777893]
[103.14702606 198.56933594]
[102.32707214 204.19291687]
[99.24695587 207.84283447]
[97.68643188 222.76144409]
[103.94604492 237.29168701]
[94.92665100 249.14494324]
[93.36612701 264.06353760]
[91.80561066 278.98214722]
[90.24508667 293.90075684]
[88.68456268 308.81936646]
[103.25487518 312.49176025]
[117.15422058 318.20046997]
[130.09960938 325.82919312]
[141.82749939 335.22265625]
[152.09912109 346.18963623]
[160.70536804 358.50683594]
[167.47102356 371.92349243]
[172.25833130 386.16647339]
[174.96984863 400.94580078]
[175.55036926 415.96057129]
[173.98806763 430.90515137]
[170.31475830 445.47521973]
[164.60520935 459.37420654]
[156.97567749 472.31915283]
[147.58146667 484.04644775]
[136.61386108 494.31738281]
[124.29613495 502.92288208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[31 187]
[32 186]
[33 183]
[34 182]
[35 181]
[50 171]
[51 170]
[52 169]
[55 166]
[56 165]
[57 164]
[58 163]
[59 162]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
