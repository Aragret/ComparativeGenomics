%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[117.68893433 287.46157837]
[123.48678589 273.60269165]
[131.08016968 260.64028931]
[140.33357239 248.80567932]
[151.08184814 238.31007385]
[163.13319397 229.34075928]
[155.85997009 216.22207642]
[142.92185974 208.84274292]
[142.99728394 193.02171326]
[135.72406006 179.90301514]
[128.45082092 166.78431702]
[121.17759705 153.66563416]
[113.90436554 140.54693604]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.30348206 67.12295532]
[63.70491791 54.83211517]
[55.10635376 42.54127502]
[46.50778961 30.25043869]
[37.90922546 17.95960045]
[29.31066322 5.66876316]
[20.71209908 -6.62207508]
[12.11353493 -18.91291237]
[3.51497054 -31.20375061]
[-9.22272491 -23.27531242]
[-22.36763000 -16.04202080]
[-35.88184738 -9.52473259]
[-49.72640610 -3.74223900]
[-63.86138916 1.28878736]
[-78.24604797 5.55384064]
[-92.83890533 9.04062366]
[-107.59787750 11.73908329]
[-122.48042297 13.64143944]
[-137.44361877 14.74220657]
[-152.44433594 15.03821087]
[-167.43931580 14.52859879]
[-182.38531494 13.21483994]
[-197.23925781 11.10072231]
[-211.95831299 8.19234085]
[-226.50001526 4.49808216]
[-240.82247925 0.02859726]
[-254.88438416 -5.20322704]
[-268.64517212 -11.18230629]
[-282.06521606 -17.89139938]
[-295.10577393 -25.31116486]
[-307.72924805 -33.42020798]
[-319.89926147 -42.19514847]
[-331.58074951 -51.61068726]
[-342.73999023 -61.63967514]
[-353.34478760 -72.25319672]
[-363.36462402 -83.42064667]
[-372.77059937 -95.10983276]
[-381.53555298 -107.28704834]
[-389.63424683 -119.91717529]
[-397.04330444 -132.96382141]
[-403.74139404 -146.38934326]
[-409.70919800 -160.15502930]
[-414.92947388 -174.22122192]
[-419.38720703 -188.54733276]
[-423.06954956 -203.09207153]
[-425.96588135 -217.81350708]
[-428.06781006 -232.66917419]
[-429.36932373 -247.61625671]
[-429.86663818 -262.61163330]
[-429.55831909 -277.61212158]
[-428.44528198 -292.57440186]
[-426.53073120 -307.45538330]
[-423.82015991 -322.21212769]
[-420.32141113 -336.80212402]
[-416.04458618 -351.18328857]
[-411.00195312 -365.31414795]
[-405.20812988 -379.15396118]
[-398.67974854 -392.66281128]
[-391.43566895 -405.80178833]
[-383.49679565 -418.53298950]
[-374.88598633 -430.81967163]
[-365.62808228 -442.62646484]
[-355.74978638 -453.91931152]
[-345.27957153 -464.66561890]
[-334.24761963 -474.83444214]
[-322.68572998 -484.39645386]
[-310.62725830 -493.32406616]
[-298.10696411 -501.59155273]
[-285.16094971 -509.17504883]
[-271.82653809 -516.05273438]
[-258.14215088 -522.20477295]
[-244.14730835 -527.61340332]
[-229.88232422 -532.26300049]
[-215.38830566 -536.14019775]
[-200.70709229 -539.23388672]
[-185.88096619 -541.53503418]
[-170.95269775 -543.03698730]
[-155.96533203 -543.73553467]
[-140.96208191 -543.62860107]
[-125.98619843 -542.71649170]
[-111.08086395 -541.00183105]
[-96.28905487 -538.48962402]
[-81.65341949 -535.18701172]
[-67.21615601 -531.10357666]
[-53.01889420 -526.25103760]
[-39.10256195 -520.64349365]
[-25.50728798 -514.29705811]
[-12.27227116 -507.22998047]
[0.56432825 -499.46267700]
[12.96549892 -491.01757812]
[24.89548683 -481.91897583]
[36.31989288 -472.19311523]
[47.20577621 -461.86807251]
[57.52175140 -450.97360229]
[67.23807526 -439.54110718]
[76.32672882 -427.60354614]
[84.76151276 -415.19534302]
[92.51810455 -402.35226440]
[99.57414246 -389.11135864]
[105.90927887 -375.51080322]
[111.50524902 -361.58981323]
[116.34591675 -347.38851929]
[120.41732788 -332.94784546]
[123.70774078 -318.30947876]
[126.20767212 -303.51556396]
[127.90991211 -288.60882568]
[128.80953979 -273.63217163]
[128.90399170 -258.62884521]
[128.19296265 -243.64205933]
[126.67852783 -228.71505737]
[124.36503601 -213.89086914]
[121.25917053 -199.21221924]
[117.36987305 -184.72145081]
[112.70837402 -170.46032715]
[107.28810120 -156.46998596]
[101.12467957 -142.79075623]
[94.23589325 -129.46208191]
[86.64160156 -116.52238464]
[78.36369324 -104.00897980]
[69.42604065 -91.95794678]
[59.85441208 -80.40402985]
[49.67640305 -69.38054657]
[38.92136765 -58.91927338]
[27.62030602 -49.05037689]
[15.80580807 -39.80231476]
[24.40437317 -27.51147652]
[33.00293732 -15.22063923]
[41.60150146 -2.92980099]
[50.20006561 9.36103725]
[58.79862976 21.65187454]
[67.39719391 33.94271469]
[75.99575806 46.23355103]
[84.59432220 58.52438736]
[87.11867523 43.73832703]
[98.47497559 33.93861008]
[113.47127533 33.60553741]
[125.25147247 42.89138794]
[128.42980957 57.55079269]
[121.55320740 70.88166809]
[107.76554108 76.78932190]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.02306366 133.27371216]
[134.29629517 146.39239502]
[141.56951904 159.51109314]
[148.84275818 172.62979126]
[156.11598206 185.74847412]
[169.57432556 194.06614685]
[168.97865295 208.94883728]
[176.25189209 222.06753540]
[190.24363708 216.59811401]
[204.83955383 213.04246521]
[219.77915955 211.46405029]
[234.79585266 211.89103699]
[249.62164307 214.31581116]
[263.99194336 218.69509888]
[277.65026855 224.95074463]
[290.35293579 232.97109985]
[301.87316895 242.61305237]
[312.00546265 253.70451355]
[320.56890869 266.04754639]
[327.41076660 279.42187500]
[332.40887451 293.58883667]
[335.47402954 308.29556274]
[336.55160522 323.27963257]
[335.62228394 338.27362061]
[332.70269775 353.00994873]
[327.84494019 367.22564697]
[321.13568115 380.66696167]
[312.69470215 393.09408569]
[302.67260742 404.28521729]
[291.24829102 414.04061890]
[278.62557983 422.18618774]
[265.02975464 428.57659912]
[250.70347595 433.09777832]
[235.90238953 435.66906738]
[220.89065552 436.24453735]
[205.93615723 434.81396484]
[191.30580139 431.40283203]
[177.26065063 426.07202148]
[164.05137634 418.91671753]
[151.91371155 410.06457520]
[141.06427002 399.67355347]
[131.69667053 387.92913818]
[123.97808075 375.04089355]
[118.04626465 361.23883057]
[114.00706482 346.76925659]
[111.93257141 331.89041138]
[111.85981750 316.86782837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 171]
[7 170]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[17 160]
[18 159]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[26 144]
[27 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
