%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[114.93528748 592.53131104]
[106.21697235 580.30548096]
[98.92236328 567.18041992]
[93.14319611 553.32104492]
[88.95214844 538.90179443]
[86.40193939 524.10394287]
[85.52462006 509.11358643]
[86.33124542 494.11929321]
[88.81165314 479.30957031]
[92.93466187 464.87069702]
[98.64841461 450.98428345]
[105.88105011 437.82492065]
[114.54162598 425.55810547]
[124.52120972 414.33813477]
[135.69430542 404.30609131]
[147.92039490 395.58813477]
[161.04573059 388.29391479]
[174.90524292 382.51516724]
[170.71823120 368.11138916]
[166.53121948 353.70761108]
[162.34420776 339.30380249]
[157.83657837 324.99713135]
[153.01058960 310.79467773]
[141.58988953 301.23345947]
[144.47583008 285.67767334]
[139.64982605 271.47521973]
[134.82382202 257.27276611]
[128.27252197 270.76647949]
[114.63217163 277.00674438]
[100.13896942 273.14059448]
[91.41901398 260.93560791]
[92.45893860 245.97169495]
[102.78331757 235.09017944]
[117.67197418 233.26594543]
[130.31915283 241.33447266]
[119.95513153 230.63699341]
[124.44375610 215.46586609]
[121.12149048 200.83840942]
[117.79923248 186.21095276]
[114.47697449 171.58349609]
[111.15471649 156.95602417]
[107.83245850 142.32856750]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[76.07334900 81.67292786]
[78.43331909 66.96646881]
[72.77053070 53.07644272]
[67.10774231 39.18641663]
[61.13618088 25.42631340]
[54.85881805 11.80299664]
[48.58145905 -1.82031929]
[33.30301285 -12.09896851]
[35.59255219 -29.49796104]
[29.11305809 -43.02630615]
[22.63356209 -56.55465317]
[16.15406609 -70.08300018]
[15.92818642 -55.08469772]
[12.02880287 -40.60040283]
[4.69436264 -27.51583290]
[-5.62662935 -16.63111305]
[-18.30304146 -8.61184883]
[-32.55970383 -3.94842124]
[-47.52481842 -2.92600107]
[-62.28326035 -5.60710907]
[-75.93254852 -11.82779503]
[-87.63802338 -21.20766068]
[-96.68389130 -33.17312622]
[-102.51698303 -46.99249649]
[-104.78061676 -61.82070923]
[-103.33637238 -76.75102234]
[-98.27255249 -90.87042999]
[-89.89881897 -103.31552887]
[-78.72722626 -113.32530212]
[-65.44092560 -120.28764343]
[-50.85237503 -123.77680969]
[-35.85367203 -123.57942200]
[-21.36199570 -119.70756531]
[-8.26351357 -112.39799500]
[2.64079475 -102.09770203]
[10.68414021 -89.43652344]
[9.12361717 -104.35512543]
[7.56309414 -119.27373505]
[6.00257111 -134.19233704]
[-3.12844276 -147.11267090]
[3.24279213 -160.57583618]
[1.68226910 -175.49444580]
[0.12174609 -190.41304016]
[-1.43877697 -205.33164978]
[-2.99930000 -220.25025940]
[-4.55982304 -235.16885376]
[-19.39239883 -238.08193970]
[-32.70656967 -245.23905945]
[-43.31845093 -256.00378418]
[-50.28443527 -269.41894531]
[-52.98511505 -284.29165649]
[-51.18035126 -299.29946899]
[-45.03061676 -313.10787964]
[-35.08274460 -324.48904419]
[-22.22129059 -332.43099976]
[-7.58988905 -336.22750854]
[7.51044655 -335.54101562]
[21.73700523 -330.43255615]
[33.82476807 -321.35635376]
[42.69890594 -309.11947632]
[47.57032776 -294.81002808]
[48.00587845 -279.70034790]
[43.96682358 -265.13403320]
[35.81231689 -252.40629578]
[24.26744843 -242.64888000]
[10.35878181 -236.72938538]
[11.91930485 -221.81077576]
[13.47982788 -206.89216614]
[15.04035091 -191.97357178]
[16.60087395 -177.05496216]
[18.16139603 -162.13635254]
[27.18079185 -150.28309631]
[20.92117691 -135.75285339]
[22.48169899 -120.83425903]
[24.04222107 -105.91564941]
[25.60274506 -90.99704742]
[29.68241119 -76.56249237]
[36.16190720 -63.03414917]
[42.64140320 -49.50580215]
[49.12089920 -35.97745514]
[60.42208099 -31.66354752]
[65.93097687 -20.44588852]
[62.20477295 -8.09768009]
[68.48213196 5.52563620]
[74.75949860 19.14895248]
[77.92285156 20.70635796]
[80.48902893 23.87334251]
[81.70973206 28.35253716]
[80.99777222 33.52362823]
[86.66055298 47.41365814]
[92.32334137 61.30368423]
[104.29288483 70.16818237]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[120.37017059 107.69471741]
[129.90789795 96.11750031]
[143.69725037 90.21382904]
[158.65769958 91.30258942]
[171.44699097 99.14055634]
[179.20800781 111.97669983]
[180.20689392 126.94340515]
[174.22050476 140.69706726]
[162.58621216 150.16506958]
[147.90313721 153.23226929]
[133.45153809 149.21340942]
[122.45991516 139.00631714]
[125.78217316 153.63377380]
[129.10443115 168.26123047]
[132.42669678 182.88868713]
[135.74894714 197.51614380]
[139.07121277 212.14361572]
[149.67286682 223.88735962]
[144.94662476 238.01222229]
[149.02629089 252.44677734]
[153.85227966 266.64923096]
[158.67828369 280.85168457]
[170.44416809 291.42877197]
[167.21304321 305.96868896]
[172.03903198 320.17114258]
[175.96577454 323.61029053]
[177.97930908 327.79345703]
[178.11660767 331.86730957]
[176.74798584 335.11679077]
[180.93499756 349.52059937]
[185.12200928 363.92437744]
[189.30902100 378.32815552]
[204.10664368 375.77661133]
[219.09690857 374.89794922]
[234.09129333 375.70321655]
[248.90122986 378.18231201]
[263.34045410 382.30401611]
[277.22741699 388.01651001]
[290.38742065 395.24798584]
[302.65499878 403.90744019]
[313.87588501 413.88601685]
[323.90893555 425.05822754]
[332.62796021 437.28353882]
[339.92337036 450.40820312]
[345.70336914 464.26721191]
[349.89526367 478.68621826]
[352.44638062 493.48391724]
[353.32458496 508.47421265]
[352.51885986 523.46856689]
[350.03933716 538.27844238]
[345.91717529 552.71752930]
[340.20425415 566.60430908]
[332.97241211 579.76409912]
[324.31259155 592.03143311]
[314.33367920 603.25201416]
[303.16116333 613.28472900]
[290.93560791 622.00341797]
[277.81069946 629.29840088]
[263.95153809 635.07800293]
[249.53239441 639.26947021]
[234.73461914 641.82012939]
[219.74430847 642.69787598]
[204.74996948 641.89172363]
[189.94018555 639.41174316]
[175.50119019 635.28918457]
[161.61459351 629.57586670]
[148.45500183 622.34356689]
[136.18794250 613.68341064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 174]
[19 173]
[20 172]
[21 171]
[22 167]
[23 166]
[25 164]
[26 163]
[27 162]
[35 161]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 142]
[44 141]
[46 139]
[48 137]
[49 136]
[50 135]
[51 131]
[52 130]
[53 129]
[55 126]
[56 125]
[57 124]
[58 123]
[82 122]
[83 121]
[84 120]
[85 119]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
