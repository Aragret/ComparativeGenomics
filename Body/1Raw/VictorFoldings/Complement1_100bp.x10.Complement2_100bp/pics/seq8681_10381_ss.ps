%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-4.55732918 854.51660156]
[-19.33418655 857.11468506]
[-34.22756577 858.92926025]
[-49.19595337 859.95532227]
[-64.19763184 860.18994141]
[-79.19078827 859.63256836]
[-94.13362885 858.28466797]
[-108.98451233 856.15002441]
[-123.70204926 853.23461914]
[-138.24520874 849.54656982]
[-152.57345581 845.09606934]
[-166.64686584 839.89562988]
[-180.42620850 833.95971680]
[-193.87307739 827.30487061]
[-206.94999695 819.94964600]
[-219.62051392 811.91448975]
[-231.84931946 803.22186279]
[-243.60231018 793.89599609]
[-254.84675598 783.96276855]
[-265.55130005 773.45001221]
[-275.68612671 762.38696289]
[-285.22293091 750.80450439]
[-294.13522339 738.73480225]
[-302.39807129 726.21160889]
[-309.98852539 713.26983643]
[-316.88537598 699.94543457]
[-323.06939697 686.27563477]
[-328.52337646 672.29852295]
[-333.23211670 658.05310059]
[-337.18249512 643.57897949]
[-340.36346436 628.91656494]
[-342.76620483 614.10668945]
[-344.38400269 599.19061279]
[-345.21234131 584.21002197]
[-345.24890137 569.20654297]
[-344.49359131 554.22204590]
[-342.94854736 539.29827881]
[-340.61804199 524.47686768]
[-337.50857544 509.79913330]
[-333.62878418 495.30593872]
[-328.98956299 481.03768921]
[-323.60375977 467.03417969]
[-317.48645020 453.33441162]
[-310.65463257 439.97656250]
[-303.12738037 426.99789429]
[-294.92565918 414.43457031]
[-286.07232666 402.32159424]
[-276.59207153 390.69274902]
[-266.51132202 379.58044434]
[-255.85813904 369.01562500]
[-244.66224670 359.02774048]
[-232.95484924 349.64468384]
[-220.76856995 340.89254761]
[-208.13737488 332.79571533]
[-195.09646606 325.37683105]
[-181.68218994 318.65649414]
[-167.93194580 312.65347290]
[-153.88406372 307.38449097]
[-139.57766724 302.86425781]
[-125.05266571 299.10531616]
[-110.34951782 296.11819458]
[-95.50921631 293.91119385]
[-80.57312012 292.49047852]
[-65.58285522 291.86001587]
[-50.58021545 292.02154541]
[-35.60700226 292.97460938]
[-20.70495796 294.71655273]
[-5.91561127 297.24255371]
[8.71981430 300.54553223]
[23.16052818 304.61630249]
[27.98652649 290.41384888]
[32.81252289 276.21139526]
[37.63851929 262.00894165]
[42.46451950 247.80648804]
[47.29051590 233.60403442]
[52.11651230 219.40158081]
[47.77565384 202.39793396]
[61.72442245 190.37655640]
[66.33843231 176.10382080]
[65.40482330 168.77236938]
[71.12884521 161.65385437]
[75.95484161 147.45140076]
[80.78083801 133.24893188]
[85.60683441 119.04647827]
[77.17932892 107.01061249]
[77.39608765 92.31918335]
[86.17501068 80.53718567]
[100.19071198 76.12751770]
[105.01670837 61.92506409]
[109.84270477 47.72261047]
[114.66870117 33.52015305]
[119.49469757 19.31769753]
[124.00232697 5.01101112]
[128.18934631 -9.39277077]
[132.37634277 -23.79655266]
[134.71183777 -38.61362076]
[135.15844727 -53.60697174]
[135.60505676 -68.60031891]
[136.05165100 -83.59367371]
[122.17293549 -89.79444122]
[111.72723389 -100.83779907]
[106.30744171 -115.03971100]
[106.74004364 -130.23449707]
[112.95906830 -144.10504150]
[124.01615906 -154.53620911]
[138.22518921 -159.93731689]
[153.41938782 -159.48472595]
[167.28173828 -153.24745178]
[177.69834900 -142.17665100]
[183.08076477 -127.96053314]
[182.60818481 -112.76694489]
[176.35269165 -98.91280365]
[165.26818848 -88.51076508]
[151.04499817 -83.14706421]
[150.59840393 -68.15371704]
[150.15179443 -53.16036606]
[149.70518494 -38.16701508]
[157.21493530 -51.15176773]
[168.49058533 -61.04416656]
[182.34220886 -66.80023956]
[197.30801392 -67.81253815]
[211.80862427 -63.97423553]
[224.31373596 -55.69039154]
[233.50366211 -43.83522034]
[238.40858459 -29.65982628]
[238.51086426 -14.66017437]
[233.79969788 -0.41921377]
[224.77229309 11.56017399]
[212.38130188 20.01377487]
[197.93438721 24.04946136]
[182.95617676 23.24133873]
[169.02734375 17.67468643]
[157.61782837 7.93696928]
[149.93171692 -4.94416857]
[146.78013611 -19.60954285]
[142.59312439 -5.20576000]
[138.40611267 9.19802189]
[139.77473450 12.44751644]
[139.63742065 16.52135849]
[137.62388611 20.70453644]
[133.69715881 24.14369583]
[128.87115479 38.34614944]
[124.04515839 52.54860687]
[119.21916199 66.75106049]
[114.39316559 80.95352173]
[122.82067108 92.98938751]
[122.60391235 107.68081665]
[113.82498932 119.46281433]
[99.80928802 123.87248230]
[94.98329163 138.07493591]
[90.15729523 152.27738953]
[85.33129883 166.47984314]
[80.61116791 180.71783447]
[75.99715424 194.99057007]
[81.16430664 206.80850220]
[77.02745056 218.60130310]
[66.31896973 224.22756958]
[61.49297333 238.43002319]
[56.66697311 252.63249207]
[51.84097672 266.83493042]
[47.01498032 281.03738403]
[42.18898010 295.23983765]
[37.36298370 309.44232178]
[51.29425049 315.01232910]
[64.91213989 321.30984497]
[78.17869568 328.31726074]
[91.05694580 336.01504517]
[103.51100159 344.38177490]
[115.50613403 353.39410400]
[127.00892639 363.02691650]
[137.98730469 373.25338745]
[148.41069031 384.04498291]
[158.25000000 395.37164307]
[167.47784424 407.20178223]
[176.06848145 419.50244141]
[183.99797058 432.23934937]
[191.24421692 445.37698364]
[197.78701782 458.87872314]
[203.60815430 472.70693970]
[208.69137573 486.82312012]
[213.02252197 501.18789673]
[216.58952332 515.76123047]
[219.38244629 530.50250244]
[221.39350891 545.37060547]
[222.61708069 560.32415771]
[223.04977417 575.32141113]
[222.69038391 590.32061768]
[221.53990173 605.27996826]
[219.60153198 620.15771484]
[216.88067627 634.91247559]
[213.38493347 649.50305176]
[209.12403870 663.88879395]
[204.10986328 678.02966309]
[198.35638428 691.88616943]
[191.87965393 705.41973877]
[184.69769287 718.59259033]
[176.83053589 731.36810303]
[168.30012512 743.71063232]
[159.13020325 755.58569336]
[149.34635925 766.96032715]
[138.97584534 777.80273438]
[128.04756165 788.08270264]
[116.59199524 797.77166748]
[104.64104462 806.84246826]
[92.22803497 815.26995850]
[79.38755798 823.03063965]
[66.15540314 830.10278320]
[52.56844711 836.46673584]
[38.66456985 842.10479736]
[24.48251915 847.00122070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[78 154]
[79 153]
[81 152]
[82 151]
[83 150]
[84 149]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[93 137]
[94 136]
[95 135]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
