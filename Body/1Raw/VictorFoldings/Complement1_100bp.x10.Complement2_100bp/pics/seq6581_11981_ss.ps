%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[84.45622253 507.80160522]
[71.36080933 515.37561035]
[56.56541443 518.53021240]
[41.51954651 516.95635986]
[27.69723701 510.80825806]
[16.45266151 500.68826294]
[8.88744640 487.58776855]
[5.74275494 472.79025269]
[7.32667208 457.74545288]
[13.48402119 443.92727661]
[23.61156845 432.68948364]
[36.71712112 425.13302612]
[51.51672745 421.99826050]
[53.07724762 407.07965088]
[54.63777161 392.16104126]
[48.26653671 378.69790649]
[57.39755249 365.77755737]
[58.95807266 350.85894775]
[60.51859665 335.94033813]
[62.07912064 321.02172852]
[50.48209000 330.53536987]
[35.48214340 330.49453735]
[23.93705940 320.91796875]
[21.12509155 306.18389893]
[28.33183289 293.02856445]
[42.26246262 287.46640015]
[56.54807663 292.04034424]
[64.65791321 304.66110229]
[67.76201630 289.98577881]
[70.86612701 275.31048584]
[73.42195892 260.52981567]
[75.42597961 245.66430664]
[77.42999268 230.79876709]
[79.43400574 215.93324280]
[81.32729340 201.05320740]
[83.10976410 186.15950012]
[84.89222717 171.26577759]
[86.56376648 156.35920715]
[88.12429047 141.44059753]
[81.75305939 127.97743988]
[90.88407135 115.05709839]
[84.17868042 107.71377563]
[82.52311707 97.90838623]
[86.44578552 88.77059174]
[94.69466400 83.21697998]
[96.69867706 68.35144806]
[98.70269012 53.48591995]
[100.70670319 38.62039185]
[102.71072388 23.75486374]
[104.49318695 8.86114693]
[106.05371094 -6.05745792]
[107.61423492 -20.97606277]
[109.17475891 -35.89466858]
[110.73527527 -50.81327057]
[112.29579926 -65.73188019]
[113.85632324 -80.65048218]
[115.41684723 -95.56908417]
[109.15723419 -110.09932709]
[118.17662811 -121.95258331]
[119.73715210 -136.87118530]
[121.29767609 -151.78979492]
[107.50511932 -157.97225952]
[96.31395721 -168.10144043]
[88.81172180 -181.17602539]
[85.72222900 -195.90933228]
[87.33571625 -210.85588074]
[93.48165894 -224.55325317]
[103.54669189 -235.66520691]
[116.53578186 -243.11192322]
[131.17060852 -246.17506409]
[132.73112488 -261.09368896]
[134.29165649 -276.01226807]
[132.38349915 -279.91265869]
[131.86764526 -283.82397461]
[132.57655334 -287.30718994]
[134.21731567 -290.02279663]
[136.41499329 -291.76300049]
[138.86073303 -306.56228638]
[141.30645752 -321.36154175]
[143.75218201 -336.16082764]
[146.19790649 -350.96008301]
[148.64363098 -365.75936890]
[143.25997925 -380.63641357]
[152.96890259 -391.93182373]
[151.28059387 -400.90887451]
[155.56278992 -406.93255615]
[158.22857666 -421.69375610]
[160.89437866 -436.45498657]
[163.56016541 -451.21618652]
[166.22596741 -465.97741699]
[168.56144714 -480.79449463]
[170.56546021 -495.66000366]
[172.56947327 -510.52554321]
[174.57348633 -525.39105225]
[176.57749939 -540.25659180]
[178.58151245 -555.12213135]
[164.43557739 -560.28991699]
[151.73150635 -568.37823486]
[141.06353760 -579.00878906]
[132.93060303 -591.68432617]
[127.71311188 -605.81201172]
[125.65509033 -620.73107910]
[126.85279083 -635.74377441]
[131.25019836 -650.14782715]
[138.64163208 -663.26959229]
[148.68139648 -674.49530029]
[160.89990234 -683.29998779]
[174.72566223 -689.27178955]
[189.51203918 -692.13134766]
[204.56742859 -691.74505615]
[219.18766785 -688.13079834]
[232.68894958 -681.45776367]
[244.43978882 -672.03802490]
[253.89057922 -660.31213379]
[260.59927368 -646.82855225]
[264.25213623 -632.21789551]
[264.67828369 -617.16357422]
[261.85775757 -602.36968994]
[255.92254639 -588.52819824]
[247.15020752 -576.28643799]
[235.95103455 -566.21704102]
[222.84886169 -558.79095459]
[208.45648193 -554.35546875]
[193.44705200 -553.11810303]
[191.44303894 -538.25256348]
[189.43902588 -523.38702393]
[187.43501282 -508.52151489]
[185.43099976 -493.65600586]
[183.42698669 -478.79046631]
[185.26249695 -475.77993774]
[185.73103333 -471.73080444]
[184.36030579 -467.29522705]
[180.98718262 -463.31161499]
[178.32138062 -448.55038452]
[175.65559387 -433.78918457]
[172.98979187 -419.02795410]
[170.32400513 -404.26675415]
[167.76817322 -389.48608398]
[173.32676697 -375.66757202]
[163.44290161 -363.31362915]
[160.99717712 -348.51437378]
[158.55145264 -333.71508789]
[156.10572815 -318.91583252]
[153.66000366 -304.11654663]
[151.21426392 -289.31729126]
[149.21025085 -274.45175171]
[147.64973450 -259.53314209]
[146.08921814 -244.61454773]
[159.77336121 -238.58917236]
[170.94024658 -228.61567688]
[178.48788452 -215.66139221]
[181.66624451 -200.98866272]
[180.15176392 -186.03176880]
[174.08023071 -172.25672913]
[164.03472900 -161.01768494]
[150.98966980 -153.42366028]
[136.21627808 -150.22926331]
[134.65576172 -135.31066895]
[133.09523010 -120.39205933]
[139.46646118 -106.92890167]
[130.33544922 -94.00856018]
[128.77493286 -79.08995819]
[127.21440887 -64.17135620]
[125.65388489 -49.25275040]
[124.09336090 -34.33414459]
[122.53283691 -19.41554070]
[120.97231293 -4.49693489]
[119.41178894 10.42166996]
[121.66991425 14.62998486]
[121.30838013 20.30151939]
[117.57624817 25.75887680]
[115.57223511 40.62440491]
[113.56822205 55.48993301]
[111.56420898 70.35546112]
[109.56019592 85.22099304]
[117.47688293 102.09161377]
[105.80267334 116.61762238]
[112.06229401 131.14785767]
[103.04289246 143.00111389]
[101.48237610 157.91972351]
[103.70201111 166.78036499]
[99.78594208 173.04824829]
[98.00347900 187.94195557]
[96.22101593 202.83567810]
[98.30847931 211.72839355]
[94.29953003 217.93725586]
[92.29551697 232.80278015]
[90.29150391 247.66831970]
[88.28749084 262.53384399]
[101.61678314 255.65417480]
[115.36793518 261.64630127]
[119.40411377 276.09307861]
[110.74999237 288.34487915]
[95.78507233 289.37008667]
[85.54143524 278.41458130]
[82.43732452 293.08990479]
[79.33321381 307.76519775]
[76.99772644 322.58227539]
[75.43720245 337.50088501]
[73.87667847 352.41946411]
[72.31615448 367.33807373]
[78.57577515 381.86831665]
[69.55637360 393.72158813]
[67.99585724 408.64019775]
[66.43533325 423.55877686]
[80.26586914 429.68835449]
[91.52399445 439.79327393]
[99.10675812 452.88360596]
[102.27127838 467.67687988]
[100.70752716 482.72381592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 205]
[14 204]
[15 203]
[17 201]
[18 200]
[19 199]
[20 198]
[28 197]
[29 196]
[30 195]
[31 189]
[32 188]
[33 187]
[34 186]
[35 184]
[36 183]
[37 182]
[38 180]
[39 179]
[41 177]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[59 159]
[60 158]
[61 157]
[70 148]
[71 147]
[72 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[84 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
