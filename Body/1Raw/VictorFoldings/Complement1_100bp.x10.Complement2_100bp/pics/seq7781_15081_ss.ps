%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[111.64870453 547.71942139]
[96.14710236 547.02655029]
[84.03432465 537.32806396]
[79.96797180 522.35327148]
[85.51164246 507.86029053]
[98.53368378 499.42190552]
[99.20346832 484.43688965]
[99.87325287 469.45184326]
[100.54303741 454.46679688]
[92.61409760 445.33123779]
[93.04946899 432.84146118]
[102.16083527 423.71209717]
[103.05364990 408.73867798]
[103.94646454 393.76525879]
[104.05813599 378.76568604]
[103.38835144 363.78063965]
[95.09046173 351.41156006]
[102.20383453 337.27966309]
[101.53404999 322.29461670]
[93.23616791 309.92553711]
[100.34954071 295.79364014]
[99.67975616 280.80859375]
[91.38186646 268.43951416]
[98.49523926 254.30761719]
[90.19735718 241.93852234]
[97.31072998 227.80662537]
[96.64094543 212.82159424]
[95.97116089 197.83654785]
[95.30137634 182.85151672]
[94.63158417 167.86647034]
[91.19255066 161.32470703]
[94.06506348 152.65368652]
[93.61846161 137.66033936]
[79.70410919 132.35894775]
[68.87392426 122.14029694]
[62.77367020 108.55718994]
[62.33033752 93.67372894]
[67.61129761 79.75161743]
[77.81405640 68.90644836]
[91.38819122 62.78627014]
[90.94158173 47.79291916]
[90.49497986 32.79956818]
[80.45622253 17.36244202]
[89.37083435 2.24634027]
[88.70104980 -12.73869896]
[88.03126526 -27.72373772]
[87.36148071 -42.70877457]
[85.57901764 -57.60249329]
[82.69374084 -72.32238770]
[79.80847168 -87.04227448]
[65.09877777 -90.96482086]
[53.59774017 -100.84474945]
[47.55161285 -114.68182373]
[48.11053085 -129.71008301]
[55.11011124 -142.95074463]
[67.11466980 -151.80264282]
[64.22940063 -166.52253723]
[61.34412766 -181.24243164]
[58.45885468 -195.96231079]
[55.57358170 -210.68220520]
[50.85192108 -218.50164795]
[52.75664520 -225.64265442]
[50.09085083 -240.40386963]
[47.42505264 -255.16508484]
[44.75925827 -269.92630005]
[42.09346390 -284.68753052]
[38.12137222 -289.97277832]
[37.50694656 -295.62252808]
[39.57490921 -299.92745972]
[37.34979248 -314.76150513]
[35.12467575 -329.59555054]
[32.89955902 -344.42959595]
[23.20072746 -356.92932129]
[28.96444702 -370.66354370]
[26.73932838 -385.49758911]
[24.51421165 -400.33163452]
[21.95837975 -415.11230469]
[19.07310677 -429.83218384]
[16.18783379 -444.55206299]
[13.30256176 -459.27197266]
[3.05526352 -471.32614136]
[8.19996834 -485.30404663]
[5.31469536 -500.02392578]
[2.42942286 -514.74383545]
[-0.45584968 -529.46368408]
[-15.51231766 -529.80554199]
[-30.14318848 -533.37646484]
[-43.66414642 -540.00958252]
[-55.44279861 -549.39453125]
[-64.92823029 -561.09240723]
[-71.67678833 -574.55609131]
[-75.37283325 -589.15588379]
[-75.84350586 -604.20886230]
[-73.06677246 -619.01098633]
[-67.17251587 -632.86999512]
[-58.43642044 -645.13763428]
[-47.26708984 -655.24011230]
[-34.18693161 -662.70495605]
[-19.80772972 -667.18298340]
[-4.80202675 -668.46472168]
[10.12833500 -666.49029541]
[24.28503609 -661.35205078]
[37.00593948 -653.29022217]
[47.69606781 -642.68194580]
[55.85542297 -630.02337646]
[61.10237885 -615.90661621]
[63.19152069 -600.99188232]
[62.02514267 -585.97674561]
[57.65779495 -571.56353760]
[50.29374695 -558.42639160]
[40.27742767 -547.17974854]
[28.07731819 -538.34960938]
[14.26404190 -532.34899902]
[17.14931488 -517.62908936]
[20.03458786 -502.90921021]
[22.91985893 -488.18930054]
[32.96078491 -477.18798828]
[28.02245331 -462.15722656]
[30.90772629 -447.43734741]
[33.79299927 -432.71746826]
[36.67827225 -417.99755859]
[39.38477707 -415.73767090]
[41.13114166 -412.05456543]
[41.26037598 -407.41378784]
[39.34825516 -402.55676270]
[41.57337189 -387.72271729]
[43.79848862 -372.88867188]
[53.33816528 -361.44995117]
[47.73360062 -346.65472412]
[49.95871735 -331.82067871]
[52.18383789 -316.98663330]
[54.40895462 -302.15258789]
[56.85467911 -287.35330200]
[59.52047729 -272.59210205]
[62.18627167 -257.83087158]
[64.85206604 -243.06965637]
[67.51786041 -228.30844116]
[70.29347229 -213.56747437]
[73.17874908 -198.84759521]
[76.06401825 -184.12770081]
[78.94929504 -169.40780640]
[81.83456421 -154.68791199]
[96.29256439 -151.02299500]
[107.77279663 -141.40458679]
[113.96381378 -127.69939423]
[113.58884430 -112.60371399]
[106.66873169 -99.11302185]
[94.52835846 -89.92755127]
[97.41363525 -75.20765686]
[100.29890442 -60.48776627]
[106.65333557 -74.07530212]
[118.89334106 -82.74607849]
[133.81939697 -84.23358154]
[147.52989197 -78.14896393]
[156.44091797 -66.08274841]
[158.22315979 -51.18900299]
[152.41073608 -37.36091995]
[140.52301025 -28.21313095]
[125.66741180 -26.13684273]
[111.72714233 -31.67479134]
[102.34651947 -43.37856293]
[103.01630402 -28.39352226]
[103.68608856 -13.40848351]
[104.35587311 1.57655513]
[113.06822968 9.96829987]
[113.74887848 22.44710159]
[105.48832703 32.35296249]
[105.93493652 47.34631348]
[106.38153839 62.33966446]
[120.29589081 67.64104462]
[131.12606812 77.85970306]
[137.22633362 91.44281006]
[137.66966248 106.32627106]
[132.38870239 120.24838257]
[122.18594360 131.09355164]
[108.61180878 137.21372986]
[109.05841827 152.20707703]
[109.61662292 167.19668579]
[110.28641510 182.18173218]
[110.95619965 197.16676331]
[111.62598419 212.15180969]
[112.29576874 227.13684082]
[120.64156342 240.57775879]
[113.48027802 253.63783264]
[121.82607269 267.07876587]
[114.66479492 280.13882446]
[115.33457947 295.12387085]
[123.68036652 308.56478882]
[116.51908875 321.62484741]
[117.18887329 336.60989380]
[125.53466797 350.05081177]
[118.37339020 363.11087036]
[119.04317474 378.09591675]
[129.10063171 366.96722412]
[143.94067383 364.78247070]
[156.77864075 372.54049683]
[161.74516296 386.69442749]
[156.56962585 400.77328491]
[143.61822510 408.34039307]
[128.81214905 405.93615723]
[118.91987610 394.65808105]
[118.02705383 409.63150024]
[117.13423920 424.60488892]
[125.75573730 440.87606812]
[115.52807617 455.13659668]
[114.85829163 470.12161255]
[114.18850708 485.10665894]
[113.51872253 500.09170532]
[125.73600006 509.65820312]
[129.96455383 524.58801270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 205]
[12 203]
[13 202]
[14 201]
[15 193]
[16 192]
[18 190]
[19 189]
[21 187]
[22 186]
[24 184]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[32 177]
[33 176]
[40 169]
[41 168]
[42 167]
[44 164]
[45 163]
[46 162]
[47 161]
[48 150]
[49 149]
[50 148]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[69 132]
[70 131]
[71 130]
[72 129]
[74 127]
[75 126]
[76 125]
[77 121]
[78 120]
[79 119]
[80 118]
[82 116]
[83 115]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
