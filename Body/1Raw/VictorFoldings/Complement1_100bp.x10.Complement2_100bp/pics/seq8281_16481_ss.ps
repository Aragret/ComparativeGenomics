%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[123.61939240 613.52484131]
[113.42794037 602.50488281]
[104.26535034 590.61566162]
[96.20540619 577.95294189]
[89.31298828 564.61877441]
[83.64360046 550.72039795]
[79.24288177 536.36981201]
[76.14627838 521.68249512]
[74.37870789 506.77670288]
[73.95441437 491.77252197]
[74.87680817 476.79067993]
[77.13845825 461.95184326]
[80.72116089 447.37545776]
[85.59607697 433.17892456]
[91.72393799 419.47653198]
[99.05541992 406.37863159]
[107.53147888 393.99063110]
[117.08388519 382.41229248]
[127.63571930 371.73684692]
[139.10202026 362.05023193]
[151.39047241 353.43048096]
[164.40213013 345.94696045]
[178.03222656 339.65994263]
[172.99530029 325.53091431]
[167.95838928 311.40188599]
[162.92147827 297.27285767]
[152.13041687 291.80664062]
[147.81843567 280.07672119]
[152.80906677 268.18316650]
[147.98306274 253.98072815]
[143.15707397 239.77827454]
[138.33106995 225.57582092]
[133.39947510 211.40968323]
[121.83769226 202.01954651]
[124.49171448 186.42254639]
[119.45479584 172.29351807]
[114.41787720 158.16448975]
[109.17115784 144.11201477]
[103.71580505 130.13922119]
[98.26044464 116.16641998]
[87.89512634 110.85591888]
[83.74028015 99.97573090]
[87.92758179 89.10799408]
[75.85199738 78.88591766]
[78.64878082 64.25624847]
[73.40206146 50.20377731]
[68.15534210 36.15130615]
[62.90862656 22.09883690]
[58.29281998 36.37098694]
[46.76144409 45.96408081]
[31.88762474 47.90558624]
[18.28017235 41.59391022]
[10.15550613 28.98479462]
[10.03114319 13.98530960]
[17.94561768 1.24321020]
[31.44654274 -5.29322624]
[46.35050964 -3.59861374]
[58.03951263 5.80216455]
[54.71725464 -8.82529545]
[49.76486969 -16.50069237]
[51.45613861 -23.69523239]
[48.35202789 -38.37053299]
[45.24791718 -53.04583740]
[42.14381027 -67.72113800]
[39.03969955 -82.39643860]
[35.93558884 -97.07174683]
[20.88782692 -98.27375793]
[6.80268764 -103.66181183]
[-5.18138647 -112.79127502]
[-14.09835625 -124.91545868]
[-19.23245621 -139.04673767]
[-20.17563820 -154.03695679]
[-16.85999489 -168.67071533]
[-9.56257248 -181.76397705]
[1.11776316 -192.25978088]
[14.30945873 -199.31359863]
[11.20534897 -213.98890686]
[8.10123825 -228.66421509]
[4.99712849 -243.33950806]
[1.89301836 -258.01480103]
[-1.21109176 -272.69012451]
[-16.24132156 -272.17697144]
[-31.13228989 -274.28176880]
[-45.43147659 -278.94055176]
[-58.70434570 -286.01177979]
[-70.54755402 -295.28051758]
[-80.60118866 -306.46511841]
[-88.55974579 -319.22570801]
[-94.18136597 -333.17449951]
[-97.29521179 -347.88757324]
[-97.80665588 -362.91787720]
[-95.70017242 -377.80859375]
[-91.03974915 -392.10726929]
[-83.96703339 -405.37933350]
[-74.69694519 -417.22146606]
[-63.51119995 -427.27386475]
[-50.74971390 -435.23095703]
[-36.80029297 -440.85098267]
[-22.08684731 -443.96316528]
[-7.05650187 -444.47290039]
[7.83398819 -442.36474609]
[22.13211823 -437.70269775]
[35.40338516 -430.62847900]
[47.24448776 -421.35705566]
[57.29558945 -410.17016602]
[65.25125122 -397.40777588]
[70.86970520 -383.45770264]
[73.98020935 -368.74392700]
[74.48825073 -353.71350098]
[72.37838745 -338.82327271]
[67.71472168 -324.52566528]
[60.63899612 -311.25518799]
[51.36622620 -299.41513062]
[40.17819595 -289.36529541]
[27.41490555 -281.41110229]
[13.46421051 -275.79421997]
[16.56832123 -261.11892700]
[19.67243004 -246.44361877]
[22.77654076 -231.76831055]
[25.88065147 -217.09301758]
[28.98476028 -202.41770935]
[43.90285492 -201.30964661]
[57.91841125 -196.03750610]
[69.89257050 -187.02056885]
[78.84976959 -174.98274231]
[84.05724335 -160.89450073]
[85.08494568 -145.89463806]
[81.84105682 -131.19819641]
[74.58012390 -117.99805450]
[63.88310623 -107.36808777]
[50.61088943 -100.17585754]
[53.71500015 -85.50054932]
[56.81911087 -70.82524872]
[59.92322159 -56.14994812]
[63.02733231 -41.47464371]
[66.13143921 -26.79934311]
[69.34471893 -12.14755535]
[72.66697693 2.47990513]
[76.96109772 16.85211754]
[82.20781708 30.90458870]
[87.45453644 44.95706177]
[92.70125580 59.00953293]
[104.40155792 68.22647858]
[101.98005676 83.86127472]
[115.18987274 94.19940948]
[112.23324585 110.71105957]
[117.68859863 124.68386078]
[123.14395905 138.65666199]
[128.05850220 143.07919312]
[129.74818420 148.50523376]
[128.54690552 153.12756348]
[133.58383179 167.25659180]
[138.62074280 181.38562012]
[150.54280090 191.78634644]
[147.52850342 206.37275696]
[153.35787964 213.40527344]
[152.53352356 220.74981689]
[157.35952759 234.95227051]
[162.18551636 249.15472412]
[167.01152039 263.35717773]
[181.13772583 275.16955566]
[177.05050659 292.23593140]
[182.08741760 306.36495972]
[187.12432861 320.49398804]
[192.16125488 334.62301636]
[206.69467163 330.86990356]
[221.50602722 328.43469238]
[236.47602844 327.33697510]
[251.48417664 327.58560181]
[266.40960693 329.17852783]
[281.13217163 332.10299683]
[295.53332520 336.33538818]
[309.49710083 341.84167480]
[322.91107178 348.57754517]
[335.66723633 356.48867798]
[347.66290283 365.51144409]
[358.80148315 375.57321167]
[368.99325562 386.59289551]
[378.15621948 398.48181152]
[386.21655273 411.14425659]
[393.10937500 424.47824097]
[398.77917480 438.37643433]
[403.18032837 452.72689819]
[406.27737427 467.41412354]
[408.04541016 482.31982422]
[408.47015381 497.32403564]
[407.54821777 512.30590820]
[405.28701782 527.14477539]
[401.70477295 541.72125244]
[396.83029175 555.91796875]
[390.70285034 569.62054443]
[383.37176514 582.71868896]
[374.89608765 595.10693359]
[365.34402466 606.68554688]
[354.79251099 617.36132812]
[343.32650757 627.04827881]
[331.03833008 635.66839600]
[318.02691650 643.15234375]
[304.39700317 649.43975830]
[290.25836182 654.48010254]
[275.72482300 658.23278809]
[260.91339111 660.66754150]
[245.94334412 661.76483154]
[230.93521118 661.51574707]
[216.00982666 659.92236328]
[201.28735352 656.99743652]
[186.88633728 652.76458740]
[172.92272949 647.25787354]
[159.50895691 640.52160645]
[146.75303650 632.61010742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 165]
[24 164]
[25 163]
[26 162]
[29 160]
[30 159]
[31 158]
[32 157]
[33 155]
[35 153]
[36 152]
[37 151]
[38 148]
[39 147]
[40 146]
[43 144]
[45 142]
[46 141]
[47 140]
[48 139]
[58 138]
[59 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[66 131]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
