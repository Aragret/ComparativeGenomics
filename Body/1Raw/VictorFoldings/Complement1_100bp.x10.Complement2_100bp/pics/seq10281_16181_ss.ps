%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[19.19462585 291.07666016]
[19.02810287 306.08511353]
[17.57198715 321.02368164]
[14.83705807 335.78179932]
[10.84356594 350.25015259]
[5.62107658 364.32165527]
[-0.79174334 377.89212036]
[-8.34741497 390.86105347]
[-16.98999786 403.13244629]
[-26.65550423 414.61544800]
[-37.27237320 425.22503662]
[-48.76199722 434.88269043]
[-61.03931427 443.51684570]
[-74.01342010 451.06362915]
[-87.58826447 457.46716309]
[-101.66333771 462.68002319]
[-116.13442993 466.66357422]
[-130.89440918 469.38839722]
[-145.83398438 470.83428955]
[-160.84254456 470.99053955]
[-175.80897522 469.85595703]
[-190.62248230 467.43902588]
[-205.17337036 463.75756836]
[-219.35391235 458.83883667]
[-233.05911255 452.71932983]
[-246.18751526 445.44427490]
[-258.64193726 437.06753540]
[-270.33010864 427.65118408]
[-281.16555786 417.26492310]
[-291.06802368 405.98562622]
[-299.96417236 393.89678955]
[-307.78820801 381.08795166]
[-314.48214722 367.65396118]
[-319.99642944 353.69421387]
[-324.29025269 339.31213379]
[-327.33184814 324.61416626]
[-329.09863281 309.70913696]
[-329.57754517 294.70739746]
[-328.76507568 279.72003174]
[-326.66720581 264.85797119]
[-323.29949951 250.23130798]
[-318.68685913 235.94827271]
[-312.86343384 222.11463928]
[-305.87234497 208.83283997]
[-297.76538086 196.20120239]
[-288.60253906 184.31323242]
[-278.45166016 173.25697327]
[-267.38787842 163.11425781]
[-255.49314880 153.96018982]
[-242.85552979 145.86256409]
[-229.56855774 138.88130188]
[-215.73063660 133.06809998]
[-201.44419861 128.46601868]
[-186.81503296 125.10910034]
[-171.95143127 123.02221680]
[-156.96347046 122.22081757]
[-141.96209717 122.71083832]
[-127.05837250 124.48863983]
[-112.36265564 127.54106903]
[-97.98374176 131.84552002]
[-84.02809143 137.37013245]
[-70.59902954 144.07398987]
[-57.79598618 151.90747070]
[-45.71374512 160.81257629]
[-34.44176102 170.72337341]
[-24.06349564 181.56648254]
[-12.37591362 172.16433716]
[-0.68833256 162.76217651]
[10.99924850 153.36003113]
[22.68683052 143.95788574]
[34.37441254 134.55572510]
[46.06199265 125.15357971]
[31.06239319 125.26335144]
[18.32799721 117.33649445]
[11.80469131 103.82921600]
[13.51379585 88.92690277]
[22.92572594 77.24720001]
[37.12409210 72.40917969]
[51.70937347 75.91196442]
[62.16216660 86.67017365]
[65.24356079 101.35026550]
[59.99858856 115.40365601]
[72.83753204 107.64726257]
[85.67646790 99.89086914]
[92.59319305 87.73971558]
[106.56713867 87.27018738]
[114.37821198 73.51163483]
[129.27275085 73.55303955]
[137.08383179 59.79448700]
[151.97837830 59.83589172]
[164.81732178 52.07949829]
[177.65625000 44.32310867]
[190.49519348 36.56671524]
[203.33413696 28.81032372]
[216.17308044 21.05393219]
[229.01202393 13.29754162]
[241.85095215 5.54115009]
[235.03800964 -7.82977247]
[229.20765686 -21.65744972]
[224.39027405 -35.86978912]
[220.61097717 -50.39269257]
[217.88948059 -65.15044403]
[216.23997498 -80.06610107]
[215.67105103 -95.06190491]
[216.18568420 -110.05966949]
[217.78118896 -124.98120117]
[220.44923401 -139.74870300]
[224.17593384 -154.28520203]
[228.94183350 -168.51487732]
[234.72209167 -182.36357117]
[241.48658752 -195.75907898]
[249.20004272 -208.63154602]
[257.82223511 -220.91386414]
[267.30822754 -232.54200745]
[277.60855103 -243.45535278]
[288.66952515 -253.59698486]
[300.43344116 -262.91403198]
[312.83901978 -271.35797119]
[325.82153320 -278.88470459]
[339.31335449 -285.45501709]
[353.24407959 -291.03466797]
[367.54110718 -295.59457397]
[382.12991333 -299.11093140]
[396.93441772 -301.56542969]
[411.87741089 -302.94525146]
[426.88104248 -303.24322510]
[441.86706543 -302.45779419]
[456.75735474 -300.59301758]
[471.47427368 -297.65869141]
[485.94107056 -293.67004395]
[500.08236694 -288.64788818]
[513.82440186 -282.61843872]
[527.09552002 -275.61309814]
[539.82653809 -267.66839600]
[551.95117188 -258.82574463]
[563.40606689 -249.13128662]
[574.13159180 -238.63551331]
[584.07177734 -227.39317322]
[593.17480469 -215.46287537]
[601.39331055 -202.90681458]
[608.68432617 -189.79045105]
[615.00988770 -176.18218994]
[620.33697510 -162.15295410]
[624.63787842 -147.77589417]
[627.89019775 -133.12596130]
[630.07684326 -118.27954102]
[631.18658447 -103.31403351]
[631.21350098 -88.30747223]
[630.15753174 -73.33808136]
[628.02410889 -58.48390961]
[624.82440186 -43.82240295]
[620.57513428 -29.43000031]
[615.29840088 -15.38173771]
[609.02166748 -1.75085497]
[601.77777100 11.39158058]
[593.60443115 23.97705078]
[584.54425049 35.93993759]
[574.64447021 47.21787643]
[563.95666504 57.75206375]
[552.53662109 67.48757935]
[540.44384766 76.37366486]
[527.74139404 84.36399841]
[514.49548340 91.41691589]
[500.77517700 97.49565125]
[486.65200806 102.56850433]
[472.19961548 106.60903931]
[457.49331665 109.59617615]
[442.60983276 111.51435089]
[427.62673950 112.35356140]
[412.62213135 112.10943604]
[397.67425537 110.78323364]
[382.86102295 108.38188171]
[368.25970459 104.91790009]
[353.94641113 100.40933990]
[339.99575806 94.87971497]
[326.48046875 88.35784149]
[313.47100830 80.87773895]
[301.03521729 72.47840118]
[289.23794556 63.20361328]
[278.14065552 53.10173035]
[267.80123901 42.22542191]
[258.27355957 30.63139343]
[249.60734558 18.38009071]
[236.76840210 26.13648224]
[223.92947388 33.89287186]
[211.09053040 41.64926529]
[198.25158691 49.40565491]
[185.41264343 57.16204834]
[172.57369995 64.91844177]
[159.73477173 72.67482758]
[152.84202576 85.87859344]
[137.02914429 86.39198303]
[130.13639832 99.59574127]
[114.32353210 100.10913086]
[107.40680695 112.26028442]
[93.43286133 112.72981262]
[80.59392548 120.48620605]
[67.75498199 128.24259949]
[55.46414185 136.84115601]
[43.77656174 146.24331665]
[32.08898163 155.64546204]
[20.40139961 165.04760742]
[8.71381855 174.44976807]
[-2.97376275 183.85191345]
[-14.66134357 193.25405884]
[-6.29316378 205.71420288]
[0.97289604 218.84757996]
[7.08303928 232.55699158]
[11.99202728 246.74089050]
[15.66351604 261.29431152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 205]
[67 204]
[68 203]
[69 202]
[70 201]
[71 200]
[72 199]
[82 198]
[83 197]
[84 196]
[86 194]
[88 192]
[90 190]
[91 189]
[92 188]
[93 187]
[94 186]
[95 185]
[96 184]
[97 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
