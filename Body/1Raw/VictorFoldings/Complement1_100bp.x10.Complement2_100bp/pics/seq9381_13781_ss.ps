%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[197.16804504 487.02618408]
[193.36070251 472.50872803]
[190.74934387 457.72921753]
[189.35134888 442.78607178]
[189.17602539 427.77865601]
[190.22453308 412.80691528]
[192.48989868 397.97042847]
[195.95704651 383.36798096]
[200.60289001 369.09671021]
[206.39653015 355.25161743]
[213.29940796 341.92483521]
[221.26557922 329.20504761]
[230.24203491 317.17691040]
[240.16903687 305.92047119]
[250.98051453 295.51062012]
[241.49160767 283.89337158]
[232.00271606 272.27612305]
[222.51380920 260.65884399]
[213.02491760 249.04158020]
[196.30381775 243.71504211]
[193.49783325 225.51593018]
[183.83702087 214.04122925]
[174.17620850 202.56652832]
[162.15481567 201.22010803]
[154.01232910 191.73941040]
[154.52755737 178.85154724]
[140.48396301 173.88903809]
[137.74649048 158.30645752]
[128.25758362 146.68919373]
[118.76868439 135.07192993]
[109.27978516 123.45466614]
[99.79088593 111.83740234]
[102.06341553 126.66425323]
[98.56364441 141.25025940]
[89.81074524 153.43167114]
[77.10316467 161.40145874]
[62.32598877 163.97732544]
[47.67132950 160.77717590]
[35.31311417 152.27572632]
[27.08461571 139.73413086]
[24.20647812 125.01284027]
[27.10565758 110.29568481]
[35.35207748 97.76585388]
[47.72243500 89.28208923]
[62.38165283 86.10289764]
[77.15512848 88.69989014]
[89.84991455 96.68651581]
[82.97050476 83.35708618]
[76.09108734 70.02765656]
[60.07823563 71.47570038]
[44.77245712 66.67949677]
[32.50859833 56.40167999]
[25.14556503 42.23871613]
[23.78457832 26.37294579]
[28.60456848 11.23634529]
[38.83929062 -0.86227059]
[31.76218605 -14.08779812]
[24.68508148 -27.31332588]
[17.60797501 -40.53885269]
[10.82824802 -27.15844536]
[-3.82832980 -23.96709442]
[-15.55747414 -33.31734467]
[-15.71289635 -48.31653976]
[-4.18002510 -57.90782928]
[10.53820896 -55.02185822]
[-2.12439728 -64.50705719]
[-0.20334381 -79.27725983]
[-12.86594963 -88.76245117]
[-10.94489670 -103.53265381]
[-17.01873016 -117.24792480]
[-23.09256363 -130.96319580]
[-37.58691025 -126.99183655]
[-52.51127625 -125.22521973]
[-67.53224945 -125.70278931]
[-82.31424713 -128.41389465]
[-96.52704620 -133.29794312]
[-109.85312653 -140.24584961]
[-121.99476624 -149.10238647]
[-132.68072510 -159.66969299]
[-141.67227173 -171.71168518]
[-148.76853943 -184.95935059]
[-153.81098938 -199.11672974]
[-156.68696594 -213.86753845]
[-157.33222961 -228.88224792]
[-155.73236084 -243.82540894]
[-151.92309570 -258.36318970]
[-145.98954773 -272.17080688]
[-138.06425476 -284.93981934]
[-128.32429504 -296.38494873]
[-116.98723602 -306.25048828]
[-104.30636597 -314.31604004]
[-90.56498718 -320.40142822]
[-76.07007599 -324.37072754]
[-61.14545822 -326.13522339]
[-46.12455368 -325.65551758]
[-31.34293747 -322.94229126]
[-17.13083649 -318.05621338]
[-3.80575037 -311.10641479]
[8.33463001 -302.24816895]
[19.01908493 -291.67932129]
[28.00892067 -279.63604736]
[35.10330200 -266.38735962]
[40.14373398 -252.22927856]
[43.01761246 -237.47805786]
[43.66073608 -222.46325684]
[42.05873489 -207.52032471]
[38.24740219 -192.98309326]
[32.31188202 -179.17630005]
[24.38477516 -166.40843201]
[14.64317513 -154.96470642]
[3.30471635 -145.10078430]
[-9.37729740 -137.03701782]
[-3.30346394 -123.32175446]
[2.77037001 -109.60649109]
[14.99853516 -101.10230255]
[13.51192284 -85.35108948]
[25.74008751 -76.84690094]
[24.25347519 -61.09569168]
[30.83350372 -47.61595917]
[37.91061020 -34.39043045]
[44.98771286 -21.16490364]
[52.06481934 -7.93937588]
[65.96736908 -9.85209274]
[79.71701050 -6.89814854]
[91.65785217 0.58756167]
[100.34471130 11.72312260]
[104.71804047 25.18346214]
[104.23312378 39.35801697]
[98.92783356 52.54342651]
[89.42051697 63.14824295]
[96.29993439 76.47767639]
[103.17934418 89.80710602]
[111.40814972 102.34850311]
[120.89704895 113.96576691]
[130.38595581 125.58303070]
[139.87484741 137.20028687]
[149.36373901 148.81755066]
[164.08605957 154.61100769]
[166.14482117 169.36264038]
[183.51043701 175.48776245]
[185.65090942 192.90571594]
[195.31172180 204.38041687]
[204.97253418 215.85511780]
[217.73318481 217.73356628]
[225.54345703 227.48976135]
[224.64218140 239.55268860]
[234.13107300 251.16995239]
[243.61997986 262.78720093]
[253.10887146 274.40447998]
[262.59777832 286.02172852]
[274.95657349 277.50625610]
[287.96832275 270.02648926]
[301.54644775 263.63220215]
[315.60061646 258.36593628]
[330.03726196 254.26275635]
[344.76031494 251.34996033]
[359.67178345 249.64692688]
[374.67248535 249.16497803]
[389.66253662 249.90734863]
[404.54220581 251.86909485]
[419.21246338 255.03713989]
[433.57565308 259.39041138]
[447.53622437 264.89996338]
[461.00128174 271.52908325]
[473.88119507 279.23367310]
[486.09024048 287.96249390]
[497.54714966 297.65740967]
[508.17575073 308.25393677]
[517.90521240 319.68151855]
[526.67089844 331.86413574]
[534.41436768 344.72070312]
[541.08416748 358.16564941]
[546.63586426 372.10952759]
[551.03253174 386.45950317]
[554.24487305 401.12011719]
[556.25158691 415.99377441]
[557.03924561 430.98153687]
[556.60260010 445.98358154]
[554.94464111 460.90014648]
[552.07635498 475.63195801]
[548.01678467 490.08093262]
[542.79302979 504.15093994]
[536.43975830 517.74835205]
[528.99938965 530.78265381]
[520.52130127 543.16711426]
[511.06195068 554.81927490]
[500.68432617 565.66168213]
[489.45745850 575.62213135]
[477.45608521 584.63433838]
[464.76007080 592.63836670]
[451.45388794 599.58081055]
[437.62609863 605.41564941]
[423.36874390 610.10394287]
[408.77667236 613.61456299]
[393.94699097 615.92407227]
[378.97842407 617.01708984]
[363.97058105 616.88641357]
[349.02331543 615.53289795]
[334.23608398 612.96551514]
[319.70736694 609.20141602]
[305.53378296 604.26556396]
[291.80969238 598.19085693]
[278.62640381 591.01770020]
[266.07168579 582.79388428]
[254.22904968 573.57409668]
[243.17732239 563.41967773]
[232.99006653 552.39819336]
[223.73504639 540.58306885]
[215.47389221 528.05285645]
[208.26155090 514.89099121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[21 143]
[22 142]
[23 141]
[26 139]
[28 137]
[29 136]
[30 135]
[31 134]
[32 133]
[47 132]
[48 131]
[49 130]
[56 122]
[57 121]
[58 120]
[59 119]
[65 118]
[67 116]
[69 114]
[70 113]
[71 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
