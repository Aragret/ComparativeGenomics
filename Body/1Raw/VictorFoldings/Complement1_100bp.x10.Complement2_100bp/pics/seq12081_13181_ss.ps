%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[122.57496643 961.76116943]
[107.62191772 960.55371094]
[92.72370148 958.79455566]
[77.90067291 956.48602295]
[63.17306137 953.63134766]
[48.56099319 950.23443604]
[34.08442688 946.29992676]
[19.76313400 941.83312988]
[5.61667585 936.84020996]
[-8.33562565 931.32800293]
[-22.07471275 925.30395508]
[-35.58181763 918.77636719]
[-48.83849716 911.75408936]
[-61.82663727 904.24676514]
[-74.52850342 896.26464844]
[-86.92674255 887.81866455]
[-99.00441742 878.92028809]
[-110.74504089 869.58166504]
[-122.13256073 859.81561279]
[-133.15144348 849.63543701]
[-143.78662109 839.05505371]
[-154.02359009 828.08892822]
[-163.84832764 816.75201416]
[-173.24745178 805.05981445]
[-182.20811462 793.02825928]
[-190.71807861 780.67382812]
[-198.76570129 768.01336670]
[-206.34001160 755.06414795]
[-213.43066406 741.84393311]
[-220.02795410 728.37072754]
[-226.12287903 714.66296387]
[-231.70713806 700.73931885]
[-236.77307129 686.61883545]
[-241.31376648 672.32080078]
[-245.32304382 657.86480713]
[-248.79539490 643.27044678]
[-251.72608948 628.55780029]
[-254.11114502 613.74688721]
[-255.94726562 598.85797119]
[-257.23199463 583.91137695]
[-257.96350098 568.92749023]
[-258.14086914 553.92681885]
[-257.76379395 538.92980957]
[-256.83282471 523.95703125]
[-255.34922791 509.02883911]
[-253.31503296 494.16567993]
[-250.73300171 479.38784790]
[-247.60665894 464.71551514]
[-243.94029236 450.16870117]
[-239.73890686 435.76733398]
[-235.00823975 421.53103638]
[-229.75474548 407.47924805]
[-223.98561096 393.63119507]
[-217.70870972 380.00576782]
[-210.93260193 366.62161255]
[-203.66656494 353.49697876]
[-195.92051697 340.64978027]
[-187.70503235 328.09759521]
[-179.03134155 315.85754395]
[-169.91128540 303.94638062]
[-160.35731506 292.38034058]
[-150.38249207 281.17523193]
[-140.00044250 270.34637451]
[-129.22532654 259.90853882]
[-118.07187653 249.87597656]
[-106.55533600 240.26240540]
[-94.69141388 231.08096313]
[-82.49633026 222.34417725]
[-69.98674011 214.06398010]
[-57.17972183 206.25169373]
[-44.09277725 198.91796875]
[-30.74377632 192.07284546]
[-17.15095520 185.72566223]
[-3.33288026 179.88508606]
[10.69157696 174.55911255]
[24.90325928 169.75498962]
[39.28275681 165.47927856]
[53.81042480 161.73785400]
[68.46642303 158.53578186]
[83.23073578 155.87747192]
[98.08319092 153.76654053]
[96.52267456 138.84794617]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[82.40771484 81.32119751]
[88.57779694 67.76467133]
[86.79533386 52.87095642]
[85.01287079 37.97723770]
[83.23040009 23.08352089]
[68.29373932 20.94846153]
[54.41900253 15.01936817]
[42.55220032 5.70049381]
[33.50242996 -6.37278414]
[27.88671684 -20.37729073]
[26.08795166 -35.35817337]
[28.22877693 -50.29401016]
[34.16322708 -64.16645813]
[43.48668289 -76.02966309]
[55.56345367 -85.07476807]
[69.57012939 -90.68507385]
[84.55170441 -92.47805786]
[99.48671722 -90.33146667]
[113.35686493 -84.39165497]
[125.21646881 -75.06362152]
[134.25691223 -62.98335648]
[139.86181641 -48.97452164]
[141.64900208 -33.99225235]
[139.49664307 -19.05807114]
[133.55148315 -5.19021416]
[124.21887207 6.66578579]
[112.13512421 15.70156670]
[98.12412262 21.30105400]
[99.90658569 36.19477081]
[101.68904877 51.08848953]
[103.47151947 65.98220825]
[112.66638947 77.69986725]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[111.44127655 137.28741455]
[113.00180054 152.20602417]
[127.96958923 151.19767761]
[142.96441650 150.74311829]
[157.96580505 150.84294128]
[172.95326233 151.49702454]
[187.90629578 152.70446777]
[202.80451965 154.46362305]
[217.62756348 156.77207947]
[232.35517883 159.62670898]
[246.96725464 163.02359009]
[261.44381714 166.95808411]
[275.76513672 171.42483521]
[289.91159058 176.41772461]
[303.86392212 181.92993164]
[317.60299683 187.95394897]
[331.11013794 194.48152161]
[344.36682129 201.50373840]
[357.35498047 209.01103210]
[370.05685425 216.99311829]
[382.45510864 225.43910217]
[394.53280640 234.33746338]
[406.27343750 243.67602539]
[417.66101074 253.44206238]
[428.67990112 263.62219238]
[439.31509399 274.20257568]
[449.55209351 285.16867065]
[459.37686157 296.50558472]
[468.77600098 308.19778442]
[477.73669434 320.22930908]
[486.24667358 332.58374023]
[494.29434204 345.24417114]
[501.86868286 358.19332886]
[508.95935059 371.41354370]
[515.55664062 384.88671875]
[521.65161133 398.59451294]
[527.23590088 412.51812744]
[532.30187988 426.63858032]
[536.84259033 440.93661499]
[540.85192871 455.39263916]
[544.32427979 469.98696899]
[547.25500488 484.69961548]
[549.64007568 499.51052856]
[551.47625732 514.39947510]
[552.76098633 529.34606934]
[553.49255371 544.32989502]
[553.66992188 559.33056641]
[553.29290771 574.32757568]
[552.36199951 589.30035400]
[550.87841797 604.22857666]
[548.84423828 619.09173584]
[546.26220703 633.86956787]
[543.13592529 648.54193115]
[539.46960449 663.08874512]
[535.26824951 677.49011230]
[530.53759766 691.72644043]
[525.28411865 705.77819824]
[519.51501465 719.62628174]
[513.23815918 733.25170898]
[506.46209717 746.63586426]
[499.19607544 759.76055908]
[491.45004272 772.60772705]
[483.23458862 785.15997314]
[474.56094360 797.40002441]
[465.44088745 809.31121826]
[455.88696289 820.87725830]
[445.91213989 832.08239746]
[435.53012085 842.91125488]
[424.75503540 853.34912109]
[413.60159302 863.38171387]
[402.08508301 872.99530029]
[390.22119141 882.17675781]
[378.02612305 890.91357422]
[365.51654053 899.19384766]
[352.70953369 907.00616455]
[339.62261963 914.33990479]
[326.27362061 921.18505859]
[312.68081665 927.53222656]
[298.86276245 933.37286377]
[284.83831787 938.69885254]
[270.62664795 943.50299072]
[256.24716187 947.77874756]
[241.71948242 951.52020264]
[227.06349182 954.72229004]
[212.29919434 957.38067627]
[197.44673157 959.49163818]
[182.52642822 961.05230713]
[167.55862427 962.06060791]
[152.56379700 962.51513672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 123]
[82 122]
[83 121]
[84 120]
[85 118]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
