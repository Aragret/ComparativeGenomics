%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[55.24008560 935.69122314]
[40.24528122 935.22930908]
[25.27991867 934.18273926]
[10.36678600 932.55303955]
[-4.47140789 930.34271240]
[-19.21206665 927.55517578]
[-33.83274078 924.19464111]
[-48.31116867 920.26617432]
[-62.62529755 915.77581787]
[-76.75333405 910.73040771]
[-90.67375946 905.13763428]
[-104.36537933 899.00598145]
[-117.80733490 892.34484863]
[-130.97917175 885.16430664]
[-143.86080933 877.47528076]
[-156.43264771 869.28955078]
[-168.67555237 860.61956787]
[-180.57084656 851.47845459]
[-192.10044861 841.88024902]
[-203.24678040 831.83947754]
[-213.99287415 821.37152100]
[-224.32235718 810.49218750]
[-234.21951294 799.21820068]
[-243.66926575 787.56658936]
[-252.65722656 775.55517578]
[-261.16970825 763.20220947]
[-269.19372559 750.52655029]
[-276.71710205 737.54748535]
[-283.72833252 724.28472900]
[-290.21679688 710.75854492]
[-296.17254639 696.98956299]
[-301.58654785 682.99859619]
[-306.45059204 668.80712891]
[-310.75720215 654.43664551]
[-314.49987793 639.90905762]
[-317.67288208 625.24658203]
[-320.27139282 610.47143555]
[-322.29144287 595.60614014]
[-323.72998047 580.67333984]
[-324.58480835 565.69580078]
[-324.85461426 550.69628906]
[-324.53900146 535.69769287]
[-323.63842773 520.72283936]
[-322.15429688 505.79452515]
[-320.08883667 490.93548584]
[-317.44522095 476.16833496]
[-314.22744751 461.51556396]
[-310.44042969 446.99951172]
[-306.08993530 432.64224243]
[-301.18258667 418.46566772]
[-295.72589111 404.49136353]
[-289.72808838 390.74057007]
[-283.19836426 377.23428345]
[-276.14663696 363.99301147]
[-268.58367920 351.03698730]
[-260.52096558 338.38589478]
[-251.97080994 326.05899048]
[-242.94621277 314.07507324]
[-233.46092224 302.45239258]
[-223.52937317 291.20864868]
[-213.16670227 280.36096191]
[-202.38868713 269.92584229]
[-191.21174622 259.91915894]
[-179.65289307 250.35620117]
[-167.72972107 241.25149536]
[-155.46041870 232.61892700]
[-142.86363220 224.47161865]
[-129.95855713 216.82200623]
[-116.76485443 209.68171692]
[-103.30261993 203.06163025]
[-89.59233856 196.97183228]
[-75.65489197 191.42158508]
[-61.51151657 186.41935730]
[-47.18373871 181.97276306]
[-32.69338226 178.08856201]
[-18.06251144 174.77267456]
[-3.31340766 172.03015137]
[11.53146744 169.86517334]
[26.44950867 168.28103638]
[41.41799927 167.28013611]
[56.41414261 166.86401367]
[71.41510010 167.03330994]
[86.39803314 167.78775024]
[87.73626709 152.84756470]
[89.07450104 137.90737915]
[82.50352478 124.54057312]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[87.14339447 72.74061584]
[95.98531342 60.75438690]
[97.32354736 45.81420135]
[98.66178131 30.87401581]
[100.00001526 15.93383026]
[101.33824921 0.99364507]
[102.67648315 -13.94653988]
[104.01471710 -28.88672447]
[104.90753174 -43.86013031]
[105.35414124 -58.85348129]
[91.47541809 -65.05425262]
[81.02971649 -76.09761047]
[75.60992432 -90.29952240]
[76.04252625 -105.49430084]
[82.26155090 -119.36485291]
[93.31864166 -129.79602051]
[107.52767181 -135.19712830]
[122.72186279 -134.74453735]
[136.58422852 -128.50726318]
[147.00083923 -117.43647003]
[152.38323975 -103.22034454]
[151.91067505 -88.02675629]
[145.65516663 -74.17261505]
[134.57067871 -63.77057648]
[120.34748840 -58.40687561]
[119.90088654 -43.41352463]
[121.72278595 -41.28308105]
[122.81056976 -38.30258560]
[122.83623505 -34.74804688]
[121.57766724 -31.00899506]
[118.95490265 -27.54849052]
[117.61666870 -12.60830593]
[116.27843475 2.33187914]
[114.94020081 17.27206421]
[113.60196686 32.21224976]
[112.26373291 47.15243530]
[110.92549896 62.09262085]
[117.49647522 75.45942688]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[112.85660553 127.25938416]
[104.01468658 139.24562073]
[102.67645264 154.18580627]
[101.33821869 169.12599182]
[116.21672058 171.04631042]
[131.00897217 173.54568481]
[145.69244385 176.62028503]
[160.24476624 180.26544189]
[174.64379883 184.47560120]
[188.86759949 189.24433899]
[202.89451599 194.56440735]
[216.70318604 200.42770386]
[230.27256775 206.82530212]
[243.58201599 213.74743652]
[256.61123657 221.18359375]
[269.34042358 229.12245178]
[281.75018311 237.55189514]
[293.82159424 246.45909119]
[305.53631592 255.83050537]
[316.87646484 265.65182495]
[327.82476807 275.90814209]
[338.36459351 286.58377075]
[348.47988892 297.66253662]
[358.15521240 309.12750244]
[367.37585449 320.96124268]
[376.12774658 333.14572144]
[384.39761353 345.66238403]
[392.17282104 358.49215698]
[399.44155884 371.61553955]
[406.19271851 385.01254272]
[412.41601562 398.66271973]
[418.10205078 412.54534912]
[423.24206543 426.63922119]
[427.82830811 440.92291260]
[431.85372925 455.37466431]
[435.31225586 469.97247314]
[438.19860840 484.69412231]
[440.50836182 499.51715088]
[442.23803711 514.41900635]
[443.38497925 529.37701416]
[443.94744873 544.36840820]
[443.92456055 559.37030029]
[443.31640625 574.35986328]
[442.12387085 589.31433105]
[440.34875488 604.21081543]
[437.99380493 619.02679443]
[435.06259155 633.73956299]
[431.55957031 648.32672119]
[427.49008179 662.76617432]
[422.86032104 677.03576660]
[417.67733765 691.11395264]
[411.94903564 704.97912598]
[405.68411255 718.61029053]
[398.89212036 731.98663330]
[391.58343506 745.08776855]
[383.76913452 757.89379883]
[375.46115112 770.38519287]
[366.67211914 782.54296875]
[357.41543579 794.34851074]
[347.70520020 805.78393555]
[337.55618286 816.83178711]
[326.98385620 827.47521973]
[316.00433350 837.69812012]
[304.63427734 847.48480225]
[292.89105225 856.82043457]
[280.79254150 865.69079590]
[268.35714722 874.08239746]
[255.60380554 881.98236084]
[242.55195618 889.37878418]
[229.22146606 896.26031494]
[215.63262939 902.61645508]
[201.80615234 908.43762207]
[187.76307678 913.71490479]
[173.52481079 918.44024658]
[159.11300659 922.60650635]
[144.54963684 926.20727539]
[129.85685730 929.23706055]
[115.05705261 931.69134521]
[100.17276764 933.56628418]
[85.22666168 934.85906982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 134]
[84 133]
[85 132]
[87 130]
[89 128]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
