%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[57.23209000 333.12420654]
[58.63652420 348.08218384]
[57.99102783 363.09210205]
[55.30762482 377.87429810]
[50.63631058 392.15338135]
[44.06410217 405.66336060]
[35.71343994 418.15258789]
[25.73988914 429.38833618]
[14.32925320 439.16131592]
[1.69410431 447.28945923]
[-11.93017292 453.62133789]
[-26.28976440 458.03900146]
[-41.11716461 460.46017456]
[-56.13614273 460.83972168]
[-71.06690216 459.17056274]
[-85.63130188 455.48382568]
[-99.55801392 449.84817505]
[-112.58757782 442.36859131]
[-124.47727966 433.18444824]
[-135.00561523 422.46679688]
[-143.97644043 410.41531372]
[-151.22264099 397.25454712]
[-156.60922241 383.22961426]
[-160.03584290 368.60183716]
[-161.43865967 353.64367676]
[-160.79153442 338.63385010]
[-158.10653687 323.85195923]
[-153.43367004 309.57336426]
[-146.86000061 296.06408691]
[-138.50798035 283.57580566]
[-128.53321838 272.34112549]
[-117.12152863 262.56936646]
[-104.48549652 254.44259644]
[-90.86053467 248.11218262]
[-76.50046539 243.69606018]
[-61.67280579 241.27650452]
[-46.65378571 240.89859009]
[-31.72320366 242.56935120]
[-17.15920448 246.25767517]
[-3.23310757 251.89483643]
[4.23463345 238.88587952]
[11.70237446 225.87692261]
[6.62944031 214.03231812]
[9.34538269 201.23756409]
[19.07782173 192.21037292]
[32.42605972 190.41062927]
[40.08665848 177.51429749]
[47.74725723 164.61796570]
[55.40785217 151.72164917]
[40.44942093 152.83758545]
[30.13903999 141.94281006]
[32.07713699 127.06855011]
[44.83502197 119.17954254]
[59.00805283 124.09127808]
[64.14855957 138.18136597]
[72.74712372 125.89052582]
[81.34568787 113.59968567]
[89.94425201 101.30885315]
[91.61720276 93.42382050]
[98.76345825 88.90032959]
[107.54405975 76.73886871]
[109.34918976 61.02098083]
[123.07252502 55.23138046]
[131.85313416 43.06992340]
[140.63372803 30.90847015]
[149.41433716 18.74701309]
[158.19493103 6.58555746]
[166.97554016 -5.57589817]
[175.75614929 -17.73735428]
[172.09313965 -30.69871902]
[176.49961853 -43.22043610]
[187.15553284 -50.80552673]
[200.04061890 -50.86730957]
[209.00131226 -62.89668655]
[217.96202087 -74.92606354]
[226.92271423 -86.95544434]
[221.66864014 -103.03308868]
[226.98016357 -118.91669464]
[240.57615662 -128.40936279]
[256.98498535 -127.93243408]
[265.76559448 -140.09388733]
[274.54620361 -152.25534058]
[283.32681274 -164.41679382]
[271.81765747 -174.04658508]
[261.02481079 -184.47288513]
[251.00326538 -195.64257812]
[241.80410767 -207.49874878]
[233.47419739 -219.98095703]
[226.05598450 -233.02563477]
[219.58728027 -246.56628418]
[214.10102844 -260.53390503]
[209.62521362 -274.85729980]
[206.18261719 -289.46353149]
[203.79078674 -304.27813721]
[202.46192932 -319.22561646]
[202.20280457 -334.22982788]
[203.01473999 -349.21429443]
[204.89356995 -364.10266113]
[207.82975769 -378.81903076]
[211.80831909 -393.28845215]
[216.80899048 -407.43719482]
[222.80627441 -421.19314575]
[229.76962280 -434.48617554]
[237.66355896 -447.24859619]
[246.44783020 -459.41534424]
[256.07769775 -470.92440796]
[266.50408936 -481.71716309]
[277.67385864 -491.73861694]
[289.53009033 -500.93771362]
[302.01239014 -509.26751709]
[315.05709839 -516.68560791]
[328.59780884 -523.15423584]
[342.56546021 -528.64038086]
[356.88891602 -533.11608887]
[371.49517822 -536.55859375]
[386.30978394 -538.95025635]
[401.25729370 -540.27899170]
[416.26150513 -540.53802490]
[431.24594116 -539.72601318]
[446.13427734 -537.84704590]
[460.85064697 -534.91076660]
[475.32003784 -530.93206787]
[489.46875000 -525.93127441]
[503.22463989 -519.93389893]
[516.51763916 -512.97045898]
[529.27996826 -505.07641602]
[541.44665527 -496.29205322]
[552.95562744 -486.66207886]
[563.74835205 -476.23562622]
[573.76971436 -465.06576538]
[582.96868896 -453.20947266]
[591.29840088 -440.72711182]
[598.71643066 -427.68234253]
[605.18493652 -414.14160156]
[610.67095947 -400.17388916]
[615.14654541 -385.85040283]
[618.58892822 -371.24411011]
[620.98052979 -356.42947388]
[622.30914307 -341.48196411]
[622.56805420 -326.47775269]
[621.75592041 -311.49331665]
[619.87683105 -296.60498047]
[616.94042969 -281.88864136]
[612.96160889 -267.41928101]
[607.96075439 -253.27062988]
[601.96325684 -239.51478577]
[594.99969482 -226.22184753]
[587.10559082 -213.45954895]
[578.32110596 -201.29293823]
[568.69104004 -189.78401184]
[558.26452637 -178.99140930]
[547.09460449 -168.97012329]
[535.23822021 -159.77124023]
[522.75579834 -151.44161987]
[509.71093750 -144.02369690]
[496.17016602 -137.55529785]
[482.20242310 -132.06938171]
[467.87890625 -127.59388733]
[453.27258301 -124.15162659]
[438.45791626 -121.76014709]
[423.51040649 -120.43163300]
[408.50619507 -120.17285156]
[393.52175903 -120.98512268]
[378.63345337 -122.86430359]
[363.91711426 -125.80082703]
[349.44778442 -129.77972412]
[335.29916382 -134.78071594]
[321.54336548 -140.77832031]
[308.25048828 -147.74197388]
[295.48825073 -155.63619995]
[286.70767212 -143.47474670]
[277.92706299 -131.31329346]
[269.14645386 -119.15183258]
[274.46893311 -106.90792084]
[273.03488159 -93.52555847]
[265.11251831 -82.51165009]
[252.68440247 -76.80550385]
[238.95208740 -77.99474335]
[229.99139404 -65.96537018]
[221.03070068 -53.93598938]
[212.07000732 -41.90661240]
[215.21166992 -25.38484955]
[205.23556519 -11.42805099]
[187.91760254 -8.95675087]
[179.13699341 3.20470500]
[170.35639954 15.36616135]
[161.57579041 27.52761650]
[152.79518127 39.68907166]
[144.01458740 51.85052872]
[135.23397827 64.01198578]
[134.05690002 78.86000824]
[119.70551300 85.51947021]
[110.92491150 97.68093109]
[102.23508453 109.90741730]
[93.63652039 122.19824982]
[85.03796387 134.48908997]
[76.43939972 146.77992249]
[68.30418396 159.38224792]
[60.64358139 172.27856445]
[52.98298645 185.17489624]
[45.32238770 198.07122803]
[49.94971848 214.94152832]
[41.11811829 229.64926147]
[24.71132660 233.34466553]
[17.24358559 246.35362244]
[9.77584457 259.36257935]
[21.66653824 268.54544067]
[32.19602966 279.26196289]
[41.16816330 291.31246948]
[48.41578674 304.47247314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 206]
[41 205]
[42 204]
[46 201]
[47 200]
[48 199]
[49 198]
[55 197]
[56 196]
[57 195]
[58 194]
[60 193]
[61 192]
[63 190]
[64 189]
[65 188]
[66 187]
[67 186]
[68 185]
[69 184]
[73 181]
[74 180]
[75 179]
[76 178]
[80 173]
[81 172]
[82 171]
[83 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
