%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[130.55180359 513.11651611]
[122.21225739 500.63955688]
[114.85228729 487.56079102]
[108.51509094 473.95703125]
[103.23785400 459.90805054]
[99.05155182 445.49633789]
[95.98074341 430.80645752]
[94.04344940 415.92459106]
[93.25103760 400.93811035]
[93.60816956 385.93493652]
[95.11273956 371.00311279]
[97.75592041 356.23028564]
[101.52220154 341.70315552]
[106.38948059 327.50692749]
[112.32919312 313.72497559]
[119.30648804 300.43814087]
[127.28041077 287.72439575]
[136.20416260 275.65835571]
[146.02539062 264.31082153]
[156.68644714 253.74841309]
[168.12477112 244.03308105]
[180.27323914 235.22187805]
[172.42147827 222.44102478]
[164.56973267 209.66018677]
[156.71797180 196.87934875]
[148.86621094 184.09849548]
[140.91952515 171.37646484]
[132.59759521 158.89666748]
[123.99902344 146.60583496]
[115.40045929 134.31500244]
[106.71063232 122.08850861]
[97.93003082 109.92705536]
[91.03335571 105.75471497]
[89.11082458 97.51853180]
[80.51226044 85.22769165]
[71.91369629 72.93685150]
[63.31513214 60.64601517]
[57.49576187 57.50811005]
[54.57336807 52.63403320]
[54.64995193 47.85876465]
[46.42114639 35.31736374]
[38.19233704 22.77596474]
[24.53009415 27.76257133]
[10.10730362 29.57577133]
[-4.34914207 28.12755966]
[-18.11140823 23.49421883]
[-30.48735809 15.91230583]
[-40.85536957 5.76657963]
[-48.69555283 -6.42952538]
[-53.61581802 -20.05987930]
[-55.37148666 -34.43678665]
[-53.87744904 -48.83567429]
[-49.21229935 -62.53162003]
[-41.61418915 -74.83583832]
[-31.46869278 -85.13034058]
[-39.50986481 -97.79286194]
[-46.75204468 -103.35961151]
[-47.57486725 -110.70431519]
[-55.42662430 -123.48516083]
[-63.27837753 -136.26600647]
[-71.13013458 -149.04684448]
[-78.98188782 -161.82768250]
[-92.64784241 -155.59701538]
[-106.97590637 -151.09298706]
[-121.74887085 -148.38391113]
[-136.74278259 -147.51081848]
[-151.73033142 -148.48698425]
[-166.48431396 -151.29757690]
[-180.78108215 -155.90000916]
[-194.40386963 -162.22451782]
[-207.14616394 -170.17518616]
[-218.81481934 -179.63153076]
[-229.23291016 -190.45016479]
[-238.24252319 -202.46708679]
[-245.70707703 -215.50012207]
[-251.51339722 -229.35169983]
[-255.57345581 -243.81184387]
[-257.82571411 -258.66131592]
[-258.23605347 -273.67501831]
[-256.79821777 -288.62533569]
[-253.53399658 -303.28564453]
[-248.49290466 -317.43368530]
[-241.75135803 -330.85498047]
[-233.41154480 -343.34606934]
[-223.59988403 -354.71755981]
[-212.46514893 -364.79711914]
[-200.17613220 -373.43188477]
[-186.91911316 -380.49102783]
[-172.89508057 -385.86746216]
[-158.31663513 -389.47970581]
[-143.40476990 -391.27301025]
[-128.38554382 -391.22018433]
[-113.48667145 -389.32202148]
[-98.93399048 -385.60729980]
[-84.94812012 -380.13235474]
[-71.74108887 -372.98016357]
[-59.51311111 -364.25912476]
[-48.44955826 -354.10150146]
[-38.71814728 -342.66125488]
[-30.46640968 -330.11181641]
[-23.81943512 -316.64343262]
[-18.87799072 -302.46029663]
[-15.71699142 -287.77737427]
[-14.38435268 -272.81732178]
[-14.90028000 -257.80685425]
[-17.25695038 -242.97360229]
[-21.41863632 -228.54238892]
[-27.32225037 -214.73199463]
[-34.87829590 -201.75178528]
[-43.97222137 -189.79853821]
[-54.46616745 -179.05346680]
[-66.20104980 -169.67944336]
[-58.34929276 -156.89860535]
[-50.49753571 -144.11775208]
[-42.64577866 -131.33691406]
[-34.79402542 -118.55607605]
[-26.84733963 -105.83403778]
[-18.80616760 -93.17150879]
[-4.15200043 -98.20359039]
[11.28860760 -99.59088898]
[26.62232780 -97.24894714]
[40.96101379 -91.30919647]
[53.47314835 -82.11158752]
[63.43205643 -70.18510437]
[70.25811768 -56.21739960]
[73.55249023 -41.01507568]
[73.12042236 -25.45717239]
[68.98275757 -10.44429207]
[61.37496185 3.15351009]
[50.73373795 14.54715633]
[58.96254730 27.08855629]
[67.19135284 39.62995911]
[75.60597229 52.04745102]
[84.20453644 64.33828735]
[92.80310059 76.62912750]
[101.40166473 88.91996765]
[110.09149170 101.14645386]
[118.87209320 113.30790710]
[126.43276978 118.43372345]
[127.69129944 125.71643066]
[136.28985596 138.00727844]
[144.88842773 150.29811096]
[149.61906433 152.50448608]
[152.72024536 155.95933533]
[153.98922729 159.83293152]
[153.58206177 163.33529663]
[160.82423401 168.90203857]
[161.64706421 176.24674988]
[169.49880981 189.02758789]
[177.35057068 201.80842590]
[185.20233154 214.58927917]
[193.05407715 227.37011719]
[206.40493774 220.51612854]
[220.24130249 214.70425415]
[234.48196411 209.96859741]
[249.04335022 206.33695984]
[263.83999634 203.83065796]
[278.78512573 202.46437073]
[293.79095459 202.24615479]
[308.76947021 203.17726135]
[323.63275146 205.25224304]
[338.29357910 208.45890808]
[352.66592407 212.77844238]
[366.66543579 218.18551636]
[380.20996094 224.64837646]
[393.22000122 232.12910461]
[405.61923218 240.58378601]
[417.33489990 249.96282959]
[428.29818726 260.21118164]
[438.44482422 271.26870728]
[447.71524048 283.07049561]
[456.05502319 295.54730225]
[463.41522217 308.62591553]
[469.75268555 322.22955322]
[475.03018188 336.27844238]
[479.21676636 350.69006348]
[482.28784180 365.37991333]
[484.22543335 380.26171875]
[485.01812744 395.24819946]
[484.66128540 410.25137329]
[483.15698242 425.18322754]
[480.51406860 439.95608521]
[476.74807739 454.48330688]
[471.88107300 468.67959595]
[465.94161987 482.46166992]
[458.96456909 495.74865723]
[450.99090576 508.46255493]
[442.06738281 520.52874756]
[432.24636841 531.87646484]
[421.58551025 542.43908691]
[410.14736938 552.15460205]
[397.99905396 560.96606445]
[385.21188354 568.82171631]
[371.86090088 575.67547607]
[358.02444458 581.48706055]
[343.78369141 586.22247314]
[329.22222900 589.85382080]
[314.42550659 592.35986328]
[299.48040771 593.72583008]
[284.47454834 593.94378662]
[269.49606323 593.01239014]
[254.63281250 590.93713379]
[239.97204590 587.73016357]
[225.59977722 583.41033936]
[211.60037231 578.00305176]
[198.05596924 571.53991699]
[185.04605103 564.05895996]
[172.64697266 555.60400391]
[160.93151855 546.22473145]
[149.96839905 535.97619629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 152]
[23 151]
[24 150]
[25 149]
[26 148]
[27 146]
[28 142]
[29 141]
[30 140]
[31 138]
[32 137]
[34 136]
[35 135]
[36 134]
[37 133]
[40 132]
[41 131]
[42 130]
[55 118]
[56 117]
[58 116]
[59 115]
[60 114]
[61 113]
[62 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
