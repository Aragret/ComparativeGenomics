%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[229.30435181 461.78042603]
[235.10412598 447.92010498]
[242.77650452 435.00186157]
[252.17214966 423.27719116]
[263.10818481 412.97430420]
[275.37170410 404.29373169]
[268.49227905 390.96429443]
[261.61285400 377.63488770]
[254.73345947 364.30545044]
[247.85403442 350.97601318]
[240.97462463 337.64657593]
[234.09521484 324.31716919]
[221.38255310 316.55587769]
[221.92900085 300.74411011]
[209.21633911 292.98284912]
[209.76278687 277.17108154]
[202.10218811 264.27474976]
[193.68757629 251.85723877]
[185.27294922 239.43974304]
[178.91841125 235.66595459]
[176.82710266 226.77413940]
[168.59829712 214.23274231]
[160.36949158 201.69134521]
[152.14068604 189.14994812]
[143.91186523 176.60855103]
[135.31330872 164.31770325]
[126.35260773 152.28833008]
[117.39191437 140.25895691]
[112.67205811 154.49703979]
[98.65104675 159.82725525]
[85.66464233 152.32035828]
[83.28594208 137.51017761]
[93.26844025 126.31419373]
[108.25193787 126.98491669]
[100.21076965 114.32239532]
[87.90818024 107.67875671]
[87.12670898 93.71878052]
[79.08553314 81.05625153]
[71.04436493 68.39373016]
[57.11480713 60.89185715]
[56.82357788 46.00009918]
[48.78240585 33.33757401]
[40.74123001 20.67505074]
[32.70005798 8.01252556]
[24.65888596 -4.64999914]
[24.15994453 10.34170055]
[16.83155441 23.42966080]
[4.31089926 31.68999863]
[-10.60487652 33.27733231]
[-24.58354950 27.83704948]
[-34.50225067 16.58452225]
[-38.14511490 2.03359222]
[-34.69831467 -12.56502342]
[-24.93187904 -23.94995689]
[-11.02765179 -29.57778740]
[3.90812683 -28.19123840]
[16.53878021 -20.10005760]
[10.66982079 -33.90423584]
[4.80085945 -47.70841217]
[-1.06810117 -61.51258850]
[-5.23975658 -64.65016174]
[-7.55884457 -68.67199707]
[-7.99876690 -72.72434235]
[-6.87562132 -76.06662750]
[-18.95120811 -86.28870392]
[-16.15442276 -100.91837311]
[-21.40114212 -114.97084045]
[-26.64785957 -129.02331543]
[-38.72344589 -139.24539185]
[-35.92666245 -153.87506104]
[-41.17337799 -167.92753601]
[-53.24896622 -178.14959717]
[-50.45217896 -192.77926636]
[-65.15720367 -189.67768860]
[-80.16026306 -188.80250549]
[-95.12617493 -190.17329407]
[-109.72060394 -193.75942993]
[-123.61750031 -199.48078918]
[-136.50640869 -207.20956421]
[-148.09936523 -216.77307129]
[-158.13740540 -227.95768738]
[-166.39627075 -240.51351929]
[-172.69143677 -254.16006470]
[-176.88227844 -268.59246826]
[-178.87518311 -283.48831177]
[-178.62561035 -298.51480103]
[-176.13914490 -313.33624268]
[-171.47132874 -327.62152100]
[-164.72644043 -341.05151367]
[-156.05517578 -353.32614136]
[-145.65126038 -364.17123413]
[-133.74710083 -373.34448242]
[-120.60864258 -380.64099121]
[-106.52941132 -385.89767456]
[-91.82394409 -388.99719238]
[-76.82076263 -389.87020874]
[-61.85504532 -388.49728394]
[-47.26112747 -384.90908813]
[-33.36504745 -379.18576050]
[-20.47724533 -371.45513916]
[-8.88564301 -361.88998413]
[1.15080214 -350.70394897]
[9.40787029 -338.14694214]
[15.70109653 -324.49948120]
[19.88988686 -310.06646729]
[21.88066292 -295.17034912]
[21.62895012 -280.14389038]
[19.14037323 -265.32281494]
[14.47052383 -251.03819275]
[7.72373152 -237.60917664]
[-0.94927865 -225.33576965]
[-11.35474873 -214.49215698]
[-23.26021576 -205.32060242]
[-36.39970779 -198.02598572]
[-24.69940376 -188.80905151]
[-27.12090874 -173.17424011]
[-21.87418938 -159.12178040]
[-10.17388344 -149.90483093]
[-12.59538841 -134.27003479]
[-7.34867001 -120.21755981]
[-2.10195184 -106.16509247]
[9.59835434 -96.94814301]
[7.17684984 -81.31334686]
[12.73607540 -67.38154602]
[18.60503578 -53.57737350]
[24.47399712 -39.77319336]
[30.34295845 -25.96901894]
[37.32141113 -12.69117165]
[45.36258316 -0.02864709]
[53.40375519 12.63387775]
[61.44493103 25.29640198]
[69.48609924 37.95892715]
[82.84049988 44.55508804]
[83.70688629 60.35255432]
[91.74806213 73.01508331]
[99.78923035 85.67760468]
[112.09181976 92.32124329]
[112.87329102 106.28121948]
[120.91446686 118.94374847]
[129.42129517 131.29824829]
[138.38198853 143.32763672]
[147.34268188 155.35700989]
[151.38882446 156.93266296]
[154.41841125 159.45974731]
[156.25717163 162.50184631]
[156.89045715 165.61079407]
[156.45327759 168.37973022]
[164.68208313 180.92114258]
[172.91088867 193.46253967]
[181.13969421 206.00393677]
[189.36849976 218.54533386]
[197.69044495 231.02513123]
[206.10507202 243.44262695]
[214.51968384 255.86012268]
[216.36068726 240.97352600]
[226.51562500 229.93373108]
[241.19696045 226.85829163]
[254.92892456 232.89428711]
[262.58981323 245.79042053]
[261.32232666 260.73678589]
[251.59921265 272.15872192]
[237.04692078 275.79614258]
[223.09220886 270.29165649]
[236.29693604 279.00634766]
[235.25842285 293.86471558]
[248.46315002 302.57937622]
[247.42465210 317.43774414]
[254.30406189 330.76718140]
[261.18347168 344.09661865]
[268.06289673 357.42602539]
[274.94229126 370.75546265]
[281.82171631 384.08489990]
[288.70111084 397.41433716]
[302.88116455 392.44717407]
[317.61450195 389.50192261]
[332.61437988 388.63589478]
[347.58880615 389.86596680]
[362.24627686 393.16818237]
[376.30151367 398.47824097]
[389.48089600 405.69281006]
[401.52789307 414.67141724]
[412.20800781 425.23934937]
[421.31338501 437.19085693]
[428.66671753 450.29333496]
[434.12493896 464.29168701]
[437.58175659 478.91345215]
[438.96987915 493.87405396]
[438.26232910 508.88223267]
[435.47283936 523.64587402]
[430.65573120 537.87756348]
[423.90475464 551.30035400]
[415.35131836 563.65289307]
[405.16192627 574.69470215]
[393.53494263 584.21099854]
[380.69665527 592.01641846]
[366.89697266 597.95904541]
[352.40451050 601.92321777]
[337.50137329 603.83178711]
[322.47766113 603.64758301]
[307.62579346 601.37420654]
[293.23489380 597.05590820]
[279.58505249 590.77667236]
[266.94198608 582.65887451]
[255.55180359 572.86041260]
[245.63619995 561.57202148]
[237.38821411 549.01348877]
[230.96836853 535.42926025]
[226.50163269 521.08374023]
[224.07495117 506.25613403]
[223.73556519 491.23513794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[14 165]
[16 163]
[17 154]
[18 153]
[19 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 142]
[27 141]
[28 140]
[34 139]
[35 138]
[37 136]
[38 135]
[39 134]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[57 127]
[58 126]
[59 125]
[60 124]
[64 123]
[66 121]
[67 120]
[68 119]
[70 117]
[71 116]
[73 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
