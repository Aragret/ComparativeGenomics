%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[98.63912964 548.53436279]
[85.45969391 556.72473145]
[69.98559570 555.57061768]
[58.16694260 545.51580811]
[54.54824829 530.42657471]
[60.52097321 516.10504150]
[73.78848267 508.05813599]
[74.90412903 493.09970093]
[68.13487244 479.83218384]
[76.87715149 466.64572144]
[77.99279785 451.68725586]
[79.10844421 436.72882080]
[80.22409821 421.77035522]
[81.33974457 406.81192017]
[82.45539093 391.85345459]
[83.57104492 376.89498901]
[69.57939911 366.11978149]
[64.81491089 348.95147705]
[71.36718750 332.21386719]
[86.78847504 322.67755127]
[87.45825958 307.69250488]
[88.12804413 292.70745850]
[80.96676636 279.64739990]
[89.31255341 266.20648193]
[89.98233795 251.22143555]
[90.42894745 236.22808838]
[90.65227509 221.22975159]
[90.87560272 206.23141479]
[83.32865143 193.39035034]
[91.27055359 179.70690918]
[91.49388123 164.70857239]
[91.71720886 149.71023560]
[91.94053650 134.71189880]
[84.39358521 121.87083435]
[92.33549500 108.18739319]
[81.63346863 118.69770813]
[66.68969727 119.99527740]
[54.33627319 111.48688507]
[50.22100830 97.06243896]
[56.22534943 83.31661224]
[69.60419464 76.53379822]
[84.24091339 79.81502533]
[93.44437408 91.66191101]
[95.22683716 76.76818848]
[97.00930786 61.87447357]
[98.79177094 46.98075485]
[92.74918365 32.35893250]
[101.94405365 20.64127159]
[103.72652435 5.74755526]
[95.41483307 18.23417854]
[84.07861328 28.05712128]
[70.53624725 34.50725555]
[55.76535797 37.11894226]
[40.83227539 35.70363998]
[26.81503296 30.36352158]
[14.72554302 21.48409462]
[5.43655872 9.70637035]
[-0.38134137 -4.11940384]
[-2.30815744 -18.99513435]
[-0.20479089 -33.84693146]
[5.77691412 -47.60262680]
[15.20513344 -59.26919174]
[27.39923668 -68.00440216]
[41.47891998 -73.17765045]
[56.42775726 -74.41548920]
[71.16658020 -71.62854004]
[84.63138580 -65.01801300]
[95.85012817 -55.06111908]
[104.01292419 -42.47665405]
[108.53049469 -28.17310143]
[109.07659149 -13.18189240]
[115.35395050 -26.80520821]
[121.63130951 -40.42852402]
[127.90866852 -54.05184174]
[133.05062866 -68.14298248]
[137.02273560 -82.60750580]
[140.99482727 -97.07202911]
[144.96691895 -111.53655243]
[144.22169495 -120.64053345]
[149.10733032 -126.18601990]
[153.29434204 -140.58979797]
[157.48135376 -154.99359131]
[161.66836548 -169.39736938]
[165.42466736 -183.91943359]
[168.74691772 -198.54689026]
[172.06918335 -213.17434692]
[175.39144897 -227.80180359]
[176.61842346 -242.75154114]
[175.72560120 -257.72494507]
[174.83277893 -272.69836426]
[173.93997192 -287.67175293]
[164.82859802 -296.80114746]
[164.39323425 -309.29092407]
[172.32217407 -318.42648315]
[171.65238953 -333.41149902]
[157.11964417 -337.66336060]
[144.75634766 -346.40563965]
[135.90354919 -358.69006348]
[131.52156067 -373.18408203]
[132.08569336 -388.31552124]
[137.53475952 -402.44302368]
[147.27767944 -414.03414917]
[160.25762939 -421.83157349]
[175.06661987 -424.98950195]
[190.09829712 -423.16537476]
[203.72212219 -416.55703735]
[214.46031189 -405.88134766]
[221.14804077 -392.29632568]
[223.05989075 -377.27557373]
[219.98846436 -362.44839478]
[212.26693726 -349.42315674]
[200.73287964 -339.61273193]
[186.63742065 -334.08129883]
[187.30720520 -319.09625244]
[197.53486633 -304.83575439]
[188.91337585 -288.56457520]
[189.80619812 -273.59115601]
[190.69900513 -258.61776733]
[191.59182739 -243.64436340]
[197.69659424 -257.34588623]
[207.52345276 -268.67871094]
[220.22229004 -276.66241455]
[234.69451904 -280.60635376]
[249.68814087 -280.16931152]
[263.90609741 -275.38909912]
[276.11831665 -266.67929077]
[285.26840210 -254.79331970]
[290.56472778 -240.75946045]
[291.54913330 -225.79180908]
[288.13644409 -211.18518066]
[280.62188721 -198.20320129]
[269.65557861 -187.96896362]
[256.18615723 -181.36781311]
[241.37893677 -178.97080994]
[226.51481628 -180.98533630]
[212.87974548 -187.23710632]
[201.65325928 -197.18527222]
[193.80657959 -209.96923828]
[190.01890564 -224.47955322]
[186.69664001 -209.85208130]
[183.37438965 -195.22462463]
[180.05212402 -180.59716797]
[181.43020630 -178.15606689]
[181.92437744 -175.02198792]
[181.26585388 -171.52888489]
[179.31156921 -168.10174561]
[176.07214355 -165.21035767]
[171.88513184 -150.80657959]
[167.69812012 -136.40278625]
[163.51110840 -121.99900818]
[159.43144226 -107.56446075]
[155.45935059 -93.09992981]
[151.48725891 -78.63540649]
[147.51515198 -64.17088318]
[158.95156860 -73.87699127]
[173.56820679 -77.24655151]
[188.09967041 -73.52680206]
[199.29959106 -63.54874420]
[204.66589355 -49.54150009]
[202.99971008 -34.63432693]
[194.67329407 -22.15752029]
[181.54676819 -14.89843464]
[166.55264282 -14.47876740]
[153.04063416 -20.99227333]
[144.02937317 -32.98381805]
[141.53198242 -47.77447891]
[135.25462341 -34.15116501]
[128.97726440 -20.52784729]
[122.69990540 -6.90453196]
[118.62023926 7.53002119]
[116.83777618 22.42373848]
[123.00785828 35.98026276]
[113.68548584 48.76322174]
[111.90302277 63.65694046]
[110.12055969 78.55065918]
[108.33808899 93.44437408]
[107.33383179 108.41072083]
[114.86480713 122.32455444]
[106.93888092 134.93522644]
[106.71555328 149.93356323]
[106.49222565 164.93190002]
[106.26889038 179.93023682]
[113.79987335 193.84407043]
[105.87393951 206.45474243]
[105.65061188 221.45307922]
[105.42728424 236.45141602]
[108.30857086 242.40202332]
[107.82479095 248.06443787]
[104.96737671 251.89122009]
[104.29759216 266.87625122]
[111.41096497 281.00814819]
[103.11308289 293.37725830]
[102.44329834 308.36227417]
[101.77351379 323.34732056]
[112.49050140 329.78268433]
[119.41428375 340.10400391]
[121.28186798 352.31842041]
[117.79950714 364.09866333]
[109.68690491 373.22656250]
[98.52949524 378.01065063]
[97.41384888 392.96911621]
[96.29820251 407.92755127]
[95.18254852 422.88601685]
[94.06690216 437.84445190]
[92.95125580 452.80291748]
[91.83560181 467.76138306]
[98.52506256 482.09878540]
[89.86258698 494.21533203]
[88.74693298 509.17379761]
[100.67396545 519.09979248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 200]
[20 194]
[21 193]
[22 192]
[24 190]
[25 189]
[26 186]
[27 185]
[28 184]
[30 182]
[31 181]
[32 180]
[33 179]
[35 177]
[43 176]
[44 175]
[45 174]
[46 173]
[48 171]
[49 170]
[71 169]
[72 168]
[73 167]
[74 166]
[75 154]
[76 153]
[77 152]
[78 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 142]
[85 141]
[86 140]
[87 139]
[88 119]
[89 118]
[90 117]
[91 116]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
