%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[53.55445099 787.62347412]
[39.02082443 791.37048340]
[24.22462654 793.88824463]
[9.26963902 795.15905762]
[-5.73923588 795.17395020]
[-20.69672012 793.93292236]
[-35.49789810 791.44458008]
[-50.03894424 787.72650146]
[-64.21786499 782.80462646]
[-77.93520355 776.71356201]
[-91.09474182 769.49597168]
[-103.60417175 761.20257568]
[-115.37574768 751.89147949]
[-126.32690430 741.62799072]
[-136.38081360 730.48413086]
[-145.46696472 718.53808594]
[-153.52162170 705.87359619]
[-160.48828125 692.57952881]
[-166.31808472 678.74914551]
[-170.97013855 664.47943115]
[-174.41180420 649.87048340]
[-176.61894226 635.02478027]
[-177.57606506 620.04644775]
[-177.27647400 605.04052734]
[-175.72225952 590.11236572]
[-172.92433167 575.36657715]
[-168.90231323 560.90661621]
[-163.68441772 546.83392334]
[-157.30723572 533.24725342]
[-149.81550598 520.24188232]
[-141.26177979 507.90896606]
[-131.70605469 496.33508301]
[-121.21535492 485.60140991]
[-109.86327362 475.78320312]
[-97.72943115 466.94940186]
[-84.89894867 459.16189575]
[-71.46181488 452.47534180]
[-57.51229095 446.93661499]
[-43.14821625 442.58462524]
[-28.47035217 439.44982910]
[-13.58165169 437.55429077]
[1.41344821 436.91122437]
[16.40976715 437.52520752]
[31.30211449 439.39190674]
[34.40622330 424.71658325]
[37.51033401 410.04129028]
[40.61444473 395.36599731]
[43.71855545 380.69067383]
[46.82266617 366.01538086]
[49.92677689 351.34008789]
[41.61225510 339.03543091]
[44.55120850 324.10836792]
[57.51382828 315.47076416]
[60.61793900 300.79547119]
[63.72204971 286.12017822]
[58.78602600 272.06723022]
[69.21165466 260.16693115]
[72.31576538 245.49163818]
[75.41987610 230.81634521]
[78.52398682 216.14103699]
[80.96971130 201.34176636]
[82.75218201 186.44804382]
[84.53464508 171.55433655]
[86.31710815 156.66061401]
[78.55147552 140.92333984]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[84.13308716 74.87633514]
[85.92819977 59.76897812]
[97.62451172 50.61846542]
[99.18503571 35.69985962]
[98.96170807 20.70152473]
[96.95769501 5.83599567]
[94.95368195 -9.02953243]
[91.76179504 -13.15978241]
[90.59049988 -17.65214920]
[91.23937225 -21.67632866]
[93.20748138 -24.60188675]
[91.86924744 -39.54207230]
[90.53101349 -54.48225784]
[89.19277954 -69.42243958]
[87.85454559 -84.36262512]
[86.51631165 -99.30281067]
[85.17807770 -114.24299622]
[83.83984375 -129.18318176]
[82.50160980 -144.12336731]
[73.56397247 -157.17822266]
[80.13494873 -170.54502869]
[65.23297119 -172.82418823]
[51.30972290 -178.60403442]
[39.17469025 -187.54855347]
[29.53337860 -199.13771057]
[22.94632721 -212.69772339]
[19.79649734 -227.44024658]
[20.26701355 -242.50816345]
[24.33052444 -257.02545166]
[31.75078011 -270.14807129]
[42.09637451 -281.11309814]
[54.76583481 -289.28305054]
[69.02256775 -294.18295288]
[84.03771210 -295.52789307]
[98.93830872 -293.23971558]
[112.85804749 -287.45141602]
[124.98765564 -278.49954224]
[134.62193298 -266.90454102]
[141.20075989 -253.34054565]
[144.34165955 -238.59611511]
[143.86199951 -223.52848816]
[139.78970337 -209.01367188]
[132.36148071 -195.89555359]
[122.00924683 -184.93678284]
[109.33483124 -176.77450562]
[95.07513428 -171.88325500]
[103.91704559 -159.89703369]
[97.44179535 -145.46159363]
[98.78002930 -130.52140808]
[100.11826324 -115.58123016]
[101.45649719 -100.64104462]
[102.79473114 -85.70085907]
[104.13296509 -70.76067352]
[105.47119904 -55.82049179]
[106.80943298 -40.88030624]
[108.14766693 -25.94012070]
[109.81920624 -11.03354645]
[111.82321930 3.83198190]
[113.82723236 18.69750977]
[119.26637268 4.71839190]
[129.10650635 -6.60290432]
[142.19163513 -13.93636322]
[156.98451233 -16.42045784]
[171.74729919 -13.76335907]
[184.74566650 -6.27722025]
[194.45259094 5.15849447]
[199.72772217 19.20032883]
[199.95130920 34.19866180]
[195.09712219 48.39150620]
[185.73539734 60.11149597]
[172.96595764 67.98178101]
[158.28894043 71.07777405]
[143.42858887 69.03575134]
[130.13067627 62.09561539]
[119.95742798 51.07267761]
[114.10363770 37.26038361]
[112.54311371 52.17898941]
[122.09262848 63.55186462]
[120.72255707 78.70368195]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[112.13009644 138.32896423]
[110.52320099 150.72257996]
[101.21083069 158.44308472]
[99.42835999 173.33679199]
[97.64589691 188.23051453]
[95.86343384 203.12423706]
[108.29393005 194.72883606]
[123.04566956 197.44659424]
[131.66818237 209.72064209]
[129.22210693 224.51985168]
[117.10865021 233.36656189]
[102.26696777 231.19297791]
[93.19928741 219.24514771]
[90.09517670 233.92045593]
[86.99106598 248.59574890]
[83.88695526 263.27105713]
[88.60095978 278.37365723]
[78.39735413 289.22427368]
[75.29324341 303.89956665]
[72.18913269 318.57489014]
[80.54396057 331.72152710]
[77.18689728 346.56015015]
[64.60208130 354.44418335]
[61.49796677 369.11950684]
[58.39385605 383.79479980]
[55.28974915 398.47009277]
[52.18563843 413.14541626]
[49.08152771 427.82070923]
[45.97741699 442.49600220]
[60.35011673 446.81942749]
[74.31063080 452.33038330]
[87.76103210 458.99020386]
[100.60697174 466.75219727]
[112.75835419 475.56188965]
[124.12993622 485.35748291]
[134.64195251 496.07025146]
[144.22067261 507.62512207]
[152.79891968 519.94097900]
[160.31648254 532.93145752]
[166.72067261 546.50543213]
[171.96655273 560.56768799]
[176.01731873 575.01959229]
[178.84455872 589.75982666]
[180.42845154 604.68487549]
[180.75788879 619.69012451]
[179.83053589 634.67034912]
[177.65292358 649.52044678]
[174.24032593 664.13616943]
[169.61665344 678.41516113]
[163.81437683 692.25708008]
[156.87416077 705.56500244]
[148.84469604 718.24548340]
[139.78231812 730.20959473]
[129.75059509 741.37341309]
[118.81987000 751.65863037]
[107.06682587 760.99310303]
[94.57391357 769.31140137]
[81.42875671 776.55511475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[53 172]
[54 171]
[55 170]
[57 168]
[58 167]
[59 166]
[60 165]
[61 158]
[62 157]
[63 156]
[64 155]
[66 152]
[67 151]
[69 149]
[72 146]
[73 145]
[74 128]
[75 127]
[76 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
