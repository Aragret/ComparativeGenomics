%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[-93.30596161 295.88021851]
[-87.48346710 309.71865845]
[-83.11474609 324.08242798]
[-80.24609375 338.81927490]
[-78.90792847 353.77301025]
[-79.11443329 368.78503418]
[-80.86341858 383.69628906]
[-84.13634491 398.34866333]
[-88.89852142 412.58682251]
[-95.09945679 426.25988770]
[-102.67342377 439.22286987]
[-111.54013824 451.33837891]
[-121.60559845 462.47796631]
[-132.76310730 472.52355957]
[-144.89439392 481.36865234]
[-157.87086487 488.91952515]
[-171.55494690 495.09606934]
[-185.80158997 499.83288574]
[-200.45976257 503.07968140]
[-215.37409973 504.80209351]
[-230.38648987 504.98184204]
[-245.33778381 503.61703491]
[-260.06948853 500.72210693]
[-274.42547607 496.32778931]
[-288.25354004 490.48065186]
[-301.40707397 483.24267578]
[-313.74667358 474.69058228]
[-325.14151001 464.91500854]
[-335.47079468 454.01962280]
[-344.62506104 442.11987305]
[-352.50723267 429.34194946]
[-359.03378296 415.82128906]
[-364.13549805 401.70123291]
[-367.75833130 387.13140869]
[-369.86383057 372.26632690]
[-370.42971802 357.26354980]
[-369.44998169 342.28207397]
[-366.93499756 327.48077393]
[-362.91146851 313.01651001]
[-357.42196655 299.04260254]
[-350.52474976 285.70721436]
[-342.29293823 273.15170288]
[-332.81372070 261.50915527]
[-322.18768311 250.90298462]
[-310.52737427 241.44563293]
[-297.95645142 233.23735046]
[-284.60815430 226.36515808]
[-270.62399292 220.90188599]
[-256.15222168 216.90544128]
[-241.34620667 214.41822815]
[-226.36294556 213.46656799]
[-211.36123657 214.06057739]
[-196.50012207 216.19395447]
[-181.93713379 219.84408569]
[-167.82664490 224.97225952]
[-154.31823730 231.52413940]
[-141.55511475 239.43025208]
[-129.67257690 248.60681152]
[-118.79655457 258.95651245]
[-107.39409637 249.21054077]
[-95.99163055 239.46458435]
[-95.63853455 236.68367004]
[-94.16260529 233.87506104]
[-91.54778290 231.46714783]
[-87.93321991 229.88616943]
[-83.60808563 229.50254822]
[-71.64575195 220.45256042]
[-59.68341064 211.40255737]
[-47.72107315 202.35255432]
[-42.23938370 188.50335693]
[-26.56572723 186.34765625]
[-14.60338974 177.29766846]
[-2.64105320 168.24766541]
[9.32128334 159.19766235]
[14.80297279 145.34846497]
[30.47663116 143.19276428]
[42.43896866 134.14277649]
[54.40130615 125.09277344]
[66.36363983 116.04277039]
[78.32598114 106.99277496]
[77.62691498 95.74475098]
[82.40643311 85.53872681]
[91.49415588 78.87388611]
[102.66473389 77.38227844]
[113.18279266 81.42916107]
[125.40927124 72.73933411]
[137.63575745 64.04950714]
[144.90977478 47.13294220]
[162.43196106 46.16342163]
[174.52770996 37.29252625]
[186.62345886 28.42163086]
[198.71920776 19.55073547]
[210.68154907 10.50073624]
[216.80233765 -4.08852720]
[231.59626770 -5.81735277]
[237.71704102 -20.40661621]
[252.51097107 -22.13544273]
[264.33724976 -31.36253929]
[276.16351318 -40.58963776]
[287.98977661 -49.81673813]
[279.80804443 -62.40008163]
[272.73834229 -75.64019012]
[266.83297729 -89.43904114]
[262.13571167 -103.69446564]
[258.68130493 -118.30091858]
[256.49533081 -133.15026855]
[255.59400940 -148.13255310]
[255.98396301 -163.13687134]
[257.66232300 -178.05210876]
[260.61666870 -192.76786804]
[264.82513428 -207.17515564]
[270.25656128 -221.16734314]
[276.87069702 -234.64080811]
[284.61862183 -247.49581909]
[293.44296265 -259.63717651]
[303.27835083 -270.97500610]
[314.05200195 -281.42535400]
[325.68414307 -290.91085815]
[338.08865356 -299.36129761]
[351.17367554 -306.71408081]
[364.84237671 -312.91476440]
[378.99349976 -317.91748047]
[393.52227783 -321.68518066]
[408.32119751 -324.18994141]
[423.28063965 -325.41323853]
[438.28985596 -325.34600830]
[453.23776245 -323.98873901]
[468.01361084 -321.35150146]
[482.50808716 -317.45379639]
[496.61383057 -312.32452393]
[510.22640991 -306.00161743]
[523.24505615 -298.53189087]
[535.57336426 -289.97067261]
[547.12005615 -280.38134766]
[557.79962158 -269.83489990]
[567.53308105 -258.40942383]
[576.24829102 -246.18949890]
[583.88073730 -233.26559448]
[590.37390137 -219.73341370]
[595.67974854 -205.69313049]
[599.75897217 -191.24870300]
[602.58135986 -176.50708008]
[604.12603760 -161.57739258]
[604.38159180 -146.57019043]
[603.34606934 -131.59658813]
[601.02716064 -116.76741791]
[597.44201660 -102.19249725]
[592.61724854 -87.97972107]
[586.58850098 -74.23432922]
[579.40045166 -61.05808640]
[571.10632324 -48.54854202]
[561.76751709 -36.79832077]
[551.45312500 -25.89441109]
[540.23956299 -15.91754723]
[528.20989990 -6.94159555]
[515.45306396 0.96698850]
[502.06365967 7.74965143]
[488.14071655 13.35617542]
[473.78735352 17.74505234]
[459.10980225 20.88378716]
[444.21679688 22.74913979]
[429.21856689 23.32730293]
[414.22613525 22.61399269]
[399.35055542 20.61449242]
[384.70190430 17.34360504]
[370.38867188 12.82554817]
[356.51681519 7.09377193]
[343.18905640 0.19071294]
[330.50405884 -7.83251953]
[318.55572510 -16.91652298]
[307.43255615 -26.99404335]
[297.21688843 -37.99046707]
[285.39062500 -28.76336861]
[273.56433105 -19.53627014]
[261.73806763 -10.30917168]
[256.46319580 3.62010717]
[240.82336426 6.00891685]
[235.54847717 19.93819618]
[219.90864563 22.32700539]
[218.44479370 26.87301445]
[214.10963440 30.54770660]
[207.59010315 31.64648819]
[195.49435425 40.51738358]
[183.39860535 49.38827896]
[171.30285645 58.25917435]
[169.15461731 70.16344452]
[159.15005493 77.65292358]
[146.32559204 76.27599335]
[134.09910583 84.96582031]
[121.87261200 93.65564728]
[119.63544464 111.53738403]
[105.10350037 122.19496155]
[87.37597656 118.95510864]
[75.41364288 128.00511169]
[63.45130539 137.05511475]
[51.48896790 146.10510254]
[39.52663040 155.15510559]
[33.18931580 169.65162659]
[18.37128258 171.16000366]
[6.40894651 180.21000671]
[-5.55339003 189.25999451]
[-17.51572609 198.30999756]
[-23.85304260 212.80651855]
[-38.67107391 214.31489563]
[-50.63341141 223.36488342]
[-62.59574890 232.41488647]
[-74.55808258 241.46488953]
[-86.24566650 250.86703491]
[-97.64813232 260.61300659]
[-109.05059052 270.35897827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 210]
[60 209]
[61 208]
[66 207]
[67 206]
[68 205]
[69 204]
[71 202]
[72 201]
[73 200]
[74 199]
[76 197]
[77 196]
[78 195]
[79 194]
[80 193]
[85 190]
[86 189]
[87 188]
[89 185]
[90 184]
[91 183]
[92 182]
[93 179]
[95 177]
[97 175]
[98 174]
[99 173]
[100 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
