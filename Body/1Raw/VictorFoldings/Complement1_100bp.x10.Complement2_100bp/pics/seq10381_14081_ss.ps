%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[228.46926880 338.20413208]
[236.23149109 325.34933472]
[245.40846252 313.46319580]
[255.88056946 302.70062256]
[246.39166260 291.08334351]
[236.90277100 279.46609497]
[227.41387939 267.84884644]
[217.92497253 256.23156738]
[208.43608093 244.61430359]
[198.94717407 232.99703979]
[189.45828247 221.37977600]
[179.96937561 209.76251221]
[165.92578125 204.80000305]
[163.18829346 189.21742249]
[153.69940186 177.60015869]
[144.21049500 165.98289490]
[134.72160339 154.36563110]
[125.23270416 142.74836731]
[111.18910217 137.78587341]
[108.45162201 122.20328522]
[98.96272278 110.58602142]
[88.63605499 99.70668793]
[73.07020569 100.29161072]
[61.94950485 89.90967560]
[61.48780060 75.06641388]
[50.38056564 64.98527527]
[32.29847717 61.50395966]
[27.59789276 44.59622574]
[16.34179688 34.68157578]
[5.08570051 24.76692390]
[-10.38421249 21.45145035]
[-14.82066250 7.23289967]
[-26.07675934 -2.68175125]
[-37.33285522 -12.59640217]
[-48.58895111 -22.51105309]
[-59.84504700 -32.42570496]
[-71.10114288 -42.34035492]
[-82.35723877 -52.25500870]
[-93.14038086 -41.81642532]
[-104.71878052 -32.26757431]
[-117.01924896 -23.66881752]
[-129.96400452 -16.07452583]
[-143.47122192 -9.53271008]
[-157.45549011 -4.08473301]
[-171.82838440 0.23496298]
[-186.49905396 3.39906621]
[-201.37474060 5.38757181]
[-216.36138916 6.18790817]
[-231.36424255 5.79501486]
[-246.28845215 4.21137619]
[-261.03967285 1.44700444]
[-275.52462769 -2.48062325]
[-289.65173340 -7.54667425]
[-303.33169556 -13.71911907]
[-316.47799683 -20.95893288]
[-329.00750732 -29.22034454]
[-340.84106445 -38.45111847]
[-351.90380859 -48.59289551]
[-362.12582397 -59.58155823]
[-371.44244385 -71.34762573]
[-379.79483032 -83.81671143]
[-387.13009644 -96.90998840]
[-393.40191650 -110.54466248]
[-398.57061768 -124.63452911]
[-402.60354614 -139.09051514]
[-405.47518921 -153.82122803]
[-407.16738892 -168.73352051]
[-407.66943359 -183.73312378]
[-406.97814941 -198.72520447]
[-405.09796143 -213.61495972]
[-402.04067993 -228.30825806]
[-397.82568359 -242.71221924]
[-392.47961426 -256.73574829]
[-386.03625488 -270.29019165]
[-378.53634644 -283.28988647]
[-370.02731323 -295.65258789]
[-360.56295776 -307.30017090]
[-350.20312500 -318.15899658]
[-339.01330566 -328.16036987]
[-327.06420898 -337.24108887]
[-314.43145752 -345.34375000]
[-301.19485474 -352.41711426]
[-287.43811035 -358.41647339]
[-273.24819946 -363.30386353]
[-258.71484375 -367.04843140]
[-243.92993164 -369.62646484]
[-228.98692322 -371.02166748]
[-213.98030090 -371.22521973]
[-199.00494385 -370.23587036]
[-184.15553284 -368.05981445]
[-169.52595520 -364.71087646]
[-155.20869446 -360.21017456]
[-141.29429626 -354.58618164]
[-127.87069702 -347.87445068]
[-115.02278900 -340.11743164]
[-102.83179474 -331.36416626]
[-91.37479401 -321.66998291]
[-80.72422028 -311.09619141]
[-70.94741058 -299.70959473]
[-62.10617447 -287.58224487]
[-54.25642014 -274.79080200]
[-47.44776917 -261.41610718]
[-41.72327042 -247.54273987]
[-37.11911392 -233.25840759]
[-33.66441727 -218.65344238]
[-31.38101196 -203.82015991]
[-30.28334045 -188.85235596]
[-30.37834167 -173.84466553]
[-31.66541481 -158.89195251]
[-34.13642502 -144.08877563]
[-37.77574158 -129.52870178]
[-42.56036758 -115.30381775]
[-48.46004105 -101.50403595]
[-55.43746567 -88.21661377]
[-63.44853210 -75.52555847]
[-72.44258881 -63.51110458]
[-61.18648911 -53.59645081]
[-49.93039322 -43.68180084]
[-38.67429733 -33.76715088]
[-27.41820335 -23.85249901]
[-16.16210747 -13.93784714]
[-4.90601158 -4.02319574]
[9.75879002 -1.41688466]
[15.00035191 13.51082802]
[26.25644684 23.42547989]
[37.51254272 33.34012985]
[49.60065842 32.88838196]
[59.05943680 41.05632019]
[60.46170425 53.87803650]
[71.56893921 63.95917892]
[86.38735962 62.98444748]
[97.79528046 73.04992676]
[98.71719360 88.59945679]
[95.69626617 73.90680695]
[100.33248901 59.64127350]
[111.41397858 49.53183365]
[126.04404449 46.22107315]
[140.39842224 50.57441711]
[150.72492981 61.45390701]
[154.32423401 76.01567078]
[150.25547791 90.45330811]
[139.58222961 100.99284363]
[125.09445190 104.87927246]
[110.57998657 101.09712219]
[120.06888580 112.71438599]
[134.79119873 118.50784302]
[136.84997559 133.25947571]
[146.33886719 144.87673950]
[155.82775879 156.49400330]
[165.31666565 168.11126709]
[174.80555725 179.72853088]
[189.52787781 185.52198792]
[191.58663940 200.27362061]
[201.07554626 211.89088440]
[210.56443787 223.50814819]
[220.05334473 235.12541199]
[229.54223633 246.74267578]
[239.03112793 258.35992432]
[248.52003479 269.97720337]
[258.00894165 281.59445190]
[267.49783325 293.21173096]
[280.13449097 285.09921265]
[293.61352539 278.48010254]
[307.75927734 273.44064331]
[322.38726807 270.04656982]
[337.30679321 268.34210205]
[352.32336426 268.34948730]
[367.24124146 270.06863403]
[381.86587524 273.47711182]
[396.00662231 278.53048706]
[409.47915649 285.16287231]
[422.10781860 293.28781128]
[433.72799683 302.79937744]
[444.18814087 313.57354736]
[453.35189819 325.46987915]
[461.09982300 338.33331299]
[467.33090210 351.99606323]
[471.96389771 366.28009033]
[474.93841553 380.99914551]
[476.21563721 395.96130371]
[475.77896118 410.97152710]
[473.63406372 425.83413696]
[469.80886841 440.35537720]
[464.35333252 454.34588623]
[457.33850098 467.62329102]
[448.85583496 480.01452637]
[439.01596069 491.35800171]
[427.94714355 501.50585938]
[415.79370117 510.32580566]
[402.71405029 517.70281982]
[388.87872314 523.54077148]
[374.46807861 527.76348877]
[359.67001343 530.31597900]
[344.67745972 531.16497803]
[329.68585205 530.29937744]
[314.89062500 527.73040771]
[300.48471069 523.49169922]
[286.65585327 517.63836670]
[273.58441162 510.24685669]
[261.44076538 501.41342163]
[250.38320923 491.25329590]
[240.55593872 479.89886475]
[232.08705139 467.49822998]
[225.08697510 454.21304321]
[219.64694214 440.21646118]
[215.83790588 425.69100952]
[213.70950317 410.82601929]
[213.28948975 395.81533813]
[214.58334351 380.85458374]
[217.57417297 366.13885498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[10 155]
[11 154]
[12 153]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[20 145]
[21 144]
[22 133]
[25 130]
[26 129]
[28 126]
[29 125]
[30 124]
[32 122]
[33 121]
[34 120]
[35 119]
[36 118]
[37 117]
[38 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
