%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[106.79792786 749.32086182]
[92.29184723 745.48211670]
[78.06788635 740.70288086]
[64.18696594 735.00354004]
[50.70851517 728.40856934]
[37.69026184 720.94616699]
[25.18794250 712.64831543]
[13.25510216 703.55053711]
[1.94283640 693.69183350]
[-8.70041370 683.11431885]
[-18.62907219 671.86334229]
[-27.80062103 659.98712158]
[-36.17578888 647.53643799]
[-43.71870804 634.56469727]
[-50.39707947 621.12738037]
[-56.18230820 607.28204346]
[-61.04961395 593.08795166]
[-64.97816467 578.60595703]
[-67.95112610 563.89801025]
[-69.95577240 549.02709961]
[-70.98352051 534.05694580]
[-71.02997589 519.05163574]
[-70.09492493 504.07534790]
[-68.18238068 489.19235229]
[-65.30052948 474.46627808]
[-61.46171188 459.96020508]
[-56.68237305 445.73626709]
[-50.98297119 431.85537720]
[-44.38791656 418.37698364]
[-36.92544937 405.35876465]
[-28.62752533 392.85650635]
[-19.52967834 380.92370605]
[-9.67086411 369.61151123]
[0.90669709 358.96832275]
[12.15771103 349.03973389]
[24.03400040 339.86825562]
[36.48470688 331.49316406]
[49.45651245 323.95031738]
[62.89387131 317.27200317]
[76.73924255 311.48687744]
[90.93334198 306.61965942]
[105.41538239 302.69119263]
[120.12334442 299.71829224]
[118.11933136 284.85278320]
[116.11531830 269.98724365]
[106.74700928 258.40777588]
[112.57122803 243.69761658]
[110.56721497 228.83209229]
[108.56320190 213.96656799]
[106.55918884 199.10102844]
[104.55517578 184.23550415]
[102.55116272 169.36997986]
[91.09202576 156.07881165]
[98.22749329 139.10333252]
[96.00238037 124.26929474]
[93.77725983 109.43524933]
[85.68637848 122.06607056]
[71.75891876 127.63616180]
[57.18948746 124.06802368]
[47.41211700 112.69247437]
[46.07352829 97.75231934]
[53.67297745 84.81987000]
[67.37606049 78.71860504]
[82.07186890 81.72414398]
[92.27972412 92.71655273]
[91.83311462 77.72320557]
[91.38651276 62.72985458]
[90.93990326 47.73650742]
[90.49330139 32.74315643]
[90.04669189 17.74980545]
[87.63455200 14.13932705]
[86.60076141 10.33199215]
[86.83795166 6.78528309]
[88.10121155 3.87482071]
[90.04669189 1.85659409]
[90.49330139 -13.13675594]
[90.93990326 -28.13010597]
[91.38651276 -43.12345505]
[80.82826233 -54.57601547]
[81.49476624 -69.77503967]
[92.47810364 -79.77014160]
[92.92470551 -94.76348877]
[83.82258606 -110.77076721]
[93.62111664 -125.32946014]
[93.84444427 -140.32780457]
[94.06777191 -155.32614136]
[94.29109955 -170.32447815]
[94.51442719 -185.32281494]
[79.73276520 -188.08151245]
[65.63000488 -193.29879761]
[52.61191177 -200.82456970]
[41.05304337 -210.44229126]
[31.28596687 -221.87524414]
[23.59170532 -234.79446411]
[18.19163704 -248.82826233]
[15.24113274 -263.57284546]
[14.82508278 -278.60397339]
[16.95545959 -293.48916626]
[21.57096672 -307.80020142]
[28.53880882 -321.12524414]
[37.65850449 -333.08096313]
[48.66766357 -343.32333374]
[61.24953079 -351.55770874]
[75.04209900 -357.54711914]
[89.64852905 -361.11926270]
[104.64856720 -362.17135620]
[119.61062622 -360.67312622]
[134.10423279 -356.66766357]
[147.71235657 -350.27026367]
[160.04347229 -341.66494751]
[170.74279785 -331.09930420]
[179.50248718 -318.87738037]
[186.07049561 -305.35076904]
[190.25787354 -290.90866089]
[191.94410706 -275.96664429]
[191.08071899 -260.95455933]
[187.69252014 -246.30436707]
[181.87699890 -232.43757629]
[173.80149841 -219.75315857]
[163.69834900 -208.61608887]
[151.85826111 -199.34678650]
[138.62185669 -192.21194458]
[124.37001801 -187.41685486]
[109.51277161 -185.09948730]
[109.28944397 -170.10115051]
[109.06610870 -155.10281372]
[108.84278107 -140.10447693]
[108.61945343 -125.10613251]
[116.81687927 -116.21070099]
[116.75357056 -103.71350861]
[107.91806030 -94.31688690]
[107.47145081 -79.32353210]
[117.84039307 -68.69242096]
[117.60105896 -53.48066711]
[106.37985992 -42.67684937]
[105.93325043 -27.68350029]
[105.48664856 -12.69015026]
[105.04003906 2.30320001]
[105.04003906 17.30319977]
[105.48664856 32.29655075]
[105.93325043 47.28990173]
[106.37985992 62.28324890]
[106.82646942 77.27659607]
[107.27307129 92.26995087]
[108.61130524 107.21013641]
[110.83642578 122.04418182]
[113.06153870 136.87821960]
[122.95105743 145.15832520]
[124.49897766 157.55944824]
[117.41668701 167.36596680]
[119.42070007 182.23149109]
[121.42471313 197.09701538]
[123.42872620 211.96255493]
[125.43273926 226.82807922]
[127.43675995 241.69360352]
[136.94841003 254.33634949]
[130.98085022 267.98324585]
[132.98486328 282.84875488]
[134.98887634 297.71429443]
[149.95903015 296.68627930]
[164.96435547 296.63955688]
[179.94062805 297.57434082]
[194.82368469 299.48663330]
[209.54980469 302.36822510]
[224.05593872 306.20678711]
[238.27995300 310.98587036]
[252.16093445 316.68502808]
[265.63946533 323.27984619]
[278.65780640 330.74206543]
[291.16021729 339.03976440]
[303.09317017 348.13742065]
[314.40554810 357.99603271]
[325.04891968 368.57339478]
[334.97772217 379.82424927]
[344.14941406 391.70037842]
[352.52471924 404.15090942]
[360.06777954 417.12258911]
[366.74633789 430.55984497]
[372.53170776 444.40512085]
[377.39920044 458.59912109]
[381.32791138 473.08108521]
[384.30105591 487.78900146]
[386.30587769 502.65988159]
[387.33380127 517.63000488]
[387.38043213 532.63537598]
[386.44555664 547.61163330]
[384.53317261 562.49468994]
[381.65148926 577.22076416]
[377.81286621 591.72686768]
[373.03369141 605.95086670]
[367.33444214 619.83184814]
[360.73956299 633.31030273]
[353.27725220 646.32861328]
[344.97946167 658.83099365]
[335.88174438 670.76385498]
[326.02307129 682.07617188]
[315.44564819 692.71948242]
[304.19473267 702.64825439]
[292.31857300 711.81982422]
[279.86795044 720.19506836]
[266.89624023 727.73809814]
[253.45895386 734.41656494]
[239.61364746 740.20184326]
[225.41961670 745.06921387]
[210.93762207 748.99786377]
[196.22969055 751.97094727]
[181.35879517 753.97564697]
[166.38864136 755.00347900]
[151.38330078 755.05004883]
[136.40705872 754.11505127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 159]
[44 158]
[45 157]
[47 155]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[54 147]
[55 146]
[56 145]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[75 138]
[76 137]
[77 136]
[78 135]
[81 132]
[82 131]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
