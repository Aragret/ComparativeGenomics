%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[84.52106476 611.19750977]
[69.72650146 613.73443604]
[54.76252747 614.91552734]
[39.75315857 614.73089600]
[24.82276535 613.18218994]
[10.09506416 610.28216553]
[-4.30790091 606.05487061]
[-18.26678085 600.53540039]
[-31.66590500 593.76940918]
[-44.39424515 585.81298828]
[-56.34632111 576.73205566]
[-67.42309570 566.60186768]
[-77.53278351 555.50640869]
[-86.59161377 543.53759766]
[-94.52451324 530.79455566]
[-101.26574707 517.38299561]
[-106.75945282 503.41394043]
[-110.96012115 489.00317383]
[-113.83292389 474.27014160]
[-115.35406494 459.33691406]
[-115.51094055 444.32723999]
[-114.30224609 429.36547852]
[-111.73799896 414.57562256]
[-107.83945465 400.08023071]
[-102.63890839 385.99938965]
[-96.17945862 372.44982910]
[-88.51463318 359.54379272]
[-79.70794678 347.38824463]
[-69.83236694 336.08389282]
[-58.96974182 325.72442627]
[-47.21007538 316.39569092]
[-34.65081406 308.17495728]
[-21.39603043 301.13040161]
[-7.55556107 295.32034302]
[6.75590420 290.79296875]
[21.41977501 287.58575439]
[36.31454086 285.72531128]
[51.31677246 285.22705078]
[66.30215454 286.09509277]
[68.52727509 271.26104736]
[70.75238800 256.42700195]
[72.97750854 241.59295654]
[67.21379089 227.85874939]
[76.91262054 215.35900879]
[79.13773346 200.52496338]
[81.36285400 185.69091797]
[83.58796692 170.85688782]
[85.81308746 156.02284241]
[87.81710052 141.15730286]
[89.59956360 126.26358795]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.15830994 42.29551697]
[99.05112457 27.32211113]
[99.94393921 12.34870529]
[97.93992615 -2.51682305]
[93.11392975 -16.71927834]
[88.28793335 -30.92173386]
[83.46193695 -45.12419128]
[78.42324066 -30.99579430]
[66.61135101 -21.75028992]
[51.68632126 -20.25249290]
[38.27282333 -26.96651459]
[30.52717972 -39.81194305]
[30.84946251 -54.80847931]
[39.13980865 -67.30928802]
[52.82936096 -73.44084930]
[67.67626953 -71.30324554]
[79.08019257 -61.55860901]
[76.19492340 -76.27850342]
[73.30964661 -90.99839020]
[70.42437744 -105.71828461]
[67.53910065 -120.43817139]
[64.65383148 -135.15806580]
[49.65091324 -134.34648132]
[34.68106079 -135.63088989]
[20.03566742 -138.98626709]
[5.99980640 -144.34730530]
[-7.15330887 -151.60964966]
[-19.16765022 -160.63194275]
[-29.80935287 -171.23855591]
[-38.87127304 -183.22303772]
[-46.17702103 -196.35209656]
[-51.58438492 -210.37017822]
[-54.98810959 -225.00440979]
[-56.32194138 -239.96994019]
[-55.55991745 -254.97544861]
[-52.71686935 -269.72885132]
[-47.84813690 -283.94299316]
[-41.04849243 -297.34115601]
[-32.45029449 -309.66256714]
[-22.22090721 -320.66738892]
[-10.55945110 -330.14138794]
[2.30708241 -337.90014648]
[16.12824059 -343.79266357]
[30.63499260 -347.70422363]
[45.54496002 -349.55868530]
[60.56791306 -349.31994629]
[75.41143036 -346.99267578]
[89.78657532 -342.62216187]
[103.41352844 -336.29348755]
[116.02703857 -328.12982178]
[127.38159180 -318.29010010]
[137.25614929 -306.96582031]
[145.45851135 -294.37744141]
[151.82902527 -280.76998901]
[156.24366760 -266.40832520]
[158.61650085 -251.57203674]
[158.90136719 -236.54988098]
[157.09271240 -221.63429260]
[153.22572327 -207.11558533]
[147.37568665 -193.27639771]
[139.65647888 -180.38609314]
[130.21833801 -168.69560242]
[119.24500275 -158.43246460]
[106.95005798 -149.79646301]
[93.57283020 -142.95570374]
[79.37371826 -138.04333496]
[82.25899506 -123.32344818]
[85.14426422 -108.60355377]
[88.02954102 -93.88366699]
[90.91481018 -79.16377258]
[93.80008698 -64.44387817]
[97.66439056 -49.95018768]
[102.49038696 -35.74773026]
[107.31638336 -21.54527664]
[112.14237976 -7.34282064]
[114.08994293 -22.21585083]
[119.25518036 -36.29847336]
[127.38609314 -48.90356445]
[138.08593750 -59.41609955]
[150.83264160 -67.32314301]
[165.00428772 -72.23889160]
[179.90939331 -73.92350006]
[194.82070923 -72.29476929]
[209.01066589 -67.43216705]
[221.78692627 -59.57295990]
[232.52609253 -49.10060501]
[240.70419312 -36.52607346]
[245.92218018 -22.46291161]
[247.92547607 -7.59728575]
[246.61631775 7.34547567]
[242.05859375 21.63628197]
[234.47467041 34.57785034]
[224.23460388 45.53873825]
[211.83802795 53.98413849]
[197.88978577 59.50197601]
[183.07044983 61.82302856]
[168.10308838 60.83404541]
[153.71798706 56.58328247]
[140.61703491 49.27814102]
[129.43945312 39.27505875]
[120.73062897 27.06210327]
[114.91734314 13.24152088]
[114.02452850 28.21492577]
[113.13171387 43.18833160]
[115.18605804 46.05399323]
[115.95445251 50.05707169]
[114.91743469 54.58232117]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[108.40934753 121.77818298]
[104.49328613 128.04605103]
[102.71081543 142.93977356]
[104.95739746 149.15785217]
[103.88715363 154.73921204]
[100.64713287 158.24795532]
[98.42201233 173.08200073]
[96.19689941 187.91604614]
[93.97177887 202.75009155]
[91.74666595 217.58412170]
[97.35122681 232.37937927]
[87.81155396 243.81808472]
[85.58643341 258.65213013]
[83.36132050 273.48617554]
[81.13619995 288.32022095]
[95.71675873 291.88708496]
[109.91254425 296.76507568]
[123.60593414 302.91375732]
[136.68345642 310.28219604]
[149.03674316 318.80929565]
[160.56341553 328.42443848]
[171.16798401 339.04794312]
[180.76254272 350.59173584]
[189.26760864 362.96020508]
[196.61271667 376.05084229]
[202.73696899 389.75518799]
[207.58963013 403.95965576]
[211.13050842 418.54653931]
[213.33023071 433.39498901]
[214.17057800 448.38195801]
[213.64460754 463.38323975]
[211.75665283 478.27453613]
[208.52236938 492.93246460]
[203.96856689 507.23553467]
[198.13296509 521.06524658]
[191.06391907 534.30700684]
[182.82002258 546.85107422]
[173.46957397 558.59350586]
[163.09005737 569.43695068]
[151.76748657 579.29162598]
[139.59568787 588.07586670]
[126.67552185 595.71679688]
[113.11404419 602.15124512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 182]
[40 181]
[41 180]
[42 179]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 170]
[50 169]
[51 167]
[53 165]
[54 164]
[55 163]
[56 159]
[57 158]
[58 157]
[59 130]
[60 129]
[61 128]
[62 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
