%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[122.73165131 518.11602783]
[107.90738678 520.92736816]
[92.86068726 519.80511475]
[78.61747742 514.82586670]
[66.14886475 506.32901001]
[56.30498505 494.89395142]
[49.75701904 481.30032349]
[46.95140839 466.47497559]
[48.07944870 451.42871094]
[53.06422424 437.18743896]
[61.56587219 424.72210693]
[73.00473022 414.88262939]
[86.60087585 408.33993530]
[101.42730713 405.54003906]
[102.54295349 390.58157349]
[95.77369690 377.31408691]
[104.51597595 364.12762451]
[97.74671936 350.86010742]
[106.48899841 337.67364502]
[107.60464478 322.71517944]
[108.72029114 307.75674438]
[109.83594513 292.79827881]
[110.95159149 277.83984375]
[112.06723785 262.88137817]
[112.73702240 247.89633179]
[112.96035004 232.89799500]
[113.18367767 217.89965820]
[113.40700531 202.90132141]
[111.51371765 188.02128601]
[107.54161835 173.55676270]
[103.56952667 159.09223938]
[99.59742737 144.62771606]
[93.72673035 158.43115234]
[81.38548279 166.95721436]
[66.39775848 167.56399536]
[53.40766907 160.06349182]
[46.44033432 146.77981567]
[47.65465164 131.82905579]
[56.67436218 119.84385681]
[70.70460510 114.53797913]
[85.39795685 117.55549622]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.15815735 70.70243835]
[84.73387909 67.02331543]
[84.60079956 63.47117615]
[85.55441284 60.44508362]
[87.27937317 58.23541260]
[78.53709412 45.04893494]
[85.30635834 31.78144264]
[76.56407928 18.59496689]
[83.33333588 5.32747269]
[82.21768188 -9.63098049]
[73.47540283 -22.81745529]
[80.24466705 -36.08494949]
[79.12901306 -51.04340363]
[64.24172211 -53.31814194]
[50.24068451 -58.84619141]
[37.82691193 -67.34732056]
[27.62116814 -78.39250946]
[20.13293266 -91.42564392]
[15.73497295 -105.79147339]
[14.64478302 -120.76856995]
[16.91382980 -135.60557556]
[22.42513847 -149.55883789]
[30.89931107 -161.92976379]
[41.90869141 -172.09974670]
[54.89895248 -179.56108093]
[69.21699524 -183.94235229]
[68.10134125 -198.90080261]
[66.98569489 -213.85925293]
[65.87004852 -228.81771851]
[64.75440216 -243.77616882]
[63.63874817 -258.73461914]
[62.52310181 -273.69308472]
[55.88587189 -260.24142456]
[44.65695190 -250.29598999]
[30.50207901 -245.33216858]
[15.52104664 -246.08628845]
[1.93620300 -252.44647217]
[-8.23722267 -263.46923828]
[-13.49006176 -277.51940918]
[-13.04308796 -292.51275635]
[-6.96260643 -306.22509766]
[3.84937859 -316.62225342]
[17.78897476 -322.16189575]
[32.78832626 -322.02224731]
[46.62236404 -316.22402954]
[57.23889542 -305.62738037]
[63.06263351 -291.80609131]
[65.06664276 -306.67160034]
[67.07066345 -321.53713989]
[69.07467651 -336.40267944]
[54.92872238 -341.57046509]
[42.22466660 -349.65878296]
[31.55669022 -360.28933716]
[23.42376137 -372.96487427]
[18.20626640 -387.09259033]
[16.14824104 -402.01165771]
[17.34594154 -417.02429199]
[21.74334717 -431.42834473]
[29.13478661 -444.55010986]
[39.17454529 -455.77584839]
[51.39304733 -464.58053589]
[65.21881104 -470.55233765]
[80.00518799 -473.41192627]
[95.06057739 -473.02557373]
[109.68082428 -469.41137695]
[123.18209839 -462.73831177]
[134.93293762 -453.31857300]
[144.38372803 -441.59268188]
[151.09243774 -428.10906982]
[154.74528503 -413.49844360]
[155.17141724 -398.44412231]
[152.35092163 -383.65023804]
[146.41569519 -369.80874634]
[137.64335632 -357.56701660]
[126.44419098 -347.49758911]
[113.34201050 -340.07150269]
[98.94963074 -335.63604736]
[83.94020081 -334.39865112]
[81.93618774 -319.53314209]
[79.93217468 -304.66760254]
[77.92816162 -289.80206299]
[77.48155212 -274.80871582]
[78.59720612 -259.85028076]
[79.71285248 -244.89181519]
[80.82849884 -229.93336487]
[81.94415283 -214.97491455]
[83.05979919 -200.01644897]
[84.17544556 -185.05799866]
[98.98500061 -182.84915161]
[112.93836212 -177.39736938]
[125.33456421 -168.97305298]
[135.55009460 -157.99606323]
[143.07026672 -145.01472473]
[147.51515198 -130.67846680]
[148.65875244 -115.70534515]
[146.44049072 -100.84606171]
[140.96844482 -86.84630585]
[132.51406860 -74.40938568]
[121.49871063 -64.16084290]
[108.47261810 -56.61702347]
[94.08747101 -52.15905380]
[95.20311737 -37.20059967]
[103.86560059 -25.08405304]
[97.17613983 -10.74662971]
[98.29178619 4.21182394]
[106.95426941 16.32837105]
[100.26480865 30.66579247]
[108.92729187 42.78234100]
[102.23783112 57.11976242]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[114.06195068 140.65562439]
[118.03404999 155.12014771]
[122.00614166 169.58467102]
[125.97824097 184.04919434]
[129.11546326 169.38093567]
[136.38438416 156.25985718]
[147.15617371 145.82106018]
[160.49897766 138.96760559]
[175.25848389 136.29238892]
[190.15786743 138.02685547]
[203.90817261 144.02091980]
[215.31987000 153.75607300]
[223.40573120 166.39012146]
[227.46624756 180.83006287]
[227.15013123 195.82673645]
[222.48474121 210.08276367]
[213.87368774 222.36485291]
[202.06188965 231.61047363]
[188.07121277 237.01980591]
[173.11198425 238.12487793]
[158.47830200 234.83009338]
[145.43615723 227.42047119]
[135.11381531 216.53704834]
[128.40534973 203.12464905]
[128.18202209 218.12298584]
[127.95868683 233.12132263]
[127.73535919 248.11965942]
[129.98387146 251.83424377]
[130.84663391 255.68394470]
[130.45130920 259.21652222]
[129.05935669 262.06768799]
[127.02569580 263.99703979]
[125.91004181 278.95547485]
[124.79439545 293.91394043]
[123.67874908 308.87237549]
[122.56309509 323.83084106]
[121.44744873 338.78930664]
[128.13691711 353.12670898]
[119.47442627 365.24325562]
[126.16388702 379.58068848]
[117.50141144 391.69723511]
[116.38575745 406.65567017]
[130.63281250 411.62396240]
[143.10798645 420.11117554]
[152.96069336 431.53860474]
[159.51914978 445.12716675]
[162.33621216 459.95034790]
[161.21978760 474.99746704]
[156.24601746 489.24261475]
[147.75399780 501.71450806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 202]
[15 201]
[17 199]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[24 192]
[25 187]
[26 186]
[27 185]
[28 184]
[29 164]
[30 163]
[31 162]
[32 161]
[42 160]
[43 159]
[45 157]
[46 156]
[51 155]
[53 153]
[55 151]
[56 150]
[58 148]
[59 147]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[93 127]
[94 126]
[95 125]
[96 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
