%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[116.35814667 591.77770996]
[129.32655334 583.89196777]
[126.66075134 569.13079834]
[123.99495697 554.36956787]
[121.32916260 539.60833740]
[108.98465729 531.35308838]
[106.07088470 516.42108154]
[114.81343842 503.52902222]
[112.14763641 488.76782227]
[109.48184204 474.00659180]
[106.81604767 459.24539185]
[102.53385162 453.22171021]
[104.22216034 444.24465942]
[101.77643585 429.44537354]
[99.33070374 414.64611816]
[96.88497925 399.84683228]
[93.59307861 396.38671875]
[92.43984985 390.82192993]
[94.59360504 384.57107544]
[92.58959198 369.70556641]
[90.58557892 354.84002686]
[88.58156586 339.97451782]
[86.57755280 325.10897827]
[84.57353973 310.24343872]
[82.56952667 295.37792969]
[76.49506378 309.09289551]
[65.42218018 319.21176147]
[51.21684647 324.02926636]
[36.27290726 322.73361206]
[23.10868454 315.54312134]
[13.94257832 303.66952515]
[10.31923771 289.11370850]
[12.84926033 274.32861328]
[21.10629272 261.80578613]
[33.69887924 253.65553284]
[48.50495148 251.25131226]
[63.02941895 254.99827576]
[74.82466125 264.26501465]
[81.90343475 277.49148560]
[82.79624939 262.51806641]
[83.68906403 247.54466248]
[84.58188629 232.57125854]
[85.47470093 217.59785461]
[75.42687988 206.66273499]
[76.11902618 191.46484375]
[87.65691376 180.99992371]
[88.54972839 166.02651978]
[89.44255066 151.05311584]
[76.57669067 146.57498169]
[65.31024170 138.91658020]
[56.41249847 128.60086060]
[50.49102402 116.33219910]
[47.95014954 102.94833374]
[48.96337509 89.36315155]
[53.46151352 76.50427246]
[61.13742447 65.24974823]
[71.46697235 56.36806488]
[83.74482727 50.46567917]
[97.13262939 47.94562531]
[98.47086334 33.00543976]
[99.80909729 18.06525612]
[101.14733124 3.12507081]
[102.48556519 -11.81511402]
[103.82379913 -26.75529861]
[104.71661377 -41.72870636]
[105.16322327 -56.72205353]
[97.84023285 -70.74647522]
[105.95304108 -83.23773956]
[98.63005829 -97.26216125]
[106.74286652 -109.75342560]
[107.18946838 -124.74677277]
[107.63607788 -139.74012756]
[108.08267975 -154.73347473]
[100.75969696 -168.75788879]
[108.87250519 -181.24916077]
[101.54951477 -195.27357483]
[109.66232300 -207.76484680]
[110.10893250 -222.75819397]
[110.44390869 -237.75445557]
[110.66723633 -252.75279236]
[110.89056396 -267.75112915]
[96.01406860 -269.81741333]
[81.50425720 -273.69622803]
[67.58110809 -279.32876587]
[54.45568466 -286.62963867]
[42.32696533 -295.48818970]
[31.37881851 -305.77008057]
[21.77721405 -317.31948853]
[13.66771221 -329.96130371]
[7.17325020 -343.50390625]
[2.39228177 -357.74194336]
[-0.60271460 -372.45959473]
[-1.76633525 -387.43377686]
[-1.08094001 -402.43743896]
[1.44308054 -417.24313354]
[5.76746273 -431.62643433]
[11.82665062 -445.36929321]
[19.52878761 -458.26333618]
[28.75711250 -470.11312866]
[39.37172699 -480.73904419]
[51.21171188 -489.97994995]
[64.09757996 -497.69577026]
[77.83398438 -503.76956177]
[92.21268463 -508.10922241]
[107.01570129 -510.64895630]
[122.01862335 -511.35028076]
[136.99401855 -510.20257568]
[151.71485901 -507.22320557]
[165.95796204 -502.45736694]
[179.50744629 -495.97729492]
[192.15786743 -487.88122559]
[203.71746826 -478.29190063]
[214.01100159 -467.35467529]
[222.88243103 -455.23538208]
[230.19725037 -442.11770630]
[235.84457397 -428.20056152]
[239.73878479 -413.69488525]
[241.82087708 -398.82058716]
[242.05924988 -383.80316162]
[240.45030212 -368.87030029]
[237.01843262 -354.24832153]
[231.81567383 -340.15893555]
[224.92086792 -326.81570435]
[216.43856812 -314.42095947]
[206.49736023 -303.16253662]
[195.24792480 -293.21115112]
[182.86083984 -284.71765137]
[169.52386475 -277.81082153]
[155.43917847 -272.59530640]
[140.82031250 -269.15023804]
[125.88890076 -267.52780151]
[125.66557312 -252.52946472]
[125.44224548 -237.53112793]
[128.48580933 -230.79624939]
[125.10227966 -222.31158447]
[124.65567017 -207.31823730]
[132.01060486 -194.36624146]
[123.86585236 -180.80255127]
[131.22077942 -167.85055542]
[123.07603455 -154.28686523]
[122.62942505 -139.29351807]
[122.18281555 -124.30016327]
[121.73621368 -109.30681610]
[129.09114075 -96.35482025]
[120.94639587 -82.79113007]
[128.30133057 -69.83913422]
[120.15657043 -56.27544785]
[119.70996857 -41.28210068]
[121.53186798 -39.15165329]
[122.61965179 -36.17116165]
[122.64531708 -32.61662292]
[121.38674927 -28.87756920]
[118.76398468 -25.41706467]
[117.42575073 -10.47688007]
[116.08751678 4.46330500]
[114.74928284 19.40349007]
[113.41104889 34.34367371]
[112.07281494 49.28385925]
[127.13259125 55.48368454]
[139.54452515 66.02780914]
[148.09736633 79.88723755]
[151.95643616 95.70944214]
[150.74513245 111.95036316]
[144.58168030 127.02506256]
[134.06755066 139.46241760]
[120.22879791 148.04867554]
[104.41595459 151.94592285]
[103.52313995 166.91932678]
[102.63031769 181.89273071]
[112.84290314 193.65457153]
[111.72415924 208.82702637]
[100.44810486 218.49067688]
[99.55529022 233.46408081]
[98.66247559 248.43748474]
[97.76965332 263.41088867]
[96.87683868 278.38430786]
[97.43505096 293.37390137]
[99.43906403 308.23944092]
[101.44307709 323.10494995]
[103.44709015 337.97048950]
[105.45110321 352.83602905]
[107.45511627 367.70153809]
[109.45913696 382.56707764]
[111.68424988 397.40112305]
[114.12998199 412.20037842]
[116.57570648 426.99966431]
[119.02143097 441.79891968]
[121.57726288 456.57958984]
[124.24305725 471.34078979]
[126.90885925 486.10202026]
[129.57464600 500.86325073]
[142.27435303 509.88296509]
[144.76756287 524.89093018]
[136.09037781 536.94256592]
[138.75617981 551.70373535]
[141.42196655 566.46496582]
[144.08776855 581.22619629]
[158.99525452 584.07769775]
[171.86392212 592.12518311]
[180.95336914 604.28027344]
[185.03434753 618.89910889]
[183.55491638 634.00457764]
[176.71516418 647.55383301]
[165.44010925 657.71441650]
[151.25462341 663.11224365]
[136.07714844 663.01721191]
[121.96034241 657.44226074]
[110.81337738 647.14129639]
[104.14378357 633.50750732]
[102.85357666 618.38470459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 194]
[8 191]
[9 190]
[10 189]
[11 188]
[13 187]
[14 186]
[15 185]
[16 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[46 169]
[47 168]
[48 167]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 148]
[66 147]
[68 145]
[70 143]
[71 142]
[72 141]
[73 140]
[75 138]
[77 136]
[78 135]
[79 133]
[80 132]
[81 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
