%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[39.38382721 506.57571411]
[39.79553986 521.62280273]
[37.16952515 536.44470215]
[31.61331749 550.43450928]
[23.35443687 563.01922607]
[12.73108196 573.68359375]
[0.17826955 581.99096680]
[-13.78996849 587.60107422]
[-28.60164261 590.28417969]
[-43.65022278 589.93048096]
[-58.31948090 586.55444336]
[-72.00872040 580.29425049]
[-84.15737152 571.40631104]
[-94.26795959 560.25457764]
[-101.92645264 547.29571533]
[-106.81925964 533.06036377]
[-108.74600220 518.13146973]
[-107.62779236 503.12033081]
[-103.51042175 488.64163208]
[-96.56248474 475.28833008]
[-87.06850433 463.60717773]
[-75.41725159 454.07653809]
[-62.08583069 447.08666992]
[-47.62016296 442.92382812]
[-32.61260223 441.75845337]
[-17.67770576 443.63827515]
[-12.85170841 429.43582153]
[-8.02571106 415.23336792]
[-3.19971347 401.03091431]
[-16.03444290 392.17004395]
[-25.86503601 380.04330444]
[-31.89010239 365.62628174]
[-33.61482620 350.08178711]
[-30.89159203 334.66607666]
[-23.93259048 320.62728882]
[-13.29330063 309.10443115]
[0.17184345 301.03497314]
[15.37806034 297.07852173]
[31.09761810 297.56295776]
[35.71162796 283.29022217]
[40.32563782 269.01748657]
[44.93964386 254.74475098]
[49.55365372 240.47201538]
[53.52574921 226.00749207]
[56.84801102 211.38003540]
[60.17026901 196.75257874]
[63.49253082 182.12512207]
[52.18045044 191.97584534]
[37.47780228 194.94773865]
[23.22781944 190.26393127]
[13.15541458 179.14877319]
[9.89348984 164.50775146]
[14.29470444 150.16796875]
[25.20859146 139.87782288]
[39.78228760 136.32713318]
[54.20626450 140.44404602]
[64.71012878 151.15238953]
[68.54818726 165.65217590]
[74.00354767 151.67938232]
[79.45890045 137.70657349]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[93.50021362 70.57009888]
[104.77729797 60.83990097]
[109.39130402 46.56716537]
[114.00531769 32.29443359]
[108.83816528 20.47650719]
[112.97501373 8.68370342]
[123.68350220 3.05742812]
[128.50949097 -11.14502716]
[133.33549500 -25.34748268]
[138.16149902 -39.54993820]
[142.98748779 -53.75239563]
[142.07630920 -60.30077362]
[144.27839661 -65.53984070]
[148.17439270 -68.30214691]
[145.75288391 -83.93694305]
[157.45318604 -93.15388489]
[162.69990540 -107.20635986]
[167.94662476 -121.25882721]
[164.47853088 -139.34346008]
[178.44009399 -149.97555542]
[183.47702026 -164.10458374]
[188.51393127 -178.23361206]
[193.55084229 -192.36265564]
[180.00216675 -198.83082581]
[167.19036865 -206.65782166]
[155.25128174 -215.76068115]
[144.31143188 -226.04289246]
[134.48683167 -237.39547729]
[125.88159180 -249.69807434]
[118.58695221 -262.82028198]
[112.68022919 -276.62298584]
[108.22404480 -290.95986938]
[105.26563263 -305.67898560]
[103.83635712 -320.62423706]
[103.95137024 -335.63726807]
[105.60945129 -350.55889893]
[108.79301453 -365.23092651]
[113.46833038 -379.49786377]
[119.58581543 -393.20846558]
[127.08064270 -406.21737671]
[135.87335205 -418.38668823]
[145.87074280 -429.58743286]
[156.96682739 -439.70083618]
[169.04397583 -448.61968994]
[181.97418213 -456.24951172]
[195.62036133 -462.50933838]
[209.83787537 -467.33288574]
[224.47599792 -470.66894531]
[239.37956238 -472.48223877]
[254.39056396 -472.75347900]
[269.34991455 -471.47979736]
[284.09899902 -468.67471313]
[298.48147583 -464.36798096]
[312.34490967 -458.60522461]
[325.54232788 -451.44754028]
[337.93380737 -442.97079468]
[349.38800049 -433.26486206]
[359.78350830 -422.43261719]
[369.01013184 -410.58889771]
[376.97003174 -397.85925293]
[383.57885742 -384.37860107]
[388.76654053 -370.28988647]
[392.47808838 -355.74243164]
[394.67416382 -340.89047241]
[395.33145142 -325.89138794]
[394.44305420 -310.90423584]
[392.01834106 -296.08786011]
[388.08300781 -281.59936523]
[382.67880249 -267.59225464]
[375.86297607 -254.21508789]
[367.70782471 -241.60964966]
[358.29974365 -229.90954590]
[347.73852539 -219.23881531]
[336.13607788 -209.71057129]
[323.61541748 -201.42582703]
[310.30926514 -194.47241211]
[296.35864258 -188.92401123]
[281.91149902 -184.83944702]
[267.12091064 -182.26203918]
[252.14372253 -181.21908569]
[237.13868713 -181.72166443]
[222.26484680 -183.76443481]
[207.67987061 -187.32572937]
[202.64295959 -173.19670105]
[197.60604858 -159.06767273]
[192.56912231 -144.93864441]
[197.46873474 -133.87878418]
[193.38803101 -122.06644440]
[181.99909973 -116.01211548]
[176.75238037 -101.95964050]
[171.50566101 -87.90717316]
[174.30244446 -73.27749634]
[162.22686768 -63.05542755]
[157.18994141 -48.92639542]
[152.36395264 -34.72394180]
[147.53794861 -20.52148628]
[142.71195984 -6.31902981]
[137.88595581 7.88342571]
[142.22680664 24.88706779]
[128.27804565 36.90844345]
[123.66403961 51.18117523]
[119.05002594 65.45391083]
[122.49727631 79.94410706]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[99.82825470 132.40237427]
[99.52353668 136.33578491]
[98.10915375 139.59690857]
[95.94193268 141.91418457]
[93.43170166 143.16194153]
[87.97634125 157.13473511]
[82.52098846 171.10752869]
[78.11998749 185.44737244]
[74.79772949 200.07484436]
[71.47547150 214.70230103]
[68.15321350 229.32975769]
[81.38967133 222.27313232]
[95.77862549 226.51083374]
[103.07741547 239.61531067]
[99.10497284 254.07974243]
[86.13689423 261.61822510]
[71.60187531 257.91238403]
[63.82638931 245.08602905]
[59.21237946 259.35876465]
[54.59836960 273.63150024]
[49.98435974 287.90423584]
[45.37034988 302.17697144]
[57.43831253 310.13339233]
[67.02430725 320.93609619]
[73.47818756 333.84292603]
[76.36470032 347.96942139]
[75.49282074 362.34924316]
[70.92838287 376.00045776]
[62.98916245 387.99252319]
[52.22275543 397.50967407]
[39.36880493 403.90652466]
[25.30821419 406.75164795]
[11.00274181 405.85690308]
[6.17674446 420.05935669]
[1.35074687 434.26181030]
[-3.47525072 448.46426392]
[9.51304531 456.07275391]
[20.70366287 466.14025879]
[29.63835144 478.25457764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 207]
[27 206]
[28 205]
[29 204]
[39 193]
[40 192]
[41 191]
[42 190]
[43 189]
[44 182]
[45 181]
[46 180]
[47 179]
[58 178]
[59 177]
[60 176]
[61 171]
[62 170]
[64 168]
[66 166]
[67 165]
[68 164]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[78 157]
[80 155]
[81 154]
[82 153]
[84 150]
[85 149]
[86 148]
[87 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
