%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[215.00607300 477.51135254]
[227.82829285 469.58328247]
[223.21427917 455.31057739]
[218.60026550 441.03784180]
[213.98625183 426.76510620]
[200.34744263 415.72201538]
[204.35244751 397.74865723]
[199.52644348 383.54620361]
[194.70045471 369.34375000]
[183.27975464 359.78253174]
[186.16569519 344.22677612]
[181.33969116 330.02432251]
[176.51370239 315.82186890]
[171.68769836 301.61938477]
[166.86169434 287.41693115]
[162.03570557 273.21447754]
[156.78898621 259.16201782]
[151.12620544 245.27198792]
[145.46340942 231.38195801]
[139.80062866 217.49192810]
[125.02602386 215.60069275]
[113.10247803 206.50755310]
[107.29294586 192.57501221]
[109.25008392 177.50628662]
[118.54757690 165.36117554]
[112.88479614 151.47114563]
[107.22200775 137.58111572]
[101.55921936 123.69109344]
[95.89643097 109.80107117]
[89.31640625 96.32133484]
[75.73571777 88.20495605]
[76.10973358 73.31504822]
[68.64199066 60.30609894]
[69.53226471 75.27965546]
[66.72097015 90.01385498]
[60.38003159 103.60769653]
[50.89719391 115.22990417]
[38.85233688 124.16978455]
[24.98201180 129.88066101]
[10.13439178 132.01330566]
[-4.78258610 130.43730164]
[-18.85674286 125.24903107]
[-31.22743607 116.76576233]
[-41.13819504 105.50624084]
[-47.98297501 92.15898895]
[-51.34321213 77.54020691]
[-51.01342392 62.54383469]
[-47.01378632 48.08690262]
[-39.58886719 35.05345917]
[-29.19271278 24.24050713]
[-16.46104622 16.30926132]
[-2.17241669 11.74471855]
[12.79942226 10.82600403]
[27.53893661 13.60929680]
[41.14479828 19.92439842]
[52.78500748 29.38513756]
[61.74776840 41.41300964]
[59.08197403 26.65179443]
[56.41617584 11.89057636]
[53.75038147 -2.87064052]
[45.26988220 9.50195503]
[30.85476112 13.64975739]
[17.09541702 7.67644739]
[10.28243542 -5.68705893]
[13.53062248 -20.33114624]
[25.35494995 -29.56073380]
[40.34949112 -29.15617943]
[51.65985489 -19.30082321]
[50.54420471 -34.25927734]
[49.42855453 -49.21772766]
[48.31290817 -64.17618561]
[39.06662369 -73.16890717]
[38.44535065 -85.65080261]
[46.23739624 -94.90340424]
[45.34458160 -109.87680817]
[30.34749794 -110.60808563]
[15.51739883 -112.95656586]
[1.02815700 -116.89472961]
[-12.95034790 -122.37639618]
[-26.25422478 -129.33729553]
[-38.72749329 -137.69581604]
[-50.22391129 -147.35394287]
[-60.60868454 -158.19847107]
[-69.76006317 -170.10223389]
[-77.57074738 -182.92565918]
[-83.94916534 -196.51841736]
[-88.82053375 -210.72113037]
[-92.12773132 -225.36727905]
[-93.83198547 -240.28514099]
[-93.91332245 -255.29983521]
[-92.37077332 -270.23529053]
[-89.22244263 -284.91641235]
[-84.50522614 -299.17105103]
[-78.27443695 -312.83212280]
[-70.60313416 -325.73941040]
[-61.58125305 -337.74160767]
[-51.31457138 -348.69799805]
[-39.92345810 -358.48013306]
[-27.54147530 -366.97326660]
[-14.31378841 -374.07788086]
[-0.39548978 -379.71066284]
[14.05023766 -383.80557251]
[28.85402489 -386.31457520]
[43.84230423 -387.20828247]
[58.83934784 -386.47619629]
[73.66931915 -384.12692261]
[88.15834808 -380.18798828]
[102.13655853 -374.70556641]
[115.44006348 -367.74395752]
[127.91287994 -359.38476562]
[139.40878296 -349.72601318]
[149.79296875 -338.88092041]
[158.94371033 -326.97665405]
[166.75370789 -314.15280151]
[173.13139343 -300.55972290]
[178.00198364 -286.35675049]
[181.30839539 -271.71041870]
[183.01185608 -256.79244995]
[183.09237671 -241.77777100]
[181.54902649 -226.84239197]
[178.39990234 -212.16145325]
[173.68193054 -197.90704346]
[167.45040894 -184.24632263]
[159.77841187 -171.33944702]
[150.75587463 -159.33772278]
[140.48860168 -148.38188171]
[129.09696960 -138.60038757]
[116.71452332 -130.10789490]
[103.48645782 -123.00399017]
[89.56785583 -117.37195587]
[75.12191010 -113.27783966]
[60.31798553 -110.76962280]
[61.21080399 -95.79621887]
[71.64964294 -81.68956757]
[63.27136230 -65.29183197]
[64.38700867 -50.33337784]
[65.50265503 -35.37492371]
[66.61830902 -20.41647148]
[68.51159668 -5.53643608]
[71.17739105 9.22478104]
[73.84319305 23.98599815]
[76.50898743 38.74721527]
[81.65094757 52.83835602]
[89.11868286 65.84730530]
[102.16522980 73.03319550]
[102.32535553 88.85359192]
[104.55234528 74.01982880]
[114.36526489 62.67493820]
[128.72349548 58.33425903]
[143.17794800 62.34280014]
[153.24980164 73.45846558]
[155.81813049 88.23695374]
[150.08715820 102.09897614]
[137.83265686 110.74925232]
[122.85182190 111.50738525]
[109.78646088 104.13828278]
[115.44924927 118.02830505]
[121.11203766 131.91833496]
[126.77481842 145.80836487]
[132.43760681 159.69839478]
[147.57638550 161.88114929]
[159.51121521 171.28630066]
[165.09881592 185.30931091]
[162.93157959 200.14707947]
[153.69065857 211.82914734]
[159.35343933 225.71917725]
[165.01622009 239.60920715]
[170.67901611 253.49923706]
[174.20166016 256.03793335]
[176.50187683 259.24316406]
[177.52024841 262.64877319]
[177.35481262 265.81726074]
[176.23815918 268.38848877]
[181.06416321 282.59094238]
[185.89015198 296.79339600]
[190.71615601 310.99584961]
[195.54214478 325.19830322]
[200.36814880 339.40075684]
[212.13403320 349.97784424]
[208.90290833 364.51776123]
[213.72889709 378.72021484]
[218.55490112 392.92266846]
[229.75852966 399.31341553]
[233.48573303 411.24200439]
[228.25898743 422.15109253]
[232.87300110 436.42382812]
[237.48701477 450.69656372]
[242.10101318 464.96929932]
[257.13769531 463.89129639]
[271.99526978 466.44381714]
[285.80999756 472.47845459]
[297.77865601 481.64440918]
[307.20544434 493.40872192]
[313.54229736 507.08746338]
[316.42074585 521.88537598]
[315.67352295 536.94207764]
[311.34399414 551.38226318]
[303.68392944 564.36633301]
[293.13864136 575.13946533]
[280.32122803 583.07531738]
[265.97689819 587.71246338]
[250.93955994 588.78137207]
[236.08352661 586.21984863]
[222.27247620 580.17681885]
[210.30935669 571.00360107]
[200.88970947 559.23358154]
[194.56117249 545.55102539]
[191.69166565 530.75134277]
[192.44804382 515.69506836]
[196.78631592 501.25753784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 185]
[7 182]
[8 181]
[9 180]
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[16 173]
[17 168]
[18 167]
[19 166]
[20 165]
[25 160]
[26 159]
[27 158]
[28 157]
[29 156]
[30 146]
[32 144]
[33 143]
[57 142]
[58 141]
[59 140]
[60 139]
[68 138]
[69 137]
[70 136]
[71 135]
[74 133]
[75 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
