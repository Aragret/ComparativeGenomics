%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[83.85047913 458.27566528]
[74.42958069 446.59564209]
[65.82772827 434.29989624]
[58.08501434 421.44583130]
[51.23754883 408.09335327]
[45.31725693 394.30468750]
[40.35174179 380.14416504]
[36.36415482 365.67779541]
[33.37308884 350.97302246]
[31.39248848 336.09841919]
[30.43158913 321.12332153]
[30.49486923 306.11758423]
[31.58203697 291.15112305]
[33.68802261 276.29373169]
[36.80300140 261.61471558]
[40.91246033 247.18249512]
[45.99723053 233.06436157]
[52.03360367 219.32614136]
[58.99344254 206.03187561]
[66.84429169 193.24356079]
[75.54954529 181.02082825]
[85.06861877 169.42065430]
[95.35713196 158.49713135]
[106.36710358 148.30119324]
[118.04721069 138.88037109]
[109.44864655 126.58953857]
[100.85008240 114.29869843]
[88.26311493 108.21102142]
[86.85907745 94.29986572]
[78.26051331 82.00902557]
[69.66194916 69.71819305]
[61.06338501 57.42735291]
[52.46482086 45.13651276]
[39.67797089 52.98712158]
[26.44450951 60.05896759]
[12.81180763 66.32673645]
[-1.17133367 71.76799774]
[-15.45485783 76.36325836]
[-29.98763275 80.09608459]
[-44.71763611 82.95310211]
[-59.59213257 84.92409515]
[-74.55788422 86.00199127]
[-89.56130981 86.18294525]
[-104.54869843 85.46630859]
[-119.46640778 83.85464478]
[-134.26103210 81.35372162]
[-148.87960815 77.97248840]
[-163.26980591 73.72305298]
[-177.38011169 68.62062836]
[-191.16001892 62.68347931]
[-204.56019592 55.93286133]
[-217.53266907 48.39293671]
[-230.03100586 40.09069443]
[-242.01045227 31.05586243]
[-253.42814636 21.32077599]
[-264.24319458 10.92028713]
[-274.41690063 -0.10837217]
[-283.91284180 -11.72572327]
[-292.69699097 -23.89017868]
[-300.73794556 -36.55819321]
[-308.00689697 -49.68441391]
[-314.47784424 -63.22185898]
[-320.12762451 -77.12206268]
[-324.93597412 -91.33526611]
[-328.88571167 -105.81059265]
[-331.96270752 -120.49622345]
[-334.15591431 -135.33958435]
[-335.45751953 -150.28753662]
[-335.86282349 -165.28657532]
[-335.37039185 -180.28300476]
[-333.98202515 -195.22315979]
[-331.70260620 -210.05352783]
[-328.54037476 -224.72103882]
[-324.50662231 -239.17317200]
[-319.61578369 -253.35821533]
[-313.88540649 -267.22537231]
[-307.33593750 -280.72500610]
[-299.99084473 -293.80877686]
[-291.87643433 -306.42987061]
[-283.02178955 -318.54309082]
[-273.45852661 -330.10510254]
[-263.22094727 -341.07449341]
[-252.34565735 -351.41198730]
[-240.87162781 -361.08056641]
[-228.83988953 -370.04568481]
[-216.29354858 -378.27517700]
[-203.27749634 -385.73962402]
[-189.83834839 -392.41232300]
[-176.02418518 -398.26931763]
[-161.88447571 -403.28970337]
[-147.46984863 -407.45547485]
[-132.83187866 -410.75173950]
[-118.02297211 -413.16668701]
[-103.09615326 -414.69168091]
[-88.10485077 -415.32125854]
[-73.10272980 -415.05316162]
[-58.14349365 -413.88836670]
[-43.28069305 -411.83102417]
[-28.56753540 -408.88848877]
[-14.05668736 -405.07131958]
[0.19990505 -400.39315796]
[14.15120602 -394.87078857]
[27.74727440 -388.52392578]
[40.93943787 -381.37533569]
[53.68046951 -373.45059204]
[65.92476654 -364.77807617]
[77.62849426 -355.38879395]
[88.74974823 -345.31640625]
[99.24872589 -334.59692383]
[109.08784485 -323.26876831]
[118.23188019 -311.37246704]
[126.64809418 -298.95059204]
[134.30636597 -286.04763794]
[141.17927551 -272.70977783]
[147.24221802 -258.98474121]
[152.47349548 -244.92169189]
[156.85437012 -230.57096863]
[160.36918640 -215.98393250]
[163.00532532 -201.21279907]
[164.75338745 -186.31045532]
[165.60708618 -171.33024597]
[165.56336975 -156.32580566]
[164.62240601 -141.35081482]
[162.78756714 -126.45890808]
[160.06539917 -111.70339203]
[156.46566772 -97.13707733]
[152.00123596 -82.81211853]
[146.68811035 -68.77979279]
[140.54530334 -55.09032822]
[133.59480286 -41.79273605]
[125.86148834 -28.93461227]
[117.37303925 -16.56198883]
[108.15985107 -4.71915627]
[98.25489807 6.55148935]
[87.69364166 17.20960426]
[76.51388550 27.21703148]
[64.75566101 36.53795242]
[73.35422516 48.82878876]
[81.95278931 61.11962509]
[90.55135345 73.41046143]
[99.14991760 85.70130157]
[111.73688507 91.78897858]
[113.14092255 105.70013428]
[121.73948669 117.99097443]
[130.33805847 130.28181458]
[143.19197083 122.53884125]
[156.54431152 115.69110870]
[170.33285522 109.77053833]
[184.49327087 104.80473328]
[198.95956421 100.81685638]
[213.66427612 97.82549286]
[228.53884888 95.84459686]
[243.51391602 94.88339233]
[258.51968384 94.94637299]
[273.48614502 96.03324127]
[288.34356689 98.13892365]
[303.02264404 101.25361633]
[317.45495605 105.36277771]
[331.57321167 110.44726562]
[345.31155396 116.48336792]
[358.60595703 123.44293213]
[371.39440918 131.29353333]
[383.61734009 139.99853516]
[395.21768188 149.51737976]
[406.14141846 159.80566406]
[416.33758545 170.81544495]
[425.75863647 182.49536133]
[434.36065674 194.79095459]
[442.10354614 207.64492798]
[448.95120239 220.99732971]
[454.87167358 234.78590393]
[459.83737183 248.94635010]
[463.82516479 263.41265869]
[466.81640625 278.11740112]
[468.79721069 292.99197388]
[469.75833130 307.96707153]
[469.69525146 322.97280884]
[468.60827637 337.93930054]
[466.50247192 352.79669189]
[463.38769531 367.47576904]
[459.27844238 381.90805054]
[454.19384766 396.02624512]
[448.15765381 409.76455688]
[441.19799805 423.05889893]
[433.34732056 435.84732056]
[424.64224243 448.07019043]
[415.12332153 459.67047119]
[404.83496094 470.59414673]
[393.82510376 480.79022217]
[382.14514160 490.21121216]
[369.84945679 498.81314087]
[356.99545288 506.55593872]
[343.64300537 513.40350342]
[329.85440063 519.32385254]
[315.69390869 524.28948975]
[301.22756958 528.27716064]
[286.52282715 531.26831055]
[271.64822388 533.24902344]
[256.67312622 534.21002197]
[241.66737366 534.14685059]
[226.70091248 533.05981445]
[211.84352112 530.95391846]
[197.16447449 527.83905029]
[182.73222351 523.72967529]
[168.61405945 518.64495850]
[154.87579346 512.60870361]
[141.58148193 505.64895630]
[128.79312134 497.79818726]
[116.57032013 489.09301758]
[104.97008514 479.57400513]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 145]
[26 144]
[27 143]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
