%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[132.12908936 506.96444702]
[130.79084778 492.02426147]
[129.45262146 477.08407593]
[128.11437988 462.14389038]
[126.77614594 447.20370483]
[125.32672882 432.27389526]
[116.30733490 420.42062378]
[122.56694794 405.89038086]
[121.00642395 390.97177124]
[119.44589996 376.05319214]
[110.24950409 368.19488525]
[108.82731628 355.77871704]
[116.48361206 345.39874268]
[115.14537811 330.45855713]
[113.80714417 315.51837158]
[112.46891022 300.57818604]
[111.13067627 285.63800049]
[109.79244232 270.69781494]
[108.45420837 255.75762939]
[107.11597443 240.81744385]
[105.77774048 225.87725830]
[96.93582153 213.89102173]
[103.41107941 199.45559692]
[101.73954010 184.54902649]
[99.73552704 169.68350220]
[97.73150635 154.81796265]
[95.16431427 152.40097046]
[93.64027405 148.62045288]
[93.78748322 143.98023987]
[95.98531342 139.24562073]
[87.14339447 127.25938416]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[87.95644379 82.89572144]
[87.84851074 77.21369934]
[90.29229736 73.11041260]
[89.39948273 58.13700485]
[88.50666046 43.16359711]
[87.61384583 28.19019127]
[86.72103119 13.21678638]
[84.38554382 -1.60028148]
[80.62924194 -16.12234116]
[76.87294006 -30.64439964]
[66.17566681 -37.85072327]
[63.34600067 -50.02350998]
[69.36963654 -60.51361847]
[65.82997131 -75.08999634]
[62.29029465 -89.66636658]
[51.51496887 -101.25096893]
[56.03039932 -115.44463348]
[52.07508850 -100.97550964]
[43.46615982 -88.69193268]
[31.21497726 -80.03695679]
[16.76080322 -76.02736664]
[1.80169463 -77.13420105]
[-11.90496540 -83.22743225]
[-22.74893188 -93.59123993]
[-29.45626640 -107.00807953]
[-31.23900032 -121.90176392]
[-27.88769531 -136.52259827]
[-19.79606438 -149.15293884]
[-7.91470098 -158.30899048]
[6.36058331 -162.91510010]
[21.35274124 -162.43014526]
[35.30051041 -156.91111755]
[46.56532288 -147.00636292]
[53.82430649 -133.87802124]
[53.82430649 -148.87802124]
[53.82430649 -163.87802124]
[53.82430649 -178.87802124]
[41.43933105 -188.03872681]
[36.87657928 -202.56576538]
[41.68589020 -216.82530212]
[53.82430649 -225.41581726]
[53.82430649 -240.41581726]
[53.82430649 -255.41581726]
[39.26583481 -259.35104370]
[26.23225021 -266.91485596]
[15.60899067 -277.58642578]
[8.11595058 -290.63406372]
[4.25869894 -305.16537476]
[4.29436541 -320.18829346]
[8.21451283 -334.67874146]
[15.74612045 -347.65051270]
[26.37059021 -358.22241211]
[39.35945129 -365.67803955]
[53.82430649 -369.51437378]
[53.82430649 -384.51437378]
[53.82430649 -399.51437378]
[53.82430649 -414.51437378]
[53.82430649 -429.51437378]
[39.13571930 -432.85998535]
[25.56010437 -439.39071655]
[13.77840710 -448.77899170]
[4.38159084 -460.55386353]
[-2.15900254 -474.12472534]
[-5.51529932 -488.81085205]
[-5.51894951 -503.87564087]
[-2.16977000 -518.56341553]
[4.36424589 -532.13745117]
[13.75535488 -543.91687012]
[25.53250313 -553.31085205]
[39.10494995 -559.84814453]
[53.79191589 -563.20086670]
[68.85669708 -563.20086670]
[83.54366302 -559.84814453]
[97.11611176 -553.31085205]
[108.89325714 -543.91687012]
[118.28437042 -532.13745117]
[124.81838226 -518.56341553]
[128.16755676 -503.87564087]
[128.16390991 -488.81085205]
[124.80761719 -474.12472534]
[118.26702118 -460.55386353]
[108.87020874 -448.77899170]
[97.08850861 -439.39071655]
[83.51289368 -432.85998535]
[68.82431030 -429.51437378]
[68.82431030 -414.51437378]
[68.82431030 -399.51437378]
[68.82431030 -384.51437378]
[68.82431030 -369.51437378]
[83.28916168 -365.67803955]
[96.27802277 -358.22241211]
[106.90249634 -347.65051270]
[114.43410492 -334.67874146]
[118.35424805 -320.18829346]
[118.38991547 -305.16537476]
[114.53266144 -290.63406372]
[107.03962708 -277.58642578]
[96.41636658 -266.91485596]
[83.38277435 -259.35104370]
[68.82431030 -255.41581726]
[68.82431030 -240.41581726]
[68.82431030 -225.41581726]
[80.96272278 -216.82530212]
[85.77203369 -202.56576538]
[81.20928192 -188.03872681]
[68.82431030 -178.87802124]
[68.82431030 -163.87802124]
[68.82431030 -148.87802124]
[68.82431030 -133.87802124]
[70.60677338 -118.98430634]
[81.12891388 -108.44230652]
[76.86666870 -93.20603943]
[80.40634155 -78.62966919]
[83.94601440 -64.05329132]
[96.72571564 -52.02639389]
[91.39500427 -34.40069962]
[95.15130615 -19.87864113]
[98.90760040 -5.35658216]
[103.30925751 -19.69622803]
[113.10124969 -31.05918884]
[126.63346100 -37.53060532]
[141.62547302 -38.01992798]
[155.55087280 -32.44470215]
[166.06298828 -21.74444580]
[171.39033508 -7.72234344]
[170.63517761 7.25863504]
[163.92474365 20.67393112]
[152.38989258 30.26283455]
[137.97442627 34.40944290]
[123.10761261 32.41498184]
[110.29476929 24.61555099]
[101.69443512 12.32397079]
[102.58725739 27.29737663]
[103.48007202 42.27078247]
[104.37288666 57.24418640]
[105.26570129 72.21759033]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[117.49647522 124.54057312]
[110.92549896 137.90737915]
[112.59703827 152.81394958]
[114.60105133 167.67948914]
[116.60506439 182.54501343]
[119.79695129 186.67526245]
[120.96824646 191.16763306]
[120.31937408 195.19180298]
[118.35126495 198.11737061]
[127.28890228 211.17222595]
[120.71792603 224.53903198]
[122.05615997 239.47921753]
[123.39439392 254.41940308]
[124.73262787 269.35958862]
[126.07086182 284.29977417]
[127.40909576 299.23995972]
[128.74732971 314.18014526]
[130.08557129 329.12033081]
[131.42379761 344.06051636]
[142.36358643 358.87274170]
[134.36450195 374.49264526]
[135.92503357 389.41125488]
[137.48554993 404.32986450]
[146.61656189 417.25021362]
[140.24533081 430.71334839]
[144.25054932 438.92288208]
[141.71633911 445.86544800]
[143.05456543 460.80563354]
[144.39280701 475.74581909]
[145.73103333 490.68600464]
[147.06927490 505.62619019]
[159.99995422 514.42004395]
[164.20312500 529.48211670]
[157.69413757 543.70068359]
[143.54635620 550.36212158]
[128.43994141 546.32104492]
[119.50765991 533.48565674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 200]
[6 198]
[8 196]
[9 195]
[10 194]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[21 184]
[23 182]
[24 178]
[25 177]
[26 176]
[30 175]
[32 173]
[34 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 152]
[43 151]
[44 150]
[47 148]
[48 147]
[49 146]
[51 144]
[68 143]
[69 142]
[70 141]
[71 140]
[75 136]
[76 135]
[77 134]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
