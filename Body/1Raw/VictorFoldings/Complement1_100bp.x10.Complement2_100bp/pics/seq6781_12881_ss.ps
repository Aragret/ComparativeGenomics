%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[89.53142548 404.27249146]
[89.12808228 389.22842407]
[91.66773987 374.39480591]
[97.05278015 360.34179688]
[105.07621765 347.60952759]
[115.42964172 336.68740845]
[127.71511078 327.99523926]
[141.46040344 321.86715698]
[138.13813782 307.23971558]
[134.81587219 292.61224365]
[124.45185852 281.91476440]
[128.94047546 266.74362183]
[125.61821747 252.11616516]
[122.29595947 237.48870850]
[117.74906158 231.66226196]
[119.03484344 222.61877441]
[115.93073273 207.94346619]
[112.82662201 193.26817322]
[109.50435638 178.64071655]
[105.96469116 164.06433105]
[102.42501831 149.48796082]
[99.62030029 147.35116577]
[97.71121979 143.74971008]
[97.37489319 139.11935425]
[99.06822205 134.18177795]
[89.02729797 123.18045044]
[93.96562958 108.14969635]
[89.44801331 101.47409821]
[91.14869690 93.18926239]
[88.48290253 78.42803955]
[83.87818146 70.53916168]
[85.88901520 63.42731857]
[83.44328308 48.62804794]
[80.99755859 33.82877731]
[78.55183411 19.02950668]
[76.10610199 4.23023653]
[61.59482574 3.25760007]
[47.67312622 -0.92460740]
[35.04127502 -8.10251808]
[24.33387375 -17.91166687]
[16.08799553 -29.85549545]
[10.71622181 -43.33049011]
[8.48601627 -57.65667725]
[9.50640011 -72.11193085]
[13.72263336 -85.96838379]
[20.91913795 -98.52905273]
[30.73051643 -109.16293335]
[42.66011047 -117.33666992]
[56.10512924 -122.64131165]
[53.88001251 -137.47535706]
[51.65489578 -152.30940247]
[47.46788406 -166.71318054]
[41.39405060 -180.42845154]
[35.32021332 -194.14372253]
[29.24638176 -207.85897827]
[23.17254639 -221.57424927]
[17.09871292 -235.28952026]
[10.76243591 -241.86898804]
[11.03824043 -249.25448608]
[5.16927910 -263.05868530]
[-0.69968152 -276.86285400]
[-6.56864214 -290.66702271]
[-14.51507568 -277.94482422]
[-29.39792633 -276.07379150]
[-40.24611282 -286.43319702]
[-39.06275177 -301.38644409]
[-26.72017670 -309.91058350]
[-12.31810665 -305.72302246]
[-17.03027344 -310.36056519]
[-18.47599030 -315.85665894]
[-17.06950760 -320.42074585]
[-21.47050667 -334.76058960]
[-25.87150383 -349.10043335]
[-30.27250290 -363.44027710]
[-45.11813354 -361.11907959]
[-60.14300156 -360.93435669]
[-75.04121399 -362.88986206]
[-89.50946808 -366.94577026]
[-103.25321198 -373.01950073]
[-115.99262238 -380.98742676]
[-127.46836090 -390.68734741]
[-137.44679260 -401.92175293]
[-145.72476196 -414.46191406]
[-152.13374329 -428.05258179]
[-156.54325867 -442.41699219]
[-158.86354065 -457.26278687]
[-159.04733276 -472.28765869]
[-157.09092712 -487.18576050]
[-153.03411865 -501.65374756]
[-146.95951843 -515.39709473]
[-138.99079895 -528.13604736]
[-129.29017639 -539.61120605]
[-118.05516052 -549.58892822]
[-105.51447296 -557.86608887]
[-91.92343140 -564.27423096]
[-77.55872345 -568.68286133]
[-62.71280670 -571.00225830]
[-47.68791580 -571.18511963]
[-32.78994370 -569.22778320]
[-18.32219124 -565.17004395]
[-4.57920456 -559.09460449]
[8.15922642 -551.12512207]
[19.63376427 -541.42376709]
[29.61079979 -530.18817139]
[37.88721848 -517.64697266]
[44.29451752 -504.05551147]
[48.70225525 -489.69052124]
[51.02069855 -474.84445190]
[51.20264053 -459.81954956]
[49.24438095 -444.92172241]
[45.18578720 -430.45422363]
[39.10948563 -416.71160889]
[31.13918495 -403.97366333]
[21.43714714 -392.49972534]
[10.20089436 -382.52337646]
[-2.34081721 -374.24774170]
[-15.93265438 -367.84127808]
[-11.53165722 -353.50143433]
[-7.13065863 -339.16159058]
[-2.72966075 -324.82174683]
[1.88434863 -310.54901123]
[7.23553467 -296.53598022]
[13.10449505 -282.73181152]
[18.97345543 -268.92764282]
[24.84241676 -255.12345886]
[30.81398010 -241.36335754]
[36.88781357 -227.64808655]
[42.96164703 -213.93281555]
[49.03548050 -200.21754456]
[55.10931396 -186.50228882]
[61.18315125 -172.78701782]
[62.21691513 -187.75135803]
[67.76596832 -201.68721008]
[77.30140686 -213.26629639]
[89.91436768 -221.38499451]
[104.40267181 -225.26947021]
[119.38537598 -224.54946899]
[133.43443298 -219.29362488]
[145.21078491 -210.00288391]
[153.59196472 -197.56280518]
[157.77914429 -183.15907288]
[157.37322998 -168.16456604]
[152.41290283 -154.00845337]
[143.37095642 -142.04003906]
[131.10919189 -133.40003967]
[116.79635620 -128.91198730]
[101.79663849 -129.00364685]
[87.53971863 -133.66629028]
[75.38446808 -142.45547485]
[66.48893738 -154.53451538]
[68.71405792 -139.70046997]
[70.93917084 -124.86643219]
[86.37582397 -123.53372192]
[101.05570984 -118.54994965]
[114.12780762 -110.19962311]
[124.83326721 -98.96255493]
[132.54943848 -85.48626709]
[136.82608032 -70.54869843]
[137.41165161 -55.01328659]
[134.26811218 -39.77906036]
[127.57331085 -25.72862625]
[117.71097565 -13.67701530]
[105.24873352 -4.32441568]
[90.90537262 1.78450918]
[93.35110474 16.58378029]
[95.79682922 31.38305092]
[98.24255371 46.18232346]
[100.68828583 60.98159409]
[103.24411774 75.76224518]
[105.90991211 90.52346039]
[108.68552399 105.26442719]
[118.93282318 117.31861115]
[113.78811646 131.29649353]
[117.00138855 145.94828796]
[120.54106140 160.52465820]
[124.08073425 175.10104370]
[128.36036682 180.14050293]
[129.30998230 185.74365234]
[127.50192261 190.16406250]
[130.60603333 204.83935547]
[133.71014404 219.51466370]
[136.92341614 234.16645813]
[140.24568176 248.79391479]
[143.56793213 263.42138672]
[154.16958618 275.16513062]
[149.44334412 289.28997803]
[152.76559448 303.91744995]
[156.08786011 318.54489136]
[171.13171387 318.13424683]
[185.96656799 320.66671753]
[200.02220154 326.04492188]
[212.75837708 334.06216431]
[223.68551636 344.41030884]
[232.38363647 356.69155884]
[238.51838684 370.43383789]
[241.85398865 385.10900879]
[242.26219177 400.15292358]
[239.72734070 414.98736572]
[234.34684753 429.04214478]
[226.32754517 441.77700806]
[215.97764587 452.70248413]
[203.69499207 461.39862061]
[189.95169067 467.53112793]
[175.27600098 470.86434937]
[160.23200989 471.27014160]
[145.39797974 468.73287964]
[131.34408569 463.35009766]
[118.61051178 455.32873535]
[107.68671417 444.97708130]
[98.99256897 432.69302368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 188]
[9 187]
[10 186]
[12 184]
[13 183]
[14 182]
[16 181]
[17 180]
[18 179]
[19 176]
[20 175]
[21 174]
[25 173]
[27 171]
[29 170]
[30 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[49 152]
[50 151]
[51 150]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[59 125]
[60 124]
[61 123]
[62 122]
[68 121]
[71 120]
[72 119]
[73 118]
[74 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
