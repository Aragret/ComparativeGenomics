%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[121.99153137 338.15173340]
[118.47053528 352.76675415]
[112.65059662 366.62765503]
[104.68246460 379.37539673]
[94.77252960 390.67980957]
[83.17748260 400.24804688]
[70.19766998 407.83227539]
[56.16929626 413.23605347]
[41.45573044 416.31942749]
[26.43808937 417.00250244]
[11.50536442 415.26757812]
[-2.95565009 411.15963745]
[-16.57037926 404.78506470]
[-28.98616600 396.30895996]
[-39.88141632 385.95086670]
[-48.97391510 373.97912598]
[-56.02814102 360.70382690]
[-60.86137772 346.46878052]
[-63.34843063 331.64276123]
[-63.42488098 316.60980225]
[-61.08874512 301.75924683]
[-56.40053940 287.47579956]
[-49.48169327 274.12942505]
[-40.51142502 262.06582642]
[-29.72208786 251.59747314]
[-17.39315033 242.99552917]
[-3.84395885 236.48280334]
[10.57452679 232.22799683]
[25.48883438 230.34130859]
[40.51264572 230.87161255]
[55.25681305 233.80516052]
[60.50353241 219.75270081]
[65.75025177 205.70022583]
[70.15124512 191.36038208]
[73.69091797 176.78399658]
[77.23059082 162.20762634]
[80.77026367 147.63125610]
[84.30993652 133.05487061]
[87.84960938 118.47850037]
[91.38928223 103.90212250]
[89.74521637 98.92105865]
[91.00897980 93.37342834]
[95.25743103 88.94763947]
[99.22953033 74.48311615]
[103.20162964 60.01859283]
[107.17372131 45.55406952]
[94.18070221 53.04949570]
[79.38813782 50.56350708]
[69.55899811 39.23266602]
[69.18702698 24.23727798]
[78.44228363 12.43303490]
[93.09339905 9.21667576]
[106.44207001 16.05867767]
[112.38558197 29.83281898]
[117.84094238 15.86002159]
[123.29629517 1.88722360]
[128.75164795 -12.08557415]
[115.07260895 -18.24855042]
[101.72608948 -25.10194778]
[88.74691772 -32.62788773]
[76.16895294 -40.80673599]
[64.02502441 -49.61715317]
[52.34679413 -59.03615570]
[41.16474152 -69.03916931]
[30.50803375 -79.60010529]
[20.40447807 -90.69139862]
[10.88042927 -102.28411102]
[1.96073699 -114.34801483]
[-6.33132887 -126.85162354]
[-13.97413540 -139.76232910]
[-20.94774246 -153.04643250]
[-27.23395920 -166.66928101]
[-32.81638336 -180.59533691]
[-37.68045044 -194.78828430]
[-41.81346893 -209.21105957]
[-45.20466232 -223.82608032]
[-47.84518051 -238.59516907]
[-49.72813034 -253.47982788]
[-50.84860611 -268.44122314]
[-51.20368195 -283.44030762]
[-50.79242706 -298.43795776]
[-49.61592102 -313.39505005]
[-47.67723083 -328.27255249]
[-44.98141479 -343.03164673]
[-41.53550339 -357.63385010]
[-37.34848785 -372.04107666]
[-32.43129349 -386.21566772]
[-26.79674911 -400.12072754]
[-20.45955276 -413.71994019]
[-13.43623638 -426.97784424]
[-5.74512482 -439.85983276]
[2.59371662 -452.33227539]
[11.55853271 -464.36270142]
[21.12593651 -475.91964722]
[31.27096558 -486.97302246]
[41.96715546 -497.49395752]
[53.18659592 -507.45501709]
[64.90002441 -516.83020020]
[77.07687378 -525.59509277]
[89.68537903 -533.72674561]
[102.69264984 -541.20404053]
[116.06474304 -548.00738525]
[129.76678467 -554.11907959]
[143.76301575 -559.52319336]
[158.01692200 -564.20556641]
[172.49131775 -568.15405273]
[187.14845276 -571.35827637]
[201.95007324 -573.80993652]
[216.85757446 -575.50256348]
[231.83204651 -576.43188477]
[246.83444214 -576.59533691]
[261.82562256 -575.99255371]
[276.76644897 -574.62506104]
[291.61798096 -572.49652100]
[306.34146118 -569.61242676]
[320.89843750 -565.98022461]
[335.25100708 -561.60955811]
[349.36166382 -556.51171875]
[363.19360352 -550.70001221]
[376.71075439 -544.18963623]
[389.87786865 -536.99755859]
[402.66055298 -529.14251709]
[415.02548218 -520.64501953]
[426.94039917 -511.52728271]
[438.37420654 -501.81304932]
[449.29708862 -491.52764893]
[459.68054199 -480.69793701]
[469.49749756 -469.35217285]
[478.72232056 -457.51995850]
[487.33093262 -445.23214722]
[495.30090332 -432.52081299]
[502.61141968 -419.41909790]
[509.24340820 -405.96118164]
[515.17956543 -392.18218994]
[520.40447998 -378.11807251]
[524.90441895 -363.80554199]
[528.66766357 -349.28189087]
[531.68438721 -334.58502197]
[533.94677734 -319.75329590]
[535.44891357 -304.82537842]
[536.18682861 -289.84024048]
[536.15863037 -274.83700562]
[535.36444092 -259.85473633]
[533.80627441 -244.93258667]
[531.48815918 -230.10946655]
[528.41619873 -215.42402649]
[524.59838867 -200.91461182]
[520.04473877 -186.61906433]
[514.76708984 -172.57467651]
[508.77917480 -158.81809998]
[502.09664917 -145.38519287]
[494.73696899 -132.31103516]
[486.71929932 -119.62973022]
[478.06460571 -107.37434387]
[468.79537964 -95.57685852]
[458.93591309 -84.26805878]
[448.51184082 -73.47743988]
[437.55038452 -63.23316193]
[426.08013916 -53.56194305]
[414.13107300 -44.48901749]
[401.73428345 -36.03805542]
[388.92218018 -28.23110771]
[375.72814941 -21.08853531]
[362.18664551 -14.62897682]
[348.33294678 -8.86928463]
[334.20324707 -3.82448316]
[319.83438110 0.49226478]
[305.26385498 4.06969738]
[290.52966309 6.89848232]
[275.67022705 8.97123814]
[260.72436523 10.28255844]
[245.73103333 10.82902241]
[230.72935486 10.60920334]
[215.75846863 9.62367439]
[200.85743713 7.87500858]
[186.06512451 5.36776590]
[171.42013550 2.10848904]
[156.96066284 -1.89431965]
[142.72445679 -6.63021708]
[137.26908875 7.34258080]
[131.81373596 21.31537819]
[126.35838318 35.28817749]
[121.63824463 49.52616501]
[117.66615295 63.99068832]
[113.69405365 78.45521545]
[109.72195435 92.91973877]
[105.96566010 107.44179535]
[102.42598724 122.01817322]
[98.88631439 136.59454346]
[95.34664154 151.17092896]
[91.80696869 165.74729919]
[88.26729584 180.32366943]
[84.72762299 194.90005493]
[96.98817444 186.25834656]
[111.98783875 186.35832214]
[124.13211823 195.16265869]
[128.89149475 209.38758850]
[124.49083710 223.72753906]
[112.57147980 232.83407593]
[97.57905579 233.31068420]
[85.10536194 224.97959900]
[79.80271912 210.94694519]
[74.55599976 224.99942017]
[69.30928040 239.05187988]
[82.36821747 246.49906921]
[94.06333923 255.94470215]
[104.09172058 267.14416504]
[112.19361115 279.80731201]
[118.15914154 293.60617065]
[121.83378601 308.18331909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 204]
[32 203]
[33 202]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[43 186]
[44 185]
[45 184]
[46 183]
[54 182]
[55 181]
[56 180]
[57 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
