%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[115.26012421 780.22015381]
[100.96625519 775.65563965]
[86.98720551 770.20263672]
[73.37813568 763.88256836]
[60.19276047 756.72052002]
[47.48311615 748.74462891]
[35.29936218 739.98645020]
[23.68958282 730.48052979]
[12.69959641 720.26440430]
[2.37277579 709.37835693]
[-7.25012350 697.86535645]
[-16.13112450 685.77081299]
[-24.23517609 673.14251709]
[-31.53029823 660.03027344]
[-37.98769760 646.48583984]
[-43.58189011 632.56268311]
[-48.29079819 618.31573486]
[-52.09583664 603.80120850]
[-54.98199081 589.07641602]
[-56.93787003 574.19946289]
[-57.95575333 559.22906494]
[-58.03162384 544.22424316]
[-57.16518402 529.24432373]
[-55.35985184 514.34832764]
[-52.62275314 499.59512329]
[-48.96469116 485.04287720]
[-44.40009689 470.74902344]
[-38.94699097 456.76998901]
[-32.62689209 443.16094971]
[-25.46474648 429.97561646]
[-17.48881340 417.26602173]
[-8.73057556 405.08230591]
[0.77540404 393.47259521]
[10.99160957 382.48266602]
[21.87771988 372.15588379]
[33.39077759 362.53305054]
[45.48533630 353.65209961]
[58.11367416 345.54812622]
[71.22594452 338.25308228]
[84.77040863 331.79574585]
[98.69359589 326.20162964]
[112.94057465 321.49279785]
[127.45510864 317.68783569]
[124.56983948 302.96792603]
[121.68456268 288.24804688]
[118.79929352 273.52813721]
[116.09278870 271.26824951]
[114.34642792 267.58514404]
[114.21718597 262.94439697]
[116.12931061 258.08734131]
[106.58963013 246.64863586]
[112.19419861 231.85339355]
[109.96907806 217.01934814]
[107.74396515 202.18530273]
[105.51884460 187.35125732]
[103.29373169 172.51721191]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[84.09734344 44.54194260]
[81.87223053 29.70790100]
[65.54251099 21.82766533]
[57.28449631 5.86255455]
[60.23703003 -11.70825672]
[73.03175354 -23.88063622]
[70.36595154 -38.64185333]
[67.70015717 -53.40307236]
[65.03436279 -68.16429138]
[62.36856842 -82.92550659]
[59.70277405 -97.68672180]
[57.03697586 -112.44793701]
[54.37118149 -127.20915985]
[51.70538712 -141.97036743]
[47.10066605 -149.85925293]
[49.11149979 -156.97109985]
[46.23862457 -160.22694397]
[44.70543671 -163.86203003]
[44.46665573 -167.40863037]
[45.32974625 -170.46177673]
[46.98815155 -172.72183228]
[45.42763138 -187.64042664]
[43.86710739 -202.55903625]
[42.30658340 -217.47764587]
[27.34065056 -219.16136169]
[13.08670807 -224.02337646]
[0.21143918 -231.83628845]
[-10.68295574 -242.23466492]
[-19.08692741 -254.73214722]
[-24.60740471 -268.74423218]
[-26.98618698 -283.61553955]
[-26.11201477 -298.65048218]
[-22.02577209 -313.14590454]
[-14.91858196 -326.42376709]
[-5.12285900 -337.86306763]
[6.90323114 -346.92880249]
[20.59720802 -353.19689941]
[35.31858063 -356.37420654]
[50.37879944 -356.31213379]
[65.07347107 -353.01354980]
[78.71530914 -346.63275146]
[90.66624451 -337.46820068]
[100.36732483 -325.94851685]
[107.36479950 -312.61248779]
[111.33139038 -298.08389282]
[112.08158112 -283.04223633]
[109.58026886 -268.19107056]
[103.94445801 -254.22497559]
[95.43773651 -241.79719543]
[84.45797729 -231.48898315]
[71.51873016 -223.78250122]
[57.22518921 -219.03816223]
[58.78571320 -204.11956787]
[60.34623337 -189.20095825]
[61.90675735 -174.28234863]
[63.91077042 -159.41682434]
[66.46660614 -144.63616943]
[69.13240051 -129.87495422]
[71.79819489 -115.11373901]
[74.46398926 -100.35251617]
[77.12978363 -85.59130096]
[79.79557800 -70.83008575]
[82.46138000 -56.06886673]
[85.12717438 -41.30764771]
[87.79296875 -26.54643250]
[99.38754272 -22.94906425]
[108.40574646 -14.71468449]
[113.09476471 -3.36065030]
[112.50804138 8.98176765]
[106.69561005 19.96740150]
[96.70626831 27.48278427]
[98.93138885 42.31682587]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.12776947 170.29209900]
[120.35289001 185.12614441]
[122.57800293 199.96018982]
[124.80312347 214.79423523]
[127.02824402 229.62828064]
[136.72706604 242.12800598]
[130.96334839 255.86222839]
[133.51918030 270.64288330]
[136.40444946 285.36276245]
[139.28973389 300.08267212]
[142.17500305 314.80255127]
[157.05194092 312.84643555]
[172.02233887 311.82833862]
[187.02713013 311.75222778]
[202.00708008 312.61843872]
[216.90309143 314.42352295]
[231.65635681 317.16040039]
[246.20867920 320.81823730]
[260.50259399 325.38259888]
[274.48168945 330.83547974]
[288.09082031 337.15536499]
[301.27627563 344.31732178]
[313.98602295 352.29302979]
[326.16986084 361.05108643]
[337.77972412 370.55688477]
[348.76983643 380.77291870]
[359.09677124 391.65887451]
[368.71978760 403.17178345]
[377.60089111 415.26620483]
[385.70507812 427.89440918]
[393.00033569 441.00656128]
[399.45788574 454.55093384]
[405.05221558 468.47402954]
[409.76129150 482.72091675]
[413.56646729 497.23541260]
[416.45278931 511.96017456]
[418.40881348 526.83709717]
[419.42684937 541.80749512]
[419.50286865 556.81231689]
[418.63659668 571.79223633]
[416.83142090 586.68829346]
[414.09448242 601.44152832]
[410.43655396 615.99383545]
[405.87213135 630.28771973]
[400.41915894 644.26678467]
[394.09921265 657.87591553]
[386.93719482 671.06127930]
[378.96139526 683.77099609]
[370.20327759 695.95477295]
[360.69741821 707.56463623]
[350.48132324 718.55462646]
[339.59533691 728.88153076]
[328.08236694 738.50451660]
[315.98791504 747.38555908]
[303.35964966 755.48968506]
[290.24746704 762.78485107]
[276.70306396 769.24230957]
[262.77993774 774.83660889]
[248.53300476 779.54559326]
[234.01850891 783.35070801]
[219.29373169 786.23693848]
[204.41677856 788.19287109]
[189.44636536 789.21081543]
[174.44157410 789.28680420]
[159.46162415 788.42041016]
[144.56564331 786.61517334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 155]
[44 154]
[45 153]
[46 152]
[50 151]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[80 120]
[85 119]
[86 118]
[87 117]
[88 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
