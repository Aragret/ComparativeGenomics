%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[170.64335632 591.77648926]
[162.65362549 579.07177734]
[155.71211243 565.76531982]
[149.86383057 551.94342041]
[145.14672852 537.69580078]
[141.59140015 523.11480713]
[139.22088623 508.29498291]
[138.05055237 493.33245850]
[138.08802795 478.32431030]
[139.33302307 463.36782837]
[141.77749634 448.56002808]
[145.40559387 433.99694824]
[150.19375610 419.77304077]
[156.11096191 405.98052979]
[163.11882019 392.70889282]
[171.17189026 380.04418945]
[180.21792603 368.06857300]
[190.19827271 356.85971069]
[201.04821777 346.49026489]
[212.69735718 337.02752686]
[225.07017517 328.53283691]
[217.60243225 315.52386475]
[210.03805542 302.57086182]
[202.37745667 289.67453003]
[194.71685791 276.77822876]
[187.05625916 263.88189697]
[179.39566040 250.98556519]
[171.73506165 238.08923340]
[164.07446289 225.19291687]
[156.41386414 212.29658508]
[148.75328064 199.40025330]
[135.94451904 197.99830627]
[126.13554382 189.34579468]
[123.05567932 176.43359375]
[128.04724121 163.92364502]
[120.57949829 150.91468811]
[113.11176300 137.90574646]
[105.64402008 124.89678955]
[98.17627716 111.88783264]
[90.51567841 98.99150848]
[82.66392517 86.21066284]
[74.81217194 73.42982483]
[66.96041107 60.64897919]
[51.85000229 56.86569214]
[44.06927490 43.79224777]
[47.76918411 29.41009712]
[39.91742706 16.62925339]
[32.06567383 3.84841132]
[24.21391678 -8.93243122]
[16.36216164 -21.71327400]
[2.54584241 -29.42170334]
[2.47636175 -44.31614685]
[-10.95709133 -37.61988068]
[-24.92979813 -32.13708496]
[-39.33240128 -27.91066170]
[-54.05217743 -24.97369194]
[-68.97392273 -23.34916496]
[-83.98085785 -23.04979324]
[-98.95552063 -24.07791901]
[-113.78072357 -26.42549515]
[-128.34042358 -30.07415009]
[-142.52067566 -34.99532700]
[-156.21051025 -41.15050888]
[-169.30276489 -48.49152756]
[-181.69497681 -56.96092224]
[-193.29016113 -66.49240875]
[-203.99757385 -77.01139069]
[-213.73341370 -88.43553925]
[-222.42146301 -100.67544556]
[-229.99374390 -113.63530731]
[-236.39099121 -127.21370697]
[-241.56314087 -141.30436707]
[-245.46969604 -155.79699707]
[-248.08009338 -170.57818604]
[-249.37390137 -185.53222656]
[-249.34098816 -200.54211426]
[-247.98162842 -215.49035645]
[-245.30644226 -230.25994873]
[-241.33638000 -244.73530579]
[-236.10249329 -258.80316162]
[-229.64576721 -272.35336304]
[-222.01673889 -285.27990723]
[-213.27508545 -297.48159790]
[-203.48925781 -308.86294556]
[-192.73582458 -319.33486938]
[-181.09895325 -328.81542969]
[-168.66972351 -337.23040771]
[-155.54539490 -344.51394653]
[-141.82872009 -350.60903931]
[-127.62702179 -355.46798706]
[-113.05146027 -359.05276489]
[-98.21611023 -361.33532715]
[-83.23708344 -362.29776001]
[-68.23160553 -361.93258667]
[-53.31712341 -360.24264526]
[-38.61036682 -357.24118042]
[-24.22643471 -352.95162964]
[-10.27790356 -347.40762329]
[3.12605858 -340.65252686]
[15.88054562 -332.73919678]
[27.88573456 -323.72958374]
[39.04766464 -313.69421387]
[49.27898026 -302.71157837]
[58.49960709 -290.86770630]
[66.63737488 -278.25521851]
[73.62859344 -264.97290039]
[79.41855621 -251.12464905]
[83.96192932 -236.81886292]
[87.22317505 -222.16752625]
[89.17675018 -207.28527832]
[89.80738068 -192.28862000]
[89.11012268 -177.29490662]
[87.09043884 -162.42147827]
[83.76412964 -147.78477478]
[79.15722656 -133.49932861]
[73.30579376 -119.67694092]
[66.25562286 -106.42579651]
[58.06189346 -93.84960938]
[48.78873444 -82.04681396]
[38.50872040 -71.10976410]
[27.30230713 -61.12408066]
[15.25720406 -52.16790009]
[28.51191330 -45.37364197]
[29.14300537 -29.56502914]
[36.99475861 -16.78418732]
[44.84651566 -4.00334406]
[52.69827271 8.77749825]
[60.55002594 21.55834007]
[75.05152130 24.75867844]
[83.19638824 37.60841751]
[79.74125671 52.79722595]
[87.59300995 65.57806396]
[95.44476318 78.35890961]
[103.29652405 91.13975525]
[107.98994446 93.48191071]
[111.03700256 98.28698730]
[111.18522644 104.42008972]
[118.65296936 117.42904663]
[126.12071228 130.43800354]
[133.58845520 143.44694519]
[141.05619812 156.45590210]
[158.02308655 160.71546936]
[166.49305725 175.63439941]
[161.64959717 191.73965454]
[169.31019592 204.63598633]
[176.97079468 217.53231812]
[184.63139343 230.42863464]
[192.29199219 243.32496643]
[199.95259094 256.22128296]
[207.61318970 269.11761475]
[215.27378845 282.01394653]
[222.93438721 294.91027832]
[230.00761414 300.69018555]
[230.61138916 308.05612183]
[238.07913208 321.06509399]
[251.65408325 314.66455078]
[265.70004272 309.37710571]
[280.12594604 305.23706055]
[294.83819580 302.27124023]
[309.74139404 300.49890137]
[324.73886108 299.93151855]
[339.73336792 300.57275391]
[354.62765503 302.41851807]
[369.32510376 305.45675659]
[383.73043823 309.66784668]
[397.75018311 315.02441406]
[411.29342651 321.49172974]
[424.27236938 329.02789307]
[436.60281372 337.58395386]
[448.20480347 347.10449219]
[459.00305176 357.52774048]
[468.92758179 368.78607178]
[477.91397095 380.80651855]
[485.90399170 393.51107788]
[492.84579468 406.81738281]
[498.69436646 420.63912964]
[503.41177368 434.88665771]
[506.96743774 449.46759033]
[509.33828735 464.28735352]
[510.50894165 479.24984741]
[510.47180176 494.25799561]
[509.22714233 509.21450806]
[506.78298950 524.02233887]
[503.15521240 538.58551025]
[498.36737061 552.80950928]
[492.45046997 566.60217285]
[485.44290161 579.87396240]
[477.39010620 592.53881836]
[468.34432983 604.51464844]
[458.36422729 615.72375488]
[447.51452637 626.09344482]
[435.86560059 635.55639648]
[423.49295044 644.05139160]
[410.47689819 651.52319336]
[396.90179443 657.92346191]
[382.85571289 663.21057129]
[368.42971802 667.35034180]
[353.71740723 670.31579590]
[338.81417847 672.08782959]
[323.81668091 672.65490723]
[308.82220459 672.01330566]
[293.92794800 670.16723633]
[279.23056030 667.12866211]
[264.82534790 662.91723633]
[250.80570984 657.56036377]
[237.26258850 651.09277344]
[224.28381348 643.55633545]
[211.95355225 634.99993896]
[200.35179138 625.47918701]
[189.55377197 615.05572510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 155]
[22 154]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[30 145]
[31 144]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[40 134]
[41 133]
[42 132]
[43 131]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[52 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
