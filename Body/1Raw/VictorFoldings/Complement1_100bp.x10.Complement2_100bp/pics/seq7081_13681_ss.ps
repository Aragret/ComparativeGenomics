%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[117.72428131 671.23291016]
[103.72212982 665.84246826]
[90.04119873 659.68218994]
[76.72377014 652.77111816]
[63.81099701 645.13061523]
[51.34280396 636.78430176]
[39.35772705 627.75799561]
[27.89281273 618.07952881]
[16.98349571 607.77886963]
[6.66349554 596.88781738]
[-3.03528666 585.44006348]
[-12.08287334 573.47100830]
[-20.45129776 561.01763916]
[-28.11469460 548.11846924]
[-35.04937744 534.81329346]
[-41.23390961 521.14331055]
[-46.64917755 507.15075684]
[-51.27843857 492.87887573]
[-55.10738754 478.37176514]
[-58.12418747 463.67428589]
[-60.31951523 448.83187866]
[-61.68658447 433.89038086]
[-62.22116852 418.89602661]
[-61.92161560 403.89511108]
[-60.78885269 388.93402100]
[-58.82637787 374.05902100]
[-56.04026413 359.31607056]
[-52.43911743 344.75076294]
[-48.03406525 330.40808105]
[-42.83873367 316.33236694]
[-36.86917114 302.56716919]
[-30.14383698 289.15496826]
[-22.68351555 276.13726807]
[-14.51126671 263.55429077]
[-5.65234947 251.44493103]
[3.86585259 239.84661865]
[14.01391888 228.79521179]
[24.76048279 218.32485962]
[36.07232666 208.46792603]
[47.91448593 199.25488281]
[60.25035858 190.71420288]
[73.04180908 182.87228394]
[86.24931335 175.75337219]
[99.83203125 169.37947083]
[113.74798584 163.77027893]
[108.92198944 149.56782532]
[97.50129700 140.00659180]
[100.38722992 124.45082855]
[95.56123352 110.24837494]
[90.62963867 96.08223724]
[85.59272766 81.95320892]
[80.55580902 67.82418060]
[75.51889038 53.69514847]
[73.79298401 68.59552765]
[68.83798218 82.75349426]
[60.89565277 95.47824097]
[50.35350800 106.14891815]
[37.72593307 114.24486542]
[23.62905312 119.37106323]
[8.75068283 121.27739716]
[-6.18322611 119.87085724]
[-20.44401550 115.22006226]
[-33.33587265 107.55194092]
[-44.22977066 97.24063873]
[-52.59417343 84.78926086]
[-58.02096558 70.80534363]
[-60.24535751 55.97119522]
[-59.15882492 41.01059723]
[-54.81437302 26.65351868]
[-47.42397690 13.60046959]
[-37.34823990 2.48833799]
[-25.07876968 -6.14069080]
[-11.21422672 -11.86558723]
[3.56890893 -14.40702057]
[18.54933548 -13.64098930]
[32.99612427 -9.60486889]
[46.20438766 -2.49559069]
[57.52965927 7.33996677]
[66.41935730 19.42190552]
[72.43776703 33.15440369]
[73.10755157 18.16936684]
[73.77733612 3.18432713]
[74.44712067 -11.80071163]
[75.11690521 -26.78574944]
[60.33218384 -29.44947243]
[46.03443527 -34.06010056]
[32.47882462 -40.53535080]
[19.90726852 -48.75966644]
[8.54411602 -58.58627319]
[-1.40784156 -69.83980560]
[-9.77099895 -82.31942749]
[-16.39610672 -95.80242920]
[-21.16493225 -110.04819489]
[-23.99237061 -124.80248260]
[-24.82796097 -139.80198669]
[-23.65679359 -154.77903748]
[-20.49976730 -169.46632385]
[-15.41322327 -183.60176086]
[-8.48793793 -196.93307495]
[0.15249920 -209.22235107]
[10.35388947 -220.25027466]
[21.93417740 -229.82003784]
[34.68669891 -237.76084900]
[48.38387299 -243.93101501]
[62.78125000 -248.22041321]
[77.62190247 -250.55249023]
[92.64096832 -250.88563538]
[107.57042694 -249.21388245]
[122.14383698 -245.56709290]
[136.10112000 -240.01033020]
[149.19320679 -232.64276123]
[161.18643188 -223.59588623]
[171.86676025 -213.03114319]
[181.04360962 -201.13706970]
[188.55319214 -188.12594604]
[194.26150513 -174.22994995]
[198.06666565 -159.69708252]
[199.90077209 -144.78669739]
[199.73107910 -129.76489258]
[197.56062317 -114.89974976]
[193.42816162 -100.45654297]
[187.40739441 -86.69303894]
[179.60581970 -73.85486603]
[170.16262817 -62.17113113]
[159.24636841 -51.85034561]
[147.05184937 -43.07669449]
[133.79667664 -36.00675201]
[119.71743011 -30.76669693]
[105.06535339 -27.45003700]
[90.10194397 -26.11596489]
[89.43215942 -11.13092613]
[88.76237488 3.85411239]
[88.09259033 18.83915138]
[87.42280579 33.82418823]
[89.64791870 48.65823364]
[94.68483734 62.78726196]
[99.72175598 76.91629028]
[104.75866699 91.04531860]
[110.21657562 96.97692108]
[109.76368713 105.42237854]
[114.58969116 119.62483215]
[126.35557556 130.20190430]
[123.12444305 144.74182129]
[127.95044708 158.94427490]
[142.40287781 154.91387939]
[157.05696106 151.69291687]
[171.86741638 149.29132080]
[186.78843689 147.71653748]
[201.77392578 146.97340393]
[216.77754211 147.06425476]
[231.75292969 147.98878479]
[246.65379333 149.74412537]
[261.43408203 152.32489014]
[276.04809570 155.72306824]
[290.45065308 159.92816162]
[304.59725952 164.92718506]
[318.44421387 170.70466614]
[331.94863892 177.24276733]
[345.06887817 184.52128601]
[357.76431274 192.51770020]
[369.99572754 201.20729065]
[381.72534180 210.56323242]
[392.91683960 220.55657959]
[403.53570557 231.15644836]
[413.54904175 242.33007812]
[422.92593384 254.04292297]
[431.63739014 266.25878906]
[439.65649414 278.93991089]
[446.95843506 292.04708862]
[453.52069092 305.53982544]
[459.32293701 319.37640381]
[464.34722900 333.51406860]
[468.57806396 347.90908813]
[472.00238037 362.51699829]
[474.60955811 377.29266357]
[476.39154053 392.19033813]
[477.34286499 407.16406250]
[477.46051025 422.16751099]
[476.74420166 437.15429688]
[475.19607544 452.07809448]
[472.82098389 466.89282227]
[469.62622070 481.55264282]
[465.62167358 496.01226807]
[460.81973267 510.22698975]
[455.23522949 524.15289307]
[448.88543701 537.74688721]
[441.78994751 550.96697998]
[433.97073364 563.77233887]
[425.45196533 576.12329102]
[416.25991821 587.98181152]
[406.42306519 599.31109619]
[395.97180176 610.07623291]
[384.93841553 620.24389648]
[373.35699463 629.78265381]
[361.26336670 638.66302490]
[348.69491577 646.85754395]
[335.69046021 654.34094238]
[322.29022217 661.09008789]
[308.53561401 667.08404541]
[294.46914673 672.30432129]
[280.13430786 676.73480225]
[265.57537842 680.36181641]
[250.83740234 683.17407227]
[235.96591187 685.16290283]
[221.00686646 686.32220459]
[206.00651550 686.64837646]
[191.01121521 686.14038086]
[176.06732178 684.79980469]
[161.22103882 682.63079834]
[146.51823425 679.64007568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 144]
[46 143]
[48 141]
[49 140]
[50 138]
[51 137]
[52 136]
[53 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
