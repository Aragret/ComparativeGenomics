%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[131.45747375 559.84997559]
[121.27230835 548.82745361]
[111.98336792 537.03973389]
[103.64791870 524.55957031]
[96.31735229 511.46389771]
[90.03686523 497.83343506]
[84.84517670 483.75222778]
[80.77430725 469.30706787]
[77.84934235 454.58706665]
[76.08831787 439.68295288]
[75.50209808 424.68658447]
[76.09429169 409.69049072]
[77.86125183 394.78704834]
[80.79207611 380.06820679]
[84.86870575 365.62469482]
[90.06599426 351.54556274]
[96.35190582 337.91760254]
[103.68769073 324.82482910]
[112.02810669 312.34799194]
[121.32174683 300.56399536]
[131.51130676 289.54553223]
[142.53395081 279.36047363]
[154.32173157 270.07165527]
[166.80198669 261.73632812]
[179.89773560 254.40588379]
[173.62037659 240.78257751]
[167.34301758 227.15925598]
[161.06565857 213.53593445]
[154.78829956 199.91262817]
[147.71118164 186.68710327]
[139.85943604 173.90625000]
[132.00767517 161.12541199]
[124.15592194 148.34457397]
[116.30416870 135.56372070]
[107.88954926 123.14623260]
[98.92884827 111.11685181]
[89.87885284 99.15451813]
[75.33555603 92.92529297]
[73.71691132 78.11890411]
[64.57810974 66.22427368]
[55.43930817 54.32963562]
[46.30050659 42.43500519]
[31.75721359 36.20578384]
[30.13856888 21.39939117]
[20.99976540 9.50475788]
[11.86096382 -2.38987517]
[2.72216129 -14.28450775]
[-6.41664124 -26.17914009]
[-19.07041931 -18.10626984]
[-32.37965012 -11.16697693]
[-46.24303436 -5.41407728]
[-60.55506897 -0.89135414]
[-75.20682526 2.36677122]
[-90.08679962 4.33550215]
[-105.08172607 4.99985504]
[-120.07749939 4.35477352]
[-134.95999146 2.40516758]
[-149.61592102 -0.83412516]
[-163.93376160 -5.33845139]
[-177.80451965 -11.07352924]
[-191.12266541 -17.99571228]
[-203.78680420 -26.05231476]
[-215.70057678 -35.18202209]
[-226.77328491 -45.31534958]
[-236.92068481 -56.37517548]
[-246.06552124 -68.27732849]
[-254.13821411 -80.93122101]
[-261.07733154 -94.24054718]
[-266.83001709 -108.10401154]
[-271.35253906 -122.41610718]
[-274.61047363 -137.06791687]
[-276.57897949 -151.94790649]
[-277.24313354 -166.94285583]
[-276.59783936 -181.93861389]
[-274.64804077 -196.82107544]
[-271.40853882 -211.47695923]
[-266.90399170 -225.79473877]
[-261.16873169 -239.66542053]
[-254.24636841 -252.98345947]
[-246.18959045 -265.64749146]
[-237.05970764 -277.56112671]
[-226.92622375 -288.63369751]
[-215.86625671 -298.78094482]
[-203.96397400 -307.92562866]
[-191.30996704 -315.99813843]
[-178.00054932 -322.93704224]
[-164.13700867 -328.68957520]
[-149.82484436 -333.21188354]
[-135.17298889 -336.46960449]
[-120.29296875 -338.43792725]
[-105.29801941 -339.10183716]
[-90.30226135 -338.45635986]
[-75.41983032 -336.50631714]
[-60.76398849 -333.26663208]
[-46.44627762 -328.76190186]
[-32.57567215 -323.02642822]
[-19.25772858 -316.10388184]
[-6.59381151 -308.04690552]
[5.31969786 -298.91687012]
[16.39212990 -288.78323364]
[26.53921318 -277.72311401]
[35.68372345 -265.82070923]
[43.75606155 -253.16659546]
[50.69479752 -239.85707092]
[56.44711304 -225.99343872]
[60.96923447 -211.68121338]
[64.22674561 -197.02932739]
[66.19484711 -182.14927673]
[66.85856628 -167.15431213]
[66.21286011 -152.15856934]
[64.26262665 -137.27616882]
[61.02271652 -122.62036896]
[56.51778793 -108.30271912]
[50.78212357 -94.43218994]
[43.85938263 -81.11434937]
[35.80224609 -68.45054626]
[26.67203903 -56.53716278]
[16.53824425 -45.46487427]
[5.47799206 -35.31794357]
[14.61679459 -23.42331123]
[23.75559616 -11.52867794]
[32.89439774 0.36595526]
[42.03320312 12.26058769]
[55.92282486 17.63902664]
[58.19514084 33.29620361]
[67.33393860 45.19083405]
[76.47274780 57.08546829]
[85.61154938 68.98010254]
[99.50116730 74.35853577]
[101.77348328 90.01571655]
[108.79132843 93.98086548]
[110.95822906 102.15615845]
[119.91892242 114.18553925]
[123.15486908 99.53873444]
[135.72515869 91.35414124]
[150.42897034 94.32025146]
[158.84329224 106.73794556]
[156.14802551 121.49381256]
[143.88711548 130.13500977]
[129.08500671 127.71197510]
[136.93676758 140.49281311]
[144.78851318 153.27365112]
[152.64027405 166.05450439]
[160.49203491 178.83534241]
[162.99591064 164.04579163]
[173.63368225 153.47044373]
[188.43769836 151.05363464]
[201.88644409 157.69677734]
[208.96386719 170.92213440]
[207.03025818 185.79698181]
[196.80680847 196.77337646]
[182.10661316 199.75738525]
[168.41160583 193.63526917]
[174.68896484 207.25857544]
[180.96632385 220.88189697]
[187.24369812 234.50521851]
[193.52105713 248.12852478]
[207.60211182 242.93641663]
[222.04711914 238.86509705]
[236.76704407 235.93968201]
[251.67111206 234.17820740]
[266.66744995 233.59152222]
[281.66357422 234.18325806]
[296.56704712 235.94975281]
[311.28598022 238.88012695]
[325.72961426 242.95631409]
[339.80892944 248.15318298]
[353.43707275 254.43867493]
[366.53005981 261.77404785]
[379.00717163 270.11410522]
[390.79144287 279.40737915]
[401.81024170 289.59658813]
[411.99563599 300.61892700]
[421.28479004 312.40643311]
[429.62051392 324.88641357]
[436.95135498 337.98193359]
[443.23211670 351.61227417]
[448.42407227 365.69338989]
[452.49523926 380.13842773]
[455.42050171 394.85839844]
[457.18185425 409.76248169]
[457.76837158 424.75881958]
[457.17648315 439.75494385]
[455.40982056 454.65838623]
[452.47930908 469.37728882]
[448.40298462 483.82089233]
[443.20596313 497.90014648]
[436.92031860 511.52822876]
[429.58480835 524.62115479]
[421.24465942 537.09814453]
[411.95126343 548.88232422]
[401.76193237 559.90106201]
[390.73947144 570.08630371]
[378.95187378 579.37536621]
[366.47180176 587.71093750]
[353.37622070 595.04162598]
[339.74581909 601.32226562]
[325.66464233 606.51409912]
[311.21954346 610.58514404]
[296.49957275 613.51025391]
[281.59545898 615.27142334]
[266.59912109 615.85778809]
[251.60301208 615.26574707]
[236.69956970 613.49896240]
[221.98069763 610.56829834]
[207.53713989 606.49182129]
[193.45793152 601.29461670]
[179.82991028 595.00885010]
[166.73707581 587.67321777]
[154.26014709 579.33294678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 157]
[26 156]
[27 155]
[28 154]
[29 153]
[30 144]
[31 143]
[32 142]
[33 141]
[34 140]
[35 133]
[36 132]
[37 130]
[39 128]
[40 127]
[41 126]
[42 125]
[44 123]
[45 122]
[46 121]
[47 120]
[48 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
