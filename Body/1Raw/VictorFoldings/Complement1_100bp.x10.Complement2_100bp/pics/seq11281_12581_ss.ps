%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[99.55847931 685.22283936]
[87.04500580 676.91375732]
[75.69684601 667.07263184]
[65.70035553 655.86108398]
[57.21967316 643.46325684]
[50.39406967 630.08270264]
[45.33562088 615.93914795]
[42.12739944 601.26477051]
[40.82207870 586.30072021]
[41.44109726 571.29254150]
[43.97428894 556.48675537]
[48.38006210 542.12646484]
[54.58605957 528.44750977]
[62.49038315 515.67449951]
[71.96322632 504.01715088]
[82.84905243 493.66693115]
[94.96908569 484.79376221]
[108.12432098 477.54336548]
[122.09873199 472.03482056]
[136.66284180 468.35855103]
[134.88037109 453.46481323]
[133.09791565 438.57110596]
[131.31544495 423.67739868]
[122.12057495 411.95971680]
[128.16316223 397.33789062]
[126.38069153 382.44418335]
[123.24657440 378.84051514]
[122.34298706 373.22976685]
[124.77370453 367.08135986]
[123.43547058 352.14117432]
[122.09723663 337.20098877]
[120.75900269 322.26080322]
[119.42076874 307.32061768]
[117.86024475 292.40200806]
[116.07778168 277.50830078]
[114.29531097 262.61456299]
[112.51284790 247.72085571]
[103.31797028 236.00318909]
[109.36056519 221.38136292]
[107.35654449 206.51583862]
[105.13143158 191.68179321]
[102.90631104 176.84774780]
[98.80536652 170.69924927]
[100.76020813 161.77645874]
[91.39189148 150.19699097]
[97.21611786 135.48681641]
[95.21209717 120.62129211]
[81.86261749 110.91773224]
[79.53602600 94.57898712]
[89.64630127 81.53482819]
[79.94747162 69.03509521]
[85.71118927 55.30087662]
[83.48607635 40.46683121]
[81.26095581 25.63278770]
[79.03584290 10.79874420]
[76.81072235 -4.03529978]
[74.58560944 -18.86934280]
[68.41650391 -5.19666243]
[56.98182297 4.51147699]
[42.48941040 8.38058567]
[27.73752975 5.66359949]
[15.57453728 -3.11487508]
[8.34891605 -16.25985146]
[7.45582008 -31.23324013]
[13.06769276 -45.14391708]
[24.10096931 -55.30594254]
[38.42529678 -59.75719452]
[53.27487183 -57.63820648]
[65.78247070 -49.35811615]
[73.53348541 -36.51447296]
[73.98008728 -51.50782394]
[74.42669678 -66.50117493]
[71.55418396 -75.17218781]
[74.99321747 -81.71395874]
[75.66300201 -96.69899750]
[76.33278656 -111.68403625]
[69.21941376 -125.81593323]
[77.51730347 -138.18502808]
[77.62896729 -153.18461609]
[77.18236542 -168.17796326]
[76.73575592 -183.17131042]
[74.32361603 -186.78178406]
[73.28982544 -190.58912659]
[73.52701569 -194.13583374]
[74.79027557 -197.04629517]
[76.73575592 -199.06451416]
[77.18236542 -214.05787659]
[77.62896729 -229.05122375]
[78.07557678 -244.04457092]
[77.96390533 -259.04415894]
[77.29412079 -274.02920532]
[76.62433624 -289.01422119]
[75.95455170 -303.99926758]
[61.24782181 -307.40728760]
[48.00648117 -314.65777588]
[37.21313095 -325.21267700]
[29.66870499 -338.28878784]
[25.93305206 -352.91574097]
[26.28338432 -368.00811768]
[30.69370079 -382.44595337]
[38.83672714 -395.15789795]
[50.10820007 -405.20065308]
[63.67169952 -411.82891846]
[78.52072144 -414.55087280]
[93.55337524 -413.16455078]
[107.65413666 -407.77276611]
[119.77662659 -398.77566528]
[129.02128601 -386.84091187]
[134.70210266 -372.85409546]
[136.39750671 -357.85314941]
[133.98170471 -342.95126343]
[127.63395691 -329.25421143]
[117.82530975 -317.77847290]
[105.28363037 -309.37554932]
[90.93959045 -304.66906738]
[91.60937500 -289.68402100]
[92.27915955 -274.69897461]
[92.94894409 -259.71392822]
[104.84339905 -268.85296631]
[119.44057465 -265.40008545]
[125.97997284 -251.90058899]
[119.64099884 -238.30583191]
[105.09650421 -234.63735962]
[93.06892395 -243.59796143]
[92.62232208 -228.60461426]
[92.17571259 -213.61126709]
[91.72910309 -198.61791992]
[91.72910309 -183.61791992]
[92.17571259 -168.62455750]
[92.62232208 -153.63121033]
[104.65151978 -162.59214783]
[119.19566345 -158.92230225]
[125.53335571 -145.32695007]
[118.99267578 -131.82806396]
[104.39517975 -128.37655640]
[92.50234222 -137.51524353]
[99.66362000 -124.45516968]
[91.31782532 -111.01425171]
[90.64804077 -96.02921295]
[89.97825623 -81.04417419]
[89.42004395 -66.05456543]
[88.97344208 -51.06121826]
[88.52683258 -36.06786728]
[89.41964722 -21.09446144]
[91.64476776 -6.26041698]
[93.86988831 8.57362652]
[96.09500122 23.40767097]
[98.32012177 38.24171448]
[100.54523468 53.07575607]
[110.08491516 64.51445770]
[104.48034668 79.30970764]
[115.49700165 85.57763672]
[120.95841217 97.01558685]
[118.90680695 109.52336121]
[110.07762909 118.61727905]
[112.08164215 133.48280334]
[121.59329224 146.12554932]
[115.62573242 159.77243042]
[117.74035645 174.62263489]
[119.96547699 189.45668030]
[122.19058990 204.29072571]
[126.00355530 209.69190979]
[126.44950104 215.35743713]
[124.25428009 219.59890747]
[133.57664490 232.38186646]
[127.40656281 245.93838501]
[129.18902588 260.83209229]
[130.97149658 275.72583008]
[132.75396729 290.61953735]
[136.40441895 296.13186646]
[136.68148804 301.80813599]
[134.36094666 305.98236084]
[135.69918823 320.92254639]
[137.03741455 335.86273193]
[138.37565613 350.80291748]
[139.71388245 365.74310303]
[141.27441406 380.66171265]
[143.05688477 395.55545044]
[152.37924194 408.33840942]
[146.20916748 421.89492798]
[147.99162292 436.78863525]
[149.77409363 451.68234253]
[151.55656433 466.57608032]
[166.57687378 466.71170044]
[181.45652771 468.76702881]
[195.95117188 472.70831299]
[209.82278442 478.47082520]
[222.84359741 485.95993042]
[234.79980469 495.05267334]
[245.49504089 505.59970093]
[254.75370789 517.42785645]
[262.42376709 530.34289551]
[268.37927246 544.13275146]
[272.52239990 558.57104492]
[274.78515625 573.42053223]
[275.13034058 588.43750000]
[273.55233765 603.37530518]
[270.07699585 617.98870850]
[264.76144409 632.03765869]
[257.69296265 645.29150391]
[248.98757935 657.53259277]
[238.78826904 668.55993652]
[227.26252747 678.19244385]
[214.59957886 686.27197266]
[201.00740051 692.66583252]
[186.70918274 697.26898193]
[171.93969727 700.00585938]
[156.94146729 700.83154297]
[141.96080017 699.73242188]
[127.24369049 696.72662354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 183]
[21 182]
[22 181]
[23 180]
[25 178]
[26 177]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 169]
[35 168]
[36 167]
[37 166]
[39 164]
[40 161]
[41 160]
[42 159]
[44 158]
[46 156]
[47 155]
[50 151]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[70 143]
[71 142]
[72 141]
[74 140]
[75 139]
[76 138]
[78 136]
[79 130]
[80 129]
[81 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
