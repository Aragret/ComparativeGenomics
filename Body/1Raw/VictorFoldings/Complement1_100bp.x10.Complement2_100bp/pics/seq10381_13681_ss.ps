%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[12.78158283 862.75628662]
[-2.20854092 863.35614014]
[-17.21065331 863.34008789]
[-32.19945908 862.70812988]
[-47.14968109 861.46136475]
[-62.03611374 859.60180664]
[-76.83364868 857.13269043]
[-91.51734161 854.05816650]
[-106.06243134 850.38336182]
[-120.44438171 846.11450195]
[-134.63894653 841.25878906]
[-148.62220764 835.82446289]
[-162.37055969 829.82061768]
[-175.86083984 823.25732422]
[-189.07028198 816.14581299]
[-201.97662354 808.49792480]
[-214.55810547 800.32659912]
[-226.79350281 791.64569092]
[-238.66218567 782.46972656]
[-250.14413452 772.81427002]
[-261.22000122 762.69555664]
[-271.87112427 752.13061523]
[-282.07949829 741.13732910]
[-291.82794189 729.73419189]
[-301.10003662 717.94042969]
[-309.88009644 705.77600098]
[-318.15332031 693.26129150]
[-325.90582275 680.41754150]
[-333.12445068 667.26629639]
[-339.79708862 653.82977295]
[-345.91244507 640.13067627]
[-351.46023560 626.19201660]
[-356.43112183 612.03735352]
[-360.81668091 597.69061279]
[-364.60952759 583.17584229]
[-367.80325317 568.51757812]
[-370.39251709 553.74060059]
[-372.37292480 538.86981201]
[-373.74114990 523.93017578]
[-374.49484253 508.94702148]
[-374.63278198 493.94552612]
[-374.15472412 478.95101929]
[-373.06146240 463.98880005]
[-371.35485840 449.08404541]
[-369.03778076 434.26196289]
[-366.11410522 419.54748535]
[-362.58883667 404.96542358]
[-358.46783447 390.54040527]
[-353.75808716 376.29675293]
[-348.46755981 362.25845337]
[-342.60513306 348.44918823]
[-336.18072510 334.89224243]
[-329.20513916 321.61050415]
[-321.69015503 308.62634277]
[-313.64843750 295.96163940]
[-305.09353638 283.63778687]
[-296.03991699 271.67553711]
[-286.50280762 260.09506226]
[-276.49829102 248.91590881]
[-266.04327393 238.15690613]
[-255.15534973 227.83621216]
[-243.85289001 217.97122192]
[-232.15493774 208.57858276]
[-220.08125305 199.67411804]
[-207.65216064 191.27284241]
[-194.88864136 183.38893127]
[-181.81219482 176.03567505]
[-168.44490051 169.22546387]
[-154.80926514 162.96978760]
[-140.92831421 157.27920532]
[-126.82543945 152.16331482]
[-112.52441406 147.63072205]
[-98.04936218 143.68907166]
[-83.42469025 140.34503174]
[-68.67506409 137.60421753]
[-53.82534409 135.47126770]
[-38.90057373 133.94976807]
[-23.92592430 133.04229736]
[-8.92664433 132.75036621]
[6.07197571 133.07449341]
[21.04464340 134.01409912]
[35.96611023 135.56762695]
[50.81121826 137.73243713]
[65.55493164 140.50489807]
[80.17239380 143.88032532]
[84.14449310 129.41580200]
[88.11658478 114.95127869]
[81.04122162 102.30670166]
[84.87813568 88.33442688]
[97.41889191 81.07662201]
[101.39098358 66.61209869]
[105.36308289 52.14757538]
[109.33517456 37.68305206]
[95.55862427 31.68411446]
[82.77607727 23.78555489]
[71.24777222 14.14818192]
[61.20841217 2.96819758]
[52.86238861 -9.52678776]
[46.37961197 -23.08238983]
[41.89206696 -37.42263794]
[39.49111176 -52.25558090]
[39.22562408 -67.27923584]
[41.10101700 -82.18774414]
[45.07910156 -96.67758942]
[51.07889175 -110.45377350]
[58.97824097 -123.23583984]
[68.61633301 -134.76354980]
[79.79693604 -144.80221558]
[92.29243469 -153.14746094]
[105.84844208 -159.62939453]
[120.18896484 -164.11605835]
[135.02206421 -166.51609802]
[150.04573059 -166.78065491]
[164.95413208 -164.90434265]
[179.44372559 -160.92535400]
[193.21954346 -154.92471313]
[206.00111389 -147.02456665]
[217.52821350 -137.38577271]
[227.56619263 -126.20454407]
[235.91067505 -113.70852661]
[242.39176941 -100.15211487]
[246.87753296 -85.81131744]
[249.27665710 -70.97807312]
[249.54028320 -55.95438766]
[247.66305542 -41.04610825]
[243.68316650 -26.55675697]
[237.68167114 -12.78131390]
[229.78074646 -0.00023301]
[220.14122009 11.52628136]
[208.95938110 21.56356430]
[196.46284485 29.90726852]
[182.90603638 36.38752747]
[168.56495667 40.87240982]
[153.73156738 43.27061081]
[138.70787048 43.53330612]
[123.79970551 41.65514755]
[119.82760620 56.11967468]
[115.85550690 70.58419800]
[111.88341522 85.04872131]
[118.95877838 97.69329834]
[115.12186432 111.66557312]
[102.58110809 118.92337799]
[98.60901642 133.38789368]
[94.63691711 147.85241699]
[108.92820740 152.41561890]
[123.02010345 157.56169128]
[136.88883972 163.28196716]
[150.51104736 169.56681824]
[163.86373901 176.40560913]
[176.92440796 183.78684998]
[189.67103577 191.69805908]
[202.08210754 200.12591553]
[214.13671875 209.05621338]
[225.81452942 218.47387695]
[237.09585571 228.36302185]
[247.96165466 238.70700073]
[258.39364624 249.48835754]
[268.37420654 260.68890381]
[277.88650513 272.28976440]
[286.91448975 284.27136230]
[295.44299316 296.61349487]
[303.45758057 309.29537964]
[310.94476318 322.29559326]
[317.89187622 335.59225464]
[324.28726196 349.16290283]
[330.12011719 362.98468018]
[335.38061523 377.03427124]
[340.05984497 391.28799438]
[344.14996338 405.72180176]
[347.64401245 420.31134033]
[350.53619385 435.03204346]
[352.82153320 449.85906982]
[354.49624634 464.76742554]
[355.55746460 479.73196411]
[356.00344849 494.72744751]
[355.83337402 509.72860718]
[355.04760742 524.71014404]
[353.64743042 539.64678955]
[351.63519287 554.51336670]
[349.01431274 569.28472900]
[345.78918457 583.93609619]
[341.96530151 598.44268799]
[337.54904175 612.78009033]
[332.54788208 626.92407227]
[326.97027588 640.85076904]
[320.82559204 654.53680420]
[314.12420654 667.95898438]
[306.87744141 681.09472656]
[299.09747314 693.92187500]
[290.79748535 706.41882324]
[281.99139404 718.56445312]
[272.69409180 730.33831787]
[262.92126465 741.72058105]
[252.68937683 752.69201660]
[242.01567078 763.23406982]
[230.91816711 773.32910156]
[219.41557312 782.95996094]
[207.52728271 792.11047363]
[195.27333069 800.76525879]
[182.67439270 808.90954590]
[169.75170898 816.52978516]
[156.52706909 823.61309814]
[143.02278137 830.14739990]
[129.26159668 836.12182617]
[115.26675415 841.52624512]
[101.06182098 846.35156250]
[86.67076111 850.58959961]
[72.11784363 854.23327637]
[57.42760468 857.27636719]
[42.62481689 859.71380615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 144]
[86 143]
[87 142]
[90 139]
[91 138]
[92 137]
[93 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
