%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[66.68646240 445.90725708]
[57.93926620 458.10128784]
[48.31539536 469.61596680]
[37.86740875 480.38848877]
[26.65237236 490.35995483]
[14.73154163 499.47592163]
[2.17002392 507.68661499]
[-10.96357441 514.94720459]
[-24.59752083 521.21795654]
[-38.65734863 526.46472168]
[-53.06627274 530.65881348]
[-67.74559021 533.77728271]
[-82.61512756 535.80310059]
[-97.59367371 536.72521973]
[-112.59941864 536.53869629]
[-127.55040741 535.24438477]
[-142.36497498 532.84948730]
[-156.96221924 529.36700439]
[-171.26242065 524.81597900]
[-185.18745422 519.22125244]
[-198.66127014 512.61340332]
[-211.61027527 505.02856445]
[-223.96377563 496.50808716]
[-235.65426636 487.09854126]
[-246.61790466 476.85131836]
[-256.79483032 465.82235718]
[-266.12942505 454.07192993]
[-274.57073975 441.66421509]
[-282.07266235 428.66696167]
[-288.59417725 415.15118408]
[-294.09973145 401.19064331]
[-298.55923462 386.86166382]
[-301.94830322 372.24243164]
[-304.24844360 357.41284180]
[-305.44711304 342.45388794]
[-305.53771973 327.44726562]
[-304.51980591 312.47491455]
[-302.39892578 297.61865234]
[-299.18667603 282.95956421]
[-294.90054321 268.57775879]
[-289.56399536 254.55175781]
[-283.20617676 240.95819092]
[-275.86175537 227.87129211]
[-267.57092285 215.36253357]
[-258.37890625 203.50022888]
[-248.33592224 192.34918213]
[-237.49684143 181.97029114]
[-225.92083740 172.42024231]
[-213.67114258 163.75120544]
[-200.81468201 156.01049805]
[-187.42164612 149.24043274]
[-173.56518555 143.47796631]
[-159.32101440 138.75457764]
[-144.76689148 135.09605408]
[-129.98231506 132.52238464]
[-115.04804993 131.04763794]
[-100.04565430 130.67985535]
[-85.05706024 131.42105103]
[-70.16413879 133.26716614]
[-55.44823456 136.20812988]
[-40.98971176 140.22787476]
[-26.86754036 145.30444336]
[-13.15885735 151.41011047]
[0.06146808 158.51153564]
[12.72122955 166.56991577]
[24.75128365 175.54125977]
[34.58186340 164.21166992]
[44.41244507 152.88208008]
[46.90951157 138.19828796]
[61.79779053 132.84573364]
[71.62837219 121.51614380]
[81.45895386 110.18655396]
[91.28953552 98.85695648]
[91.33261871 95.80939484]
[92.48553467 92.71015167]
[94.76956177 89.97032166]
[98.05381775 88.00310516]
[102.05829620 87.16815948]
[112.54579163 76.44377899]
[114.55269623 70.14426422]
[118.80183411 66.37042999]
[123.50881195 65.56208038]
[134.31097412 55.15470505]
[145.11312866 44.74732971]
[155.91528320 34.33995819]
[164.14408875 21.79855728]
[169.39080811 7.74608660]
[174.63752747 -6.30638456]
[179.88424683 -20.35885620]
[185.13096619 -34.41132736]
[190.37768555 -48.46379852]
[177.01358032 -55.31342316]
[164.53504944 -63.66824341]
[153.11087036 -73.41526031]
[142.89550781 -84.42267609]
[134.02714539 -96.54160309]
[126.62569427 -109.60816956]
[120.79125977 -123.44564819]
[116.60274506 -137.86691284]
[114.11679077 -152.67692566]
[113.36702728 -167.67541504]
[114.36357880 -182.65951538]
[117.09298706 -197.42660522]
[121.51831818 -211.77696228]
[127.57975006 -225.51652527]
[135.19528198 -238.45948792]
[144.26194763 -250.43078613]
[154.65710449 -261.26855469]
[166.24018860 -270.82620239]
[178.85455322 -278.97448730]
[192.32958984 -285.60317993]
[206.48307800 -290.62268066]
[221.12361145 -293.96508789]
[236.05316162 -295.58517456]
[251.06985474 -295.46109009]
[265.97061157 -293.59445190]
[280.55389404 -290.01052856]
[294.62246704 -284.75778198]
[307.98611450 -277.90728760]
[320.46408081 -269.55163574]
[331.88763428 -259.80383301]
[342.10223389 -248.79574585]
[350.96981812 -236.67622375]
[358.37039185 -223.60916138]
[364.20388794 -209.77130127]
[368.39144897 -195.34974670]
[370.87640381 -180.53956604]
[371.62518311 -165.54104614]
[370.62762451 -150.55700684]
[367.89721680 -135.79010010]
[363.47094727 -121.44003296]
[357.40859985 -107.70086670]
[349.79220581 -94.75842285]
[340.72473145 -82.78771973]
[330.32885742 -71.95065308]
[318.74511719 -62.39377594]
[306.13021851 -54.24634171]
[292.65472412 -47.61853409]
[278.50091553 -42.59997940]
[263.86016846 -39.25855637]
[248.93049622 -37.63945007]
[233.91380310 -37.76455688]
[219.01318359 -39.63218689]
[204.43014526 -43.21707916]
[199.18342590 -29.16460800]
[193.93670654 -15.11213779]
[188.69000244 -1.05966640]
[183.44328308 12.99280453]
[178.19656372 27.04527664]
[189.13771057 16.78413391]
[201.84909058 8.82040787]
[215.85546875 3.45182753]
[230.63317871 0.87910199]
[245.62979126 1.19841421]
[260.28460693 4.39782619]
[274.04977417 10.35772610]
[286.41064453 18.85529709]
[296.90512085 29.57285500]
[305.14083862 42.10971069]
[310.80993652 55.99716949]
[313.70040894 70.71603394]
[313.70425415 85.71603394]
[310.82131958 100.43638611]
[305.15936279 114.32674408]
[296.93005371 126.86782074]
[286.44107056 137.59075928]
[274.08456421 146.09466553]
[260.32244873 152.06161499]
[245.66926575 155.26853943]
[230.67283630 155.59553528]
[215.89379883 153.03038025]
[201.88467407 147.66899109]
[189.16921997 139.71177673]
[178.22280884 129.45623779]
[169.45466614 117.28579712]
[163.19261169 103.65544128]
[159.67074585 89.07475281]
[159.02075195 74.08883667]
[161.26690674 59.25796890]
[166.32264709 45.14211273]
[155.52049255 55.54948807]
[144.71833801 65.95686340]
[133.91618347 76.36423492]
[123.27017212 86.93128204]
[112.78267670 97.65566254]
[102.61912537 108.68753815]
[92.78854370 120.01713562]
[82.95796204 131.34672546]
[73.12738800 142.67631531]
[69.92716980 158.17048645]
[55.74203873 162.71266174]
[45.91145706 174.04225159]
[36.08087540 185.37184143]
[46.65856171 196.01702881]
[56.42118454 207.41432190]
[65.31542206 219.50149536]
[73.29269409 232.21252441]
[80.30944061 245.47799683]
[86.32733154 259.22543335]
[91.31349182 273.37979126]
[95.24069977 287.86370850]
[98.08750916 302.59811401]
[99.83835602 317.50253296]
[100.48368835 332.49557495]
[100.01998138 347.49530029]
[98.44976807 362.41983032]
[95.78162384 377.18765259]
[92.03011322 391.71807861]
[87.21573639 405.93176270]
[81.36478424 419.75109863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 193]
[67 192]
[68 191]
[70 189]
[71 188]
[72 187]
[73 186]
[78 185]
[79 184]
[82 183]
[83 182]
[84 181]
[85 180]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
