%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[80.89191437 458.56784058]
[78.66679382 443.73379517]
[76.44168091 428.89974976]
[72.34072876 422.75125122]
[74.29557037 413.82843018]
[72.29155731 398.96292114]
[70.28754425 384.09738159]
[68.28353119 369.23187256]
[62.45872498 383.05471802]
[51.84167480 393.65087891]
[38.00734711 399.44839478]
[23.00799179 399.58731079]
[9.06866837 394.04699707]
[-1.74280679 383.64929199]
[-7.82261515 369.93667603]
[-8.26885319 354.94332886]
[-3.01532412 340.89340210]
[7.15864182 329.87112427]
[20.74379730 323.51159668]
[35.72486496 322.75820923]
[49.87949371 327.72274780]
[61.10792923 337.66870117]
[67.74399567 351.11883545]
[68.85964966 336.16040039]
[69.97529602 321.20193481]
[71.09094238 306.24349976]
[61.20705032 295.15997314]
[62.12538528 279.97409058]
[73.81781006 269.68209839]
[74.93345642 254.72364807]
[72.92200470 251.82771301]
[72.21329498 247.81364441]
[73.31757355 243.30433655]
[76.44760895 239.12701416]
[70.27752686 225.57049561]
[79.59989929 212.78753662]
[73.42980957 199.23100281]
[82.75218201 186.44804382]
[84.53464508 171.55433655]
[86.31710815 156.66061401]
[78.55147552 140.92333984]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[87.55067444 72.55222321]
[96.57006836 60.69896317]
[98.13059235 45.78035736]
[91.87097168 31.25012016]
[100.89036560 19.39686012]
[86.42991638 9.41043949]
[79.05673218 -6.44347858]
[80.72023010 -23.75927544]
[90.87234497 -37.77525711]
[106.64321136 -44.68309021]
[107.75885773 -59.64154053]
[108.87451172 -74.59999847]
[109.99015808 -89.55844879]
[94.73559570 -96.20233917]
[82.69610596 -107.64958954]
[75.31468201 -122.50392151]
[73.46772766 -138.96218872]
[77.36100006 -155.03321838]
[86.50685883 -168.77877808]
[99.78527069 -178.54728699]
[115.58097076 -183.17225647]
[116.25075531 -198.15728760]
[116.92053986 -213.14233398]
[117.59032440 -228.12736511]
[118.26010895 -243.11241150]
[115.51701355 -251.82522583]
[119.05306244 -258.31506348]
[119.94588470 -273.28848267]
[120.83869934 -288.26190186]
[120.50372314 -303.25814819]
[118.94319916 -318.17675781]
[117.38267517 -333.09536743]
[105.38900757 -343.03466797]
[104.01893616 -358.18646240]
[113.56845093 -369.55935669]
[112.00792694 -384.47796631]
[110.44740295 -399.39657593]
[108.88687897 -414.31515503]
[107.32636261 -429.23376465]
[92.32160950 -430.21640015]
[77.69879913 -433.72088623]
[63.87865067 -439.64639282]
[51.25879669 -447.82238770]
[40.20233917 -458.01370239]
[31.02738953 -469.92706299]
[23.99793243 -483.21972656]
[19.31621933 -497.50921631]
[17.11695290 -512.38439941]
[17.46340942 -527.41729736]
[20.34562111 -542.17541504]
[25.68066025 -556.23400879]
[33.31502914 -569.18872070]
[43.02906799 -580.66674805]
[54.54328918 -590.33789062]
[67.52639771 -597.92388916]
[81.60485840 -603.20642090]
[96.37358856 -606.03350830]
[111.40767670 -606.32385254]
[126.27455139 -604.06909180]
[140.54646301 -599.33404541]
[153.81278992 -592.25500488]
[165.69183350 -583.03564453]
[175.84179688 -571.94122314]
[183.97065735 -559.29095459]
[189.84452820 -545.44879150]
[193.29440308 -530.81298828]
[194.22102356 -515.80468750]
[192.59773254 -500.85568237]
[188.47122192 -486.39608765]
[181.96025085 -472.84191895]
[173.25212097 -460.58319092]
[162.59739685 -449.97259521]
[150.30262756 -441.31542969]
[136.72155762 -434.86074829]
[122.24496460 -430.79428101]
[123.80548859 -415.87570190]
[125.36601257 -400.95709229]
[126.92653656 -386.03848267]
[128.48706055 -371.11987305]
[140.18336487 -361.96936035]
[141.97848511 -346.86199951]
[132.30128479 -334.65588379]
[133.86180115 -319.73727417]
[135.42233276 -304.81866455]
[142.54556274 -318.01940918]
[154.93576050 -326.47415161]
[169.82495117 -328.29409790]
[183.88682556 -323.07263184]
[193.97993469 -311.97628784]
[197.84945679 -297.48397827]
[194.63092041 -282.83334351]
[185.04336548 -271.29736328]
[171.22866821 -265.45321655]
[156.27307129 -266.60650635]
[143.51768494 -274.49954224]
[135.81210327 -287.36907959]
[134.91928101 -272.39566040]
[134.02647400 -257.42227173]
[133.24514771 -242.44262695]
[132.57536316 -227.45758057]
[131.90557861 -212.47254944]
[131.23579407 -197.48750305]
[130.56600952 -182.50247192]
[143.25303650 -177.98196411]
[154.16699219 -170.06146240]
[162.41873169 -159.37451172]
[167.33274841 -146.78050232]
[168.50239563 -133.29557800]
[165.82353210 -120.01059723]
[159.50376892 -108.00296783]
[150.04634094 -98.24918365]
[138.21011353 -91.54547882]
[124.94860840 -88.44280243]
[123.83296204 -73.48434448]
[122.71731567 -58.52589417]
[121.60166168 -43.56744003]
[132.74777222 -37.61911774]
[140.84609985 -27.86114502]
[144.66636658 -15.72058010]
[143.60737610 -2.99038911]
[137.79121399 8.43533516]
[128.05041504 16.84319115]
[115.80897522 20.95738411]
[122.18020630 34.42054367]
[113.04919434 47.34088135]
[111.48867035 62.25948715]
[117.85990906 75.72264099]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[112.13009644 138.32896423]
[110.52320099 150.72257996]
[101.21083069 158.44308472]
[99.42835999 173.33679199]
[97.64589691 188.23051453]
[103.68848419 202.85234070]
[94.49361420 214.56999207]
[100.53620148 229.19181824]
[91.34133148 240.90948486]
[89.89190674 255.83929443]
[88.77626038 270.79776001]
[98.81259155 282.71032715]
[97.46807861 297.86444092]
[86.04940033 307.35913086]
[84.93374634 322.31759644]
[83.81809998 337.27603149]
[82.70245361 352.23449707]
[83.14905548 367.22784424]
[85.15306854 382.09338379]
[87.15708160 396.95889282]
[89.16109467 411.82443237]
[91.27571869 426.67462158]
[93.50083923 441.50866699]
[95.72595978 456.34271240]
[110.20430756 461.30618286]
[120.70917511 472.43750000]
[124.82662964 487.17877197]
[121.61050415 502.14257812]
[111.79984283 513.89031982]
[97.64905548 519.72247314]
[82.40990448 518.29882812]
[69.58422089 509.94656372]
[62.11925888 496.58493042]
[61.73041534 481.28436279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[5 197]
[6 196]
[7 195]
[8 194]
[23 193]
[24 192]
[25 191]
[26 190]
[29 187]
[30 186]
[34 185]
[36 183]
[38 181]
[39 180]
[40 179]
[42 176]
[43 175]
[45 173]
[47 171]
[48 170]
[50 168]
[55 161]
[56 160]
[57 159]
[58 158]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[72 143]
[73 142]
[74 141]
[75 129]
[76 128]
[77 127]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
