%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[-10.02255630 561.62066650]
[-9.98432541 576.64245605]
[-11.90721607 591.54071045]
[-15.75832367 606.06048584]
[-21.47175217 619.95330811]
[-28.94973373 632.98156738]
[-38.06431580 644.92224121]
[-48.65953064 655.57098389]
[-60.55408478 664.74566650]
[-73.54444122 672.28924561]
[-87.40832520 678.07269287]
[-101.90850067 681.99694824]
[-116.79685211 683.99493408]
[-131.81861877 684.03247070]
[-146.71676636 682.10882568]
[-161.23635864 678.25701904]
[-175.12896729 672.54296875]
[-188.15682983 665.06433105]
[-200.09706116 655.94921875]
[-210.74533081 645.35345459]
[-219.91944885 633.45849609]
[-227.46240234 620.46777344]
[-233.24514771 606.60363770]
[-237.16873169 592.10327148]
[-239.16601562 577.21478271]
[-239.20281982 562.19305420]
[-237.27850342 547.29498291]
[-233.42601013 532.77557373]
[-227.71127319 518.88323975]
[-220.23204041 505.85571289]
[-211.11633301 493.91592407]
[-200.52009583 483.26815796]
[-188.62466431 474.09463501]
[-175.63359070 466.55227661]
[-161.76916504 460.77020264]
[-147.26861572 456.84729004]
[-132.38006592 454.85073853]
[-117.35829163 454.81463623]
[-102.46032715 456.73965454]
[-87.94110107 460.59283447]
[-74.04904938 466.30825806]
[-66.58130646 453.29928589]
[-59.11356735 440.29034424]
[-51.64582825 427.28140259]
[-44.17808533 414.27243042]
[-36.71034622 401.26348877]
[-37.08435822 386.37359619]
[-23.50367165 378.25720215]
[-16.03593063 365.24826050]
[-21.87273216 347.89752197]
[-13.02169323 331.50936890]
[5.30642557 326.71414185]
[12.38353157 313.48858643]
[19.46063614 300.26306152]
[25.53447151 286.54779053]
[30.57138634 272.41876221]
[27.55709648 257.83236694]
[39.47915268 247.43164062]
[44.51607132 233.30261230]
[49.55298615 219.17358398]
[54.58990479 205.04455566]
[46.04094315 192.87683105]
[46.29916000 177.83033752]
[55.47507095 165.67895508]
[70.21703339 161.20896912]
[75.25395203 147.07994080]
[80.29086304 132.95091248]
[85.32778168 118.82187653]
[90.36470032 104.69284821]
[93.35947418 89.99484253]
[94.25228882 75.02143860]
[95.14510345 60.04803085]
[88.24291992 45.81179428]
[96.72404480 33.56761932]
[97.61685944 18.59421349]
[81.69205475 10.28973579]
[71.03708649 -4.10244370]
[67.76246643 -21.65364456]
[72.48267365 -38.81749725]
[84.20153809 -52.14651108]
[100.52200317 -58.98451614]
[100.74533081 -73.98285675]
[100.96865845 -88.98119354]
[101.19198608 -103.97953033]
[101.08031464 -118.97911072]
[100.63371277 -133.97245789]
[100.18710327 -148.96582031]
[99.74050140 -163.95916748]
[89.70174408 -179.39628601]
[98.61635590 -194.51239014]
[97.94657135 -209.49743652]
[97.27678680 -224.48246765]
[96.60700226 -239.46751404]
[88.26120758 -252.90843201]
[95.42248535 -265.96850586]
[94.75270081 -280.95352173]
[80.35981750 -285.77114868]
[68.68167114 -295.46572876]
[61.29763412 -308.72622681]
[59.20633698 -323.75921631]
[62.69061279 -338.53164673]
[71.27924347 -351.04562378]
[83.81067657 -359.60876465]
[98.59014893 -363.06298828]
[113.61885834 -360.94110107]
[126.86429596 -353.53009033]
[136.53511047 -341.83224487]
[141.32342529 -327.42959595]
[140.58164978 -312.26998901]
[134.41009521 -298.40359497]
[123.64342499 -287.70578003]
[109.73773956 -281.62332153]
[110.40752411 -266.63827515]
[118.70541382 -254.26919556]
[111.59204102 -240.13729858]
[112.26182556 -225.15225220]
[112.93161011 -210.16722107]
[113.60139465 -195.18217468]
[122.31375122 -186.79043579]
[122.99440002 -174.31163025]
[114.73384857 -164.40577698]
[115.18045807 -149.41241455]
[115.62705994 -134.41906738]
[116.07366943 -119.42572021]
[118.37548065 -116.75476074]
[119.49794769 -112.83620453]
[118.86878967 -108.23648071]
[116.19032288 -103.75620270]
[115.96699524 -88.75786591]
[115.74366760 -73.75952911]
[115.52033997 -58.76118851]
[126.98599243 -54.49538422]
[136.60926819 -46.90266800]
[143.45280457 -36.70351791]
[146.84414673 -24.87319946]
[146.44180298 -12.54851818]
[142.26960754 -0.91856921]
[134.71580505 8.88997555]
[124.49701691 15.92201900]
[112.59026337 19.48703003]
[111.69744873 34.46043396]
[118.66349030 47.62567520]
[110.11850739 60.94084930]
[109.22569275 75.91425323]
[108.33287811 90.88765717]
[116.02256012 78.00865173]
[127.12648010 67.92386627]
[140.68405151 61.50574112]
[155.52239990 59.30950546]
[170.35786438 61.52515793]
[183.90701294 67.96102142]
[194.99772644 78.06032562]
[202.67054749 90.94938660]
[206.26170349 105.51316071]
[205.46049500 120.49175262]
[200.33627319 134.58935547]
[191.33230591 146.58638000]
[179.22753906 155.44496155]
[165.06915283 160.39875793]
[150.08198547 161.01921082]
[135.56259155 157.25263977]
[122.76702881 149.42489624]
[112.80224609 138.21316528]
[106.53029633 124.58735657]
[104.49372864 109.72976685]
[99.45681000 123.85879517]
[94.41989136 137.98782349]
[89.38298035 152.11685181]
[84.34606171 166.24588013]
[92.93579865 179.03347778]
[92.35551453 194.24914551]
[83.03717804 206.06578064]
[68.71893311 210.08146667]
[63.68201828 224.21049500]
[58.64509964 238.33952332]
[53.60818481 252.46855164]
[56.26219940 268.06558228]
[44.70041656 277.45568848]
[39.66350174 291.58471680]
[52.06599808 283.14801025]
[67.01762390 281.94430542]
[80.61006165 288.28826904]
[89.29026794 300.52157593]
[90.78926849 315.44650269]
[84.71523285 329.16168213]
[72.65588379 338.08200073]
[57.76351929 339.87573242]
[43.93096161 334.07397461]
[34.77400970 322.19329834]
[32.68616486 307.34017944]
[25.60905838 320.56570435]
[18.53195381 333.79122925]
[24.12650108 344.28112793]
[23.96437073 356.04864502]
[18.20150375 366.17202759]
[8.37009716 372.19360352]
[-3.02697825 372.71600342]
[-10.49471951 385.72494507]
[-10.65484905 401.54534912]
[-23.70139122 408.73123169]
[-31.16913223 421.74017334]
[-38.63687515 434.74914551]
[-46.10461426 447.75808716]
[-53.57235718 460.76702881]
[-61.04009628 473.77600098]
[-49.09899902 482.89001465]
[-38.44972229 493.48471069]
[-29.27448082 505.37884521]
[-21.73028183 518.36883545]
[-15.94621468 532.23242188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 205]
[42 204]
[43 203]
[44 202]
[45 201]
[46 200]
[48 198]
[49 197]
[52 192]
[53 191]
[54 190]
[55 179]
[56 178]
[58 176]
[59 175]
[60 174]
[61 173]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[70 145]
[71 144]
[72 143]
[74 141]
[75 140]
[81 131]
[82 130]
[83 129]
[84 128]
[85 124]
[86 123]
[87 122]
[88 121]
[90 118]
[91 117]
[92 116]
[93 115]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
