%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[98.63242340 749.93426514]
[83.99866486 746.61529541]
[69.61330414 742.34637451]
[55.53795242 737.14575195]
[41.83287430 731.03564453]
[28.55675697 724.04229736]
[15.76645660 716.19561768]
[3.51674032 707.52923584]
[-8.13993549 698.08020020]
[-19.15365410 687.88903809]
[-29.47725487 676.99932861]
[-39.06652832 665.45770264]
[-47.88041306 653.31365967]
[-55.88116455 640.61920166]
[-63.03451920 627.42858887]
[-69.30985260 613.79840088]
[-74.68029022 599.78692627]
[-79.12282562 585.45422363]
[-82.61845398 570.86169434]
[-85.15218353 556.07177734]
[-86.71318054 541.14776611]
[-87.29476166 526.15362549]
[-86.89442444 511.15356445]
[-85.51388550 496.21179199]
[-83.15906525 481.39230347]
[-79.84004211 466.75857544]
[-75.57103729 452.37322998]
[-70.37031555 438.29791260]
[-64.26015472 424.59286499]
[-57.26671982 411.31680298]
[-49.41996002 398.52655029]
[-40.75347519 386.27688599]
[-31.30437660 374.62023926]
[-21.11312866 363.60659790]
[-10.22336864 353.28305054]
[1.31826913 343.69384766]
[13.46236134 334.88003540]
[26.15690422 326.87936401]
[39.34753799 319.72607422]
[52.97777939 313.45083618]
[66.98925781 308.08047485]
[81.32197571 303.63803101]
[95.91456604 300.14248657]
[110.70452118 297.60885620]
[109.14399719 282.69024658]
[107.58347321 267.77163696]
[98.38707733 259.91333008]
[96.96488953 247.49716187]
[104.62118530 237.11718750]
[103.28295135 222.17700195]
[101.94471741 207.23681641]
[93.10279846 195.25059509]
[99.57805634 180.81515503]
[98.23982239 165.87496948]
[89.39790344 153.88874817]
[95.87316132 139.45330811]
[94.53492737 124.51313019]
[93.19669342 109.57294464]
[86.51588440 123.00301361]
[75.00221252 132.61735535]
[60.59593201 136.79576111]
[45.72475433 134.83410645]
[32.89473343 127.06297302]
[24.26795387 114.79192352]
[21.29817963 100.08884430]
[24.48586655 85.43147278]
[33.29383850 73.28982544]
[46.23779297 65.70997620]
[61.13645172 63.96928024]
[75.47912598 68.36106110]
[86.84881592 78.14523315]
[93.32994080 91.67460632]
[94.89045715 76.75599670]
[88.63084412 62.22576141]
[97.65023804 50.37250137]
[91.39062500 35.84226608]
[100.41001892 23.98900414]
[101.97054291 9.07039928]
[103.53106689 -5.84820509]
[105.09159088 -20.76680946]
[106.65210724 -35.68541336]
[108.21263123 -50.60401917]
[109.77315521 -65.52262115]
[101.88681030 -82.16254425]
[112.74102783 -95.95213318]
[114.07926178 -110.89231873]
[115.41749573 -125.83250427]
[107.28427887 -142.35316467]
[117.93199158 -156.30282593]
[119.04764557 -171.26129150]
[120.16329193 -186.21974182]
[121.27893829 -201.17819214]
[106.75599670 -205.11273193]
[93.24023438 -211.72488403]
[81.22023773 -220.77565002]
[71.13053131 -231.93782043]
[63.33584213 -244.80792236]
[58.11794662 -258.92068481]
[55.66546631 -273.76596069]
[56.06706238 -288.80706787]
[59.30821228 -303.50030518]
[65.27175140 -317.31454468]
[73.74210358 -329.75033569]
[84.41307068 -340.35821533]
[96.89890289 -348.75466919]
[110.74824524 -354.63619995]
[125.46044922 -357.79016113]
[140.50369263 -358.10256958]
[155.33415222 -355.56207275]
[169.41571045 -350.26058960]
[182.23936462 -342.38970947]
[193.34150696 -332.23400879]
[202.32083130 -320.16055298]
[208.85272217 -306.60580444]
[212.70108032 -292.05978394]
[213.72674561 -277.04830933]
[211.89268494 -262.11401367]
[207.26518250 -247.79681396]
[200.01150513 -234.61421204]
[190.39389038 -223.04278564]
[178.76000977 -213.50082397]
[165.53039551 -206.33325195]
[151.18331909 -201.79919434]
[136.23739624 -200.06254578]
[135.12174988 -185.10409546]
[134.00610352 -170.14562988]
[132.89044189 -155.18717957]
[140.54386902 -145.81959534]
[139.73683167 -133.34832764]
[130.35768127 -124.49427032]
[129.01945496 -109.55408478]
[127.68121338 -94.61389923]
[135.19432068 -85.13340759]
[134.20169067 -72.67554474]
[124.69176483 -63.96210098]
[123.13124084 -49.04349518]
[121.57071686 -34.12489319]
[120.01019287 -19.20628738]
[118.44966888 -4.28768206]
[116.88914490 10.63092232]
[115.32862091 25.54952812]
[121.69985962 39.01268768]
[112.56884766 51.93302536]
[118.94007874 65.39617920]
[109.80906677 78.31652069]
[108.24854279 93.23512268]
[108.13687897 108.23471069]
[109.47511292 123.17489624]
[110.81334686 138.11508179]
[119.75098419 151.16993713]
[113.18000793 164.53674316]
[114.51824188 179.47692871]
[123.45587921 192.53178406]
[116.88490295 205.89859009]
[118.22313690 220.83877563]
[119.56137085 235.77896118]
[130.50115967 250.59120178]
[122.50208282 266.21112061]
[124.06260681 281.12969971]
[125.62312317 296.04830933]
[140.61724854 295.46649170]
[155.61732483 295.86654663]
[170.55911255 297.24682617]
[185.37863159 299.60137939]
[200.01243591 302.92013550]
[214.39784241 307.18890381]
[228.47326660 312.38937378]
[242.17840576 318.49929810]
[255.45460510 325.49249268]
[268.24499512 333.33901978]
[280.49481201 342.00527954]
[292.15161133 351.45416260]
[303.16543579 361.64523315]
[313.48916626 372.53482056]
[323.07858276 384.07626343]
[331.89260864 396.22021484]
[339.89352417 408.91461182]
[347.04702759 422.10513306]
[353.32250977 435.73526001]
[358.69311523 449.74664307]
[363.13583374 464.07928467]
[366.63162231 478.67178345]
[369.16552734 493.46170044]
[370.72671509 508.38568115]
[371.30847168 523.37982178]
[370.90829468 538.37988281]
[369.52795410 553.32165527]
[367.17330933 568.14117432]
[363.85446167 582.77496338]
[359.58560181 597.16033936]
[354.38504028 611.23571777]
[348.27505493 624.94085693]
[341.28176880 638.21697998]
[333.43518066 651.00732422]
[324.76882935 663.25714111]
[315.31985474 674.91381836]
[305.12875366 685.92761230]
[294.23910522 696.25128174]
[282.69757080 705.84063721]
[270.55358887 714.65460205]
[257.85916138 722.65539551]
[244.66859436 729.80883789]
[231.03843689 736.08422852]
[217.02700806 741.45477295]
[202.69435120 745.89739990]
[188.10180664 749.39312744]
[173.31187439 751.92694092]
[158.38789368 753.48803711]
[143.39376831 754.06970215]
[128.39369202 753.66943359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 160]
[45 159]
[46 158]
[49 156]
[50 155]
[51 154]
[53 152]
[54 151]
[56 149]
[57 148]
[58 147]
[72 146]
[73 145]
[75 143]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[85 132]
[86 131]
[87 130]
[89 127]
[90 126]
[91 125]
[92 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
