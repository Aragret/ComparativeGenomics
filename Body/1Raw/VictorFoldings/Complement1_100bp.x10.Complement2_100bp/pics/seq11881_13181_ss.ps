%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[128.98991394 382.88662720]
[132.66456604 368.30947876]
[138.63009644 354.51062012]
[146.73197937 341.84747314]
[156.76036072 330.64801025]
[168.45549011 321.20236206]
[181.51441956 313.75518799]
[176.26770020 299.70272827]
[171.02098083 285.65023804]
[165.77427673 271.59777832]
[160.52755737 257.54531860]
[155.28083801 243.49282837]
[148.08509827 256.65420532]
[133.72984314 261.00466919]
[120.43840790 254.05212402]
[115.82474518 239.77928162]
[122.53175354 226.36227417]
[136.71736145 221.48698425]
[150.25477600 227.94548035]
[145.45225525 222.32786560]
[146.33293152 213.23599243]
[142.57662964 198.71392822]
[138.82032776 184.19186401]
[135.06402588 169.66981506]
[128.88825989 156.00013733]
[120.47364044 143.58264160]
[112.05902100 131.16514587]
[103.64440155 118.74765778]
[89.43536377 115.91052246]
[81.30710602 103.91561890]
[83.93810272 89.66696167]
[75.52348328 77.24946594]
[67.10886383 64.83197021]
[68.62117004 79.75553894]
[65.27001953 94.37641144]
[57.40908051 107.15160370]
[45.86792374 116.73292542]
[31.86451912 122.10923767]
[16.87668228 122.71315765]
[2.48611188 118.48095703]
[-9.78851891 109.85927582]
[-18.65184021 97.75797272]
[-23.16848373 83.45413208]
[-22.86179924 68.45726776]
[-17.76414871 54.35003662]
[-8.41350174 42.62120819]
[4.20334673 34.50855255]
[18.75490952 30.86822319]
[33.70552826 32.08438492]
[47.47742462 38.02870178]
[58.61733627 48.07399750]
[53.58042145 33.94496536]
[39.58001709 27.11661339]
[34.67314148 12.71601582]
[41.26921082 -0.58914995]
[36.23229599 -14.71817970]
[24.31023788 -25.11890602]
[27.32452774 -39.70531464]
[22.28761101 -53.83434677]
[17.25069427 -67.96337128]
[12.21377945 -82.09240723]
[-1.78662622 -88.92076111]
[-6.69350243 -103.32135773]
[-0.09743127 -116.62651825]
[-5.13434744 -130.75555420]
[-10.17126369 -144.88458252]
[-15.20817947 -159.01361084]
[-29.83522415 -155.61547852]
[-44.75428772 -153.90687561]
[-59.77087021 -153.91009521]
[-74.68920135 -155.62509155]
[-89.31478882 -159.02949524]
[-103.45695496 -164.07894897]
[-116.93132782 -170.70759583]
[-129.56224060 -178.82902527]
[-141.18504333 -188.33735657]
[-151.64817810 -199.10864258]
[-160.81524658 -211.00244141]
[-168.56675720 -223.86370850]
[-174.80162048 -237.52474976]
[-179.43858337 -251.80747986]
[-182.41717529 -266.52569580]
[-183.69856262 -281.48748779]
[-183.26603699 -296.49786377]
[-181.12525940 -311.36105347]
[-177.30412292 -325.88333130]
[-171.85244751 -339.87536621]
[-164.84129333 -353.15475464]
[-156.36209106 -365.54830933]
[-146.52536011 -376.89453125]
[-135.45936584 -387.04547119]
[-123.30835724 -395.86877441]
[-110.23075104 -403.24942017]
[-96.39704895 -409.09121704]
[-81.98758698 -413.31793213]
[-67.19023895 -415.87454224]
[-52.19791412 -416.72769165]
[-37.20605850 -415.86624146]
[-22.41013145 -413.30142212]
[-8.00302505 -409.06665039]
[5.82743406 -403.21719360]
[18.90093803 -395.82928467]
[31.04704666 -386.99923706]
[42.10741043 -376.84216309]
[51.93783569 -365.49050903]
[60.41016006 -353.09222412]
[67.41393280 -339.80895996]
[72.85784149 -325.81390381]
[76.67091370 -311.28948975]
[78.80344391 -296.42510986]
[79.22763062 -281.41452026]
[77.93793488 -266.45343018]
[74.95117188 -251.73686218]
[70.30628967 -237.45671082]
[64.06383514 -223.79911804]
[56.30519485 -210.94216919]
[47.13151550 -199.05346680]
[36.66239929 -188.28799438]
[25.03433037 -178.78610229]
[12.39890385 -170.67169189]
[-1.07915044 -164.05052185]
[3.95776582 -149.92149353]
[8.99468231 -135.79246521]
[14.03159809 -121.66343689]
[27.55690956 -115.53142548]
[32.86633301 -101.27433014]
[26.34280777 -87.12931824]
[31.37972450 -73.00028992]
[36.41664124 -58.87126160]
[41.45355606 -44.74223328]
[53.01533890 -35.35210800]
[50.36132431 -19.75509644]
[55.39823914 -5.62606621]
[68.92355347 0.50594509]
[74.23297119 14.76303768]
[67.70944977 28.90805054]
[72.74636841 43.03707886]
[79.52635956 56.41735458]
[87.94097900 68.83484650]
[96.35559845 81.25234222]
[110.56463623 84.08947754]
[118.69289398 96.08438110]
[116.06189728 110.33303833]
[124.47651672 122.75053406]
[132.89114380 135.16802979]
[141.30575562 147.58552551]
[139.30427551 132.71965027]
[141.01190186 117.81716919]
[146.32420349 103.78936768]
[154.91636658 91.49404144]
[166.26293945 81.68306732]
[179.67008972 74.95639038]
[194.31796265 71.72533417]
[209.31085205 72.18750000]
[223.73190308 76.31460571]
[236.69929504 83.85429382]
[247.42004395 94.34550476]
[255.23858643 107.14669037]
[259.67681885 121.47505951]
[260.46331787 136.45442200]
[257.55001831 151.16879272]
[251.11505127 164.71836853]
[241.55191040 176.27461243]
[229.44541931 185.13082886]
[215.53585815 190.74546814]
[200.67381287 192.77519226]
[185.76811218 191.09588623]
[171.73023987 185.81022644]
[159.41860962 177.24145508]
[149.58609009 165.91351318]
[153.34239197 180.43557739]
[157.09869385 194.95762634]
[160.85499573 209.47969055]
[164.71929932 223.97338867]
[169.33329773 238.24610901]
[174.58001709 252.29858398]
[179.82673645 266.35104370]
[185.07345581 280.40353394]
[190.32017517 294.45599365]
[195.56689453 308.50848389]
[210.31106567 305.57492065]
[225.33486938 305.04461670]
[240.24917603 306.93130493]
[254.66766357 311.18612671]
[268.21685791 317.69885254]
[280.54580688 326.30078125]
[291.33514404 336.76913452]
[300.30538940 348.83273315]
[307.22424316 362.17910767]
[311.91244507 376.46255493]
[314.24859619 391.31311035]
[314.17214966 406.34606934]
[311.68508911 421.17208862]
[306.85183716 435.40713501]
[299.79760742 448.68243408]
[290.70510864 460.65417480]
[279.80987549 471.01226807]
[267.39407349 479.48837280]
[253.77935791 485.86294556]
[239.31834412 489.97088623]
[224.38562012 491.70581055]
[209.36798096 491.02273560]
[194.65440369 487.93936157]
[180.62603760 482.53558350]
[167.64622498 474.95135498]
[156.05117798 465.38311768]
[146.14125061 454.07870483]
[138.17311096 441.33096313]
[132.35317993 427.47006226]
[128.83218384 412.85504150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 180]
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[19 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 146]
[26 145]
[27 144]
[28 143]
[31 140]
[32 139]
[33 138]
[51 137]
[52 136]
[55 133]
[56 132]
[58 130]
[59 129]
[60 128]
[61 127]
[64 124]
[65 123]
[66 122]
[67 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
