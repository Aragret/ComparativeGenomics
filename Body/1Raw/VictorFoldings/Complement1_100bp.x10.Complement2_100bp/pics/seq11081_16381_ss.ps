%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[44.29415894 370.09851074]
[41.67623520 384.87896729]
[37.72509003 399.36010742]
[32.47346115 413.42196655]
[25.96486282 426.94799805]
[18.25323296 439.82611084]
[9.40247250 451.94961548]
[-0.51407707 463.21801758]
[-11.41424274 473.53799438]
[-23.20770073 482.82397461]
[-35.79672241 490.99905396]
[-49.07699585 497.99545288]
[-62.93846512 503.75521851]
[-77.26627350 508.23062134]
[-91.94168854 511.38455200]
[-106.84310913 513.19091797]
[-121.84705353 513.63470459]
[-136.82919312 512.71228027]
[-151.66535950 510.43124390]
[-166.23265076 506.81054688]
[-180.41032410 501.88012695]
[-194.08090210 495.68090820]
[-207.13110352 488.26422119]
[-219.45280457 479.69152832]
[-230.94387817 470.03387451]
[-241.50912476 459.37127686]
[-251.06098938 447.79211426]
[-259.52029419 435.39230347]
[-266.81698608 422.27462769]
[-272.89059448 408.54776001]
[-277.69073486 394.32546997]
[-281.17770386 379.72558594]
[-283.32257080 364.86911011]
[-284.10754395 349.87915039]
[-283.52615356 334.87991333]
[-281.58319092 319.99566650]
[-278.29479980 305.34979248]
[-273.68817139 291.06365967]
[-267.80151367 277.25558472]
[-260.68362427 264.04003906]
[-252.39343262 251.52653503]
[-242.99966431 239.81874084]
[-232.58016968 229.01367188]
[-221.22126770 219.20089722]
[-209.01710510 210.46170044]
[-196.06878662 202.86849976]
[-182.48364258 196.48423767]
[-168.37422180 191.36180115]
[-153.85743713 187.54362488]
[-139.05360413 185.06138611]
[-124.08536530 183.93560791]
[-109.07678223 184.17565918]
[-94.15221405 185.77952576]
[-79.43532562 188.73393250]
[-65.04807281 193.01437378]
[-51.10968018 198.58540344]
[-37.73564148 205.40086365]
[-25.03678322 213.40425110]
[-13.11833382 222.52925110]
[-2.95478654 211.49737549]
[7.20876026 200.46549988]
[17.37230682 189.43362427]
[27.53585434 178.40174866]
[37.28181839 166.99928284]
[39.12073135 152.21862793]
[53.75515366 146.20663452]
[55.59406662 131.42597961]
[70.22849274 125.41397858]
[79.54337311 113.65672302]
[88.85825348 101.89947510]
[74.10649872 104.61711884]
[60.52531815 98.24910736]
[53.18016434 85.17054749]
[54.81059647 70.25942230]
[64.80850220 59.07720947]
[79.44490814 55.79459763]
[93.26080322 61.63592529]
[101.10319519 74.42251587]
[100.04663086 89.38637543]
[110.69264221 78.81932831]
[115.03639984 63.60609436]
[129.52006531 60.13154221]
[140.16607666 49.56449127]
[144.58453369 31.68828392]
[161.71415710 27.87477303]
[172.20166016 17.15039444]
[182.68914795 6.42601395]
[193.17665100 -4.29836607]
[189.15217590 -19.05474663]
[193.02859497 -33.74726868]
[203.66802979 -44.45561981]
[218.14208984 -48.37450409]
[232.53736877 -44.54811096]
[243.02487183 -55.27249146]
[253.51237488 -65.99687195]
[263.99987793 -76.72125244]
[254.22375488 -88.11058807]
[245.47749329 -100.30863190]
[237.82766724 -113.22255707]
[231.33247375 -126.75406647]
[226.04135132 -140.80018616]
[221.99458313 -155.25401306]
[219.22294617 -170.00552368]
[217.74755859 -184.94248962]
[217.57963562 -199.95118713]
[218.72045898 -214.91741943]
[221.16134644 -229.72724915]
[224.88372803 -244.26800537]
[229.85925293 -258.42898560]
[236.05006409 -272.10244751]
[243.40905762 -285.18426514]
[251.88020325 -297.57495117]
[261.39904785 -309.18017578]
[271.89315796 -319.91159058]
[283.28262329 -329.68753052]
[295.48077393 -338.43362427]
[308.39480591 -346.08328247]
[321.92642212 -352.57827759]
[335.97259521 -357.86920166]
[350.42648315 -361.91577148]
[365.17803955 -364.68719482]
[380.11502075 -366.16238403]
[395.12371826 -366.33010864]
[410.08993530 -365.18905640]
[424.89974976 -362.74795532]
[439.44042969 -359.02539062]
[453.60134888 -354.04965210]
[467.27471924 -347.85864258]
[480.35644531 -340.49948120]
[492.74700928 -332.02816772]
[504.35211182 -322.50915527]
[515.08337402 -312.01492310]
[524.85919189 -300.62530518]
[533.60510254 -288.42700195]
[541.25457764 -275.51287842]
[547.74938965 -261.98117065]
[553.04010010 -247.93490601]
[557.08648682 -233.48097229]
[559.85766602 -218.72937012]
[561.33264160 -203.79237366]
[561.50012207 -188.78367615]
[560.35888672 -173.81747437]
[557.91760254 -159.00770569]
[554.19482422 -144.46705627]
[549.21887207 -130.30621338]
[543.02770996 -116.63294220]
[535.66833496 -103.55130768]
[527.19683838 -91.16086578]
[517.67767334 -79.55591583]
[507.18328857 -68.82479095]
[495.79354858 -59.04915619]
[483.59512329 -50.30340958]
[470.68087769 -42.65411758]
[457.14907837 -36.15949249]
[443.10275269 -30.86896515]
[428.64877319 -26.82280159]
[413.89712524 -24.05179405]
[398.96011353 -22.57703400]
[383.95138550 -22.40974426]
[368.98522949 -23.55119705]
[354.17547607 -25.99270630]
[339.63488770 -29.71569061]
[325.47412109 -34.69181442]
[311.80093384 -40.88320541]
[298.71939087 -48.24274445]
[286.32907104 -56.71441650]
[274.72424316 -66.23374939]
[264.23675537 -55.50936890]
[253.74925232 -44.78499222]
[243.26174927 -34.06061172]
[247.40866089 -19.75436401]
[243.81398010 -5.19640160]
[233.34590149 5.67951775]
[218.74360657 9.88307953]
[203.90103149 6.18913507]
[193.41352844 16.91351509]
[182.92602539 27.63789368]
[172.43853760 38.36227417]
[172.26002502 50.45750809]
[163.61047363 59.47799683]
[150.73312378 60.21050262]
[140.08711243 70.77754974]
[136.50483704 85.23495483]
[121.25968933 89.46533203]
[110.61367798 100.03237915]
[100.61550903 111.21435547]
[91.30062866 122.97161102]
[81.98574066 134.72886658]
[79.48056793 150.35046387]
[65.51240540 155.52151489]
[63.00723267 171.14312744]
[49.03907013 176.31416321]
[64.01249695 177.20669556]
[72.77489471 189.38127136]
[68.86695862 203.86325073]
[55.16946411 209.97708130]
[41.77970505 203.21583557]
[38.56772995 188.56529236]
[28.40418434 199.59716797]
[18.24063683 210.62904358]
[8.07709026 221.66093445]
[-2.08645606 232.69281006]
[7.98288441 243.82490540]
[16.99819946 255.82653809]
[24.88478279 268.59826660]
[31.57728386 282.03424072]
[37.02024460 296.02316284]
[41.16856003 310.44906616]
[43.98786163 325.19241333]
[45.45477676 340.13107300]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 202]
[60 201]
[61 200]
[62 199]
[63 198]
[64 192]
[66 190]
[68 188]
[69 187]
[70 186]
[79 185]
[80 184]
[82 182]
[83 181]
[85 178]
[86 177]
[87 176]
[88 175]
[93 170]
[94 169]
[95 168]
[96 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
