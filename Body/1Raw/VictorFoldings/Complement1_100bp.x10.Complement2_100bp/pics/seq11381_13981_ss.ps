%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[78.45868683 796.78790283]
[63.60123444 798.89154053]
[48.63645172 799.99816895]
[33.63117599 800.10272217]
[18.65242195 799.20483398]
[3.76708984 797.30847168]
[-10.95833778 794.42211914]
[-25.45809174 790.55865479]
[-39.66741562 785.73535156]
[-53.52284241 779.97369385]
[-66.96249390 773.29949951]
[-79.92634583 765.74255371]
[-92.35649109 757.33654785]
[-104.19741821 748.11907959]
[-115.39624023 738.13128662]
[-125.90294647 727.41784668]
[-135.67059326 716.02648926]
[-144.65557861 704.00823975]
[-152.81776428 691.41662598]
[-160.12069702 678.30798340]
[-166.53175354 664.74084473]
[-172.02229309 650.77575684]
[-176.56781006 636.47515869]
[-180.14801025 621.90289307]
[-182.74687195 607.12402344]
[-184.35281372 592.20452881]
[-184.95864868 577.21112061]
[-184.56169128 562.21075439]
[-183.16369629 547.27038574]
[-180.77090454 532.45672607]
[-177.39401245 517.83599854]
[-173.04811096 503.47344971]
[-167.75257874 489.43328857]
[-161.53111267 475.77816772]
[-154.41145325 462.56906128]
[-146.42543030 449.86502075]
[-137.60870361 437.72277832]
[-128.00064087 426.19650269]
[-117.64416504 415.33776855]
[-106.58553314 405.19497681]
[-94.87413025 395.81350708]
[-82.56226349 387.23519897]
[-69.70491791 379.49841309]
[-56.35952377 372.63766479]
[-42.58568192 366.68362427]
[-28.44491386 361.66287231]
[-14.00037289 357.59783936]
[0.68342692 354.50668335]
[15.54090309 352.40319824]
[30.50569916 351.29678345]
[45.51097870 351.19238281]
[60.48971939 352.09045410]
[75.37503052 353.98699951]
[78.26029968 339.26712036]
[81.14556885 324.54721069]
[84.03084564 309.82733154]
[86.91611481 295.10742188]
[88.36553955 280.17761230]
[88.36553955 265.17761230]
[88.36553955 250.17762756]
[85.22203827 243.48881531]
[88.47886658 234.95471191]
[88.70219421 219.95637512]
[88.92552185 204.95803833]
[89.14884949 189.95970154]
[89.37217712 174.96136475]
[86.74761200 170.97128296]
[86.60171509 165.29011536]
[89.83208466 159.52156067]
[90.50186920 144.53651428]
[91.17165375 129.55148315]
[79.32904816 122.88977051]
[71.49850464 111.78535461]
[69.19985962 98.39349365]
[72.87924957 85.31345367]
[81.82255554 75.08393860]
[94.29394531 69.69042206]
[95.18675995 54.71701431]
[96.07957458 39.74361038]
[83.36893463 31.23555756]
[76.66774750 17.59770966]
[77.68582916 2.53683639]
[86.04984283 -9.90901470]
[99.43040466 -16.45318604]
[100.32321930 -31.42659187]
[101.21604156 -46.39999771]
[102.10885620 -61.37340164]
[103.00167084 -76.34680939]
[96.09948730 -90.58304596]
[104.58061218 -102.82722473]
[105.47342682 -117.80062866]
[106.36624146 -132.77403259]
[107.25905609 -147.74743652]
[108.15187836 -162.72084045]
[101.24969482 -176.95707703]
[109.73081970 -189.20126343]
[110.62363434 -204.17466736]
[96.40433502 -209.27252197]
[84.19806671 -218.17105103]
[74.99433136 -230.14884949]
[69.53923798 -244.23497009]
[68.27500153 -259.28750610]
[71.30412292 -274.08618164]
[78.38102722 -287.43136597]
[88.93202972 -298.24124146]
[102.10180664 -305.63943481]
[116.82274628 -309.02627563]
[131.90147400 -308.12719727]
[146.11564636 -303.01504517]
[158.31297302 -294.10427856]
[167.50466919 -282.11721802]
[172.94561768 -268.02563477]
[174.19471741 -252.97184753]
[171.15074158 -238.17620850]
[164.06042480 -224.83813477]
[153.49858093 -214.03887939]
[140.32136536 -206.65390015]
[125.59703827 -203.28184509]
[124.70422363 -188.30844116]
[131.67025757 -175.14320374]
[123.12528229 -161.82803345]
[122.23246765 -146.85462952]
[121.33965302 -131.88121033]
[120.44683075 -116.90781403]
[119.55401611 -101.93440247]
[126.52005768 -88.76916504]
[117.97507477 -75.45399475]
[117.08226013 -60.48058701]
[116.18944550 -45.50718307]
[115.29663086 -30.53377533]
[114.40381622 -15.56037045]
[126.91191101 -7.47254181]
[133.73771667 5.87902927]
[132.95887756 20.95416832]
[124.68457794 33.69907761]
[111.05297852 40.63642502]
[110.16016388 55.60983276]
[109.26734924 70.58323669]
[122.80667877 79.23741150]
[130.15521240 93.52751160]
[129.31820679 109.57455444]
[120.52288818 123.02261353]
[106.15669250 130.22126770]
[105.48690796 145.20629883]
[104.81712341 160.19134521]
[104.37051392 175.18469238]
[104.14718628 190.18302917]
[103.92385864 205.18136597]
[103.70053101 220.17970276]
[103.47720337 235.17803955]
[103.36553955 250.17762756]
[103.36553955 265.17761230]
[103.36553955 280.17761230]
[111.21787262 267.39712524]
[123.54338074 258.84835815]
[138.26499939 255.97186279]
[152.90185547 259.25244141]
[164.98741150 268.13720703]
[172.48501587 281.12896729]
[174.13121033 296.03836060]
[169.64857483 310.35290527]
[159.79249573 321.66033936]
[146.22392273 328.05514526]
[131.22937012 328.45971680]
[117.33570862 322.80584717]
[106.88425446 312.04632568]
[101.63600922 297.99270630]
[98.75074005 312.71258545]
[95.86546326 327.43249512]
[92.98019409 342.15237427]
[90.09491730 356.87228394]
[104.59471893 360.73556519]
[118.80410767 365.55868530]
[132.65960693 371.32015991]
[146.09933472 377.99420166]
[159.06327820 385.55099487]
[171.49353027 393.95684814]
[183.33457947 403.17416382]
[194.53352356 413.16180420]
[205.04035950 423.87512207]
[214.80816650 435.26632690]
[223.79330444 447.28451538]
[231.95564270 459.87597656]
[239.25872803 472.98452759]
[245.66995239 486.55160522]
[251.16067505 500.51660156]
[255.70637512 514.81719971]
[259.28674316 529.38940430]
[261.88580322 544.16827393]
[263.49194336 559.08770752]
[264.09796143 574.08111572]
[263.70120239 589.08148193]
[262.30337524 604.02185059]
[259.91076660 618.83557129]
[256.53405762 633.45629883]
[252.18833923 647.81890869]
[246.89300537 661.85913086]
[240.67169189 675.51434326]
[233.55220032 688.72351074]
[225.56634521 701.42767334]
[216.74977112 713.57006836]
[207.14184570 725.09643555]
[196.78550720 735.95532227]
[185.72700500 746.09820557]
[174.01571655 755.47985840]
[161.70396423 764.05828857]
[148.84671021 771.79528809]
[135.50140381 778.65618896]
[121.72763824 784.61041260]
[107.58693695 789.63128662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 153]
[59 152]
[60 151]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[69 145]
[70 144]
[71 143]
[77 138]
[78 137]
[79 136]
[84 131]
[85 130]
[86 129]
[87 128]
[88 127]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
