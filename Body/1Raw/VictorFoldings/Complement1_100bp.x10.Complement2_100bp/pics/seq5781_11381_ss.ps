%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[96.36574554 453.71310425]
[100.39258575 439.20523071]
[107.34813690 425.85180664]
[116.92832947 414.23657227]
[128.71435547 404.86730957]
[142.19099426 398.15359497]
[138.43469238 383.63153076]
[127.75675964 373.24734497]
[131.79168701 357.94931030]
[128.03538513 343.42724609]
[118.28964996 354.82992554]
[103.29390717 354.47250366]
[94.10246277 342.61849976]
[97.49091339 328.00622559]
[110.96141815 321.40731812]
[124.58295441 327.68496704]
[121.91716003 312.92373657]
[119.25136566 298.16253662]
[116.58557129 283.40130615]
[103.45640564 279.64071655]
[93.17904663 270.54650879]
[87.79692841 257.85076904]
[88.41286469 244.00883484]
[94.96362305 231.72454834]
[106.22109985 223.42201233]
[103.77536774 208.62274170]
[101.32964325 193.82347107]
[90.60546875 204.31118774]
[75.70141602 202.61734009]
[67.60418701 189.99058533]
[72.28276825 175.73889160]
[86.28827667 170.36807251]
[99.29544067 177.83593750]
[90.45352173 165.84971619]
[96.92877197 151.41427612]
[95.59053802 136.47409058]
[94.25230408 121.53391266]
[90.52459717 115.15222168]
[93.00706482 106.36159515]
[89.91053009 102.12774658]
[89.40657043 96.46035767]
[92.08766174 90.94232178]
[91.41787720 75.95728302]
[90.74809265 60.97224808]
[89.85527802 45.99884033]
[88.73962402 31.04038811]
[87.62397766 16.08193398]
[77.90231323 27.50512505]
[63.13389969 30.13074493]
[50.07065201 22.75839615]
[44.68490982 8.75861645]
[49.43896866 -5.46808147]
[62.15932846 -13.41744423]
[77.03041840 -11.45513058]
[87.25410461 -0.47657934]
[87.70071411 -15.46992970]
[88.14731598 -30.46327972]
[88.59392548 -45.45663071]
[89.04052734 -60.44997787]
[76.77474976 -67.17407227]
[68.64152527 -78.47304535]
[66.18181610 -92.10858917]
[69.81951904 -105.40957642]
[78.78974915 -115.79531860]
[91.29879761 -121.27627563]
[84.18542480 -135.40817261]
[92.48330688 -147.77726746]
[93.15309143 -162.76229858]
[84.29029846 -178.90332031]
[94.30451202 -193.31451416]
[94.75111389 -208.30786133]
[95.19772339 -223.30120850]
[95.64432526 -238.29457092]
[96.09093475 -253.28791809]
[96.53753662 -268.28125000]
[94.34457397 -272.02893066]
[93.53923798 -275.89102173]
[93.98710632 -279.41732788]
[95.42135620 -282.24743652]
[97.48352051 -284.14630127]
[91.00826263 -298.58172607]
[99.85018158 -310.56796265]
[101.18841553 -325.50814819]
[102.52664948 -340.44833374]
[103.86488342 -355.38851929]
[89.20559692 -358.66882324]
[75.09991455 -363.83453369]
[61.78918839 -370.79727173]
[49.50119400 -379.43786621]
[38.44618988 -389.60852051]
[28.81334686 -401.13516235]
[20.76749039 -413.82055664]
[14.44629765 -427.44763184]
[9.95793343 -441.78323364]
[7.37919760 -456.58206177]
[6.75421715 -471.59088135]
[8.09368515 -486.55285645]
[11.37468338 -501.21197510]
[16.54106712 -515.31744385]
[23.50443459 -528.62780762]
[32.14563370 -540.91540527]
[42.31679916 -551.96990967]
[53.84389496 -561.60223389]
[66.52967072 -569.64746094]
[80.15705872 -575.96801758]
[94.49288177 -580.45568848]
[109.29182434 -583.03375244]
[124.30066681 -583.65802002]
[139.26258850 -582.31781006]
[153.92155457 -579.03613281]
[168.02674866 -573.86907959]
[181.33680725 -566.90502930]
[193.62397766 -558.26324463]
[204.67802429 -548.09155273]
[214.30976868 -536.56402588]
[222.35441589 -523.87786865]
[228.67430115 -510.25018311]
[233.16131592 -495.91415405]
[235.73863220 -481.11508179]
[236.36218262 -466.10620117]
[235.02130127 -451.14434814]
[231.73890686 -436.48553467]
[226.57116699 -422.38058472]
[219.60653687 -409.07086182]
[210.96417236 -396.78408813]
[200.79194641 -385.73056030]
[189.26394653 -376.09933472]
[176.57739258 -368.05529785]
[162.94940186 -361.73605347]
[148.61315918 -357.24975586]
[133.81396484 -354.67312622]
[118.80506897 -354.05029297]
[117.46683502 -339.11010742]
[116.12860107 -324.16992188]
[114.79036713 -309.22973633]
[121.36134338 -295.86291504]
[112.42370605 -282.80807495]
[111.53089142 -267.83465576]
[111.08428192 -252.84130859]
[110.63768005 -237.84796143]
[110.19107056 -222.85461426]
[109.74446106 -207.86125183]
[109.29785919 -192.86790466]
[117.36193848 -183.85140991]
[117.11256409 -171.35655212]
[108.13813019 -162.09251404]
[107.46834564 -147.10748291]
[114.62962341 -134.04740906]
[106.28383636 -120.60649109]
[120.11170197 -112.24571991]
[127.88108063 -97.97013092]
[127.38823700 -81.63079071]
[118.67304230 -67.69017029]
[104.03388214 -60.00337219]
[103.58727264 -45.01002502]
[103.14067078 -30.01667404]
[102.69406128 -15.02332306]
[102.24745178 -0.02997341]
[102.58242798 14.96628571]
[103.69808197 29.92473984]
[104.81372833 44.88319397]
[107.78380585 48.62320328]
[108.43596649 54.26870728]
[105.73313141 60.30246353]
[106.40291595 75.28749847]
[107.07270050 90.27253723]
[107.96551514 105.24594879]
[109.19248962 120.19567871]
[110.53072357 135.13586426]
[111.86895752 150.07604980]
[120.80659485 163.13090515]
[114.23561859 176.49771118]
[116.12891388 191.37774658]
[118.57463837 206.17701721]
[121.02037048 220.97628784]
[136.55525208 226.63836670]
[147.05480957 239.28965759]
[149.72618103 255.41667175]
[143.93368530 270.60229492]
[131.34678650 280.73550415]
[134.01258850 295.49673462]
[136.67837524 310.25796509]
[139.34417725 325.01916504]
[142.55744934 339.67095947]
[146.31375122 354.19302368]
[157.26036072 365.61590576]
[152.95675659 379.87521362]
[156.71305847 394.39727783]
[171.75480652 393.73437500]
[186.60560608 396.21371460]
[200.61627197 401.72689819]
[213.17428589 410.03292847]
[223.73068237 420.76867676]
[231.82397461 433.46481323]
[237.10035706 447.56634521]
[239.32917786 462.45681763]
[238.41299438 477.48529053]
[234.39187622 491.99472046]
[227.44157410 505.35089111]
[217.86595154 516.96990967]
[206.08360291 526.34381104]
[192.60961914 533.06280518]
[178.03300476 536.83325195]
[162.99099731 537.49023438]
[148.14115906 535.00500488]
[134.13267517 529.48632812]
[121.57792664 521.17535400]
[111.02574921 510.43548584]
[102.93745422 497.73614502]
[97.66661835 483.63253784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[9 185]
[10 184]
[16 183]
[17 182]
[18 181]
[19 180]
[25 175]
[26 174]
[27 173]
[33 172]
[35 170]
[36 169]
[37 168]
[39 167]
[42 166]
[43 165]
[44 164]
[45 161]
[46 160]
[47 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[65 149]
[67 147]
[68 146]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[80 137]
[82 135]
[83 134]
[84 133]
[85 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
