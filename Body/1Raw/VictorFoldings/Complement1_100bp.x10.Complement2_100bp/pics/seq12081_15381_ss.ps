%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[76.27924347 726.77886963]
[63.13407898 719.53515625]
[50.64116669 711.21691895]
[38.88813019 701.88238525]
[27.95740509 691.59716797]
[17.92567253 680.43334961]
[8.86329269 668.46923828]
[0.83383614 655.78875732]
[-6.10637712 642.48089600]
[-11.90866470 628.63891602]
[-16.53232765 614.35998535]
[-19.94493484 599.74420166]
[-22.12254715 584.89416504]
[-23.04989052 569.91394043]
[-22.72046089 554.90869141]
[-21.13656807 539.98358154]
[-18.30932236 525.24340820]
[-14.25855446 510.79150391]
[-9.01268005 496.72921753]
[-2.60849357 483.15524292]
[4.90908194 470.16476440]
[13.48731613 457.84890747]
[23.06603813 446.29406738]
[33.57805634 435.58126831]
[44.94963837 425.78567505]
[57.10102081 416.97598267]
[69.94696808 409.21401978]
[83.39736938 402.55419922]
[97.35787964 397.04324341]
[111.73057556 392.71978760]
[108.62646484 378.04449463]
[105.52236176 363.36920166]
[102.41825104 348.69387817]
[96.26681519 362.37454224]
[84.15727234 371.22659302]
[69.25500488 372.93612671]
[55.45544815 367.05633545]
[46.36576462 355.12411499]
[44.36197281 340.25857544]
[49.96786880 326.34548950]
[61.71807480 317.02169800]
[76.54112244 314.72448730]
[90.56230164 320.05426025]
[100.11613464 331.61706543]
[99.22331238 316.64364624]
[98.33049774 301.67025757]
[96.32579041 299.71084595]
[94.97643280 296.83929443]
[94.63375092 293.30120850]
[95.55372620 289.46478271]
[97.85729980 285.78408813]
[90.11999512 273.05682373]
[97.85729980 259.25665283]
[97.85729980 244.25665283]
[97.85729980 229.25665283]
[97.29908752 214.26702881]
[96.18344116 199.30857849]
[95.06778717 184.35012817]
[93.95214081 169.39167786]
[91.91847992 167.46232605]
[90.52652740 164.61117554]
[90.13120270 161.07859802]
[90.99395752 157.22889709]
[93.24246979 153.51431274]
[93.01914215 138.51597595]
[92.79581451 123.51763916]
[92.57248688 108.51930237]
[82.86664581 119.95594025]
[68.31987762 123.61537933]
[54.35776520 118.13273621]
[46.18783188 105.55290222]
[46.85725784 90.56784821]
[56.11637115 78.76662445]
[70.51174164 74.55079651]
[84.67426300 79.49276733]
[93.32200623 91.75041199]
[94.88253021 76.83181000]
[88.62291718 62.30157089]
[97.64231110 50.44831085]
[86.27757263 40.04884720]
[83.25090027 25.12595749]
[89.51760101 11.44412804]
[102.48386383 4.16305494]
[104.04438782 -10.75555038]
[94.36717987 -22.96167564]
[96.16229248 -38.06903076]
[107.85861206 -47.21954346]
[109.41912842 -62.13814926]
[110.97965240 -77.05675507]
[112.54017639 -91.97535706]
[113.65583038 -106.93380737]
[114.32561493 -121.91885376]
[114.99539948 -136.90388489]
[107.88202667 -151.03578186]
[116.17990875 -163.40487671]
[116.84969330 -178.38990784]
[102.50566101 -183.09642029]
[89.96397400 -191.49931335]
[80.15532684 -202.97508240]
[73.80757904 -216.67210388]
[71.39177704 -231.57400513]
[73.08718872 -246.57493591]
[78.76799774 -260.56176758]
[88.01265717 -272.49652100]
[100.13515472 -281.49362183]
[114.23590851 -286.88540649]
[129.26856995 -288.27172852]
[144.11758423 -285.54977417]
[157.68109131 -278.92150879]
[168.95256042 -268.87875366]
[177.09558105 -256.16680908]
[181.50590515 -241.72895813]
[181.85623169 -226.63658142]
[178.12057495 -212.00964355]
[170.57615662 -198.93354797]
[159.78280640 -188.37863159]
[146.54145813 -181.12814331]
[131.83473206 -177.72012329]
[131.16494751 -162.73509216]
[138.32623291 -149.67501831]
[129.98043823 -136.23410034]
[129.31065369 -121.24906158]
[128.64086914 -106.26402283]
[130.43084717 -104.10668945]
[131.47413635 -101.11033630]
[131.44688416 -97.55580902]
[130.13278198 -93.83590698]
[127.45878601 -90.41483307]
[125.89826202 -75.49623108]
[124.33773804 -60.57762527]
[122.77721405 -45.65901947]
[132.32673645 -34.28614426]
[130.95666504 -19.13432693]
[118.96298981 -9.19502735]
[117.40246582 5.72357798]
[128.58129883 15.53028870]
[131.88102722 30.21278954]
[125.83171844 44.18630981]
[112.56091309 52.00883484]
[118.93215179 65.47199249]
[109.80113220 78.39233398]
[108.24061584 93.31093597]
[107.57082367 108.29597473]
[107.79415131 123.29431152]
[108.01747894 138.29264832]
[108.24080658 153.29098511]
[108.91059875 168.27603149]
[110.02624512 183.23448181]
[111.14189148 198.19293213]
[112.25753784 213.15138245]
[123.87461853 203.66226196]
[138.56813049 206.67901611]
[145.50656128 219.97782898]
[139.57516479 233.75527954]
[125.14633942 237.85517883]
[112.85729980 229.25665283]
[112.85729980 244.25665283]
[112.85729980 259.25665283]
[120.59459686 273.05682373]
[112.85729980 285.78408813]
[113.30390167 300.77743530]
[114.19672394 315.75085449]
[115.08953857 330.72424316]
[117.09355164 345.58978271]
[120.19766235 360.26507568]
[123.30177307 374.94039917]
[126.40588379 389.61569214]
[141.29823303 387.74899292]
[156.29454041 387.13500977]
[171.28964233 387.77807617]
[186.17834473 389.67364502]
[200.85621643 392.80841064]
[215.22029114 397.16040039]
[229.16981506 402.69912720]
[242.60694885 409.38568115]
[255.43742371 417.17318726]
[267.57125854 426.00701904]
[278.92333984 435.82519531]
[289.41403198 446.55886841]
[298.96975708 458.13275146]
[307.52349854 470.46563721]
[315.01522827 483.47103882]
[321.39239502 497.05773926]
[326.61032104 511.13040161]
[330.63232422 525.59033203]
[333.43026733 540.33612061]
[334.98446655 555.26434326]
[335.28405762 570.27020264]
[334.32693481 585.24853516]
[332.11978149 600.09423828]
[328.67813110 614.70318604]
[324.02609253 628.97296143]
[318.19628906 642.80334473]
[311.22961426 656.09741211]
[303.17495728 668.76190186]
[294.08880615 680.70794678]
[284.03491211 691.85180664]
[273.08374023 702.11523438]
[261.31216431 711.42633057]
[248.80273438 719.71978760]
[235.64320374 726.93731689]
[221.92585754 733.02838135]
[207.74693298 737.95025635]
[193.20588684 741.66839600]
[178.40470886 744.15673828]
[163.44723511 745.39776611]
[148.43835449 745.38281250]
[133.48336792 744.11206055]
[118.68717194 741.59429932]
[104.15354919 737.84729004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 167]
[31 166]
[32 165]
[33 164]
[44 163]
[45 162]
[46 161]
[51 160]
[53 158]
[54 157]
[55 156]
[56 150]
[57 149]
[58 148]
[59 147]
[64 146]
[65 145]
[66 144]
[67 143]
[76 142]
[77 141]
[79 139]
[83 135]
[84 134]
[87 131]
[88 130]
[89 129]
[90 128]
[91 123]
[92 122]
[93 121]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
