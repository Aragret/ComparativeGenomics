%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[53.70796967 703.28558350]
[39.86203003 697.26953125]
[28.15336990 687.74011230]
[19.45084572 675.40447998]
[14.40024281 661.17791748]
[13.37635136 646.11627197]
[16.45515060 631.33709717]
[23.40817261 617.93713379]
[33.71945572 606.91082764]
[46.62383652 599.07629395]
[61.16372299 595.01501465]
[61.16372299 580.01501465]
[61.16372299 565.01501465]
[61.16372299 550.01501465]
[50.39304352 544.41430664]
[42.98181534 534.70831299]
[40.38527298 522.70166016]
[43.15615082 510.66000366]
[50.82841492 500.88223267]
[61.99436569 495.26181030]
[62.44097137 480.26846313]
[62.88757706 465.27511597]
[63.33418274 450.28173828]
[63.78078842 435.28839111]
[64.22739410 420.29504395]
[64.67400360 405.30169678]
[65.12060547 390.30834961]
[65.56721497 375.31500244]
[53.02597427 383.54406738]
[38.72604752 379.01504517]
[33.20880508 365.06655884]
[40.54135132 351.98092651]
[55.31840897 349.40438843]
[66.64621735 359.23474121]
[60.27498245 345.77157593]
[69.40599823 332.85125732]
[70.96652222 317.93264771]
[72.52704620 303.01403809]
[64.52796173 287.39413452]
[75.46775055 272.58187866]
[76.80598450 257.64169312]
[78.14421844 242.70152283]
[79.48245239 227.76133728]
[80.82068634 212.82115173]
[73.30757904 203.34065247]
[74.30021667 190.88278198]
[83.81014252 182.16934204]
[85.37066650 167.25074768]
[86.93119049 152.33213806]
[88.49171448 137.41352844]
[90.05223846 122.49492645]
[91.61276245 107.57632446]
[80.61666107 117.77856445]
[65.73810577 119.68346405]
[52.52643204 112.58053589]
[45.90925980 99.11899567]
[48.35463333 84.31967163]
[58.95049286 73.70233917]
[73.74484253 71.22699738]
[87.21974945 77.81689453]
[94.34963226 91.01531219]
[97.67189026 76.38785553]
[100.99414825 61.76039505]
[99.56300354 57.66090775]
[99.51558685 53.71599960]
[100.63338470 50.34169769]
[102.58522797 47.84031677]
[104.97412872 46.37358093]
[109.16114044 31.96980095]
[113.34815216 17.56601906]
[117.53516388 3.16223621]
[113.95750427 -12.24915314]
[124.93988037 -22.31079865]
[129.12689209 -36.71458054]
[115.97566223 -44.05292511]
[104.79266357 -54.12907410]
[96.13658142 -66.43530273]
[90.43891907 -80.35256195]
[87.98245239 -95.18165588]
[88.88719940 -110.17833710]
[93.10458374 -124.59068298]
[100.42000580 -137.69677734]
[110.46376038 -148.84088135]
[122.72975159 -157.46626282]
[136.60095215 -163.14292908]
[151.38046265 -165.58920288]
[166.32655334 -164.68553162]
[170.51356506 -179.08930969]
[174.70057678 -193.49308777]
[178.88758850 -207.89688110]
[175.30992126 -223.30825806]
[186.29229736 -233.36991882]
[180.77557373 -245.02874756]
[184.55947876 -256.93948364]
[195.09570312 -262.88211060]
[199.49668884 -277.22195435]
[203.89768982 -291.56179810]
[208.29869080 -305.90164185]
[194.90473938 -312.74075317]
[182.90197754 -321.80191040]
[172.65516663 -332.80981445]
[164.47569275 -345.42993164]
[158.61210632 -359.27874756]
[155.24261475 -373.93542480]
[154.46960449 -388.95452881]
[156.31657410 -403.87966919]
[160.72737122 -418.25726318]
[167.56799316 -431.65045166]
[176.63052368 -443.65219116]
[187.63958740 -453.89773560]
[200.26063538 -462.07580566]
[214.11010742 -467.93780518]
[228.76715088 -471.30563354]
[243.78634644 -472.07693481]
[258.71127319 -470.22827148]
[273.08840942 -465.81585693]
[286.48080444 -458.97372437]
[298.48150635 -449.90982056]
[308.72579956 -438.89959717]
[316.90243530 -426.27761841]
[322.76287842 -412.42749023]
[326.12902832 -397.77005005]
[326.89865112 -382.75076294]
[325.04827881 -367.82604980]
[320.63421631 -353.44943237]
[313.79058838 -340.05780029]
[304.72531128 -328.05813599]
[293.71392822 -317.81506348]
[281.09103394 -309.63989258]
[267.24023438 -303.78103638]
[252.58241272 -300.41650391]
[237.56304932 -299.64862061]
[222.63853455 -301.50064087]
[218.23753357 -287.16079712]
[213.83654785 -272.82095337]
[209.43554688 -258.48110962]
[214.28074646 -241.61425781]
[200.69607544 -229.18290710]
[204.57322693 -214.80177307]
[193.29136658 -203.70986938]
[189.10435486 -189.30607605]
[184.91734314 -174.90229797]
[180.73033142 -160.49851990]
[193.83177185 -153.24909973]
[204.99678040 -143.26106262]
[213.66326904 -131.03294373]
[219.39395142 -117.17615509]
[221.89846802 -102.38440704]
[221.04801941 -87.39902496]
[216.88204956 -72.97172546]
[209.60643005 -59.82698822]
[199.58319092 -48.62559509]
[187.31266785 -39.93147659]
[173.40838623 -34.18328476]
[158.56643677 -31.67228127]
[143.53067017 -32.52756882]
[139.34365845 -18.12378693]
[143.22080994 -3.74265337]
[131.93894958 7.34924746]
[127.75193024 21.75302887]
[123.56492615 36.15681076]
[119.37791443 50.56059265]
[115.62161255 65.08264923]
[112.29935455 79.71011353]
[108.97708893 94.33757019]
[106.53136444 109.13684082]
[104.97084045 124.05545044]
[103.41031647 138.97406006]
[101.84979248 153.89265442]
[100.28926849 168.81126404]
[98.72875214 183.72987366]
[106.61509705 200.36979675]
[95.76087189 214.15937805]
[94.42263794 229.09956360]
[93.08440399 244.03974915]
[91.74617004 258.97994995]
[90.40793610 273.92010498]
[98.06423950 284.30010986]
[96.64204407 296.71624756]
[87.44564819 304.57455444]
[85.88512421 319.49316406]
[84.32460022 334.41177368]
[90.58422089 348.94201660]
[81.56481934 360.79525757]
[80.56056213 375.76159668]
[80.11396027 390.75494385]
[79.66735077 405.74832153]
[79.22074127 420.74166870]
[78.77413940 435.73501587]
[78.32752991 450.72836304]
[77.88092804 465.72171021]
[77.43431854 480.71505737]
[76.98771667 495.70840454]
[91.65700531 506.36532593]
[96.94625092 523.54388428]
[90.91803741 540.31024170]
[76.16372681 550.01501465]
[76.16372681 565.01501465]
[76.16372681 580.01501465]
[76.16372681 595.01501465]
[90.70361328 599.07629395]
[103.60799408 606.91082764]
[113.91927338 617.93713379]
[120.87229919 631.33709717]
[123.95109558 646.11627197]
[122.92720795 661.17791748]
[117.87660217 675.40447998]
[109.17407990 687.74011230]
[97.46541595 697.26953125]
[83.61947632 703.28558350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 200]
[12 199]
[13 198]
[14 197]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[34 184]
[36 182]
[37 181]
[38 180]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[61 165]
[62 164]
[63 163]
[68 162]
[69 161]
[70 160]
[71 159]
[73 157]
[74 156]
[87 143]
[88 142]
[89 141]
[90 140]
[92 138]
[95 136]
[96 135]
[97 134]
[98 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
