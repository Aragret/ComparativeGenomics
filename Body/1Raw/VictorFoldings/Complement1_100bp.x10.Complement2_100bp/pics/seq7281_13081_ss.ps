%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[82.73790741 779.62640381]
[67.73340607 779.84002686]
[52.74992371 779.01794434]
[37.85885620 777.16406250]
[23.13117218 774.28729248]
[8.63705444 770.40124512]
[-5.55442524 765.52453613]
[-19.37563705 759.68029785]
[-32.76071548 752.89648438]
[-45.64587402 745.20538330]
[-57.96970749 736.64361572]
[-69.67349243 727.25201416]
[-80.70144653 717.07531738]
[-91.00101471 706.16204834]
[-100.52312469 694.56420898]
[-109.22239685 682.33703613]
[-117.05736542 669.53881836]
[-123.99069977 656.23059082]
[-129.98936462 642.47570801]
[-135.02476501 628.33972168]
[-139.07290649 613.89007568]
[-142.11448669 599.19555664]
[-144.13504028 584.32617188]
[-145.12490845 569.35284424]
[-145.07939148 554.34686279]
[-143.99868774 539.37982178]
[-141.88796997 524.52294922]
[-138.75729370 509.84716797]
[-134.62156677 495.42230225]
[-129.50050354 481.31716919]
[-123.41849518 467.59893799]
[-116.40454865 454.33297729]
[-108.49208069 441.58255005]
[-99.71878815 429.40838623]
[-90.12648773 417.86853027]
[-79.76089478 407.01794434]
[-68.67140961 396.90835571]
[-56.91086197 387.58792114]
[-44.53531265 379.10110474]
[-31.60372925 371.48828125]
[-18.17774200 364.78579712]
[-4.32132864 359.02554321]
[9.89947605 354.23498535]
[24.41690254 350.43695068]
[39.16176987 347.64956665]
[54.06380844 345.88607788]
[69.05200958 345.15490723]
[84.05493164 345.45953369]
[85.39317322 330.51934814]
[86.73140717 315.57916260]
[87.95838165 300.62942505]
[89.07402802 285.67098999]
[90.18967438 270.71252441]
[90.63628387 255.71917725]
[82.71035004 243.10852051]
[90.24132538 229.19467163]
[90.01799774 214.19633484]
[89.79467010 199.19799805]
[89.57134247 184.19966125]
[89.34801483 169.20132446]
[89.12468719 154.20298767]
[88.90135956 139.20465088]
[79.76106262 151.09812927]
[65.67794800 156.26203918]
[51.01582336 153.09626770]
[40.31790924 142.58177185]
[36.89907074 127.97657776]
[41.81866837 113.80627441]
[53.55231857 104.46167755]
[68.46421814 102.83831024]
[81.93374634 109.43919373]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.92288208 47.66311646]
[99.37229919 32.73330688]
[100.71053314 17.79312325]
[102.04876709 2.85293794]
[103.38700104 -12.08724689]
[104.72523499 -27.02743149]
[98.24997711 -41.46286011]
[107.09189606 -53.44909286]
[108.43013000 -68.38928223]
[109.76836395 -83.32946777]
[111.10659790 -98.26964569]
[104.63134766 -112.70507812]
[113.47325897 -124.69130707]
[111.12194824 -133.51792908]
[114.94425964 -139.84341431]
[116.50478363 -154.76200867]
[117.95420074 -169.69181824]
[119.29243469 -184.63200378]
[120.63066864 -199.57218933]
[106.29914093 -204.21492004]
[93.36029816 -211.93077087]
[82.46316528 -222.33268738]
[74.15431976 -234.89895630]
[68.85054016 -248.99922180]
[66.81786346 -263.92623901]
[68.15824127 -278.93127441]
[72.80444336 -293.26168823]
[80.52342224 -306.19866943]
[90.92798615 -317.09326172]
[103.49626160 -325.39907837]
[117.59781647 -330.69943237]
[132.52532959 -332.72848511]
[147.53004456 -331.38449097]
[161.85932922 -326.73480225]
[174.79441833 -319.01269531]
[185.68652344 -308.60549927]
[193.98927307 -296.03521729]
[199.28620911 -281.93237305]
[201.31166077 -267.00436401]
[199.96400452 -251.99996948]
[195.31086731 -237.67181396]
[187.58561707 -224.73858643]
[177.17576599 -213.84901428]
[164.60346985 -205.54931641]
[150.49934387 -200.25578308]
[135.57086182 -198.23396301]
[134.23262024 -183.29377747]
[132.89439392 -168.35359192]
[135.42860413 -161.41099548]
[131.42338562 -153.20149231]
[129.86286926 -138.28288269]
[128.41345215 -123.35307312]
[134.98442078 -109.98626709]
[126.04678345 -96.93141174]
[124.70854950 -81.99122620]
[123.37031555 -67.05104828]
[122.03208160 -52.11085892]
[128.60305786 -38.74405289]
[119.66542053 -25.68919754]
[118.32718658 -10.74901295]
[116.98895264 4.19117212]
[115.65071869 19.13135719]
[114.31248474 34.07154083]
[116.84670258 41.01412964]
[112.84148407 49.22364044]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[103.89969635 138.98132324]
[104.12302399 153.97966003]
[104.34635162 168.97799683]
[104.56967926 183.97633362]
[104.79300690 198.97467041]
[105.01633453 213.97300720]
[105.23966217 228.97134399]
[113.18157196 242.65480042]
[105.63462067 255.49584961]
[116.83205414 245.51499939]
[131.81463623 246.23753357]
[141.99967957 257.24957275]
[141.55270386 272.24291992]
[130.72978210 282.62869263]
[115.73076630 282.45745850]
[105.14813232 271.82818604]
[104.03247833 286.78662109]
[102.91683197 301.74508667]
[105.39929962 310.53570557]
[101.67158508 316.91741943]
[100.33335114 331.85760498]
[98.99511719 346.79779053]
[113.81336212 349.16430664]
[128.43301392 352.54754639]
[142.78442383 356.93133545]
[156.79919434 362.29479980]
[170.41053772 368.61239624]
[183.55358887 375.85400391]
[196.16571045 383.98513794]
[208.18681335 392.96701050]
[219.55958557 402.75680542]
[230.22985840 413.30792236]
[240.14675903 424.57006836]
[249.26304626 436.48953247]
[257.53527832 449.00958252]
[264.92401123 462.07046509]
[271.39404297 475.61001587]
[276.91455078 489.56369019]
[281.45922852 503.86495972]
[285.00640869 518.44567871]
[287.53921509 533.23645020]
[289.04550171 548.16668701]
[289.51818848 563.16522217]
[288.95495605 578.16070557]
[287.35848999 593.08154297]
[284.73641968 607.85668945]
[281.10125732 622.41577148]
[276.47030640 636.68933105]
[270.86563110 650.60937500]
[264.31393433 664.10961914]
[256.84646606 677.12567139]
[248.49877930 689.59552002]
[239.31066895 701.45971680]
[229.32592773 712.66174316]
[218.59213257 723.14825439]
[207.16044617 732.86920166]
[195.08532715 741.77832031]
[182.42433167 749.83312988]
[169.23777771 756.99517822]
[155.58853149 763.23046875]
[141.54162598 768.50921631]
[127.16400909 772.80627441]
[112.52417755 776.10113525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 169]
[49 168]
[50 167]
[51 165]
[52 164]
[53 163]
[54 156]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[72 147]
[73 146]
[74 144]
[75 143]
[76 142]
[77 141]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[84 133]
[85 132]
[86 131]
[87 130]
[89 128]
[91 127]
[92 126]
[93 124]
[94 123]
[95 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
