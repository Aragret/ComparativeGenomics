%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[-22.49669647 456.58660889]
[-24.28601265 471.49401855]
[-27.64977646 486.12677002]
[-32.54987335 500.31906128]
[-38.93078232 513.91009521]
[-46.72020340 526.74584961]
[-55.82987213 538.68090820]
[-66.15657806 549.58007812]
[-77.58329773 559.31976318]
[-89.98057556 567.78973389]
[-103.20792389 574.89385986]
[-117.11547852 580.55181885]
[-131.54563904 584.69940186]
[-146.33493042 587.28955078]
[-161.31575012 588.29309082]
[-176.31837463 587.69848633]
[-191.17279053 585.51257324]
[-205.71070862 581.76013184]
[-219.76739502 576.48358154]
[-233.18356323 569.74279785]
[-245.80722046 561.61413574]
[-257.49533081 552.18963623]
[-268.11541748 541.57617188]
[-277.54718018 529.89398193]
[-285.68377686 517.27545166]
[-292.43295288 503.86346436]
[-297.71829224 489.81008911]
[-301.47985840 475.27453613]
[-303.67507935 460.42147827]
[-304.27902222 445.41921997]
[-303.28491211 430.43777466]
[-300.70394897 415.64688110]
[-296.56542969 401.21411133]
[-290.91619873 387.30303955]
[-283.82031250 374.07122803]
[-275.35812378 361.66867065]
[-265.62554932 350.23583984]
[-254.73287964 339.90231323]
[-242.80351257 330.78518677]
[-229.97261047 322.98773193]
[-216.38557434 316.59832764]
[-202.19635010 311.68936157]
[-187.56571960 308.31643677]
[-172.65945435 306.51779175]
[-157.64643860 306.31381226]
[-142.69679260 307.70678711]
[-127.97991943 310.68093872]
[-113.66255951 315.20257568]
[-99.90694427 321.22048950]
[-86.86892700 328.66644287]
[-78.08832550 316.50497437]
[-69.30772400 304.34353638]
[-60.52711868 292.18206787]
[-51.74651718 280.02062988]
[-51.94450760 276.50024414]
[-50.44720459 272.70904541]
[-47.14589691 269.44488525]
[-42.29231262 267.52401733]
[-32.97742844 255.76675415]
[-23.66254616 244.00950623]
[-14.34766388 232.25225830]
[-5.03278112 220.49499512]
[4.28210163 208.73774719]
[6.12101269 193.95709229]
[20.75543785 187.94509888]
[30.07032013 176.18783569]
[31.90923119 161.40719604]
[46.54365540 155.39518738]
[55.85853958 143.63793945]
[46.69953537 131.80877686]
[40.63690567 118.13176727]
[38.02284241 103.40143585]
[39.00920105 88.47349548]
[43.53868103 74.21516418]
[51.34815979 61.45475006]
[61.98395538 50.93353271]
[74.82820892 43.26272202]
[89.13475800 38.88793564]
[104.07250214 38.06331635]
[118.77366638 40.83677292]
[132.38421631 47.04718018]
[141.07403564 34.82069778]
[149.11520386 22.15817070]
[149.98159790 6.36070490]
[163.33599854 -0.23545699]
[171.37716675 -12.89798164]
[179.41833496 -25.56050682]
[187.45950317 -38.22303009]
[195.50068665 -50.88555527]
[203.54185486 -63.54808044]
[211.58302307 -76.21060944]
[219.62420654 -88.87313080]
[227.66537476 -101.53565979]
[235.70654297 -114.19818115]
[242.38674927 -127.62855530]
[247.63346863 -141.68103027]
[252.88017273 -155.73350525]
[258.12689209 -169.78596497]
[263.37362671 -183.83843994]
[250.34472656 -191.34162903]
[238.72862244 -200.88710022]
[228.84217834 -212.21441650]
[220.95512390 -225.01458740]
[215.28262329 -238.93840027]
[211.97941589 -253.60600281]
[211.13562012 -268.61724854]
[212.77426147 -283.56265259]
[216.85063171 -298.03445435]
[223.25352478 -311.63787842]
[231.80825806 -324.00177002]
[242.28146362 -334.78890991]
[254.38740540 -343.70492554]
[267.79586792 -350.50665283]
[282.14099121 -355.00851440]
[297.03149414 -357.08770752]
[312.06112671 -356.68746948]
[326.81985474 -353.81872559]
[340.90509033 -348.55978394]
[353.93252563 -341.05410767]
[365.54678345 -331.50640869]
[375.43106079 -320.17715454]
[383.31564331 -307.37548828]
[388.98544312 -293.45056152]
[392.28582764 -278.78231812]
[393.12673950 -263.77090454]
[391.48522949 -248.82583618]
[387.40606689 -234.35481262]
[381.00054932 -220.75263977]
[372.44345093 -208.39038086]
[361.96817017 -197.60527039]
[349.86047363 -188.69157410]
[336.45071411 -181.89242554]
[322.10470581 -177.39334106]
[307.21380615 -175.31703186]
[292.18426514 -175.72016907]
[277.42608643 -178.59172058]
[272.17938232 -164.53924561]
[266.93264771 -150.48678589]
[261.68594360 -136.43431091]
[256.43920898 -122.38183594]
[268.09667969 -131.82130432]
[282.45709229 -136.15473938]
[297.39016724 -134.73930359]
[310.68066406 -127.78498840]
[320.35702515 -116.32339478]
[324.98379517 -102.05480194]
[323.87466431 -87.09586334]
[317.19415283 -73.66564941]
[305.93325806 -63.75645828]
[291.76245117 -58.83824921]
[276.78393555 -59.64061737]
[263.21966553 -66.04453278]
[253.08178711 -77.10001373]
[247.87423706 -91.16704559]
[248.36907959 -106.15700531]
[240.32789612 -93.49448395]
[232.28672791 -80.83195496]
[224.24555969 -68.16943359]
[216.20437622 -55.50690842]
[208.16320801 -42.84438324]
[200.12203979 -30.18185806]
[192.08085632 -17.51933479]
[184.03968811 -4.85680914]
[175.99851990 7.80571604]
[175.70729065 22.69747353]
[161.77772522 30.19934464]
[153.73655701 42.86186981]
[168.35691833 39.50846863]
[181.76905823 46.22518158]
[187.84115601 59.94122314]
[183.79710388 74.38579559]
[171.48580933 82.95503998]
[156.53581238 81.73120880]
[145.78207397 71.27382660]
[144.14146423 56.36206436]
[153.30046082 68.19121552]
[159.36309814 81.86823273]
[161.97715759 96.59856415]
[160.99079895 111.52650452]
[156.46131897 125.78483582]
[148.65184021 138.54525757]
[138.01605225 149.06646729]
[125.17179108 156.73727417]
[110.86524200 161.11206055]
[95.92749786 161.93667603]
[81.22633362 159.16322327]
[67.61579132 152.95281982]
[58.30090714 164.71006775]
[55.79573441 180.33168030]
[41.82757187 185.50273132]
[32.51268768 197.25997925]
[30.00751495 212.88159180]
[16.03935242 218.05262756]
[6.72447014 229.80987549]
[-2.59041262 241.56713867]
[-11.90529537 253.32438660]
[-21.22017860 265.08163452]
[-30.53506088 276.83889771]
[-39.58506012 288.80123901]
[-48.36566544 300.96267700]
[-57.14626694 313.12414551]
[-65.92687225 325.28558350]
[-74.70747375 337.44705200]
[-63.53702927 347.47964478]
[-53.49629211 358.64279175]
[-44.69902420 370.80996704]
[-37.24490738 383.84332275]
[-31.21840668 397.59518433]
[-26.68780518 411.90969849]
[-23.70443535 426.62472534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 203]
[51 202]
[52 201]
[53 200]
[54 199]
[58 198]
[59 197]
[60 196]
[61 195]
[62 194]
[63 193]
[65 191]
[66 190]
[68 188]
[69 187]
[81 175]
[82 167]
[83 166]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[93 156]
[94 155]
[95 140]
[96 139]
[97 138]
[98 137]
[99 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
