%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[199.09904480 727.97778320]
[187.49533081 718.46380615]
[176.53869629 708.21130371]
[166.27607727 697.26409912]
[156.75140381 685.66912842]
[148.00549316 673.47607422]
[140.07575989 660.73706055]
[132.99618530 647.50677490]
[126.79706573 633.84173584]
[121.50496674 619.80047607]
[117.14253998 605.44323730]
[113.72846985 590.83135986]
[111.27737427 576.02746582]
[109.79975128 561.09503174]
[109.30192566 546.09783936]
[109.78602600 531.10028076]
[111.24998474 516.16644287]
[113.68753052 501.36035156]
[117.08823395 486.74536133]
[121.43751526 472.38409424]
[126.71676636 458.33804321]
[132.90336609 444.66732788]
[139.97084045 431.43054199]
[147.88890076 418.68429565]
[156.62367249 406.48321533]
[166.13772583 394.87954712]
[176.39031982 383.92297363]
[187.33757019 373.66043091]
[198.93257141 364.13583374]
[211.12570190 355.38998413]
[223.86473083 347.46032715]
[216.78762817 334.23480225]
[209.71052551 321.00927734]
[202.63342285 307.78375244]
[195.55630493 294.55822754]
[188.47920227 281.33270264]
[174.19390869 277.27487183]
[166.82830811 263.96313477]
[171.18136597 249.00691223]
[164.10426331 235.78137207]
[157.02716064 222.55584717]
[149.95005798 209.33032227]
[142.87295532 196.10479736]
[135.79585266 182.87927246]
[128.71873474 169.65374756]
[114.43344116 165.59593201]
[107.06784821 152.28417969]
[111.42090607 137.32795715]
[104.34380341 124.10243225]
[97.26670074 110.87690735]
[93.00318909 125.25823212]
[80.56284332 133.63902283]
[65.63321686 132.18771362]
[55.03993988 121.56781006]
[53.62611008 106.63458252]
[62.03811264 94.21531677]
[76.43009186 89.98793030]
[90.22359467 95.88638306]
[84.56080627 81.99635315]
[78.89801788 68.10632324]
[73.23523712 54.21629715]
[72.15982819 69.17769623]
[68.13484192 83.62759399]
[61.32059479 96.99045563]
[51.98848343 108.73403931]
[40.51021194 118.39060211]
[27.34294891 125.57553101]
[13.01114464 130.00265503]
[-1.91437018 131.49563599]
[-16.83911896 129.99501038]
[-31.16865540 125.56055450]
[-44.33223724 118.36888885]
[-55.80556870 108.70645142]
[-65.13166809 96.95809174]
[-71.93907928 83.59175110]
[-75.95666504 69.13979340]
[-77.02441406 54.17784500]
[-75.09978485 39.30183029]
[-70.25945282 25.10425568]
[-62.69618988 12.15060520]
[-52.71124268 0.95681667]
[-40.70231628 -8.03126431]
[-27.14770889 -14.45564651]
[-12.58730412 -18.06044960]
[2.39896584 -18.70209503]
[17.21420288 -16.35502625]
[31.26832390 -11.11272526]
[44.00155640 -3.18399286]
[54.90674210 7.11537361]
[63.54953003 19.37515450]
[69.58438873 33.10307312]
[70.25417328 18.11803436]
[63.14080048 3.98613811]
[71.43869019 -8.38295078]
[72.10847473 -23.36799049]
[72.77825928 -38.35302734]
[73.44804382 -53.33806610]
[59.21170044 -58.41920471]
[47.10652924 -67.47217560]
[38.20890808 -79.69198608]
[33.31001282 -93.99206543]
[32.84544754 -109.10085297]
[36.85652161 -123.67489624]
[44.98657227 -136.41827393]
[56.51268005 -146.19786072]
[70.40995789 -152.14404297]
[85.44265747 -153.72811890]
[100.27408600 -150.80921936]
[113.58544922 -143.64688110]
[124.19310760 -132.87799072]
[131.15382385 -119.46009827]
[133.84867859 -104.58631897]
[132.03802490 -89.57922363]
[125.88287354 -75.77323151]
[115.93053436 -64.39595032]
[103.06597137 -56.45905685]
[88.43308258 -52.66828156]
[87.76329803 -37.68324280]
[87.09351349 -22.69820404]
[86.42372894 -7.71316576]
[93.58500671 5.34690046]
[85.23921204 18.78781891]
[84.56942749 33.77285767]
[87.12525940 48.55351257]
[92.78804779 62.44353867]
[98.45083618 76.33356476]
[104.11361694 90.22359467]
[110.49222565 103.79979706]
[117.56932831 117.02532959]
[124.64643860 130.25085449]
[139.50486755 134.92681885]
[146.49365234 148.44020081]
[141.94427490 162.57662964]
[149.02137756 175.80216980]
[156.09848022 189.02769470]
[163.17558289 202.25321960]
[170.25268555 215.47874451]
[177.32978821 228.70426941]
[184.40690613 241.92979431]
[199.26533508 246.60577393]
[206.25411987 260.11914062]
[201.70472717 274.25558472]
[208.78184509 287.48110962]
[215.85894775 300.70663452]
[222.93605042 313.93215942]
[230.01315308 327.15768433]
[237.09025574 340.38320923]
[250.75518799 334.18386841]
[264.79632568 328.89151001]
[279.15353394 324.52883911]
[293.76531982 321.11450195]
[308.56915283 318.66314697]
[323.50158691 317.18527222]
[338.49871826 316.68716431]
[353.49633789 317.17102051]
[368.43017578 318.63470459]
[383.23632812 321.07199097]
[397.85134888 324.47244263]
[412.21270752 328.82147217]
[426.25885010 334.10046387]
[439.92968750 340.28683472]
[453.16659546 347.35406494]
[465.91299438 355.27191162]
[478.11419678 364.00643921]
[489.71804810 373.52029419]
[500.67480469 383.77270508]
[510.93756104 394.71975708]
[520.46234131 406.31460571]
[529.20843506 418.50756836]
[537.13830566 431.24645996]
[544.21801758 444.47671509]
[550.41729736 458.14169312]
[555.70959473 472.18283081]
[560.07214355 486.54006958]
[563.48638916 501.15188599]
[565.93768311 515.95574951]
[567.41546631 530.88818359]
[567.91345215 545.88531494]
[567.42956543 560.88293457]
[565.96575928 575.81677246]
[563.52838135 590.62292480]
[560.12786865 605.23791504]
[555.77874756 619.59924316]
[550.49969482 633.64532471]
[544.31323242 647.31616211]
[537.24591064 660.55303955]
[529.32800293 673.29937744]
[520.59338379 685.50054932]
[511.07946777 697.10430908]
[500.82699585 708.06097412]
[489.87988281 718.32366943]
[478.28497314 727.84838867]
[466.09194946 736.59442139]
[453.35302734 744.52423096]
[440.12271118 751.60388184]
[426.45773315 757.80303955]
[412.41653442 763.09527588]
[398.05926514 767.45776367]
[383.44744873 770.87188721]
[368.64358521 773.32312012]
[353.71112061 774.80084229]
[338.71395874 775.29870605]
[323.71636963 774.81469727]
[308.78253174 773.35083008]
[293.97644043 770.91339111]
[279.36141968 767.51275635]
[265.00015259 763.16357422]
[250.95405579 757.88439941]
[237.28330994 751.69787598]
[224.04644775 744.63049316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 134]
[45 133]
[48 130]
[49 129]
[50 128]
[58 127]
[59 126]
[60 125]
[61 124]
[91 123]
[92 122]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
