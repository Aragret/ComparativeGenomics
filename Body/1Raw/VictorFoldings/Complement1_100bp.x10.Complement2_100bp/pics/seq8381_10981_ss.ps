%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[111.62228394 180.96821594]
[114.37852478 166.21643066]
[118.22946930 151.71185303]
[123.15357208 137.53562927]
[129.12330627 123.76702881]
[115.84545898 116.78857422]
[102.56761169 109.81012726]
[94.53448486 109.14579773]
[89.14517212 102.62764740]
[75.97269440 95.45228577]
[62.80022049 88.27691650]
[49.62774658 81.10154724]
[36.45526886 73.92618561]
[23.28279495 66.75081635]
[10.11031818 59.57545090]
[-3.06215739 52.40008545]
[-16.23463249 45.22472000]
[-29.40710831 38.04935074]
[-42.57958603 30.87398529]
[-55.75205994 23.69861984]
[-68.92453766 16.52325439]
[-82.09701538 9.34788704]
[-95.26948547 2.17252088]
[-103.31152344 14.84118080]
[-112.18177795 26.94439888]
[-121.84062958 38.42811966]
[-132.24494934 49.24105072]
[-143.34825134 59.33490372]
[-155.10095215 68.66458893]
[-167.45057678 77.18844604]
[-180.34194946 84.86840057]
[-193.71751404 91.67015839]
[-207.51750183 97.56332397]
[-221.68029785 102.52159119]
[-236.14265442 106.52281189]
[-250.83995056 109.54911804]
[-265.70657349 111.58699036]
[-280.67611694 112.62732697]
[-295.68170166 112.66548157]
[-310.65634155 111.70127869]
[-325.53311157 109.73903656]
[-340.24563599 106.78750610]
[-354.72811890 102.85987854]
[-368.91595459 97.97369385]
[-382.74572754 92.15077972]
[-396.15570068 85.41712952]
[-409.08596802 77.80283356]
[-421.47879028 69.34188843]
[-433.27877808 60.07208252]
[-444.43325806 50.03482437]
[-454.89242554 39.27493668]
[-464.60955811 27.84048271]
[-473.54125977 15.78252888]
[-481.64761353 3.15492773]
[-488.89242554 -9.98592091]
[-495.24334717 -23.58132744]
[-500.67199707 -37.57056808]
[-505.15414429 -51.89116669]
[-508.66979980 -66.47916412]
[-511.20321655 -81.26939392]
[-512.74304199 -96.19581604]
[-513.28253174 -111.19175720]
[-512.81915283 -126.19024658]
[-511.35501099 -141.12428284]
[-508.89666748 -155.92718506]
[-505.45507812 -170.53282166]
[-501.04562378 -184.87597656]
[-495.68798828 -198.89257812]
[-489.40609741 -212.52001953]
[-482.22802734 -225.69744873]
[-474.18585205 -238.36601257]
[-465.31542969 -250.46911621]
[-455.65643311 -261.95272827]
[-445.25198364 -272.76550293]
[-434.14855957 -282.85922241]
[-422.39572144 -292.18878174]
[-410.04602051 -300.71246338]
[-397.15454102 -308.39227295]
[-383.77890015 -315.19384766]
[-369.97882080 -321.08685303]
[-355.81597900 -326.04492188]
[-341.35357666 -330.04595947]
[-326.65621948 -333.07208252]
[-311.78958130 -335.10977173]
[-296.82003784 -336.14993286]
[-281.81445312 -336.18789673]
[-266.83981323 -335.22351074]
[-251.96305847 -333.26107788]
[-237.25059509 -330.30935669]
[-222.76814270 -326.38156128]
[-208.58036804 -321.49517822]
[-194.75065613 -315.67208862]
[-181.34077454 -308.93826294]
[-168.41061401 -301.32382202]
[-156.01791382 -292.86270142]
[-144.21801758 -283.59277344]
[-133.06365967 -273.55535889]
[-122.60462952 -262.79534912]
[-112.88764954 -251.36076355]
[-103.95611572 -239.30270386]
[-95.84992218 -226.67500305]
[-88.60527039 -213.53405762]
[-82.25451660 -199.93856812]
[-76.82602692 -185.94926453]
[-72.34404755 -171.62861633]
[-68.82859802 -157.04057312]
[-66.29537201 -142.25030518]
[-64.75569153 -127.32386017]
[-64.21643066 -112.32791138]
[-64.67999268 -97.32943726]
[-66.14431763 -82.39540863]
[-68.60285187 -67.59254456]
[-72.04463196 -52.98694992]
[-76.45426941 -38.64385223]
[-81.81207275 -24.62732315]
[-88.09412384 -10.99995518]
[-74.92164612 -3.82458854]
[-61.74916840 3.35077786]
[-48.57669449 10.52614403]
[-35.40421677 17.70150948]
[-22.23174286 24.87687683]
[-9.05926704 32.05224228]
[4.11320877 39.22760773]
[17.28568459 46.40297699]
[30.45816040 53.57834244]
[43.63063812 60.75370789]
[56.80311203 67.92907715]
[69.97558594 75.10443878]
[83.14806366 82.27980804]
[96.32054138 89.45516968]
[109.54606628 96.53227997]
[122.82391357 103.51073456]
[136.10176086 110.48918152]
[144.05648804 97.76383209]
[152.93994141 85.66852570]
[162.70243835 74.27089691]
[173.28938293 63.63470459]
[184.64158630 53.81941986]
[196.69554138 44.87993622]
[209.38385010 36.86624908]
[222.63552856 29.82316971]
[236.37649536 23.79009247]
[250.52990723 18.80075455]
[265.01657104 14.88305759]
[279.75552368 12.05891323]
[294.66430664 10.34411430]
[309.65954590 9.74825191]
[324.65737915 10.27465630]
[339.57394409 11.92038536]
[354.32580566 14.67623425]
[368.83047485 18.52679253]
[383.00683594 23.45052528]
[396.77557373 29.41989517]
[410.05975342 36.40151978]
[422.78503418 44.35635757]
[434.88027954 53.23991394]
[446.27780151 63.00251770]
[456.91390991 73.58956146]
[466.72909546 84.94184875]
[475.66845703 96.99588013]
[483.68203735 109.68424988]
[490.72500610 122.93600464]
[496.75796509 136.67703247]
[501.74716187 150.83047485]
[505.66473389 165.31718445]
[508.48876953 180.05615234]
[510.20343018 194.96495056]
[510.79916382 209.96018982]
[510.27261353 224.95802307]
[508.62677002 239.87457275]
[505.87078857 254.62640381]
[502.02008057 269.13104248]
[497.09625244 283.30734253]
[491.12673950 297.07604980]
[484.14498901 310.36016846]
[476.19006348 323.08538818]
[467.30639648 335.18054199]
[457.54370117 346.57797241]
[446.95654297 357.21398926]
[435.60418701 367.02908325]
[423.55007935 375.96835327]
[410.86163330 383.98181152]
[397.60980225 391.02465820]
[383.86874390 397.05749512]
[369.71524048 402.04656982]
[355.22848511 405.96401978]
[340.48950195 408.78790283]
[325.58068848 410.50244141]
[310.58544922 411.09805298]
[295.58761597 410.57138062]
[280.67108154 408.92538452]
[265.91928101 406.16928101]
[251.41467285 402.31845093]
[237.23840332 397.39447021]
[223.46974182 391.42486572]
[210.18569946 384.44299316]
[197.46055603 376.48794556]
[185.36547852 367.60415649]
[173.96812439 357.84136963]
[163.33221436 347.25411987]
[153.51722717 335.90167236]
[144.57806396 323.84747314]
[136.56469727 311.15896606]
[129.52197266 297.90710449]
[123.48926544 284.16595459]
[118.50029755 270.01245117]
[114.58298492 255.52565002]
[111.75923157 240.78663635]
[110.04482269 225.87780762]
[109.44935608 210.88255310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 133]
[6 132]
[7 131]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
