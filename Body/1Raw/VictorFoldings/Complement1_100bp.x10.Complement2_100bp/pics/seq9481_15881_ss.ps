%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[107.88063049 533.47259521]
[95.00708008 525.67785645]
[83.90176392 515.52117920]
[74.99156189 503.39294434]
[68.61893463 489.75930786]
[65.02885437 475.14431763]
[64.35929108 460.10977173]
[66.63599396 445.23352051]
[71.77144623 431.08737183]
[79.56826782 418.21508789]
[89.72675323 407.11141968]
[101.85643768 398.20315552]
[115.49110413 391.83276367]
[130.10665894 388.24502563]
[129.43687439 373.25997925]
[128.76708984 358.27496338]
[128.09730530 343.28991699]
[127.31598663 328.31027222]
[126.42316437 313.33688354]
[125.53034973 298.36346436]
[124.63753510 283.39007568]
[123.74472046 268.41665649]
[122.51774597 253.46691895]
[120.84620667 238.56034851]
[119.06373596 223.66662598]
[117.28127289 208.77291870]
[115.49880981 193.87919617]
[112.72319794 179.13822937]
[108.96689606 164.61618042]
[98.28896332 154.23200989]
[102.32389069 138.93395996]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[83.00279236 66.46710968]
[79.03069305 52.00258255]
[75.05860138 37.53805923]
[71.08650208 23.07353592]
[67.11441040 8.60901070]
[63.87224960 23.25443459]
[56.31733322 36.21295166]
[45.16973877 46.24944305]
[31.49198532 52.40729141]
[16.58775139 54.09957123]
[1.87761271 51.16498566]
[-11.23635483 43.88323593]
[-21.50421143 32.94837952]
[-27.94729042 19.40265083]
[-29.95147705 4.53714561]
[-27.32574654 -10.23125172]
[-20.32036781 -23.49491119]
[-9.60304642 -33.98962402]
[3.80470991 -40.71510315]
[18.62495804 -43.03031921]
[33.44512939 -40.71459961]
[46.85265732 -33.98866272]
[57.56961823 -23.49358368]
[64.57492065 -10.22861290]
[64.57492065 -25.22861290]
[64.57492065 -40.22861481]
[53.68036270 -51.36173630]
[53.89404297 -66.57386780]
[64.57492065 -76.89155579]
[64.57492065 -91.89155579]
[61.96345139 -96.41121674]
[61.40284348 -101.01979828]
[62.58353043 -104.92121124]
[64.92485809 -107.55759430]
[65.59464264 -122.54263306]
[66.26442719 -137.52767944]
[66.93421173 -152.51271057]
[67.60399628 -167.49775696]
[68.27378082 -182.48278809]
[67.49245453 -197.46243286]
[65.26734161 -212.29647827]
[55.56851196 -224.79620361]
[61.33222961 -238.53042603]
[59.10711288 -253.36447144]
[56.55128098 -268.14511108]
[53.66600800 -282.86502075]
[50.78073502 -297.58489990]
[47.89546204 -312.30480957]
[45.01018906 -327.02468872]
[42.12491608 -341.74456787]
[27.06844902 -342.08639526]
[12.43757820 -345.65734863]
[-1.08338130 -352.29040527]
[-12.86203098 -361.67538452]
[-22.34746170 -373.37326050]
[-29.09602165 -386.83697510]
[-32.79207230 -401.43673706]
[-33.26273727 -416.48971558]
[-30.48600388 -431.29187012]
[-24.59174919 -445.15087891]
[-15.85565376 -457.41851807]
[-4.68632221 -467.52099609]
[8.39383507 -474.98580933]
[22.77303696 -479.46383667]
[37.77873993 -480.74560547]
[52.70910263 -478.77117920]
[66.86579895 -473.63290405]
[79.58670807 -465.57107544]
[90.27683258 -454.96282959]
[98.43618774 -442.30426025]
[103.68314362 -428.18750000]
[105.77228546 -413.27273560]
[104.60591125 -398.25762939]
[100.23856354 -383.84442139]
[92.87451172 -370.70727539]
[82.85819244 -359.46060181]
[70.65808868 -350.63046265]
[56.84480667 -344.62985229]
[59.73007965 -329.90997314]
[62.61535263 -315.19006348]
[65.50062561 -300.47018433]
[68.38590240 -285.75027466]
[71.27117157 -271.03039551]
[73.97767639 -268.77047729]
[75.72403717 -265.08737183]
[75.85327911 -260.44662476]
[73.94115448 -255.58958435]
[76.16627502 -240.75553894]
[85.70594788 -229.31683350]
[80.10138702 -214.52159119]
[82.32649994 -199.68754578]
[88.19609070 -213.49145508]
[99.11709595 -223.77404785]
[113.24913025 -228.80252075]
[128.21069336 -227.72950745]
[141.48051453 -220.73579407]
[150.82238770 -208.99998474]
[154.66204834 -194.49974060]
[152.35243225 -179.67861938]
[144.28276062 -167.03422546]
[131.81291199 -158.69738770]
[117.04428101 -156.07299805]
[102.46562958 -159.60330200]
[90.53372955 -168.69338989]
[83.25881958 -181.81300354]
[82.58903503 -166.82797241]
[81.91925049 -151.84292603]
[81.24946594 -136.85789490]
[80.57968140 -121.87284851]
[79.90989685 -106.88780975]
[79.57492065 -91.89155579]
[79.57492065 -76.89155579]
[90.25579071 -66.57386780]
[90.46946716 -51.36173630]
[79.57492065 -40.22861481]
[79.57492065 -25.22861290]
[79.57492065 -10.22861290]
[81.57893372 4.63691473]
[85.55102539 19.10143852]
[89.52312469 33.56596375]
[93.49521637 48.03048706]
[97.46731567 62.49501038]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[116.84594727 135.17765808]
[127.79255676 146.60055542]
[123.48895264 160.85987854]
[127.24525452 175.38192749]
[133.32081604 161.66743469]
[145.78762817 153.32606506]
[160.78273010 152.94248962]
[173.65971375 160.63555908]
[180.42849731 174.02149963]
[178.99171448 188.95252991]
[169.79457092 200.80210876]
[155.68688965 205.89851379]
[141.04008484 202.66256714]
[130.39251709 192.09672546]
[132.17498779 206.99044800]
[133.95745850 221.88417053]
[135.73991394 236.77787781]
[139.86692810 244.92684937]
[137.43635559 251.90640259]
[140.50384521 256.12985229]
[141.54086304 260.65509033]
[140.77246094 264.65817261]
[138.71812439 267.52383423]
[139.61094666 282.49725342]
[140.50375366 297.47064209]
[141.39657593 312.44406128]
[142.28938293 327.41744995]
[145.92404175 335.79763794]
[143.08235168 342.62011719]
[143.75213623 357.60516357]
[144.42192078 372.59020996]
[145.09170532 387.57525635]
[159.96905518 389.84472656]
[174.11769104 394.97329712]
[186.99375916 402.76388550]
[198.10235596 412.91696167]
[207.01649475 425.04232788]
[213.39352417 438.67388916]
[216.98834229 453.28771973]
[217.66278076 468.32205200]
[215.39088440 483.19903564]
[210.26000977 497.34683228]
[202.46736145 510.22164917]
[192.31246948 521.32861328]
[180.18566895 530.24078369]
[166.55307007 536.61560059]
[151.93867493 540.20806885]
[136.90422058 540.88006592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 194]
[15 193]
[16 192]
[17 191]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[23 181]
[24 179]
[25 178]
[26 177]
[27 176]
[28 166]
[29 165]
[31 163]
[32 162]
[33 161]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[59 152]
[60 151]
[61 150]
[64 147]
[65 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 126]
[76 125]
[78 123]
[79 122]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
