%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[94.06992340 757.18182373]
[79.53414154 753.44976807]
[65.32224274 748.62902832]
[51.51562881 742.74731445]
[38.19339371 735.83819580]
[25.43183899 727.94134521]
[13.30406666 719.10198975]
[1.87954211 709.37072754]
[-8.77629471 698.80328369]
[-18.60240746 687.46026611]
[-27.54251289 675.40655518]
[-35.54540253 662.71124268]
[-42.56523132 649.44702148]
[-48.56179810 635.68988037]
[-53.50074768 621.51861572]
[-57.35379410 607.01446533]
[-60.09886551 592.26037598]
[-61.72023773 577.34100342]
[-62.20862579 562.34167480]
[-61.56122971 547.34844971]
[-59.78175735 532.44708252]
[-56.88040543 517.72296143]
[-52.87378693 503.26043701]
[-47.78485489 489.14233398]
[-41.64276123 475.44958496]
[-34.48268509 462.26052856]
[-26.34563828 449.65078735]
[-17.27823067 437.69253540]
[-7.33239937 426.45431519]
[3.43488479 416.00045776]
[14.96194744 406.39086914]
[27.18276215 397.68057251]
[40.02732849 389.91949463]
[53.42207336 383.15206909]
[67.29027557 377.41705322]
[81.55248260 372.74728394]
[96.12702179 369.16955566]
[110.93040466 366.70431519]
[109.59217072 351.76412964]
[108.25393677 336.82394409]
[106.91570282 321.88375854]
[105.57746887 306.94357300]
[104.23923492 292.00338745]
[102.90099335 277.06320190]
[99.87556458 273.36782837]
[99.13942719 267.73266602]
[101.75212860 261.65933228]
[100.85931396 246.68591309]
[99.96649933 231.71250916]
[99.07367706 216.73910522]
[98.18086243 201.76570129]
[85.55265045 193.91291809]
[79.90312195 179.96490479]
[83.59312439 165.19204712]
[95.41088867 155.31042480]
[94.51806641 140.33702087]
[93.62525177 125.36360931]
[92.73243713 110.39020538]
[86.82279968 124.17701721]
[77.58805847 135.99731445]
[65.64072418 145.06712341]
[51.77322388 150.78485107]
[36.90533447 152.77125549]
[22.02318954 150.89462280]
[8.11387062 145.27938843]
[-3.90006757 136.29800415]
[-13.22178459 124.54616547]
[-19.23300362 110.80333710]
[-21.53502274 95.98103333]
[-19.97515678 81.06236267]
[-14.65686703 67.03681946]
[-5.93289518 54.83467484]
[5.61812830 45.26525116]
[19.23006630 38.96325684]
[34.00008774 36.34667587]
[48.94854736 37.58905792]
[63.08396912 42.60800171]
[75.46880341 51.07061768]
[85.28160858 62.41560745]
[91.87153625 75.89051056]
[94.80184174 90.60668945]
[98.77394104 76.14216614]
[93.70623779 58.43906021]
[106.66358185 46.60376740]
[110.41988373 32.08170700]
[114.17618561 17.55964851]
[117.93248749 3.03758883]
[105.14221191 -11.20124722]
[103.53077698 -30.12247467]
[113.56899261 -46.06496429]
[131.04737854 -52.68302155]
[134.15148926 -67.35832214]
[137.25559998 -82.03362274]
[140.35971069 -96.70893097]
[143.46382141 -111.38423157]
[146.56793213 -126.05953217]
[149.01365662 -140.85881042]
[150.79612732 -155.75251770]
[152.57859802 -170.64624023]
[138.68794250 -176.58140564]
[127.03295898 -186.19068909]
[118.55847168 -198.69506836]
[113.95146942 -213.08090210]
[113.58541870 -228.18199158]
[117.48999786 -242.77413940]
[125.34867859 -255.67445374]
[136.52438354 -265.83712769]
[150.11117554 -272.43835449]
[165.00759888 -274.94299316]
[180.00608826 -273.14797974]
[193.89077759 -267.19885254]
[205.53608704 -257.57788086]
[213.99801636 -245.06498718]
[218.59056091 -230.67453003]
[218.94143677 -215.57308960]
[215.02220154 -200.98486328]
[207.15055847 -188.09245300]
[195.96464539 -177.94100952]
[182.37124634 -171.35343933]
[167.47230530 -168.86376953]
[165.68984985 -153.97006226]
[163.90737915 -139.07633972]
[176.33787537 -147.47172546]
[191.08961487 -144.75398254]
[199.71212769 -132.47993469]
[197.26605225 -117.68071747]
[185.15260315 -108.83399963]
[170.31091309 -111.00758362]
[161.24324036 -122.95542145]
[158.13912964 -108.28012085]
[155.03501892 -93.60482025]
[151.93090820 -78.92951965]
[148.82679749 -64.25421143]
[145.72268677 -49.57891083]
[154.62556458 -42.85660553]
[160.40325928 -33.25366974]
[162.18826294 -22.13771057]
[159.68489075 -11.10857296]
[153.21746826 -1.76810396]
[143.68884277 4.51248932]
[132.45454407 6.79388952]
[128.69824219 21.31594849]
[124.94194031 35.83800888]
[121.18564606 50.36006546]
[127.05242920 60.93869400]
[124.04184723 73.06800079]
[113.23846436 80.11425781]
[109.26636505 94.57878876]
[107.70584106 109.49739075]
[108.59866333 124.47079468]
[109.49147797 139.44419861]
[110.38429260 154.41760254]
[123.29256439 162.82490540]
[128.71189880 177.05459595]
[124.75984955 191.57511902]
[113.15426636 200.87287903]
[114.04708862 215.84629822]
[114.93990326 230.81970215]
[115.83271790 245.79310608]
[116.72553253 260.76651001]
[117.84117889 275.72497559]
[119.17941284 290.66516113]
[120.51764679 305.60534668]
[121.85588837 320.54553223]
[123.19412231 335.48568726]
[124.53235626 350.42587280]
[125.87059021 365.36605835]
[140.87643433 365.16122437]
[155.85479736 366.09182739]
[170.71987915 368.15255737]
[185.38653564 371.33163452]
[199.77076721 375.61083984]
[213.79016113 380.96563721]
[227.36442566 387.36538696]
[240.41580200 394.77340698]
[252.86953735 403.14730835]
[264.65429688 412.43905640]
[275.70257568 422.59548950]
[285.95108032 433.55838013]
[295.34112549 445.26498413]
[303.81893921 457.64822388]
[311.33590698 470.63714600]
[317.84902954 484.15737915]
[323.32095337 498.13146973]
[327.72036743 512.47937012]
[331.02206421 527.11895752]
[333.20712280 541.96624756]
[334.26303101 556.93627930]
[334.18374634 571.94335938]
[332.96969604 586.90136719]
[330.62789917 601.72479248]
[327.17169189 616.32861328]
[322.62091064 630.62927246]
[317.00164795 644.54473877]
[310.34603882 657.99542236]
[302.69223022 670.90417480]
[294.08404541 683.19714355]
[284.57083130 694.80389404]
[274.20706177 705.65789795]
[263.05206299 715.69702148]
[251.16978455 724.86370850]
[238.62826538 733.10552979]
[225.49934387 740.37524414]
[211.85821533 746.63122559]
[197.78302002 751.83758545]
[183.35438538 755.96453857]
[168.65495300 758.98846436]
[153.76892090 760.89202881]
[138.78157043 761.66430664]
[123.77872467 761.30090332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[55 152]
[56 151]
[57 150]
[58 149]
[81 148]
[82 147]
[84 144]
[85 143]
[86 142]
[87 141]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
