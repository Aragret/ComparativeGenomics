%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[119.59210968 767.78259277]
[105.10875702 763.86474609]
[90.86551666 759.14807129]
[76.90642548 753.64709473]
[63.27461624 747.37884521]
[50.01223373 740.36273193]
[37.16027069 732.62036133]
[24.75844765 724.17578125]
[12.84510231 715.05493164]
[1.45705581 705.28613281]
[-9.37049103 694.89959717]
[-19.60407066 683.92730713]
[-29.21205139 672.40325928]
[-38.16473389 660.36303711]
[-46.43444824 647.84393311]
[-53.99563599 634.88452148]
[-60.82491684 621.52496338]
[-66.90119171 607.80651855]
[-72.20567322 593.77160645]
[-76.72196198 579.46356201]
[-80.43611145 564.92663574]
[-83.33662415 550.20574951]
[-85.41455078 535.34643555]
[-86.66345978 520.39465332]
[-87.07949066 505.39651489]
[-86.66136169 490.39843750]
[-85.41036224 475.44677734]
[-83.33036041 460.58776855]
[-80.42778015 445.86730957]
[-76.71160126 431.33090210]
[-72.19330597 417.02349854]
[-66.88686371 402.98928833]
[-60.80866623 389.27169800]
[-53.97751617 375.91308594]
[-46.41451645 362.95477295]
[-38.14304733 350.43679810]
[-29.18867874 338.39785767]
[-19.57908630 326.87515259]
[-9.34397125 315.90429688]
[1.48502827 305.51922607]
[12.87444115 295.75204468]
[24.78906441 286.63290405]
[37.19206619 278.19000244]
[50.04511642 270.44946289]
[63.30847931 263.43518066]
[76.94116211 257.16885376]
[90.90102386 251.66983032]
[105.14492035 246.95513916]
[119.62882233 243.03933716]
[116.52471924 228.36404419]
[113.42060852 213.68873596]
[103.21700287 202.83811951]
[107.93099976 187.73551941]
[104.82688904 173.06021118]
[102.08703613 170.84085083]
[100.28603363 167.18415833]
[100.08771515 162.54583740]
[101.92730713 157.66087341]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[68.68286896 56.72853088]
[53.67230988 48.23026276]
[42.48985291 35.12913513]
[36.47157288 19.01647568]
[36.32763672 1.84182405]
[42.05852509 -14.32293320]
[52.95702744 -27.53351212]
[67.69545746 -36.20708847]
[64.59134674 -50.88238907]
[61.48723602 -65.55769348]
[58.38312531 -80.23299408]
[55.27901840 -94.90829468]
[48.59712982 -81.47875977]
[35.77028656 -73.70238495]
[20.77301979 -73.98875427]
[8.25239849 -82.24914551]
[2.08807254 -95.92398071]
[4.19012547 -110.77596283]
[13.90721321 -122.20304871]
[28.22839165 -126.66442108]
[42.71608353 -122.77768707]
[52.88124084 -111.74695587]
[51.76559448 -126.70540619]
[41.04754257 -141.67887878]
[49.27829742 -157.17796326]
[47.94006348 -172.11814880]
[46.60182953 -187.05833435]
[31.78362656 -189.99049377]
[18.39238739 -196.97987366]
[7.51367807 -207.45986938]
[0.02938831 -220.58091736]
[-3.45376420 -235.27937317]
[-2.65341640 -250.36366272]
[2.36555171 -264.61099243]
[11.19627476 -276.86642456]
[23.12288475 -286.13641357]
[37.17854691 -291.66949463]
[52.22382736 -293.01715088]
[67.03907776 -290.07009888]
[80.42329407 -283.06726074]
[91.29146576 -272.57635498]
[98.76257324 -259.44778442]
[102.23095703 -244.74584961]
[101.41545105 -229.66235352]
[96.38217163 -215.42007446]
[87.53914642 -203.17353821]
[75.60322571 -193.91554260]
[61.54201508 -188.39657593]
[62.88024902 -173.45639038]
[64.21848297 -158.51620483]
[73.29685974 -150.52185059]
[74.53404236 -138.08589172]
[66.72404480 -127.82106018]
[67.83969879 -112.86260223]
[69.95431519 -98.01240540]
[73.05842590 -83.33710480]
[76.16253662 -68.66180420]
[79.26664734 -53.98649979]
[82.37075806 -39.31119919]
[95.19892883 -38.39119720]
[107.36378479 -34.17549896]
[118.03274536 -26.94522285]
[126.47369385 -17.18807220]
[132.10522461 -5.56542683]
[134.53668213 7.13248301]
[133.59524536 20.04030228]
[129.33819580 32.27652740]
[122.04948425 43.00370026]
[112.22080231 51.48572922]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[116.72657776 155.21514893]
[119.50218964 169.95610046]
[122.60630035 184.63140869]
[133.03193665 196.53169250]
[128.09590149 210.58462524]
[131.20001221 225.25993347]
[134.30412292 239.93522644]
[149.13310242 237.65078735]
[164.06610107 236.19401550]
[179.05699158 235.56936646]
[194.05943298 235.77882385]
[209.02703857 236.82170105]
[223.91355896 238.69479370]
[238.67297363 241.39231873]
[253.25965881 244.90591431]
[267.62854004 249.22474670]
[281.73519897 254.33543396]
[295.53601074 260.22219849]
[308.98837280 266.86688232]
[322.05062866 274.24887085]
[334.68246460 282.34539795]
[346.84481812 291.13140869]
[358.50009155 300.57980347]
[369.61224365 310.66128540]
[380.14697266 321.34478760]
[390.07165527 332.59719849]
[399.35565186 344.38381958]
[407.97027588 356.66818237]
[415.88888550 369.41229248]
[423.08700562 382.57681274]
[429.54235840 396.12100220]
[435.23504639 410.00302124]
[440.14743042 424.17993164]
[444.26434326 438.60797119]
[447.57305908 453.24249268]
[450.06335449 468.03826904]
[451.72750854 482.94961548]
[452.56042480 497.93035889]
[452.55947876 512.93426514]
[451.72470093 527.91491699]
[450.05865479 542.82604980]
[447.56649780 557.62152100]
[444.25595093 572.25561523]
[440.13723755 586.68310547]
[435.22305298 600.85943604]
[429.52865601 614.74072266]
[423.07156372 628.28411865]
[415.87182617 641.44775391]
[407.95159912 654.19085693]
[399.33544922 666.47412109]
[390.04995728 678.25958252]
[380.12387085 689.51074219]
[369.58779907 700.19293213]
[358.47436523 710.27301025]
[346.81793213 719.71990967]
[334.65447998 728.50445557]
[322.02163696 736.59936523]
[308.95843506 743.97973633]
[295.50524902 750.62268066]
[281.70367432 756.50775146]
[267.59640503 761.61669922]
[253.22697449 765.93371582]
[238.63983154 769.44549561]
[223.88008118 772.14111328]
[208.99333191 774.01232910]
[194.02558899 775.05334473]
[179.02313232 775.26092529]
[164.03231812 774.63439941]
[149.09948730 773.17578125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 148]
[50 147]
[51 146]
[53 144]
[54 143]
[58 142]
[59 141]
[60 140]
[61 139]
[63 137]
[64 136]
[65 135]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[87 119]
[88 118]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
