%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[179.57933044 708.02581787]
[168.67547607 697.68884277]
[159.31642151 685.93493652]
[151.68434143 672.99285889]
[145.92779541 659.11456299]
[142.15882874 644.57006836]
[140.45083618 629.64263916]
[140.83702087 614.62274170]
[143.30990601 599.80279541]
[147.82131958 585.47125244]
[154.28347778 571.90710449]
[162.57057190 559.37432861]
[172.52130127 548.11694336]
[183.94197083 538.35400391]
[196.61026001 530.27563477]
[210.27960205 524.03900146]
[224.68389893 519.76556396]
[222.45878601 504.93151855]
[220.23367310 490.09747314]
[218.00854492 475.26342773]
[215.78343201 460.42938232]
[213.55831909 445.59533691]
[211.33320618 430.76129150]
[209.10807800 415.92724609]
[206.88296509 401.09320068]
[194.78973389 392.47409058]
[192.32182312 377.46194458]
[201.44433594 364.83590698]
[197.36466980 350.40133667]
[191.49571228 336.59716797]
[185.62675476 322.79299927]
[179.75779724 308.98880005]
[173.88883972 295.18463135]
[158.95964050 295.40533447]
[145.04565430 289.87844849]
[134.27864075 279.41726685]
[128.32101440 265.59359741]
[128.10923767 250.50157166]
[133.70669556 236.44058228]
[144.28938293 225.56481934]
[138.42042542 211.76063538]
[132.55146790 197.95645142]
[126.68250275 184.15228271]
[120.81353760 170.34809875]
[109.71625519 165.53387451]
[104.71375275 154.08142090]
[108.98761749 141.91191101]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.25339508 49.94670105]
[65.17956543 36.23143387]
[64.55663300 51.21849442]
[60.54003525 65.67072296]
[53.34046555 78.82998657]
[43.33560181 90.00597382]
[31.05027962 98.61241913]
[17.12896156 104.19783783]
[2.30193472 106.46923828]
[-12.65300655 105.30746460]
[-26.95135689 100.77346039]
[-39.84305191 93.10507202]
[-50.65181732 82.70456696]
[-58.81065369 70.11753082]
[-63.89155579 56.00426102]
[-65.62799835 41.10510635]
[-63.92888260 26.20164871]
[-58.88334656 12.07569504]
[-50.75606918 -0.53173631]
[-39.97338867 -10.95928574]
[-27.10094261 -18.65994453]
[-12.81399441 -23.22974968]
[2.13799047 -24.42898178]
[16.97066116 -22.19472694]
[30.90592575 -16.64419556]
[43.21276474 -8.06855202]
[53.24559402 3.08233976]
[60.47873306 16.22506142]
[59.80894470 1.24002349]
[59.13916016 -13.74501514]
[58.46937561 -28.73005486]
[57.79959106 -43.71509171]
[49.45379639 -57.15601349]
[56.61507797 -70.21607971]
[55.94529343 -85.20111847]
[55.27550888 -100.18615723]
[54.38269043 -115.15956116]
[53.26704407 -130.11801147]
[52.15139389 -145.07646179]
[51.03574753 -160.03492737]
[36.29647827 -163.38833618]
[23.20130348 -170.93869019]
[12.91463566 -182.01460266]
[6.35115862 -195.63122559]
[4.09449100 -210.57775879]
[6.34529543 -225.52516174]
[12.90343094 -239.14436340]
[23.18575287 -250.22430420]
[36.27796555 -257.77978516]
[51.01591492 -261.13897705]
[66.08911896 -260.00320435]
[80.15727234 -254.47341919]
[91.96944427 -245.04135132]
[100.47531128 -232.54568481]
[104.91852570 -218.09753418]
[104.90401459 -202.98159790]
[100.43305206 -188.54200745]
[91.90321350 -176.06269836]
[80.07294464 -166.65332031]
[65.99420166 -161.15057373]
[67.10984802 -146.19212341]
[68.22549438 -131.23365784]
[69.34114838 -116.27520752]
[72.31122589 -112.53520203]
[72.96338654 -106.88969421]
[70.26054382 -100.85594177]
[70.93032837 -85.87090302]
[71.60012054 -70.88586426]
[79.89800262 -58.51677322]
[72.78462982 -44.38487625]
[73.45441437 -29.39983940]
[74.12419891 -14.41480064]
[74.79398346 0.57023835]
[75.46376801 15.55527687]
[78.89482880 30.15760040]
[84.96866608 43.87286758]
[89.02216339 46.39837646]
[91.53218079 51.49708557]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[122.87763977 136.24913025]
[137.68188477 147.19973755]
[134.61772156 164.47914124]
[140.48667908 178.28332520]
[146.35563660 192.08749390]
[152.22459412 205.89167786]
[158.09356689 219.69584656]
[173.26821899 219.62068176]
[187.27780151 225.34556580]
[197.99928284 235.96929932]
[203.82078552 249.85086060]
[203.88389587 264.86288452]
[198.21017456 278.71762085]
[187.69300842 289.31567383]
[193.56196594 303.11984253]
[199.43093872 316.92404175]
[205.29989624 330.72821045]
[211.16885376 344.53237915]
[212.55535889 329.59658813]
[218.65628052 315.89337158]
[228.82774353 304.86880493]
[241.99636841 297.68634033]
[256.77239990 295.10400391]
[271.59652710 297.39428711]
[284.90429688 304.31552124]
[295.29132080 315.13723755]
[301.66143799 328.71743774]
[303.34237671 343.62295532]
[300.15673828 358.28079224]
[292.44073486 371.14404297]
[281.00863647 380.85522461]
[267.06692505 386.38952637]
[252.08686829 387.16284180]
[237.64936829 383.09362793]
[225.27804565 374.61126709]
[216.27838135 362.61077881]
[228.70390320 372.00460815]
[230.74917603 387.08013916]
[221.71701050 398.86810303]
[223.94212341 413.70214844]
[226.16723633 428.53616333]
[228.39236450 443.37020874]
[230.61747742 458.20425415]
[232.84259033 473.03829956]
[235.06771851 487.87234497]
[237.29283142 502.70639038]
[239.51794434 517.54046631]
[254.54212952 517.39959717]
[269.43969727 519.35113525]
[283.92065430 523.35711670]
[297.70315552 529.33953857]
[310.51885986 537.18194580]
[322.11834717 546.73175049]
[332.27581787 557.80291748]
[340.79357910 570.18011475]
[347.50579834 583.62231445]
[352.28182983 597.86785889]
[355.02871704 612.63946533]
[355.69296265 627.64959717]
[354.26165771 642.60614014]
[350.76266479 657.21789551]
[345.26409912 671.20043945]
[337.87298584 684.28161621]
[328.73318481 696.20684814]
[318.02261353 706.74389648]
[305.94973755 715.68774414]
[292.74960327 722.86419678]
[278.67910767 728.13372803]
[264.01217651 731.39361572]
[249.03427124 732.58044434]
[234.03695679 731.67114258]
[219.31216431 728.68341064]
[205.14651489 723.67535400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[28 173]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[47 138]
[48 137]
[49 136]
[51 134]
[52 133]
[53 132]
[54 129]
[55 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[87 121]
[88 120]
[89 119]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
