%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[58.70011139 880.30859375]
[43.71224976 881.01721191]
[28.70894623 880.81964111]
[13.74494839 879.71649170]
[-1.12514269 877.71185303]
[-15.84706688 874.81304932]
[-30.36710548 871.03063965]
[-44.63227844 866.37841797]
[-58.59052658 860.87341309]
[-72.19092560 854.53564453]
[-85.38384247 847.38824463]
[-98.12113953 839.45733643]
[-110.35634613 830.77185059]
[-122.04480743 821.36340332]
[-133.14387512 811.26647949]
[-143.61305237 800.51776123]
[-153.41413879 789.15655518]
[-162.51136780 777.22430420]
[-170.87153625 764.76452637]
[-178.46415710 751.82275391]
[-185.26152039 738.44610596]
[-191.23881531 724.68347168]
[-196.37423706 710.58508301]
[-200.64903259 696.20227051]
[-204.04763794 681.58764648]
[-206.55761719 666.79449463]
[-208.16983032 651.87670898]
[-208.87837219 636.88885498]
[-208.68069458 621.88555908]
[-207.57748413 606.92156982]
[-205.57278442 592.05151367]
[-202.67391968 577.32958984]
[-198.89143372 562.80957031]
[-194.23916626 548.54443359]
[-188.73406982 534.58618164]
[-182.39622498 520.98583984]
[-175.24879456 507.79293823]
[-167.31781006 495.05566406]
[-158.63226318 482.82049561]
[-149.22380066 471.13208008]
[-139.12677002 460.03305054]
[-128.37803650 449.56393433]
[-117.01678467 439.76290894]
[-105.08448792 430.66574097]
[-92.62469482 422.30560303]
[-79.68285370 414.71304321]
[-66.30619812 407.91574097]
[-52.54353714 401.93853760]
[-38.44508743 396.80316162]
[-24.06229591 392.52844238]
[-9.44763947 389.12991333]
[5.34555149 386.61999512]
[20.26329803 385.00784302]
[35.25116730 384.29937744]
[50.25446701 384.49713135]
[65.21845245 385.60040283]
[67.22246552 370.73486328]
[69.22647858 355.86932373]
[71.23049927 341.00381470]
[65.26293182 327.35693359]
[74.77458954 314.71417236]
[76.77860260 299.84866333]
[78.78261566 284.98312378]
[80.78662872 270.11758423]
[82.34715271 255.19898987]
[83.46279907 240.24053955]
[84.57844543 225.28208923]
[85.69409943 210.32362366]
[77.23349762 194.94880676]
[87.72742462 179.81741333]
[88.62023926 164.84400940]
[89.51305389 149.87060547]
[73.12068939 143.29614258]
[59.95681381 131.52136230]
[51.60253906 115.96054077]
[49.06130219 98.48268890]
[52.63833237 81.18708801]
[61.90399551 66.15110779]
[75.74538422 55.18073273]
[92.50000000 49.59362030]
[92.50000000 34.59362030]
[92.50000000 19.59362030]
[92.50000000 4.59361982]
[83.94817352 -5.06190252]
[84.25698090 -17.55543709]
[92.71562195 -26.20286179]
[92.93894958 -41.20119858]
[93.16227722 -56.19953537]
[92.93894958 -71.19787598]
[92.26916504 -86.18291473]
[89.03880310 -91.95146942]
[89.18469238 -97.63264465]
[91.80925751 -101.62271881]
[91.58592987 -116.62105560]
[91.36260223 -131.61940002]
[91.13927460 -146.61773682]
[90.91594696 -161.61607361]
[76.67288208 -166.86006165]
[65.28855896 -176.89807129]
[58.30260849 -190.37252808]
[56.65982819 -205.46112061]
[60.58238983 -220.12324524]
[69.53979492 -232.37597656]
[82.32063293 -240.56222534]
[97.19640350 -243.57485962]
[112.15527344 -241.00646973]
[125.17417908 -233.20437622]
[134.49243164 -221.22378540]
[138.84979248 -206.68495178]
[137.65698242 -191.55412292]
[131.07531738 -177.87765503]
[119.99490356 -167.50514221]
[105.91429138 -161.83940125]
[106.13761902 -146.84106445]
[106.36094666 -131.84272766]
[106.58427429 -116.84438324]
[106.80760193 -101.84604645]
[107.25420380 -86.85269928]
[107.92398834 -71.86766052]
[109.89930725 -69.87862396]
[111.20575714 -66.98728943]
[111.49571991 -63.44450378]
[110.51873016 -59.62220001]
[108.16061401 -55.97620773]
[107.93728638 -40.97787094]
[107.71395874 -25.97953415]
[117.07468414 -11.13555336]
[107.50000000 4.59361982]
[107.50000000 19.59362030]
[107.50000000 34.59362030]
[107.50000000 49.59362030]
[119.36789703 52.86256409]
[130.10571289 58.88188934]
[139.08692932 67.30037689]
[145.78749084 77.62682343]
[149.81643677 89.25869751]
[150.93870544 101.51731110]
[149.08877563 113.68738556]
[144.37463379 125.05883026]
[137.07130432 134.96813965]
[127.60494995 142.83712769]
[116.52789307 148.20666504]
[104.48646545 150.76341248]
[103.59364319 165.73683167]
[102.70082855 180.71023560]
[110.66278839 190.85765076]
[109.61090088 203.31065369]
[100.65254974 211.43928528]
[99.53690338 226.39773560]
[98.42124939 241.35618591]
[97.30560303 256.31463623]
[99.32904053 260.15646362]
[99.96112061 264.05068970]
[99.35623932 267.55349731]
[97.79705048 270.31674194]
[95.65215302 272.12161255]
[93.64813995 286.98712158]
[91.64412689 301.85266113]
[89.64011383 316.71820068]
[95.46433258 331.42834473]
[86.09602356 343.00781250]
[84.09201050 357.87335205]
[82.08799744 372.73889160]
[80.08398438 387.60440063]
[94.80593109 390.50308228]
[109.32601166 394.28533936]
[123.59122467 398.93743896]
[137.54953003 404.44232178]
[151.14997864 410.77996826]
[164.34297180 417.92724609]
[177.08033752 425.85803223]
[189.31561279 434.54342651]
[201.00416565 443.95172119]
[212.10333252 454.04858398]
[222.57260132 464.79718018]
[232.37379456 476.15829468]
[241.47113037 488.09045410]
[249.83142090 500.55014038]
[257.42416382 513.49188232]
[264.22164917 526.86840820]
[270.19906616 540.63104248]
[275.33462524 554.72937012]
[279.60955811 569.11212158]
[283.00830078 583.72674561]
[285.51840210 598.51989746]
[287.13076782 613.43762207]
[287.83944702 628.42547607]
[287.64190674 643.42877197]
[286.53884888 658.39276123]
[284.53427124 673.26287842]
[281.63552856 687.98480225]
[277.85321045 702.50488281]
[273.20104980 716.77008057]
[267.69607544 730.72833252]
[261.35836792 744.32879639]
[254.21105957 757.52172852]
[246.28021240 770.25903320]
[237.59475708 782.49432373]
[228.18640137 794.18280029]
[218.08949280 805.28192139]
[207.34083557 815.75115967]
[195.97969055 825.55230713]
[184.04747009 834.64959717]
[171.58775330 843.00982666]
[158.64599609 850.60247803]
[145.26939392 857.39990234]
[131.50679016 863.37725830]
[117.40838623 868.51275635]
[103.02563477 872.78759766]
[88.41101074 876.18627930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 164]
[57 163]
[58 162]
[59 161]
[61 159]
[62 158]
[63 157]
[64 156]
[65 151]
[66 150]
[67 149]
[68 148]
[70 145]
[71 144]
[72 143]
[80 131]
[81 130]
[82 129]
[83 128]
[86 126]
[87 125]
[88 124]
[89 119]
[90 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
