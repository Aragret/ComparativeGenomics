%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[38.21479797 940.85864258]
[23.21327019 941.01995850]
[8.21898365 940.52673340]
[-6.73952007 939.38000488]
[-21.63376427 937.58184814]
[-36.43539810 935.13574219]
[-51.11624908 932.04632568]
[-65.64836121 928.31945801]
[-80.00408173 923.96221924]
[-94.15608215 918.98303223]
[-108.07742310 913.39123535]
[-121.74160004 907.19750977]
[-135.12260437 900.41363525]
[-148.19496155 893.05261230]
[-160.93380737 885.12829590]
[-173.31486511 876.65594482]
[-185.31457520 867.65155029]
[-196.91011047 858.13232422]
[-208.07937622 848.11639404]
[-218.80111694 837.62274170]
[-229.05493164 826.67144775]
[-238.82130432 815.28332520]
[-248.08161926 803.47998047]
[-256.81829834 791.28399658]
[-265.01464844 778.71850586]
[-272.65509033 765.80743408]
[-279.72512817 752.57537842]
[-286.21124268 739.04754639]
[-292.10110474 725.24969482]
[-297.38348389 711.20806885]
[-302.04837036 696.94934082]
[-306.08685303 682.50073242]
[-309.49127197 667.88970947]
[-312.25509644 653.14410400]
[-314.37310791 638.29193115]
[-315.84127808 623.36157227]
[-316.65676880 608.38134766]
[-316.81808472 593.37982178]
[-316.32485962 578.38555908]
[-315.17807007 563.42706299]
[-313.37988281 548.53277588]
[-310.93374634 533.73114014]
[-307.84429932 519.05029297]
[-304.11740112 504.51821899]
[-299.76019287 490.16250610]
[-294.78094482 476.01049805]
[-289.18911743 462.08917236]
[-282.99536133 448.42501831]
[-276.21148682 435.04400635]
[-268.85040283 421.97167969]
[-260.92611694 409.23284912]
[-252.45372009 396.85180664]
[-243.44932556 384.85211182]
[-233.93008423 373.25659180]
[-223.91410828 362.08734131]
[-213.42047119 351.36560059]
[-202.46914673 341.11181641]
[-191.08097839 331.34545898]
[-179.27764893 322.08517456]
[-167.08161926 313.34854126]
[-154.51611328 305.15219116]
[-141.60505676 297.51174927]
[-128.37300110 290.44177246]
[-114.84516144 283.95565796]
[-101.04727936 278.06582642]
[-87.00560760 272.78344727]
[-72.74689484 268.11859131]
[-58.29827118 264.08013916]
[-43.68724442 260.67575073]
[-28.94162941 257.91195679]
[-14.08949089 255.79396057]
[0.84089673 254.32583618]
[15.82111263 253.51036072]
[30.82264137 253.34909058]
[45.81692886 253.84233093]
[60.77542496 254.98913574]
[75.66966248 256.78735352]
[78.11539459 241.98806763]
[80.56111908 227.18879700]
[83.00685120 212.38952637]
[85.45257568 197.59025574]
[87.89830017 182.79098511]
[89.45882416 167.87237549]
[90.12860870 152.88734436]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[93.14278412 77.94926453]
[90.94982147 74.20161438]
[90.14447784 70.33950043]
[90.59235382 66.81319427]
[92.02660370 63.98308563]
[94.08876038 62.08423233]
[95.42699432 47.14404678]
[96.76522827 32.20386124]
[98.10346222 17.26367760]
[99.44170380 2.32349277]
[85.38048553 -3.19547248]
[73.44457245 -12.45347214]
[64.60153961 -24.70000267]
[59.56826019 -38.94229126]
[58.75276184 -54.02577972]
[62.22114563 -68.72771454]
[69.69225311 -81.85628510]
[80.56042480 -92.34720612]
[93.94463348 -99.35002899]
[108.75988770 -102.29707336]
[123.80516815 -100.94942474]
[137.86082458 -95.41633606]
[149.78744507 -86.14634705]
[158.61816406 -73.89094543]
[163.63713074 -59.64360428]
[164.43748474 -44.55930328]
[160.95433044 -29.86085701]
[153.47003174 -16.73980331]
[142.59132385 -6.25980377]
[129.20008850 0.72957176]
[114.38188171 3.66172695]
[113.04364777 18.60191154]
[111.70541382 33.54209518]
[110.36717987 48.48228073]
[109.02894592 63.42246628]
[108.13613129 78.39587402]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[105.11364746 153.55712891]
[104.44386292 168.54216003]
[114.81321716 157.70350647]
[129.55201721 154.91639709]
[143.16304016 161.22036743]
[150.56971741 174.26417542]
[149.00955200 189.18281555]
[139.06443787 200.41200256]
[124.44365692 203.76353455]
[110.60039520 197.98735046]
[102.69757080 185.23670959]
[100.25184631 200.03598022]
[97.80612183 214.83525085]
[95.36038971 229.63452148]
[92.91466522 244.43379211]
[90.46893311 259.23306274]
[105.14979553 262.32244873]
[119.68192291 266.04925537]
[134.03765869 270.40640259]
[148.18968201 275.38558960]
[162.11103821 280.97732544]
[175.77523804 287.17098999]
[189.15626526 293.95480347]
[202.22865295 301.31582642]
[214.96751404 309.24005127]
[227.34860229 317.71237183]
[239.34834290 326.71670532]
[250.94390869 336.23590088]
[262.11322021 346.25180054]
[272.83499146 356.74539185]
[283.08883667 367.69665527]
[292.85525513 379.08477783]
[302.11563110 390.88806152]
[310.85232544 403.08404541]
[319.04873657 415.64950562]
[326.68923950 428.56051636]
[333.75927734 441.79254150]
[340.24545288 455.32034302]
[346.13537598 469.11819458]
[351.41781616 483.15985107]
[356.08273315 497.41854858]
[360.12127686 511.86712646]
[363.52572632 526.47814941]
[366.28961182 541.22375488]
[368.40768433 556.07586670]
[369.87588501 571.00622559]
[370.69143677 585.98645020]
[370.85281372 600.98797607]
[370.35964966 615.98229980]
[369.21289062 630.94079590]
[367.41476440 645.83502197]
[364.96868896 660.63665771]
[361.87927246 675.31750488]
[358.15243530 689.84967041]
[353.79528809 704.20538330]
[348.81607056 718.35736084]
[343.22430420 732.27874756]
[337.03060913 745.94293213]
[330.24676514 759.32391357]
[322.88574219 772.39630127]
[314.96148682 785.13519287]
[306.48913574 797.51623535]
[297.48477173 809.51599121]
[287.96557617 821.11151123]
[277.94964600 832.28082275]
[267.45605469 843.00256348]
[256.50476074 853.25640869]
[245.11662292 863.02276611]
[233.31332397 872.28314209]
[221.11732483 881.01983643]
[208.55184937 889.21618652]
[195.64080811 896.85668945]
[182.40878296 903.92669678]
[168.88096619 910.41284180]
[155.08309937 916.30273438]
[141.04145813 921.58514404]
[126.78275299 926.25006104]
[112.33414459 930.28857422]
[97.72312927 933.69299316]
[82.97752380 936.45684814]
[68.12539673 938.57489014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 125]
[89 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
