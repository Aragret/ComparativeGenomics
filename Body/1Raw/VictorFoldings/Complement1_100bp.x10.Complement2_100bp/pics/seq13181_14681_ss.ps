%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[27.32592201 677.78686523]
[16.28292465 687.94958496]
[4.48559761 697.22595215]
[-7.99510813 705.56024170]
[-21.08413124 712.90228271]
[-34.70275116 719.20800781]
[-48.76906586 724.43933105]
[-63.19847107 728.56494141]
[-77.90419006 731.55993652]
[-92.79778290 733.40637207]
[-107.78967285 734.09307861]
[-122.78969574 733.61596680]
[-137.70764160 731.97790527]
[-152.45378113 729.18872070]
[-166.93943787 725.26519775]
[-181.07749939 720.23089600]
[-194.78291321 714.11621094]
[-207.97328186 706.95782471]
[-220.56924438 698.79876709]
[-232.49507141 689.68817139]
[-243.67903137 679.68078613]
[-254.05384827 668.83685303]
[-263.55715942 657.22149658]
[-272.13177490 644.90472412]
[-279.72613525 631.96044922]
[-286.29455566 618.46661377]
[-291.79757690 604.50433350]
[-296.20205688 590.15759277]
[-299.48153687 575.51263428]
[-301.61624146 560.65765381]
[-302.59341431 545.68188477]
[-302.40710449 530.67541504]
[-301.05847168 515.72851562]
[-298.55560303 500.93112183]
[-294.91357422 486.37213135]
[-290.15429688 472.13916016]
[-284.30636597 458.31781006]
[-277.40493774 444.99118042]
[-269.49157715 432.23944092]
[-260.61383057 420.13928223]
[-250.82510376 408.76345825]
[-240.18426514 398.18041992]
[-228.75532532 388.45376587]
[-216.60699463 379.64205933]
[-203.81234741 371.79824829]
[-190.44834900 364.96951294]
[-176.59535217 359.19689941]
[-162.33666992 354.51519775]
[-147.75807190 350.95251465]
[-132.94723511 348.53024292]
[-117.99322510 347.26303101]
[-102.98597717 347.15844727]
[-88.01575470 348.21713257]
[-73.17259216 350.43273926]
[-58.54575729 353.79190063]
[-44.22322083 358.27444458]
[-30.29111290 363.85339355]
[-16.83323288 370.49520874]
[-9.17263603 357.59887695]
[-1.51203823 344.70254517]
[6.14855909 331.80621338]
[12.62805557 318.27789307]
[17.87477303 304.22540283]
[15.07798767 289.59573364]
[27.15357399 279.37365723]
[32.40029144 265.32119751]
[37.64701080 251.26872253]
[42.89373016 237.21624756]
[39.06105804 220.09091187]
[53.36156082 208.49017334]
[58.39847565 194.36114502]
[55.38418579 179.77473450]
[67.30624390 169.37400818]
[72.34316254 155.24497986]
[69.32887268 140.65856934]
[81.25093079 130.25784302]
[86.28784180 116.12880707]
[78.87542725 101.38350677]
[84.30135345 85.79738617]
[99.26804352 78.84282684]
[104.09404755 64.64037323]
[108.92004395 50.43791580]
[113.74604034 36.23546219]
[110.86009979 20.67969322]
[122.28079987 11.11847210]
[127.00093079 -3.11951733]
[131.61494446 -17.39225006]
[128.49772644 -32.90332794]
[139.77479553 -42.63352585]
[144.17579651 -56.97337341]
[148.36280823 -71.37715912]
[152.54981995 -85.78093719]
[156.73683167 -100.18472290]
[160.92384338 -114.58850098]
[163.47967529 -129.36915588]
[164.37249756 -144.34255981]
[165.26530457 -159.31596375]
[166.15812683 -174.28936768]
[167.05093384 -189.26277161]
[153.13073730 -195.26309204]
[142.10437012 -205.66477966]
[135.30334473 -219.21180725]
[133.54890442 -234.26828003]
[137.05291748 -249.01609802]
[145.39225769 -261.67434692]
[157.55989075 -270.71450806]
[172.08653259 -275.04492188]
[187.21801758 -274.14266968]
[201.12713623 -268.11672974]
[212.13430786 -257.69473267]
[218.91035461 -244.13519287]
[220.63703918 -229.07550049]
[217.10586548 -214.33418274]
[208.74320984 -201.69131470]
[196.55894470 -192.67359924]
[182.02433777 -188.36996460]
[181.13153076 -173.39656067]
[180.23870850 -158.42315674]
[179.34590149 -143.44975281]
[178.45307922 -128.47633362]
[186.63871765 -141.04595947]
[198.76954651 -149.86883545]
[213.24954224 -153.78414917]
[228.17361450 -152.27679443]
[241.57824707 -145.54508972]
[251.69981384 -134.47468567]
[257.20666504 -120.52210999]
[257.37429810 -105.52304840]
[252.18061829 -91.45088959]
[242.30895996 -80.15706635]
[229.05812073 -73.12747192]
[214.17146301 -71.28697968]
[199.60758972 -74.87773132]
[187.28262329 -83.42730713]
[178.81813049 -95.81085205]
[175.32762146 -110.40148926]
[171.14060974 -95.99771118]
[166.95359802 -81.59392548]
[162.76658630 -67.19014740]
[158.57957458 -52.78636169]
[160.05386353 -48.24372482]
[158.69012451 -42.72672653]
[154.04753113 -38.01951599]
[157.49478149 -23.52932167]
[145.88768005 -12.77824116]
[141.27366638 1.49449193]
[142.20727539 8.82594299]
[136.48326111 15.94446945]
[139.71438599 30.48438263]
[127.94849396 41.06145859]
[123.12249756 55.26391602]
[118.29650116 69.46636963]
[113.47050476 83.66882324]
[120.38557434 94.29122925]
[119.99297333 106.96006775]
[112.43344879 117.13391113]
[100.41687012 121.16572571]
[95.37995911 135.29475403]
[98.03397369 150.89176941]
[86.47219086 160.28189087]
[81.43527222 174.41091919]
[84.08928680 190.00793457]
[72.52750397 199.39805603]
[67.49059296 213.52708435]
[72.30358124 225.49362183]
[67.81745148 237.15802002]
[56.94620132 242.46296692]
[51.69948196 256.51544189]
[46.45276260 270.56790161]
[41.20604706 284.62039185]
[43.62755203 300.25518799]
[31.92724419 309.47213745]
[26.68052673 323.52459717]
[38.70553207 314.55804443]
[53.41337585 311.61196899]
[67.96420288 315.25524902]
[79.54847717 324.78436279]
[85.92945862 338.35946655]
[85.87508392 353.35937500]
[79.39583588 366.88784790]
[67.74277496 376.33273315]
[53.16590881 379.87039185]
[38.47981262 376.81774902]
[26.52013969 367.76425171]
[19.59611130 354.45794678]
[19.04488564 339.46682739]
[11.38428879 352.36315918]
[3.72369123 365.25949097]
[-3.93690610 378.15579224]
[8.33338928 386.79687500]
[19.89716339 396.36282349]
[30.68487358 406.79614258]
[40.63163376 418.03402710]
[49.67763138 430.00891113]
[57.76845169 442.64880371]
[64.85544586 455.87768555]
[70.89598083 469.61596680]
[75.85372925 483.78100586]
[79.69888306 498.28768921]
[82.40830994 513.04870605]
[83.96571350 527.97528076]
[84.36173248 542.97766113]
[83.59398651 557.96557617]
[81.66708374 572.84899902]
[78.59261322 587.53833008]
[74.38907623 601.94519043]
[69.08174896 615.98303223]
[62.70254517 629.56738281]
[55.28983688 642.61651611]
[46.88820648 655.05200195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 189]
[59 188]
[60 187]
[61 186]
[62 173]
[63 172]
[65 170]
[66 169]
[67 168]
[68 167]
[70 164]
[71 163]
[73 161]
[74 160]
[76 158]
[77 157]
[80 153]
[81 152]
[82 151]
[83 150]
[85 148]
[86 146]
[87 145]
[89 143]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
