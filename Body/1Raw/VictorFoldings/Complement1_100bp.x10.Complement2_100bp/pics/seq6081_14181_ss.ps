%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[79.66654205 615.82330322]
[65.01475525 619.07196045]
[50.15528488 621.17535400]
[35.17749786 622.12097168]
[20.17146873 621.90307617]
[5.22745371 620.52294922]
[-9.56467533 617.98895264]
[-24.11595345 614.31628418]
[-38.33887100 609.52703857]
[-52.14788055 603.64996338]
[-65.45993805 596.72052002]
[-78.19498444 588.78033447]
[-90.27642059 579.87707520]
[-101.63159943 570.06445312]
[-112.19221497 559.40130615]
[-121.89475250 547.95190430]
[-130.68087769 535.78503418]
[-138.49772644 522.97393799]
[-145.29830933 509.59558105]
[-151.04170227 495.73043823]
[-155.69337463 481.46194458]
[-159.22535706 466.87588501]
[-161.61640930 452.05996704]
[-162.85212708 437.10330200]
[-162.92510986 422.09588623]
[-161.83489990 407.12792969]
[-159.58804321 392.28945923]
[-156.19808960 377.66973877]
[-151.68539429 363.35665894]
[-146.07710266 349.43634033]
[-139.40695190 335.99249268]
[-131.71505737 323.10592651]
[-123.04767609 310.85421753]
[-113.45693970 299.31097412]
[-103.00052643 288.54568481]
[-91.74131775 278.62304688]
[-79.74703217 269.60278320]
[-67.08981323 261.53909302]
[-53.84577179 254.48049927]
[-40.09456635 248.46945190]
[-25.91889954 243.54209900]
[-11.40402603 239.72807312]
[3.36276007 237.05032349]
[18.29264832 235.52494812]
[33.29584503 235.16111755]
[48.28211975 235.96101379]
[63.16134644 237.91984558]
[66.26545715 223.24455261]
[69.36956787 208.56924438]
[72.47367859 193.89393616]
[75.57778168 179.21864319]
[78.68189240 164.54333496]
[81.78600311 149.86804199]
[84.89011383 135.19273376]
[87.99422455 120.51743317]
[91.09833527 105.84212494]
[92.99163055 90.96209717]
[93.66141510 75.97705841]
[94.33119965 60.99201584]
[95.00098419 46.00697708]
[86.88883209 35.97922516]
[87.75519562 23.51194191]
[96.59152985 15.25084114]
[97.48434448 0.27743533]
[98.37715912 -14.69597054]
[99.26997375 -29.66937637]
[100.16278839 -44.64278030]
[101.05560303 -59.61618805]
[101.94842529 -74.58959198]
[102.84123993 -89.56299591]
[87.98409271 -91.69013977]
[73.35334778 -95.03691864]
[59.04895782 -99.58047485]
[45.16862869 -105.28976440]
[31.80718231 -112.12579346]
[19.05589104 -120.04186249]
[7.00186205 -128.98388672]
[-4.27256346 -138.89080811]
[-14.69036770 -149.69491577]
[-24.18038559 -161.32243347]
[-32.67779160 -173.69390869]
[-40.12453461 -186.72485352]
[-46.46974945 -200.32624817]
[-51.67008972 -214.40516663]
[-55.69003296 -228.86544800]
[-58.50211334 -243.60830688]
[-60.08712769 -258.53302002]
[-60.43424225 -273.53765869]
[-59.54109192 -288.51971436]
[-57.41377258 -303.37683105]
[-54.06681824 -318.00753784]
[-49.52309418 -332.31185913]
[-43.81363678 -346.19213867]
[-36.97744751 -359.55349731]
[-29.06122971 -372.30468750]
[-20.11905479 -384.35861206]
[-10.21201038 -395.63290405]
[0.59222800 -406.05059814]
[12.21985531 -415.54046631]
[24.59144211 -424.03771973]
[37.62247467 -431.48431396]
[51.22394180 -437.82937622]
[65.30292511 -443.02954102]
[79.76324463 -447.04931641]
[94.50613403 -449.86120605]
[109.43087006 -451.44604492]
[124.43550873 -451.79299927]
[139.41755676 -450.89965820]
[154.27464294 -448.77215576]
[168.90530396 -445.42504883]
[183.20959473 -440.88113403]
[197.08978271 -435.17150879]
[210.45106506 -428.33517456]
[223.20216370 -420.41879272]
[235.25598145 -411.47647095]
[246.53018188 -401.56930542]
[256.94772339 -390.76495361]
[266.43746948 -379.13720703]
[274.93457031 -366.76550293]
[282.38101196 -353.73440552]
[288.72589111 -340.13284302]
[293.92590332 -326.05380249]
[297.94549561 -311.59344482]
[300.75723267 -296.85052490]
[302.34188843 -281.92575073]
[302.68865967 -266.92111206]
[301.79513550 -251.93908691]
[299.66744995 -237.08201599]
[296.32015991 -222.45140076]
[291.77609253 -208.14715576]
[286.06631470 -194.26704407]
[279.22979736 -180.90583801]
[271.31329346 -168.15483093]
[262.37081909 -156.10112000]
[252.46350098 -144.82704163]
[241.65901184 -134.40963745]
[230.03115845 -124.92002869]
[217.65937805 -116.42306519]
[204.62815857 -108.97678375]
[191.02655029 -102.63205719]
[176.94744873 -97.43222046]
[162.48701477 -93.41279602]
[147.74406433 -90.60124207]
[132.81929016 -89.01676178]
[117.81464386 -88.67018127]
[116.92182922 -73.69677734]
[116.02901459 -58.72337341]
[115.13619232 -43.74996567]
[114.24337769 -28.77655983]
[113.35056305 -13.80315495]
[112.45774841 1.17025125]
[111.56493378 16.14365768]
[120.25350189 31.39081001]
[109.98602295 46.67676163]
[109.31623840 61.66180038]
[108.64645386 76.64684296]
[107.97666931 91.63188171]
[116.97930145 79.63385773]
[130.48661804 73.11062622]
[145.48103333 73.51950836]
[158.61279297 80.76914978]
[166.94818115 93.23995972]
[168.62509155 108.14592743]
[163.26887512 122.15702820]
[152.07612610 132.14314270]
[137.54734802 135.87335205]
[122.92828369 132.51429749]
[111.48489380 122.81642914]
[105.77363586 108.94623566]
[102.66952515 123.62154388]
[99.56541443 138.29684448]
[96.46131134 152.97215271]
[93.35720062 167.64744568]
[90.25308990 182.32275391]
[87.14897919 196.99804688]
[84.04486847 211.67335510]
[80.94075775 226.34866333]
[77.83664703 241.02395630]
[92.23465729 245.25782776]
[106.26127625 250.59471130]
[119.83213806 257.00250244]
[132.86564636 264.44268799]
[145.28338623 272.87048340]
[157.01069641 282.23522949]
[167.97703552 292.48062134]
[178.11645508 303.54498291]
[187.36798096 315.36181641]
[195.67596436 327.86004639]
[202.99043274 340.96450806]
[209.26741028 354.59637451]
[214.46913147 368.67367554]
[218.56433105 383.11175537]
[221.52836609 397.82376099]
[223.34339905 412.72119141]
[223.99855042 427.71450806]
[223.48983765 442.71347046]
[221.82034302 457.62792969]
[219.00010681 472.36816406]
[215.04609680 486.84555054]
[209.98207092 500.97296143]
[203.83850098 514.66546631]
[196.65232849 527.84069824]
[188.46678162 540.41949463]
[179.33108521 552.32611084]
[169.30018616 563.48895264]
[158.43440247 573.84094238]
[146.79910278 583.31970215]
[134.46423340 591.86840820]
[121.50401306 599.43548584]
[107.99636078 605.97546387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[57 157]
[58 156]
[59 155]
[60 154]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
