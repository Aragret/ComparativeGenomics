%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[159.10668945 898.56231689]
[144.43527222 895.42639160]
[129.92832947 891.60113525]
[115.61820984 887.09503174]
[101.53684998 881.91821289]
[87.71567535 876.08215332]
[74.18553162 869.59991455]
[60.97659683 862.48596191]
[48.11835480 854.75616455]
[35.63949585 846.42773438]
[23.56786346 837.51934814]
[11.93039608 828.05078125]
[0.75305969 818.04321289]
[-9.93920326 807.51892090]
[-20.12253571 796.50152588]
[-29.77421188 785.01544189]
[-38.87269592 773.08642578]
[-47.39768982 760.74102783]
[-55.33016586 748.00683594]
[-62.65242386 734.91217041]
[-69.34812927 721.48638916]
[-75.40233612 707.75939941]
[-80.80153656 693.76177979]
[-85.53367615 679.52484131]
[-89.58821106 665.08026123]
[-92.95608521 650.46038818]
[-95.62978363 635.69769287]
[-97.60334015 620.82525635]
[-98.87235260 605.87622070]
[-99.43399048 590.88397217]
[-99.28699493 575.88183594]
[-98.43169403 560.90344238]
[-96.87000275 545.98211670]
[-94.60540771 531.15124512]
[-91.64295197 516.44378662]
[-87.98925018 501.89270020]
[-83.65245819 487.53036499]
[-78.64225006 473.38885498]
[-72.96981049 459.49975586]
[-66.64778900 445.89401245]
[-59.69029236 432.60198975]
[-52.11285400 419.65338135]
[-43.93238068 407.07702637]
[-35.16711807 394.90106201]
[-25.83663368 383.15258789]
[-15.96174431 371.85787964]
[-5.56448364 361.04208374]
[5.33194685 350.72937012]
[16.70323372 340.94271851]
[28.52400017 331.70401001]
[40.76787186 323.03384399]
[53.40753174 314.95156860]
[66.41476440 307.47518921]
[79.76055908 300.62142944]
[93.41513062 294.40554810]
[107.34799957 288.84143066]
[121.52809143 283.94149780]
[135.92376709 279.71670532]
[132.38409424 265.14031982]
[128.84442139 250.56394958]
[118.32227325 240.02195740]
[122.58451843 224.78569031]
[119.04484558 210.20930481]
[115.50517273 195.63293457]
[111.96549988 181.05656433]
[108.42582703 166.48017883]
[104.88616180 151.90380859]
[91.27265167 151.39759827]
[78.25506592 147.38182068]
[66.72228241 140.13070679]
[57.46178818 130.13934326]
[51.10591507 118.08999634]
[48.08865738 104.80541992]
[48.61603928 91.19271088]
[52.65205383 78.18138885]
[59.92110825 66.65989685]
[69.92685699 57.41495895]
[81.98607635 51.07783508]
[78.88196564 36.40253448]
[75.77785492 21.72723007]
[72.67374420 7.05192804]
[62.24811172 -4.84835672]
[67.18413544 -18.90128899]
[52.13583755 -18.71466827]
[37.34032822 -21.46771049]
[23.36632156 -27.05459595]
[10.75093174 -35.26058197]
[-0.02093600 -45.77024841]
[-8.53523922 -58.17963409]
[-14.46471214 -72.01175690]
[-17.58143997 -86.73493958]
[-17.76562691 -101.78327179]
[-15.01018906 -116.57833862]
[-9.42104149 -130.55143738]
[-1.21301520 -143.16549683]
[9.29839516 -153.93566895]
[21.70915985 -162.44796753]
[35.54224014 -168.37519836]
[50.26593018 -171.48954773]
[65.31429291 -171.67129517]
[80.10890961 -168.91345215]
[94.08110809 -163.32205200]
[106.69384003 -155.11198425]
[117.46230316 -144.59883118]
[125.97258759 -132.18669128]
[131.89758301 -118.35264587]
[135.00955200 -103.62844849]
[135.18885803 -88.58006287]
[132.42863464 -73.78589630]
[126.83496094 -59.81459808]
[118.62285614 -47.20319366]
[108.10795593 -36.43643188]
[95.69444275 -27.92815590]
[81.85944366 -22.00539970]
[92.06304169 -11.15479088]
[87.34904480 3.94781780]
[90.45315552 18.62312126]
[93.55726624 33.29842377]
[96.66137695 47.97372437]
[112.87739563 49.48215866]
[127.83673096 55.92057037]
[140.07951355 66.66064453]
[148.41096497 80.65425873]
[152.01806641 96.53581238]
[150.54878235 112.75542450]
[144.14649963 127.73025513]
[133.43600464 139.99891663]
[119.46253204 148.36413574]
[123.00220490 162.94050598]
[126.54187775 177.51689148]
[130.08155823 192.09326172]
[133.62121582 206.66963196]
[137.16088867 221.24601746]
[147.93621826 232.83061218]
[143.42079163 247.02427673]
[146.96046448 261.60064697]
[150.50013733 276.17703247]
[165.23016357 273.32907104]
[180.07823181 271.17990112]
[195.01123047 269.73431396]
[209.99584961 268.99557495]
[224.99862671 268.96527100]
[239.98609924 269.64352417]
[254.92481995 271.02877808]
[269.78146362 273.11795044]
[284.52285767 275.90640259]
[299.11611938 279.38790894]
[313.52868652 283.55468750]
[327.72842407 288.39743042]
[341.68359375 293.90536499]
[355.36309814 300.06616211]
[368.73641968 306.86608887]
[381.77365112 314.28997803]
[394.44577026 322.32128906]
[406.72448730 330.94204712]
[418.58239746 340.13305664]
[429.99301147 349.87377930]
[440.93090820 360.14251709]
[451.37167358 370.91632080]
[461.29199219 382.17117310]
[470.66973877 393.88192749]
[479.48400879 406.02249146]
[487.71508789 418.56576538]
[495.34463501 431.48373413]
[502.35562134 444.74761963]
[508.73242188 458.32775879]
[514.46075439 472.19390869]
[519.52795410 486.31512451]
[523.92254639 500.65985107]
[527.63488770 515.19610596]
[530.65655518 529.89147949]
[532.98089600 544.71313477]
[534.60272217 559.62805176]
[535.51837158 574.60290527]
[535.72576904 589.60424805]
[535.22454834 604.59869385]
[534.01580811 619.55273438]
[532.10217285 634.43298340]
[529.48797607 649.20629883]
[526.17907715 663.83966064]
[522.18280029 678.30041504]
[517.50805664 692.55633545]
[512.16528320 706.57562256]
[506.16644287 720.32690430]
[499.52487183 733.77954102]
[492.25543213 746.90356445]
[484.37435913 759.66961670]
[475.89916992 772.04931641]
[466.84881592 784.01489258]
[457.24349976 795.53973389]
[447.10464478 806.59814453]
[436.45489502 817.16540527]
[425.31796265 827.21789551]
[413.71875000 836.73327637]
[401.68310547 845.69024658]
[389.23791504 854.06890869]
[376.41091919 861.85046387]
[363.23074341 869.01757812]
[349.72683716 875.55426025]
[335.92929077 881.44598389]
[321.86889648 886.67950439]
[307.57705688 891.24322510]
[293.08563232 895.12689209]
[278.42697144 898.32189941]
[263.63378906 900.82110596]
[248.73908997 902.61889648]
[233.77610779 903.71130371]
[218.77822876 904.09588623]
[203.77891541 903.77172852]
[188.81166077 902.73968506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 137]
[59 136]
[60 135]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[78 119]
[79 118]
[80 117]
[81 116]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
