%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[50.95203781 276.52700806]
[53.90373611 291.25003052]
[55.18838882 306.21096802]
[54.78984070 321.22167969]
[52.71309662 336.09338379]
[48.98427963 350.63900757]
[43.65028381 364.67572021]
[36.77819061 378.02688599]
[28.45441818 390.52468872]
[18.78365135 402.01190186]
[7.88750935 412.34411621]
[-4.09697723 421.39132690]
[-17.01909065 429.03979492]
[-30.71632195 435.19329834]
[-45.01641464 439.77450562]
[-59.73952866 442.72576904]
[-74.70050812 444.00997925]
[-89.71119690 443.61096191]
[-104.58282471 441.53378296]
[-119.12836456 437.80453491]
[-133.16488647 432.47012329]
[-146.51586914 425.59762573]
[-159.01341248 417.27346802]
[-170.50035095 407.60235596]
[-180.83221436 396.70590210]
[-189.87907410 384.72116089]
[-197.52714539 371.79882812]
[-203.68026733 358.10140991]
[-208.26103210 343.80117798]
[-211.21185303 329.07797241]
[-212.49560547 314.11694336]
[-212.09616089 299.10626221]
[-210.01852417 284.23471069]
[-206.28883362 269.68927002]
[-200.95401001 255.65292358]
[-194.08111572 242.30213928]
[-185.75659180 229.80484009]
[-176.08514404 218.31819153]
[-165.18838501 207.98666382]
[-153.20335388 198.94015503]
[-140.28077698 191.29246521]
[-126.58318329 185.13977051]
[-112.28281403 180.55941772]
[-97.55952454 177.60903931]
[-82.59847260 176.32572937]
[-67.58780670 176.72563171]
[-52.71630096 178.80371094]
[-38.17098618 182.53382874]
[-24.13478088 187.86907959]
[-10.78420639 194.74237061]
[1.71284032 203.06727600]
[11.37365055 191.59257507]
[21.03446198 180.11787415]
[30.69527245 168.64317322]
[40.35608292 157.16847229]
[50.01689148 145.69377136]
[59.67770386 134.21907043]
[69.33851624 122.74436951]
[69.40290833 119.21900177]
[71.17803955 115.54968262]
[74.71297455 112.54010773]
[79.69598389 110.98553467]
[89.85953522 99.95365906]
[92.57093811 92.36282349]
[100.25746918 88.83462524]
[110.58413696 77.95529175]
[114.47301483 62.61948013]
[128.84681702 58.71523285]
[139.17347717 47.83589935]
[149.50015259 36.95656204]
[159.82681274 26.07722855]
[149.49574280 15.19739723]
[139.74328613 3.79600692]
[130.59576416 -8.09620571]
[122.07782745 -20.44717979]
[114.21242523 -33.22362137]
[107.02078247 -46.39108658]
[100.52227020 -59.91407776]
[94.73441315 -73.75614166]
[89.67281342 -87.87995148]
[85.35112000 -102.24745178]
[81.78098297 -116.81989288]
[78.97202301 -131.55799866]
[76.93181610 -146.42202759]
[75.66586304 -161.37191772]
[75.17756653 -176.36737061]
[75.46825409 -191.36795044]
[76.53713989 -206.33322144]
[78.38134766 -221.22283936]
[80.99588776 -235.99667358]
[84.37373352 -250.61488342]
[88.50576019 -265.03808594]
[93.38083649 -279.22735596]
[98.98582458 -293.14447021]
[105.30561066 -306.75189209]
[112.32315826 -320.01296997]
[120.01954651 -332.89190674]
[128.37402344 -345.35403442]
[137.36408997 -357.36575317]
[146.96546936 -368.89462280]
[157.15231323 -379.90963745]
[167.89715576 -390.38104248]
[179.17100525 -400.28063965]
[190.94349670 -409.58172607]
[203.18287659 -418.25924683]
[215.85617065 -426.28982544]
[228.92918396 -433.65173340]
[242.36669922 -440.32522583]
[256.13247681 -446.29223633]
[270.18942261 -451.53671265]
[284.49960327 -456.04452515]
[299.02447510 -459.80346680]
[313.72488403 -462.80346680]
[328.56118774 -465.03643799]
[343.49340820 -466.49630737]
[358.48123169 -467.17916870]
[373.48434448 -467.08319092]
[388.46221924 -466.20861816]
[403.37451172 -464.55783081]
[418.18103027 -462.13525391]
[432.84185791 -458.94741821]
[447.31747437 -455.00292969]
[461.56881714 -450.31240845]
[475.55749512 -444.88851929]
[489.24581909 -438.74584961]
[502.59683228 -431.90103149]
[515.57458496 -424.37243652]
[528.14410400 -416.18038940]
[540.27148438 -407.34698486]
[551.92401123 -397.89602661]
[563.07025146 -387.85299683]
[573.68023682 -377.24496460]
[583.72534180 -366.10055542]
[593.17846680 -354.44976807]
[602.01409912 -342.32403564]
[610.20843506 -329.75604248]
[617.73944092 -316.77966309]
[624.58673096 -303.42990112]
[630.73187256 -289.74273682]
[636.15838623 -275.75503540]
[640.85150146 -261.50454712]
[644.79870605 -247.02969360]
[647.98919678 -232.36946106]
[650.41455078 -217.56338501]
[652.06805420 -202.65138245]
[652.94543457 -187.67366028]
[653.04418945 -172.67059326]
[652.36407471 -157.68261719]
[650.90692139 -142.75013733]
[648.67669678 -127.91342926]
[645.67944336 -113.21247101]
[641.92315674 -98.68689728]
[637.41796875 -84.37586975]
[632.17608643 -70.31797028]
[626.21160889 -56.55109406]
[619.54064941 -43.11235046]
[612.18109131 -30.03797531]
[604.15289307 -17.36320877]
[595.47760010 -5.12222385]
[586.17871094 6.65198088]
[576.28118896 17.92766571]
[565.81176758 28.67443085]
[554.79864502 38.86330414]
[543.27154541 48.46682358]
[531.26147461 57.45909119]
[518.80090332 65.81587219]
[505.92337036 73.51464081]
[492.66360474 80.53462982]
[479.05731201 86.85692596]
[465.14123535 92.46447754]
[450.95288086 97.34217834]
[436.53045654 101.47686768]
[421.91287231 104.85740662]
[407.13949585 107.47467804]
[392.25021362 109.32162476]
[377.28515625 110.39327240]
[362.28463745 110.68672943]
[347.28909302 110.20120239]
[332.33895874 108.93800354]
[317.47454834 106.90053558]
[302.73593140 104.09429932]
[288.16284180 100.52684784]
[273.79452515 96.20780182]
[259.66979980 91.14881134]
[245.82666016 85.36351013]
[232.30247498 78.86749268]
[219.13368225 71.67827606]
[206.35578918 63.81523514]
[194.00323486 55.29957199]
[182.10934448 46.15423965]
[170.70614624 36.40389633]
[160.37948608 47.28323364]
[150.05281067 58.16256714]
[139.72615051 69.04190063]
[136.57589722 83.59955597]
[121.46347046 88.28195953]
[111.13680267 99.16130066]
[100.89141083 110.11721039]
[90.72786713 121.14908600]
[80.81320953 132.40518188]
[71.15240479 143.87988281]
[61.49159241 155.35458374]
[51.83078384 166.82928467]
[42.16997147 178.30398560]
[32.50916290 189.77868652]
[22.84835052 201.25338745]
[13.18754005 212.72807312]
[23.52005386 223.62391663]
[32.56762695 235.60812378]
[40.21647644 248.53001404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 207]
[52 206]
[53 205]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[62 199]
[63 198]
[65 197]
[66 196]
[68 194]
[69 193]
[70 192]
[71 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
