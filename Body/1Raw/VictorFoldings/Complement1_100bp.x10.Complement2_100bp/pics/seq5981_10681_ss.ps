%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[290.12246704 521.95983887]
[285.08554077 507.83081055]
[280.04864502 493.70178223]
[275.01171875 479.57275391]
[269.97479248 465.44372559]
[264.62362671 451.43069458]
[258.96081543 437.54067993]
[253.29803467 423.65063477]
[247.63525391 409.76062012]
[241.97247314 395.87060547]
[236.30967712 381.98056030]
[230.64689636 368.09054565]
[224.47113037 354.42086792]
[217.79093933 340.99050903]
[210.91151428 327.66107178]
[203.83441162 314.43554688]
[197.90695190 310.02111816]
[196.75205994 300.95999146]
[189.87265015 287.63058472]
[182.99324036 274.30114746]
[176.11383057 260.97171021]
[169.23440552 247.64228821]
[162.35499573 234.31285095]
[155.47558594 220.98342896]
[148.59617615 207.65399170]
[132.44136047 207.28720093]
[118.59616852 198.77447510]
[110.88906097 184.35861206]
[111.50711060 167.92956543]
[120.37625122 153.97497559]
[113.29914093 140.74945068]
[106.22203827 127.52392578]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[73.47532654 66.32765198]
[57.61217499 56.97661209]
[58.86204910 39.47219086]
[51.58882141 26.35349846]
[44.31558990 13.23480415]
[37.04236221 0.11611048]
[29.67167282 -12.94807434]
[22.20393181 -25.95702744]
[14.35217571 -38.73786926]
[6.12336826 -51.27927017]
[-2.10543966 -63.82067108]
[-10.33424759 -76.36206818]
[-18.56305504 -88.90347290]
[-22.50823975 -90.71717072]
[-25.38203812 -93.42008972]
[-27.03646469 -96.56624603]
[-27.48358154 -99.70737457]
[-26.88236237 -102.44538116]
[-34.35010529 -115.45433044]
[-41.81784439 -128.46328735]
[-49.28558731 -141.47224426]
[-65.42012024 -150.34681702]
[-64.69197083 -167.88069153]
[-72.35256958 -180.77702332]
[-80.01316833 -193.67335510]
[-93.72695923 -187.55383301]
[-108.05846405 -183.06779480]
[-122.81386566 -180.27592468]
[-137.79362488 -179.21595764]
[-152.79513550 -179.90223694]
[-167.61553955 -182.32548523]
[-182.05439758 -186.45292664]
[-195.91645813 -192.22875977]
[-209.01422119 -199.57482910]
[-221.17057800 -208.39183044]
[-232.22113037 -218.56051636]
[-242.01640320 -229.94334412]
[-250.42396545 -242.38639832]
[-257.33007812 -255.72138977]
[-262.64138794 -269.76797485]
[-266.28601074 -284.33621216]
[-268.21469116 -299.22903442]
[-268.40136719 -314.24508667]
[-266.84347534 -329.18127441]
[-263.56207275 -343.83560181]
[-258.60159302 -358.00985718]
[-252.02905273 -371.51239014]
[-243.93339539 -384.16058350]
[-234.42408752 -395.78338623]
[-223.62971497 -406.22360229]
[-211.69627380 -415.34005737]
[-198.78515625 -423.00942993]
[-185.07096863 -429.12805176]
[-170.73915100 -433.61312866]
[-155.98356628 -436.40402222]
[-141.00373840 -437.46298218]
[-126.00227356 -436.77569580]
[-111.18202972 -434.35144043]
[-96.74343872 -430.22305298]
[-82.88177490 -424.44628906]
[-69.78450012 -417.09933472]
[-57.62872696 -408.28152466]
[-46.57886124 -398.11212158]
[-36.78433609 -386.72863770]
[-28.37761307 -374.28503418]
[-21.47237968 -360.94955444]
[-16.16202164 -346.90261841]
[-12.51835918 -332.33416748]
[-10.59066486 -317.44119263]
[-10.40501118 -302.42514038]
[-11.96390820 -287.48904419]
[-15.24627209 -272.83496094]
[-20.20771408 -258.66101074]
[-26.78113747 -245.15892029]
[-34.87764359 -232.51126099]
[-44.38773346 -220.88909912]
[-55.18279648 -210.44960022]
[-67.11684418 -201.33395386]
[-59.45624161 -188.43762207]
[-51.79564667 -175.54129028]
[-40.15465927 -172.25282288]
[-33.66694641 -161.57138062]
[-36.27663422 -148.93997192]
[-28.80889320 -135.93103027]
[-21.34115219 -122.92207336]
[-13.87341022 -109.91312408]
[-6.02165508 -97.13227844]
[2.20715284 -84.59088135]
[10.43596077 -72.04947662]
[18.66476822 -59.50807953]
[26.89357567 -46.96667862]
[29.60767746 -46.26539993]
[32.20752716 -44.44677353]
[34.26615143 -41.54893494]
[35.37825394 -37.76373291]
[35.21288300 -33.42476654]
[42.68062592 -20.41581535]
[48.73688889 -16.17984390]
[50.16105652 -7.15711880]
[57.43428421 5.96157503]
[64.70751190 19.08026886]
[71.98074341 32.19896317]
[83.51866150 35.83256531]
[89.68547058 46.70244217]
[86.70085907 59.25054550]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[119.44756317 120.44682312]
[126.52467346 133.67234802]
[133.60177612 146.89787292]
[147.58702087 146.62292480]
[160.26585388 152.37300110]
[169.18753052 162.97404480]
[172.65457153 176.32052612]
[170.04554749 189.79353333]
[161.92559814 200.77458191]
[168.80500793 214.10401917]
[175.68443298 227.43344116]
[182.56384277 240.76286316]
[189.44325256 254.09230042]
[196.32266235 267.42172241]
[203.20207214 280.75115967]
[210.08149719 294.08059692]
[217.05993652 307.35842896]
[224.13705444 320.58395386]
[229.54229736 324.39114380]
[231.86480713 329.57797241]
[231.22131348 334.31030273]
[237.90150452 347.74066162]
[245.07661438 334.56805420]
[259.82171631 331.81451416]
[271.26727295 341.50982666]
[270.97604370 356.50698853]
[259.16271973 365.75067139]
[244.53692627 362.42776489]
[250.19970703 376.31777954]
[255.86250305 390.20779419]
[261.52526855 404.09783936]
[267.18807983 417.98785400]
[272.85086060 431.87789917]
[278.51364136 445.76791382]
[282.63812256 448.96725464]
[284.89706421 453.02316284]
[285.27661133 457.08160400]
[284.10382080 460.40679932]
[289.14074707 474.53582764]
[294.17767334 488.66485596]
[299.21456909 502.79388428]
[304.25149536 516.92291260]
[319.24938965 515.39770508]
[334.17639160 517.50671387]
[348.16467285 523.12738037]
[360.40093994 531.93292236]
[370.17379761 543.41137695]
[376.91510010 556.89538574]
[380.23287964 571.60101318]
[379.93426514 586.67327881]
[376.03662109 601.23596191]
[368.76651001 614.44238281]
[358.54666138 625.52471924]
[345.97122192 633.83862305]
[331.77130127 638.90081787]
[316.77246094 640.41699219]
[301.84674072 638.29888916]
[287.86187744 632.66973877]
[275.63095093 623.85681152]
[265.86505127 612.37243652]
[259.13192749 598.88433838]
[255.82307434 584.17669678]
[256.13082886 569.10461426]
[260.03732300 554.54431152]
[267.31539917 541.34228516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[5 183]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[13 167]
[14 166]
[15 163]
[16 162]
[18 161]
[19 160]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[30 148]
[31 147]
[32 146]
[33 145]
[35 143]
[36 142]
[37 141]
[39 138]
[40 137]
[41 136]
[42 135]
[43 133]
[44 132]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[54 122]
[55 121]
[56 120]
[57 119]
[59 116]
[60 115]
[61 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
