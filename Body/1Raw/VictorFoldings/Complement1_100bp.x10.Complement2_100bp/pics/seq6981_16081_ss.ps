%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[110.91700745 539.91790771]
[98.13305664 532.01116943]
[86.74347687 522.20178223]
[77.02873230 510.73135376]
[69.22807312 497.88238525]
[63.53358841 483.97128296]
[60.08551025 469.34057617]
[58.96875763 454.35058594]
[60.21082306 439.37048340]
[63.78112030 424.76913452]
[69.59173584 410.90612793]
[77.49956512 398.12283325]
[87.30988312 386.73403931]
[98.78109741 377.02026367]
[111.63071442 369.22064209]
[125.54231262 363.52731323]
[140.17329407 360.08044434]
[139.05764771 345.12197876]
[137.94198608 330.16354370]
[136.82633972 315.20507812]
[135.71069336 300.24664307]
[134.59504700 285.28817749]
[133.47940063 270.32971191]
[132.36375427 255.37127686]
[131.24809265 240.41282654]
[122.58561707 228.29627991]
[129.27508545 213.95884705]
[126.17096710 199.28355408]
[121.13405609 185.15452576]
[115.92701721 179.90966797]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[87.02494049 105.73138428]
[81.85970306 119.81401062]
[73.72879028 132.41909790]
[63.02894974 142.93162537]
[50.28223801 150.83866882]
[36.11059570 155.75442505]
[21.20549393 157.43902588]
[6.29418135 155.81030273]
[-7.89578438 150.94770813]
[-20.67204285 143.08848572]
[-31.41121483 132.61613464]
[-39.58930969 120.04161072]
[-44.80730057 105.97844696]
[-46.81058884 91.11282349]
[-45.50143051 76.17005920]
[-40.94370651 61.87925339]
[-33.35979080 48.93768311]
[-23.11972618 37.97679520]
[-10.72314358 29.53139687]
[3.22509789 24.01355743]
[18.04443359 21.69250488]
[33.01179504 22.68148804]
[47.39689255 26.93225098]
[60.49784088 34.23739243]
[71.67542267 44.24047852]
[80.38425446 56.45343018]
[86.19754028 70.27400970]
[87.09035492 55.30060577]
[87.98316956 40.32720184]
[80.42942810 53.28640747]
[69.69798279 63.76667786]
[56.56354523 71.01143646]
[41.97429657 74.49766541]
[26.98344994 73.97370911]
[12.67320919 69.47737885]
[0.07664035 61.33327103]
[-9.89689827 50.12932205]
[-16.52740860 36.67434692]
[-19.33622742 21.93967628]
[-18.12058449 6.98901653]
[-12.96823788 -7.09833002]
[-4.25114059 -19.30538559]
[7.40141344 -28.75091362]
[21.14821625 -34.75303268]
[35.99687195 -36.87844086]
[50.87545013 -34.97370911]
[64.70984650 -29.17634010]
[76.50134277 -19.90485001]
[85.39870453 -7.82855463]
[90.75962830 6.18074703]
[92.19705200 21.11287308]
[97.65240479 7.14007521]
[103.10776520 -6.83272266]
[108.56312561 -20.80552101]
[108.76908112 -29.93762779]
[114.20511627 -34.94474792]
[119.86790466 -48.83477402]
[117.91297913 -64.53473663]
[129.88252258 -73.39923859]
[135.54530334 -87.28926086]
[141.20809937 -101.17929077]
[146.87088013 -115.06932068]
[134.00953674 -122.84956360]
[122.52371216 -132.54608154]
[112.69626617 -143.92007446]
[104.76919556 -156.69145203]
[98.93772125 -170.54570007]
[95.34544373 -185.14166260]
[94.08082581 -200.11988831]
[95.17501831 -215.11152649]
[98.60105896 -229.74739075]
[104.27459717 -243.66708374]
[112.05590820 -256.52777100]
[121.75337219 -268.01281738]
[133.12817383 -277.83932495]
[145.90020752 -285.76531982]
[159.75494385 -291.59567261]
[174.35119629 -295.18673706]
[189.32952881 -296.45010376]
[204.32107544 -295.35467529]
[218.95666504 -291.92742920]
[232.87586975 -286.25274658]
[245.73593140 -278.47036743]
[257.22015381 -268.77197266]
[267.04574585 -257.39636230]
[274.97070312 -244.62367249]
[280.79986572 -230.76844788]
[284.38973999 -216.17190552]
[285.65188599 -201.19346619]
[284.55523682 -186.20201111]
[281.12677002 -171.56671143]
[275.45092773 -157.64796448]
[267.66751099 -144.78854370]
[257.96813965 -133.30511475]
[246.59172058 -123.48048401]
[233.81838989 -115.55657959]
[219.96269226 -109.72853088]
[205.36582947 -106.13986969]
[190.38729858 -104.87895966]
[175.39593506 -105.97686005]
[160.76091003 -109.40653229]
[155.09812927 -95.51650238]
[149.43533325 -81.62648010]
[143.77255249 -67.73645020]
[146.13252258 -53.02999496]
[133.75793457 -43.17198944]
[128.09515381 -29.28196144]
[122.53591919 -15.35016346]
[117.08056641 -1.37736547]
[111.62520599 12.59543228]
[106.16984558 26.56822968]
[102.95657349 41.22001648]
[102.06375885 56.19342422]
[101.17094421 71.16683197]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[135.26307678 180.11759949]
[140.30000305 194.24662781]
[142.44389343 179.40063477]
[149.01408386 165.91609192]
[159.38432312 155.07829285]
[172.56619263 147.92018127]
[187.30326843 145.12406921]
[202.19093323 146.95643616]
[215.81016541 153.24264526]
[226.86288452 163.38352966]
[234.29560852 176.41252136]
[237.39988708 191.08779907]
[235.87985229 206.01057434]
[229.88037109 219.75852966]
[219.97329712 231.02130127]
[207.10290527 238.72537231]
[192.49589539 242.13645935]
[177.54454041 240.92942810]
[163.67390442 235.21931458]
[152.20602417 225.55039978]
[144.23353577 212.84320068]
[152.97581482 226.02967834]
[146.20655823 239.29716492]
[147.32220459 254.25563049]
[148.43785095 269.21408081]
[149.55349731 284.17254639]
[150.66914368 299.13098145]
[151.78479004 314.08944702]
[152.90045166 329.04788208]
[154.01609802 344.00634766]
[155.13174438 358.96481323]
[170.11216736 360.20315552]
[184.71440125 363.76983643]
[198.57885742 369.57702637]
[211.36410522 377.48168945]
[222.75531006 387.28918457]
[232.47193909 398.75799561]
[240.27471924 411.60568237]
[245.97149658 425.51586914]
[249.42199707 440.14599609]
[250.54121399 455.13577271]
[249.30162048 470.11608887]
[245.73373413 484.71804810]
[239.92541504 498.58203125]
[232.01968384 511.36660767]
[222.21125793 522.75701904]
[210.74163818 532.47271729]
[197.89331055 540.27441406]
[183.98265076 545.97003174]
[169.35224915 549.41931152]
[154.36236572 550.53735352]
[139.38214111 549.29650879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[27 179]
[28 160]
[29 159]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[37 152]
[64 151]
[65 150]
[66 149]
[88 148]
[89 147]
[90 146]
[91 145]
[93 144]
[94 143]
[96 141]
[97 140]
[98 139]
[99 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
