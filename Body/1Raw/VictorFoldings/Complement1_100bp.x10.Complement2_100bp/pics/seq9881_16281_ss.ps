%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[49.01702881 546.99664307]
[37.26519394 537.42218018]
[29.49940109 524.40417480]
[26.65740967 509.51461792]
[29.08240318 494.55151367]
[36.48155212 481.32168579]
[47.96137238 471.42269897]
[62.13562012 466.04995728]
[61.91229248 451.05160522]
[61.68896484 436.05328369]
[61.46563721 421.05493164]
[61.24230957 406.05661011]
[61.01898193 391.05825806]
[52.35093307 403.30020142]
[38.76481247 409.65765381]
[23.81199646 408.46881104]
[11.40112019 400.04443359]
[4.77635336 386.58663940]
[5.66939545 371.61325073]
[13.84680748 359.03826904]
[27.17103386 352.14880371]
[42.15915298 352.74569702]
[54.89330673 360.67294312]
[62.04460907 373.85751343]
[64.04862213 358.99200439]
[66.05263519 344.12646484]
[55.17073441 333.99127197]
[52.30962753 319.21704102]
[58.77230072 305.42980957]
[72.27012634 298.00588989]
[74.27413940 283.14035034]
[76.27815247 268.27481079]
[78.06062317 253.38110352]
[79.62113953 238.46249390]
[66.31542969 229.29350281]
[59.40952682 214.58078003]
[60.87403107 198.29974365]
[70.40354156 184.90257263]
[85.47427368 178.10073853]
[86.81250763 163.16055298]
[80.24153137 149.79374695]
[89.17916870 136.73889160]
[90.51740265 121.79871368]
[91.85563660 106.85852814]
[91.96730042 91.85894775]
[90.85165405 76.90048981]
[89.73600769 61.94203568]
[88.62035370 46.98358536]
[86.83789062 32.08986664]
[84.39216614 17.29059601]
[81.94643402 2.49132490]
[79.50070953 -12.30794621]
[69.61685181 -24.66189003]
[75.17544556 -38.48040009]
[72.72972107 -53.27967072]
[62.84586334 -65.63361359]
[68.40445709 -79.45212555]
[65.95873260 -94.25139618]
[63.51300430 -109.05066681]
[61.06727982 -123.84993744]
[49.05610275 -137.80749512]
[55.87127304 -153.97908020]
[53.20547867 -168.74029541]
[50.53968430 -183.50151062]
[47.87388992 -198.26272583]
[43.36626053 -212.56941223]
[37.08889771 -226.19273376]
[30.81153870 -239.81605530]
[24.53417778 -253.43936157]
[18.25681686 -267.06268311]
[11.97945595 -280.68600464]
[-2.47066164 -276.55145264]
[-17.38258171 -274.67126465]
[-32.40674591 -275.08950806]
[-47.19096375 -277.79641724]
[-61.38867950 -282.72848511]
[-74.66706848 -289.77011108]
[-86.71487427 -298.75625610]
[-97.24967957 -309.47625732]
[-106.02452850 -321.67883301]
[-112.83372498 -335.07791138]
[-117.51765442 -349.35940552]
[-119.96652222 -364.18853760]
[-120.12291718 -379.21771240]
[-117.98317719 -394.09460449]
[-113.59745789 -408.47048950]
[-107.06857300 -422.00836182]
[-98.54956055 -434.39089966]
[-88.24011993 -445.32778931]
[-76.38192749 -454.56271362]
[-63.25294495 -461.87915039]
[-49.16094208 -467.10562134]
[-34.43625259 -470.11956787]
[-19.42404556 -470.85040283]
[-4.47622967 -469.28094482]
[10.05679893 -465.44796753]
[23.83436584 -459.44140625]
[36.53350067 -451.40197754]
[47.85652542 -441.51815796]
[57.53800201 -430.02166748]
[65.35099030 -417.18197632]
[71.11234283 -403.30007935]
[74.68700409 -388.70135498]
[75.99117279 -373.72805786]
[74.99428558 -358.73117065]
[71.71970367 -344.06225586]
[66.24419403 -330.06512451]
[58.69610977 -317.06796265]
[49.25238800 -305.37536621]
[38.13440323 -295.26147461]
[25.60277176 -286.96334839]
[31.88013268 -273.34005737]
[38.15749359 -259.71673584]
[44.43485260 -246.09341431]
[50.71221542 -232.47009277]
[56.98957443 -218.84677124]
[57.93077469 -233.81721497]
[63.62098694 -247.69602966]
[73.45970917 -259.01855469]
[86.40864563 -266.58990479]
[101.10124969 -269.61102295]
[115.98699188 -267.76312256]
[129.49493408 -261.24121094]
[140.19955444 -250.73352051]
[146.97117615 -237.34901428]
[149.09515381 -222.50015259]
[146.34735107 -207.75398254]
[139.01776123 -194.66668701]
[127.87987518 -184.61943054]
[114.10910797 -178.67250061]
[99.15872192 -177.45349121]
[84.60646820 -181.09104919]
[71.98807526 -189.20130920]
[62.63510513 -200.92852783]
[65.30090332 -186.16731262]
[67.96669769 -171.40609741]
[70.63249207 -156.64488220]
[80.38789368 -149.49234009]
[82.72961426 -137.21633911]
[75.86654663 -126.29566956]
[78.31227875 -111.49639893]
[80.75800323 -96.69712830]
[83.20373535 -81.89785767]
[92.91265106 -70.60245514]
[87.52899170 -55.72539902]
[89.97471619 -40.92612839]
[99.68363953 -29.63072777]
[94.29998016 -14.75367355]
[96.74570465 0.04559740]
[99.19143677 14.84486866]
[101.63716125 29.64413834]
[111.23013306 18.11266708]
[126.15414429 16.60468292]
[137.86003113 25.98402786]
[139.64213562 40.87778854]
[130.47959900 52.75413895]
[115.62111664 54.80977249]
[103.57881165 45.86793518]
[104.69445801 60.82638931]
[105.81010437 75.78484344]
[106.92575836 90.74329376]
[114.43886566 77.76049042]
[127.07530975 69.67839813]
[142.01208496 68.30257416]
[155.91226196 73.94038391]
[165.67051697 85.33232880]
[169.10682678 99.93341827]
[165.45352173 114.48172760]
[155.52674866 125.72713470]
[141.54417419 131.15737915]
[126.62953186 129.55932617]
[114.11481476 121.29000092]
[106.79582214 108.19676208]
[105.45758820 123.13694763]
[104.11935425 138.07713318]
[110.59460449 152.51255798]
[101.75269318 164.49879456]
[100.41445923 179.43898010]
[112.25826263 186.88122559]
[119.70453644 198.64425659]
[121.34828949 212.40203857]
[116.92534637 225.46292114]
[107.35284424 235.29634094]
[94.53974915 240.02302551]
[92.97922516 254.94161987]
[95.31813049 261.12554932]
[94.33110809 266.72222900]
[91.14368439 270.27883911]
[89.13967133 285.14434814]
[87.13565826 300.00988770]
[98.18572235 310.74310303]
[100.76674652 325.74951172]
[94.09546661 339.23867798]
[80.91816711 346.13046265]
[78.91415405 360.99600220]
[76.91013336 375.86154175]
[76.01731873 390.83493042]
[76.24064636 405.83328247]
[76.46397400 420.83160400]
[76.68730164 435.82995605]
[76.91062927 450.82827759]
[77.13395691 465.82662964]
[91.46189117 470.77496338]
[103.23135376 480.32775879]
[111.02112579 493.33142090]
[113.89054871 508.21572876]
[111.49313354 523.18328857]
[104.11837769 536.42675781]
[92.65682220 546.34686279]
[78.49249268 551.74572754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[24 196]
[25 195]
[26 194]
[30 190]
[31 189]
[32 188]
[33 185]
[34 184]
[39 178]
[40 177]
[42 175]
[43 174]
[44 173]
[45 161]
[46 160]
[47 159]
[48 158]
[49 151]
[50 150]
[51 149]
[52 148]
[54 146]
[55 145]
[57 143]
[58 142]
[59 141]
[60 140]
[62 137]
[63 136]
[64 135]
[65 134]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
