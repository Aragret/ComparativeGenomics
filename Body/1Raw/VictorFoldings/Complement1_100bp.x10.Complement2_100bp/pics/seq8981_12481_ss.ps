%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[101.22750092 535.90771484]
[101.16970062 520.83807373]
[104.58934021 506.16146851]
[111.30200958 492.66937256]
[120.94568634 481.08935547]
[133.00030518 472.04598999]
[146.81579590 466.02691650]
[144.14999390 451.26568604]
[141.48419189 436.50448608]
[138.81840515 421.74325562]
[129.06300354 414.59072876]
[126.72128296 402.31472778]
[133.58435059 391.39404297]
[131.13862610 376.59478760]
[128.69288635 361.79550171]
[126.24716187 346.99624634]
[123.80143738 332.19696045]
[121.35571289 317.39770508]
[111.64678955 306.10229492]
[117.03044891 291.22525024]
[114.58472443 276.42596436]
[100.24224854 272.33221436]
[89.05348206 262.37625122]
[83.27326965 248.49281311]
[84.09751892 233.41499329]
[91.41623688 220.13630676]
[103.82470703 211.31637573]
[94.11578369 200.02098083]
[99.49945068 185.14392090]
[97.05372620 170.34465027]
[94.60799408 155.54537964]
[87.85182953 168.93769836]
[75.35909271 177.24020386]
[60.39535904 178.28263855]
[46.87211227 171.79251099]
[38.32429504 159.46632385]
[36.98628616 144.52612305]
[43.20783997 130.87722778]
[55.36265564 122.08743286]
[70.27349091 120.45436859]
[84.04269409 126.40491486]
[93.07069397 138.38279724]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.84246063 78.39650726]
[91.39585114 63.40316010]
[90.94924164 48.40980911]
[88.06397247 33.68991852]
[82.81725311 19.63744736]
[77.57053375 5.58497667]
[74.12503815 2.94253087]
[71.92127228 -0.32976472]
[71.00475311 -3.76420832]
[71.26445007 -6.92635441]
[72.45716095 -9.46319866]
[61.01141357 -20.38590050]
[64.67401123 -34.82316589]
[60.27301788 -49.16301346]
[55.87201691 -63.50286102]
[51.47101974 -77.84270477]
[40.02527237 -88.76541138]
[43.68787003 -103.20267487]
[39.28687286 -117.54251862]
[34.56673813 -131.78050232]
[29.52982330 -145.90954590]
[24.49290657 -160.03857422]
[19.45598984 -174.16760254]
[4.81320381 -170.83215332]
[-10.12130356 -169.25201416]
[-25.13787460 -169.44935608]
[-40.02569962 -171.42141724]
[-54.57577896 -175.14050293]
[-68.58384705 -180.55439758]
[-81.85326385 -187.58711243]
[-94.19773102 -196.13990784]
[-105.44396973 -206.09272766]
[-115.43408203 -217.30584717]
[-124.02783203 -229.62184143]
[-131.10458374 -242.86782837]
[-136.56497192 -256.85784912]
[-140.33236694 -271.39547729]
[-142.35385132 -286.27667236]
[-142.60105896 -301.29251099]
[-141.07054138 -316.23217773]
[-137.78373718 -330.88595581]
[-132.78683472 -345.04815674]
[-126.14996338 -358.51989746]
[-117.96629333 -371.11212158]
[-108.35070801 -382.64801025]
[-97.43819427 -392.96563721]
[-85.38195801 -401.92016602]
[-72.35124207 -409.38586426]
[-58.52898407 -415.25796509]
[-44.10921478 -419.45401001]
[-29.29437447 -421.91506958]
[-14.29243755 -422.60662842]
[0.68599135 -421.51895142]
[15.43063927 -418.66732788]
[29.73451424 -414.09179688]
[43.39681244 -407.85659790]
[56.22573471 -400.04922485]
[68.04118347 -390.77929688]
[78.67729187 -380.17694092]
[87.98474121 -368.39102173]
[95.83287048 -355.58700562]
[102.11151123 -341.94461060]
[106.73250580 -327.65536499]
[109.63099670 -312.91986084]
[110.76628876 -297.94494629]
[110.12244415 -282.94088745]
[107.70849609 -268.11828613]
[103.55834198 -253.68525696]
[97.73023987 -239.84439087]
[90.30600739 -226.79000854]
[81.38986969 -214.70535278]
[71.10698700 -203.76008606]
[59.60173035 -194.10786438]
[47.03560257 -185.88420105]
[33.58501816 -179.20451355]
[38.62193680 -165.07548523]
[43.65885162 -150.94645691]
[48.69577026 -136.81742859]
[51.70756531 -134.98400879]
[53.98096466 -131.60070801]
[54.79718399 -127.03047180]
[53.62672043 -121.94351959]
[58.02771759 -107.60366821]
[69.15867615 -97.70664978]
[65.81086731 -82.24370575]
[70.21186829 -67.90385437]
[74.61286163 -53.56401062]
[79.01386261 -39.22416306]
[90.14482117 -29.32714462]
[86.79701233 -13.86419678]
[91.62300873 0.33825868]
[96.86972809 14.39072990]
[102.11644745 28.44320107]
[103.72094727 13.52926254]
[109.08119202 -0.48029852]
[117.84164429 -12.65627861]
[129.42124939 -22.19108963]
[143.05198669 -28.45232010]
[157.82977295 -31.02468681]
[172.77445984 -29.73757172]
[186.89479065 -24.67634773]
[199.25424194 -16.17670441]
[209.03305054 -4.80239534]
[215.58262634 8.69216442]
[218.46853638 23.41192818]
[217.49940491 38.38058853]
[212.73948669 52.60532761]
[204.50448608 65.14266205]
[193.34062195 75.16104889]
[179.98834229 81.99599457]
[165.33325195 85.19416809]
[150.34736633 84.54344177]
[136.02465820 80.08697510]
[123.31510162 72.12035370]
[113.06166840 61.17197418]
[105.94259644 47.96320343]
[106.38919830 62.95655441]
[106.83580780 77.94990540]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[108.06903076 138.15946960]
[109.40726471 153.09965515]
[111.85299683 167.89892578]
[114.29872131 182.69819641]
[124.18257904 195.05213928]
[118.62397766 208.87065125]
[133.21035767 213.22941589]
[144.41213989 223.44740295]
[150.04360962 237.45834351]
[149.03749084 252.46330261]
[141.64678955 265.48968506]
[129.38398743 273.98025513]
[131.82972717 288.77951050]
[141.71357727 301.13345337]
[136.15498352 314.95196533]
[138.60070801 329.75125122]
[141.04643250 344.55050659]
[143.49215698 359.34979248]
[145.93789673 374.14904785]
[148.38362122 388.94833374]
[160.39479065 402.90588379]
[153.57962036 419.07745361]
[156.24542236 433.83868408]
[158.91120911 448.59991455]
[161.57701111 463.36111450]
[176.62513733 464.16757202]
[191.08149719 468.42321777]
[204.16645813 475.89852905]
[215.17437744 486.19039917]
[223.51161194 498.74377441]
[228.72853088 512.88171387]
[230.54380798 527.84167480]
[228.85954285 542.81701660]
[223.76655579 557.00000000]
[215.53952026 569.62591553]
[204.62210083 580.01373291]
[191.60305786 587.60327148]
[177.18450928 591.98529053]
[162.14401245 592.92340088]
[147.29267883 590.36706543]
[133.43144226 584.45416260]
[121.30780029 575.50354004]
[111.57557678 563.99786377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 192]
[8 191]
[9 190]
[10 189]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[20 180]
[21 179]
[27 173]
[29 171]
[30 170]
[31 169]
[42 168]
[43 167]
[44 166]
[45 164]
[46 163]
[47 162]
[48 161]
[49 138]
[50 137]
[51 136]
[56 135]
[58 133]
[59 132]
[60 131]
[61 130]
[63 128]
[64 127]
[65 123]
[66 122]
[67 121]
[68 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
