%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[181.39312744 610.35260010]
[186.29039001 596.08099365]
[194.71533203 583.56372070]
[206.09356689 573.65417480]
[219.64929199 567.02813721]
[216.76402283 552.30822754]
[213.87875366 537.58831787]
[210.99348450 522.86846924]
[198.52743530 514.79791260]
[195.39167786 499.91094971]
[203.94129944 486.89013672]
[194.08050537 479.88363647]
[191.55625916 467.64389038]
[198.25598145 456.62222290]
[195.59017944 441.86102295]
[192.92437744 427.09979248]
[183.04837036 415.95019531]
[188.20993042 400.99462891]
[185.54414368 386.23342896]
[182.11308289 371.63110352]
[177.92607117 357.22732544]
[173.73905945 342.82354736]
[169.55204773 328.41976929]
[159.10546875 322.32092285]
[155.49931335 310.35516357]
[161.18901062 298.77975464]
[157.21691895 284.31524658]
[153.24482727 269.85070801]
[149.27272034 255.38618469]
[145.30062866 240.92166138]
[140.68661499 226.64892578]
[135.43989563 212.59645081]
[130.19317627 198.54399109]
[116.07486725 188.12092590]
[119.27332306 169.98667908]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[82.53913879 84.50404358]
[83.14444733 77.13821411]
[77.89772797 63.08574295]
[66.50878906 57.03141403]
[62.42808533 45.21906281]
[67.32769775 34.15921021]
[62.29078293 20.03018188]
[58.88500977 17.33673096]
[56.73020172 14.03198719]
[55.86492157 10.58427811]
[56.17167282 7.42634964]
[57.40201950 4.90754366]
[53.21501160 -9.49623775]
[49.02799988 -23.90002060]
[43.36346436 -10.01070690]
[31.15052605 -1.30185044]
[16.17350006 -0.47198573]
[3.07317805 -7.77825499]
[-4.09116173 -20.95673180]
[-3.09957051 -35.92391968]
[5.74069595 -48.04207611]
[19.69038582 -53.55625534]
[34.42703247 -50.75783157]
[45.38446426 -40.51370239]
[43.15934753 -55.34774399]
[40.93422699 -70.18178558]
[35.31587219 -56.27373123]
[24.85775757 -45.52069092]
[11.11128426 -39.51782227]
[-3.88434196 -39.15561295]
[-17.90460777 -44.48778915]
[-28.86968994 -54.72336578]
[-35.15298462 -68.34394073]
[-35.82240295 -83.32900238]
[-30.77863884 -97.45558929]
[-20.76990509 -108.62810516]
[-7.28093958 -115.18918610]
[7.68725204 -116.16553497]
[21.91422653 -111.41230011]
[33.28949738 -101.63461304]
[40.12508011 -88.28475952]
[41.01789856 -103.25816345]
[41.91071320 -118.23157501]
[42.80352783 -133.20497131]
[31.64286995 -123.18301392]
[16.65606499 -122.55400848]
[4.69487762 -131.60552979]
[1.22780287 -146.19934082]
[7.83994055 -159.66336060]
[21.50831032 -165.84199524]
[35.98391724 -161.91049194]
[44.64920425 -149.66445923]
[47.09493256 -164.46372986]
[41.71126938 -179.34078979]
[51.42019272 -190.63618469]
[53.86592102 -205.43545532]
[56.31164551 -220.23472595]
[58.75737381 -235.03399658]
[61.20310211 -249.83326721]
[47.51997757 -256.21093750]
[36.06568909 -266.04464722]
[27.69021606 -278.60467529]
[23.01507568 -292.95895386]
[22.38719749 -308.04232788]
[25.85317230 -322.73553467]
[33.15579987 -335.94818115]
[43.75317764 -346.69982910]
[56.85891342 -354.19265747]
[71.50047302 -357.87060547]
[86.59134674 -357.46078491]
[101.01170349 -352.99359131]
[113.69145203 -344.80050659]
[123.68967438 -333.48953247]
[130.26443481 -319.89999390]
[132.92782593 -305.04037476]
[131.48223877 -290.01330566]
[126.03491974 -275.93389893]
[116.99010468 -263.84698486]
[105.01898193 -254.64942932]
[91.00988007 -249.02380371]
[76.00237274 -247.38754272]
[73.55664825 -232.58827209]
[71.11091614 -217.78900146]
[68.66519165 -202.98973083]
[66.21945953 -188.19046021]
[71.77806091 -174.37194824]
[61.89420319 -162.01800537]
[59.44847488 -147.21873474]
[57.77693558 -132.31216431]
[56.88412094 -117.33875275]
[55.99130249 -102.36534882]
[55.09848785 -87.39194489]
[55.76827240 -72.40690613]
[57.99338913 -57.57286072]
[60.21850586 -42.73881912]
[63.43178177 -28.08703232]
[67.61878967 -13.68324947]
[71.80580139 0.72053266]
[76.41981506 14.99326611]
[81.45672607 29.12229538]
[95.41829681 39.75439453]
[91.95019531 57.83902359]
[97.19691467 71.89149475]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.24612427 164.53131104]
[144.72393799 170.41540527]
[148.98005676 182.16569519]
[144.24565125 193.29727173]
[149.49237061 207.34974670]
[154.73908997 221.40220642]
[161.93482971 208.24085999]
[176.29008484 203.89038086]
[189.58151245 210.84292603]
[194.19517517 225.11576843]
[187.48817444 238.53277588]
[173.30255127 243.40806580]
[159.76515198 236.94956970]
[163.73724365 251.41409302]
[167.70935059 265.87860107]
[171.68144226 280.34313965]
[175.65353394 294.80764771]
[189.05160522 307.43988037]
[183.95582581 324.23275757]
[188.14283752 338.63653564]
[192.32984924 353.04031372]
[196.51686096 367.44409180]
[203.66415405 354.25637817]
[217.56954956 348.63140869]
[231.87565613 353.14083862]
[240.04194641 365.72305298]
[238.33486938 380.62557983]
[227.53491211 391.03524780]
[212.57963562 392.19284058]
[200.30535889 383.56762695]
[202.97114563 398.32885742]
[213.03784180 410.53427124]
[207.68560791 424.43399048]
[210.35139465 439.19522095]
[213.01719666 453.95645142]
[225.23484802 467.73361206]
[218.66119385 484.00488281]
[231.49377441 492.83453369]
[234.21015930 507.80368042]
[225.71336365 519.98315430]
[228.59864807 534.70306396]
[231.48391724 549.42297363]
[234.36918640 564.14282227]
[249.42327881 565.16107178]
[263.70056152 570.04174805]
[276.22760010 578.45220947]
[286.15029907 589.81896973]
[292.79205322 603.36700439]
[295.70007324 618.17260742]
[294.67605591 633.22631836]
[289.78982544 647.50170898]
[281.37451172 660.02551270]
[270.00393677 669.94378662]
[256.45333862 676.58032227]
[241.64662170 679.48260498]
[226.59332275 678.45275879]
[212.31980896 673.56103516]
[199.79925537 665.14093018]
[189.88536072 653.76654053]
[183.25405884 640.21337891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 193]
[6 192]
[7 191]
[8 190]
[11 187]
[14 185]
[15 184]
[16 183]
[18 181]
[19 180]
[20 172]
[21 171]
[22 170]
[23 169]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[31 156]
[32 155]
[33 154]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[41 145]
[43 144]
[44 143]
[47 141]
[48 140]
[53 139]
[54 138]
[55 137]
[65 136]
[66 135]
[67 134]
[82 133]
[83 132]
[84 131]
[85 130]
[93 129]
[94 128]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
