%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[113.52527618 593.75799561]
[113.52443695 578.71148682]
[116.37143707 563.93682861]
[121.96337128 549.96801758]
[130.09808350 537.31011963]
[140.48150635 526.42065430]
[152.73831177 517.69323730]
[166.42538452 511.44338989]
[162.88571167 496.86703491]
[159.34603882 482.29064941]
[155.80636597 467.71426392]
[152.26669312 453.13790894]
[137.30506897 452.82330322]
[122.92366028 448.64334106]
[110.10450745 440.87713623]
[99.72454834 430.04898071]
[92.49568176 416.89285278]
[88.91594696 402.30264282]
[89.23518372 387.27148438]
[93.43765259 372.82412720]
[101.24263763 359.94708252]
[112.12324524 349.52127075]
[125.34192657 342.26165771]
[121.80225372 327.68530273]
[113.09352112 339.89831543]
[98.32301331 342.51211548]
[85.95193481 334.02938843]
[83.06701660 319.30944824]
[91.32086182 306.78451538]
[105.98529816 303.62945557]
[118.65931702 311.65084839]
[109.11963654 300.21215820]
[114.72420502 285.41690063]
[112.49908447 270.58285522]
[102.95941162 259.14416504]
[108.56397247 244.34890747]
[106.33885956 229.51486206]
[104.11373901 214.68081665]
[101.88861847 199.84677124]
[99.71709442 198.07402039]
[98.11693573 195.33430481]
[97.45996857 191.84091187]
[98.03400421 187.93769836]
[100.00001526 184.06617737]
[91.15809631 172.07994080]
[97.63335419 157.64450073]
[96.29512024 142.70433044]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[76.55068970 86.19927979]
[62.65542984 80.39115906]
[50.56143570 71.43156433]
[40.96912003 59.84476852]
[34.43273163 46.30708313]
[31.32830620 31.60730934]
[31.83205414 16.60082626]
[35.91035080 2.15979218]
[43.32195663 -10.87753773]
[53.63226318 -21.75546837]
[66.23880768 -29.84466743]
[80.40643311 -34.67857742]
[79.06819916 -49.61875916]
[77.72996521 -64.55894470]
[76.39173126 -79.49913025]
[75.05349731 -94.43931580]
[66.11585999 -107.49417114]
[72.68683624 -120.86097717]
[71.34860229 -135.80116272]
[69.56613922 -150.69488525]
[67.34101868 -165.52893066]
[65.11590576 -180.36296082]
[62.89078522 -195.19700623]
[60.66566849 -210.03105164]
[58.44055176 -224.86509705]
[48.74172211 -237.36482239]
[54.50543976 -251.09904480]
[52.28032303 -265.93310547]
[40.47828293 -280.06793213]
[47.53347397 -296.13626099]
[45.08774567 -310.93551636]
[42.64201736 -325.73480225]
[40.19628906 -340.53405762]
[30.31243324 -352.88800049]
[35.87102890 -366.70651245]
[33.42530441 -381.50579834]
[30.97957611 -396.30505371]
[15.95503807 -397.61428833]
[1.72838843 -402.61962891]
[-10.80607319 -411.00640869]
[-20.86042023 -422.24743652]
[-27.80262947 -435.63610840]
[-31.19630623 -450.33078003]
[-30.82811928 -465.40777588]
[-26.72121811 -479.91928101]
[-19.13376236 -492.95312500]
[-8.54270554 -503.69000244]
[4.38618755 -511.45495605]
[18.84019661 -515.75988770]
[33.91073227 -516.33416748]
[48.65044403 -513.14172363]
[62.13278580 -506.38323975]
[73.51023865 -496.48355103]
[82.06761932 -484.06491089]
[87.26699066 -469.90802002]
[88.78152466 -454.90280151]
[86.51600647 -439.99246216]
[80.61286163 -426.11428833]
[71.44316101 -414.14068604]
[59.58331299 -404.82431030]
[45.77884674 -398.75079346]
[48.22457504 -383.95150757]
[50.67030334 -369.15225220]
[60.37922287 -357.85684204]
[54.99555969 -342.97979736]
[57.44128799 -328.18051147]
[59.88701630 -313.38125610]
[62.33274460 -298.58197021]
[71.98056793 -291.28500366]
[74.13926697 -278.97549438]
[67.11436462 -268.15820312]
[69.33948517 -253.32417297]
[78.87915802 -241.88546753]
[73.27459717 -227.09020996]
[75.49971008 -212.25616455]
[77.72483063 -197.42213440]
[79.94994354 -182.58808899]
[82.17506409 -167.75404358]
[84.40017700 -152.91999817]
[86.57170868 -151.14724731]
[88.17186737 -148.40753174]
[88.82883453 -144.91413879]
[88.25479889 -141.01092529]
[86.28878784 -137.13940430]
[87.62702179 -122.19921112]
[96.46894073 -110.21298218]
[89.99368286 -95.77754974]
[91.33191681 -80.83736420]
[92.67015076 -65.89717865]
[94.00838470 -50.95699310]
[95.34661865 -36.01681137]
[110.14779663 -33.77771759]
[123.99127197 -28.05772018]
[136.07067871 -19.18529892]
[145.68128967 -7.67269754]
[152.26110840 5.81365824]
[155.42379761 20.49172974]
[154.98121643 35.50921631]
[150.95480347 49.99304581]
[143.57438660 63.10013199]
[133.26521301 74.06644440]
[120.62336731 82.25156403]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.23530579 141.36608887]
[112.57353973 156.30627441]
[121.51117706 169.36112976]
[114.94020081 182.72793579]
[116.72266388 197.62165833]
[118.94778442 212.45570374]
[121.17289734 227.28973389]
[123.39801788 242.12377930]
[133.09684753 254.62351990]
[127.33312988 268.35772705]
[129.55824280 283.19177246]
[139.25708008 295.69149780]
[133.49336243 309.42572021]
[136.37863159 324.14562988]
[139.91830444 338.72198486]
[154.99424744 339.11062622]
[169.44464111 343.38516235]
[182.28613281 351.24847412]
[192.64651489 362.15945435]
[199.82391357 375.37014771]
[203.33432007 389.97720337]
[202.94432068 404.98348999]
[198.68647766 419.36621094]
[190.85679626 432.14669800]
[179.99412537 442.45684814]
[166.84307861 449.59823608]
[170.38275146 464.17459106]
[173.92242432 478.75097656]
[177.46208191 493.32736206]
[181.00175476 507.90371704]
[196.03083801 507.18023682]
[210.92520142 509.31436157]
[225.14642334 514.22894287]
[238.18043518 521.74633789]
[249.55606079 531.59478760]
[258.86206055 543.41827393]
[265.76205444 556.78936768]
[270.00656128 571.22473145]
[271.44223022 586.20257568]
[270.01708984 601.18139648]
[265.78268433 615.61975098]
[258.89205933 628.99572754]
[249.59436035 640.82574463]
[238.22566223 650.68218994]
[225.19692993 658.20867920]
[210.97914124 663.13323975]
[196.08628845 665.27783203]
[181.05670166 664.56488037]
[166.43373108 661.02014160]
[152.74595642 654.77185059]
[140.48818970 646.04583740]
[130.10354614 635.15747070]
[121.96741486 622.50048828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[23 172]
[24 171]
[31 170]
[33 168]
[34 167]
[36 165]
[37 164]
[38 163]
[39 162]
[44 161]
[46 159]
[47 158]
[48 157]
[49 156]
[51 154]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[69 136]
[70 135]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[78 123]
[79 122]
[81 119]
[82 118]
[83 117]
[84 116]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
