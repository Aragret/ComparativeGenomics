%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[89.41546631 879.89385986]
[74.45362854 878.79058838]
[59.55522919 877.02655029]
[44.74944687 874.60522461]
[30.06525612 871.53143311]
[15.53140354 867.81103516]
[1.17634141 863.45147705]
[-12.97183037 858.46112061]
[-26.88541603 852.84991455]
[-40.53717804 846.62872314]
[-53.90039444 839.80975342]
[-66.94890594 832.40631104]
[-79.65716553 824.43298340]
[-92.00030518 815.90533447]
[-103.95414734 806.84008789]
[-115.49530792 797.25488281]
[-126.60118866 787.16857910]
[-137.25004578 776.60089111]
[-147.42103577 765.57250977]
[-157.09423828 754.10504150]
[-166.25074768 742.22094727]
[-174.87260437 729.94342041]
[-182.94294739 717.29656982]
[-190.44598389 704.30505371]
[-197.36700439 690.99444580]
[-203.69248962 677.39068604]
[-209.41004944 663.52044678]
[-214.50846863 649.41088867]
[-218.97779846 635.08959961]
[-222.80926514 620.58459473]
[-225.99537659 605.92437744]
[-228.52990723 591.13757324]
[-230.40786743 576.25311279]
[-231.62561035 561.30017090]
[-232.18075562 546.30798340]
[-232.07218933 531.30590820]
[-231.30012512 516.32330322]
[-229.86610413 501.38952637]
[-227.77290344 486.53381348]
[-225.02464294 471.78521729]
[-221.62667847 457.17263794]
[-217.58569336 442.72463989]
[-212.90956116 428.46954346]
[-207.60746765 414.43524170]
[-201.68977356 400.64920044]
[-195.16806030 387.13842773]
[-188.05511475 373.92932129]
[-180.36485291 361.04782104]
[-172.11230469 348.51907349]
[-163.31365967 336.36761475]
[-153.98612976 324.61724854]
[-144.14796448 313.29098511]
[-133.81842041 302.41098022]
[-123.01773834 291.99850464]
[-111.76705170 282.07400513]
[-100.08837891 272.65686035]
[-88.00457764 263.76553345]
[-75.53931427 255.41740417]
[-62.71699142 247.62884521]
[-49.56269836 240.41506958]
[-36.10219193 233.79020691]
[-22.36182022 227.76724243]
[-8.36848164 222.35795593]
[5.85043240 217.57293701]
[20.26708794 213.42155457]
[34.85326004 209.91192627]
[49.58039856 207.05093384]
[64.41967773 204.84417725]
[79.34204102 203.29595947]
[94.31828308 202.40933228]
[94.09495544 187.41099548]
[93.87162781 172.41265869]
[93.64830017 157.41432190]
[93.42497253 142.41598511]
[93.20164490 127.41764832]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[82.41125488 48.64189148]
[82.34794617 36.14470291]
[90.54537201 27.24926567]
[90.32204437 12.25092888]
[90.09871674 -2.74740863]
[78.92053986 -6.37549305]
[69.21985626 -12.97540951]
[61.76546860 -22.01105309]
[57.14451981 -32.75381088]
[55.71622849 -44.34130096]
[57.58399200 -55.84661102]
[62.58797455 -66.35243225]
[70.31874084 -75.02420044]
[80.15071106 -81.17639923]
[91.29280853 -84.32672882]
[91.96259308 -99.31176758]
[92.63238525 -114.29680634]
[93.30216980 -129.28184509]
[79.20671082 -134.81327820]
[67.67265320 -144.62370300]
[59.95112991 -157.64892578]
[56.87970734 -172.47610474]
[58.79154968 -187.49687195]
[65.47927856 -201.08190918]
[76.21746063 -211.75758362]
[89.84129333 -218.36590576]
[104.87297058 -220.19003296]
[119.68196106 -217.03211975]
[132.66191101 -209.23469543]
[142.40483093 -197.64356995]
[147.85389709 -183.51606750]
[148.41802979 -168.38462830]
[144.03604126 -153.89059448]
[135.18324280 -141.60618591]
[122.81994629 -132.86390686]
[108.28720856 -128.61206055]
[107.61742401 -113.62702179]
[106.94763184 -98.64198303]
[106.27784729 -83.65694427]
[122.85337830 -75.66452789]
[134.29386902 -61.18623352]
[138.25874329 -43.11222839]
[133.90536499 -25.07540321]
[122.06772614 -10.72117901]
[105.09705353 -2.97073627]
[105.32038116 12.02760124]
[105.54370880 27.02593803]
[115.34224701 41.58463287]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[111.24354553 120.45944977]
[108.19998169 127.19432068]
[108.42330933 142.19265747]
[108.64663696 157.19099426]
[108.86996460 172.18933105]
[109.09329224 187.18766785]
[109.31661987 202.18600464]
[124.31262207 202.62634277]
[139.27445984 203.72956848]
[154.17286682 205.49354553]
[168.97866821 207.91477966]
[183.66285706 210.98857117]
[198.19673157 214.70887756]
[212.55180359 219.06842041]
[226.69999695 224.05867004]
[240.61360168 229.66987610]
[254.26538086 235.89102173]
[267.62863159 242.70994568]
[280.67715454 250.11329651]
[293.38546753 258.08657837]
[305.72863770 266.61419678]
[317.68249512 275.67944336]
[329.22369385 285.26455688]
[340.32962036 295.35083008]
[350.97851562 305.91845703]
[361.14953613 316.94680786]
[370.82278442 328.41421509]
[379.97933960 340.29830933]
[388.60122681 352.57580566]
[396.67163086 365.22265625]
[404.17471313 378.21411133]
[411.09579468 391.52471924]
[417.42132568 405.12844849]
[423.13891602 418.99868774]
[428.23739624 433.10821533]
[432.70675659 447.42950439]
[436.53829956 461.93444824]
[439.72445679 476.59466553]
[442.25903320 491.38146973]
[444.13705444 506.26593018]
[445.35485840 521.21887207]
[445.91003418 536.21105957]
[445.80154419 551.21313477]
[445.02954102 566.19573975]
[443.59555054 581.12951660]
[441.50241089 595.98522949]
[438.75421143 610.73382568]
[435.35629272 625.34643555]
[431.31536865 639.79443359]
[426.63928223 654.04956055]
[421.33724976 668.08386230]
[415.41958618 681.86993408]
[408.89794922 695.38073730]
[401.78503418 708.58984375]
[394.09481812 721.47137451]
[385.84231567 734.00018311]
[377.04373169 746.15167236]
[367.71621704 757.90203857]
[357.87811279 769.22839355]
[347.54861450 780.10839844]
[336.74795532 790.52093506]
[325.49731445 800.44543457]
[313.81866455 809.86260986]
[301.73489380 818.75402832]
[289.26968384 827.10217285]
[276.44738770 834.89080811]
[263.29312134 842.10461426]
[249.83262634 848.72955322]
[236.09228516 854.75256348]
[222.09895325 860.16186523]
[207.88006592 864.94696045]
[193.46342468 869.09838867]
[178.87725830 872.60809326]
[164.15013123 875.46911621]
[149.31086731 877.67590332]
[134.38850403 879.22418213]
[119.41226959 880.11090088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 133]
[78 131]
[79 130]
[80 129]
[83 127]
[84 126]
[85 125]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
