%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[-15.00988674 393.70672607]
[-12.49336624 408.50689697]
[-11.46299458 423.48413086]
[-11.92901134 438.48950195]
[-13.88678551 453.37390137]
[-17.31686020 467.98941040]
[-22.18514252 482.19076538]
[-28.44325066 495.83682251]
[-36.02898788 508.79196167]
[-44.86695862 520.92736816]
[-54.86932373 532.12255859]
[-65.93667603 542.26611328]
[-77.95902252 551.25732422]
[-90.81686401 559.00683594]
[-104.38243103 565.43750000]
[-118.52088165 570.48559570]
[-133.09170532 574.10076904]
[-147.95007324 576.24725342]
[-162.94833374 576.90356445]
[-177.93742371 576.06329346]
[-192.76834106 573.73474121]
[-207.29371643 569.94104004]
[-221.36918640 564.71990967]
[-234.85482788 558.12329102]
[-247.61663818 550.21661377]
[-259.52777100 541.07861328]
[-270.46984863 530.79998779]
[-280.33413696 519.48303223]
[-289.02255249 507.24005127]
[-296.44879150 494.19284058]
[-302.53903198 480.47103882]
[-307.23272705 466.21105957]
[-310.48324585 451.55456543]
[-312.25827026 436.64724731]
[-312.54016113 421.63726807]
[-311.32614136 406.67382812]
[-308.62823486 391.90560913]
[-304.47329712 377.47943115]
[-298.90258789 363.53863525]
[-291.97149658 350.22177124]
[-283.74890137 337.66122437]
[-274.31649780 325.98181152]
[-263.76809692 315.29962158]
[-252.20846558 305.72079468]
[-239.75253296 297.34054565]
[-226.52409363 290.24218750]
[-212.65460205 284.49624634]
[-198.28192139 280.15982056]
[-183.54888916 277.27600098]
[-168.60192871 275.87350464]
[-153.58959961 275.96621704]
[-138.66110229 277.55325317]
[-123.96481323 280.61880493]
[-109.64678192 285.13241577]
[-95.84932709 291.04922485]
[-82.70956421 298.31045532]
[-70.35809326 306.84390259]
[-58.91767120 316.56478882]
[-48.11551666 306.15740967]
[-37.31335831 295.75003052]
[-26.51120186 285.34265137]
[-15.70904636 274.93527222]
[-4.90688944 264.52792358]
[5.89526701 254.12054443]
[15.21014977 242.36328125]
[22.87074661 229.46696472]
[30.53134537 216.57063293]
[38.09572220 203.61763000]
[45.56346512 190.60868835]
[53.03120422 177.59973145]
[60.49894714 164.59077454]
[67.96669006 151.58181763]
[75.43443298 138.57287598]
[82.90216827 125.56391907]
[88.77113342 111.75974274]
[83.78712463 101.23354340]
[87.12122345 90.07446289]
[97.06285858 84.00774384]
[101.46385956 69.66789246]
[105.86486053 55.32804871]
[110.26585388 40.98820114]
[114.66685486 26.64835358]
[118.85386658 12.24457264]
[122.82595825 -2.21995139]
[126.79805756 -16.68447495]
[130.01133728 -31.33626175]
[132.45706177 -46.13553238]
[134.90278625 -60.93480301]
[137.34851074 -75.73407745]
[139.79423523 -90.53334808]
[140.57556152 -105.51298523]
[139.68275452 -120.48638916]
[138.78993225 -135.45979309]
[137.89710999 -150.43319702]
[137.00430298 -165.40660095]
[122.46970367 -169.71025085]
[110.28543091 -178.72796631]
[101.92278290 -191.37081909]
[98.39160156 -206.11215210]
[100.11828613 -221.17184448]
[106.89433289 -234.73136902]
[117.90150452 -245.15336609]
[131.81062317 -251.17932129]
[146.94210815 -252.08155823]
[161.46875000 -247.75114441]
[173.63639832 -238.71098328]
[181.97572327 -226.05273438]
[185.47973633 -211.30493164]
[183.72529602 -196.24844360]
[176.92427063 -182.70141602]
[165.89791870 -172.29972839]
[151.97770691 -166.29942322]
[152.87052917 -151.32601929]
[153.76333618 -136.35261536]
[154.65615845 -121.37920380]
[155.54896545 -106.40579987]
[162.18295288 -119.85906219]
[173.17938232 -130.06094360]
[187.09152222 -135.66918945]
[202.08897400 -135.94596863]
[216.19856262 -130.85484314]
[227.56391907 -121.06563568]
[234.68975830 -107.86630249]
[236.63854980 -92.99343872]
[233.15388489 -78.40381622]
[224.69422913 -66.01695251]
[212.37260437 -57.46255875]
[197.81013489 -53.86610794]
[182.92276001 -55.70077896]
[169.66917419 -62.72518158]
[159.79310608 -74.01514435]
[154.59350586 -88.08761597]
[152.14778137 -73.28834534]
[149.70205688 -58.48907852]
[147.25633240 -43.68980789]
[144.81060791 -28.89053535]
[156.95333862 -37.69701385]
[171.92425537 -36.76345825]
[182.87886047 -26.51667595]
[184.80885315 -11.64135742]
[176.83187866 1.06170166]
[162.59487915 5.78483391]
[148.60684204 0.36868614]
[141.26258850 -12.71237946]
[137.29048157 1.75214481]
[133.31838989 16.21666908]
[134.86013794 20.73685265]
[133.57870483 26.27354240]
[129.00669861 31.04935265]
[124.60570526 45.38919830]
[120.20470428 59.72904587]
[115.80371094 74.06889343]
[111.40270996 88.40874481]
[115.57922363 104.65475464]
[103.17491150 115.94675446]
[113.80865479 105.36736298]
[127.39023590 99.00021362]
[142.32411194 97.59331512]
[156.85586548 101.31194305]
[169.27832031 109.71924591]
[178.13208008 121.82753754]
[182.37704468 136.21434021]
[181.51451111 151.18952942]
[175.64579773 164.99380493]
[165.46035767 176.00547791]
[152.15476990 182.93089294]
[137.29217529 184.95646667]
[122.61859131 181.84423828]
[109.85786438 173.95982361]
[100.50912476 162.22947693]
[95.67063904 148.03128052]
[95.91112518 133.03166199]
[88.44338226 146.04061890]
[80.97563934 159.04956055]
[73.50789642 172.05851746]
[66.04016113 185.06747437]
[58.57241821 198.07641602]
[51.10467529 211.08537292]
[49.54632950 220.08589172]
[43.42766953 224.23123169]
[35.76707458 237.12756348]
[28.10647583 250.02388000]
[40.90277481 242.19734192]
[55.47656250 238.64703369]
[70.43875885 239.71133423]
[84.36325836 245.28881836]
[95.92286682 254.84785461]
[104.01580811 267.47735596]
[107.87069702 281.97357178]
[107.12012482 296.95477295]
[101.83561707 310.99307251]
[92.52087402 322.75042725]
[80.06370544 331.10620117]
[65.65145874 335.26397705]
[50.65781403 334.82748413]
[36.51186371 329.83825684]
[24.56192017 320.77191162]
[15.94696903 308.49255371]
[11.48813438 294.17059326]
[11.61040306 279.17108154]
[16.30264091 264.92269897]
[5.50048351 275.33007812]
[-5.30167246 285.73742676]
[-16.10382843 296.14480591]
[-26.90598488 306.55218506]
[-37.70814133 316.95956421]
[-48.51029968 327.36694336]
[-39.22190475 339.16119385]
[-31.15401459 351.82165527]
[-24.38680840 365.22253418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 207]
[59 206]
[60 205]
[61 204]
[62 203]
[63 202]
[64 201]
[65 182]
[66 181]
[67 180]
[68 178]
[69 177]
[70 176]
[71 175]
[72 174]
[73 173]
[74 172]
[75 155]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 146]
[84 145]
[85 144]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
