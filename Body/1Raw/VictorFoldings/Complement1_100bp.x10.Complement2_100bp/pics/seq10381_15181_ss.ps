%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[-6.91295862 595.35382080]
[-20.23946190 602.24560547]
[-33.89048386 608.46990967]
[-47.83261871 614.01153564]
[-62.03174591 618.85681152]
[-76.45312500 622.99401855]
[-91.06144714 626.41296387]
[-105.82098389 629.10528564]
[-120.69561005 631.06445312]
[-135.64891052 632.28552246]
[-150.64431763 632.76568604]
[-165.64511108 632.50360107]
[-180.61457825 631.50006104]
[-195.51611328 629.75738525]
[-210.31323242 627.27996826]
[-224.96972656 624.07379150]
[-239.44973755 620.14666748]
[-253.71781921 615.50830078]
[-267.73904419 610.17004395]
[-281.47912598 604.14483643]
[-294.90441895 597.44750977]
[-307.98208618 590.09448242]
[-320.68011475 582.10369873]
[-332.96743774 573.49475098]
[-344.81396484 564.28863525]
[-356.19073486 554.50799561]
[-367.06988525 544.17663574]
[-377.42477417 533.31988525]
[-387.23013306 521.96441650]
[-396.46188354 510.13784790]
[-405.09750366 497.86923218]
[-413.11581421 485.18856812]
[-420.49719238 472.12689209]
[-427.22360229 458.71615601]
[-433.27856445 444.98916626]
[-438.64727783 430.97955322]
[-443.31658936 416.72158813]
[-447.27505493 402.25012207]
[-450.51303101 387.60061646]
[-453.02255249 372.80889893]
[-454.79751587 357.91119385]
[-455.83355713 342.94390869]
[-456.12814331 327.94372559]
[-455.68054199 312.94732666]
[-454.49188232 297.99139404]
[-452.56503296 283.11257935]
[-449.90472412 268.34722900]
[-446.51745605 253.73152161]
[-442.41156006 239.30120850]
[-437.59701538 225.09159851]
[-432.08566284 211.13748169]
[-425.89099121 197.47299194]
[-419.02810669 184.13156128]
[-411.51385498 171.14585876]
[-403.36660767 158.54766846]
[-394.60629272 146.36778259]
[-385.25433350 134.63604736]
[-375.33367920 123.38114929]
[-364.86853027 112.63063812]
[-353.88455200 102.41082001]
[-342.40859985 92.74671173]
[-330.46878052 83.66195679]
[-318.09426880 75.17877960]
[-305.31536865 67.31795502]
[-292.16339111 60.09871674]
[-278.67047119 53.53872299]
[-264.86962891 47.65403366]
[-250.79466248 42.45904922]
[-236.48001099 37.96648026]
[-221.96069336 34.18732452]
[-207.27226257 31.13082504]
[-192.45063782 28.80446625]
[-177.53208923 27.21393967]
[-162.55316162 26.36313629]
[-147.55047607 26.25414085]
[-132.56074524 26.88721848]
[-117.62068176 28.26082039]
[-102.76682281 30.37158394]
[-88.03552246 33.21434402]
[-73.46282959 36.78214645]
[-59.08441162 41.06625748]
[-44.93545532 46.05619431]
[-31.05057907 51.73974609]
[-17.46376610 58.10300064]
[-4.20826626 65.13038635]
[8.68348408 72.80471802]
[21.17993546 81.10720062]
[33.25050735 90.01751709]
[44.86565781 99.51387024]
[55.99697113 109.57301331]
[66.61719513 120.17034149]
[77.72442627 110.08920288]
[88.83166504 100.00806427]
[99.86354065 89.84451294]
[110.81945038 79.59912109]
[121.77536011 69.35372925]
[132.73126221 59.10834122]
[143.68717957 48.86294937]
[134.44372559 37.03687286]
[126.28163147 24.44012833]
[119.26480103 11.17130566]
[113.44813538 -2.66574740]
[108.87715912 -16.96273422]
[105.58765411 -31.60776138]
[103.60536957 -46.48620605]
[102.94580841 -61.48162460]
[103.61413574 -76.47665405]
[105.60512543 -91.35394287]
[108.90318298 -105.99703979]
[113.48251343 -120.29135132]
[119.30726624 -134.12500000]
[126.33186340 -147.38972473]
[134.50131226 -159.98168945]
[143.75167847 -171.80236816]
[154.01057434 -182.75921631]
[165.19769287 -192.76651001]
[177.22549438 -201.74591064]
[189.99984741 -209.62715149]
[203.42074585 -216.34852600]
[217.38316345 -221.85746765]
[231.77783203 -226.11082458]
[246.49209595 -229.07531738]
[261.41076660 -230.72776794]
[276.41711426 -231.05520630]
[291.39367676 -230.05509949]
[306.22323608 -227.73526001]
[320.78976440 -224.11386108]
[334.97918701 -219.21922302]
[348.68051147 -213.08966064]
[361.78646851 -205.77314758]
[374.19451904 -197.32695007]
[385.80749512 -187.81716919]
[396.53457642 -177.31823730]
[406.29177856 -165.91233826]
[415.00271606 -153.68870544]
[422.59924316 -140.74302673]
[429.02188110 -127.17662048]
[434.22036743 -113.09566498]
[438.15402222 -98.61036682]
[440.79208374 -83.83409119]
[442.11386108 -68.88248444]
[442.10903931 -53.87257004]
[440.77764893 -38.92181396]
[438.13009644 -24.14723969]
[434.18710327 -9.66447258]
[428.97955322 4.41313553]
[422.54818726 17.97540665]
[414.94335938 30.91619492]
[406.22454834 43.13422012]
[396.46002197 54.53385544]
[385.72619629 65.02588654]
[374.10708618 74.52819061]
[361.69363403 82.96640778]
[348.58294678 90.27448273]
[334.87768555 96.39523315]
[320.68511963 101.28074646]
[306.11630249 104.89278412]
[291.28524780 107.20308685]
[276.30804443 108.19355774]
[261.30191040 107.85646057]
[246.38429260 106.19442749]
[231.67193604 103.22046661]
[217.27999878 98.95784760]
[203.32112122 93.43993378]
[189.90455627 86.70992279]
[177.13528442 78.82047272]
[165.11325073 69.83334351]
[153.93257141 59.81885910]
[142.97665405 70.06424713]
[132.02075195 80.30963898]
[121.06484222 90.55503082]
[110.10893250 100.80042267]
[106.84045410 108.16857147]
[98.91280365 111.11529541]
[87.80557251 121.19643402]
[76.69833374 131.27757263]
[86.21985626 142.87210083]
[95.15634155 154.92332458]
[103.48590851 167.40173340]
[111.18817902 180.27680969]
[118.24430084 193.51702881]
[124.63701630 207.09001160]
[130.35066223 220.96252441]
[135.37127686 235.10063171]
[139.68656921 249.46971130]
[143.28596497 264.03463745]
[146.16067505 278.75973511]
[148.30364990 293.60897827]
[149.70965576 308.54602051]
[150.37524414 323.53433228]
[150.29879761 338.53723145]
[149.48048401 353.51797485]
[147.92231750 368.43994141]
[145.62811279 383.26657104]
[142.60348511 397.96160889]
[138.85583496 412.48907471]
[134.39431763 426.81344604]
[129.22987366 440.89965820]
[123.37513733 454.71319580]
[116.84442139 468.22033691]
[109.65372467 481.38796997]
[101.82064056 494.18386841]
[93.36432648 506.57672119]
[84.30548859 518.53625488]
[74.66629028 530.03314209]
[64.47032928 541.03924561]
[53.74253845 551.52770996]
[42.50918579 561.47271729]
[30.79775810 570.85009766]
[18.63691330 579.63684082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 176]
[92 175]
[93 174]
[94 172]
[95 171]
[96 170]
[97 169]
[98 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
