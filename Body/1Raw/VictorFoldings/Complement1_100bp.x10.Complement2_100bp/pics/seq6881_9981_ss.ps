%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[85.00146484 742.85913086]
[70.03849792 741.76397705]
[55.14659882 739.94158936]
[40.36108780 737.39636230]
[25.71703529 734.13421631]
[11.24917412 730.16302490]
[-3.00817966 725.49206543]
[-17.02120781 720.13256836]
[-30.75667572 714.09710693]
[-44.18199921 707.40008545]
[-57.26534271 700.05731201]
[-69.97566223 692.08630371]
[-82.28282166 683.50585938]
[-94.15762329 674.33642578]
[-105.57190704 664.59973145]
[-116.49859619 654.31878662]
[-126.91176605 643.51806641]
[-136.78672791 632.22320557]
[-146.10005188 620.46087646]
[-154.82966614 608.25909424]
[-162.95483398 595.64678955]
[-170.45631409 582.65380859]
[-177.31628418 569.31097412]
[-183.51849365 555.65002441]
[-189.04823303 541.70324707]
[-193.89237976 527.50384521]
[-198.03944397 513.08538818]
[-201.47958374 498.48214722]
[-204.20465088 483.72869873]
[-206.20816040 468.86010742]
[-207.48539734 453.91156006]
[-208.03329468 438.91857910]
[-207.85058594 423.91671753]
[-206.93766785 408.94152832]
[-205.29673767 394.02856445]
[-202.93167114 379.21313477]
[-199.84808350 364.53045654]
[-196.05328369 350.01531982]
[-191.55627441 335.70217896]
[-186.36773682 321.62493896]
[-180.49995422 307.81701660]
[-173.96685791 294.31115723]
[-166.78393555 281.13937378]
[-158.96823120 268.33297729]
[-150.53828430 255.92225647]
[-141.51408386 243.93670654]
[-131.91703796 232.40473938]
[-121.76990509 221.35369873]
[-111.09675598 210.80981445]
[-99.92291260 200.79808044]
[-88.27487183 191.34225464]
[-76.18025970 182.46475220]
[-63.66777039 174.18663025]
[-50.76707458 166.52754211]
[-37.50877762 159.50563049]
[-23.92432213 153.13757324]
[-10.04593086 147.43846130]
[4.09347773 142.42181396]
[18.46036720 138.09951782]
[33.02066040 134.48185730]
[47.73981857 131.57739258]
[62.58293533 129.39300537]
[77.51480103 127.93388367]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[84.76270294 58.99632645]
[92.50000000 46.26905823]
[92.50000000 31.26905632]
[92.50000000 16.26905632]
[77.55316925 14.88451576]
[62.79785538 12.12674809]
[48.35993958 8.01928139]
[34.36260986 2.59716058]
[20.92528725 -4.09335470]
[8.16261673 -11.99518204]
[-3.81651378 -21.04090309]
[-14.90989971 -31.15334320]
[-25.02289391 -42.24622345]
[-34.06921387 -54.22490311]
[-41.97167969 -66.98717499]
[-48.66286469 -80.42416382]
[-54.08568573 -94.42122650]
[-58.19387436 -108.85893250]
[-60.95238113 -123.61411285]
[-62.33766556 -138.56086731]
[-62.33791733 -153.57168579]
[-60.95312881 -168.51849365]
[-58.19511414 -183.27377319]
[-54.08740616 -197.71160889]
[-48.66505432 -211.70884705]
[-41.97431183 -225.14605713]
[-34.07227325 -237.90859985]
[-25.02635193 -249.88758850]
[-14.91372776 -260.98080444]
[-3.82067943 -271.09359741]
[8.15814972 -280.13973999]
[20.92055702 -288.04199219]
[34.35765839 -294.73294067]
[48.35480499 -300.15551758]
[62.79258347 -304.26348877]
[77.54780579 -307.02172852]
[92.49459076 -308.40676880]
[107.50540924 -308.40676880]
[122.45219421 -307.02172852]
[137.20741272 -304.26348877]
[151.64518738 -300.15551758]
[165.64234924 -294.73294067]
[179.07943726 -288.04199219]
[191.84185791 -280.13973999]
[203.82067871 -271.09359741]
[214.91372681 -260.98080444]
[225.02635193 -249.88758850]
[234.07228088 -237.90859985]
[241.97431946 -225.14605713]
[248.66505432 -211.70884705]
[254.08740234 -197.71160889]
[258.19512939 -183.27377319]
[260.95312500 -168.51849365]
[262.33792114 -153.57168579]
[262.33767700 -138.56086731]
[260.95239258 -123.61411285]
[258.19387817 -108.85893250]
[254.08569336 -94.42122650]
[248.66287231 -80.42416382]
[241.97167969 -66.98717499]
[234.06921387 -54.22490311]
[225.02288818 -42.24622345]
[214.90989685 -31.15334320]
[203.81651306 -21.04090309]
[191.83738708 -11.99518204]
[179.07470703 -4.09335470]
[165.63739014 2.59716058]
[151.64006042 8.01928139]
[137.20214844 12.12674809]
[122.44683075 14.88451576]
[107.50000000 16.26905632]
[107.50000000 31.26905632]
[107.50000000 46.26905823]
[115.23729706 58.99632645]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[122.48519897 127.93388367]
[137.41706848 129.39300537]
[152.26017761 131.57739258]
[166.97933960 134.48185730]
[181.53962708 138.09951782]
[195.90652466 142.42181396]
[210.04592896 147.43846130]
[223.92431641 153.13757324]
[237.50877380 159.50563049]
[250.76707458 166.52754211]
[263.66775513 174.18663025]
[276.18026733 182.46475220]
[288.27487183 191.34225464]
[299.92291260 200.79808044]
[311.09677124 210.80981445]
[321.76989746 221.35369873]
[331.91702271 232.40473938]
[341.51406860 243.93670654]
[350.53826904 255.92225647]
[358.96823120 268.33297729]
[366.78393555 281.13937378]
[373.96685791 294.31115723]
[380.49993896 307.81701660]
[386.36773682 321.62493896]
[391.55627441 335.70217896]
[396.05328369 350.01531982]
[399.84808350 364.53045654]
[402.93167114 379.21313477]
[405.29672241 394.02856445]
[406.93768311 408.94152832]
[407.85058594 423.91671753]
[408.03329468 438.91857910]
[407.48538208 453.91156006]
[406.20816040 468.86010742]
[404.20465088 483.72869873]
[401.47958374 498.48214722]
[398.03942871 513.08538818]
[393.89236450 527.50384521]
[389.04824829 541.70324707]
[383.51849365 555.65002441]
[377.31628418 569.31097412]
[370.45629883 582.65380859]
[362.95483398 595.64678955]
[354.82965088 608.25909424]
[346.10006714 620.46087646]
[336.78671265 632.22320557]
[326.91177368 643.51806641]
[316.49859619 654.31878662]
[305.57189941 664.59973145]
[294.15762329 674.33642578]
[282.28283691 683.50585938]
[269.97567749 692.08630371]
[257.26535034 700.05731201]
[244.18200684 707.40008545]
[230.75666809 714.09710693]
[217.02120972 720.13256836]
[203.00817871 725.49206543]
[188.75082397 730.16302490]
[174.28295898 734.13421631]
[159.63891602 737.39636230]
[144.85339355 739.94158936]
[129.96150208 741.76397705]
[114.99853516 742.85913086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 147]
[65 146]
[67 144]
[68 143]
[70 141]
[71 140]
[72 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
