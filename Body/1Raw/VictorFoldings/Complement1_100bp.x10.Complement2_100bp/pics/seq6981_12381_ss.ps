%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[51.53077316 470.18841553]
[41.98167038 481.76370239]
[31.67290878 492.66793823]
[20.65151787 502.85134888]
[8.96778870 512.26751709]
[-3.32496810 520.87335205]
[-16.17066193 528.62969971]
[-29.51068306 535.50115967]
[-43.28416061 541.45635986]
[-57.42824936 546.46807861]
[-71.87841797 550.51354980]
[-86.56872559 553.57427979]
[-101.43214417 555.63623047]
[-116.40085602 556.69006348]
[-131.40657043 556.73095703]
[-146.38079834 555.75866699]
[-161.25523376 553.77777100]
[-175.96200562 550.79718018]
[-190.43400574 546.83050537]
[-204.60519409 541.89593506]
[-218.41091919 536.01586914]
[-231.78819275 529.21722412]
[-244.67596436 521.53100586]
[-257.01544189 512.99224854]
[-268.75030518 503.63995361]
[-279.82702637 493.51675415]
[-290.19506836 482.66885376]
[-299.80709839 471.14575195]
[-308.61929321 459.00006104]
[-316.59143066 446.28713989]
[-323.68710327 433.06503296]
[-329.87399292 419.39407349]
[-335.12380981 405.33660889]
[-339.41265869 390.95678711]
[-342.72091675 376.32025146]
[-345.03353882 361.49377441]
[-346.33993530 346.54498291]
[-346.63415527 331.54211426]
[-345.91488647 316.55358887]
[-344.18536377 301.64782715]
[-341.45349121 286.89282227]
[-337.73175049 272.35592651]
[-333.03710938 258.10345459]
[-327.39099121 244.20040894]
[-320.81915283 230.71026611]
[-313.35159302 217.69456482]
[-305.02239990 205.21269226]
[-295.86953735 193.32159424]
[-285.93478394 182.07553101]
[-275.26348877 171.52583313]
[-263.90429688 161.72061157]
[-251.90910339 152.70463562]
[-239.33259583 144.51901245]
[-226.23217773 137.20109558]
[-212.66760254 130.78430176]
[-198.70077515 125.29787445]
[-184.39543152 120.76687622]
[-169.81683350 117.21196747]
[-155.03149414 114.64936829]
[-140.10690308 113.09077454]
[-125.11112213 112.54329681]
[-110.11260223 113.00942993]
[-95.17977142 114.48706055]
[-80.38075256 116.96942902]
[-65.78308868 120.44521332]
[-51.45337677 124.89855957]
[-37.45700073 130.30914307]
[-23.85782814 136.65228271]
[-10.71790314 143.89903259]
[1.90281510 152.01631165]
[13.94674206 160.96711731]
[25.35892296 170.71057129]
[35.84642410 159.98619080]
[46.33392715 149.26182556]
[56.74129868 138.45965576]
[67.06797028 127.58032990]
[76.98262024 116.32423401]
[86.47151947 104.70697021]
[88.90633392 90.93876648]
[101.91121674 85.80413055]
[111.40011597 74.18686676]
[120.88901520 62.56960678]
[130.37791443 50.95234299]
[128.98300171 35.43809128]
[138.77157593 23.79170990]
[153.57064819 22.55747414]
[163.05953979 10.94021130]
[172.54843140 -0.67705184]
[175.28591919 -16.25963211]
[189.32951355 -21.22213936]
[198.81842041 -32.83940125]
[208.30731201 -44.45666504]
[217.79621887 -56.07392883]
[227.28511047 -67.69119263]
[230.29013062 -76.31718445]
[237.00279236 -79.40940857]
[246.66360474 -90.88410950]
[256.32443237 -102.35880280]
[245.85940552 -113.12274170]
[236.51817322 -124.87517548]
[228.39352417 -137.49931335]
[221.56623840 -150.86967468]
[216.10414124 -164.85339355]
[212.06153870 -179.31146240]
[209.47860718 -194.10021973]
[208.38101196 -209.07264709]
[208.77966309 -224.07997131]
[210.67060852 -238.97302246]
[214.03503418 -253.60379028]
[218.83952332 -267.82684326]
[225.03630066 -281.50085449]
[232.56381226 -294.48989868]
[241.34721375 -306.66488647]
[251.29922485 -317.90481567]
[262.32092285 -328.09799194]
[274.30279541 -337.14306641]
[287.12573242 -344.95019531]
[300.66229248 -351.44174194]
[314.77792358 -356.55322266]
[329.33236694 -360.23379517]
[344.18096924 -362.44692993]
[359.17611694 -363.17059326]
[374.16882324 -362.39758301]
[389.01007080 -360.13562012]
[403.55230713 -356.40716553]
[417.65106201 -351.24929810]
[431.16619873 -344.71325684]
[443.96337891 -336.86398315]
[455.91540527 -327.77951050]
[466.90353394 -317.55014038]
[476.81851196 -306.27752686]
[485.56179810 -294.07369995]
[493.04653931 -281.05996704]
[499.19830322 -267.36566162]
[503.95596313 -253.12686157]
[507.27224731 -238.48510742]
[509.11416626 -223.58592224]
[509.46343994 -208.57736206]
[508.31658936 -193.60861206]
[505.68502808 -178.82844543]
[501.59487915 -164.38375854]
[496.08679199 -150.41809082]
[489.21554565 -137.07025146]
[481.04943848 -124.47291565]
[471.66955566 -112.75128174]
[461.16918945 -102.02183533]
[449.65270996 -92.39121246]
[437.23452759 -83.95514679]
[424.03805542 -76.79747009]
[410.19451904 -70.98931885]
[395.84143066 -66.58841705]
[381.12149048 -63.63851547]
[366.18099976 -62.16892624]
[351.16839600 -62.19425201]
[336.23291016 -63.71424103]
[321.52301025 -66.71379089]
[307.18487549 -71.16309357]
[293.36099243 -77.01791382]
[280.18878174 -84.22007751]
[267.79910278 -92.69799805]
[258.13830566 -81.22329712]
[248.47749329 -69.74859619]
[238.90237427 -58.20229340]
[229.41348267 -46.58502960]
[219.92457581 -34.96776581]
[210.43568420 -23.35050392]
[200.94677734 -11.73324013]
[198.88801575 3.01839447]
[184.16569519 8.81184673]
[174.67680359 20.42910957]
[165.18791199 32.04637146]
[166.93318176 46.79390335]
[157.47557068 58.71063232]
[141.99517822 60.44124222]
[132.50628662 72.05850220]
[123.01737976 83.67576599]
[113.52848053 95.29302979]
[111.09366608 109.06123352]
[98.08878326 114.19586945]
[88.59988403 125.81313324]
[103.55835724 126.92848206]
[112.13852692 139.23217773]
[108.01540375 153.65437317]
[94.22840881 159.56358337]
[80.94079590 152.60374451]
[77.94730377 137.90699768]
[67.62063599 148.78633118]
[63.98237228 157.16493225]
[57.05830383 159.74931335]
[46.57080460 170.47369385]
[36.08330536 181.19807434]
[46.07918930 192.38983154]
[55.29671478 204.23086548]
[63.69382477 216.66716003]
[71.23220062 229.64198303]
[77.87744904 243.09609985]
[83.59925079 256.96817017]
[88.37149048 271.19485474]
[92.17240143 285.71124268]
[94.98464203 300.45114136]
[96.79537201 315.34725952]
[97.59633636 330.33163452]
[97.38388062 345.33587646]
[96.15896606 360.29156494]
[93.92718506 375.13043213]
[90.69873047 389.78479004]
[86.48831940 404.18777466]
[81.31517792 418.27362061]
[75.20289612 431.97811890]
[68.17936707 445.23867798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 191]
[73 190]
[74 189]
[75 187]
[76 186]
[77 180]
[78 179]
[80 177]
[81 176]
[82 175]
[83 174]
[86 171]
[87 170]
[88 169]
[90 167]
[91 166]
[92 165]
[93 164]
[94 163]
[96 162]
[97 161]
[98 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
