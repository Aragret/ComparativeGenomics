%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[69.73223114 609.69384766]
[66.12727356 624.27978516]
[60.52735519 638.22210693]
[53.04148102 651.24926758]
[43.81536102 663.10778809]
[33.02858734 673.56683350]
[20.89112473 682.42279053]
[7.63923407 689.50329590]
[-6.46913147 694.67053223]
[-21.15934944 697.82391357]
[-36.14546967 698.90197754]
[-51.13578415 697.88385010]
[-65.83850098 694.78930664]
[-79.96743011 689.67858887]
[-93.24754333 682.65118408]
[-105.42034912 673.84381104]
[-116.24888611 663.42803955]
[-125.52237701 651.60650635]
[-133.06031799 638.60937500]
[-138.71597290 624.68963623]
[-142.37927246 610.11816406]
[-143.97888184 595.17871094]
[-143.48367310 580.16204834]
[-140.90328979 565.36041260]
[-136.28796387 551.06201172]
[-129.72752380 537.54510498]
[-121.34967804 525.07281494]
[-111.31749725 513.88793945]
[-99.82627106 504.20819092]
[-87.09967041 496.22195435]
[-73.38542175 490.08471680]
[-58.95048141 485.91595459]
[-44.07583237 483.79678345]
[-29.05100822 483.76846313]
[-14.16847420 485.83154297]
[0.28207749 489.94586182]
[6.35591125 476.23059082]
[12.42974567 462.51531982]
[10.50869179 447.74511719]
[23.17129898 438.25994873]
[29.24513245 424.54467773]
[26.43857384 407.22155762]
[41.40421295 396.49255371]
[47.27317047 382.68838501]
[53.14213181 368.88421631]
[59.01109314 355.08004761]
[64.36228180 341.06701660]
[69.18827820 326.86456299]
[74.01427460 312.66210938]
[78.84027100 298.45965576]
[83.66626740 284.25720215]
[86.44187927 269.51623535]
[87.11166382 254.53118896]
[87.78144836 239.54615784]
[88.45123291 224.56111145]
[89.12102509 209.57608032]
[89.67922974 194.58647156]
[90.12583923 179.59310913]
[90.57244110 164.59976196]
[91.01905060 149.60641479]
[91.46566010 134.61306763]
[77.24708557 127.44456482]
[67.56791687 114.80065155]
[64.35921478 99.20388031]
[68.26114655 83.76594543]
[78.49524689 71.56683350]
[93.01972198 65.04038239]
[93.24304962 50.04204178]
[93.46637726 35.04370499]
[79.79513550 25.08412552]
[74.80368805 9.09704685]
[80.27006531 -6.55800009]
[93.85294342 -15.77661896]
[93.85294342 -30.77661896]
[93.85294342 -45.77661896]
[93.85294342 -60.77661896]
[79.85862732 -66.64473724]
[69.20584106 -77.39467621]
[63.49577713 -91.36639404]
[63.56973648 -106.41903687]
[69.38530731 -120.25897980]
[80.02758789 -130.78929138]
[93.85294342 -136.42744446]
[93.85294342 -151.42744446]
[86.11563873 -165.22761536]
[93.85294342 -177.95489502]
[85.30111694 -187.61041260]
[85.60992432 -200.10394287]
[94.06856537 -208.75137329]
[94.29189301 -223.74971008]
[94.51522064 -238.74804688]
[94.62688446 -253.74763489]
[94.62688446 -268.74761963]
[94.62688446 -283.74761963]
[94.62688446 -298.74761963]
[80.12936401 -302.99011230]
[67.41508484 -311.14633179]
[57.51473999 -322.55508423]
[51.23089600 -336.29153442]
[49.07296371 -351.24209595]
[51.21587753 -366.19485474]
[57.48591614 -379.93762207]
[67.37480164 -391.35632324]
[80.08087921 -399.52529907]
[94.57412720 -403.78231812]
[109.67964172 -403.78231812]
[124.17289734 -399.52529907]
[136.87896729 -391.35632324]
[146.76785278 -379.93762207]
[153.03790283 -366.19485474]
[155.18080139 -351.24209595]
[153.02287292 -336.29153442]
[146.73902893 -322.55508423]
[136.83868408 -311.14633179]
[124.12440491 -302.99011230]
[109.62688446 -298.74761963]
[109.62688446 -283.74761963]
[109.62688446 -268.74761963]
[109.62688446 -253.74763489]
[112.77038574 -247.05882263]
[109.51355743 -238.52471924]
[109.29022980 -223.52638245]
[109.06690216 -208.52804565]
[118.42762756 -193.68406677]
[108.85294342 -177.95489502]
[116.59024048 -165.22761536]
[108.85294342 -151.42744446]
[108.85294342 -136.42744446]
[122.67829895 -130.78929138]
[133.32057190 -120.25897980]
[139.13613892 -106.41903687]
[139.21009827 -91.36639404]
[133.50004578 -77.39467621]
[122.84725952 -66.64473724]
[108.85294342 -60.77661896]
[108.85294342 -45.77661896]
[108.85294342 -30.77661896]
[108.85294342 -15.77661896]
[120.33547211 -8.96533775]
[127.00647736 2.72405291]
[127.03057861 16.29125595]
[120.29453278 28.19269180]
[108.46471405 35.26703262]
[108.24138641 50.26536942]
[108.01805878 65.26371002]
[120.63291931 70.92798615]
[130.14335632 80.96642303]
[135.11845398 93.86863708]
[134.80964661 107.69336700]
[129.26339722 120.36056519]
[119.31420135 129.96432495]
[106.45900726 135.05967712]
[106.01239777 150.05302429]
[105.56579590 165.04637146]
[105.11918640 180.03971863]
[104.67258453 195.03306580]
[107.54509735 203.70408630]
[104.10606384 210.24586487]
[103.43627167 225.23089600]
[102.76648712 240.21594238]
[102.09670258 255.20097351]
[101.42691803 270.18600464]
[108.92399597 257.19393921]
[119.87654114 246.94496155]
[133.33705139 240.32569885]
[148.14105225 237.90878296]
[163.00785828 239.90330505]
[176.65133667 246.13673401]
[187.89118958 256.06979370]
[195.75506592 268.84317017]
[199.56263733 283.35186768]
[198.98454285 298.34072876]
[194.07077026 312.51306152]
[185.24641418 324.64282227]
[173.27488708 333.68063354]
[159.19181824 338.84469604]
[144.21556091 339.68820190]
[129.64169312 336.13824463]
[116.73100281 328.50186157]
[106.60039520 317.43972778]
[100.12627411 303.90881348]
[97.86872864 289.08319092]
[93.04272461 303.28564453]
[88.21672821 317.48809814]
[83.39073181 331.69055176]
[78.56473541 345.89300537]
[92.96843719 341.70571899]
[105.31020355 350.23101807]
[106.49214935 365.18438721]
[95.64298248 375.54272461]
[80.76031494 373.67028809]
[72.81526947 360.94900513]
[66.94631195 374.75317383]
[61.07735062 388.55734253]
[55.20838928 402.36154175]
[59.30059052 414.59332275]
[54.12813187 425.97003174]
[42.96039963 430.61849976]
[36.88656616 444.33377075]
[38.37317657 460.08496094]
[26.14501190 468.58917236]
[20.07117844 482.30444336]
[13.99734402 496.01971436]
[26.75579834 503.95492554]
[38.28566742 513.58862305]
[48.36251831 524.73327637]
[56.79020309 537.17193604]
[63.40467072 550.66247559]
[68.07717896 564.94232178]
[70.71675873 579.73352051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 203]
[37 202]
[38 201]
[40 199]
[41 198]
[43 195]
[44 194]
[45 193]
[46 192]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[67 145]
[68 144]
[69 143]
[73 138]
[74 137]
[75 136]
[76 135]
[83 128]
[84 127]
[86 125]
[89 123]
[90 122]
[91 121]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
