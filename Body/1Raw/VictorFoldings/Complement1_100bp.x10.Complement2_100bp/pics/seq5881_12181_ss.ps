%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[88.40179443 511.70803833]
[73.39777374 512.33728027]
[58.42216492 511.22033691]
[43.67748260 508.37237549]
[29.36314392 503.83184814]
[15.67272949 497.66021729]
[2.79138517 489.94091797]
[-9.10668182 480.77838135]
[-19.86056328 470.29644775]
[-29.32482719 458.63693237]
[-37.37147903 445.95751953]
[-43.89169693 432.42965698]
[-48.79729843 418.23626709]
[-52.02194977 403.56936646]
[-53.52203369 388.62728882]
[-53.27726746 373.61206055]
[-51.29095840 358.72680664]
[-47.58997345 344.17279053]
[-42.22435760 330.14685059]
[-35.26667786 316.83868408]
[-26.81103134 304.42828369]
[-16.97176743 293.08343506]
[-5.88195372 282.95761108]
[6.30843449 274.18771362]
[19.43453598 266.89236450]
[33.31883621 261.17022705]
[47.77355957 257.09869385]
[62.60323334 254.73283386]
[77.60729218 254.10459900]
[78.72294617 239.14614868]
[79.83859253 224.18769836]
[70.69676971 217.36177063]
[65.93594360 206.86175537]
[66.84422302 195.24844360]
[73.31128693 185.41595459]
[83.82720184 179.87048340]
[85.38771820 164.95187378]
[86.94824219 150.03326416]
[88.50876617 135.11466980]
[82.13753510 121.65150452]
[91.26854706 108.73117065]
[83.01145935 121.25396729]
[71.46829987 130.83287048]
[57.63766861 136.63922119]
[42.71605682 138.17070007]
[27.99432564 135.29483032]
[14.74605846 128.26037598]
[4.11736012 117.67591858]
[-2.97228003 104.45710754]
[-5.90953732 89.74750519]
[-4.44030952 74.81962585]
[1.30830014 60.96490097]
[10.83897972 49.38188934]
[23.32723045 41.07264328]
[37.69269180 36.75599289]
[52.69261169 36.80537033]
[67.02934265 41.21650696]
[79.46261597 49.60779190]
[88.91683197 61.25329971]
[94.57410431 75.14557648]
[95.94521332 90.07928467]
[101.60800171 76.18925476]
[107.27078247 62.29923248]
[112.93357086 48.40920639]
[118.59635925 34.51917648]
[107.27484131 44.35905838]
[93.74213409 50.82943726]
[78.97516632 53.46320724]
[64.03998566 52.07023239]
[50.01477432 46.75107956]
[37.91202164 37.88973618]
[28.60543633 26.12591743]
[22.76687050 12.30885696]
[20.81781387 -2.56397629]
[22.89897156 -17.41890144]
[28.86010170 -31.18352699]
[38.27086639 -42.86417389]
[50.45189285 -51.61760712]
[64.52382660 -56.81190491]
[79.47079468 -58.07209015]
[94.21376801 -55.30718613]
[107.68844604 -48.71679688]
[118.92206573 -38.77668762]
[127.10366821 -26.20444298]
[131.64260864 -11.90766239]
[132.21124268 3.08155608]
[128.76808167 17.68221283]
[131.73725891 2.14211822]
[145.85317993 -2.61075091]
[155.51399231 -14.08545113]
[158.48316956 -29.62554550]
[172.59910583 -34.37841415]
[182.25991821 -45.85311508]
[191.92071533 -57.32781601]
[201.58152771 -68.80251312]
[211.24234009 -80.27721405]
[220.90315247 -91.75191498]
[230.56396484 -103.22661591]
[240.22477722 -114.70131683]
[229.79438782 -125.49997711]
[220.52963257 -137.31388855]
[212.52873230 -150.01780701]
[205.87646484 -163.47705078]
[200.64338684 -177.54896545]
[196.88494873 -192.08438110]
[194.64099121 -206.92919922]
[193.93531799 -221.92607117]
[194.77540588 -236.91601562]
[197.15234375 -251.74012756]
[201.04092407 -266.24124146]
[206.39994812 -280.26568604]
[213.17257690 -293.66476440]
[221.28706360 -306.29644775]
[230.65733337 -318.02682495]
[241.18411255 -328.73156738]
[252.75576782 -338.29718018]
[265.24966431 -346.62225342]
[278.53332520 -353.61853027]
[292.46594238 -359.21188354]
[306.89987183 -363.34301758]
[321.68206787 -365.96810913]
[336.65579224 -367.05935669]
[351.66238403 -366.60516357]
[366.54275513 -364.61038208]
[381.13912964 -361.09613037]
[395.29678345 -356.09963989]
[408.86566162 -349.67395020]
[421.70190430 -341.88711548]
[433.66943359 -332.82168579]
[444.64144897 -322.57379150]
[454.50155640 -311.25204468]
[463.14529419 -298.97644043]
[470.48098755 -285.87716675]
[476.43090820 -272.09301758]
[480.93197632 -257.77017212]
[483.93649292 -243.06040955]
[485.41256714 -228.11967468]
[485.34457397 -213.10636902]
[483.73324585 -198.17962646]
[480.59564209 -183.49768066]
[475.96505737 -169.21617126]
[469.89053345 -155.48648071]
[462.43649292 -142.45417786]
[453.68194580 -130.25737000]
[443.71966553 -119.02538300]
[432.65533447 -108.87727356]
[420.60617065 -99.92061615]
[407.69992065 -92.25035095]
[394.07339478 -85.94779968]
[379.87106323 -81.07976532]
[365.24346924 -77.69784546]
[350.34567261 -75.83790588]
[335.33557129 -75.51964569]
[320.37231445 -76.74645233]
[305.61453247 -79.50531769]
[291.21862793 -83.76699066]
[277.33721924 -89.48630524]
[264.11746216 -96.60261536]
[251.69947815 -105.04050446]
[242.03866577 -93.56580353]
[232.37785339 -82.09110260]
[222.71704102 -70.61640167]
[213.05622864 -59.14170456]
[203.39541626 -47.66700363]
[193.73461914 -36.19230652]
[184.07380676 -24.71760559]
[181.79562378 -9.99825668]
[166.98869324 -4.42464066]
[157.32788086 7.05005932]
[155.04971313 21.76940727]
[140.24278259 27.34302330]
[132.48638916 40.18196487]
[126.82360077 54.07199097]
[121.16081238 67.96202087]
[115.49802399 81.85204315]
[109.83523560 95.74207306]
[106.18714905 110.29169464]
[112.44676971 124.82192993]
[103.42737579 136.67518616]
[101.86685181 151.59379578]
[100.30632782 166.51240540]
[98.74580383 181.43099976]
[111.22841644 195.68226624]
[109.36225128 214.21414185]
[94.79704285 225.30334473]
[93.68139648 240.26179504]
[92.56575012 255.22026062]
[107.31061554 258.06723022]
[121.62525940 262.60681152]
[135.31608582 268.77752686]
[148.19795227 276.49594116]
[160.09661865 285.65771484]
[170.85121155 296.13891602]
[180.31625366 307.79779053]
[188.36373901 320.47668457]
[194.88485718 334.00411987]
[199.79141235 348.19717407]
[203.01704407 362.86386108]
[204.51812744 377.80584717]
[204.27436829 392.82107544]
[202.28904724 407.70648193]
[198.58903503 422.26074219]
[193.22434998 436.28701782]
[186.26756287 449.59564209]
[177.81274414 462.00662231]
[167.97424316 473.35214233]
[156.88510132 483.47869873]
[144.69529724 492.24942017]
[131.56968689 499.54562378]
[117.68576813 505.26867676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 187]
[30 186]
[31 185]
[36 182]
[37 181]
[38 180]
[39 179]
[41 177]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[87 171]
[89 169]
[90 168]
[92 166]
[93 165]
[94 164]
[95 163]
[96 162]
[97 161]
[98 160]
[99 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
