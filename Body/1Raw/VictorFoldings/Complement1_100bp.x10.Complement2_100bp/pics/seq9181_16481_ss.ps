%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-13.14838505 563.65283203]
[-28.18072510 567.12158203]
[-42.69435501 561.89105225]
[-52.05803299 549.63037109]
[-53.28383636 534.25177002]
[-45.98062134 520.66253662]
[-32.47881699 513.19897461]
[-31.58600044 498.22558594]
[-30.69318581 483.25219727]
[-29.80036926 468.27877808]
[-28.90755272 453.30538940]
[-37.09319305 465.87500000]
[-49.22401810 474.69787598]
[-63.70401382 478.61318970]
[-78.62808228 477.10583496]
[-92.03271484 470.37411499]
[-102.15428925 459.30374146]
[-107.66114807 445.35113525]
[-107.82876587 430.35208130]
[-102.63508606 416.27990723]
[-92.76343536 404.98608398]
[-79.51258850 397.95651245]
[-64.62593079 396.11602783]
[-50.06205750 399.70675659]
[-37.73709106 408.25634766]
[-29.27259636 420.63989258]
[-25.78209686 435.23052979]
[-21.59508705 420.82675171]
[-17.40807533 406.42297363]
[-13.22106361 392.01916504]
[-9.03405285 377.61538696]
[-4.84704113 363.21160889]
[-0.66003001 348.80783081]
[-1.89037919 346.28903198]
[-2.19712830 343.13110352]
[-1.33184767 339.68338013]
[0.82295924 336.37863159]
[4.22873163 333.68518066]
[9.26564789 319.55615234]
[14.30256462 305.42712402]
[10.21534538 288.36074829]
[24.34154701 276.54837036]
[29.16754341 262.34591675]
[33.99354172 248.14347839]
[38.81953812 233.94100952]
[43.64553833 219.73855591]
[48.47153473 205.53610229]
[47.35488129 202.96487427]
[47.18944931 199.79640198]
[48.20781326 196.39076233]
[50.50803757 193.18553162]
[54.03068161 190.64685059]
[59.69346619 176.75682068]
[65.35625458 162.86679077]
[60.95537567 151.59919739]
[65.55945587 139.98083496]
[77.20737457 134.44108582]
[83.07633972 120.63690948]
[88.94529724 106.83273315]
[94.40065765 92.85993958]
[99.43756866 78.73090363]
[104.47448730 64.60187531]
[101.82047272 49.00486755]
[113.38225555 39.61474228]
[118.10238647 25.37675285]
[122.50338745 11.03690529]
[126.90438843 -3.30294204]
[131.30538940 -17.64278984]
[134.62763977 -32.27024841]
[136.85276794 -47.10429382]
[139.07788086 -61.93833542]
[141.30299377 -76.77237701]
[143.52810669 -91.60642242]
[145.75323486 -106.44046783]
[147.97834778 -121.27451324]
[150.20346069 -136.10855103]
[152.42857361 -150.94259644]
[146.82402039 -165.73785400]
[156.36369324 -177.17654419]
[158.58880615 -192.01058960]
[151.45333862 -208.98606873]
[162.91247559 -222.27723694]
[164.91648865 -237.14276123]
[166.92050171 -252.00828552]
[157.61100769 -264.49713135]
[159.85513306 -279.54434204]
[171.81869507 -288.34255981]
[173.82272339 -303.20806885]
[159.35638428 -307.26660156]
[145.59571838 -313.29901123]
[132.80854797 -321.18786621]
[121.24378967 -330.77966309]
[111.12655640 -341.88766479]
[102.65378571 -354.29568481]
[95.99039459 -367.76211548]
[91.26609802 -382.02490234]
[88.57285309 -396.80639648]
[87.96307373 -411.81887817]
[89.44863892 -426.77011108]
[93.00063324 -441.36904907]
[98.54991913 -455.33157349]
[105.98846436 -468.38583374]
[115.17148590 -480.27777100]
[125.92023468 -490.77590942]
[138.02546692 -499.67587280]
[151.25157166 -506.80441284]
[165.34109497 -512.02282715]
[180.01977539 -515.22943115]
[195.00187683 -516.36193848]
[209.99578857 -515.39819336]
[224.70964050 -512.35705566]
[238.85702515 -507.29763794]
[252.16256714 -500.31845093]
[264.36724854 -491.55535889]
[275.23352051 -481.17892456]
[284.54986572 -469.39114380]
[292.13491821 -456.42144775]
[297.84106445 -442.52230835]
[301.55718994 -427.96426392]
[303.21102905 -413.03070068]
[302.77032471 -398.01232910]
[300.24368286 -383.20144653]
[295.68026733 -368.88638306]
[289.16891479 -355.34573364]
[280.83639526 -342.84313965]
[270.84487915 -331.62191772]
[259.38885498 -321.90051270]
[246.69132996 -313.86816406]
[232.99943542 -307.68118286]
[218.57972717 -303.46005249]
[203.71286011 -301.28692627]
[188.68824768 -301.20407104]
[186.68423462 -286.33853149]
[195.89089966 -274.68637085]
[194.07031250 -259.58206177]
[181.78602600 -250.00427246]
[179.78201294 -235.13874817]
[177.77799988 -220.27322388]
[184.86029053 -210.46670532]
[183.31237793 -198.06558228]
[173.42285156 -189.78547668]
[171.19773865 -174.95143127]
[176.96145630 -161.21720886]
[167.26261902 -148.71748352]
[165.03750610 -133.88343811]
[162.81239319 -119.04939270]
[160.58728027 -104.21534729]
[158.36215210 -89.38130951]
[156.13703918 -74.54726410]
[153.91192627 -59.71321869]
[151.68679810 -44.87917709]
[149.46168518 -30.04513168]
[160.00976562 -40.70993042]
[174.45065308 -44.76712036]
[189.00953674 -41.15615463]
[199.88075256 -30.82093811]
[204.22259521 -16.46306801]
[200.90011597 -1.83565879]
[190.78179932 9.23772144]
[176.51255798 13.86251640]
[161.82232666 10.82981682]
[150.55110168 0.93236244]
[145.64523315 -13.24179077]
[141.24423218 1.09805596]
[136.84323120 15.43790340]
[132.44223022 29.77775002]
[133.76232910 33.04726028]
[133.56439209 37.11860657]
[131.48880005 41.27134323]
[127.51128387 44.65165710]
[130.52557373 59.23806763]
[118.60351562 69.63879395]
[113.56660461 83.76782227]
[108.52968597 97.89685059]
[109.59792328 100.75138855]
[109.65112305 104.05770111]
[108.51995087 107.44058228]
[106.17606354 110.46753693]
[102.74947357 112.70169830]
[96.88051605 126.50587463]
[91.01155090 140.31004333]
[93.66867065 158.53149414]
[79.24628448 168.52957153]
[73.58349609 182.41960144]
[67.92070770 196.30963135]
[62.67398834 210.36210632]
[57.84799194 224.56455994]
[53.02199554 238.76701355]
[48.19599533 252.96946716]
[43.36999893 267.17193604]
[38.54400253 281.37438965]
[43.53462601 293.26791382]
[39.22265625 304.99783325]
[28.43159294 310.46405029]
[23.39467812 324.59307861]
[18.35776138 338.72210693]
[13.74375248 352.99484253]
[9.55674076 367.39862061]
[5.36972952 381.80239868]
[1.18271840 396.20617676]
[-3.00429296 410.60998535]
[-7.19130421 425.01376343]
[-11.37831497 439.41754150]
[-13.93414783 454.19818115]
[-14.82696342 469.17160034]
[-15.71977901 484.14498901]
[-16.61259460 499.11840820]
[-17.50541115 514.09179688]
[-4.98617554 523.10693359]
[0.65047240 537.46771240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[27 203]
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[38 196]
[39 195]
[40 194]
[42 191]
[43 190]
[44 189]
[45 188]
[46 187]
[47 186]
[52 185]
[53 184]
[54 183]
[57 181]
[58 180]
[59 179]
[60 174]
[61 173]
[62 172]
[64 170]
[65 166]
[66 165]
[67 164]
[68 163]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[79 142]
[80 141]
[82 138]
[83 137]
[84 136]
[87 133]
[88 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
