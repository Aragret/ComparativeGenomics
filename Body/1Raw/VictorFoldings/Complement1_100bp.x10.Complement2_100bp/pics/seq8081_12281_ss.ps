%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[124.52111053 478.43457031]
[117.29804230 465.27926636]
[111.12940216 451.59783936]
[106.05321503 437.47457886]
[102.10078430 422.99658203]
[99.29647064 408.25311279]
[97.65756989 393.33505249]
[97.19419098 378.33441162]
[97.90917969 363.34365845]
[99.79813385 348.45520020]
[102.84941101 333.76086426]
[107.04418945 319.35122681]
[112.35661316 305.31512451]
[118.75392914 291.73907471]
[126.19669342 278.70684814]
[134.63902283 266.29873657]
[144.02885437 254.59124756]
[154.30830383 243.65658569]
[165.41400146 233.56214905]
[177.27746582 224.37017822]
[169.04866028 211.82878113]
[155.59753418 205.43217468]
[154.49604797 189.64935303]
[146.26722717 177.10795593]
[138.03842163 164.56655884]
[129.80961609 152.02516174]
[121.11978912 139.79867554]
[111.98098755 127.90403748]
[102.84218597 116.00940704]
[87.18053436 110.00201416]
[85.16252136 93.34957123]
[70.52809143 87.33756256]
[68.68918610 72.55691528]
[59.37430191 60.79966354]
[50.05941772 49.04241180]
[40.74453354 37.28516006]
[34.74871063 34.49919128]
[31.54138565 29.80769920]
[31.33360672 25.03634071]
[22.37291145 13.00696278]
[13.41221428 0.97758478]
[4.45151854 -11.05179310]
[-4.59848118 -23.01412964]
[-13.73728371 -34.90876389]
[-22.87608528 -46.80339432]
[-32.01488876 -58.69802856]
[-41.15369034 -70.59265900]
[-53.78797531 -62.49027252]
[-67.06388092 -55.48854446]
[-80.88574982 -49.63792801]
[-95.15399933 -44.98057175]
[-109.76581573 -41.55003738]
[-124.61592865 -39.37104034]
[-139.59733582 -38.45928192]
[-154.60209656 -38.82132721]
[-169.52209473 -40.45457458]
[-184.24983215 -43.34725189]
[-198.67919922 -47.47851944]
[-212.70620728 -52.81860733]
[-226.22982788 -59.32904053]
[-239.15258789 -66.96291351]
[-251.38139343 -75.66521454]
[-262.82812500 -85.37326050]
[-273.41033936 -96.01708221]
[-283.05172729 -107.52000427]
[-291.68289185 -119.79913330]
[-299.24157715 -132.76600647]
[-305.67337036 -146.32719421]
[-310.93191528 -160.38499451]
[-314.97933960 -174.83810425]
[-317.78643799 -189.58239746]
[-319.33300781 -204.51162720]
[-319.60791016 -219.51823425]
[-318.60919189 -234.49409485]
[-316.34399414 -249.33129883]
[-312.82864380 -263.92294312]
[-308.08853149 -278.16390991]
[-302.15774536 -291.95156860]
[-295.07904053 -305.18658447]
[-286.90341187 -317.77362061]
[-277.68978882 -329.62194824]
[-267.50454712 -340.64620972]
[-256.42105103 -350.76699829]
[-244.51918030 -359.91134644]
[-231.88468933 -368.01342773]
[-218.60861206 -375.01480103]
[-204.78659058 -380.86505127]
[-190.51821899 -385.52203369]
[-175.90631104 -388.95220947]
[-161.05613708 -391.13082886]
[-146.07470703 -392.04220581]
[-131.06996155 -391.67974854]
[-116.15000916 -390.04611206]
[-101.42234039 -387.15307617]
[-86.99308777 -383.02142334]
[-72.96620178 -377.68096924]
[-59.44276047 -371.17019653]
[-46.52019501 -363.53598022]
[-34.29161072 -354.83337402]
[-22.84512329 -345.12503052]
[-12.26320457 -334.48092651]
[-2.62209678 -322.97775269]
[6.00873327 -310.69839478]
[13.56709957 -297.73132324]
[19.99854279 -284.16998291]
[25.25672340 -270.11206055]
[29.30375481 -255.65884399]
[32.11048126 -240.91447449]
[33.65667343 -225.98521423]
[33.93119431 -210.97859192]
[32.93206787 -196.00276184]
[30.66649055 -181.16561890]
[27.15078735 -166.57405090]
[22.41028786 -152.33320618]
[16.47914886 -138.54570007]
[9.40010548 -125.31085968]
[1.22416222 -112.72405243]
[-7.98977089 -100.87596130]
[-18.17530632 -89.85195160]
[-29.25905800 -79.73146057]
[-20.12025642 -67.83683014]
[-10.98145294 -55.94219589]
[-1.84265077 -44.04756546]
[7.29615164 -32.15293121]
[13.86405182 -28.76405716]
[16.48089600 -20.01248932]
[25.44159317 -7.98311138]
[34.40228653 4.04626656]
[43.36298370 16.07564354]
[52.50178528 27.97027779]
[61.81666946 39.72752762]
[71.13155365 51.48477936]
[80.44643402 63.24203110]
[94.41459656 68.41307831]
[96.91976929 84.03468323]
[108.38700867 86.07028198]
[115.55124664 95.25260162]
[114.73682404 106.87060547]
[123.87562561 118.76523590]
[133.01441956 130.65986633]
[137.52177429 116.35308838]
[151.46186829 110.81471252]
[164.55859375 118.12741852]
[167.15754700 132.90055847]
[157.34284973 144.24391174]
[142.35101318 143.79634094]
[150.57981873 156.33775330]
[158.80863953 168.87915039]
[167.03744507 181.42054749]
[181.07714844 188.71420288]
[181.59005737 203.59997559]
[189.81886292 216.14137268]
[202.97392273 208.91789246]
[216.65518188 202.74884033]
[230.77827454 197.67221069]
[245.25614929 193.71934509]
[259.99954224 190.91458130]
[274.91754150 189.27522278]
[289.91818237 188.81138611]
[304.90893555 189.52590942]
[319.79745483 191.41441345]
[334.49191284 194.46524048]
[348.90167236 198.65957642]
[362.93792725 203.97157288]
[376.51416016 210.36846924]
[389.54663086 217.81083679]
[401.95501709 226.25277710]
[413.66278076 235.64225769]
[424.59774780 245.92137146]
[434.69253540 257.02676392]
[443.88485718 268.88995361]
[452.11807251 281.43777466]
[459.34140015 294.59289551]
[465.51034546 308.27423096]
[470.58682251 322.39736938]
[474.53955078 336.87530518]
[477.34414673 351.61871338]
[478.98336792 366.53671265]
[479.44705200 381.53735352]
[478.73236084 396.52813721]
[476.84371948 411.41662598]
[473.79272461 426.11102295]
[469.59823608 440.52075195]
[464.28610229 454.55697632]
[457.88906860 468.13314819]
[450.44656372 481.16552734]
[442.00451660 493.57382202]
[432.61489868 505.28149414]
[422.33566284 516.21636963]
[411.23019409 526.31103516]
[399.36691284 535.50323486]
[386.81900024 543.73632812]
[373.66378784 550.95953369]
[359.98239136 557.12829590]
[345.85919189 562.20465088]
[331.38122559 566.15722656]
[316.63778687 568.96166992]
[301.71975708 570.60070801]
[286.71911621 571.06427002]
[271.72836304 570.34942627]
[256.83990479 568.46063232]
[242.14550781 565.40948486]
[227.73582458 561.21484375]
[213.69966125 555.90258789]
[200.12358093 549.50543213]
[187.09126282 542.06280518]
[174.68305969 533.62060547]
[162.97547913 524.23089600]
[152.04071045 513.95153809]
[141.94616699 502.84594727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 152]
[21 151]
[23 149]
[24 148]
[25 147]
[26 146]
[27 140]
[28 139]
[29 138]
[31 135]
[33 133]
[34 132]
[35 131]
[36 130]
[39 129]
[40 128]
[41 127]
[42 126]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
