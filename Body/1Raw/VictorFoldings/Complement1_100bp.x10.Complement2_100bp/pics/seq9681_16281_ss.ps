%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[85.65932465 255.89154053]
[82.36342621 270.53112793]
[78.06537628 284.90847778]
[72.78565979 298.95498657]
[66.54943085 312.60382080]
[59.38640594 325.78985596]
[51.33072662 338.45028687]
[42.42078018 350.52481079]
[32.69902802 361.95581055]
[22.21179581 372.68887329]
[11.00906181 382.67285156]
[-0.85578495 391.86010742]
[-13.32620525 400.20693970]
[-26.34276962 407.67349243]
[-39.84344864 414.22424316]
[-53.76390457 419.82797241]
[-68.03780365 424.45791626]
[-82.59711456 428.09207153]
[-97.37245941 430.71310425]
[-112.29342651 432.30853271]
[-127.28891754 432.87072754]
[-142.28746033 432.39700317]
[-157.21757507 430.88964844]
[-172.00813293 428.35583496]
[-186.58863831 424.80764771]
[-200.88960266 420.26196289]
[-214.84286499 414.74050903]
[-228.38195801 408.26950073]
[-241.44235229 400.87985229]
[-253.96180725 392.60678101]
[-265.88064575 383.48965454]
[-277.14208984 373.57196045]
[-287.69247437 362.90097046]
[-297.48147583 351.52749634]
[-306.46252441 339.50576782]
[-314.59274292 326.89309692]
[-321.83343506 313.74954224]
[-328.15008545 300.13775635]
[-333.51260376 286.12261963]
[-337.89538574 271.77090454]
[-341.27761841 257.15100098]
[-343.64309692 242.33259583]
[-344.98062134 227.38629150]
[-345.28381348 212.38334656]
[-344.55117798 197.39521790]
[-342.78625488 182.49334717]
[-339.99740601 167.74874878]
[-336.19796753 153.23168945]
[-331.40603638 139.01135254]
[-325.64443970 125.15550232]
[-318.94061279 111.73017120]
[-311.32656860 98.79932404]
[-302.83853149 86.42459869]
[-293.51693726 74.66496277]
[-283.40628052 63.57645798]
[-272.55468750 53.21192169]
[-261.01388550 43.62074661]
[-248.83888245 34.84864426]
[-236.08767700 26.93741226]
[-222.82106018 19.92475700]
[-209.10223389 13.84409332]
[-194.99658203 8.72440052]
[-180.57131958 4.59007549]
[-165.89520264 1.46082115]
[-151.03816223 -0.64845037]
[-136.07099915 -1.72768724]
[-121.06504822 -1.77174640]
[-106.09180450 -0.78041798]
[-91.22263336 1.24157393]
[-76.52839661 4.28459358]
[-62.07910919 8.33413982]
[-47.94363403 13.37091351]
[-34.18933868 19.37091255]
[-20.88176346 26.30554390]
[-8.08432770 34.14176178]
[4.14198351 42.84222031]
[15.73890495 52.36545944]
[26.65117264 62.66609573]
[36.82678223 73.69503784]
[46.21724319 85.39973450]
[54.77780533 97.72440338]
[62.46767426 110.61031342]
[75.84794617 103.83032227]
[89.22821808 97.05033112]
[102.55764771 90.17091370]
[115.83549500 83.19245911]
[129.11334229 76.21401215]
[142.39118958 69.23555756]
[143.35456848 55.48554993]
[150.92616272 44.09743118]
[163.03926086 37.98656082]
[176.48168945 38.65361786]
[187.74757385 45.81755066]
[201.12785339 39.03755951]
[214.50813293 32.25756836]
[227.88839722 25.47757721]
[222.01487732 11.66921234]
[217.07676697 -2.50062776]
[213.09613037 -16.96865463]
[210.09074402 -31.67025185]
[208.07403564 -46.53975296]
[207.05500793 -61.51075363]
[207.03820801 -76.51638794]
[208.02371216 -91.48963165]
[210.00712585 -106.36360931]
[212.97959900 -121.07189941]
[216.92782593 -135.54879761]
[221.83419800 -149.72966003]
[227.67678833 -163.55114746]
[234.42951965 -176.95152283]
[242.06221008 -189.87092590]
[250.54078674 -202.25167847]
[259.82736206 -214.03848267]
[269.88049316 -225.17868042]
[280.65524292 -235.62251282]
[292.10351562 -245.32336426]
[304.17416382 -254.23786926]
[316.81329346 -262.32626343]
[329.96444702 -269.55236816]
[343.56887817 -275.88391113]
[357.56582642 -281.29266357]
[371.89279175 -285.75445557]
[386.48577881 -289.24932861]
[401.27960205 -291.76168823]
[416.20819092 -293.28030396]
[431.20489502 -293.79840088]
[446.20269775 -293.31369019]
[461.13464355 -291.82830811]
[475.93402100 -289.34887695]
[490.53475952 -285.88650513]
[504.87161255 -281.45666504]
[518.88055420 -276.07907104]
[532.49908447 -269.77780151]
[545.66625977 -262.58099365]
[558.32336426 -254.52078247]
[570.41381836 -245.63316345]
[581.88366699 -235.95783997]
[592.68164062 -225.53800964]
[602.75958252 -214.42022705]
[612.07238770 -202.65412903]
[620.57849121 -190.29228210]
[628.23992920 -177.38989258]
[635.02246094 -164.00459290]
[640.89581299 -150.19615173]
[645.83374023 -136.02624512]
[649.81420898 -121.55817413]
[652.81939697 -106.85653687]
[654.83593750 -91.98700714]
[655.85479736 -77.01599884]
[655.87139893 -62.01036453]
[654.88568115 -47.03713226]
[652.90209961 -32.16317749]
[649.92944336 -17.45492554]
[645.98101807 -2.97807240]
[641.07446289 11.20272636]
[635.23168945 25.02413368]
[628.47882080 38.42442322]
[620.84594727 51.34373856]
[612.36724854 63.72438431]
[603.08050537 75.51106262]
[593.02722168 86.65113831]
[582.25231934 97.09484100]
[570.80395508 106.79553986]
[558.73315430 115.70990753]
[546.09393311 123.79811859]
[532.94268799 131.02406311]
[519.33819580 137.35545349]
[505.34118652 142.76403809]
[491.01416016 147.22563171]
[476.42114258 150.72030640]
[461.62728882 153.23248291]
[446.69866943 154.75091553]
[431.70196533 155.26884460]
[416.70416260 154.78393555]
[401.77224731 153.29835510]
[386.97286987 150.81875610]
[372.37219238 147.35620117]
[358.03540039 142.92616272]
[344.02648926 137.54840088]
[330.40808105 131.24697876]
[317.24096680 124.04999542]
[304.58398438 115.98962402]
[292.49362183 107.10185242]
[281.02389526 97.42637634]
[270.22604370 87.00640869]
[260.14828491 75.88849640]
[250.83563232 64.12229156]
[242.32966614 51.76033783]
[234.66839600 38.85785294]
[221.28811646 45.63784409]
[207.90785217 52.41783524]
[194.52757263 59.19782639]
[192.44384766 75.48081207]
[180.95005798 87.43299103]
[164.43316650 90.20667267]
[149.36964417 82.51340485]
[136.09179688 89.49185944]
[122.81394958 96.47030640]
[109.53610229 103.44876099]
[104.43317413 109.68836212]
[96.00820923 110.43060303]
[82.62793732 117.21059418]
[69.24766541 123.99058533]
[75.09091187 137.81219482]
[79.96666718 152.00401306]
[83.85168457 166.49841309]
[86.72745514 181.22628784]
[88.58028412 196.11749268]
[89.40132904 211.10102844]
[89.18667603 226.10551453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 203]
[83 202]
[84 201]
[85 199]
[86 198]
[87 197]
[88 196]
[93 192]
[94 191]
[95 190]
[96 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
