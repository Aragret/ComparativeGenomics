%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[36.74339676 413.00433350]
[36.47054291 428.16024780]
[31.02762604 442.30770874]
[21.07190132 453.73834229]
[7.80557156 461.07183838]
[-7.16938877 463.42266846]
[-22.04468155 460.50692749]
[-35.02404022 452.67672729]
[-44.54014587 440.87759399]
[-49.44388199 426.53433228]
[-49.14310074 411.37896729]
[-43.67412186 397.24154663]
[-33.69734573 385.82928467]
[-20.41752625 378.52023315]
[-5.43825865 376.19702148]
[-2.55298615 361.47714233]
[0.33228651 346.75723267]
[3.21755910 332.03735352]
[1.41936314 324.86877441]
[6.25692225 317.12051392]
[9.36103249 302.44519043]
[12.46514225 287.76989746]
[15.56925297 273.09460449]
[18.67336273 258.41931152]
[8.71369648 269.63558960]
[-4.59171247 276.56134033]
[-19.49230766 278.28536987]
[-34.02766037 274.58084106]
[-46.28539276 265.93515015]
[-54.65279388 253.48577881]
[-58.02898407 238.87068176]
[-55.96976852 224.01269531]
[-48.74607086 210.86665344]
[-37.30829620 201.16215515]
[-23.16127968 196.17599487]
[-8.16630363 196.56416321]
[5.70378542 202.27560425]
[16.62413788 212.55888367]
[23.15799332 226.06106567]
[24.44548416 241.00805664]
[20.55211830 229.55519104]
[25.67039680 218.15400696]
[37.55405807 213.13989258]
[44.03355408 199.61154175]
[50.51305008 186.08319092]
[49.03261566 171.26234436]
[61.97201538 162.15837097]
[56.79594040 148.23918152]
[63.17435074 134.42721558]
[77.80917358 129.09243774]
[84.28866577 115.56409454]
[90.76816559 102.03575134]
[90.19047546 96.82228088]
[92.57491302 91.65625763]
[97.64727783 88.20545959]
[104.52668762 74.87602997]
[111.40610504 61.54659653]
[118.28551483 48.21716690]
[125.16492462 34.88773727]
[125.23522186 28.27664375]
[128.19012451 23.42219925]
[132.45277405 21.26839447]
[139.72599792 8.14970016]
[146.99922180 -4.96899366]
[146.76927185 -9.30501556]
[147.82489014 -13.10635567]
[149.84014893 -16.03452301]
[152.41262817 -17.89165306]
[155.11599731 -18.63326454]
[163.15716553 -31.29578781]
[171.19833374 -43.95831299]
[179.23951721 -56.62083817]
[187.28068542 -69.28336334]
[173.49981689 -63.35987091]
[158.53784180 -64.42712402]
[145.73727417 -72.24669647]
[137.95782471 -85.07167816]
[136.93742371 -100.03692627]
[142.90403748 -113.79917908]
[154.52470398 -123.28390503]
[169.20333862 -126.37219238]
[183.66070557 -122.37411499]
[194.66697693 -112.18285370]
[199.76333618 -98.07515717]
[197.81123352 -83.20269775]
[201.24177551 -98.64749908]
[215.49296570 -102.97798157]
[218.92350769 -118.42278290]
[233.17469788 -122.75325775]
[243.17286682 -133.93524170]
[253.17103577 -145.11720276]
[262.91699219 -156.51966858]
[272.40591431 -168.13693237]
[281.89480591 -179.75419617]
[291.38369751 -191.37145996]
[300.87258911 -202.98872375]
[310.36151123 -214.60598755]
[319.85040283 -226.22325134]
[309.24304199 -236.84753418]
[299.76498413 -248.49044800]
[291.51348877 -261.03250122]
[284.57318115 -274.34503174]
[279.01528931 -288.29138184]
[274.89688110 -302.72848511]
[272.26022339 -317.50817871]
[271.13232422 -332.47875977]
[271.52478027 -347.48666382]
[273.43359375 -362.37786865]
[276.83914185 -376.99954224]
[281.70648193 -391.20162964]
[287.98565674 -404.83847046]
[295.61227417 -417.77005005]
[304.50802612 -429.86370850]
[314.58166504 -440.99533081]
[325.72976685 -451.05068970]
[337.83801270 -459.92660522]
[350.78207397 -467.53198242]
[364.42916870 -473.78881836]
[378.63925171 -478.63284302]
[393.26647949 -482.01440430]
[408.16079712 -483.89877319]
[423.16931152 -484.26663208]
[438.13803101 -483.11419678]
[452.91339111 -480.45327759]
[467.34368896 -476.31121826]
[481.28094482 -470.73049927]
[494.58206177 -463.76837158]
[507.11056519 -455.49627686]
[518.73791504 -445.99914551]
[529.34478760 -435.37438965]
[538.82232666 -423.73107910]
[547.07330322 -411.18862915]
[554.01300049 -397.87582397]
[559.57031250 -383.92919922]
[563.68804932 -369.49191284]
[566.32409668 -354.71212769]
[567.45129395 -339.74148560]
[567.05816650 -324.73361206]
[565.14874268 -309.84249878]
[561.74255371 -295.22097778]
[556.87457275 -281.01907349]
[550.59478760 -267.38253784]
[542.96765137 -254.45127869]
[534.07135010 -242.35801697]
[523.99719238 -231.22683716]
[512.84863281 -221.17196655]
[500.74002075 -212.29658508]
[487.79562378 -204.69177246]
[474.14825439 -198.43554688]
[459.93795776 -193.59213257]
[445.31057739 -190.21121216]
[430.41619873 -188.32749939]
[415.40765381 -187.96029663]
[400.43896484 -189.11340332]
[385.66375732 -191.77496338]
[371.23361206 -195.91766357]
[357.29663086 -201.49900818]
[343.99581909 -208.46173096]
[331.46765137 -216.73435974]
[321.97875977 -205.11709595]
[312.48986816 -193.49983215]
[303.00097656 -181.88256836]
[293.51205444 -170.26530457]
[284.02316284 -158.64804077]
[274.53427124 -147.03077698]
[274.52236938 -143.50483704]
[272.80206299 -139.80949402]
[269.31231689 -136.74763489]
[264.35302734 -135.11903381]
[254.35484314 -123.93706512]
[244.35667419 -112.75508881]
[241.64126587 -98.11009216]
[226.67494202 -92.97980499]
[223.95953369 -78.33481598]
[208.99320984 -73.20452881]
[199.94320679 -61.24219131]
[191.90203857 -48.57966614]
[183.86087036 -35.91714096]
[175.81968689 -23.25461578]
[167.77851868 -10.59209061]
[160.11791992 2.30423594]
[152.84469604 15.42292976]
[145.57145691 28.54162407]
[138.49435425 41.76715088]
[131.61494446 55.09658051]
[124.73552704 68.42601013]
[117.85611725 81.75543976]
[110.97670746 95.08486938]
[104.29650879 108.51524353]
[97.81701660 122.04358673]
[91.33751678 135.57192993]
[96.35406494 150.31886292]
[89.59022522 163.94622803]
[75.50035858 168.63786316]
[76.51734161 184.42634583]
[64.04139709 192.56269836]
[57.56190109 206.09103394]
[51.08240509 219.61938477]
[52.92324066 237.94129944]
[38.06879807 247.28541565]
[33.34866714 261.52340698]
[30.24455452 276.19869995]
[27.14044571 290.87402344]
[24.03633499 305.54931641]
[20.93222427 320.22460938]
[17.93745041 334.92260742]
[15.05217743 349.64251709]
[12.16690540 364.36239624]
[9.28163242 379.08230591]
[22.27540016 386.88854980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[40 200]
[43 198]
[44 197]
[45 196]
[47 194]
[50 191]
[51 190]
[52 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 184]
[62 183]
[63 182]
[64 181]
[69 180]
[70 179]
[71 178]
[72 177]
[73 176]
[85 175]
[87 173]
[89 171]
[90 170]
[91 169]
[92 165]
[93 164]
[94 163]
[95 162]
[96 161]
[97 160]
[98 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
