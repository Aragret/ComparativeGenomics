%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[63.33467865 507.55352783]
[48.28330231 510.33105469]
[33.66862869 505.78463745]
[22.84900475 494.95901489]
[18.31069946 480.34179688]
[21.09658051 465.29199219]
[30.56647491 453.26785278]
[44.54426956 447.03247070]
[45.43708801 432.05908203]
[46.32990265 417.08566284]
[47.22271729 402.11227417]
[40.25667572 388.94702148]
[48.80165863 375.63183594]
[49.69447708 360.65844727]
[50.58729172 345.68502808]
[51.48010635 330.71163940]
[52.37292480 315.73822021]
[40.46416473 324.85861206]
[25.57681656 323.02371216]
[16.23902702 311.28463745]
[17.79990768 296.36608887]
[29.36531448 286.81405640]
[44.31005859 288.10037231]
[54.07280731 299.48733521]
[56.29792786 284.65328979]
[58.52304459 269.81924438]
[60.74816132 254.98518372]
[62.97327805 240.15115356]
[65.19839478 225.31710815]
[63.40790558 222.27958679]
[62.99971008 218.22392273]
[64.43631744 213.80923462]
[67.86837769 209.87629700]
[70.75365448 195.15640259]
[65.60894775 181.17851257]
[75.85624695 169.12432861]
[74.20317841 166.00990295]
[73.97647858 161.94004822]
[75.60877991 157.59391785]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[98.91383362 71.74385071]
[94.19983673 56.64124298]
[104.40343475 45.79063416]
[107.50754547 31.11533165]
[98.23425293 42.90541077]
[86.73989105 52.54281998]
[73.51320648 59.61777115]
[59.11661530 63.82943344]
[44.16226196 64.99872589]
[29.28600883 63.07593155]
[15.12040710 58.14280319]
[2.26778412 50.40910721]
[-8.72535992 40.20367813]
[-17.39159203 27.96045876]
[-23.36241913 14.20003605]
[-26.38395882 -0.49248910]
[-26.32773209 -15.49238396]
[-23.19613075 -30.16184425]
[-17.12231445 -43.87711716]
[-8.36454105 -56.05502701]
[2.70480204 -66.17775726]
[15.61504173 -73.81488037]
[29.81722832 -78.64167023]
[44.70747757 -80.45288849]
[59.65264511 -79.17152405]
[74.01725769 -74.85205078]
[87.19052887 -67.67813873]
[98.61231995 -57.95483017]
[107.79696655 -46.09556198]
[114.35394287 -32.60459900]
[118.00443268 -18.05558205]
[118.59322357 -3.06714296]
[116.09523010 11.72357082]
[117.90036011 -3.99431872]
[131.62368774 -9.78391838]
[140.40429688 -21.94537354]
[149.18490601 -34.10683060]
[157.96549988 -46.26828384]
[166.74610901 -58.42974091]
[152.31103516 -54.35189056]
[137.93215942 -58.62362671]
[128.06491089 -69.92130280]
[125.76677704 -84.74420929]
[131.74984741 -98.49930573]
[144.16021729 -106.92443848]
[159.15238953 -107.40897369]
[172.08087158 -99.80278015]
[178.93965149 -86.46271515]
[177.60334778 -71.52210999]
[187.93002319 -82.40144348]
[198.25668335 -93.28077698]
[208.58335876 -104.16011047]
[218.91001892 -115.03944397]
[209.03778076 -126.34755707]
[200.26785278 -138.53044128]
[192.67727661 -151.48103333]
[186.33279419 -165.08551025]
[181.29014587 -179.22433472]
[177.59365845 -193.77322388]
[175.27578735 -208.60433960]
[174.35694885 -223.58734131]
[174.84518433 -238.59054565]
[176.73620605 -253.48210144]
[180.01339722 -268.13113403]
[184.64797974 -282.40893555]
[190.59919739 -296.19000244]
[197.81474304 -309.35321045]
[206.23123169 -321.78289795]
[215.77468872 -333.36981201]
[226.36123657 -344.01217651]
[237.89784241 -353.61639404]
[250.28312683 -362.09811401]
[263.40823364 -369.38275146]
[277.15780640 -375.40634155]
[291.41104126 -380.11590576]
[306.04263306 -383.47006226]
[320.92407227 -385.43933105]
[335.92449951 -386.00640869]
[350.91210938 -385.16635132]
[365.75518799 -382.92648315]
[380.32333374 -379.30651855]
[394.48846436 -374.33825684]
[408.12609863 -368.06536865]
[421.11642456 -360.54299927]
[433.34524536 -351.83721924]
[444.70507812 -342.02456665]
[455.09613037 -331.19125366]
[464.42706299 -319.43249512]
[472.61587524 -306.85165405]
[479.59060669 -293.55926514]
[485.28994751 -279.67214966]
[489.66384888 -265.31234741]
[492.67379761 -250.60607910]
[494.29342651 -235.68255615]
[494.50845337 -220.67295837]
[493.31698608 -205.70916748]
[490.72952271 -190.92271423]
[486.76876831 -176.44351196]
[481.46957397 -162.39884949]
[474.87847900 -148.91210938]
[467.05340576 -136.10185242]
[458.06314087 -124.08064270]
[447.98666382 -112.95412445]
[436.91256714 -102.82008362]
[424.93814087 -93.76758575]
[412.16864014 -85.87617493]
[398.71627808 -79.21520996]
[384.69927979 -73.84322357]
[370.24084473 -69.80743408]
[355.46798706 -67.14329529]
[340.51058960 -65.87423706]
[325.50006104 -66.01140594]
[310.56835938 -67.55358887]
[295.84664917 -70.48724365]
[281.46438599 -74.78658295]
[267.54788208 -80.41382599]
[254.21949768 -87.31951141]
[241.59634399 -95.44296265]
[229.78935242 -104.71277618]
[219.46269226 -93.83344269]
[209.13601685 -82.95410919]
[198.80935669 -72.07477570]
[188.48268127 -61.19543839]
[178.90756226 -49.64913940]
[170.12695312 -37.48768234]
[161.34635925 -25.32622719]
[152.56575012 -13.16477108]
[143.78515625 -1.00331497]
[142.60806274 13.84470654]
[128.25668335 20.50417519]
[122.18285370 34.21944046]
[119.07874298 48.89474487]
[124.01476288 62.94767761]
[113.58913422 74.84796143]
[115.39719391 79.26836395]
[114.44757843 84.87151337]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[90.57613373 172.00959778]
[95.51446533 187.04035950]
[85.47354126 198.04167175]
[82.58827209 212.76156616]
[80.03244019 227.54222107]
[77.80731964 242.37626648]
[75.58220673 257.21029663]
[73.35708618 272.04434204]
[71.13197327 286.87838745]
[68.90685272 301.71243286]
[67.34632874 316.63104248]
[66.45351410 331.60446167]
[65.56069946 346.57785034]
[64.66788483 361.55126953]
[63.77506638 376.52465820]
[70.67724609 390.76089478]
[62.19612503 403.00506592]
[61.30331039 417.97848511]
[60.41049194 432.95190430]
[59.51767731 447.92529297]
[72.65547943 455.77746582]
[80.62943268 468.84173584]
[81.60718536 484.11596680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[24 197]
[25 196]
[26 195]
[27 194]
[28 193]
[29 192]
[33 191]
[34 190]
[36 188]
[40 187]
[41 186]
[42 185]
[43 184]
[45 182]
[46 179]
[48 177]
[49 176]
[78 175]
[80 173]
[81 172]
[82 171]
[83 170]
[84 169]
[94 168]
[95 167]
[96 166]
[97 165]
[98 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
