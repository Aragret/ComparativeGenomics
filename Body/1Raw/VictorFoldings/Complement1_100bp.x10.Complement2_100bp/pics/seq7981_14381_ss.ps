%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[121.75952148 572.64630127]
[132.62722778 562.19848633]
[145.67980957 554.65570068]
[141.49279785 540.25189209]
[137.30578613 525.84814453]
[133.11877441 511.44433594]
[128.45497131 525.70086670]
[117.76457214 536.22302246]
[103.43584442 540.66009521]
[88.66986084 538.02081299]
[76.76537323 528.89483643]
[70.38188934 515.32092285]
[70.94548035 500.33154297]
[78.33024597 487.27529907]
[90.88641357 479.06903076]
[105.80889130 477.54605103]
[119.76397705 483.04656982]
[129.63406372 494.34179688]
[127.85160065 479.44808960]
[126.06912994 464.55435181]
[124.28666687 449.66064453]
[115.09178925 437.94299316]
[121.13438416 423.32116699]
[119.35191345 408.42742920]
[117.56945038 393.53372192]
[115.78698730 378.64001465]
[114.00451660 363.74627686]
[112.22205353 348.85256958]
[103.02717590 337.13491821]
[109.06977081 322.51309204]
[107.28730011 307.61938477]
[105.50483704 292.72564697]
[103.72236633 277.83193970]
[99.80630493 271.56405640]
[102.02593994 262.70343018]
[100.46541595 247.78482056]
[98.90489197 232.86621094]
[96.81468964 230.99827576]
[95.33846283 228.18983459]
[94.83814240 224.67057800]
[95.58589172 220.79690552]
[97.72281647 217.01701355]
[97.05302429 202.03198242]
[96.38323975 187.04693604]
[95.71345520 172.06190491]
[95.04367065 157.07685852]
[94.37388611 142.09182739]
[81.68960571 138.31584167]
[70.78367615 130.81852722]
[62.71532822 120.32801819]
[58.26817703 107.86318970]
[57.87413788 94.63467407]
[61.57148743 81.92724609]
[69.00112915 70.97509766]
[79.44146729 62.84193802]
[91.87850952 58.31767273]
[91.65518188 43.31933594]
[82.98713684 55.56126785]
[69.40101624 61.91872787]
[54.44819641 60.72988892]
[42.03731918 52.30551147]
[35.41255569 38.84770966]
[36.30559540 23.87431717]
[44.48300934 11.29934502]
[57.80723572 4.40986013]
[72.79535675 5.00675726]
[85.52951050 12.93400955]
[92.68080902 26.11858940]
[94.68482208 11.25306129]
[81.59995270 3.56789494]
[72.47886658 -8.50889397]
[68.68662262 -23.11822510]
[70.77097321 -38.02604675]
[78.38343811 -50.96495056]
[90.33716583 -59.97903824]
[104.79183960 -63.71957016]
[106.79585266 -78.58509827]
[100.97163391 -93.29526520]
[110.33994293 -104.87473297]
[112.34396362 -119.74025726]
[114.34797668 -134.60578918]
[116.35198975 -149.47131348]
[118.35600281 -164.33683777]
[120.36001587 -179.20237732]
[107.03072357 -172.32269287]
[93.27956390 -178.31483459]
[89.24339294 -192.76161194]
[97.89751434 -205.01339722]
[112.86243439 -206.03862000]
[123.10607147 -195.08311462]
[126.21018219 -209.75842285]
[129.31430054 -224.43373108]
[132.41839600 -239.10902405]
[135.52250671 -253.78433228]
[134.23674011 -262.82781982]
[138.78363037 -268.65426636]
[142.10589600 -283.28173828]
[145.42814636 -297.90917969]
[131.71878052 -304.12515259]
[119.54151917 -312.97381592]
[109.39500427 -324.09286499]
[101.69473267 -337.02694702]
[96.75602722 -351.24645996]
[94.78112030 -366.16906738]
[95.85089111 -381.18374634]
[99.92152405 -395.67562866]
[106.82633972 -409.05130005]
[116.28257751 -420.76303101]
[127.90302277 -430.33120728]
[141.21182251 -437.36404419]
[155.66398621 -441.57354736]
[170.66769409 -442.78735352]
[185.60858154 -440.95571899]
[199.87481689 -436.15368652]
[212.88220215 -428.57788086]
[224.09808350 -418.53851318]
[233.06320190 -406.44671631]
[239.41043091 -392.79763794]
[242.87985229 -378.15017700]
[243.32939148 -363.10415649]
[240.74064636 -348.27569580]
[235.21961975 -334.27200317]
[226.99240112 -321.66653442]
[216.39588928 -310.97546387]
[203.86399841 -302.63662720]
[189.90991211 -296.99142456]
[175.10502625 -294.27105713]
[160.05560303 -294.58691406]
[156.73335266 -279.95947266]
[153.41108704 -265.33200073]
[150.19781494 -250.68022156]
[147.09370422 -236.00491333]
[143.98959351 -221.32962036]
[140.88548279 -206.65431213]
[137.78137207 -191.97900391]
[135.22554016 -177.19836426]
[133.22152710 -162.33282471]
[131.21751404 -147.46730042]
[129.21350098 -132.60177612]
[127.20948792 -117.73624420]
[125.20547485 -102.87071991]
[131.17303467 -89.22383118]
[121.66138458 -76.58108521]
[119.65737152 -61.71555710]
[132.60551453 -54.28086472]
[141.74552917 -42.42314148]
[145.65994263 -27.93030548]
[143.72219849 -13.00272274]
[136.19668579 0.08087073]
[124.20319366 9.31121540]
[109.55035400 13.25707436]
[107.54634094 28.12260246]
[106.65351868 43.09600830]
[106.87684631 58.09434509]
[122.43035889 63.94096756]
[134.54980469 75.30818176]
[141.37971497 90.45568848]
[141.87443542 107.06442261]
[135.95823669 122.59159851]
[124.53686523 134.66001892]
[109.35892487 141.42204285]
[110.02870941 156.40707397]
[110.69849396 171.39212036]
[111.36827850 186.37715149]
[112.03806305 201.36219788]
[112.70785522 216.34722900]
[113.82350159 231.30569458]
[115.38402557 246.22428894]
[116.94454956 261.14288330]
[118.61608887 276.04946899]
[120.39855194 290.94317627]
[122.18101501 305.83691406]
[123.96348572 320.73062134]
[133.28585815 333.51358032]
[127.11576843 347.07009888]
[128.89823914 361.96383667]
[130.68069458 376.85754395]
[132.46316528 391.75125122]
[134.24563599 406.64498901]
[136.02809143 421.53869629]
[145.35046387 434.32165527]
[139.18038940 447.87817383]
[140.96284485 462.77188110]
[142.74531555 477.66561890]
[144.52778625 492.55932617]
[147.52255249 507.25732422]
[151.70956421 521.66113281]
[155.89657593 536.06488037]
[160.08358765 550.46868896]
[175.14569092 549.83886719]
[189.92068481 552.83264160]
[203.54960632 559.27593994]
[215.24006653 568.79412842]
[224.31240845 580.83392334]
[230.23916626 594.69525146]
[232.67576599 609.57232666]
[231.48056030 624.60009766]
[226.72302246 638.90496826]
[218.67976379 651.65521240]
[207.81840515 662.10961914]
[194.77040100 669.66033936]
[180.29434204 673.86834717]
[165.23187256 674.48901367]
[150.45867920 671.48632812]
[136.83366394 665.03472900]
[125.14897919 655.50946045]
[116.08394623 643.46417236]
[110.16559601 629.59924316]
[107.73800659 614.72070312]
[108.94232941 599.69366455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 186]
[18 185]
[19 184]
[20 183]
[21 182]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[30 173]
[31 172]
[32 171]
[33 170]
[35 169]
[36 168]
[37 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[56 154]
[57 153]
[68 152]
[69 151]
[76 144]
[77 143]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[96 130]
[97 129]
[98 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
