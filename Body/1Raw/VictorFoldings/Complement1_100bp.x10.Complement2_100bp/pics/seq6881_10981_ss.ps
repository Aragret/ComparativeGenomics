%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[78.46678925 922.89819336]
[63.48599625 922.08068848]
[48.56396103 920.52331543]
[33.73719788 918.22991943]
[19.04199600 915.20611572]
[4.51431417 911.45922852]
[-9.81029510 906.99853516]
[-23.89677620 901.83483887]
[-37.71065903 895.98089600]
[-51.21813965 889.45092773]
[-64.38615417 882.26092529]
[-77.18249512 874.42852783]
[-89.57582855 865.97290039]
[-101.53583527 856.91473389]
[-113.03324890 847.27618408]
[-124.03993225 837.08081055]
[-134.52894592 826.35357666]
[-144.47462463 815.12078857]
[-153.85263062 803.40985107]
[-162.64001465 791.24951172]
[-170.81526184 778.66943359]
[-178.35838318 765.70050049]
[-185.25090027 752.37432861]
[-191.47596741 738.72369385]
[-197.01832581 724.78186035]
[-201.86444092 710.58300781]
[-206.00244141 696.16180420]
[-209.42218018 681.55371094]
[-212.11531067 666.79431152]
[-214.07525635 651.91979980]
[-215.29718018 636.96655273]
[-215.77812195 621.97119141]
[-215.51690674 606.97039795]
[-214.51416016 592.00085449]
[-212.77232361 577.09918213]
[-210.29570007 562.30194092]
[-207.09031677 547.64526367]
[-203.16401672 533.16503906]
[-198.52642822 518.89672852]
[-193.18888855 504.87521362]
[-187.16447449 491.13479614]
[-180.46789551 477.70913696]
[-173.11557007 464.63107300]
[-165.12548828 451.93261719]
[-156.51719666 439.64480591]
[-147.31175232 427.79779053]
[-137.53167725 416.42047119]
[-127.20094299 405.54077148]
[-116.34479523 395.18527222]
[-104.98980713 385.37930298]
[-93.16378021 376.14688110]
[-80.89563751 367.51062012]
[-68.21541595 359.49160767]
[-55.15413284 352.10949707]
[-41.74376297 345.38235474]
[-28.01711845 339.32662964]
[-14.00779152 333.95718384]
[0.24993536 329.28707886]
[14.72117043 325.32781982]
[29.37049866 322.08901978]
[44.16207123 319.57867432]
[59.05969238 317.80291748]
[74.02690887 316.76605225]
[89.02707672 316.47064209]
[89.47368622 301.47729492]
[89.92028809 286.48394775]
[90.36689758 271.49060059]
[90.81350708 256.49725342]
[91.26010895 241.50390625]
[91.70671844 226.51055908]
[77.24788666 216.37083435]
[71.72154999 199.43240356]
[77.51991272 182.41891479]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[89.88853455 83.27684021]
[89.32792664 78.66825867]
[90.50861359 74.76684570]
[92.84993744 72.13045502]
[93.51972198 57.14541626]
[94.18950653 42.16037750]
[94.85929108 27.17534065]
[94.63596344 12.17700291]
[93.52031708 -2.78145099]
[92.40467072 -17.73990440]
[91.28901672 -32.69835663]
[90.17337036 -47.65681076]
[89.05772400 -62.61526489]
[74.31845093 -65.96868134]
[61.22327805 -73.51903534]
[50.93661118 -84.59494781]
[44.37313461 -98.21156311]
[42.11646652 -113.15809631]
[44.36727142 -128.10551453]
[50.92540741 -141.72470093]
[61.20772934 -152.80464172]
[74.29994202 -160.36013794]
[89.03789520 -163.71932983]
[104.11109161 -162.58354187]
[118.17924500 -157.05375671]
[129.99142456 -147.62168884]
[138.49728394 -135.12602234]
[142.94050598 -120.67787170]
[142.92599487 -105.56194305]
[138.45503235 -91.12234497]
[129.92518616 -78.64303589]
[118.09491730 -69.23366547]
[104.01617432 -63.73091507]
[105.13182068 -48.77246094]
[106.24747467 -33.81400681]
[107.36312103 -18.85555267]
[108.47876740 -3.89709973]
[109.59442139 11.06135368]
[118.60233307 -0.93270797]
[132.90550232 -5.45149565]
[147.16918945 -0.80961293]
[156.07341003 11.26163197]
[156.29708862 26.25996399]
[147.75682068 38.59137726]
[133.63789368 43.65655518]
[119.20632935 39.56631851]
[109.84432983 27.84512520]
[109.17454529 42.83016205]
[108.50476074 57.81520081]
[107.83497620 72.80023956]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[118.49365997 178.15390015]
[125.87139893 188.15577698]
[128.28253174 200.27459717]
[125.32965088 212.19859314]
[117.63272858 221.67964172]
[106.70006561 226.95715332]
[106.25345612 241.95051575]
[105.80685425 256.94384766]
[105.36024475 271.93719482]
[104.91364288 286.93057251]
[104.46703339 301.92391968]
[104.02043152 316.91726685]
[118.97642517 318.10494995]
[133.85539246 320.03085327]
[148.62089539 322.69018555]
[163.23683167 326.07650757]
[177.66741943 330.18148804]
[191.87733459 334.99508667]
[205.83180237 340.50552368]
[219.49670410 346.69931030]
[232.83856201 353.56130981]
[245.82475281 361.07473755]
[258.42349243 369.22119141]
[270.60394287 377.98071289]
[282.33627319 387.33187866]
[293.59182739 397.25183105]
[304.34301758 407.71624756]
[314.56353760 418.69958496]
[324.22839355 430.17489624]
[333.31393433 442.11413574]
[341.79791260 454.48809814]
[349.65954590 467.26647949]
[356.87966919 480.41799927]
[363.44052124 493.91049194]
[369.32611084 507.71093750]
[374.52200317 521.78558350]
[379.01550293 536.09991455]
[382.79559326 550.61901855]
[385.85305786 565.30725098]
[388.18038940 580.12872314]
[389.77188110 595.04718018]
[390.62365723 610.02606201]
[390.73361206 625.02868652]
[390.10153198 640.01849365]
[388.72888184 654.95861816]
[386.61907959 669.81262207]
[383.77728271 684.54412842]
[380.21041870 699.11706543]
[375.92724609 713.49572754]
[370.93823242 727.64501953]
[365.25558472 741.53027344]
[358.89321899 755.11749268]
[351.86666870 768.37341309]
[344.19320679 781.26568604]
[335.89151001 793.76269531]
[326.98199463 805.83380127]
[317.48638916 817.44958496]
[307.42797852 828.58154297]
[296.83132935 839.20245361]
[285.72241211 849.28637695]
[274.12841797 858.80853271]
[262.07769775 867.74566650]
[249.59973145 876.07592773]
[236.72508240 883.77886963]
[223.48524475 890.83575439]
[209.91261292 897.22918701]
[196.04040527 902.94360352]
[181.90258789 907.96496582]
[167.53372192 912.28106689]
[152.96900940 915.88128662]
[138.24406433 918.75677490]
[123.39493561 920.90057373]
[108.45795441 922.30737305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[80 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
