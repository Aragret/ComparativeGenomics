%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[135.52104187 679.91986084]
[122.30551147 672.81488037]
[109.52973938 664.94659424]
[97.23775482 656.34210205]
[85.47193909 647.03100586]
[74.27284241 637.04547119]
[63.67908478 626.41992188]
[53.72717667 615.19091797]
[44.45142365 603.39727783]
[35.88380432 591.07952881]
[28.05385399 578.28021240]
[20.98856163 565.04345703]
[14.71228218 551.41485596]
[9.24665356 537.44140625]
[4.61051702 523.17126465]
[0.81985354 508.65362549]
[-2.11226940 493.93856812]
[-4.17574406 479.07678223]
[-5.36345720 464.11950684]
[-5.67131472 449.11831665]
[-5.09825516 434.12493896]
[-3.64625359 419.19100952]
[-1.32031596 404.36804199]
[1.87153983 389.70712280]
[5.91831112 375.25878906]
[10.80604744 361.07284546]
[16.51789856 347.19824219]
[23.03417778 333.68273926]
[30.33241844 320.57296753]
[38.38746262 307.91409302]
[47.17154312 295.74978638]
[56.65438080 284.12197876]
[66.80328369 273.07070923]
[77.58326721 262.63412476]
[88.95717621 252.84817505]
[100.88578796 243.74661255]
[113.32799530 235.36079407]
[126.24089813 227.71961975]
[139.57998657 220.84947205]
[133.50616455 207.13420105]
[121.27799225 198.63000488]
[122.76460266 182.87879944]
[116.69077301 169.16352844]
[110.61693573 155.44827271]
[104.54310608 141.73300171]
[98.46926880 128.01773071]
[97.70024872 142.99800110]
[92.97052002 157.23281860]
[84.62152100 169.69451904]
[73.25598145 179.48352051]
[59.69438553 185.89312744]
[44.91575623 188.46063232]
[29.98697281 187.00068665]
[15.98576164 181.61866760]
[3.92287922 172.70312500]
[-5.33084345 160.89767456]
[-11.10737228 147.05456543]
[-12.98969364 132.17314148]
[-10.84192371 117.32770538]
[-4.81910944 103.58995056]
[4.64395618 91.95163727]
[16.86412621 83.25293732]
[30.95921707 78.12181091]
[45.91168976 76.92868805]
[60.64211273 79.75968933]
[74.08708954 86.41045380]
[85.27600861 96.40085602]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[86.38268280 49.42300415]
[84.60021973 34.52928543]
[78.02677155 48.01222992]
[66.30810547 57.37561035]
[51.70692062 60.81151199]
[37.04247665 57.65650940]
[25.14624214 48.51979065]
[18.31520081 35.16550827]
[17.86831474 20.17216682]
[23.89187241 6.43474531]
[35.22281647 -3.39427567]
[49.67332458 -7.41706562]
[64.45322418 -4.85688734]
[76.70875549 3.79192924]
[84.07392883 16.86065483]
[84.96674347 1.88724887]
[85.85955811 -13.08615685]
[86.75237274 -28.05956268]
[87.64518738 -43.03296661]
[88.20339966 -58.02257919]
[88.42672729 -73.02091217]
[88.65005493 -88.01925659]
[88.87338257 -103.01759338]
[89.09671021 -118.01593018]
[78.36912537 -129.31002808]
[78.80926514 -144.51728821]
[89.64257050 -154.67480469]
[89.86589813 -169.67314148]
[76.02967072 -176.03543091]
[65.98229980 -187.47966003]
[61.46455765 -202.02304077]
[63.25917053 -217.14584351]
[71.05520630 -230.22795105]
[83.50195312 -239.00282288]
[98.44294739 -241.95014954]
[113.28955841 -238.55928040]
[125.46952820 -229.41772461]
[132.87260437 -216.10928345]
[134.21615601 -200.93975830]
[129.26741028 -186.53732300]
[118.88375854 -175.39732361]
[104.86423492 -169.44981384]
[104.64090729 -154.45147705]
[115.16697693 -143.97592163]
[115.15415192 -128.76228333]
[104.09504700 -117.79260254]
[103.87171936 -102.79426575]
[103.64839172 -87.79592896]
[103.42506409 -72.79758453]
[103.20173645 -57.79925156]
[105.38198853 -55.02817917]
[106.32836914 -51.06340408]
[105.49444580 -46.49636459]
[102.61859894 -42.14015198]
[101.72577667 -27.16674614]
[100.83296204 -12.19334126]
[99.94014740 2.78006482]
[99.04733276 17.75347137]
[99.49393463 32.74681854]
[101.27640533 47.64053726]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[112.18453217 121.94390106]
[118.25836945 135.65916443]
[124.33220673 149.37443542]
[130.40603638 163.08970642]
[136.47987366 176.80496216]
[149.14247131 186.29016113]
[147.22142029 201.06036377]
[153.29525757 214.77563477]
[167.34736633 209.51553345]
[181.68397522 205.08920288]
[196.25563049 201.51188660]
[211.01211548 198.79589844]
[225.90255737 196.95062256]
[240.87564087 195.98242188]
[255.87973022 195.89462280]
[270.86312866 196.68753052]
[285.77413940 198.35841370]
[300.56140137 200.90150452]
[315.17391968 204.30804443]
[329.56134033 208.56629944]
[343.67407227 213.66157532]
[357.46340942 219.57630920]
[370.88186646 226.29013062]
[383.88320923 233.77986145]
[396.42254639 242.01971436]
[408.45672607 250.98126221]
[419.94421387 260.63363647]
[430.84542847 270.94351196]
[441.12277222 281.87542725]
[450.74084473 293.39163208]
[459.66647339 305.45245361]
[467.86889648 318.01632690]
[475.31985474 331.03991699]
[481.99362183 344.47833252]
[487.86724854 358.28527832]
[492.92041016 372.41311646]
[497.13574219 386.81314087]
[500.49871826 401.43576050]
[502.99771118 416.23056030]
[504.62414551 431.14648438]
[505.37237549 446.13217163]
[505.23983765 461.13592529]
[504.22702026 476.10604858]
[502.33734131 490.99093628]
[499.57739258 505.73925781]
[495.95663452 520.30017090]
[491.48757935 534.62353516]
[486.18563843 548.65991211]
[480.06903076 562.36090088]
[473.15890503 575.67932129]
[465.47906494 588.56927490]
[457.05596924 600.98626709]
[447.91870117 612.88757324]
[438.09869385 624.23205566]
[427.62982178 634.98071289]
[416.54818726 645.09643555]
[404.89196777 654.54437256]
[392.70138550 663.29193115]
[380.01843262 671.30902100]
[366.88684082 678.56793213]
[353.35186768 685.04364014]
[339.46017456 690.71386719]
[325.25967407 695.55902100]
[310.79925537 699.56250000]
[296.12884521 702.71038818]
[281.29898071 704.99182129]
[266.36074829 706.39904785]
[251.36570740 706.92718506]
[236.36549377 706.57434082]
[221.41186523 705.34179688]
[206.55633545 703.23376465]
[191.85012817 700.25750732]
[177.34393311 696.42333984]
[163.08776855 691.74444580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 144]
[40 143]
[42 141]
[43 140]
[44 139]
[45 138]
[46 137]
[68 136]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
