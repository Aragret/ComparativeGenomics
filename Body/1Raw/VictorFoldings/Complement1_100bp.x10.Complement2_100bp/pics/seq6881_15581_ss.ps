%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[24.47538185 694.51300049]
[9.85915852 697.91973877]
[-4.98153162 700.15447998]
[-19.95285797 701.20306396]
[-34.96016693 701.05883789]
[-49.90857315 699.72271729]
[-64.70356750 697.20312500]
[-79.25161743 693.51605225]
[-93.46073151 688.68481445]
[-107.24108124 682.73986816]
[-120.50554657 675.71893311]
[-133.17025757 667.66625977]
[-145.15513611 658.63287354]
[-156.38442993 648.67578125]
[-166.78710938 637.85803223]
[-176.29743958 626.24792480]
[-184.85527039 613.91894531]
[-192.40650940 600.94903564]
[-198.90341187 587.42016602]
[-204.30488586 573.41784668]
[-208.57679749 559.03070068]
[-211.69213867 544.34960938]
[-213.63119507 529.46740723]
[-214.38172913 514.47814941]
[-213.93899536 499.47668457]
[-212.30577087 484.55783081]
[-209.49240112 469.81588745]
[-205.51666260 455.34405518]
[-200.40368652 441.23385620]
[-194.18582153 427.57449341]
[-186.90235901 414.45233154]
[-178.59936523 401.95031738]
[-169.32931519 390.14749146]
[-159.15083313 379.11853027]
[-148.12826538 368.93307495]
[-136.33131409 359.65560913]
[-123.83453369 351.34472656]
[-110.71695709 344.05297852]
[-97.06152344 337.82650757]
[-82.95455170 332.70465088]
[-68.48523712 328.71978760]
[-53.74507141 325.89709473]
[-38.82723236 324.25448608]
[-23.82604599 323.80227661]
[-8.83635426 324.54333496]
[6.04707432 326.47302246]
[9.15118408 311.79772949]
[12.25529480 297.12243652]
[15.35940456 282.44711304]
[18.46351433 267.77182007]
[21.56762505 253.09651184]
[24.67173576 238.42121887]
[14.97389412 249.86463928]
[2.11965752 257.59564209]
[-12.53443623 260.79840088]
[-27.44190598 259.13485718]
[-41.02952957 252.78060913]
[-51.86337662 242.40621948]
[-58.80012131 229.10653687]
[-61.10771561 214.28511047]
[-58.54262924 199.50605774]
[-51.37556458 186.32905579]
[-40.36288071 176.14471436]
[-26.66677094 170.02781677]
[-11.73261738 168.62387085]
[2.86354280 172.08105469]
[15.58134079 180.03451538]
[25.07863808 191.64491272]
[30.35316277 205.68698120]
[30.84825516 220.67898560]
[31.01253319 213.29016113]
[37.72919464 207.09950256]
[44.60860443 193.77006531]
[51.48801804 180.44064331]
[58.26800919 167.06036377]
[64.94820404 153.62998962]
[71.62840271 140.19961548]
[59.59613800 128.07997131]
[52.43146896 112.57743073]
[50.99754715 95.55964661]
[55.46712494 79.07680511]
[65.30173492 65.11465454]
[79.31656647 55.35526276]
[95.82319641 50.97438049]
[112.83303070 52.49978638]
[118.90686035 38.78451920]
[124.98069763 25.06925201]
[131.05453491 11.35398579]
[135.56216431 -2.95270109]
[138.44743347 -17.67259216]
[141.33270264 -32.39248276]
[144.21797180 -47.11237717]
[142.44009399 -53.48031616]
[143.92250061 -58.96661758]
[147.41452026 -62.22466278]
[150.73677063 -76.85212708]
[154.05903625 -91.47958374]
[149.57041931 -106.65070343]
[159.93444824 -117.34819031]
[146.30595398 -123.75742340]
[134.37416077 -132.94689941]
[124.69712830 -144.48680115]
[117.72749329 -157.83738708]
[113.79121399 -172.37422180]
[113.07241058 -187.41740417]
[115.60469055 -202.26333618]
[121.26963043 -216.21763611]
[129.80226135 -228.62765503]
[140.80349731 -238.91291809]
[153.75878906 -246.59240723]
[168.06219482 -251.30691528]
[183.04472351 -252.83592224]
[198.00561523 -251.10795593]
[212.24511719 -246.20379639]
[225.09721375 -238.35284424]
[235.96081543 -227.92228699]
[244.32777405 -215.39999390]
[249.80679321 -201.37164307]
[252.14157104 -186.49337769]
[251.22293091 -171.46107483]
[247.09382629 -156.97781372]
[239.94740295 -143.72102356]
[230.11788940 -132.31072998]
[218.06503296 -123.28062439]
[204.35256958 -117.05306244]
[189.62187195 -113.91930389]
[174.56190491 -114.02593231]
[179.28814697 -99.90106964]
[168.68649292 -88.15732574]
[165.36424255 -73.52986908]
[162.04197693 -58.90240479]
[158.93786621 -44.22710419]
[156.05259705 -29.50721169]
[153.16732788 -14.78732014]
[150.28204346 -0.06742857]
[160.07362366 -11.43075466]
[173.27444458 -18.55384064]
[188.14772034 -20.49952316]
[202.73661804 -17.01181412]
[215.12170410 -8.54958153]
[223.67353821 3.77382278]
[227.26693726 18.33704376]
[225.42916870 33.22403717]
[218.40200806 46.47616577]
[207.10998535 56.34988022]
[193.03877258 61.54612732]
[178.03967285 61.38124847]
[164.08609009 55.87694168]
[153.01383972 45.75738525]
[146.27967834 32.35398483]
[144.76979065 17.42782021]
[138.69596863 31.14308548]
[132.62213135 44.85835266]
[126.54829407 58.57361984]
[136.36686707 66.85776520]
[143.70639038 77.40115356]
[148.06654358 89.48505402]
[149.15010071 102.28573608]
[146.88319397 114.93060303]
[141.42036438 126.55768585]
[133.13398743 136.37437439]
[122.58894348 143.71151733]
[110.50405884 148.06892395]
[97.70313263 149.14958191]
[85.05877686 146.87980652]
[78.37857819 160.31018066]
[71.69838715 173.74057007]
[70.67852783 182.81788635]
[64.81744385 187.32005310]
[57.93803406 200.64949036]
[51.05862427 213.97891235]
[44.27862930 227.35919189]
[39.34703827 241.52532959]
[36.24292755 256.20062256]
[33.13881683 270.87591553]
[30.03470612 285.55123901]
[26.93059731 300.22653198]
[23.82648659 314.90182495]
[20.72237587 329.57714844]
[35.11242676 333.83935547]
[49.11834717 339.23141479]
[62.65159225 345.71920776]
[75.62659454 353.26171875]
[87.96132660 361.81124878]
[99.57779694 371.31375122]
[110.40256500 381.70916748]
[120.36718750 392.93173218]
[129.40867615 404.91055298]
[137.46984863 417.56982422]
[144.49975586 430.82955933]
[150.45393372 444.60592651]
[155.29476929 458.81176758]
[158.99162292 473.35733032]
[161.52113342 488.15063477]
[162.86730957 503.09814453]
[163.02165222 518.10534668]
[161.98315430 533.07739258]
[159.75842285 547.91955566]
[156.36148071 562.53808594]
[151.81384277 576.84051514]
[146.14424133 590.73638916]
[139.38851929 604.13787842]
[131.58938599 616.96026611]
[122.79617310 629.12249756]
[113.06446075 640.54760742]
[102.45577240 651.16345215]
[91.03718567 660.90283203]
[78.88089752 669.70428467]
[66.06375122 677.51202393]
[52.66679764 684.27673340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[70 172]
[72 171]
[73 170]
[74 169]
[75 167]
[76 166]
[77 165]
[85 154]
[86 153]
[87 152]
[88 151]
[89 135]
[90 134]
[91 133]
[92 132]
[95 131]
[96 130]
[97 129]
[99 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
