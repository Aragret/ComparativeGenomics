%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[40.99171829 590.74548340]
[37.13126755 605.27636719]
[30.93162346 618.97363281]
[22.56191635 631.46350098]
[12.25047779 642.40539551]
[0.27861217 651.50067139]
[-13.02707863 658.50128174]
[-27.30360794 663.21618652]
[-42.16149902 665.51684570]
[-57.19541931 665.34039307]
[-71.99523163 662.69177246]
[-86.15718079 657.64306641]
[-99.29492950 650.33221436]
[-111.05007172 640.95843506]
[-121.10189819 629.77764893]
[-129.17620850 617.09478760]
[-135.05271912 603.25585938]
[-138.57112122 588.63836670]
[-139.63543701 573.64111328]
[-138.21661377 558.67327881]
[-134.35336304 544.14312744]
[-128.15107727 530.44708252]
[-119.77896118 517.95874023]
[-109.46541595 507.01889038]
[-97.49179840 497.92593384]
[-84.18475342 490.92788696]
[-69.90731812 486.21569824]
[-55.04898453 483.91790771]
[-40.01509857 484.09722900]
[-25.21579933 486.74874878]
[-20.17888260 472.61972046]
[-20.89379120 465.26373291]
[-14.96036434 458.31878662]
[-9.71364689 444.26632690]
[-4.46692848 430.21383667]
[0.77978992 416.16137695]
[5.71138334 401.99523926]
[10.32539272 387.72250366]
[6.87814808 373.23229980]
[18.48525047 362.48123169]
[23.09926033 348.20849609]
[27.71327019 333.93576050]
[32.32727814 319.66302490]
[27.10054398 308.75396729]
[30.82774162 296.82534790]
[42.03136826 290.43460083]
[46.85736847 276.23214722]
[51.68336487 262.02969360]
[56.50936127 247.82723999]
[61.33536148 233.62478638]
[66.16136169 219.42233276]
[70.13345337 204.95780945]
[73.23756409 190.28250122]
[76.34167480 175.60720825]
[68.02715302 163.30255127]
[70.96611023 148.37548828]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[93.90196991 77.46512604]
[98.44886780 71.63867188]
[101.77112579 57.01121140]
[104.98439789 42.35942459]
[108.08850861 27.68412209]
[101.97608948 10.31403828]
[114.20600891 -2.27150631]
[117.09127808 -16.99139786]
[119.97655487 -31.71128845]
[122.86182404 -46.43117905]
[125.74710083 -61.15107346]
[128.63237000 -75.87096405]
[131.40798950 -90.61192322]
[134.07377625 -105.37314606]
[135.18942261 -120.33159637]
[134.74282837 -135.32495117]
[134.29621887 -150.31829834]
[133.84960938 -165.31164551]
[133.40299988 -180.30499268]
[132.95639038 -195.29833984]
[132.50979614 -210.29170227]
[132.06318665 -225.28504944]
[131.28186035 -240.26467896]
[130.16621399 -255.22314453]
[129.05056763 -270.18157959]
[127.93491364 -285.14004517]
[117.21686554 -300.11352539]
[125.44762421 -315.61260986]
[124.10939026 -330.55279541]
[122.77115631 -345.49298096]
[121.43292236 -360.43316650]
[106.61471558 -363.36532593]
[93.22348022 -370.35467529]
[82.34476471 -380.83468628]
[74.86048126 -393.95574951]
[71.37732697 -408.65417480]
[72.17767334 -423.73849487]
[77.19664001 -437.98583984]
[86.02736664 -450.24124146]
[97.95397186 -459.51123047]
[112.00963593 -465.04431152]
[127.05491638 -466.39196777]
[141.87016296 -463.44491577]
[155.25437927 -456.44207764]
[166.12255859 -445.95117188]
[173.59365845 -432.82260132]
[177.06204224 -418.12066650]
[176.24653625 -403.03717041]
[171.21327209 -388.79489136]
[162.37023926 -376.54837036]
[150.43431091 -367.29034424]
[136.37310791 -361.77139282]
[137.71133423 -346.83120728]
[139.04957581 -331.89102173]
[140.38780212 -316.95083618]
[149.46618652 -308.95648193]
[150.70336914 -296.52053833]
[142.89337158 -286.25570679]
[144.00901794 -271.29724121]
[145.12466431 -256.33877563]
[146.24031067 -241.38032532]
[148.65910339 -238.81481934]
[149.95541382 -234.95028687]
[149.53227234 -230.32705688]
[147.05653381 -225.73165894]
[147.50314331 -210.73829651]
[147.94975281 -195.74494934]
[148.39634705 -180.75160217]
[148.84295654 -165.75825500]
[149.28956604 -150.76490784]
[149.73617554 -135.77154541]
[150.18276978 -120.77820587]
[157.41403198 -133.92007446]
[169.07583618 -143.35417175]
[183.43824768 -147.68099976]
[198.37065125 -146.25871277]
[211.65795898 -139.29826355]
[221.32904053 -127.83222198]
[225.94926453 -113.56150055]
[224.83325195 -98.60307312]
[218.14654541 -85.17594147]
[206.88108826 -75.27192688]
[192.70803833 -70.36024475]
[177.72988892 -71.16950226]
[164.16854858 -77.57965851]
[154.03576660 -88.63980865]
[148.83499146 -102.70734406]
[146.16920471 -87.94612885]
[148.07392883 -80.80513763]
[143.35226440 -72.98568726]
[140.46699524 -58.26580048]
[137.58171082 -43.54590607]
[134.69644165 -28.82601547]
[131.81117249 -14.10612488]
[128.92590332 0.61376631]
[135.41194153 10.82444096]
[133.12863159 23.11143875]
[122.76380920 30.78823280]
[119.65969849 45.46353531]
[121.35096741 52.65807343]
[116.39858246 60.33347321]
[113.07632446 74.96092987]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[106.95885468 155.98864746]
[103.60179138 170.82727051]
[91.01697540 178.71130371]
[87.91286469 193.38661194]
[84.80875397 208.06192017]
[96.80657196 199.05900574]
[111.80256653 198.71232605]
[124.20360565 207.15119934]
[129.38439941 221.22810364]
[125.41264343 235.69271851]
[113.76971436 245.15010071]
[98.79811859 246.07287598]
[86.08190918 238.11688232]
[80.36381531 224.24832153]
[75.53781891 238.45079041]
[70.71181488 252.65324402]
[65.88581848 266.85568237]
[61.05982208 281.05813599]
[56.23382568 295.26062012]
[60.23883438 313.23394775]
[46.60001373 324.27703857]
[41.98600388 338.54977417]
[37.37199402 352.82250977]
[32.75798416 367.09524536]
[35.87520599 382.60632324]
[24.59812546 392.33651733]
[19.98411751 406.60925293]
[21.07871437 411.71307373]
[20.19454002 416.27062988]
[17.87102127 419.61972046]
[14.83226109 421.40808105]
[9.58554268 435.46057129]
[4.33882475 449.51303101]
[-0.90789336 463.56549072]
[-6.04985285 477.65664673]
[-11.08676910 491.78567505]
[2.05238771 499.09405518]
[13.80932903 508.46551514]
[23.86331558 519.64440918]
[31.94006920 532.32568359]
[37.81924820 546.16351318]
[41.34046936 560.78033447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 204]
[31 203]
[33 202]
[34 201]
[35 200]
[36 199]
[37 195]
[38 194]
[40 192]
[41 191]
[42 190]
[43 189]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[52 173]
[53 172]
[54 171]
[57 168]
[58 167]
[59 166]
[61 164]
[63 163]
[64 162]
[65 160]
[66 159]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 149]
[75 148]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 122]
[85 121]
[86 120]
[87 119]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
