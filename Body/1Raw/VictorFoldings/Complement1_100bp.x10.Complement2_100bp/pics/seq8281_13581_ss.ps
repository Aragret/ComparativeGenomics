%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[111.57529449 737.35888672]
[98.90956879 729.27203369]
[87.55632782 719.42712402]
[77.75756836 708.03405762]
[69.72216034 695.33563232]
[63.62136841 681.60253906]
[59.58523941 667.12744141]
[57.69979858 652.21899414]
[58.00523376 637.19482422]
[60.49504089 622.37530518]
[65.11614227 608.07623291]
[71.77004242 594.60241699]
[80.31491852 582.24108887]
[90.56862640 571.25567627]
[102.31260681 561.88037109]
[115.29654694 554.31494141]
[129.24368286 548.72070312]
[143.85673523 545.21691895]
[142.51850891 530.27673340]
[141.18026733 515.33654785]
[139.84204102 500.39639282]
[138.50379944 485.45620728]
[137.16557312 470.51602173]
[122.70728302 466.74200439]
[110.38949585 458.23309326]
[101.70986938 446.00042725]
[97.73170471 431.50918579]
[98.95376587 416.50329590]
[105.24778748 402.79544067]
[115.87166595 392.04809570]
[129.55688477 385.57199097]
[128.21865845 370.63180542]
[126.88042450 355.69161987]
[125.54219055 340.75143433]
[123.87065125 325.84487915]
[121.86663818 310.97933960]
[119.86261749 296.11380005]
[117.85860443 281.24829102]
[115.85459137 266.38275146]
[113.85057831 251.51722717]
[111.84656525 236.65170288]
[102.47825623 225.07223511]
[108.30247498 210.36206055]
[106.29846191 195.49653625]
[104.29444885 180.63101196]
[92.83531189 167.33984375]
[99.97078705 150.36436462]
[97.74566650 135.53031921]
[88.20599365 124.09162903]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[86.58361816 64.88076782]
[84.13788605 50.08149338]
[81.25261688 35.36160278]
[77.93035889 20.73414230]
[67.45237732 13.21251678]
[64.98639679 0.96087646]
[71.31969452 -9.34523392]
[68.21558380 -24.02053642]
[65.11147308 -38.69583893]
[50.06371307 -39.89785004]
[35.97857666 -45.28590775]
[23.99450111 -54.41536713]
[15.07753086 -66.53955078]
[9.94343185 -80.67082977]
[9.00024986 -95.66104889]
[12.31589222 -110.29481506]
[19.61331558 -123.38807678]
[30.29365158 -133.88386536]
[43.48534775 -140.93769836]
[33.05971527 -152.83798218]
[37.99573898 -166.89091492]
[34.89162827 -181.56622314]
[31.78751945 -196.24151611]
[18.82489777 -204.87911987]
[15.88594437 -219.80618286]
[24.20046616 -232.11083984]
[21.09635544 -246.78613281]
[17.99224472 -261.46142578]
[7.56661367 -273.36172485]
[12.50263786 -287.41464233]
[9.39852810 -302.08996582]
[-5.64977455 -301.90335083]
[-20.44528008 -304.65637207]
[-34.41928864 -310.24325562]
[-47.03467941 -318.44924927]
[-57.80654526 -328.95892334]
[-66.32084656 -341.36831665]
[-72.25032043 -355.20043945]
[-75.36705017 -369.92361450]
[-75.55123901 -384.97195435]
[-72.79579926 -399.76699829]
[-67.20664978 -413.74011230]
[-58.99862671 -426.35415649]
[-48.48721313 -437.12432861]
[-36.07645035 -445.63662720]
[-22.24337006 -451.56387329]
[-7.51967812 -454.67822266]
[7.52868414 -454.85995483]
[22.32329750 -452.10214233]
[36.29549789 -446.51071167]
[48.90822983 -438.30065918]
[59.67669296 -427.78750610]
[68.18698120 -415.37536621]
[74.11197662 -401.54132080]
[77.22393799 -386.81710815]
[77.40325165 -371.76873779]
[74.64302826 -356.97454834]
[69.04935455 -343.00326538]
[60.83724594 -330.39187622]
[50.32234955 -319.62509155]
[37.90882874 -311.11682129]
[24.07382965 -305.19406128]
[27.17794037 -290.51876831]
[37.38154602 -279.66815186]
[32.66754913 -264.56555176]
[35.77165604 -249.89024353]
[38.87576675 -235.21495056]
[51.46058655 -227.33091736]
[54.81764984 -212.49229431]
[46.46282196 -199.34562683]
[49.56693268 -184.67033386]
[52.67104340 -169.99502563]
[62.87464523 -159.14440918]
[58.16064835 -144.04180908]
[73.07874298 -142.93374634]
[87.09429932 -137.66160583]
[99.06845856 -128.64465332]
[108.02565765 -116.60683441]
[113.23313141 -102.51860046]
[114.26083374 -87.51873779]
[111.01694489 -72.82229614]
[103.75601196 -59.62214661]
[93.05899811 -48.99218369]
[79.78678131 -41.79994965]
[82.89089203 -27.12464714]
[85.99499512 -12.44934368]
[98.41094208 -0.04727979]
[92.55781555 17.41188431]
[95.88007355 32.03934479]
[98.17743683 33.64566422]
[99.97693634 36.25878906]
[100.89191437 39.69364166]
[100.60977173 43.62873077]
[98.93715668 47.63576889]
[101.38288879 62.43503952]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[118.34342957 119.57099152]
[112.57971191 133.30520630]
[114.80483246 148.13925171]
[124.69435120 156.41935730]
[126.24226379 168.82048035]
[119.15997314 178.62699890]
[121.16399384 193.49252319]
[123.16800690 208.35804749]
[132.67965698 221.00079346]
[126.71209717 234.64768982]
[128.71611023 249.51321411]
[130.72012329 264.37875366]
[132.72413635 279.24426270]
[134.72814941 294.10980225]
[136.73216248 308.97531128]
[138.73617554 323.84085083]
[141.92805481 327.97109985]
[143.09934998 332.46347046]
[142.45048523 336.48764038]
[140.48237610 339.41320801]
[141.82060242 354.35339355]
[143.15884399 369.29357910]
[144.49707031 384.23376465]
[159.11538696 388.17465210]
[171.48014832 396.86282349]
[180.11013794 409.23388672]
[183.97958374 423.78372192]
[182.64012146 438.75125122]
[176.27265930 452.33175659]
[165.66316223 462.89431763]
[152.10574341 469.17779541]
[153.44398499 484.11798096]
[154.78222656 499.05816650]
[156.12045288 513.99835205]
[157.45869446 528.93853760]
[158.79692078 543.87872314]
[173.80004883 544.72967529]
[188.51936340 547.75616455]
[202.64112854 552.89361572]
[215.86434937 560.03259277]
[227.90715027 569.02081299]
[238.51284790 579.66680908]
[247.45538330 591.74359131]
[254.54415894 604.99377441]
[259.62805176 619.13494873]
[262.59872437 633.86560059]
[263.39282227 648.87182617]
[261.99343872 663.83380127]
[258.43041992 678.43249512]
[252.77967834 692.35681152]
[245.16168213 705.30999756]
[235.73880005 717.01586914]
[224.71188354 727.22491455]
[212.31597900 735.71960449]
[198.81529236 742.31878662]
[184.49760437 746.88183594]
[169.66809082 749.31152344]
[154.64283752 749.55603027]
[139.74212646 747.61010742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[31 174]
[32 173]
[33 172]
[34 171]
[35 167]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[43 159]
[44 158]
[45 157]
[47 154]
[48 153]
[50 151]
[51 149]
[52 148]
[53 147]
[54 146]
[55 141]
[56 140]
[59 138]
[60 137]
[61 136]
[71 126]
[73 124]
[74 123]
[75 122]
[78 119]
[79 118]
[80 117]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
