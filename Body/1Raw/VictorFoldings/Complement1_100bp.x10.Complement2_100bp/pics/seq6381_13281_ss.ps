%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[134.61116028 900.66345215]
[119.71372223 898.89495850]
[104.89958191 896.52801514]
[90.19275665 893.56652832]
[75.61710358 890.01519775]
[61.19627380 885.87988281]
[46.95364761 881.16729736]
[32.91233063 875.88500977]
[19.09510040 870.04156494]
[5.52436590 863.64654541]
[-7.77786112 856.71026611]
[-20.79000473 849.24401855]
[-33.49095535 841.25982666]
[-45.86011887 832.77069092]
[-57.87742615 823.79040527]
[-69.52339172 814.33355713]
[-80.77911377 804.41540527]
[-91.62635040 794.05206299]
[-102.04749298 783.26031494]
[-112.02565002 772.05773926]
[-121.54463196 760.46252441]
[-130.58900452 748.49334717]
[-139.14408875 736.16973877]
[-147.19599915 723.51159668]
[-154.73170471 710.53955078]
[-161.73895264 697.27453613]
[-168.20640564 683.73822021]
[-174.12355042 669.95239258]
[-179.48078918 655.93951416]
[-184.26945496 641.72222900]
[-188.48176575 627.32373047]
[-192.11088562 612.76727295]
[-195.15092468 598.07647705]
[-197.59696960 583.27514648]
[-199.44503784 568.38739014]
[-200.69212341 553.43725586]
[-201.33622742 538.44909668]
[-201.37629700 523.44708252]
[-200.81227112 508.45565796]
[-199.64505005 493.49908447]
[-197.87654114 478.60165405]
[-195.50959778 463.78750610]
[-192.54806519 449.08068848]
[-188.99676514 434.50503540]
[-184.86143494 420.08422852]
[-180.14878845 405.84161377]
[-174.86647034 391.80029297]
[-169.02304077 377.98306274]
[-162.62799072 364.41235352]
[-155.69169617 351.11013794]
[-148.22540283 338.09799194]
[-140.24121094 325.39706421]
[-131.75207520 313.02789307]
[-122.77178192 301.01058960]
[-113.31487274 289.36465454]
[-103.39669800 278.10894775]
[-93.03334808 267.26171875]
[-82.24163055 256.84060669]
[-71.03903961 246.86245728]
[-59.44376373 237.34349060]
[-47.47459793 228.29913330]
[-35.15095901 219.74406433]
[-22.49283600 211.69216919]
[-9.52076244 204.15647888]
[3.74422336 197.14924622]
[17.28060341 190.68182373]
[31.06642342 184.76469421]
[45.07932281 179.40747070]
[59.29656982 174.61882019]
[73.69510651 170.40653992]
[88.25157928 166.77743530]
[102.94237518 163.73741150]
[100.49665070 148.93814087]
[90.78772736 137.64274597]
[96.17138672 122.76569366]
[93.72566223 107.96642303]
[89.40879822 101.15927124]
[91.35540009 92.92874146]
[89.13027954 78.09469604]
[86.90516663 63.26065445]
[84.68004608 48.42660904]
[82.34455872 33.60954285]
[79.89883423 18.81027222]
[77.45310974 4.01100111]
[62.41184998 3.61468172]
[47.71746826 0.37868470]
[33.90115738 -5.58001041]
[21.46236610 -14.04600048]
[10.85075092 -24.71324539]
[2.44991398 -37.19613266]
[-3.43645978 -51.04340744]
[-6.59558201 -65.75450897]
[-6.91325140 -80.79763031]
[-4.37798548 -95.62898254]
[0.91856831 -109.71240997]
[8.78494263 -122.53881836]
[18.93677330 -133.64453125]
[31.00707626 -142.62808228]
[44.55952072 -149.16473389]
[59.10419083 -153.01817322]
[74.11531067 -154.04911804]
[89.05023193 -152.22029114]
[103.36907196 -147.59780884]
[116.55420685 -140.34877014]
[128.12901306 -130.73521423]
[137.67504883 -119.10466766]
[144.84725952 -105.87757111]
[149.38635254 -91.53208160]
[151.12825012 -76.58676910]
[150.00997925 -61.58190536]
[146.07196045 -47.05990219]
[139.45657349 -33.54572296]
[130.40293884 -21.52789497]
[119.23834229 -11.44085503]
[106.36638641 -3.64924526]
[92.25238037 1.56527388]
[94.69810486 16.36454391]
[97.14382935 31.16381645]
[101.33586884 37.25057602]
[99.51409149 46.20149231]
[101.73921204 61.03553772]
[103.96432495 75.86958313]
[106.18944550 90.70362854]
[108.52493286 105.52069092]
[110.97065735 120.31996155]
[120.85451508 132.67390442]
[115.29592133 146.49241638]
[117.74164581 161.29168701]
[132.62940979 159.44355774]
[147.57952881 158.19639587]
[162.56773376 157.55223083]
[177.56971741 157.51210022]
[192.56115723 158.07608032]
[207.51771545 159.24324036]
[222.41516113 161.01168823]
[237.22930908 163.37857056]
[251.93614197 166.34002686]
[266.51181030 169.89128113]
[280.93264771 174.02655029]
[295.17529297 178.73913574]
[309.21661377 184.02140808]
[323.03387451 189.86476135]
[336.60461426 196.25975037]
[349.90686035 203.19599915]
[362.91903687 210.66224670]
[375.61999512 218.64637756]
[387.98919678 227.13546753]
[400.00653076 236.11570740]
[411.65249634 245.57257080]
[422.90826416 255.49069214]
[433.75552368 265.85400391]
[444.17669678 276.64569092]
[454.15487671 287.84823608]
[463.67388916 299.44348145]
[472.71829224 311.41259766]
[481.27340698 323.73620605]
[489.32537842 336.39428711]
[496.86111450 349.36633301]
[503.86840820 362.63128662]
[510.33587646 376.16763306]
[516.25305176 389.95343018]
[521.61035156 403.96630859]
[526.39904785 418.18353271]
[530.61138916 432.58206177]
[534.24053955 447.13851929]
[537.28063965 461.82931519]
[539.72668457 476.63058472]
[541.57482910 491.51834106]
[542.82196045 506.46847534]
[543.46612549 521.45666504]
[543.50622559 536.45867920]
[542.94219971 551.45007324]
[541.77502441 566.40667725]
[540.00659180 581.30407715]
[537.63964844 596.11822510]
[534.67816162 610.82507324]
[531.12689209 625.40075684]
[526.99163818 639.82159424]
[522.27899170 654.06420898]
[516.99676514 668.10552979]
[511.15335083 681.92279053]
[504.75836182 695.49353027]
[497.82208252 708.79571533]
[490.35583496 721.80792236]
[482.37167358 734.50885010]
[473.88256836 746.87805176]
[464.90231323 758.89538574]
[455.44543457 770.54132080]
[445.52728271 781.79705811]
[435.16397095 792.64434814]
[424.37228394 803.06549072]
[413.16970825 813.04364014]
[401.57446289 822.56262207]
[389.60531616 831.60705566]
[377.28170776 840.16210938]
[364.62359619 848.21405029]
[351.65155029 855.74981689]
[338.38659668 862.75708008]
[324.85021973 869.22454834]
[311.06442261 875.14166260]
[297.05154419 880.49896240]
[282.83428955 885.28765869]
[268.43576050 889.49993896]
[253.87931824 893.12908936]
[239.18852234 896.16918945]
[224.38723755 898.61523438]
[209.49946594 900.46331787]
[194.54936218 901.71044922]
[179.56114197 902.35455322]
[164.55915833 902.39465332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 128]
[73 127]
[75 125]
[76 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 118]
[83 117]
[84 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
