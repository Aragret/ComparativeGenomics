%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[106.27691650 383.34619141]
[100.27453613 369.59320068]
[95.21430969 355.46636963]
[91.11933899 341.03018188]
[88.00829315 326.35043335]
[85.89537048 311.49417114]
[84.79022217 296.52917480]
[84.69787598 281.52368164]
[85.61876678 266.54620361]
[87.54868317 251.66506958]
[90.47882080 236.94816589]
[94.39582062 222.46266174]
[99.28179169 208.27462769]
[105.11445618 194.44882202]
[111.86719513 181.04830933]
[119.50919342 168.13426208]
[128.00558472 155.76557922]
[137.31761169 143.99871826]
[126.21037292 133.91757202]
[115.10314178 123.83643341]
[103.99590302 113.75529480]
[90.37322235 110.60662842]
[85.92295837 97.35193634]
[74.81571960 87.27079773]
[63.70848846 77.18965912]
[63.35030746 92.18538666]
[52.58906937 102.63505554]
[37.58929443 102.55263519]
[26.94354057 91.98533630]
[26.75017357 76.98657990]
[37.11996841 66.14834595]
[52.11174011 65.67892456]
[41.94819641 54.64704895]
[31.78464699 43.61517334]
[21.62110138 32.58329391]
[9.91688538 41.97414398]
[-2.40090179 50.54437637]
[-15.27482891 58.25402832]
[-28.64487076 65.06716156]
[-42.44869232 70.95199585]
[-56.62192535 75.88110352]
[-71.09849548 79.83149719]
[-85.81090546 82.78476715]
[-100.69055176 84.72713470]
[-115.66806793 85.64955139]
[-130.67361450 85.54770660]
[-145.63722229 84.42208099]
[-160.48913574 82.27792358]
[-175.16011047 79.12522888]
[-189.58172607 74.97869110]
[-203.68675232 69.85765839]
[-217.40942383 63.78599548]
[-230.68574524 56.79201889]
[-243.45384216 48.90832901]
[-255.65417480 40.17169189]
[-267.22982788 30.62283897]
[-278.12689209 20.30629158]
[-288.29449463 9.27015018]
[-297.68527222 -2.43412781]
[-306.25540161 -14.75197220]
[-313.96499634 -27.62595177]
[-320.77801514 -40.99604034]
[-326.66275024 -54.79989624]
[-331.59176636 -68.97316742]
[-335.54208374 -83.44976807]
[-338.49523926 -98.16219330]
[-340.43750000 -113.04185486]
[-341.35983276 -128.01937866]
[-341.25787354 -143.02491760]
[-340.13217163 -157.98852539]
[-337.98788452 -172.84042358]
[-334.83511353 -187.51136780]
[-330.68847656 -201.93295288]
[-325.56735229 -216.03794861]
[-319.49560547 -229.76057434]
[-312.50152588 -243.03686523]
[-304.61776733 -255.80490112]
[-295.88104248 -268.00515747]
[-286.33209229 -279.58078003]
[-276.01547241 -290.47775269]
[-264.97927856 -300.64529419]
[-253.27493286 -310.03598022]
[-240.95703125 -318.60604858]
[-228.08299255 -326.31552124]
[-214.71286011 -333.12847900]
[-200.90896606 -339.01312256]
[-186.73565674 -343.94204712]
[-172.25903320 -347.89224243]
[-157.54658508 -350.84530640]
[-142.66691589 -352.78747559]
[-127.68939209 -353.70968628]
[-112.68384552 -353.60766602]
[-97.72025299 -352.48184204]
[-82.86836243 -350.33746338]
[-68.19744110 -347.18457031]
[-53.77587891 -343.03784180]
[-39.67092514 -337.91662598]
[-25.94833565 -331.84478760]
[-12.67209721 -324.85061646]
[0.09589110 -316.96676636]
[12.29609776 -308.22998047]
[23.87163925 -298.68096924]
[34.76854706 -288.36425781]
[44.93601227 -277.32800293]
[54.32662582 -265.62359619]
[62.89661026 -253.30561829]
[70.60600281 -240.43154907]
[77.41886139 -227.06135559]
[83.30342102 -213.25743103]
[88.23224640 -199.08409119]
[92.18235016 -184.60743713]
[95.13532257 -169.89497375]
[97.07739258 -155.01528931]
[97.99950409 -140.03775024]
[97.89735413 -125.03221130]
[96.77143097 -110.06861877]
[94.62697601 -95.21675110]
[91.47398376 -80.54584503]
[87.32716370 -66.12431335]
[82.20584106 -52.01939011]
[76.13390350 -38.29684067]
[69.13965607 -25.02065086]
[61.25571442 -12.25271511]
[52.51883316 -0.05256734]
[42.96974564 11.52291107]
[32.65297699 22.41974831]
[42.81652451 33.45162582]
[52.98007202 44.48350143]
[63.14361954 55.51538086]
[73.78962708 66.08242798]
[84.89685822 76.16356659]
[96.00409698 86.24470520]
[109.62677765 89.39337158]
[114.07704163 102.64806366]
[125.18428040 112.72920227]
[136.29150391 122.81034088]
[147.39874268 132.89147949]
[158.21075439 122.48602295]
[169.70056152 112.83422852]
[181.81576538 103.98013306]
[194.50105286 95.96413422]
[207.69856262 88.82279968]
[221.34808350 82.58872986]
[235.38731384 77.29035950]
[249.75222778 72.95186615]
[264.37725830 69.59304810]
[279.19564819 67.22922516]
[294.13983154 65.87118530]
[309.14160156 65.52513123]
[324.13253784 66.19263458]
[339.04415894 67.87065125]
[353.80850220 70.55152130]
[368.35818481 74.22302246]
[382.62680054 78.86839294]
[396.54925537 84.46643829]
[410.06204224 90.99162292]
[423.10345459 98.41416931]
[435.61404419 106.70020294]
[447.53668213 115.81192780]
[458.81698608 125.70775604]
[469.40350342 136.34254456]
[479.24789429 147.66777039]
[488.30529785 159.63175964]
[496.53430176 172.17990112]
[503.89743042 185.25497437]
[510.36105347 198.79728699]
[515.89569092 212.74507141]
[520.47607422 227.03468323]
[524.08135986 241.60090637]
[526.69500732 256.37728882]
[528.30517578 271.29641724]
[528.90447998 286.29022217]
[528.49011230 301.29025269]
[527.06414795 316.22811890]
[524.63287354 331.03561401]
[521.20758057 345.64520264]
[516.80377197 359.99020386]
[511.44155884 374.00518799]
[505.14544678 387.62622070]
[497.94412231 400.79110718]
[489.87048340 413.43978882]
[480.96136475 425.51455688]
[471.25738525 436.96032715]
[460.80285645 447.72488403]
[449.64544678 457.75909424]
[437.83609009 467.01715088]
[425.42864990 475.45687866]
[412.47976685 483.03970337]
[399.04849243 489.73104858]
[385.19613647 495.50036621]
[370.98590088 500.32135010]
[356.48260498 504.17202759]
[341.75244141 507.03479004]
[326.86264038 508.89660645]
[311.88110352 509.74893188]
[296.87619019 509.58792114]
[281.91641235 508.41430664]
[267.06997681 506.23342896]
[252.40463257 503.05523682]
[237.98730469 498.89422607]
[223.88378906 493.76940918]
[210.15843201 487.70416260]
[196.87384033 480.72613525]
[184.09065247 472.86721802]
[171.86717224 464.16320801]
[160.25920105 454.65383911]
[149.31968689 444.38253784]
[139.09854126 433.39611816]
[129.64239502 421.74475098]
[120.99442291 409.48156738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 137]
[19 136]
[20 135]
[21 134]
[23 132]
[24 131]
[25 130]
[32 129]
[33 128]
[34 127]
[35 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
