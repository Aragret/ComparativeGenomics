%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[246.65458679 620.72991943]
[250.84039307 606.29870605]
[257.03744507 592.61010742]
[265.11956787 579.94281006]
[274.92224121 568.55474854]
[286.24588013 558.67773438]
[298.85998535 550.51281738]
[292.58261108 536.88946533]
[286.30526733 523.26617432]
[280.02789307 509.64285278]
[273.75051880 496.01953125]
[267.47317505 482.39620972]
[260.99368286 468.86785889]
[254.31347656 455.43750000]
[247.63328552 442.00711060]
[240.95309448 428.57675171]
[237.74476624 427.11422729]
[235.08543396 424.02502441]
[233.73191833 419.58416748]
[234.28959656 414.39416504]
[228.21575928 400.67892456]
[222.14192200 386.96365356]
[216.06809998 373.24838257]
[209.99426270 359.53311157]
[195.21488953 361.88250732]
[180.31956482 360.32492065]
[166.32426453 354.96057129]
[154.18516541 346.14953613]
[144.73327637 334.48751831]
[138.61755371 320.76574707]
[136.26037598 305.91714478]
[137.82836914 290.95291138]
[143.22059631 276.89376831]
[152.07511902 264.70019531]
[163.79321289 255.20695496]
[157.71937561 241.49169922]
[151.64553833 227.77642822]
[145.57170105 214.06115723]
[139.49787903 200.34590149]
[133.22052002 186.72257996]
[126.74102020 173.19422913]
[120.26152039 159.66589355]
[113.78202820 146.13754272]
[107.30252838 132.60919189]
[100.82303619 119.08084869]
[87.19206238 114.16732025]
[80.93307495 101.09937286]
[85.64862061 87.39864349]
[79.16912079 73.87030029]
[62.56603622 68.36059570]
[55.22913742 52.85302353]
[61.25704193 37.15260315]
[58.15108109 51.82751465]
[47.68029785 62.56821442]
[33.08917236 66.04658508]
[18.89892387 61.18480682]
[9.50655746 49.48936081]
[7.82239866 34.58420563]
[14.36830330 21.08786774]
[27.11595154 13.18233395]
[42.11534500 13.31721878]
[54.71892929 21.45092201]
[49.89292908 7.24846554]
[45.06693268 -6.95398998]
[40.24093628 -21.15644646]
[28.47504997 -31.73352242]
[31.70617676 -46.27343750]
[24.12176323 -33.33215714]
[9.64334393 -29.41101646]
[-3.43518782 -36.75621796]
[-7.62185383 -51.16010284]
[-0.51834208 -64.37146759]
[13.80613327 -68.82224274]
[27.14524460 -61.96354294]
[23.60557175 -76.53991699]
[20.06590080 -91.11629486]
[16.52622795 -105.69267273]
[12.38876438 -91.27457428]
[3.38044786 -79.28081512]
[-9.31352425 -71.28938293]
[-24.02304077 -68.35167694]
[-38.81281281 -70.85420227]
[-51.73698807 -78.46772003]
[-61.09517670 -90.19053650]
[-65.65613556 -104.48030853]
[-64.81980896 -119.45697784]
[-58.69621658 -133.15010071]
[-48.09102249 -143.75811768]
[-34.39953232 -149.88534546]
[-19.42308807 -150.72566223]
[-5.13210154 -146.16850281]
[6.59320164 -136.81343079]
[14.21097374 -123.88904572]
[13.98764610 -138.88739014]
[13.76431847 -153.88572693]
[13.54098988 -168.88406372]
[13.31766224 -183.88240051]
[13.09433460 -198.88073730]
[12.87100697 -213.87907410]
[-0.81442273 -220.73236084]
[-9.73796654 -233.16735840]
[-11.84906006 -248.32656860]
[-6.66258860 -262.72653198]
[4.62963438 -273.05825806]
[19.43273926 -276.94757080]
[34.34507751 -273.50073242]
[45.93991089 -263.50979614]
[51.55282211 -249.27062988]
[49.89401245 -234.05528259]
[41.34465790 -221.36012268]
[27.86934471 -214.10240173]
[28.09267235 -199.10406494]
[28.31599998 -184.10572815]
[28.53932762 -169.10739136]
[28.76265526 -154.10905457]
[28.98598289 -139.11071777]
[29.20931053 -124.11237335]
[31.10260391 -109.23233795]
[34.64227676 -94.65596771]
[38.18194962 -80.07958984]
[41.72161865 -65.50321198]
[45.90863037 -51.09943390]
[57.32932663 -41.53821182]
[54.44338989 -25.98244286]
[59.26938629 -11.77998734]
[64.09538269 2.42246795]
[68.92138672 16.62492371]
[74.68741608 30.47240829]
[87.35641479 32.82314301]
[96.49468231 42.18125153]
[98.60565186 55.28675842]
[92.69747162 67.39080048]
[99.17696381 80.91915131]
[112.80793762 85.83267975]
[119.06692505 98.90062714]
[114.35137939 112.60135651]
[120.83087921 126.12969971]
[127.31037140 139.65805054]
[133.78987122 153.18638611]
[140.26936340 166.71473694]
[146.74885559 180.24308777]
[151.97872925 184.28784180]
[154.06730652 189.57318115]
[153.21313477 194.27206421]
[159.28697205 207.98733521]
[165.36080933 221.70259094]
[171.43464661 235.41786194]
[177.50848389 249.13313293]
[192.41349792 246.83627319]
[207.39352417 248.47465515]
[221.42807007 253.93061829]
[233.56262207 262.82662964]
[242.97355652 274.55148315]
[249.02404785 288.30212402]
[251.30715942 303.13885498]
[249.67320251 318.04931641]
[244.23950195 332.01785278]
[235.38206482 344.09439087]
[223.70951843 353.45928955]
[229.78335571 367.17453003]
[235.85719299 380.88980103]
[241.93103027 394.60507202]
[248.00486755 408.32034302]
[254.38346863 421.89654541]
[261.06365967 435.32693481]
[267.74386597 448.75729370]
[274.42404175 462.18768311]
[279.71356201 466.15411377]
[281.88058472 471.40777588]
[281.09649658 476.11886597]
[287.37384033 489.74218750]
[293.65121460 503.36547852]
[299.92855835 516.98883057]
[306.20593262 530.61212158]
[312.48327637 544.23541260]
[326.88571167 539.95166016]
[341.75122070 537.76123047]
[356.77713013 537.70880127]
[371.65753174 539.79534912]
[386.08953857 543.97851562]
[399.77926636 550.17297363]
[412.44805908 558.25280762]
[423.83795166 568.05334473]
[433.71707153 579.37518311]
[441.88433838 591.98773193]
[448.17343140 605.63427734]
[452.45629883 620.03698730]
[454.64581299 634.90258789]
[454.69732666 649.92852783]
[452.60983276 664.80877686]
[448.42581177 679.24053955]
[442.23043823 692.92987061]
[434.14990234 705.59814453]
[424.34863281 716.98742676]
[413.02621460 726.86590576]
[400.41314697 735.03234863]
[386.76620483 741.32061768]
[372.36325073 745.60260010]
[357.49746704 747.79113770]
[342.47155762 747.84173584]
[327.59140015 745.75335693]
[313.15991211 741.56842041]
[299.47094727 735.37219238]
[286.80319214 727.29089355]
[275.41448975 717.48889160]
[265.53674316 706.16589355]
[257.37106323 693.55230713]
[251.08366394 679.90496826]
[246.80256653 665.50177002]
[244.61491394 650.63586426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[13 167]
[14 166]
[15 165]
[16 164]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[48 133]
[49 132]
[52 128]
[62 127]
[63 126]
[64 125]
[65 124]
[67 122]
[74 121]
[75 120]
[76 119]
[77 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
