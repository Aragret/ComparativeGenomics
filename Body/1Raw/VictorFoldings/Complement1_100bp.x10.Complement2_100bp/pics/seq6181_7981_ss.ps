%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[-17.05536842 454.28344727]
[-17.67217827 469.28424072]
[-19.82813835 484.14208984]
[-23.50039291 498.69952393]
[-28.65001488 512.80218506]
[-35.22241211 526.30065918]
[-43.14791870 539.05169678]
[-52.34251785 550.92028809]
[-62.70874023 561.78057861]
[-74.13669586 571.51739502]
[-86.50524902 580.02758789]
[-99.68328094 587.22088623]
[-113.53109741 593.02105713]
[-127.90190887 597.36657715]
[-142.64337158 600.21148682]
[-157.59921265 601.52557373]
[-172.61090088 601.29486084]
[-187.51930237 599.52178955]
[-202.16638184 596.22528076]
[-216.39686584 591.44012451]
[-230.05989075 585.21716309]
[-243.01065063 577.62231445]
[-255.11184692 568.73608398]
[-266.23519897 558.65264893]
[-276.26278687 547.47900391]
[-285.08831787 535.33343506]
[-292.61825562 522.34484863]
[-298.77273560 508.65078735]
[-303.48654175 494.39654541]
[-306.70971680 479.73312378]
[-308.40808105 464.81604004]
[-308.56362915 449.80340576]
[-307.17471313 434.85430908]
[-304.25604248 420.12728882]
[-299.83859253 405.77841187]
[-293.96917725 391.95980835]
[-286.70999146 378.81796265]
[-278.13800049 366.49215698]
[-268.34408569 355.11309814]
[-257.43203735 344.80139160]
[-245.51756287 335.66632080]
[-232.72695923 327.80474854]
[-219.19578552 321.30001831]
[-205.06750488 316.22106934]
[-190.49188232 312.62173462]
[-175.62341309 310.54019165]
[-160.61973572 309.99850464]
[-145.63986206 311.00241089]
[-130.84262085 313.54122925]
[-116.38486481 317.58810425]
[-102.41983795 323.10009766]
[-89.09559631 330.01879883]
[-76.55336761 338.27087402]
[-67.06446838 326.65362549]
[-57.57557297 315.03634644]
[-55.51680374 300.28469849]
[-40.79449081 294.49127197]
[-31.30559158 282.87399292]
[-33.05086517 268.12646484]
[-23.59326363 256.20974731]
[-8.11286545 254.47912598]
[1.37603319 242.86186218]
[10.86493111 231.24459839]
[20.35383034 219.62733459]
[29.40382957 207.66500854]
[38.00239563 195.37416077]
[46.60095596 183.08332825]
[55.10778427 170.72882080]
[63.52240372 158.31132507]
[70.89308929 145.24713135]
[77.17045593 131.62382507]
[83.44781494 118.00050354]
[89.72517395 104.37718964]
[95.90093994 90.70751953]
[101.76990509 76.90334320]
[107.43269348 63.01331329]
[113.09547424 49.12328720]
[118.75826263 35.23326111]
[124.42105103 21.34323311]
[130.08383179 7.45320654]
[135.01542664 -6.71292877]
[131.43777466 -22.12431717]
[142.42015076 -32.18596268]
[146.60716248 -46.58974457]
[150.79417419 -60.99352646]
[154.98118591 -75.39730835]
[159.16818237 -89.80109406]
[161.06147766 -104.68112946]
[160.61488342 -119.67447662]
[160.16827393 -134.66783142]
[159.72166443 -149.66117859]
[158.94033813 -164.64080811]
[157.82469177 -179.59927368]
[156.70904541 -194.55772400]
[155.59339905 -209.51617432]
[141.06346130 -213.90310669]
[129.10183716 -223.24571228]
[121.32626343 -236.28047180]
[118.78830719 -251.24453735]
[121.83120728 -266.11413574]
[130.04344177 -278.87829590]
[142.31436157 -287.81076050]
[156.98443604 -291.70349121]
[172.06965637 -290.02999878]
[185.52987671 -283.01666260]
[195.54469299 -271.61193848]
[200.75970459 -257.35821533]
[200.46961975 -242.18322754]
[194.71365356 -228.13925171]
[184.27027893 -217.12561035]
[170.55184937 -210.63182068]
[171.66749573 -195.67337036]
[172.78314209 -180.71492004]
[173.89878845 -165.75646973]
[176.31758118 -163.19094849]
[177.61389160 -159.32641602]
[177.19075012 -154.70318604]
[174.71501160 -150.10778809]
[175.16162109 -135.11442566]
[175.60823059 -120.12108612]
[176.05482483 -105.12773132]
[182.42228699 -118.70917511]
[192.17593384 -130.10507202]
[204.61164856 -138.49272156]
[218.83169556 -143.26664734]
[233.80950928 -144.08219910]
[248.46383667 -140.88049316]
[261.73675537 -133.89266968]
[272.67007446 -123.62319183]
[280.47454834 -110.81342316]
[284.58673096 -96.38809204]
[284.70977783 -81.38860321]
[280.83477783 -66.89775848]
[273.24148560 -53.96168137]
[262.47808838 -43.51422882]
[249.32159424 -36.30961609]
[234.72177124 -32.86794662]
[219.73258972 -33.43768311]
[205.43615723 -37.97769165]
[192.86451721 -46.16022491]
[182.92523193 -57.39458084]
[176.33584595 -70.86973572]
[173.57197571 -85.61408234]
[169.38496399 -71.21029663]
[165.19795227 -56.80651855]
[161.01094055 -42.40273285]
[156.82392883 -27.99895287]
[160.70106506 -13.61781788]
[149.41921997 -2.52591753]
[162.52238464 -9.82706642]
[177.27629089 -7.12111473]
[186.93565369 4.35481262]
[187.08432007 19.35407639]
[177.65434265 31.01921463]
[162.95697021 34.01708221]
[149.71163940 26.97709846]
[143.97386169 13.11599255]
[138.31108093 27.00601959]
[132.64828491 40.89604568]
[126.98550415 54.78607559]
[121.32271576 68.67610168]
[115.65993500 82.56612396]
[116.65361786 87.23748779]
[114.72332764 92.58267975]
[109.61621094 96.78134918]
[109.49119568 104.84093475]
[103.34848785 110.65454865]
[97.07112885 124.27786255]
[90.79376984 137.90118408]
[84.51641083 151.52449036]
[97.38234711 143.81297302]
[112.35278320 142.87171936]
[126.08329010 148.91102600]
[135.50643921 160.58169556]
[138.51705933 175.27645874]
[134.44258118 189.71247864]
[124.19326019 200.66470337]
[110.05881500 205.68638611]
[95.19690704 203.65567017]
[82.92773438 195.02621460]
[75.99226379 181.72587585]
[75.93989563 166.72593689]
[67.52528381 179.14343262]
[65.30182648 188.00312805]
[58.89179611 191.68188477]
[50.29323196 203.97273254]
[41.69466782 216.26356506]
[56.69466782 216.26327515]
[66.16617584 227.89471436]
[63.12715149 242.58363342]
[49.81784439 249.50190735]
[36.04938889 243.54962158]
[31.97109413 229.11624146]
[22.48219490 240.73350525]
[12.99329662 252.35076904]
[3.50439811 263.96801758]
[4.89931822 279.48226929]
[-4.88926649 291.12866211]
[-19.68832970 292.36288452]
[-29.17722702 303.98016357]
[-31.91470528 319.56274414]
[-45.95830917 324.52523804]
[-55.44720840 336.14251709]
[-64.93610382 347.75976562]
[-54.34610367 358.40194702]
[-44.90648270 370.07659912]
[-36.71731567 382.66000366]
[-29.86540794 396.01870728]
[-24.42339325 410.01113892]
[-20.44896317 424.48898315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 204]
[54 203]
[55 202]
[57 200]
[58 199]
[61 196]
[62 195]
[63 194]
[64 193]
[65 187]
[66 186]
[67 185]
[68 183]
[69 182]
[70 170]
[71 169]
[72 168]
[73 167]
[74 165]
[75 162]
[76 161]
[77 160]
[78 159]
[79 158]
[80 157]
[81 149]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 121]
[89 120]
[90 119]
[91 118]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
