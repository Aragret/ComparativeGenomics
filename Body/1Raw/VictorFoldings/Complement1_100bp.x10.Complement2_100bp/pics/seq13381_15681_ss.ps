%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[1.82654619 474.95288086]
[-6.32884312 487.54965210]
[-15.35248470 499.53976440]
[-25.19942284 510.86346436]
[-35.82059860 521.46441650]
[-47.16310120 531.28967285]
[-59.17041779 540.29046631]
[-71.78273010 548.42175293]
[-84.93720245 555.64318848]
[-98.56829834 561.91870117]
[-112.60811615 567.21704102]
[-126.98669434 571.51184082]
[-141.63241577 574.78167725]
[-156.47230530 577.01031494]
[-171.43241882 578.18652344]
[-186.43826294 578.30456543]
[-201.41503906 577.36383057]
[-216.28814697 575.36901855]
[-230.98348999 572.32995605]
[-245.42787170 568.26190186]
[-259.54928589 563.18511963]
[-273.27743530 557.12481689]
[-286.54388428 550.11126709]
[-299.28256226 542.17932129]
[-311.43002319 533.36865234]
[-322.92568970 523.72296143]
[-333.71231079 513.29046631]
[-343.73620605 502.12307739]
[-352.94735718 490.27639771]
[-361.29992676 477.80950928]
[-368.75225830 464.78445435]
[-375.26727295 451.26620483]
[-380.81246948 437.32205200]
[-385.36026001 423.02145386]
[-388.88796997 408.43569946]
[-391.37802124 393.63745117]
[-392.81799316 378.70040894]
[-393.20074463 363.69897461]
[-392.52435303 348.70794678]
[-390.79217529 333.80194092]
[-388.01287842 319.05526733]
[-384.20025635 304.54138184]
[-379.37335205 290.33258057]
[-373.55618286 276.49966431]
[-366.77777100 263.11154175]
[-359.07180786 250.23492432]
[-350.47677612 237.93395996]
[-341.03543091 226.26991272]
[-330.79483032 215.30090332]
[-319.80599976 205.08158875]
[-308.12365723 195.66287231]
[-295.80606079 187.09169006]
[-282.91452026 179.41072083]
[-269.51327515 172.65824890]
[-255.66911316 166.86791992]
[-241.45098877 162.06855774]
[-226.92973328 158.28410339]
[-212.17770386 155.53338623]
[-197.26838684 153.83010864]
[-182.27606201 153.18278503]
[-167.27540588 153.59460449]
[-152.34118652 155.06355286]
[-137.54777527 157.58227539]
[-122.96888733 161.13824463]
[-108.67715454 165.71374512]
[-94.74376678 171.28596497]
[-81.23815155 177.82716370]
[-68.22759247 185.30474854]
[-55.77690506 193.68145752]
[-43.94811630 202.91557312]
[-32.80016327 212.96107483]
[-21.99800682 202.55369568]
[-11.19585133 192.14631653]
[-0.39369491 181.73895264]
[2.24217200 174.83432007]
[10.64762115 171.25852966]
[14.65876579 156.91419983]
[30.02310562 153.13958740]
[40.97901535 142.89419556]
[51.93492508 132.64880371]
[52.98736191 127.99033356]
[56.97739792 123.94352722]
[63.37289810 122.26748657]
[74.62899780 112.35282898]
[85.88509369 102.43817902]
[90.53220367 89.25122070]
[104.20025635 86.30572510]
[115.45635223 76.39107513]
[126.71244812 66.47641754]
[137.96855164 56.56176758]
[143.21011353 41.63405609]
[157.87490845 39.02774429]
[169.13101196 29.11309433]
[174.37257385 14.18538189]
[189.03736877 11.57907009]
[200.29345703 1.66441929]
[205.53501892 -13.26329327]
[220.19982910 -15.86960411]
[231.45591736 -25.78425598]
[242.71202087 -35.69890594]
[233.85543823 -47.81816101]
[226.13763428 -60.69258118]
[219.62255859 -74.21548462]
[214.36418152 -88.27481842]
[210.40609741 -102.75406647]
[207.78108215 -117.53326416]
[206.51091003 -132.48992920]
[206.60609436 -147.50013733]
[208.06584167 -162.43948364]
[210.87806702 -177.18420410]
[215.01947021 -191.61209106]
[220.45571899 -205.60360718]
[227.14176941 -219.04280090]
[235.02223206 -231.81831360]
[244.03178406 -243.82426453]
[254.09577942 -254.96119690]
[265.13082886 -265.13681030]
[277.04550171 -274.26678467]
[289.74102783 -282.27545166]
[303.11221313 -289.09643555]
[317.04830933 -294.67327881]
[331.43377686 -298.95971680]
[346.14941406 -301.92022705]
[361.07333374 -303.53030396]
[376.08181763 -303.77658081]
[391.05050659 -302.65704346]
[405.85537720 -300.18096924]
[420.37374878 -296.36883545]
[434.48529053 -291.25225830]
[448.07308960 -284.87362671]
[461.02456665 -277.28582764]
[473.23236084 -268.55169678]
[484.59533691 -258.74365234]
[495.01934814 -247.94293213]
[504.41796875 -236.23904419]
[512.71337891 -223.72897339]
[519.83673096 -210.51638794]
[525.72912598 -196.71078491]
[530.34173584 -182.42654419]
[533.63623047 -167.78202820]
[535.58532715 -152.89862061]
[536.17297363 -137.89961243]
[535.39422607 -122.90933228]
[533.25555420 -108.05196381]
[529.77465820 -93.45063782]
[524.98040771 -79.22634888]
[518.91253662 -65.49696350]
[511.62130737 -52.37624359]
[503.16714478 -39.97292328]
[493.62008667 -28.38978004]
[483.05929565 -17.72279549]
[471.57223511 -8.06036091]
[459.25408936 0.51745361]
[446.20697021 7.93956947]
[432.53897095 14.14448357]
[418.36334229 19.08077812]
[403.79757690 22.70755005]
[388.96234131 24.99474525]
[373.98059082 25.92341042]
[358.97647095 25.48585129]
[344.07431030 23.68569183]
[329.39758301 20.53785133]
[315.06790161 16.06841469]
[301.20404053 10.31441402]
[287.92086792 3.32353377]
[275.32843018 -4.84629822]
[263.53112793 -14.12738228]
[252.62666321 -24.44281197]
[241.37057495 -14.52816010]
[230.11447144 -4.61350870]
[225.67802429 9.60504150]
[210.20811462 12.92051506]
[198.95202637 22.83516693]
[194.51556396 37.05371475]
[179.04565430 40.36919022]
[167.78956604 50.28384018]
[163.35310364 64.50238800]
[147.88319397 67.81786346]
[136.62710571 77.73251343]
[125.37100220 87.64717102]
[114.11490631 97.56182098]
[109.46779633 110.74877930]
[95.79974365 113.69427490]
[84.54364777 123.60892487]
[73.28755188 133.52357483]
[62.18031693 143.60472107]
[51.22440720 153.85011292]
[40.26849747 164.09550476]
[35.47371292 179.17265320]
[20.89301300 182.21443176]
[10.01367855 192.54110718]
[-0.78847808 202.94848633]
[-11.59063435 213.35585022]
[-22.39279175 223.76322937]
[-12.76911068 235.27729797]
[-3.98159671 247.44152832]
[3.92597103 260.19531250]
[10.91419697 273.47512817]
[16.94826698 287.21481323]
[21.99811745 301.34591675]
[26.03859329 315.79803467]
[29.04956055 330.49914551]
[31.01602173 345.37603760]
[31.92817879 360.35458374]
[31.78148651 375.36016846]
[30.57667732 390.31802368]
[28.31975365 405.15362549]
[25.02195930 419.79309082]
[20.69972229 434.16345215]
[15.37457657 448.19311523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 194]
[72 193]
[73 192]
[74 191]
[76 190]
[78 188]
[79 187]
[80 186]
[83 185]
[84 184]
[85 183]
[87 181]
[88 180]
[89 179]
[90 178]
[92 176]
[93 175]
[95 173]
[96 172]
[98 170]
[99 169]
[100 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
