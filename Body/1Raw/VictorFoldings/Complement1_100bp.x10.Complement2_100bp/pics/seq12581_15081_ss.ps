%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[30.98310852 210.27867126]
[34.60929108 224.84428406]
[36.91521454 239.67630005]
[37.88230515 254.65531921]
[37.50278473 269.66073608]
[35.77970123 284.57171631]
[32.72693253 299.26818848]
[28.36906052 313.63186646]
[22.74116707 327.54708862]
[15.88856983 340.90179443]
[7.86644125 353.58847046]
[-1.26062787 365.50494385]
[-11.41915035 376.55532837]
[-22.52733421 386.65060425]
[-34.49573898 395.70950317]
[-47.22800446 403.65905762]
[-60.62161255 410.43530273]
[-74.56872559 415.98367310]
[-88.95704651 420.25946045]
[-103.67072296 423.22830200]
[-118.59129333 424.86621094]
[-133.59861755 425.16006470]
[-148.57186890 424.10748291]
[-163.39048767 421.71691895]
[-177.93516541 418.00762939]
[-192.08879089 413.00952148]
[-205.73739624 406.76275635]
[-218.77108765 399.31771851]
[-231.08494568 390.73428345]
[-242.57980347 381.08157349]
[-253.16311646 370.43734741]
[-262.74966431 358.88729858]
[-271.26229858 346.52438354]
[-278.63241577 333.44815063]
[-284.80072021 319.76391602]
[-289.71755981 305.58184814]
[-293.34329224 291.01611328]
[-295.64874268 276.18402100]
[-296.61538696 261.20498657]
[-296.23541260 246.19958496]
[-294.51187134 231.28866577]
[-291.45864868 216.59226990]
[-287.10034180 202.22872925]
[-281.47201538 188.31369019]
[-274.61901855 174.95918274]
[-266.59649658 162.27276611]
[-257.46905518 150.35655212]
[-247.31021118 139.30648804]
[-236.20172119 129.21154785]
[-224.23303223 120.15303040]
[-211.50053406 112.20384216]
[-198.10671997 105.42800903]
[-184.15943909 99.88007355]
[-169.77098083 95.60471344]
[-155.05720520 92.63634491]
[-140.13659668 90.99887085]
[-125.12924957 90.70547485]
[-110.15603638 91.75852203]
[-95.33748627 94.14953613]
[-80.79293060 97.85925293]
[-66.63945770 102.85781860]
[-52.99104691 109.10498047]
[-39.95757294 116.55043793]
[-27.64398193 125.13423920]
[-16.14941788 134.78727722]
[-5.56642675 145.43183899]
[4.01977873 156.98220825]
[16.37428856 148.47537231]
[28.72879601 139.96855164]
[41.08330536 131.46171570]
[53.43781662 122.95489502]
[65.79232025 114.44806671]
[63.12761688 104.39764404]
[63.35384369 94.00242615]
[66.45326233 84.07743835]
[72.18286133 75.40084076]
[80.09342957 68.65290833]
[89.56475067 64.36270142]
[99.85422516 62.86658478]
[110.15513611 64.28186798]
[119.65984344 68.49758148]
[127.62314606 75.18320465]
[140.57614136 67.61882019]
[153.52914429 60.05444336]
[166.48214722 52.49006653]
[179.43513489 44.92568588]
[192.38813782 37.36130524]
[185.58766174 23.98664474]
[179.57637024 10.23919582]
[174.37458801 -3.83452129]
[169.99990845 -18.18688583]
[166.46716309 -32.76933289]
[163.78828430 -47.53252029]
[161.97235107 -62.42649078]
[161.02549744 -77.40085602]
[160.95092773 -92.40493774]
[161.74890137 -107.38796997]
[163.41670227 -122.29925537]
[165.94869995 -137.08834839]
[169.33633423 -151.70518494]
[173.56813049 -166.10032654]
[178.62976074 -180.22505188]
[184.50411987 -194.03157043]
[191.17132568 -207.47315979]
[198.60881042 -220.50434875]
[206.79139709 -233.08105469]
[215.69142151 -245.16069031]
[225.27876282 -256.70239258]
[235.52096558 -267.66711426]
[246.38339233 -278.01776123]
[257.82928467 -287.71929932]
[269.81988525 -296.73889160]
[282.31466675 -305.04605103]
[295.27130127 -312.61264038]
[308.64599609 -319.41305542]
[322.39349365 -325.42428589]
[336.46722412 -330.62603760]
[350.81961060 -335.00064087]
[365.40206909 -338.53332520]
[380.16525269 -341.21212769]
[395.05923462 -343.02801514]
[410.03359985 -343.97479248]
[425.03768921 -344.04931641]
[440.02072144 -343.25128174]
[454.93200684 -341.58340454]
[469.72106934 -339.05136108]
[484.33789062 -335.66366577]
[498.73303223 -331.43179321]
[512.85772705 -326.37011719]
[526.66424561 -320.49569702]
[540.10577393 -313.82843018]
[553.13696289 -306.39089966]
[565.71362305 -298.20825195]
[577.79321289 -289.30819702]
[589.33489990 -279.72079468]
[600.29956055 -269.47854614]
[610.65014648 -258.61608887]
[620.35162354 -247.17015076]
[629.37121582 -235.17950439]
[637.67828369 -222.68469238]
[645.24481201 -209.72801208]
[652.04516602 -196.35328674]
[658.05639648 -182.60578918]
[663.25805664 -168.53202820]
[667.63256836 -154.17964172]
[671.16522217 -139.59715271]
[673.84399414 -124.83394623]
[675.65979004 -109.93996429]
[676.60650635 -94.96559143]
[676.68096924 -79.96150970]
[675.88287354 -64.97847748]
[674.21496582 -50.06720734]
[671.68280029 -35.27814102]
[668.29504395 -20.66132927]
[664.06317139 -6.26622725]
[659.00140381 7.85845661]
[653.12695312 21.66492844]
[646.45959473 35.10646820]
[639.02203369 48.13759995]
[630.83935547 60.71422577]
[621.93920898 72.79378510]
[612.35180664 84.33541870]
[602.10949707 95.30005646]
[591.24694824 105.65061188]
[579.80102539 115.35205078]
[567.81030273 124.37155914]
[555.31549072 132.67860413]
[542.35876465 140.24507141]
[528.98400879 147.04537964]
[515.23651123 153.05651855]
[501.16271973 158.25811768]
[486.81030273 162.63261414]
[472.22781372 166.16517639]
[457.46456909 168.84387207]
[442.57058716 170.65962219]
[427.59622192 171.60629272]
[412.59213257 171.68067932]
[397.60910034 170.88252258]
[382.69784546 169.21453857]
[367.90878296 166.68234253]
[353.29199219 163.29454041]
[338.89691162 159.06256104]
[324.77224731 154.00074768]
[310.96578979 148.12622070]
[297.52426147 141.45886230]
[284.49316406 134.02120972]
[271.91659546 125.83846283]
[259.83706665 116.93829346]
[248.29547119 107.35080719]
[237.33087158 97.10846710]
[226.98036194 86.24591064]
[217.27896118 74.79991150]
[208.25950623 62.80918121]
[199.95251465 50.31430435]
[186.99952698 57.87868500]
[174.04652405 65.44306183]
[161.09352112 73.00743866]
[148.14051819 80.57182312]
[135.18753052 88.13619995]
[136.34179688 107.62792969]
[127.44780731 125.01058960]
[110.96468353 135.47798157]
[91.44989014 136.13595581]
[74.29914856 126.80257416]
[61.94464111 135.30940247]
[49.59013367 143.81622314]
[37.23562241 152.32305908]
[24.88111496 160.82987976]
[12.52660561 169.33671570]
[19.89713478 182.41270447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 209]
[68 208]
[69 207]
[70 206]
[71 205]
[72 204]
[82 199]
[83 198]
[84 197]
[85 196]
[86 195]
[87 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
