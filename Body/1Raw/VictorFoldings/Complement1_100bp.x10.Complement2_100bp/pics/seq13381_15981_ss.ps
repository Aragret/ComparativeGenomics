%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[37.17958832 706.48968506]
[22.24870491 708.06646729]
[7.23479033 708.07397461]
[-7.69765615 706.51202393]
[-22.38502502 703.39770508]
[-36.66639328 698.76519775]
[-50.38529205 692.66522217]
[-63.39139938 685.16461182]
[-75.54222107 676.34558105]
[-86.70462036 666.30474854]
[-96.75630188 655.15209961]
[-105.58713531 643.00988770]
[-113.10035706 630.01104736]
[-119.21364594 616.29809570]
[-123.86003876 602.02124023]
[-126.98860931 587.33691406]
[-128.56507874 572.40594482]
[-128.57220459 557.39202881]
[-127.00986481 542.45965576]
[-123.89520264 527.77233887]
[-119.26234436 513.49108887]
[-113.16204071 499.77233887]
[-105.66113281 486.76641846]
[-96.84181213 474.61581421]
[-86.80069733 463.45364380]
[-75.64781189 453.40225220]
[-63.50535202 444.57171631]
[-50.50635529 437.05880737]
[-36.79324341 430.94583130]
[-22.51626778 426.29980469]
[-7.83185482 423.17160034]
[7.09910536 421.59545898]
[22.11302185 421.58871460]
[23.67354393 406.67010498]
[17.30230904 393.20697021]
[26.43332291 380.28662109]
[27.99384689 365.36801147]
[25.73572159 361.15969849]
[26.09725952 355.48815918]
[29.82938766 350.03082275]
[31.83340263 335.16528320]
[33.83741760 320.29974365]
[27.86985397 306.65286255]
[37.38150787 294.01013184]
[39.38552094 279.14459229]
[41.38953400 264.27905273]
[43.39354706 249.41354370]
[32.09856415 259.28387451]
[17.16989326 260.74493408]
[4.17555332 253.25178528]
[-2.03788424 239.59919739]
[0.84703821 224.87924194]
[11.75431633 214.58209229]
[26.61580467 212.54833984]
[39.88853455 219.53651428]
[46.62228775 232.94136047]
[50.37858963 218.41929626]
[54.13489151 203.89724731]
[41.25490570 211.58528137]
[26.42697144 209.31980896]
[16.43021965 198.13656616]
[15.83503056 183.14837646]
[24.91351700 171.20764160]
[39.51511765 167.77351379]
[52.96417618 174.41601562]
[59.11210632 188.10014343]
[64.35882568 174.04766846]
[69.60554504 159.99519348]
[74.85226440 145.94271851]
[80.09897614 131.89025879]
[85.34569550 117.83777618]
[90.59241486 103.78530884]
[90.23749542 95.73257446]
[96.02327728 89.56364441]
[101.47863007 75.59085083]
[106.93399048 61.61804962]
[104.74552917 45.94893265]
[116.58177185 36.90721130]
[110.48228455 22.57423782]
[116.21384430 8.48154831]
[129.91572571 2.75495410]
[126.71726990 -15.37930584]
[140.83558655 -25.80236053]
[146.08230591 -39.85483170]
[151.32902527 -53.90730286]
[142.81294250 -70.83038330]
[149.26039124 -88.30445862]
[166.13847351 -95.39290619]
[170.96447754 -109.59535980]
[175.79046631 -123.79782104]
[180.61647034 -138.00027466]
[185.01747131 -152.34011841]
[188.98956299 -166.80464172]
[192.96165466 -181.26916504]
[196.93376160 -195.73368835]
[200.90585327 -210.19821167]
[187.25952148 -216.50910950]
[174.83811951 -224.98016357]
[163.98052979 -235.38029480]
[154.98295593 -247.42576599]
[148.09085083 -260.78799438]
[143.49224854 -275.10241699]
[141.31257629 -289.97851562]
[141.61131287 -305.01049805]
[144.38032532 -319.78826904]
[149.54403687 -333.90869141]
[156.96160889 -346.98651123]
[166.43066406 -358.66497803]
[177.69290161 -368.62551880]
[190.44105530 -376.59634399]
[204.32736206 -382.36007690]
[218.97297668 -385.75942993]
[233.97837830 -386.70166016]
[248.93420410 -385.16107178]
[263.43243408 -381.17971802]
[277.07754517 -374.86621094]
[289.49731445 -366.39276123]
[300.35290527 -355.99053955]
[309.34814453 -343.94332886]
[316.23767090 -330.57980347]
[320.83352661 -316.26449585]
[323.01034546 -301.38793945]
[322.70870972 -286.35601807]
[319.93685913 -271.57879639]
[314.77041626 -257.45938110]
[307.35031128 -244.38298035]
[297.87902832 -232.70632935]
[286.61486816 -222.74797058]
[273.86517334 -214.77958679]
[259.97775269 -209.01853943]
[245.33148193 -205.62202454]
[230.32589722 -204.68266296]
[215.37037659 -206.22612000]
[211.39828491 -191.76159668]
[207.42617798 -177.29707336]
[203.45408630 -162.83255005]
[199.48199463 -148.36802673]
[200.74971008 -145.86781311]
[201.10343933 -142.71479797]
[200.28958130 -139.25459290]
[198.18421936 -135.91813660]
[194.81892395 -133.17427063]
[189.99293518 -118.97181702]
[185.16693115 -104.76936340]
[180.34092712 -90.56690979]
[187.48213196 -81.66918182]
[189.46183777 -70.31151581]
[185.67430115 -59.29569244]
[176.95103455 -51.39596939]
[165.38150024 -48.66058350]
[160.13478088 -34.60811234]
[154.88806152 -20.55564308]
[159.62246704 -9.42406750]
[155.36634827 2.32621741]
[143.88853455 8.21031094]
[150.08552551 21.70596886]
[144.75207520 35.95408630]
[130.55456543 42.36256790]
[133.13322449 57.03225708]
[120.90678406 67.07341003]
[115.45143127 81.04620361]
[109.99607086 95.01900482]
[104.64488983 109.03202820]
[99.39817047 123.08449554]
[94.15145111 137.13696289]
[88.90473175 151.18943787]
[83.65801239 165.24191284]
[78.41129303 179.29438782]
[73.16458130 193.34684753]
[68.65695190 207.65353394]
[64.90065002 222.17559814]
[61.14434814 236.69766235]
[58.25907516 251.41755676]
[56.25506210 266.28308105]
[54.25104904 281.14862061]
[52.24703598 296.01412964]
[58.07125473 310.72430420]
[48.70294571 322.30377197]
[46.69892883 337.16928101]
[44.69491577 352.03482056]
[42.91245270 366.92852783]
[41.35192871 381.84713745]
[47.61154556 396.37738037]
[38.59214783 408.23065186]
[37.03162384 423.14926147]
[51.71914673 426.26284790]
[66.00074005 430.89465332]
[79.71993256 436.99395752]
[92.72640991 444.49392700]
[104.87765503 453.31234741]
[116.04054260 463.35266113]
[126.09276581 474.50482178]
[134.92419434 486.64663696]
[142.43803406 499.64508057]
[148.55200195 513.35772705]
[153.19908142 527.63439941]
[156.32836914 542.31854248]
[157.90556335 557.24938965]
[157.91340637 572.26330566]
[156.35180664 587.19580078]
[153.23785400 601.88323975]
[148.60568237 616.16473389]
[142.50605774 629.88378906]
[135.00578308 642.89007568]
[126.18704987 655.04107666]
[116.14647675 666.20373535]
[104.99407959 676.25567627]
[92.85204315 685.08685303]
[79.85341644 692.60034180]
[66.14060211 698.71398926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 185]
[34 184]
[36 182]
[37 181]
[40 180]
[41 179]
[42 178]
[44 176]
[45 175]
[46 174]
[47 173]
[56 172]
[57 171]
[58 170]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[74 162]
[75 161]
[76 160]
[78 158]
[81 155]
[83 152]
[84 151]
[85 150]
[88 145]
[89 144]
[90 143]
[91 142]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
