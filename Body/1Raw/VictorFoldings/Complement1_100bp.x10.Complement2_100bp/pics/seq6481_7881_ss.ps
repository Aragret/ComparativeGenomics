%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[137.61180115 596.10327148]
[128.48564148 584.18707275]
[120.41763306 571.53051758]
[113.46752930 558.22723389]
[107.68678284 544.37573242]
[103.11817932 530.07855225]
[99.79555511 515.44152832]
[97.74350739 500.57312012]
[96.97723389 485.58331299]
[97.50240326 470.58309937]
[99.31512451 455.68359375]
[102.40197754 440.99508667]
[106.74011993 426.62628174]
[112.29741669 412.68362427]
[119.03273010 399.27032471]
[126.89618683 386.48565674]
[135.82958984 374.42431641]
[145.76676941 363.17559814]
[156.63417053 352.82275391]
[168.35131836 343.44247437]
[180.83148193 335.10418701]
[193.98223877 327.86962891]
[187.90841675 314.15435791]
[181.83457947 300.43908691]
[175.76074219 286.72384644]
[169.68690491 273.00857544]
[163.20741272 259.48022461]
[156.32800293 246.15078735]
[149.44859314 232.82136536]
[142.47013855 219.54351807]
[129.64332581 211.97236633]
[129.95429993 196.15422058]
[122.87719727 182.92869568]
[120.78900146 197.78262329]
[111.63169098 209.66302490]
[97.79895782 215.46435547]
[82.90664673 213.67018127]
[70.84757233 204.74949646]
[64.77394867 191.03413391]
[66.27339935 176.10926819]
[74.95397949 163.87622070]
[88.54660797 157.53266907]
[103.49819946 158.73681641]
[115.89985657 167.17323303]
[110.86294556 153.04420471]
[105.82602692 138.91517639]
[100.78910828 124.78614807]
[95.75219727 110.65711975]
[91.48365784 125.03694916]
[80.66531372 135.42749023]
[66.12504578 139.11268616]
[51.66364670 135.12921143]
[41.06129456 124.51836395]
[37.08941650 110.05377960]
[40.78625107 95.51647186]
[51.18545914 84.70645142]
[65.56870270 80.44944000]
[80.17624664 83.85820007]
[91.18923950 94.04094696]
[88.30396271 79.32106018]
[85.41869354 64.60116577]
[82.53341675 49.88127518]
[68.61764526 43.27390671]
[61.34579849 29.89579964]
[63.32245636 14.97746181]
[73.58180237 4.21252966]
[70.69653320 -10.50736141]
[67.81125641 -25.22725296]
[64.92598724 -39.94714355]
[62.04071426 -54.66703415]
[59.15544128 -69.38692474]
[56.27016830 -84.10681915]
[53.38489532 -98.82670593]
[50.49962234 -113.54660034]
[40.09246445 -102.74423981]
[25.14458275 -103.99357605]
[16.67500114 -116.37364960]
[20.92718124 -130.75833130]
[34.76657486 -136.54376221]
[47.99031067 -129.46647644]
[46.20784378 -144.36019897]
[36.88547897 -157.14315796]
[43.05556107 -170.69967651]
[39.92552567 -174.87698364]
[38.82124329 -179.38630676]
[39.52995682 -183.40037537]
[41.54140472 -186.29629517]
[32.79912567 -199.48277283]
[39.56838608 -212.75027466]
[38.45273590 -227.70872498]
[37.33708954 -242.66717529]
[22.48926544 -245.31161499]
[8.76590061 -251.56620789]
[-2.97034597 -261.03781128]
[-11.98172379 -273.13104248]
[-17.70177078 -287.08566284]
[-19.77091789 -302.02453613]
[-18.05909920 -317.00854492]
[-12.67392063 -331.09579468]
[-3.95389700 -343.40075684]
[7.55282164 -353.14990234]
[21.12291336 -359.73043823]
[35.90335083 -362.72869873]
[50.96502686 -361.95617676]
[65.36114502 -357.46142578]
[78.18675995 -349.52706909]
[88.63563538 -338.65176392]
[96.05095673 -325.51922607]
[99.96658325 -310.95492554]
[100.13637543 -295.87442017]
[96.54965973 -281.22564697]
[89.43190002 -267.92947388]
[79.23052979 -256.82168579]
[66.58681488 -248.60054016]
[52.29553986 -243.78282166]
[53.41119003 -228.82437134]
[54.52684021 -213.86592102]
[63.18931961 -201.74937439]
[56.49985886 -187.41195679]
[57.94927979 -172.48214722]
[67.14414978 -160.76448059]
[61.10156250 -146.14265442]
[62.88402939 -131.24894714]
[65.21951294 -116.43187714]
[68.10478973 -101.71198273]
[70.99005890 -86.99208832]
[73.87533569 -72.27220154]
[76.76060486 -57.55230713]
[79.64588165 -42.83241653]
[82.53115082 -28.11252594]
[85.41641998 -13.39263439]
[88.30169678 1.32725728]
[101.86583710 7.42250299]
[109.32818604 20.49068451]
[107.64493561 35.62409592]
[97.25331116 46.99600220]
[100.13858032 61.71589279]
[103.02385712 76.43578339]
[105.90912628 91.15567780]
[109.88122559 105.62020111]
[114.91813660 119.74922943]
[119.95505524 133.87826538]
[124.99197388 148.00729370]
[130.02888489 162.13632202]
[136.10272217 175.85159302]
[143.17982483 189.07711792]
[156.51283264 197.59423828]
[155.69566345 212.46641541]
[162.50375366 218.55638123]
[162.77801514 225.94195557]
[169.65742493 239.27137756]
[176.53683472 252.60079956]
[180.27192688 254.81509399]
[182.84893799 257.80233765]
[184.16708374 261.10351562]
[184.28497314 264.27413940]
[183.40217590 266.93472290]
[189.47601318 280.64999390]
[195.54985046 294.36526489]
[201.62367249 308.08053589]
[207.69750977 321.79580688]
[221.89288330 316.92007446]
[236.45484924 313.28268433]
[251.27560425 310.91061401]
[266.24542236 309.82138062]
[281.25341797 310.02307129]
[296.18856812 311.51419067]
[310.94021606 314.28369141]
[325.39916992 318.31106567]
[339.45840454 323.56652832]
[353.01379395 330.01113892]
[365.96496582 337.59716797]
[378.21609497 346.26849365]
[389.67642212 355.96087646]
[400.26110840 366.60256958]
[409.89178467 378.11480713]
[418.49716187 390.41232300]
[426.01351929 403.40408325]
[432.38522339 416.99386597]
[437.56506348 431.08111572]
[441.51473999 445.56152344]
[444.20495605 460.32781982]
[445.61581421 475.27075195]
[445.73690796 490.27963257]
[444.56726074 505.24337769]
[442.11560059 520.05114746]
[438.40005493 534.59338379]
[433.44815063 548.76239014]
[427.29650879 562.45318604]
[419.99072266 575.56451416]
[411.58483887 587.99926758]
[402.14111328 599.66534424]
[391.72946167 610.47644043]
[380.42700195 620.35241699]
[368.31735229 629.22027588]
[355.49023438 637.01422119]
[342.04058838 643.67669678]
[328.06796265 649.15826416]
[313.67584229 653.41833496]
[298.97079468 656.42547607]
[284.06167603 658.15734863]
[269.05886841 658.60113525]
[254.07342529 657.75354004]
[239.21633911 655.62084961]
[224.59757996 652.21881104]
[210.32540894 647.57275391]
[196.50546265 641.71691895]
[183.24008179 634.69476318]
[170.62745667 626.55816650]
[158.76100159 617.36749268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 152]
[28 151]
[29 150]
[30 148]
[32 146]
[33 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[59 139]
[60 138]
[61 137]
[62 136]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[80 123]
[81 122]
[83 120]
[87 119]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
