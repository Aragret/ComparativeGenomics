%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[121.98403168 579.30218506]
[132.83282471 567.80963135]
[132.16304016 552.82458496]
[131.49325562 537.83953857]
[130.82347107 522.85449219]
[130.15368652 507.86944580]
[129.48390198 492.88442993]
[127.47988129 478.01889038]
[124.15762329 463.39141846]
[120.66561127 460.13339233]
[119.18320465 454.64709473]
[120.96108246 448.27914429]
[118.07581329 433.55923462]
[115.19053650 418.83935547]
[112.30526733 404.11947632]
[109.41999054 389.39956665]
[106.53472137 374.67968750]
[103.64944458 359.95977783]
[97.29501343 373.54733276]
[85.05501556 382.21810913]
[70.12895203 383.70559692]
[56.41846466 377.62100220]
[47.50743866 365.55477905]
[45.72520065 350.66104126]
[51.53761673 336.83294678]
[63.42533875 327.68515015]
[78.28094482 325.60885620]
[92.22121429 331.14682007]
[101.60183716 342.85058594]
[100.93205261 327.86553955]
[92.63416290 315.49645996]
[99.74753571 301.36456299]
[99.07775116 286.37951660]
[98.40796661 271.39447021]
[89.69561005 263.00274658]
[89.01496124 250.52394104]
[97.27551270 240.61807251]
[96.82891083 225.62472534]
[88.71609497 213.13346863]
[96.03908539 199.10903931]
[95.59248352 184.11569214]
[95.14587402 169.12234497]
[87.03306580 156.63108826]
[94.35605621 142.60665894]
[93.90944672 127.61331177]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[82.34913635 59.97596741]
[89.31517792 46.81072617]
[88.42235565 31.83732033]
[79.31098938 22.70793152]
[78.87561798 10.21816635]
[86.80455780 1.08260632]
[86.13477325 -13.90243244]
[85.46498871 -28.88747215]
[77.11919403 -42.32839203]
[84.28047943 -55.38845825]
[83.61069489 -70.37349701]
[82.71788025 -85.34690094]
[81.60222626 -100.30535126]
[67.21022034 -105.11637115]
[55.78739929 -115.04421234]
[49.05398178 -128.55253601]
[48.00817490 -143.56898499]
[52.77827454 -157.80314636]
[62.60786438 -169.09582520]
[75.97557831 -175.74664307]
[74.85993195 -190.70509338]
[73.74427795 -205.66354370]
[64.49800110 -214.65628052]
[63.87672424 -227.13816833]
[71.66876984 -236.39076233]
[70.77595520 -251.36418152]
[69.88314056 -266.33758545]
[56.58866882 -277.70755005]
[55.64909363 -294.83743286]
[67.15814972 -307.10037231]
[66.04250336 -322.05883789]
[64.92684937 -337.01730347]
[47.39044571 -346.62017822]
[39.27376175 -364.73397827]
[43.71354294 -383.93215942]
[58.73712158 -396.45837402]
[56.73310852 -411.32391357]
[54.72909546 -426.18942261]
[52.72508240 -441.05496216]
[50.72106552 -455.92050171]
[48.71705246 -470.78601074]
[33.76491928 -472.86837769]
[19.92952538 -478.90863037]
[8.23755074 -488.45849609]
[-0.44338110 -500.80938721]
[-5.46908855 -515.04473877]
[-6.46663046 -530.10815430]
[-3.36198282 -544.88189697]
[3.61446929 -558.26965332]
[13.94502640 -569.27795410]
[26.86309242 -577.08984375]
[41.41006088 -581.12573242]
[56.50645065 -581.08605957]
[71.03201294 -576.97381592]
[83.90884399 -569.09411621]
[94.18141174 -558.03167725]
[101.08740997 -544.60748291]
[104.11437988 -529.81762695]
[103.03768921 -514.75958252]
[97.93724060 -500.55087280]
[89.19152832 -488.24578857]
[77.44952393 -478.75747681]
[63.58258057 -472.79003906]
[65.58659363 -457.92449951]
[67.59060669 -443.05899048]
[69.59461975 -428.19345093]
[71.59863281 -413.32791138]
[73.60265350 -398.46240234]
[83.56291199 -395.67889404]
[92.06105804 -389.71832275]
[98.11428833 -381.23895264]
[101.01229095 -371.19198608]
[100.40045166 -360.71502686]
[96.32309723 -351.00320435]
[89.22129822 -343.17279053]
[79.88530731 -338.13293457]
[81.00095367 -323.17449951]
[82.11660004 -308.21603394]
[92.96067047 -301.25646973]
[97.88985443 -289.14096069]
[94.89704132 -276.20831299]
[84.85654449 -267.23040771]
[85.74935913 -252.25698853]
[86.64217377 -237.28358459]
[97.08101654 -223.17694092]
[88.70273590 -206.77920532]
[89.81838226 -191.82073975]
[90.93402863 -176.86228943]
[105.14044189 -172.26803589]
[116.53644562 -162.55842590]
[123.36528015 -149.18936157]
[124.55860138 -134.18391418]
[119.90352631 -119.82620239]
[110.07978821 -108.31372070]
[96.56068420 -101.42100525]
[97.67633057 -86.46254730]
[100.64640808 -82.72254181]
[101.29856873 -77.07703400]
[98.59573364 -71.04328156]
[99.26551819 -56.05824280]
[107.56340027 -43.68915176]
[100.45002747 -29.55725670]
[101.11981201 -14.57221794]
[101.78959656 0.41282123]
[112.01725769 14.67332268]
[103.39576721 30.94450569]
[104.28858185 45.91791153]
[112.76970673 58.16208649]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[111.52896118 117.45527649]
[111.46766663 123.13800049]
[108.90279388 127.16670227]
[109.34940338 142.16004944]
[117.49415588 155.72373962]
[110.13922119 168.67573547]
[110.58583069 183.66908264]
[111.03243256 198.66244507]
[119.17718506 212.22612000]
[111.82225800 225.17811584]
[112.26885986 240.17147827]
[122.30761719 255.60859680]
[113.39300537 270.72470093]
[114.06278992 285.70974731]
[114.73257446 300.69476318]
[123.07836914 314.13571167]
[115.91709137 327.19577026]
[116.58687592 342.18081665]
[118.36933899 357.07452393]
[121.25460815 371.79440308]
[124.13988495 386.51431274]
[127.02515411 401.23419189]
[129.91043091 415.95407104]
[132.79570007 430.67398071]
[135.68096924 445.39385986]
[138.78507996 460.06918335]
[142.10734558 474.69662476]
[147.24243164 460.60299683]
[157.92338562 450.07125854]
[172.08789062 445.13497925]
[187.00099182 446.74722290]
[199.78320312 454.59677124]
[207.96649170 467.16790771]
[209.97077942 482.03338623]
[205.40908813 496.32293701]
[195.16218567 507.27743530]
[181.20860291 512.78173828]
[166.24255371 511.77310181]
[153.15374756 504.44619751]
[144.46893311 492.21463013]
[145.13871765 507.19967651]
[145.80850220 522.18469238]
[146.47828674 537.16973877]
[147.14807129 552.15478516]
[147.81785583 567.13983154]
[159.64871216 577.61871338]
[160.52128601 593.39886475]
[149.91792297 605.11828613]
[134.12940979 605.82397461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 188]
[9 187]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[29 179]
[30 178]
[32 176]
[33 175]
[34 174]
[37 172]
[38 171]
[40 169]
[41 168]
[42 167]
[44 165]
[45 164]
[46 161]
[48 159]
[49 158]
[51 156]
[52 155]
[55 153]
[56 152]
[57 151]
[59 149]
[60 148]
[61 145]
[62 144]
[69 137]
[70 136]
[71 135]
[74 133]
[75 132]
[76 131]
[79 127]
[80 126]
[81 125]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
