%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[24.88339806 555.15124512]
[12.59853935 563.76550293]
[-0.15806359 571.66442871]
[-13.34480095 578.82214355]
[-26.91866112 585.21539307]
[-40.83536911 590.82330322]
[-55.04952621 595.62762451]
[-69.51477814 599.61254883]
[-84.18392944 602.76525879]
[-99.00914764 605.07531738]
[-113.94206238 606.53527832]
[-128.93397522 607.14031982]
[-143.93597412 606.88854980]
[-158.89912415 605.78070068]
[-173.77464294 603.82049561]
[-188.51397705 601.01422119]
[-203.06907654 597.37103271]
[-217.39245605 592.90289307]
[-231.43737793 587.62432861]
[-245.15806580 581.55255127]
[-258.50973511 574.70733643]
[-271.44885254 567.11114502]
[-283.93319702 558.78857422]
[-295.92205811 549.76690674]
[-307.37631226 540.07550049]
[-318.25863647 529.74603271]
[-328.53350830 518.81213379]
[-338.16741943 507.30944824]
[-347.12893677 495.27554321]
[-355.38882446 482.74966431]
[-362.92016602 469.77267456]
[-369.69839478 456.38690186]
[-375.70138550 442.63598633]
[-380.90954590 428.56478882]
[-385.30590820 414.21920776]
[-388.87612915 399.64605713]
[-391.60855103 384.89285278]
[-393.49426270 370.00772095]
[-394.52716064 355.03918457]
[-394.70379639 340.03610229]
[-394.02365112 325.04742432]
[-392.48892212 310.12200928]
[-390.10464478 295.30856323]
[-386.87854004 280.65536499]
[-382.82116699 266.21026611]
[-377.94577026 252.02033997]
[-372.26821899 238.13189697]
[-365.80706787 224.59022522]
[-358.58337402 211.43949890]
[-350.62066650 198.72261047]
[-341.94497681 186.48104858]
[-332.58459473 174.75474548]
[-322.57000732 163.58192444]
[-311.93392944 152.99905396]
[-300.71102905 143.04064941]
[-288.93789673 133.73919678]
[-276.65298462 125.12502289]
[-263.89633179 117.22622681]
[-250.70951843 110.06858063]
[-237.13562012 103.67543030]
[-223.21887207 98.06761932]
[-209.00466919 93.26345825]
[-194.53938293 89.27859497]
[-179.87020874 86.12604523]
[-165.04498291 83.81608582]
[-150.11204529 82.35624695]
[-135.12013245 81.75129700]
[-120.11813354 82.00320435]
[-105.15498352 83.11114502]
[-90.27948761 85.07151794]
[-75.54016876 87.87791443]
[-60.98510361 91.52118683]
[-46.66176224 95.98944855]
[-32.61687088 101.26813507]
[-18.89624214 107.34001160]
[-5.54462719 114.18528748]
[7.39442348 121.78163147]
[19.87870407 130.10426331]
[31.86749458 139.12603760]
[43.32168961 148.81752014]
[53.64835739 137.93818665]
[63.97502518 127.05884552]
[74.30169678 116.17951202]
[84.62836456 105.30017853]
[85.02703857 93.66049194]
[93.10767365 85.27332306]
[104.72446442 84.44177246]
[115.21196747 73.71739197]
[125.69946289 62.99301147]
[136.18696594 52.26863098]
[146.35050964 41.23675537]
[156.18109131 29.90716171]
[166.01167297 18.57756805]
[175.84225464 7.24797487]
[165.40556335 -3.53928208]
[155.94877625 -15.19511509]
[147.54385376 -27.63081360]
[140.25476074 -40.75173569]
[134.13699341 -54.45801926]
[129.23709106 -68.64534760]
[125.59234619 -83.20574951]
[123.23050690 -98.02840424]
[122.16954803 -113.00049591]
[122.41754150 -128.00808716]
[123.97260284 -142.93696594]
[126.82289886 -157.67349243]
[130.94673157 -172.10551453]
[136.31271362 -186.12319946]
[142.88000488 -199.61987305]
[150.59863281 -212.49279785]
[159.40985107 -224.64399719]
[169.24658203 -235.98101807]
[180.03399658 -246.41755676]
[191.68995667 -255.87417603]
[204.12577820 -264.27893066]
[217.24679565 -271.56784058]
[230.95317078 -277.68542480]
[245.14056396 -282.58511353]
[259.70101929 -286.22964478]
[274.52371216 -288.59127808]
[289.49581909 -289.65203857]
[304.50341797 -289.40383911]
[319.43225098 -287.84857178]
[334.16873169 -284.99804688]
[348.60070801 -280.87402344]
[362.61831665 -275.50784302]
[376.11489868 -268.94036865]
[388.98770142 -261.22155762]
[401.13879395 -252.41017151]
[412.47567749 -242.57327271]
[422.91204834 -231.78572083]
[432.36853027 -220.12962341]
[440.77310181 -207.69369507]
[448.06182861 -194.57257080]
[454.17919922 -180.86610413]
[459.07870483 -166.67864990]
[462.72305298 -152.11814880]
[465.08447266 -137.29542542]
[466.14501953 -122.32329559]
[465.89657593 -107.31570435]
[464.34109497 -92.38687897]
[461.49041748 -77.65043640]
[457.36618042 -63.21852493]
[451.99978638 -49.20098495]
[445.43212891 -35.70450592]
[437.71313477 -22.83179665]
[428.90158081 -10.68083572]
[419.06451416 0.65590197]
[408.27682495 11.09213543]
[396.62060547 20.54843712]
[384.18453979 28.95283890]
[371.06332397 36.24137497]
[357.35678101 42.35857391]
[343.16925049 47.25788116]
[328.60867310 50.90200806]
[313.78591919 53.26322174]
[298.81378174 54.32355118]
[283.80621338 54.07492447]
[268.87741089 52.51923370]
[254.14099121 49.66832352]
[239.70913696 45.54388428]
[225.69168091 40.17731476]
[212.19528198 33.60945129]
[199.32269287 25.89028168]
[187.17184448 17.07855606]
[177.34126282 28.40814972]
[167.51068115 39.73774338]
[157.68011475 51.06733322]
[157.74343872 53.86985779]
[156.70046997 56.86632538]
[154.47177124 59.63549805]
[151.13172913 61.73516846]
[146.91134644 62.75613403]
[136.42384338 73.48051453]
[125.93634796 84.20489502]
[115.44884491 94.92927551]
[111.70935059 111.28141022]
[95.50769806 115.62684631]
[85.18103027 126.50617981]
[74.85436249 137.38551331]
[64.52769470 148.26484680]
[54.20102310 159.14418030]
[64.47598267 170.07801819]
[74.10997772 181.58061218]
[83.07158661 193.61442566]
[91.33158875 206.14022827]
[98.86303711 219.11717224]
[105.64135742 232.50289917]
[111.64443970 246.25376892]
[116.85272217 260.32492065]
[121.24919128 274.67044067]
[124.81952667 289.24359131]
[127.55207062 303.99676514]
[129.43791199 318.88189697]
[130.47090149 333.85040283]
[130.64767456 348.85348511]
[129.96765137 363.84219360]
[128.43304443 378.76760864]
[126.04885864 393.58108521]
[122.82287598 408.23428345]
[118.76562500 422.67944336]
[113.89032745 436.86938477]
[108.21289825 450.75787354]
[101.75183868 464.29962158]
[94.52824402 477.45037842]
[86.56565857 490.16732788]
[77.89006805 502.40896606]
[68.52976227 514.13537598]
[58.51527023 525.30822754]
[47.87926865 535.89117432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 182]
[81 181]
[82 180]
[83 179]
[84 178]
[87 176]
[88 175]
[89 174]
[90 173]
[91 168]
[92 167]
[93 166]
[94 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
