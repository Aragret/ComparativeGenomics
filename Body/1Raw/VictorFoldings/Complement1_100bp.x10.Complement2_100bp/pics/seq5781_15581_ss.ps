%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[95.08245850 737.99969482]
[80.07401276 738.22955322]
[65.10538483 737.11315918]
[50.29709244 734.65942383]
[35.76836395 730.88818359]
[21.63617897 725.82977295]
[8.01432514 719.52490234]
[-4.98752069 712.02435303]
[-17.26467323 703.38848877]
[-28.71828079 693.68688965]
[-39.25612640 682.99768066]
[-48.79336166 671.40679932]
[-57.25320053 659.00775146]
[-64.56752014 645.90020752]
[-70.67744446 632.18981934]
[-75.53376007 617.98693848]
[-79.09737396 603.40588379]
[-81.33959961 588.56408691]
[-82.24237061 573.58105469]
[-81.79843140 558.57739258]
[-80.01134491 543.67395020]
[-76.89551544 528.99072266]
[-72.47601318 514.64587402]
[-66.78842926 500.75497437]
[-59.87855911 487.42980957]
[-51.80203629 474.77767944]
[-42.62389374 462.90048218]
[-32.41802216 451.89382935]
[-21.26659966 441.84634399]
[-9.25941086 432.83892822]
[3.50686550 424.94409180]
[16.92944145 418.22540283]
[30.90024567 412.73696899]
[45.30678940 408.52297974]
[60.03308105 405.61737061]
[74.96054840 404.04351807]
[89.96899414 403.81408691]
[91.08464813 388.85565186]
[84.31538391 375.58813477]
[93.05767059 362.40167236]
[94.17331696 347.44320679]
[95.28896332 332.48477173]
[95.95874786 317.49972534]
[88.41179657 304.65866089]
[96.35370636 290.97521973]
[96.57703400 275.97689819]
[96.80036163 260.97854614]
[96.57703400 245.98020935]
[95.90724945 230.99517822]
[95.23745728 216.01013184]
[86.52510071 207.61839294]
[85.84445190 195.13958740]
[94.10501099 185.23371887]
[93.65840149 170.24037170]
[90.31714630 163.64811707]
[93.31843567 155.02084351]
[93.09510803 140.02250671]
[92.87178040 125.02416229]
[79.40987396 115.90807343]
[73.98687744 100.58106232]
[78.72007751 85.02719116]
[91.76150513 75.31909180]
[91.31489563 60.32573700]
[83.17014313 46.76205063]
[90.52507782 33.81005478]
[90.07846832 18.81670380]
[89.63186646 3.82335448]
[88.73905182 -11.15005112]
[87.40081787 -26.09023666]
[73.77371216 -37.05934906]
[72.32453156 -54.15363693]
[83.46337128 -66.75383759]
[81.90284729 -81.67243958]
[80.34233093 -96.59104919]
[78.78180695 -111.50965118]
[68.26589203 -117.05512238]
[61.79883194 -126.88761902]
[60.89055252 -138.50093079]
[65.65137482 -149.00094604]
[74.79319763 -155.82687378]
[73.67755127 -170.78532410]
[72.56189728 -185.74377441]
[71.44625092 -200.70222473]
[70.21927643 -215.65196228]
[68.88104248 -230.59214783]
[59.94340515 -243.64700317]
[66.51438141 -257.01382446]
[51.55052567 -258.61672974]
[37.18700027 -263.10842896]
[23.97590065 -270.31625366]
[12.42502308 -279.96319580]
[2.97835517 -291.67843628]
[-4.00099945 -305.01165771]
[-8.24477291 -319.45037842]
[-9.58984566 -334.43960571]
[-7.98451710 -349.40319824]
[-3.49049139 -363.76599121]
[3.71949291 -376.97592163]
[13.36830330 -388.52523804]
[25.08506584 -397.97003174]
[38.41941833 -404.94723511]
[52.85882568 -409.18865967]
[67.84827423 -410.53131104]
[82.81160736 -408.92355347]
[97.17367554 -404.42721558]
[110.38244629 -397.21508789]
[121.93019867 -387.56439209]
[131.37307739 -375.84609985]
[138.34811401 -362.51062012]
[142.58720398 -348.07052612]
[143.92742920 -333.08087158]
[142.31726074 -318.11779785]
[137.81858826 -303.75643921]
[130.60432434 -290.54885864]
[120.95177460 -279.00265503]
[109.23195648 -269.56167603]
[95.89533997 -262.58880615]
[81.45456696 -258.35205078]
[90.29648590 -246.36581421]
[83.82122803 -231.93038940]
[85.15946198 -216.99020386]
[88.88717651 -210.60850525]
[86.40470886 -201.81787109]
[87.52035522 -186.85942078]
[88.63600159 -171.90097046]
[89.75164795 -156.94252014]
[104.31686401 -145.85331726]
[106.18302155 -127.32144165]
[93.70040894 -113.07017517]
[95.26093292 -98.15157318]
[96.82145691 -83.23296356]
[98.38198090 -68.31436157]
[109.42845154 -61.68074036]
[114.71617889 -49.71737671]
[112.10974121 -36.70134735]
[102.34100342 -27.42847061]
[103.67923737 -12.48828506]
[105.74139404 -10.58943462]
[107.17564392 -7.75932217]
[107.62351990 -4.23301888]
[106.81817627 -0.37090197]
[104.62521362 3.37674856]
[105.07182312 18.37009811]
[105.51842499 33.36344910]
[113.63123322 45.85470963]
[106.30825043 59.87913132]
[106.75485229 74.87248230]
[118.24262238 81.44664764]
[125.00985718 92.82175446]
[125.30543518 106.05433655]
[119.05287933 117.72026825]
[107.87011719 124.80083466]
[108.09344482 139.79917908]
[108.31677246 154.79751587]
[108.65174866 169.79376221]
[109.09835815 184.78712463]
[119.13711548 200.22424316]
[110.22249603 215.34034729]
[110.89228821 230.32539368]
[111.56207275 245.31042480]
[114.02769470 248.88459778]
[115.11805725 252.67611694]
[114.93370056 256.22595215]
[113.71391296 259.15490723]
[111.79869843 261.20187378]
[111.57537079 276.20022583]
[111.35204315 291.19854736]
[118.88301849 305.11239624]
[110.95708466 317.72305298]
[113.20560455 321.43765259]
[114.06835938 325.28735352]
[113.67303467 328.81991577]
[112.28107452 331.67108154]
[110.24742126 333.60040283]
[109.13176727 348.55886841]
[108.01612091 363.51733398]
[114.70558167 377.85473633]
[106.04309845 389.97128296]
[104.92745209 404.92974854]
[119.73581696 407.38299561]
[134.26466370 411.15380859]
[148.39700317 416.21179199]
[162.01904297 422.51623535]
[175.02111816 430.01638794]
[187.29853821 438.65185547]
[198.75244141 448.35311890]
[209.29061890 459.04202271]
[218.82820129 470.63256836]
[227.28842163 483.03140259]
[234.60314941 496.13870239]
[240.71348572 509.84890747]
[245.57023621 524.05169678]
[249.13429260 538.63262939]
[251.37696838 553.47430420]
[252.28019714 568.45733643]
[251.83671570 583.46099854]
[250.05009460 598.36450195]
[246.93470764 613.04779053]
[242.51564026 627.39276123]
[236.82849121 641.28387451]
[229.91902161 654.60925293]
[221.84288025 667.26159668]
[212.66510010 679.13909912]
[202.45956421 690.14605713]
[191.30845642 700.19390869]
[179.30154419 709.20166016]
[166.53550720 717.09692383]
[153.11312866 723.81597900]
[139.14250183 729.30487061]
[124.73607635 733.51928711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 179]
[38 178]
[40 176]
[41 175]
[42 174]
[43 169]
[45 167]
[46 166]
[47 165]
[48 160]
[49 159]
[50 158]
[53 156]
[54 155]
[56 154]
[57 153]
[58 152]
[62 147]
[63 146]
[65 144]
[66 143]
[67 142]
[68 137]
[69 136]
[72 132]
[73 131]
[74 130]
[75 129]
[80 126]
[81 125]
[82 124]
[83 123]
[84 121]
[85 120]
[87 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
