%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[173.96463013 692.77026367]
[161.90808105 683.83666992]
[150.47515869 674.11773682]
[139.71693420 663.65686035]
[129.68144226 652.50079346]
[120.41349792 640.69927979]
[111.95451355 628.30517578]
[104.34225464 615.37371826]
[97.61073303 601.96264648]
[91.79000092 588.13195801]
[86.90605927 573.94335938]
[82.98072052 559.46020508]
[80.03152466 544.74725342]
[78.07163239 529.87017822]
[77.10980225 514.89538574]
[77.15032196 499.88980103]
[78.19302368 484.92041016]
[80.23324585 470.05410767]
[83.26187897 455.35729980]
[87.26538849 440.89556885]
[92.22589111 426.73358154]
[98.12124634 412.93450928]
[104.92510986 399.56002808]
[112.60710907 386.66986084]
[121.13291168 374.32159424]
[130.46446228 362.57037354]
[140.56007385 351.46865845]
[151.37464905 341.06604004]
[162.85989380 331.40899658]
[174.96450806 322.54067993]
[187.63444519 314.50064087]
[200.81309509 307.32482910]
[194.53573608 293.70150757]
[188.25837708 280.07818604]
[181.98101807 266.45486450]
[175.70365906 252.83155823]
[169.02346802 239.40118408]
[161.94636536 226.17565918]
[149.11955261 218.60450745]
[149.43052673 202.78636169]
[142.25515747 189.61387634]
[134.98193359 176.49519348]
[119.47364807 168.28178406]
[119.94666290 149.87368774]
[112.47891998 136.86473083]
[105.01117706 123.85578156]
[97.54343414 110.84683228]
[92.58992767 125.00531769]
[79.13611603 131.63818359]
[64.88895416 126.94581604]
[58.00985718 113.61622620]
[62.43949509 99.28519440]
[75.64036560 92.16220093]
[90.04965973 96.32701874]
[83.77230072 82.70370483]
[77.49494171 69.08039093]
[71.21758270 55.45707321]
[64.94021606 41.83375549]
[52.13779449 32.53813934]
[53.83872986 17.74097252]
[47.56136703 4.11765718]
[34.75894547 -5.17796183]
[36.45988083 -19.97512627]
[36.07205582 -4.98014116]
[32.51298523 9.59151077]
[25.94458771 23.07691574]
[16.66567802 34.86257553]
[5.09838486 44.41232681]
[-8.23105621 51.29171753]
[-22.71624565 55.18777847]
[-37.69820404 55.92326355]
[-52.49534988 53.46472168]
[-66.43451691 47.92399216]
[-78.88156128 39.55314255]
[-89.27022552 28.73299217]
[-97.12789917 15.95578671]
[-102.09709930 1.80280185]
[-103.95177460 -13.08209610]
[-102.60754395 -28.02174187]
[-98.12556458 -42.33648300]
[-90.70973206 -55.37509537]
[-80.69741058 -66.54440308]
[-68.54410553 -75.33628845]
[-54.80270767 -81.35076904]
[-40.09835815 -84.31423187]
[-25.10000801 -84.09185028]
[-10.48997879 -80.69375610]
[3.06706762 -74.27452850]
[14.95437717 -65.12619781]
[24.63115692 -53.66496277]
[31.65878487 -40.40820312]
[31.21217918 -55.40155411]
[23.06742668 -68.96524048]
[30.42235756 -81.91723633]
[29.97575188 -96.91059113]
[29.52914619 -111.90393829]
[29.08254051 -126.89728546]
[28.63593483 -141.89064026]
[14.67238140 -148.05358887]
[4.77219152 -159.67033386]
[0.90105492 -174.43438721]
[3.82758856 -189.41430664]
[12.97072697 -201.63584900]
[26.51509476 -208.67237854]
[41.77144623 -209.12681580]
[55.71062088 -202.90893555]
[65.56498718 -191.25328064]
[69.37795258 -176.47410583]
[66.39244843 -161.50581360]
[57.20125580 -149.32038879]
[43.62928391 -142.33724976]
[44.07588959 -127.34389496]
[44.52249527 -112.35054016]
[44.96910095 -97.35719299]
[45.41570663 -82.36384583]
[53.52851486 -69.87258148]
[46.20552826 -55.84815979]
[46.65213394 -40.85480881]
[50.08319473 -26.25248718]
[62.43661880 -17.93129921]
[61.18468475 -2.15970349]
[67.46204376 11.46361256]
[79.81546783 19.78480148]
[78.56353760 35.55639648]
[84.84089661 49.17971420]
[91.11825562 62.80302811]
[97.39561462 76.42634583]
[103.67298126 90.04965973]
[110.55239105 103.37908936]
[118.02013397 116.38804626]
[125.48786926 129.39698792]
[132.95561218 142.40594482]
[145.17929077 146.52230835]
[151.13137817 157.51123047]
[148.10061646 169.22195435]
[155.37385559 182.34065247]
[162.27185059 188.32858276]
[162.65605164 195.70925903]
[175.98905945 204.22637939]
[175.17189026 219.09855652]
[182.24899292 232.32408142]
[186.01663208 234.48251343]
[188.63783264 237.43104553]
[190.00497437 240.71224976]
[190.17007446 243.88075256]
[189.32698059 246.55419922]
[195.60433960 260.17752075]
[201.88169861 273.80084229]
[208.15905762 287.42413330]
[214.43641663 301.04745483]
[228.45379639 295.69186401]
[242.79759216 291.28451538]
[257.40371704 287.84503174]
[272.20697021 285.38882446]
[287.14123535 283.92687988]
[302.13980103 283.46569824]
[317.13565063 284.00732422]
[332.06185913 285.54937744]
[346.85171509 288.08493042]
[361.43920898 291.60269165]
[375.75915527 296.08691406]
[389.74758911 301.51763916]
[403.34207153 307.87051392]
[416.48187256 315.11724854]
[429.10830688 323.22543335]
[441.16494751 332.15887451]
[452.59799194 341.87768555]
[463.35635376 352.33840942]
[473.39199829 363.49435425]
[482.66006470 375.29571533]
[491.11920166 387.68975830]
[498.73162842 400.62112427]
[505.46331787 414.03207397]
[511.28424072 427.86270142]
[516.16833496 442.05123901]
[520.09387207 456.53430176]
[523.04327393 471.24725342]
[525.00335693 486.12432861]
[525.96533203 501.09909058]
[525.92498779 516.10467529]
[524.88250732 531.07403564]
[522.84246826 545.94036865]
[519.81402588 560.63726807]
[515.81066895 575.09899902]
[510.85037231 589.26110840]
[504.95520020 603.06024170]
[498.15148926 616.43481445]
[490.46966553 629.32507324]
[481.94400024 641.67340088]
[472.61260986 653.42480469]
[462.51715088 664.52661133]
[451.70269775 674.92938232]
[440.21755981 684.58654785]
[428.11306763 693.45501709]
[415.44323730 701.49523926]
[402.26464844 708.67120361]
[388.63623047 714.95092773]
[374.61877441 720.30633545]
[360.27493286 724.71350098]
[345.66873169 728.15283203]
[330.86544800 730.60882568]
[315.93118286 732.07061768]
[300.93261719 732.53161621]
[285.93676758 731.98974609]
[271.01058960 730.44757080]
[256.22076416 727.91180420]
[241.63331604 724.39385986]
[227.31343079 719.90942383]
[213.32504272 714.47857666]
[199.73065186 708.12548828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 141]
[38 140]
[40 138]
[41 136]
[42 135]
[44 132]
[45 131]
[46 130]
[47 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[60 122]
[61 121]
[63 119]
[91 118]
[92 117]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
