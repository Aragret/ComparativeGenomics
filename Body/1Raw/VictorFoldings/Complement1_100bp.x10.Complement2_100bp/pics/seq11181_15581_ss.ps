%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[232.64271545 276.36065674]
[220.54695129 267.48974609]
[208.45120239 258.61886597]
[196.35545349 249.74795532]
[184.25970459 240.87705994]
[172.16395569 232.00616455]
[179.06253052 245.32568359]
[183.26884460 259.72384644]
[184.62562561 274.66235352]
[183.08215332 289.58273315]
[178.69613647 303.92718506]
[171.63154602 317.15939331]
[162.15249634 328.78469849]
[150.61337280 338.36843872]
[137.44555664 345.55239868]
[123.14136505 350.06790161]
[108.23554993 351.74621582]
[93.28538513 350.52453613]
[78.84978485 346.44857788]
[65.46844482 339.67068481]
[53.64162445 330.44427490]
[43.81148911 319.11431885]
[36.34554291 306.10433960]
[31.52290154 291.90072632]
[29.52386665 277.03454590]
[30.42317200 262.06152344]
[34.18719864 247.54145813]
[40.67522430 234.01719666]
[49.64468765 221.99435425]
[60.76025772 211.92240906]
[73.60637665 204.17791748]
[87.70278168 199.05039978]
[102.52246094 196.73155212]
[117.51137543 197.30807495]
[132.10916138 200.75840759]
[145.77005005 206.95356750]
[157.97872925 215.65792847]
[150.90162659 202.43240356]
[143.82452393 189.20687866]
[136.74742126 175.98133850]
[129.67031860 162.75581360]
[122.59320831 149.53028870]
[114.93260956 136.63395691]
[106.70380402 124.09256744]
[98.47499847 111.55116272]
[98.59397888 126.55068970]
[92.27152252 140.15313721]
[80.72839355 149.73208618]
[66.19338989 153.43798828]
[51.47299576 150.55528259]
[39.40948486 141.64059448]
[32.33213425 128.41520691]
[31.60746574 113.43271637]
[37.37540436 99.58602905]
[48.52225494 89.54870605]
[62.89572906 85.25881195]
[77.72053528 87.54464722]
[90.13511658 95.96578979]
[84.26615143 82.16161346]
[69.88414001 76.17868042]
[64.12882233 62.09568024]
[69.92126465 48.42149734]
[64.05229950 34.61732101]
[58.18334198 20.81314468]
[52.31438065 7.00896788]
[39.79439926 -2.66370583]
[41.93514633 -17.40366745]
[30.28722763 -22.94341469]
[25.68314362 -34.56177139]
[30.08402252 -45.82937241]
[24.42123604 -59.71939850]
[18.75844955 -73.60942841]
[13.09566307 -87.49945068]
[-1.53935838 -84.06977844]
[-16.53072548 -82.97188568]
[-31.50926399 -84.23278809]
[-46.10611343 -87.82145691]
[-59.96181107 -93.64949799]
[-72.73515320 -101.57341003]
[-84.11157227 -111.39804077]
[-93.81092834 -122.88146210]
[-101.59436035 -135.74089050]
[-107.27019501 -149.65962219]
[-110.69865417 -164.29493713]
[-111.79531860 -179.28639221]
[-110.53317261 -194.26483154]
[-106.94330597 -208.86137390]
[-101.11412048 -222.71659851]
[-93.18915558 -235.48927307]
[-83.36358643 -246.86489868]
[-71.87936401 -256.56329346]
[-59.01929855 -264.34567261]
[-45.10009003 -270.02035522]
[-30.46450043 -273.44760132]
[-15.47295189 -274.54302979]
[-0.49462241 -273.27966309]
[14.10163403 -269.68859863]
[27.95636940 -263.85824585]
[40.72840118 -255.93223572]
[52.10320282 -246.10572815]
[61.80066299 -234.62069702]
[69.58197784 -221.75999451]
[75.25550842 -207.84031677]
[78.68155670 -193.20445251]
[79.77574921 -178.21281433]
[78.51113129 -163.23458862]
[74.91885376 -148.63862610]
[69.08737946 -134.78436279]
[61.16030884 -122.01299286]
[51.33285904 -110.63899994]
[39.84703827 -100.94248962]
[26.98568916 -93.16223907]
[32.64847565 -79.27220917]
[38.31126404 -65.38218689]
[43.97404861 -51.49215698]
[58.39643860 -41.49407959]
[55.73932266 -23.27262878]
[67.83951569 -14.58732128]
[66.11856079 1.14000714]
[71.98751831 14.94418430]
[77.85647583 28.74836159]
[83.72544098 42.55253601]
[97.59175110 47.86863708]
[103.74036407 61.78442764]
[98.07032776 76.29264832]
[103.93929291 90.09682465]
[111.01639557 103.32235718]
[119.24520111 115.86375427]
[127.47401428 128.40515137]
[131.57600403 113.97693634]
[144.61117554 106.55504608]
[159.11238098 110.39108276]
[166.77265930 123.28759003]
[163.20387268 137.85687256]
[150.45037842 145.75296021]
[135.81874084 142.45318604]
[142.89584351 155.67871094]
[149.97294617 168.90423584]
[157.05004883 182.12976074]
[164.12715149 195.35530090]
[171.20426941 208.58082581]
[181.03485107 219.91041565]
[193.13059998 228.78131104]
[205.22634888 237.65220642]
[217.32209778 246.52310181]
[229.41784668 255.39399719]
[241.51361084 264.26489258]
[251.50135803 253.05821228]
[262.50915527 242.85168457]
[274.43731689 233.73774719]
[287.17779541 225.79893494]
[300.61523438 219.10714722]
[314.62792969 213.72299194]
[329.08895874 209.69520569]
[343.86740112 207.06030273]
[358.82937622 205.84211731]
[373.83938599 206.05168152]
[388.76153564 207.68711853]
[403.46063232 210.73359680]
[417.80358887 215.16354370]
[431.66049194 220.93682861]
[444.90588379 228.00117493]
[457.41973877 236.29258728]
[469.08880615 245.73599243]
[479.80734253 256.24588013]
[489.47833252 267.72702026]
[498.01416016 280.07550049]
[505.33749390 293.17941284]
[511.38208008 306.92016602]
[516.09313965 321.17324829]
[519.42797852 335.80963135]
[521.35644531 350.69674683]
[521.86102295 365.69973755]
[520.93725586 380.68276978]
[518.59332275 395.51016235]
[514.85064697 410.04757690]
[509.74298096 424.16339111]
[503.31661987 437.72979736]
[495.62982178 450.62387085]
[486.75213623 462.72891235]
[476.76397705 473.93521118]
[465.75579834 484.14132690]
[453.82730103 493.25485229]
[441.08651733 501.19317627]
[427.64886475 507.88449097]
[413.63595581 513.26812744]
[399.17477417 517.29541016]
[384.39624023 519.92974854]
[369.43423462 521.14739990]
[354.42419434 520.93725586]
[339.50213623 519.30133057]
[324.80313110 516.25427246]
[310.46035767 511.82382202]
[296.60363770 506.05001831]
[283.35852051 498.98519897]
[270.84497070 490.69332886]
[259.17623901 481.24951172]
[248.45808411 470.73922729]
[238.78752136 459.25772095]
[230.25215149 446.90896606]
[222.92927551 433.80474854]
[216.88520813 420.06378174]
[212.17466736 405.81051636]
[208.84034729 391.17401123]
[206.91242981 376.28686523]
[206.40837097 361.28384399]
[207.33274841 346.30084229]
[209.67716980 331.47354126]
[213.42041016 316.93624878]
[218.52857971 302.82061768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[43 129]
[44 128]
[45 127]
[58 126]
[59 125]
[62 122]
[63 121]
[64 120]
[65 119]
[67 117]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
