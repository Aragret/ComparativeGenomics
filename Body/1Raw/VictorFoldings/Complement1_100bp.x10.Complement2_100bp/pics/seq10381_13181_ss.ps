%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[232.09674072 237.66392517]
[238.50271606 224.08964539]
[246.08334351 211.13464355]
[233.85685730 202.44482422]
[221.63037109 193.75500488]
[209.40388489 185.06517029]
[197.17739868 176.37535095]
[180.72991943 179.88520813]
[166.55381775 170.22326660]
[163.69638062 152.96479797]
[151.34187317 144.45797729]
[138.98736572 135.95115662]
[126.63285828 127.44432068]
[114.27835083 118.93749237]
[101.92384338 110.43067169]
[89.26131439 102.38949585]
[76.30831909 94.82511902]
[63.35531998 87.26073456]
[47.53655243 86.98284149]
[40.44799042 73.88316345]
[27.49499130 66.31877899]
[14.84451103 68.83436584]
[4.21165657 62.26731110]
[1.00994301 50.60216904]
[-11.82899761 42.84577560]
[-24.66793823 35.08938599]
[-37.50687790 27.33299446]
[-46.15304565 39.59809494]
[-55.64284515 51.22275162]
[-65.92900085 62.14904785]
[-76.96026611 72.32254791]
[-88.68168640 81.69256592]
[-101.03485870 90.21242523]
[-113.95825195 97.83967590]
[-127.38746643 104.53632355]
[-141.25559998 110.26899719]
[-155.49357605 115.00914001]
[-170.03045654 118.73314667]
[-184.79380798 121.42245483]
[-199.71008301 123.06365967]
[-214.70497131 123.64859772]
[-229.70378113 123.17435455]
[-244.63175964 121.64328003]
[-259.41455078 119.06301117]
[-273.97851562 115.44640350]
[-288.25109863 110.81147766]
[-302.16116333 105.18131256]
[-315.63946533 98.58396912]
[-328.61877441 91.05230713]
[-341.03451538 82.62386322]
[-352.82476807 73.34060669]
[-363.93081665 63.24880600]
[-374.29733276 52.39873123]
[-383.87268066 40.84443283]
[-392.60913086 28.64348030]
[-400.46319580 15.85665703]
[-407.39569092 2.54766631]
[-413.37213135 -11.21718597]
[-418.36270142 -25.36932373]
[-422.34259033 -39.83824158]
[-425.29190063 -54.55185318]
[-427.19601440 -69.43685913]
[-428.04537964 -84.41909790]
[-427.83581543 -99.42392731]
[-426.56832886 -114.37660217]
[-424.24923706 -129.20262146]
[-420.89010620 -143.82810974]
[-416.50769043 -158.18023682]
[-411.12380981 -172.18746948]
[-404.76525879 -185.78002930]
[-397.46374512 -198.89021301]
[-389.25561523 -211.45268250]
[-380.18182373 -223.40487671]
[-370.28750610 -234.68724060]
[-359.62200928 -245.24354553]
[-348.23840332 -255.02124023]
[-336.19348145 -263.97155762]
[-323.54721069 -272.04995728]
[-310.36257935 -279.21618652]
[-296.70529175 -285.43450928]
[-282.64340210 -290.67398071]
[-268.24694824 -294.90847778]
[-253.58766174 -298.11691284]
[-238.73855591 -300.28329468]
[-223.77363586 -301.39685059]
[-208.76744080 -301.45202637]
[-193.79473877 -300.44851685]
[-178.93011475 -298.39132690]
[-164.24763489 -295.29074097]
[-149.82043457 -291.16220093]
[-135.72041321 -286.02624512]
[-122.01778412 -279.90847778]
[-108.78083801 -272.83938599]
[-96.07551575 -264.85415649]
[-83.96511078 -255.99259949]
[-72.50996399 -246.29887390]
[-61.76713943 -235.82124329]
[-51.79016113 -224.61192322]
[-42.62873077 -212.72676086]
[-34.32849503 -200.22496033]
[-26.93079948 -187.16880798]
[-20.47250557 -173.62335205]
[-14.98578548 -159.65608215]
[-10.49797440 -145.33656311]
[-7.03143072 -130.73616028]
[-4.60342550 -115.92758942]
[-3.22605395 -100.98463440]
[-2.90617847 -85.98175049]
[-3.64539313 -70.99367523]
[-5.44001436 -56.09507370]
[-8.28110218 -41.36017609]
[-12.15450191 -26.86239624]
[-17.04091644 -12.67395401]
[-22.91600037 1.13446045]
[-29.75048637 14.49405384]
[-16.91154671 22.25044441]
[-4.07260609 30.00683594]
[8.76633453 37.76322937]
[26.30514336 37.16563034]
[35.05936813 53.36578369]
[48.01236725 60.93016434]
[62.90464783 60.66700745]
[70.91970062 74.30773926]
[83.87269592 81.87211609]
[96.82569885 89.43650055]
[95.59842682 74.48678589]
[106.41613770 64.09558868]
[121.30442047 65.92289734]
[129.28817749 78.62169647]
[124.48209381 92.83090210]
[110.43067169 98.07615662]
[122.78517914 106.58298492]
[135.13967896 115.08981323]
[147.49420166 123.59664154]
[159.84870911 132.10346985]
[172.20321655 140.61029053]
[185.07954407 136.65875244]
[197.69654846 140.78450012]
[205.51770020 151.26837158]
[205.86721802 164.14886475]
[218.09370422 172.83869934]
[230.32019043 181.52851868]
[242.54667664 190.21833801]
[254.77316284 198.90817261]
[264.51568604 187.48971558]
[275.22924805 176.97698975]
[286.82998657 167.45228577]
[299.22714233 158.99014282]
[312.32369995 151.65676880]
[326.01712036 145.50959778]
[340.20025635 140.59671021]
[354.76208496 136.95657349]
[369.58865356 134.61766052]
[384.56390381 133.59828186]
[399.57067871 133.90643311]
[414.49145508 135.53968811]
[429.20953369 138.48526001]
[443.60964966 142.72009277]
[457.57916260 148.21105957]
[471.00869751 154.91517639]
[483.79315186 162.77998352]
[495.83248901 171.74389648]
[507.03247070 181.73678589]
[517.30548096 192.68045044]
[526.57104492 204.48921204]
[534.75665283 217.07066345]
[541.79833984 230.32632446]
[547.64086914 244.15248108]
[552.23858643 258.44088745]
[555.55548096 273.07974243]
[557.56561279 287.95443726]
[558.25317383 302.94860840]
[557.61291504 317.94485474]
[555.64978027 332.82583618]
[552.37908936 347.47509766]
[547.82653809 361.77795410]
[542.02764893 375.62246704]
[535.02789307 388.90029907]
[526.88201904 401.50753784]
[517.65380859 413.34548950]
[507.41540527 424.32153320]
[496.24703979 434.34973145]
[484.23605347 443.35162354]
[471.47647095 451.25674438]
[458.06817627 458.00320435]
[444.11608887 463.53826904]
[429.72940063 467.81854248]
[415.02072144 470.81057739]
[400.10513306 472.49090576]
[385.09942627 472.84643555]
[370.12103271 471.87435913]
[355.28713989 469.58224487]
[340.71389771 465.98809814]
[326.51531982 461.12002563]
[312.80258179 455.01611328]
[299.68295288 447.72412109]
[287.25912476 439.30117798]
[275.62835693 429.81314087]
[264.88165283 419.33428955]
[255.10314941 407.94665527]
[246.36935425 395.73934937]
[238.74862671 382.80789185]
[232.30061340 369.25354004]
[227.07579041 355.18231201]
[223.11502075 340.70440674]
[220.44934082 325.93310547]
[219.09959412 310.98397827]
[219.07633972 295.97409058]
[220.37976074 281.02087402]
[222.99966431 266.24136353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 144]
[4 143]
[5 142]
[6 141]
[7 140]
[10 136]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 125]
[17 124]
[18 123]
[20 121]
[21 120]
[24 118]
[25 117]
[26 116]
[27 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
