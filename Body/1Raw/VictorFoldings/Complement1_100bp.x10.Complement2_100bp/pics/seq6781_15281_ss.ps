%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[147.34913635 679.98242188]
[138.98187256 667.50775146]
[132.27856445 654.06549072]
[127.34931183 639.87640381]
[124.27503967 625.17340088]
[123.10623169 610.19799805]
[123.86209106 595.19610596]
[126.53019714 580.41406250]
[131.06674194 566.09454346]
[137.39721680 552.47277832]
[145.41769409 539.77233887]
[154.99645996 528.20190430]
[165.97621155 517.95135498]
[178.17666626 509.18908691]
[191.39746094 502.05895996]
[205.42152405 496.67807007]
[201.88185120 482.10171509]
[198.34217834 467.52532959]
[194.47787476 453.03164673]
[190.29086304 438.62786865]
[186.10385132 424.22406006]
[181.21823120 418.67858887]
[181.96343994 409.57461548]
[177.99134827 395.11007690]
[174.01925659 380.64556885]
[163.18789673 370.42150879]
[166.99461365 355.06509399]
[163.02252197 340.60058594]
[159.05043030 326.13604736]
[143.32708740 327.38284302]
[127.65589905 325.55709839]
[112.63172150 320.72634888]
[98.82524109 313.07226562]
[86.76123047 302.88375854]
[76.89860535 290.54614258]
[69.61299896 276.52648926]
[65.18243408 261.35604858]
[63.77671432 245.60995483]
[65.45092010 229.88562012]
[70.14326477 214.77993774]
[77.67734528 200.86662292]
[87.76879120 188.67451477]
[100.03600311 178.66737366]
[114.01457214 171.22630310]
[109.61357880 156.88645935]
[105.21257782 142.54661560]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[71.64557648 33.17469025]
[60.19982910 22.25198746]
[63.86243057 7.81472301]
[52.85404587 1.09324610]
[49.48365784 -10.94104862]
[55.03287888 -21.68966293]
[50.36907578 -7.43312263]
[39.67868042 3.08901620]
[25.34995079 7.52608156]
[10.58396626 4.88682127]
[-1.32051635 -4.23914671]
[-7.70400524 -17.81305885]
[-7.14041185 -32.80246735]
[0.24435444 -45.85869980]
[12.80051899 -54.06496048]
[27.72300148 -55.58795166]
[41.67808151 -50.08743286]
[51.54817200 -38.79221344]
[49.76570511 -53.68592834]
[47.98323822 -68.57964325]
[45.31744385 -83.34086609]
[41.77777100 -97.91723633]
[31.00244522 -109.50183868]
[35.51787186 -123.69550323]
[31.97820091 -138.27188110]
[28.43852806 -152.84825134]
[24.89885521 -167.42463684]
[9.89056873 -166.46420288]
[-5.05646563 -168.12471008]
[-19.48802376 -172.35569763]
[-32.96554565 -179.02859497]
[-45.07946396 -187.94061279]
[-55.46165466 -198.82092285]
[-63.79661179 -211.33889771]
[-69.83104706 -225.11412048]
[-73.38157654 -239.72798157]
[-74.34030151 -254.73637390]
[-72.67810059 -269.68322754]
[-68.44547272 -284.11428833]
[-61.77104950 -297.59106445]
[-52.85765839 -309.70397949]
[-41.97616577 -320.08493042]
[-29.45724869 -328.41845703]
[-15.68134308 -334.45132446]
[-1.06708193 -338.00021362]
[13.94142246 -338.95724487]
[28.88808060 -337.29333496]
[43.31867599 -333.05908203]
[56.79468536 -326.38311768]
[68.90658569 -317.46835327]
[79.28630829 -306.58569336]
[87.61842346 -294.06582642]
[93.64972687 -280.28924561]
[97.19694519 -265.67456055]
[98.15227509 -250.66595459]
[96.48667908 -235.71948242]
[92.25077820 -221.28936768]
[85.57329559 -207.81411743]
[76.65715790 -195.70323181]
[65.77331543 -185.32475281]
[53.25250626 -176.99404907]
[39.47523117 -170.96430969]
[43.01490402 -156.38792419]
[46.55457687 -141.81155396]
[50.09424973 -127.23517609]
[60.61639404 -116.69317627]
[56.35414505 -101.45690918]
[59.89381790 -86.88053894]
[66.82557678 -100.18282318]
[80.20055389 -106.97325134]
[95.03022003 -104.71915436]
[105.78347778 -94.26126862]
[108.44962311 -79.50011444]
[102.03425598 -65.94123840]
[88.93014526 -58.64177322]
[74.02479553 -60.32423401]
[62.87695694 -70.36211395]
[64.65942383 -55.46839523]
[66.44188690 -40.57467651]
[69.43666077 -25.87667465]
[82.74064636 -14.43241596]
[78.20227814 3.41372490]
[89.33323669 13.31074429]
[85.98542786 28.77369118]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[119.55242157 138.14561462]
[123.95342255 152.48545837]
[128.35441589 166.82531738]
[142.51988220 165.17257690]
[156.75262451 166.02059937]
[170.61465454 169.34201050]
[183.67965698 175.03340149]
[195.54600525 182.91844177]
[205.84918213 192.75340271]
[214.27294922 204.23471069]
[220.55905151 217.00823975]
[224.51515198 230.68032837]
[226.02069092 244.82981873]
[225.03056335 259.02108765]
[221.57650757 272.81747437]
[215.76603699 285.79467773]
[207.77909851 297.55380249]
[197.86257935 307.73361206]
[186.32257080 316.02166748]
[173.51495361 322.16397095]
[177.48704529 336.62847900]
[181.45913696 351.09301758]
[192.57460022 362.35165405]
[188.48377991 376.67346191]
[192.45587158 391.13796997]
[196.42797852 405.60250854]
[200.50764465 420.03704834]
[204.69465637 434.44085693]
[208.88166809 448.84463501]
[212.65090942 452.45568848]
[214.47564697 456.72460938]
[214.43090820 460.80050659]
[212.91856384 463.98565674]
[216.45823669 478.56204224]
[219.99790955 493.13839722]
[234.92791748 491.48818970]
[249.94636536 491.76080322]
[264.80664062 493.95175171]
[279.26473999 498.02505493]
[293.08325195 503.91381836]
[306.03521729 511.52133179]
[317.90798950 520.72271729]
[328.50662231 531.36688232]
[337.65704346 543.27899170]
[345.20901489 556.26342773]
[351.03848267 570.10705566]
[355.04980469 584.58245850]
[357.17703247 599.45196533]
[357.38528442 614.47149658]
[355.67111206 629.39428711]
[352.06265259 643.97534180]
[346.61920166 657.97521973]
[339.43014526 671.16406250]
[330.61349487 683.32531738]
[320.31405640 694.25915527]
[308.70092773 703.78619385]
[295.96484375 711.74987793]
[282.31494141 718.01947021]
[267.97531128 722.49206543]
[253.18148804 725.09411621]
[238.17636108 725.78302002]
[223.20634460 724.54736328]
[208.51724243 721.40747070]
[194.35028076 716.41491699]
[180.93809509 709.65167236]
[168.50091553 701.22882080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 179]
[17 178]
[18 177]
[19 173]
[20 172]
[21 171]
[23 170]
[24 169]
[25 168]
[27 166]
[28 165]
[29 164]
[44 147]
[45 146]
[46 145]
[47 144]
[48 143]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[56 135]
[59 133]
[71 132]
[72 131]
[73 130]
[74 121]
[75 120]
[77 118]
[78 117]
[79 116]
[80 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
