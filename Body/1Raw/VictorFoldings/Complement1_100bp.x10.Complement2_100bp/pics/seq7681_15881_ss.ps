%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[152.66954041 586.24707031]
[158.81828308 572.49426270]
[167.87358093 560.45471191]
[179.38121033 550.73248291]
[192.76397705 543.81518555]
[189.00767517 529.29309082]
[185.25137329 514.77105713]
[181.49507141 500.24899292]
[170.81713867 489.86480713]
[174.85206604 474.56677246]
[171.09576416 460.04470825]
[167.33946228 445.52264404]
[164.50325012 443.42785645]
[162.54075623 439.85522461]
[162.13552856 435.23037720]
[163.75515747 430.26812744]
[160.65104675 415.59283447]
[157.54693604 400.91754150]
[154.44282532 386.24224854]
[151.33871460 371.56692505]
[135.09963989 370.11416626]
[120.08514404 363.71176147]
[107.76654053 352.97457886]
[99.35483551 338.94290161]
[95.68166351 322.98159790]
[97.11709595 306.64743042]
[103.53234100 291.53710938]
[114.31129456 279.13131714]
[128.40959167 270.64953613]
[124.86991882 256.07315063]
[121.33025360 241.49678040]
[117.79058075 226.92041016]
[114.25090790 212.34403992]
[103.72875977 201.80203247]
[107.99100494 186.56576538]
[105.66998291 184.99383545]
[103.83177948 182.40779114]
[102.86576843 178.98693848]
[103.08928680 175.04808044]
[104.70205688 171.01658630]
[102.03626251 156.25537109]
[99.37046814 141.49415588]
[95.08827209 135.47048950]
[96.77658081 126.49343109]
[94.33084869 111.69416046]
[91.44557953 96.97427368]
[88.12332153 82.34680939]
[84.80105591 67.71935272]
[81.47879791 53.09188843]
[78.15653992 38.46443176]
[74.83428192 23.83696938]
[71.51202393 9.20950985]
[68.18975830 -5.41795063]
[64.86750031 -20.04541016]
[61.11120224 -34.56747055]
[56.92419052 -48.97125244]
[52.73717880 -63.37503433]
[48.55016708 -77.77881622]
[43.93615723 -92.05155182]
[38.89924240 -106.18058014]
[33.86232758 -120.30960846]
[28.82541084 -134.43864441]
[23.78849411 -148.56767273]
[18.75157738 -162.69670105]
[12.92220879 -169.72921753]
[13.74655819 -177.07374573]
[8.92056084 -191.27619934]
[1.33614826 -178.33493042]
[-13.14227200 -174.41378784]
[-26.22080421 -181.75898743]
[-30.40746880 -196.16287231]
[-23.30395699 -209.37423706]
[-8.97948170 -213.82501221]
[4.35962963 -206.96630859]
[-6.41569614 -218.55091858]
[-1.90026796 -232.74458313]
[-12.48906708 -240.10937500]
[-15.13718414 -252.32293701]
[-8.95803165 -262.72219849]
[-12.28029060 -277.34967041]
[-15.60255051 -291.97711182]
[-18.92481041 -306.60458374]
[-33.96298981 -306.10491943]
[-48.82392883 -308.46057129]
[-62.97040939 -313.58633423]
[-75.89105225 -321.29693604]
[-87.11878204 -331.31365967]
[-96.24771881 -343.27438354]
[-102.94786072 -356.74673462]
[-106.97699738 -371.24374390]
[-108.18949127 -386.24127197]
[-106.54149628 -401.19723511]
[-102.09259033 -415.57095337]
[-95.00360870 -428.84283447]
[-85.53079987 -440.53311157]
[-74.01660919 -450.21917725]
[-60.87725830 -457.55087280]
[-46.58773804 -462.26321411]
[-31.66459656 -464.18579102]
[-16.64729881 -463.24914551]
[-2.07871246 -459.48715210]
[11.51451874 -453.03573608]
[23.64100838 -444.12817383]
[33.86239243 -433.08645630]
[41.80916977 -420.30969238]
[47.19407272 -406.25982666]
[49.82244110 -391.44467163]
[49.59926224 -376.39984131]
[46.53260040 -361.66921997]
[40.73331070 -347.78521729]
[32.41104507 -335.24981689]
[21.86663628 -324.51614380]
[9.48126316 -315.97219849]
[-4.29734993 -309.92684937]
[-0.97509027 -295.29937744]
[2.34716916 -280.67190552]
[5.66942883 -266.04446411]
[18.26864815 -253.82862854]
[12.67610741 -236.28425598]
[23.19825172 -225.74224854]
[18.93600464 -210.50598145]
[23.12301636 -196.10220337]
[27.94901466 -181.89974976]
[32.88060760 -167.73361206]
[37.91752243 -153.60458374]
[42.95444107 -139.47555542]
[47.99135590 -125.34652710]
[53.02827072 -111.21749878]
[58.06518936 -97.08846283]
[60.53715134 -95.76652527]
[62.63442230 -93.38574982]
[63.95108032 -90.08396149]
[64.13854980 -86.14322662]
[62.95394897 -81.96582794]
[67.14096069 -67.56204224]
[71.32797241 -53.15826416]
[75.51498413 -38.75448227]
[77.90388489 -37.28775024]
[79.85572815 -34.78636551]
[80.97352600 -31.41206169]
[80.92610931 -27.46715736]
[79.49496460 -23.36767006]
[82.81722260 -8.74020958]
[86.13948059 5.88724995]
[89.46173859 20.51470947]
[92.78400421 35.14216995]
[96.10626221 49.76963043]
[99.42852020 64.39709473]
[102.75077820 79.02455139]
[106.07303619 93.65200806]
[108.50506592 95.48905945]
[110.32241821 98.25162506]
[111.18100739 101.71374512]
[110.82505798 105.52551270]
[109.13011932 109.24843597]
[111.57585144 124.04770660]
[114.13168335 138.82835388]
[116.79747772 153.58956909]
[119.46327209 168.35079956]
[122.56738281 183.02609253]
[133.34271240 194.61070251]
[128.82728577 208.80436707]
[132.36695862 223.38073730]
[135.90663147 237.95710754]
[139.44630432 252.53349304]
[142.98597717 267.10986328]
[156.73927307 267.65020752]
[169.87026978 271.73318481]
[181.48341370 279.07339478]
[190.78839111 289.16351318]
[197.15403748 301.30935669]
[200.15110779 314.67764282]
[199.58117676 328.35314941]
[195.48982239 341.40133667]
[188.16300964 352.93234253]
[178.10713196 362.16149902]
[166.01402283 368.46282959]
[169.11813354 383.13812256]
[172.22224426 397.81341553]
[175.32635498 412.48873901]
[178.43046570 427.16403198]
[181.86152649 441.76635742]
[185.61782837 456.28842163]
[189.37413025 470.81048584]
[200.32073975 482.23336792]
[196.01713562 496.49267578]
[199.77343750 511.01473999]
[203.52973938 525.53680420]
[207.28602600 540.05883789]
[222.34440613 539.61956787]
[237.12289429 542.54260254]
[250.88020325 548.68133545]
[262.92626953 557.72790527]
[272.65689087 569.22845459]
[279.58395386 582.60620117]
[283.36001587 597.19006348]
[283.79565430 612.24853516]
[280.86904907 627.02630615]
[274.72695923 640.78210449]
[265.67749023 652.82598877]
[254.17457581 662.55383301]
[240.79518127 669.47766113]
[226.21038818 673.25018311]
[211.15180969 673.68218994]
[196.37474060 670.75195312]
[182.62040710 664.60656738]
[170.57872009 655.55419922]
[160.85368347 644.04888916]
[153.93310547 630.66784668]
[150.16412354 616.08215332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 189]
[6 188]
[7 187]
[8 186]
[10 184]
[11 183]
[12 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[35 160]
[40 159]
[41 158]
[42 157]
[44 156]
[45 155]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[55 137]
[56 136]
[57 135]
[58 134]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
[66 123]
[67 122]
[74 121]
[76 119]
[79 117]
[80 116]
[81 115]
[82 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
