%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[110.56884003 571.21374512]
[99.01705170 561.63208008]
[88.28469849 551.14068604]
[78.44321442 539.80938721]
[69.55809784 527.71362305]
[61.68845749 514.93389893]
[54.88668442 501.55520630]
[49.19803619 487.66665649]
[44.66036987 473.36062622]
[41.30388641 458.73233032]
[39.15092087 443.87915039]
[38.21580124 428.89987183]
[38.50475311 413.89422607]
[40.01585007 398.96206665]
[42.73903656 384.20278931]
[46.65619278 369.71453857]
[51.74124908 355.59381104]
[57.96036148 341.93457031]
[65.27214813 328.82766724]
[73.62793732 316.36038208]
[82.97213745 304.61563110]
[93.24256134 293.67163086]
[104.37084961 283.60116577]
[116.28295135 274.47131348]
[128.89958191 266.34277344]
[142.13679504 259.26965332]
[155.90649414 253.29902649]
[151.08050537 239.09657288]
[146.25450134 224.89411926]
[141.42851257 210.69166565]
[136.60250854 196.48921204]
[131.77650452 182.28674316]
[125.80494690 168.52664185]
[118.72784424 155.30111694]
[111.65073395 142.07559204]
[109.01002502 141.13496399]
[106.58279419 139.09164429]
[104.79090881 136.02169800]
[104.02094269 132.15237427]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[75.52657318 64.80857086]
[69.24920654 51.18525696]
[62.97184753 37.56193924]
[56.69448853 23.93862343]
[50.41712570 10.31530857]
[44.13976669 -3.30800796]
[37.66027069 -16.83635330]
[30.98007584 -30.26672935]
[24.29988098 -43.69710541]
[24.25564957 -28.69717026]
[20.38197708 -14.20597839]
[12.93579102 -1.18467653]
[2.41096759 9.50307846]
[-10.49441814 17.14840508]
[-24.92439842 21.24421883]
[-39.92188263 21.51885605]
[-54.49214554 17.95410156]
[-67.66879272 10.78639603]
[-78.57785797 0.49114388]
[-86.49579620 -12.24880600]
[-90.89742279 -26.58845901]
[-91.49080658 -41.57671738]
[-88.23657990 -56.21946335]
[-81.35059357 -69.54550171]
[-71.28956604 -80.67095184]
[-58.72080994 -88.85791779]
[-44.47796249 -93.56336975]
[-29.50570488 -94.47522736]
[-14.79709148 -91.53300476]
[-1.32769072 -84.93185425]
[10.00911903 -75.10959625]
[18.46372986 -62.71313477]
[16.45971680 -77.57865906]
[14.45570278 -92.44419098]
[12.45168972 -107.30971527]
[4.78946829 -94.41436005]
[-8.58022976 -87.61353302]
[-23.51465607 -89.01455688]
[-35.38621902 -98.18331146]
[-40.51638412 -112.27874756]
[-37.31551361 -126.93325043]
[-26.77543259 -137.60595703]
[-12.16209984 -140.98982239]
[1.99638426 -136.03630066]
[11.31295776 -124.28007507]
[11.31295776 -139.28007507]
[11.31295776 -154.28007507]
[11.31295776 -169.28007507]
[11.31295776 -184.28007507]
[-3.32625842 -187.87962341]
[-16.67832947 -194.87860107]
[-27.96698380 -204.87008667]
[-36.53591537 -217.27317810]
[-41.88693237 -231.36680603]
[-43.70893860 -246.33155823]
[-41.89600372 -261.29739380]
[-36.55353165 -275.39425659]
[-27.99212265 -287.80255127]
[-16.70952797 -297.80087280]
[-3.36170292 -304.80795288]
[11.27532768 -308.41638184]
[26.35058784 -308.41638184]
[40.98761749 -304.80795288]
[54.33544540 -297.80087280]
[65.61804199 -287.80255127]
[74.17945099 -275.39425659]
[79.52191925 -261.29739380]
[81.33485413 -246.33155823]
[79.51284790 -231.36680603]
[74.16182709 -217.27317810]
[65.59289551 -204.87008667]
[54.30424500 -194.87860107]
[40.95217514 -187.87962341]
[26.31295776 -184.28007507]
[26.31295776 -169.28007507]
[26.31295776 -154.28007507]
[26.31295776 -139.28007507]
[26.31295776 -124.28007507]
[27.31721687 -109.31372833]
[29.32123184 -94.44820404]
[31.32524490 -79.58267212]
[33.32925797 -64.71714783]
[37.73025513 -50.37730026]
[44.41044998 -36.94692230]
[51.09064484 -23.51654816]
[55.25286865 -21.17455292]
[57.98805618 -16.19301033]
[57.76308060 -9.58536911]
[64.04044342 4.03794765]
[70.31780243 17.66126442]
[76.59516144 31.28458023]
[82.87252808 44.90789413]
[89.14988708 58.53121185]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.87626648 134.99848938]
[131.95336914 148.22401428]
[139.03047180 161.44953918]
[140.64306641 146.53646851]
[148.92459106 134.02983093]
[162.02494812 126.72360992]
[177.01747131 126.25006104]
[190.55279541 132.71496582]
[199.60710144 144.67404175]
[202.15762329 159.45561218]
[197.63458252 173.75743103]
[187.04841614 184.38442993]
[172.76412964 188.96252441]
[157.97283936 186.46894836]
[145.97897339 177.46075439]
[150.80496216 191.66320801]
[155.63096619 205.86566162]
[160.45695496 220.06811523]
[165.28295898 234.27056885]
[170.10894775 248.47303772]
[184.66560364 244.81834412]
[199.47171021 242.36233521]
[214.42874146 241.12133789]
[229.43714905 241.10362244]
[244.39707947 242.30929565]
[259.20895386 244.73033142]
[273.77416992 248.35063171]
[287.99588013 253.14608765]
[301.77935791 259.08480835]
[315.03289795 266.12725830]
[327.66833496 274.22656250]
[339.60153198 283.32882690]
[350.75311279 293.37347412]
[361.04885864 304.29367065]
[370.42022705 316.01675415]
[378.80487061 328.46466064]
[386.14697266 341.55459595]
[392.39770508 355.19940186]
[397.51544189 369.30831909]
[401.46615601 383.78744507]
[404.22351074 398.54040527]
[405.76916504 413.46902466]
[406.09286499 428.47393799]
[405.19244385 443.45535278]
[403.07388306 458.31347656]
[399.75128174 472.94949341]
[395.24673462 487.26599121]
[389.59027100 501.16769409]
[382.81948853 514.56207275]
[374.97946167 527.35998535]
[366.12237549 539.47631836]
[356.30715942 550.83032227]
[345.59915161 561.34655762]
[334.06958008 570.95501709]
[321.79519653 579.59167480]
[308.85766602 587.19915771]
[295.34310913 593.72674561]
[281.34146118 599.13104248]
[266.94589233 603.37609863]
[252.25222778 606.43365479]
[237.35821533 608.28338623]
[222.36300659 608.91290283]
[207.36636353 608.31811523]
[192.46812439 606.50286865]
[177.76741028 603.47937012]
[163.36204529 599.26763916]
[149.34793091 593.89575195]
[135.81829834 587.39947510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 162]
[28 161]
[29 160]
[30 159]
[31 158]
[32 157]
[33 145]
[34 144]
[35 143]
[40 142]
[41 141]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 129]
[52 128]
[53 127]
[76 126]
[77 125]
[78 124]
[79 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
