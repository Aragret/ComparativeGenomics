%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[-47.58459091 830.96649170]
[-62.36471176 833.53979492]
[-77.24419403 835.45684814]
[-92.19390869 836.71380615]
[-107.18458557 837.30828857]
[-122.18688965 837.23907471]
[-137.17144775 836.50634766]
[-152.10893250 835.11151123]
[-166.97009277 833.05725098]
[-181.72584534 830.34771729]
[-196.34730530 826.98809814]
[-210.80584717 822.98504639]
[-225.07315063 818.34631348]
[-239.12132263 813.08105469]
[-252.92283630 807.19958496]
[-266.45068359 800.71331787]
[-279.67837524 793.63507080]
[-292.58004761 785.97863770]
[-305.13040161 777.75897217]
[-317.30490112 768.99224854]
[-329.07968140 759.69555664]
[-340.43173218 749.88714600]
[-351.33880615 739.58618164]
[-361.77957153 728.81286621]
[-371.73355103 717.58825684]
[-381.18130493 705.93432617]
[-390.10430908 693.87390137]
[-398.48510742 681.43060303]
[-406.30731201 668.62872314]
[-413.55557251 655.49340820]
[-420.21569824 642.05035400]
[-426.27471924 628.32580566]
[-431.72067261 614.34674072]
[-436.54299927 600.14044189]
[-440.73220825 585.73468018]
[-444.28009033 571.15777588]
[-447.17968750 556.43823242]
[-449.42538452 541.60479736]
[-451.01275635 526.68652344]
[-451.93865967 511.71264648]
[-452.20132446 496.71249390]
[-451.80023193 481.71539307]
[-450.73614502 466.75070190]
[-449.01116943 451.84774780]
[-446.62869263 437.03567505]
[-443.59332275 422.34347534]
[-439.91107178 407.79992676]
[-435.58908081 393.43350220]
[-430.63586426 379.27230835]
[-425.06109619 365.34405518]
[-418.87570190 351.67602539]
[-412.09176636 338.29501343]
[-404.72256470 325.22714233]
[-396.78256226 312.49801636]
[-388.28726196 300.13259888]
[-379.25332642 288.15502930]
[-369.69842529 276.58880615]
[-359.64126587 265.45654297]
[-349.10153198 254.78002930]
[-338.09985352 244.58018494]
[-326.65774536 234.87695312]
[-314.79766846 225.68934631]
[-302.54278564 217.03535461]
[-289.91708374 208.93190002]
[-276.94531250 201.39485168]
[-263.65286255 194.43896484]
[-250.06571960 188.07786560]
[-236.21051025 182.32398987]
[-222.11434937 177.18861389]
[-207.80482483 172.68179321]
[-193.30995178 168.81233215]
[-178.65811157 165.58781433]
[-163.87797546 163.01455688]
[-148.99848938 161.09759521]
[-134.04878235 159.84066772]
[-119.05809021 159.24626160]
[-104.05578613 159.31552124]
[-89.07122803 160.04830933]
[-74.13375854 161.44320679]
[-59.27260208 163.49748230]
[-44.51685715 166.20709229]
[-29.89541435 169.56675720]
[-15.43689156 173.56987000]
[-1.16959131 178.20863342]
[12.87855625 183.47393799]
[26.68005180 189.35549927]
[40.20787811 195.84178162]
[47.28498077 182.61625671]
[54.36208725 169.39071655]
[61.43919373 156.16519165]
[68.51629639 142.93966675]
[75.59340668 129.71414185]
[82.67050934 116.48861694]
[89.74761200 103.26308441]
[93.93462372 88.85930634]
[95.05027771 73.90084839]
[96.16592407 58.94239807]
[97.28157043 43.98394394]
[98.39721680 29.02549171]
[99.51287079 14.06703758]
[85.79444885 7.57324600]
[75.35106659 -3.44039106]
[69.59510803 -17.48437119]
[69.30501556 -32.65935898]
[74.52001953 -46.91306305]
[84.53484344 -58.31779099]
[97.99505615 -65.33113861]
[113.08027649 -67.00461578]
[127.75035858 -63.11189651]
[140.02128601 -54.17943573]
[148.23352051 -41.41527939]
[151.27641296 -26.54567337]
[148.73844910 -11.58160973]
[140.96287537 1.45314515]
[129.00126648 10.79574680]
[114.47132111 15.18268585]
[113.35567474 30.14113998]
[112.24002838 45.09959412]
[111.12437439 60.05804443]
[110.00872803 75.01650238]
[108.89308167 89.97495270]
[116.50807953 77.05165100]
[126.61183167 65.96498108]
[138.77471924 57.18635941]
[152.47956848 51.08905411]
[167.14363098 47.93232727]
[182.14341736 47.85040283]
[196.84109497 50.84676743]
[210.61172485 56.79401398]
[222.86976624 65.43925476]
[233.09402466 76.41490173]
[240.84973145 89.25425720]
[245.80711365 103.41139221]
[247.75538635 118.28432465]
[246.61170959 133.24066162]
[242.42472839 147.64445496]
[235.37243652 160.88322449]
[225.75473022 172.39408875]
[213.98056030 181.68756104]
[200.55055237 188.36851501]
[186.03578186 192.15284729]
[171.05339050 192.87965393]
[156.24047852 190.51802063]
[142.22685242 185.16838074]
[129.60841370 177.05821228]
[118.92169952 166.53233337]
[110.62110138 154.03833008]
[105.05957794 140.10745239]
[102.47359467 125.33204651]
[102.97314453 110.34019470]
[95.89603424 123.56571960]
[88.81893158 136.79124451]
[81.74182892 150.01676941]
[74.66471863 163.24230957]
[67.58761597 176.46783447]
[60.51050949 189.69335938]
[53.43340302 202.91888428]
[66.33509064 210.57528687]
[78.88547516 218.79487610]
[91.06000519 227.56156921]
[102.83483124 236.85820007]
[114.18691254 246.66656494]
[125.09402466 256.96749878]
[135.53482056 267.74078369]
[145.48884583 278.96536255]
[154.93664551 290.61923218]
[163.85969543 302.67962646]
[172.24053955 315.12292480]
[180.06277466 327.92474365]
[187.31108093 341.06002808]
[193.97126770 354.50308228]
[200.03031921 368.22760010]
[205.47634888 382.20666504]
[210.29872131 396.41296387]
[214.48796082 410.81866455]
[218.03590393 425.39556885]
[220.93557739 440.11514282]
[223.18132019 454.94854736]
[224.76872253 469.86682129]
[225.69470215 484.84066772]
[225.95742798 499.84082031]
[225.55638123 514.83795166]
[224.49235535 529.80261230]
[222.76742554 544.70556641]
[220.38499451 559.51770020]
[217.34968567 574.20989990]
[213.66748047 588.75341797]
[209.34555054 603.11987305]
[204.39237976 617.28112793]
[198.81767273 631.20935059]
[192.63230896 644.87738037]
[185.84841919 658.25848389]
[178.47929382 671.32635498]
[170.53932190 684.05548096]
[162.04408264 696.42095947]
[153.01019287 708.39855957]
[143.45532227 719.96484375]
[133.39820862 731.09710693]
[122.85849762 741.77368164]
[111.85685730 751.97357178]
[100.41480255 761.67681885]
[88.55474091 770.86450195]
[76.29988861 779.51849365]
[63.67423248 787.62200928]
[50.70248795 795.15911865]
[37.41004562 802.11505127]
[23.82293320 808.47619629]
[9.96774292 814.23010254]
[-4.12840223 819.36553955]
[-18.43790817 823.87243652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[92 152]
[93 151]
[94 150]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
