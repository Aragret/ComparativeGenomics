%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[108.57281494 566.24578857]
[107.46215820 551.08544922]
[112.24239349 536.65570068]
[122.18457031 525.15692139]
[135.77256775 518.34265137]
[134.65692139 503.38418579]
[133.54127502 488.42572021]
[132.42561340 473.46725464]
[131.30996704 458.50881958]
[130.19432068 443.55035400]
[121.53183746 431.43380737]
[128.22129822 417.09640503]
[127.10565186 402.13793945]
[110.43767548 395.02816772]
[99.63563538 380.37283325]
[97.75965118 362.17803955]
[105.41506958 345.47216797]
[120.56103516 334.91629028]
[118.77857208 320.02255249]
[116.99610138 305.12884521]
[102.05996704 303.99490356]
[87.62745667 299.96740723]
[74.25378418 293.19934082]
[62.45378876 283.94915771]
[52.68214417 272.57092285]
[45.31583405 259.50067139]
[40.63959885 245.23986816]
[38.83494568 230.33601379]
[39.97309494 215.36167908]
[44.01216888 200.89253235]
[50.79873657 187.48519897]
[60.07363510 175.65577698]
[71.48187256 165.86010742]
[84.58620453 158.47607422]
[98.88391113 153.78912354]
[97.10144806 138.89540100]
[95.31897736 124.00168610]
[93.53651428 109.10797119]
[91.64321899 94.22793579]
[89.30773163 79.41086578]
[86.64193726 64.64965057]
[73.94223785 55.62992859]
[71.44902039 40.62197876]
[80.12621307 28.57034302]
[77.46041870 13.80912590]
[74.79461670 -0.95209140]
[72.12882233 -15.71330833]
[69.46302795 -30.47452545]
[66.79723358 -45.23574448]
[51.79193115 -46.88525009]
[37.87345886 -52.69028473]
[26.16651726 -62.17250824]
[17.61448288 -74.55680847]
[12.90339947 -88.83468628]
[12.40695095 -103.84633636]
[16.15682602 -118.37490082]
[23.84084892 -131.24508667]
[34.82894897 -141.41822815]
[48.22481537 -148.07617188]
[45.55901718 -162.83738708]
[42.89322281 -177.59860229]
[40.22742844 -192.35981750]
[37.56163025 -207.12103271]
[34.89583588 -221.88224792]
[32.23004150 -236.64346313]
[29.56424522 -251.40467834]
[26.89844894 -266.16589355]
[11.93926907 -264.91384888]
[-3.07119155 -265.08941650]
[-17.99699211 -266.69104004]
[-32.70295715 -269.70422363]
[-47.05590820 -274.10168457]
[-60.92585754 -279.84356689]
[-74.18719482 -286.87789917]
[-86.71981812 -295.14096069]
[-98.41022491 -304.55792236]
[-109.15255737 -315.04348755]
[-118.84951019 -326.50271606]
[-127.41326904 -338.83181763]
[-134.76628113 -351.91912842]
[-140.84196472 -365.64614868]
[-145.58528137 -379.88851929]
[-148.95327759 -394.51730347]
[-150.91545105 -409.39999390]
[-151.45402527 -424.40182495]
[-150.56414795 -439.38693237]
[-148.25384521 -454.21957397]
[-144.54406738 -468.76544189]
[-139.46838379 -482.89279175]
[-133.07278442 -496.47369385]
[-125.41519165 -509.38516235]
[-116.56493378 -521.51025391]
[-106.60218811 -532.73913574]
[-95.61715698 -542.97021484]
[-83.70934296 -552.11065674]
[-70.98657227 -560.07788086]
[-57.56408310 -566.79956055]
[-43.56342316 -572.21496582]
[-29.11139107 -576.27496338]
[-14.33887005 -578.94281006]
[0.62035590 -580.19427490]
[15.63080978 -580.01818848]
[30.55655289 -578.41601562]
[45.26240921 -575.40228271]
[59.61520004 -571.00433350]
[73.48493958 -565.26190186]
[86.74601746 -558.22711182]
[99.27834320 -549.96356201]
[110.96840668 -540.54620361]
[121.71035004 -530.06024170]
[131.40689087 -518.60064697]
[139.97019958 -506.27124023]
[147.32273865 -493.18365479]
[153.39791870 -479.45642090]
[158.14071655 -465.21386719]
[161.50817871 -450.58496094]
[163.46980286 -435.70217896]
[164.00784302 -420.70034790]
[163.11740112 -405.71530151]
[160.80656433 -390.88275146]
[157.09625244 -376.33700562]
[152.02006531 -362.20983887]
[145.62397766 -348.62915039]
[137.96589661 -335.71795654]
[129.11520386 -323.59320068]
[119.15204620 -312.36465454]
[108.16664886 -302.13403320]
[96.25849915 -292.99395752]
[83.53543854 -285.02725220]
[70.11270142 -278.30603027]
[56.11184692 -272.89117432]
[41.65966797 -268.83169556]
[44.32546234 -254.07048035]
[46.99125671 -239.30926514]
[49.65705490 -224.54804993]
[52.32284927 -209.78683472]
[54.98864365 -195.02561951]
[57.65443802 -180.26438904]
[60.32023621 -165.50317383]
[62.98603058 -150.74195862]
[77.86451721 -149.19021606]
[91.71689606 -143.50312805]
[103.41727448 -134.13366699]
[112.01209259 -121.83448029]
[116.79779816 -107.59745026]
[117.37844086 -92.57363892]
[113.69841766 -77.98029327]
[106.04769135 -65.00218201]
[95.03892517 -54.69541931]
[81.55844879 -47.90153885]
[84.22424316 -33.14031982]
[86.89004517 -18.37910461]
[89.55583954 -3.61788678]
[92.22163391 11.14333057]
[94.88742828 25.90454674]
[107.23192596 34.15978241]
[110.14570618 49.09178162]
[101.40315247 61.98385620]
[104.06895447 76.74507141]
[106.74150848 79.04502106]
[108.43284607 82.75372314]
[108.49297333 87.39588165]
[106.50875092 92.22392273]
[110.62101746 99.15657806]
[108.43022919 107.32550812]
[110.21269226 122.21922302]
[111.99516296 137.11294556]
[113.77762604 152.00665283]
[128.77755737 153.18730164]
[143.25427246 157.27046204]
[156.65188599 164.09738159]
[168.45632935 173.40403748]
[178.21507263 184.83126831]
[185.55448914 197.93864441]
[190.19410706 212.22149658]
[191.95741272 227.13031006]
[190.77847290 242.09184265]
[186.70448303 256.53125000]
[179.89382935 269.89407349]
[170.60992432 281.66754150]
[159.21105957 291.40036011]
[146.13655090 298.71987915]
[131.88981628 303.34637451]
[133.67228699 318.24011230]
[135.45475769 333.13381958]
[147.01841736 336.40948486]
[156.77214050 343.37243652]
[163.58700562 353.18807983]
[166.68397522 364.69338989]
[165.72279358 376.53466797]
[160.83935547 387.32684326]
[152.62687683 395.81539917]
[142.06410217 401.02227783]
[143.17974854 415.98074341]
[151.92202759 429.16720581]
[145.15277100 442.43472290]
[146.26841736 457.39315796]
[147.38407898 472.35162354]
[148.49972534 487.31008911]
[149.61537170 502.26852417]
[150.73101807 517.22698975]
[165.17951965 521.95025635]
[176.71743774 531.84692383]
[183.58531189 545.40795898]
[184.73583984 560.56530762]
[179.99359131 575.00756836]
[170.08171082 586.53247070]
[156.51168823 593.38250732]
[141.35284424 594.51306152]
[126.91682434 589.75183105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[12 194]
[13 193]
[18 185]
[19 184]
[20 183]
[35 168]
[36 167]
[37 166]
[38 165]
[39 163]
[40 159]
[41 158]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
