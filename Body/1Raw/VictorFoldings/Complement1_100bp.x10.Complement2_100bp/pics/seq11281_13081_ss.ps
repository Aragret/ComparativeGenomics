%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[138.60304260 551.73931885]
[128.10340881 541.01165771]
[118.63839722 529.36102295]
[110.28875732 516.88671875]
[103.12573242 503.69519043]
[97.21044159 489.89904785]
[92.59333801 475.61593628]
[89.31382751 460.96774292]
[87.39988708 446.07943726]
[86.86784363 431.07806396]
[87.72223663 416.09158325]
[89.95578003 401.24786377]
[93.54941559 386.67355347]
[98.47248077 372.49301147]
[104.68297577 358.82717896]
[112.12791443 345.79272461]
[120.74377441 333.50079346]
[130.45704651 322.05627441]
[141.18486023 311.55679321]
[152.83569336 302.09197998]
[165.31013489 293.74255371]
[178.50175476 286.57974243]
[192.29800415 280.66467285]
[187.68399048 266.39196777]
[183.06999207 252.11921692]
[178.45597839 237.84648132]
[173.84196472 223.57376099]
[167.16177368 210.14337158]
[158.56321716 197.85253906]
[149.96464539 185.56170654]
[141.36608887 173.27085876]
[132.76751709 160.98002625]
[124.16895294 148.68919373]
[112.31562805 146.27565002]
[105.05142975 136.10632324]
[106.71441650 123.31580353]
[98.29979706 110.89830780]
[92.94888306 124.91143799]
[78.70384979 129.61026001]
[66.06559753 121.53099060]
[64.35058594 106.62935638]
[74.82304382 95.89028931]
[89.76165009 97.22939301]
[82.29391479 84.22044373]
[74.82617188 71.21148682]
[67.35842896 58.20253754]
[59.89068985 45.19358444]
[55.37575150 42.57396317]
[52.59517670 38.85620880]
[51.67682648 34.88484955]
[52.39484406 31.43277931]
[39.19012070 22.71809006]
[40.22863007 7.85973406]
[33.34921646 -5.46969509]
[26.46980476 -18.79912376]
[19.59039116 -32.12855530]
[12.71097946 -45.45798111]
[5.83156681 -58.78741074]
[6.09524250 -43.78973007]
[3.37546468 -29.03836250]
[-2.21943831 -15.12085438]
[-10.46662426 -2.59153128]
[-21.03760910 8.05056763]
[-33.51135635 16.38157082]
[-47.39104080 22.06965828]
[-62.12384033 24.88827705]
[-77.12295532 24.72516060]
[-91.79096985 21.58680534]
[-105.54367065 15.59821320]
[-117.83329010 6.99790573]
[-128.17033386 -3.87156963]
[-136.14308167 -16.57728577]
[-141.43399048 -30.61317825]
[-143.83232117 -45.42020416]
[-143.24255371 -60.40860748]
[-139.68815613 -74.98139954]
[-133.31072998 -88.55815887]
[-124.36425781 -100.59812164]
[-113.20509338 -110.62174225]
[-100.27769470 -118.22978973]
[-86.09695435 -123.11923218]
[-71.22769165 -125.09532928]
[-56.26213455 -124.07936859]
[-41.79636002 -120.11182404]
[-28.40653801 -113.35070801]
[-16.62597656 -104.06533051]
[-6.92388868 -92.62550354]
[0.31165186 -79.49073029]
[-0.35813329 -94.47576904]
[-1.02791846 -109.46080780]
[-1.69770360 -124.44584656]
[-2.36748862 -139.43089294]
[-17.12999344 -142.51622009]
[-30.66105080 -149.17665100]
[-42.11009216 -158.99348450]
[-50.75741196 -171.34963989]
[-56.05944061 -185.46839905]
[-57.68288803 -200.46223450]
[-55.52569962 -215.38864136]
[-49.72347641 -229.30931091]
[-40.64095306 -241.34918213]
[-28.84906769 -250.75143433]
[-15.08906460 -256.92501831]
[-0.22590959 -259.48184204]
[14.80608654 -258.26123047]
[29.06199837 -253.33987427]
[41.64569092 -245.02714539]
[51.76613998 -233.84558105]
[58.78716660 -220.49807739]
[62.26742172 -205.82365417]
[61.98813248 -190.74476624]
[57.96686172 -176.20928955]
[50.45638275 -163.13092041]
[39.92881393 -152.33180237]
[27.04592705 -144.49075317]
[12.61754990 -140.10067749]
[13.28733540 -125.11563110]
[13.95711994 -110.13059235]
[14.62690544 -95.14555359]
[15.29669094 -80.16051483]
[19.16099548 -65.66682434]
[26.04040909 -52.33739471]
[32.91982269 -39.00796509]
[39.79923248 -25.67853737]
[46.67864609 -12.34910774]
[53.55805969 0.98032159]
[66.27072144 8.74160099]
[65.72427368 24.55336761]
[72.89964294 37.72584152]
[80.36737823 50.73479462]
[87.83512115 63.74374771]
[95.30286407 76.75270081]
[102.77060699 89.76165009]
[110.71729279 102.48368835]
[119.13190460 114.90118408]
[135.88182068 122.55115509]
[136.45979309 140.09062195]
[145.05836487 152.38146973]
[153.65692139 164.67230225]
[162.25547791 176.96313477]
[170.85404968 189.25398254]
[179.45260620 201.54481506]
[177.39529419 186.68656921]
[179.55036926 171.84219360]
[185.74787903 158.18235779]
[195.49905396 146.78436279]
[208.03489685 138.54707336]
[222.36674500 134.12013245]
[237.36436462 133.85266113]
[251.84495544 137.76576233]
[264.66653442 145.55082703]
[274.81793213 156.59388733]
[281.49856567 170.02404785]
[284.18157959 184.78213501]
[282.65536499 199.70429993]
[277.04028320 213.61367798]
[267.77917480 225.41334534]
[255.60243225 234.17271423]
[241.47032166 239.20100403]
[226.49739075 240.10163879]
[211.86444092 236.80360413]
[198.72552490 229.56698608]
[188.11470032 218.95974731]
[192.72871399 233.23248291]
[197.34272766 247.50521851]
[201.95672607 261.77795410]
[206.57073975 276.05068970]
[221.21876526 272.77044678]
[236.10696411 270.85574341]
[251.10832214 270.32296753]
[266.09484863 271.17660522]
[280.93869019 273.40939331]
[295.51318359 277.00231934]
[309.69396973 281.92465210]
[323.36007690 288.13449097]
[336.39492798 295.57876587]
[348.68731689 304.19400024]
[360.13229370 313.90670776]
[370.63229370 324.63400269]
[380.09768677 336.28436279]
[388.44775391 348.75839233]
[395.61120605 361.94964600]
[401.52697754 375.74560547]
[406.14453125 390.02856445]
[409.42453003 404.67663574]
[411.33898926 419.56488037]
[411.87152100 434.56622314]
[411.01763916 449.55273438]
[408.78457642 464.39654541]
[405.19143677 478.97097778]
[400.26882935 493.15167236]
[394.05880737 506.81768799]
[386.61428833 519.85241699]
[377.99884033 532.14465332]
[368.28594971 543.58947754]
[357.55850220 554.08929443]
[345.90798950 563.55450439]
[333.43380737 571.90435791]
[320.24243164 579.06762695]
[306.44638062 584.98309326]
[292.16336060 589.60046387]
[277.51519775 592.88018799]
[262.62695312 594.79437256]
[247.62556458 595.32672119]
[232.63906860 594.47253418]
[217.79531860 592.23925781]
[203.22094727 588.64587402]
[189.04031372 583.72302246]
[175.37440491 577.51275635]
[162.33979797 570.06805420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
[36 135]
[37 134]
[43 133]
[44 132]
[45 131]
[46 130]
[47 129]
[51 128]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
