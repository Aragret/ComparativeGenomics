%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[128.49964905 369.19165039]
[116.19384766 378.29251099]
[101.06644440 380.62066650]
[86.59361267 375.64114380]
[76.10110474 364.49816895]
[72.00002289 349.75231934]
[75.23275757 334.79211426]
[85.05645752 323.05526733]
[99.21370697 317.23883057]
[100.55194092 302.29864502]
[101.89017487 287.35845947]
[103.22840881 272.41827393]
[104.56664276 257.47808838]
[105.34796906 242.49845886]
[105.57129669 227.50012207]
[105.79462433 212.50178528]
[104.90180206 197.52838135]
[102.89778900 182.66285706]
[93.52947998 171.08338928]
[99.35369873 156.37321472]
[97.34968567 141.50769043]
[95.34567261 126.64216614]
[93.34165955 111.77663422]
[88.55388641 125.99201965]
[81.03860474 138.97357178]
[71.09514618 150.20422363]
[59.11955643 159.23667908]
[45.58881378 165.71116638]
[31.04184532 169.36981201]
[16.05805206 170.06690979]
[1.23423231 167.77467346]
[-12.83918858 162.58441162]
[-25.60166931 154.70285034]
[-36.54488754 144.44389343]
[-45.23297882 132.21618652]
[-51.31989670 118.50671387]
[-54.56320572 103.86154938]
[-54.83372116 88.86398315]
[-52.12067413 74.11138153]
[-46.53212357 60.19131851]
[-38.29065323 47.65823746]
[-27.72452545 37.01131439]
[-15.25457954 28.67462158]
[-1.37749064 22.98020172]
[13.35402203 20.15486336]
[28.35320854 20.31113625]
[43.02265549 23.44279861]
[56.77808762 29.42511559]
[69.07162476 38.01981354]
[79.41362762 48.88457489]
[87.39218140 61.58665085]
[92.68949127 75.62013245]
[95.09431458 90.42189026]
[99.49531555 76.08203888]
[99.02148438 66.95990753]
[104.07005310 61.56234360]
[108.68406677 47.28961182]
[113.29807281 33.01687622]
[117.91208649 18.74414444]
[122.52609253 4.47141075]
[115.58431244 -9.47310162]
[120.46689606 -23.88195419]
[133.80363464 -30.41394615]
[138.41764832 -44.68667984]
[143.03166199 -58.95941162]
[147.64566040 -73.23214722]
[144.52844238 -88.74322510]
[155.80552673 -98.47341919]
[145.35881042 -87.70930481]
[132.80383301 -79.50123596]
[118.75315094 -74.24971008]
[103.89234924 -72.21096802]
[88.94651031 -73.48447418]
[74.64487457 -78.00809479]
[61.68524551 -85.56111908]
[50.69996262 -95.77500916]
[42.22501755 -108.15140533]
[36.67391968 -122.08644867]
[34.31752396 -136.90020752]
[35.27080154 -151.86988831]
[39.48723602 -166.26507568]
[46.76110458 -179.38342285]
[56.73749924 -190.58482361]
[68.92964172 -199.32276917]
[82.74266052 -205.17089844]
[97.50257874 -207.84387207]
[112.48923492 -207.21125793]
[126.97138977 -203.30393982]
[140.24243164 -196.31256104]
[151.65483093 -186.57823181]
[160.65176392 -174.57592773]
[166.79423523 -160.89126587]
[169.78256226 -146.19195557]
[169.47091675 -131.19519043]
[165.87678528 -116.63891602]
[175.53759766 -128.11361694]
[185.19841003 -139.58831787]
[194.85922241 -151.06301880]
[204.52001953 -162.53771973]
[194.08964539 -173.33638000]
[184.82489014 -185.15028381]
[176.82397461 -197.85420227]
[170.17172241 -211.31346130]
[164.93862915 -225.38537598]
[161.18020630 -239.92077637]
[158.93624878 -254.76560974]
[158.23057556 -269.76248169]
[159.07066345 -284.75241089]
[161.44758606 -299.57650757]
[165.33618164 -314.07766724]
[170.69519043 -328.10211182]
[177.46783447 -341.50119019]
[185.58230591 -354.13287354]
[194.95259094 -365.86325073]
[205.47935486 -376.56796265]
[217.05102539 -386.13357544]
[229.54490662 -394.45864868]
[242.82856750 -401.45495605]
[256.76119995 -407.04830933]
[271.19512939 -411.17941284]
[285.97729492 -413.80450439]
[300.95104980 -414.89575195]
[315.95764160 -414.44155884]
[330.83801270 -412.44677734]
[345.43435669 -408.93252563]
[359.59204102 -403.93606567]
[373.16091919 -397.51034546]
[385.99716187 -389.72351074]
[397.96469116 -380.65808105]
[408.93667603 -370.41018677]
[418.79681396 -359.08843994]
[427.44055176 -346.81286621]
[434.77624512 -333.71356201]
[440.72616577 -319.92941284]
[445.22723389 -305.60656738]
[448.23171997 -290.89682007]
[449.70782471 -275.95608521]
[449.63983154 -260.94277954]
[448.02850342 -246.01603699]
[444.89089966 -231.33409119]
[440.26028442 -217.05258179]
[434.18579102 -203.32289124]
[426.73171997 -190.29057312]
[417.97717285 -178.09378052]
[408.01492310 -166.86178589]
[396.95059204 -156.71366882]
[384.90142822 -147.75701904]
[371.99517822 -140.08676147]
[358.36865234 -133.78421021]
[344.16632080 -128.91616821]
[329.53872681 -125.53424835]
[314.64093018 -123.67430878]
[299.63082886 -123.35604858]
[284.66757202 -124.58285522]
[269.90979004 -127.34172058]
[255.51387024 -131.60339355]
[241.63246155 -137.32270813]
[228.41270447 -144.43902588]
[215.99472046 -152.87690735]
[206.33392334 -141.40220642]
[196.67311096 -129.92750549]
[187.01229858 -118.45280457]
[177.35148621 -106.97810364]
[170.07826233 -93.85941315]
[173.52549744 -79.36921692]
[161.91839600 -68.61814117]
[157.30438232 -54.34540558]
[152.69038391 -40.07266998]
[148.07637024 -25.79993629]
[155.06565857 -12.69705963]
[150.58972168 1.84324992]
[136.79882812 9.08541965]
[132.18481445 23.35815430]
[127.57080841 37.63088608]
[122.95680237 51.90362167]
[118.34278870 66.17635345]
[113.83515930 80.48303986]
[109.43416595 94.82289124]
[108.20719147 109.77262115]
[110.21120453 124.63814545]
[112.21521759 139.50367737]
[114.21923065 154.36920166]
[123.73088074 167.01194763]
[117.76332092 180.65884399]
[119.76733398 195.52436829]
[126.91924286 182.33914185]
[139.65364075 174.41227722]
[154.64176941 173.81582642]
[167.96578979 180.70571899]
[176.14282227 193.28092957]
[177.03541565 208.25434875]
[170.41023254 221.71195984]
[157.99911499 230.13595581]
[143.04624939 231.32434082]
[129.46032715 224.96647644]
[120.79296112 212.72511292]
[120.56963348 227.72344971]
[120.34630585 242.72178650]
[132.76362610 234.30693054]
[147.12940979 238.62254333]
[152.85371399 252.48733521]
[145.71679688 265.68069458]
[130.97973633 268.47695923]
[119.50682831 258.81634521]
[118.16859436 273.75653076]
[116.83036041 288.69671631]
[115.49212646 303.63687134]
[114.15389252 318.57705688]
[127.05207825 326.81692505]
[134.63352966 340.11279297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[14 198]
[15 197]
[16 196]
[17 185]
[18 184]
[20 182]
[21 181]
[22 180]
[23 179]
[53 178]
[54 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 172]
[63 169]
[64 168]
[65 167]
[66 166]
[68 164]
[95 163]
[96 162]
[97 161]
[98 160]
[99 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
