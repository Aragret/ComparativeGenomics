%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[66.89251709 427.78298950]
[52.00792313 425.93640137]
[37.22280121 423.41430664]
[22.56779861 420.22186279]
[8.07328224 416.36572266]
[-6.23070097 411.85385132]
[-20.31450653 406.69561768]
[-34.14894104 400.90173340]
[-47.70532990 394.48416138]
[-60.95558167 387.45623779]
[-73.87222290 379.83251953]
[-86.42848969 371.62878418]
[-98.59835815 362.86209106]
[-110.35660553 353.55056763]
[-121.67884827 343.71350098]
[-132.54164124 333.37130737]
[-142.92243958 322.54544067]
[-152.79975891 311.25830078]
[-162.15310669 299.53329468]
[-170.96310425 287.39471436]
[-179.21148682 274.86776733]
[-186.88116455 261.97833252]
[-193.95623779 248.75320435]
[-200.42204285 235.21975708]
[-206.26516724 221.40605164]
[-211.47352600 207.34071350]
[-216.03630066 193.05288696]
[-219.94404602 178.57218933]
[-223.18865967 163.92864990]
[-225.76342773 149.15260315]
[-227.66297913 134.27468872]
[-228.88342285 119.32572937]
[-229.42219543 104.33671570]
[-229.27818298 89.33870697]
[-228.45170593 74.36280060]
[-226.94445801 59.44003296]
[-224.75956726 44.60132980]
[-221.90155029 29.87744904]
[-218.37635803 15.29890823]
[-214.19128418 0.89592242]
[-209.35501099 -13.30165482]
[-203.87753296 -27.26439857]
[-197.77023315 -40.96336746]
[-191.04576111 -54.37016678]
[-183.71804810 -67.45701599]
[-175.80229187 -80.19677734]
[-167.31489563 -92.56305695]
[-158.27345276 -104.53022003]
[-148.69668579 -116.07347107]
[-138.60446167 -127.16886902]
[-128.01770020 -137.79342651]
[-116.95833588 -147.92512512]
[-105.44928741 -157.54295349]
[-93.51441956 -166.62699890]
[-81.17845917 -175.15841675]
[-68.46698761 -183.11952209]
[-55.40633392 -190.49382019]
[-42.02358246 -197.26602173]
[-28.34646416 -203.42210388]
[-14.40332890 -208.94929504]
[-0.22307591 -213.83613586]
[14.16490459 -218.07250977]
[28.73079109 -221.64962769]
[43.44439316 -224.56008911]
[58.27521515 -226.79783630]
[56.71469498 -241.71644592]
[55.15417099 -256.63504028]
[53.59364700 -271.55364990]
[52.03312683 -286.47225952]
[37.02280426 -286.31497192]
[22.06371117 -287.56396484]
[7.28731060 -290.20831299]
[-7.17653942 -294.22470093]
[-21.20072746 -299.57788086]
[-34.66200638 -306.22082520]
[-47.44207382 -314.09509277]
[-59.42861557 -323.13153076]
[-70.51629639 -333.25073242]
[-80.60766602 -344.36373901]
[-89.61404419 -356.37286377]
[-97.45627594 -369.17263794]
[-104.06545258 -382.65051270]
[-109.38348389 -396.68807983]
[-113.36363983 -411.16192627]
[-115.97093201 -425.94491577]
[-117.18244934 -440.90710449]
[-116.98754883 -455.91696167]
[-115.38793945 -470.84265137]
[-112.39768982 -485.55294800]
[-108.04306030 -499.91857910]
[-102.36233521 -513.81335449]
[-95.40543365 -527.11505127]
[-87.23348999 -539.70684814]
[-77.91833496 -551.47814941]
[-67.54181671 -562.32531738]
[-56.19512939 -572.15319824]
[-43.97799301 -580.87536621]
[-30.99777794 -588.41516113]
[-17.36855507 -594.70635986]
[-3.21009827 -599.69360352]
[11.35316181 -603.33306885]
[26.19324112 -605.59283447]
[41.17972183 -606.45300293]
[56.18089676 -605.90600586]
[71.06493378 -603.95672607]
[85.70103455 -600.62219238]
[99.96056366 -595.93170166]
[113.71820831 -589.92657471]
[126.85306549 -582.65954590]
[139.24969482 -574.19445801]
[150.79916382 -564.60565186]
[161.39997864 -553.97753906]
[170.95895386 -542.40338135]
[179.39210510 -529.98504639]
[186.62528992 -516.83148193]
[192.59498596 -503.05841064]
[197.24868774 -488.78686523]
[200.54553223 -474.14221191]
[202.45651245 -459.25320435]
[202.96485901 -444.25067139]
[202.06610107 -429.26647949]
[199.76812744 -414.43225098]
[196.09114075 -399.87841797]
[191.06744385 -385.73284912]
[184.74121094 -372.11987305]
[177.16801453 -359.15911865]
[168.41441345 -346.96447754]
[158.55734253 -335.64315796]
[147.68342590 -325.29461670]
[135.88822937 -316.00979614]
[123.27541351 -307.87030029]
[109.95581818 -300.94769287]
[96.04648590 -295.30276489]
[81.66967773 -290.98513794]
[66.95172882 -288.03277588]
[68.51225281 -273.11416626]
[70.07277679 -258.19555664]
[71.63330078 -243.27696228]
[73.19382477 -228.35836792]
[88.16669464 -229.23814392]
[103.16408539 -229.43553162]
[118.15492249 -228.95011902]
[133.10813904 -227.78291321]
[147.99272156 -225.93632507]
[162.77783203 -223.41416931]
[177.43283081 -220.22171021]
[191.92733765 -216.36552429]
[206.23132324 -211.85363770]
[220.31510925 -206.69538879]
[234.14953613 -200.90145874]
[247.70591736 -194.48387146]
[260.95614624 -187.45591736]
[273.87277222 -179.83216858]
[286.42904663 -171.62841797]
[298.59887695 -162.86169434]
[310.35711670 -153.55014038]
[321.67932129 -143.71305847]
[332.54208374 -133.37086487]
[342.92288208 -122.54496002]
[352.80017090 -111.25779724]
[362.15350342 -99.53277588]
[370.96347046 -87.39418793]
[379.21182251 -74.86720276]
[386.88146973 -61.97777939]
[393.95654297 -48.75262833]
[400.42230225 -35.21916962]
[406.26541138 -21.40544510]
[411.47372437 -7.34009075]
[416.03649902 6.94774199]
[419.94421387 21.42844009]
[423.18878174 36.07198715]
[425.76351929 50.84803772]
[427.66305542 65.72595978]
[428.88345337 80.67492676]
[429.42221069 95.66394043]
[429.27816772 110.66194153]
[428.45166016 125.63784790]
[426.94436646 140.56060791]
[424.75946045 155.39930725]
[421.90142822 170.12318420]
[418.37619019 184.70172119]
[414.19110107 199.10470581]
[409.35476685 213.30226135]
[403.87728882 227.26499939]
[397.76995850 240.96395874]
[391.04547119 254.37074280]
[383.71771240 267.45758057]
[375.80194092 280.19732666]
[367.31451416 292.56359863]
[358.27304077 304.53073120]
[348.69625854 316.07397461]
[338.60400391 327.16934204]
[328.01724243 337.79388428]
[316.95785522 347.92556763]
[305.44879150 357.54336548]
[293.51388550 366.62738037]
[281.17791748 375.15878296]
[268.46643066 383.11984253]
[255.40576172 390.49411011]
[242.02299500 397.26629639]
[228.34585571 403.42236328]
[214.40270996 408.94952393]
[200.22245789 413.83633423]
[185.83447266 418.07269287]
[171.26856995 421.64978027]
[156.55496216 424.56021118]
[141.72413635 426.79791260]
[126.80683136 428.35830688]
[111.83396149 429.23812866]
[96.83656311 429.43554688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
