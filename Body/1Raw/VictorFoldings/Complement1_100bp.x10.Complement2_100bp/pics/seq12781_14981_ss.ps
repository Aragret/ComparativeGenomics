%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[144.65919495 743.90136719]
[130.25277710 739.68695068]
[116.28215027 734.19812012]
[102.85977173 727.47900391]
[90.09374237 719.58380127]
[78.08683014 710.57598877]
[66.93571472 700.52813721]
[56.73017502 689.52117920]
[47.55239487 677.64373779]
[39.47625732 664.99133301]
[32.56679535 651.66595459]
[26.87963676 637.77490234]
[22.46057320 623.42993164]
[19.34518623 608.74658203]
[17.55855942 593.84307861]
[17.11507607 578.83941650]
[18.01830864 563.85644531]
[20.26098442 549.01470947]
[23.82504654 534.43377686]
[28.68179703 520.23101807]
[34.79213333 506.52078247]
[42.10685730 493.41351318]
[50.56707001 481.01467896]
[60.10466385 469.42413330]
[70.64283752 458.73519897]
[82.09674072 449.03396606]
[94.37415314 440.39849854]
[107.37622833 432.89831543]
[120.99827576 426.59387207]
[135.13061523 421.53588867]
[149.65945435 417.76510620]
[164.46783447 415.31182861]
[163.35217285 400.35339355]
[162.23652649 385.39492798]
[161.12088013 370.43649292]
[160.00523376 355.47802734]
[158.88958740 340.51956177]
[157.77394104 325.56112671]
[155.21810913 310.78045654]
[151.24600220 296.31594849]
[147.27391052 281.85140991]
[143.30181885 267.38690186]
[139.32971191 252.92236328]
[135.35762024 238.45783997]
[118.16028595 238.54815674]
[101.61199951 233.81964111]
[87.03662109 224.64297485]
[75.60226440 211.74504089]
[68.22773743 196.15122986]
[65.50868225 179.10404968]
[67.66949463 161.96403503]
[74.54479218 146.10119629]
[85.59207916 132.78552246]
[99.93453217 123.08528900]
[95.10853577 108.88283539]
[89.73954773 102.87063599]
[90.31812286 94.43286133]
[85.70411682 80.16012573]
[81.09010315 65.88739014]
[76.47609711 51.61465836]
[71.86208344 37.34192657]
[67.24807739 23.06919098]
[65.05007172 37.90727615]
[59.41057587 51.80677414]
[50.64852142 63.98160172]
[39.25944901 73.74320984]
[25.88746452 80.53953552]
[11.28882027 83.98621368]
[-3.71086025 83.88832092]
[-18.26327324 80.25138092]
[-31.54540634 73.28109741]
[-42.80609512 63.37166214]
[-51.40848923 51.08350372]
[-56.86608505 37.11157990]
[-58.87022400 22.24606895]
[-57.30756760 7.32768822]
[-52.26648712 -6.79985666]
[-44.03208160 -19.33758354]
[-33.07004929 -29.57642365]
[-20.00034523 -36.93732071]
[-5.56212234 -41.00397873]
[9.42806721 -41.54641342]
[24.12245369 -38.53393936]
[37.69000244 -32.13693619]
[49.36339569 -22.71717644]
[58.48245239 -10.80739975]
[64.53176117 2.91986871]
[65.20154572 -12.06517029]
[65.87133026 -27.05020905]
[66.54111481 -42.03524780]
[66.65277863 -57.03483200]
[66.20617676 -72.02818298]
[65.75956726 -87.02153015]
[57.61481476 -100.58522034]
[64.96974945 -113.53721619]
[64.52313995 -128.53056335]
[64.07653809 -143.52391052]
[49.85334396 -148.88761902]
[38.76885223 -159.28965759]
[32.51335526 -173.14379883]
[32.04078293 -188.33738708]
[37.42318726 -202.55351257]
[47.83980179 -213.62431335]
[61.70215988 -219.86157227]
[76.89635468 -220.31416321]
[91.10538483 -214.91305542]
[102.16247559 -204.48188782]
[108.38150024 -190.61134338]
[108.81409454 -175.41656494]
[103.39431000 -161.21464539]
[92.94860840 -150.17129517]
[79.06988525 -143.97052002]
[79.51649475 -128.97717285]
[79.96309662 -113.98381805]
[88.07590485 -101.49256134]
[80.75292206 -87.46813965]
[81.19952393 -72.47478485]
[81.64613342 -57.48143768]
[93.67533112 -66.44236755]
[108.21947479 -62.77252197]
[114.55716705 -49.17716599]
[108.01648712 -35.67829514]
[93.41899109 -32.22677231]
[81.52615356 -41.36546326]
[80.85636902 -26.38042450]
[80.18658447 -11.39538479]
[79.51679993 3.58965373]
[81.52081299 18.45518112]
[86.13481903 32.72791672]
[90.74883270 47.00064850]
[95.36283875 61.27338028]
[99.97684479 75.54611206]
[104.59085846 89.81884766]
[109.31098938 104.05683899]
[114.13698578 118.25929260]
[126.98439026 117.01161957]
[139.80119324 118.48234558]
[152.01889038 122.60333252]
[163.09617615 129.18890381]
[172.54289246 137.94430542]
[179.94174194 148.47882080]
[184.96673584 160.32322693]
[187.39752197 172.95071411]
[187.12907410 185.80030823]
[184.17620850 198.30175781]
[178.67280579 209.90090942]
[170.86573792 220.08421326]
[161.10380554 228.40145874]
[149.82214355 234.48574829]
[153.79423523 248.95027161]
[157.76634216 263.41479492]
[161.73843384 277.87933350]
[165.71052551 292.34384155]
[169.68263245 306.80838013]
[173.87030029 292.40478516]
[183.49201965 280.89727783]
[196.92639160 274.22512817]
[211.90945435 273.51263428]
[225.91632080 278.87991333]
[236.58657837 289.42248535]
[242.12210083 303.36370850]
[241.59007263 318.35427856]
[235.08012390 331.86798096]
[223.68930054 341.62756348]
[209.33717346 345.98834229]
[194.44232178 344.21545410]
[181.51477051 336.60763550]
[172.73239136 324.44546509]
[173.84803772 339.40393066]
[174.96368408 354.36236572]
[176.07933044 369.32083130]
[177.19497681 384.27929688]
[178.31063843 399.23773193]
[179.42628479 414.19619751]
[194.43473816 414.42559814]
[209.36219788 415.99945068]
[224.08848572 418.90509033]
[238.49502563 423.11907959]
[252.46583557 428.60751343]
[265.88842773 435.32620239]
[278.65469360 443.22100830]
[290.66186523 452.22845459]
[301.81329346 462.27593994]
[312.01916504 473.28259277]
[321.19732666 485.15979004]
[329.27383423 497.81192017]
[336.18371582 511.13705444]
[341.87127686 525.02801514]
[346.29080200 539.37280273]
[349.40661621 554.05609131]
[351.19369507 568.95953369]
[351.63766479 583.96313477]
[350.73486328 598.94616699]
[348.49264526 613.78796387]
[344.92904663 628.36901855]
[340.07272339 642.57189941]
[333.96279907 656.28234863]
[326.64846802 669.38983154]
[318.18862915 681.78894043]
[308.65139771 693.37976074]
[298.11355591 704.06903076]
[286.65994263 713.77062988]
[274.38281250 722.40643311]
[261.38095093 729.90698242]
[247.75909424 736.21185303]
[233.62692261 741.27026367]
[219.09819031 745.04150391]
[204.28988647 747.49523926]
[189.32125854 748.61163330]
[174.31282043 748.38177490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[54 135]
[55 134]
[57 133]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 118]
[92 117]
[93 116]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
