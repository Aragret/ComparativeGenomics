%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[20.77720070 867.45867920]
[5.89137220 869.34020996]
[-9.07867336 870.35302734]
[-24.08228302 870.49365234]
[-39.06868744 869.76171875]
[-53.98717499 868.15960693]
[-68.78726959 865.69274902]
[-83.41889191 862.36956787]
[-97.83253479 858.20123291]
[-111.97942352 853.20184326]
[-125.81168365 847.38836670]
[-139.28251648 840.78045654]
[-152.34634399 833.40045166]
[-164.95896912 825.27337646]
[-177.07769775 816.42663574]
[-188.66152954 806.89025879]
[-199.67126465 796.69641113]
[-210.06965637 785.87969971]
[-219.82153320 774.47668457]
[-228.89385986 762.52587891]
[-237.25596619 750.06787109]
[-244.87956238 737.14465332]
[-251.73883057 723.80004883]
[-257.81057739 710.07922363]
[-263.07424927 696.02850342]
[-267.51205444 681.69555664]
[-271.10894775 667.12878418]
[-273.85275269 652.37750244]
[-275.73422241 637.49169922]
[-276.74697876 622.52166748]
[-276.88760376 607.51800537]
[-276.15557861 592.53161621]
[-274.55340576 577.61315918]
[-272.08651733 562.81304932]
[-268.76324463 548.18145752]
[-264.59484863 533.76782227]
[-259.59542847 519.62097168]
[-253.78189087 505.78872681]
[-247.17391968 492.31790161]
[-239.79386902 479.25411987]
[-231.66670227 466.64154053]
[-222.81993103 454.52282715]
[-213.28347778 442.93905640]
[-203.08963013 431.92935181]
[-192.27285767 421.53100586]
[-180.86978149 411.77917480]
[-168.91899109 402.70690918]
[-156.46089172 394.34484863]
[-143.53767395 386.72131348]
[-130.19303894 379.86209106]
[-116.47215271 373.79040527]
[-102.42144012 368.52676392]
[-88.08845520 364.08905029]
[-73.52168274 360.49221802]
[-58.77041626 357.74844360]
[-43.88457108 355.86703491]
[-28.91451645 354.85433960]
[-13.91090679 354.71380615]
[1.07549143 355.44589233]
[15.99396801 357.04812622]
[30.79404259 359.51507568]
[34.11630249 344.88760376]
[37.43856049 330.26013184]
[40.76082230 315.63269043]
[44.08308029 301.00521851]
[47.40534210 286.37777710]
[37.71657562 277.19244385]
[33.80026627 264.31585693]
[36.78168488 251.08027649]
[45.98641205 240.96635437]
[59.08927536 236.68782043]
[62.62894821 222.11143494]
[66.16861725 207.53506470]
[69.70829010 192.95869446]
[65.19286346 178.76502991]
[75.96818542 167.18041992]
[71.45275879 152.98675537]
[82.22808838 141.40216064]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[83.85837555 101.95625305]
[86.69087219 90.65943146]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[102.22262573 54.78258896]
[102.66922760 39.78923798]
[103.11583710 24.79588699]
[100.24332428 16.12487411]
[103.68235779 9.58309841]
[104.35214233 -5.40194035]
[105.02192688 -20.38698006]
[105.69171143 -35.37201691]
[98.57833862 -49.50391388]
[106.87622833 -61.87300491]
[107.54601288 -76.85803986]
[93.11763763 -81.24811554]
[80.23474884 -89.08916473]
[69.70717621 -99.88829041]
[62.19670105 -112.96665192]
[58.17542648 -127.50213623]
[57.89614105 -142.58102417]
[61.37639618 -157.25544739]
[68.39742279 -170.60295105]
[78.51786804 -181.78451538]
[91.10156250 -190.09724426]
[105.35747528 -195.01860046]
[120.38947296 -196.23922729]
[135.25262451 -193.68238831]
[149.01263428 -187.50880432]
[160.80451965 -178.10655212]
[169.88703918 -166.06668091]
[175.68925476 -152.14601135]
[177.84645081 -137.21960449]
[176.22300720 -122.22576904]
[170.92097473 -108.10700989]
[162.27365112 -95.75085449]
[150.82461548 -85.93401337]
[137.29354858 -79.27359009]
[122.53105164 -76.18825531]
[121.86126709 -61.20321655]
[129.02255249 -48.14315033]
[120.67675018 -34.70223236]
[120.00696564 -19.71719360]
[119.33718109 -4.73215532]
[118.66739655 10.25288391]
[118.10918427 25.24249268]
[117.66258240 40.23584366]
[117.21597290 55.22919464]
[125.02374268 42.42142868]
[136.88650513 33.24129105]
[151.24349976 28.89657974]
[166.20584106 29.95891953]
[179.80494690 36.28853989]
[190.25164795 47.05266953]
[196.17147827 60.83510590]
[196.78559875 75.82253265]
[192.01321411 90.04309082]
[182.48219299 101.62582397]
[169.44651794 109.04682159]
[154.62126160 111.32972717]
[139.95692444 108.17418671]
[127.38287354 99.99536896]
[118.55342865 87.86932373]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[115.77153015 103.95446014]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[96.80445862 144.94183350]
[101.06671143 160.17810059]
[90.54456329 170.72009277]
[94.80680847 185.95635986]
[84.28466797 196.49836731]
[80.74499512 211.07473755]
[77.20532227 225.65110779]
[73.66564941 240.22749329]
[84.79146576 252.96768188]
[86.11806488 269.66323853]
[77.32011414 283.71875000]
[62.03279877 289.70001221]
[58.71054077 304.32748413]
[55.38828278 318.95495605]
[52.06602097 333.58239746]
[48.74376297 348.20986938]
[45.42150116 362.83731079]
[59.83517838 367.00555420]
[73.98210907 372.00479126]
[87.81441498 377.81814575]
[101.28530884 384.42596436]
[114.34919739 391.80584717]
[126.96188354 399.93286133]
[139.08068848 408.77947998]
[150.66459656 418.31579590]
[161.67442322 428.50952148]
[172.07290649 439.32614136]
[181.82485962 450.72909546]
[190.89729309 462.67977905]
[199.25950623 475.13778687]
[206.88320923 488.06091309]
[213.74258423 501.40545654]
[219.81445312 515.12628174]
[225.07824707 529.17687988]
[229.51614380 543.50982666]
[233.11315918 558.07653809]
[235.85711670 572.82781982]
[237.73870850 587.71362305]
[238.75157166 602.68365479]
[238.89230347 617.68725586]
[238.16041565 632.67370605]
[236.55836487 647.59216309]
[234.09161377 662.39227295]
[230.76846313 677.02392578]
[226.60018921 691.43756104]
[221.60087585 705.58447266]
[215.78746033 719.41674805]
[209.17959595 732.88763428]
[201.79963684 745.95147705]
[193.67257690 758.56414795]
[184.82591248 770.68292236]
[175.28956604 782.26678467]
[165.09579468 793.27655029]
[154.27911377 803.67498779]
[142.87612915 813.42694092]
[130.92539978 822.49926758]
[118.46737671 830.86145020]
[105.54421234 838.48510742]
[92.19963837 845.34442139]
[78.47880554 851.41625977]
[64.42813873 856.67999268]
[50.09518433 861.11779785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 165]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[71 156]
[72 155]
[73 154]
[74 153]
[76 151]
[78 149]
[79 148]
[80 147]
[83 145]
[84 144]
[85 128]
[86 127]
[87 126]
[89 125]
[90 124]
[91 123]
[92 122]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
