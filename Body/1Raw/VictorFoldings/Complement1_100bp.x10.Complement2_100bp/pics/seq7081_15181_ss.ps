%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[18.92967224 703.96270752]
[6.40136909 712.23852539]
[-6.94827557 719.11120605]
[-20.96274567 724.50024414]
[-35.47772980 728.34246826]
[-50.32304382 730.59277344]
[-65.32463837 731.22479248]
[-80.30661774 730.23114014]
[-95.09333801 727.62341309]
[-109.51142883 723.43225098]
[-123.39184570 717.70678711]
[-136.57183838 710.51409912]
[-148.89689636 701.93853760]
[-160.22250366 692.08062744]
[-170.41587830 681.05596924]
[-179.35749817 668.99389648]
[-186.94252014 656.03570557]
[-193.08204651 642.33337402]
[-197.70407104 628.04754639]
[-200.75439453 613.34576416]
[-202.19728088 598.40039062]
[-202.01579285 583.38653564]
[-200.21206665 568.48040771]
[-196.80723572 553.85662842]
[-191.84123230 539.68670654]
[-185.37228394 526.13684082]
[-177.47624207 513.36578369]
[-168.24565125 501.52334595]
[-157.78877258 490.74832153]
[-146.22817993 481.16708374]
[-133.69943237 472.89196777]
[-120.34942627 466.01995850]
[-106.33466339 460.63168335]
[-91.81947327 456.79025269]
[-76.97403717 454.54074097]
[-61.97241211 453.90951538]
[-46.99048233 454.90399170]
[-32.20389938 457.51248169]
[-28.01688957 443.10870361]
[-23.82987785 428.70492554]
[-19.64286613 414.30114746]
[-21.11714554 409.75851440]
[-19.75341797 404.24151611]
[-15.11081982 399.53430176]
[-10.49681091 385.26156616]
[-5.88280153 370.98883057]
[-1.26879215 356.71609497]
[3.34521723 342.44335938]
[7.95922661 328.17062378]
[11.93132305 313.70611572]
[15.25358200 299.07864380]
[18.57584190 284.45120239]
[17.19775200 282.01007080]
[16.70358276 278.87600708]
[17.36211777 275.38290405]
[19.31640244 271.95578003]
[22.55582047 269.06439209]
[26.74283218 254.66059875]
[30.92984200 240.25682068]
[18.70226288 248.94509888]
[3.72386074 249.74975586]
[-9.36414337 242.42143250]
[-16.50628853 229.23092651]
[-15.48950291 214.26542664]
[-6.62884951 202.16217041]
[7.33010244 196.67147827]
[22.06201935 199.49470520]
[33.00205612 209.75704956]
[36.76031876 224.27885437]
[42.83415222 210.56358337]
[48.90798569 196.84831238]
[46.98693085 182.07810974]
[59.64953995 172.59292603]
[65.72337341 158.87765503]
[71.79720306 145.16238403]
[77.87104034 131.44711304]
[83.94487762 117.73184967]
[90.01870728 104.01658630]
[93.12281799 89.34128571]
[93.12281799 74.34128571]
[93.12281799 59.34128189]
[93.12281799 44.34128189]
[93.12281799 29.34128380]
[85.38552094 15.54111099]
[93.12281799 2.81383920]
[85.38552094 -10.98633289]
[93.12281799 -23.71360588]
[84.57099152 -33.36912918]
[84.87979889 -45.86266327]
[93.33843994 -54.51008606]
[93.56176758 -69.50842285]
[93.78509521 -84.50675964]
[86.25411987 -98.42060089]
[94.18005371 -111.03126526]
[94.40338135 -126.02960205]
[94.62670898 -141.02793884]
[87.09572601 -154.94177246]
[95.02165985 -167.55244446]
[80.94104004 -173.21818542]
[69.86063385 -183.59069824]
[63.27896500 -197.26718140]
[62.08615875 -212.39799500]
[66.44352722 -226.93682861]
[75.76177216 -238.91743469]
[88.78067780 -246.71951294]
[103.73954773 -249.28790283]
[118.61531067 -246.27526855]
[131.39614868 -238.08901978]
[140.35356140 -225.83630371]
[144.27612305 -211.17416382]
[142.63334656 -196.08557129]
[135.64738464 -182.61111450]
[124.26306152 -172.57312012]
[110.01999664 -167.32911682]
[117.56694794 -154.48805237]
[109.62504578 -140.80461121]
[109.40171814 -125.80627441]
[109.17839050 -110.80793762]
[116.72534180 -97.96688080]
[108.78343201 -84.28343201]
[108.56010437 -69.28509521]
[108.33677673 -54.28675842]
[117.69750214 -39.44277954]
[108.12281799 -23.71360588]
[115.86012268 -10.98633289]
[108.12281799 2.81383920]
[115.86012268 15.54111099]
[108.12281799 29.34128380]
[108.12281799 44.34128189]
[108.12281799 59.34128189]
[108.12281799 74.34128571]
[108.12281799 89.34128571]
[114.75553131 75.88739777]
[124.00671387 64.07995605]
[135.48298645 54.42101288]
[148.69638062 47.32127380]
[163.08505249 43.08263016]
[178.03718567 41.88529968]
[192.91702271 43.78020096]
[207.09184265 48.68676376]
[219.95893860 56.39635086]
[230.97120667 66.58115387]
[239.66036987 78.80809784]
[245.65698242 92.55730438]
[248.70606995 107.24414062]
[248.67796326 122.24411774]
[245.57386780 136.91941833]
[239.52577209 150.64605713]
[230.79084778 162.84036255]
[219.74050903 172.98382568]
[206.84460449 180.64514160]
[192.65148926 185.49855042]
[177.76466370 187.33767700]
[162.81712341 186.08433533]
[148.44442749 181.79180908]
[135.25773621 174.64260864]
[123.81774139 164.94071960]
[114.61087036 153.09869385]
[108.02861786 139.62005615]
[104.35085297 125.07790375]
[103.73397827 110.09041595]
[97.66014099 123.80568695]
[91.58630371 137.52095032]
[85.51247406 151.23622131]
[79.43863678 164.95149231]
[73.36480713 178.66674805]
[74.85141754 194.41796875]
[62.62325287 202.92214966]
[56.54941940 216.63742065]
[50.47558594 230.35269165]
[45.33362579 244.44383240]
[41.14661407 258.84759521]
[36.95960236 273.25140381]
[33.20330048 287.77343750]
[29.88104248 302.40090942]
[26.55878258 317.02838135]
[39.79524612 309.97174072]
[54.18419647 314.20944214]
[61.48299026 327.31393433]
[57.51054764 341.77835083]
[44.54246140 349.31683350]
[30.00744438 345.61099243]
[22.23196030 332.78463745]
[17.61795044 347.05737305]
[13.00394154 361.33010864]
[8.38993168 375.60284424]
[3.77592278 389.87557983]
[-0.83808655 404.14831543]
[-5.23908472 418.48815918]
[-9.42609596 432.89193726]
[-13.61310673 447.29571533]
[-17.80011749 461.69949341]
[-3.91939521 467.42425537]
[9.26099110 474.61624146]
[21.58650589 483.19113159]
[32.91263962 493.04843140]
[43.10660172 504.07250977]
[52.04887009 516.13415527]
[59.63460159 529.09191895]
[65.77485657 542.79388428]
[70.39765167 557.07946777]
[73.44877625 571.78106689]
[74.89245605 586.72644043]
[74.71177673 601.74023438]
[72.90885162 616.64648438]
[69.50481415 631.27044678]
[64.53957367 645.44061279]
[58.07135773 658.99084473]
[50.17599106 671.76232910]
[40.94604874 683.60528564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 192]
[39 191]
[40 190]
[41 189]
[44 188]
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[50 176]
[51 175]
[52 174]
[57 173]
[58 172]
[59 171]
[69 170]
[70 169]
[71 168]
[73 166]
[74 165]
[75 164]
[76 163]
[77 162]
[78 161]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[85 126]
[87 124]
[90 122]
[91 121]
[92 120]
[94 118]
[95 117]
[96 116]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
