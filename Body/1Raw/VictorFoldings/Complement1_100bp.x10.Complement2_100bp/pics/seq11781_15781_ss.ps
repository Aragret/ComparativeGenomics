%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[95.53883362 720.39288330]
[80.84630585 717.34094238]
[66.40246582 713.27154541]
[52.27767944 708.20446777]
[38.54076004 702.16442871]
[25.25863838 695.18090820]
[12.49602127 687.28784180]
[0.31508631 678.52374268]
[-11.22482014 668.93127441]
[-22.06747627 658.55718994]
[-32.16005707 647.45202637]
[-41.45339203 635.66992188]
[-49.90220642 623.26818848]
[-57.46533585 610.30737305]
[-64.10593414 596.85052490]
[-69.79164886 582.96319580]
[-74.49478149 568.71307373]
[-78.19241333 554.16961670]
[-80.86653137 539.40368652]
[-82.50411224 524.48712158]
[-83.09716797 509.49267578]
[-82.64282227 494.49340820]
[-81.14328003 479.56237793]
[-78.60585022 464.77230835]
[-75.04289246 450.19525146]
[-70.47176361 435.90228271]
[-64.91474152 421.96295166]
[-58.39888763 408.44525146]
[-50.95595932 395.41500854]
[-42.62221527 382.93569946]
[-33.43825150 371.06811523]
[-23.44881630 359.87005615]
[-12.70257568 349.39614868]
[-1.25188577 339.69735718]
[10.84746647 330.82095337]
[23.53653526 322.81021118]
[36.75349808 315.70410156]
[50.43395996 309.53729248]
[64.51127625 304.33981323]
[78.91686249 300.13696289]
[93.58053589 296.94924927]
[108.43084717 294.79220581]
[107.31520081 279.83374023]
[106.19954681 264.87530518]
[95.55183411 250.92562866]
[103.68505859 234.40496826]
[102.34682465 219.46478271]
[93.50490570 207.47854614]
[99.98015594 193.04312134]
[98.64192200 178.10293579]
[97.30368805 163.16275024]
[93.57598114 156.78105164]
[96.05844879 147.99043274]
[94.94279480 133.03196716]
[93.82714844 118.07352448]
[82.91663361 108.53901672]
[81.83895111 94.08962250]
[91.21439362 83.04212952]
[82.47211456 69.85565186]
[89.24137878 56.58815765]
[88.12572479 41.62970352]
[87.01007843 26.67125130]
[85.89443207 11.71279812]
[84.77878571 -3.24565554]
[76.03649902 -16.43213081]
[82.80576324 -29.69962502]
[71.65581512 -37.25563431]
[66.96202087 -49.67250824]
[70.22837067 -62.33793259]
[80.04542542 -70.68389130]
[79.15260315 -85.65730286]
[78.25978851 -100.63070679]
[77.36697388 -115.60411072]
[76.47415924 -130.57751465]
[66.58349609 -119.30033112]
[51.77762985 -116.89488220]
[38.82559204 -124.46090698]
[33.64888382 -138.53932190]
[38.61422729 -152.69366455]
[51.45153427 -160.45275879]
[66.29176331 -158.26925659]
[76.35086060 -147.13970947]
[77.02064514 -162.12474060]
[77.69042969 -177.10978699]
[78.36021423 -192.09481812]
[79.02999878 -207.07986450]
[79.69978333 -222.06489563]
[80.36956787 -237.04994202]
[65.65303802 -240.11911011]
[51.61945724 -245.50935364]
[38.63233566 -253.08106995]
[27.02806854 -262.63812256]
[17.10723495 -273.93295288]
[9.12681007 -286.67300415]
[3.29350400 -300.52828979]
[-0.24158596 -315.13989258]
[-1.38689268 -330.12936401]
[-0.11274981 -345.10845947]
[3.54783916 -359.68914795]
[9.50005627 -373.49374390]
[17.58972549 -386.16470337]
[27.60730362 -397.37384033]
[39.29331207 -406.83074951]
[52.34505463 -414.29052734]
[66.42446136 -419.55990601]
[81.16683960 -422.50244141]
[96.19032288 -423.04187012]
[111.10577393 -421.16427612]
[125.52684784 -416.91821289]
[139.08000183 -410.41372681]
[151.41416931 -401.81930542]
[162.20986938 -391.35751343]
[171.18746948 -379.29937744]
[178.11444092 -365.95721436]
[182.81132507 -351.67660522]
[185.15649414 -336.82748413]
[185.08918762 -321.79446411]
[182.61116028 -306.96694946]
[177.78657532 -292.72897339]
[170.74043274 -279.44937134]
[161.65521240 -267.47210693]
[150.76626587 -257.10739136]
[138.35563660 -248.62374878]
[124.74478912 -242.24087524]
[110.28627777 -238.12414551]
[95.35460663 -236.38015747]
[94.68482208 -221.39511108]
[94.01503754 -206.41007996]
[93.34525299 -191.42503357]
[92.67546844 -176.44000244]
[92.00568390 -161.45495605]
[91.33589935 -146.46992493]
[91.44756317 -131.47033691]
[92.34037781 -116.49692535]
[93.23319244 -101.52352142]
[94.12601471 -86.55011749]
[95.01882935 -71.57671356]
[108.06304932 -60.96129608]
[109.42046356 -43.85947418]
[97.76421356 -30.81527328]
[106.42669678 -18.69872665]
[99.73723602 -4.36130428]
[100.85288239 10.59714890]
[101.96853638 25.55560303]
[103.08418274 40.51405716]
[104.19982910 55.47250748]
[112.86231232 67.58905792]
[106.17285156 81.92647552]
[117.08336639 91.46098328]
[118.16104889 105.91037750]
[108.78560638 116.95787048]
[109.90125275 131.91632080]
[111.01689911 146.87478638]
[112.24387360 161.82450867]
[113.58210754 176.76469421]
[114.92034149 191.70487976]
[123.85797882 204.75973511]
[117.28700256 218.12654114]
[118.62523651 233.06672668]
[128.00437927 241.92079163]
[128.81143188 254.39205933]
[121.15800476 263.75964355]
[122.27365112 278.71810913]
[123.38929749 293.67654419]
[138.39529419 293.60684204]
[153.36959839 294.58404541]
[168.23925781 296.60345459]
[182.93182373 299.65518188]
[197.37573242 303.72439575]
[211.50059509 308.79125977]
[225.23759460 314.83108521]
[238.51982117 321.81442261]
[251.28254700 329.70730591]
[263.46359253 338.47122192]
[275.00366211 348.06353760]
[285.84646606 358.43743896]
[295.93920898 369.54248047]
[305.23269653 381.32446289]
[313.68170166 393.72604370]
[321.24499512 406.68679810]
[327.88580322 420.14355469]
[333.57171631 434.03079224]
[338.27505493 448.28082275]
[341.97290039 462.82421875]
[344.64721680 477.59014893]
[346.28500366 492.50668335]
[346.87829590 507.50109863]
[346.42416382 522.50036621]
[344.92483521 537.43145752]
[342.38760376 552.22155762]
[338.82485962 566.79864502]
[334.25393677 581.09167480]
[328.69711304 595.03106689]
[322.18145752 608.54888916]
[314.73870850 621.57922363]
[306.40515137 634.05865479]
[297.22134399 645.92639160]
[287.23208618 657.12457275]
[276.48599243 667.59863281]
[265.03543091 677.29760742]
[252.93620300 686.17419434]
[240.24725342 694.18511963]
[227.03039551 701.29138184]
[213.35002136 707.45843506]
[199.27278137 712.65612793]
[184.86724854 716.85913086]
[170.20362854 720.04705811]
[155.35334778 722.20434570]
[140.38874817 723.32043457]
[125.38275146 723.38995361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 164]
[43 163]
[44 162]
[46 159]
[47 158]
[49 156]
[50 155]
[51 154]
[53 153]
[54 152]
[55 151]
[58 148]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[66 140]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
