%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[92.08900452 596.28875732]
[79.37836456 604.29467773]
[65.73146057 610.57293701]
[51.38180542 615.01617432]
[36.57494354 617.54840088]
[21.56424141 618.12615967]
[6.60654831 616.73962402]
[-8.04218769 613.41253662]
[-22.13130951 608.20178223]
[-35.41973114 601.19659424]
[-47.68007278 592.51678467]
[-58.70254135 582.31091309]
[-68.29853058 570.75354004]
[-76.30384064 558.04254150]
[-82.58148956 544.39532471]
[-87.02405548 530.04547119]
[-89.55552673 515.23846436]
[-90.13257599 500.22775269]
[-88.74533844 485.27014160]
[-85.41754913 470.62155151]
[-80.20615387 456.53268433]
[-73.20031738 443.24459839]
[-64.51992798 430.98468018]
[-54.31351471 419.96267700]
[-42.75572205 410.36724854]
[-30.04431915 402.36254883]
[-16.39681816 396.08554077]
[-2.04674125 391.64364624]
[12.76035976 389.11288452]
[27.77111816 388.53656006]
[42.72867966 389.92449951]
[38.00242996 375.79965210]
[48.60408020 364.05590820]
[51.92634201 349.42843628]
[55.24860001 334.80096436]
[58.57086182 320.17352295]
[61.78413391 305.52172852]
[64.88824463 290.84643555]
[67.99235535 276.17111206]
[71.09646606 261.49581909]
[74.20057678 246.82051086]
[76.64630127 232.02124023]
[78.42877197 217.12753296]
[80.21123505 202.23381042]
[81.99369812 187.34008789]
[69.98917389 178.52210999]
[63.97017288 164.78793335]
[65.64491272 149.78587341]
[74.66313934 137.55606079]
[88.68348694 131.44238281]
[90.46595001 116.54866028]
[81.59315491 105.09354401]
[83.31495667 90.70668793]
[94.64032745 81.66887665]
[96.42279816 66.77515411]
[98.20526123 51.88143921]
[99.98773193 36.98772049]
[101.77019501 22.09400368]
[90.03280640 31.43390274]
[75.03513336 31.16976357]
[63.63390732 21.42234993]
[61.04161835 6.64804697]
[68.44342804 -6.39853334]
[82.45532227 -11.75267029]
[96.67125702 -6.96652317]
[104.59228516 5.77355671]
[107.91454315 -8.85390377]
[111.23680115 -23.48136330]
[99.92472839 -13.63063335]
[85.22207642 -10.65874767]
[70.97209167 -15.34254932]
[60.89968872 -26.45770264]
[57.63776398 -41.09873581]
[62.03897858 -55.43851852]
[72.95286560 -65.72866058]
[87.52656555 -69.27935028]
[101.95053864 -65.16243744]
[112.45439911 -54.45408630]
[116.29246521 -39.95430756]
[121.74781799 -53.92710495]
[127.20317841 -67.89990234]
[132.65853882 -81.87270355]
[132.86448669 -91.00480652]
[138.30053711 -96.01193237]
[143.96331787 -109.90195465]
[149.62609863 -123.79198456]
[154.66302490 -137.92102051]
[159.06402588 -152.26086426]
[163.46501160 -166.60070801]
[167.86601257 -180.94055176]
[172.26701355 -195.28039551]
[176.66801453 -209.62025452]
[163.00488281 -215.86314392]
[150.27352905 -223.83607483]
[138.69180298 -233.40261841]
[128.45790100 -244.39907837]
[119.74691772 -256.63729858]
[112.70791626 -269.90783691]
[107.46134949 -283.98367310]
[104.09698486 -298.62387085]
[102.67240143 -313.57800293]
[103.21196747 -328.59011841]
[105.70644379 -343.40338135]
[110.11315918 -357.76428223]
[116.35670471 -371.42712402]
[124.33024597 -384.15811157]
[133.89733887 -395.73937988]
[144.89428711 -405.97274780]
[157.13291931 -414.68316650]
[170.40380859 -421.72152710]
[184.47987366 -426.96740723]
[199.12025452 -430.33108521]
[214.07443237 -431.75494385]
[229.08653259 -431.21469116]
[243.89967346 -428.71948242]
[258.26037598 -424.31210327]
[271.92291260 -418.06790161]
[284.65350342 -410.09375000]
[296.23431396 -400.52609253]
[306.46719360 -389.52865601]
[315.17700195 -377.28964233]
[322.21472168 -364.01840210]
[327.45996094 -349.94207764]
[330.82293701 -335.30154419]
[332.24609375 -320.34729004]
[331.70510864 -305.33523560]
[329.20919800 -290.52221680]
[324.80111694 -276.16171265]
[318.55627441 -262.49948120]
[310.58151245 -249.76925659]
[301.01333618 -238.18890381]
[290.01541138 -227.95655823]
[277.77593994 -219.24732971]
[264.50439453 -212.21022034]
[250.42782593 -206.96566772]
[235.78712463 -203.60339355]
[220.83280945 -202.18095398]
[205.82075500 -202.72265625]
[191.00785828 -205.21925354]
[186.60685730 -190.87940979]
[182.20585632 -176.53955078]
[177.80487061 -162.19970703]
[173.40386963 -147.85986328]
[169.00286865 -133.52001953]
[182.72752380 -139.57261658]
[196.76142883 -134.27645874]
[203.06533813 -120.66540527]
[198.02807617 -106.53649902]
[184.53523254 -99.98340607]
[170.31610107 -104.76004791]
[163.51612854 -118.12919617]
[157.85334778 -104.23917389]
[152.19055176 -90.34914398]
[146.63133240 -76.41734314]
[141.17597961 -62.44454575]
[135.72061157 -48.47174835]
[130.26525879 -34.49895096]
[125.86426544 -20.15910339]
[122.54200745 -5.53164387]
[119.21974182 9.09581661]
[116.66390991 23.87647057]
[114.88144684 38.77018738]
[113.09898376 53.66390610]
[111.31651306 68.55762482]
[109.53404999 83.45133972]
[118.40684509 94.90645599]
[116.68504333 109.29331207]
[105.35967255 118.33112335]
[103.57720184 133.22483826]
[115.75889587 142.47436523]
[121.63645935 156.48689270]
[119.72374725 171.46046448]
[110.63377380 183.38641357]
[96.88742065 189.12255859]
[95.10494995 204.01628113]
[93.32248688 218.90998840]
[91.54001617 233.80371094]
[103.97052002 225.40832520]
[118.72225952 228.12606812]
[127.34477234 240.40011597]
[124.89868927 255.19934082]
[112.78524017 264.04605103]
[97.94355774 261.87246704]
[88.87587738 249.92462158]
[85.77176666 264.59994507]
[82.66765594 279.27523804]
[79.56354523 293.95053101]
[76.45943451 308.62582397]
[77.74521637 317.66931152]
[73.19831848 323.49578857]
[69.87606049 338.12322998]
[66.55380249 352.75070190]
[63.23154068 367.37814331]
[67.72016144 382.54928589]
[57.35614014 393.24676514]
[71.44575500 398.45614624]
[84.73484802 405.46008301]
[96.99600983 414.13873291]
[108.01945496 424.34356689]
[117.61654663 435.89999390]
[125.62306213 448.61026001]
[131.90200806 462.25686646]
[136.34594727 476.60629272]
[138.87881470 491.41302490]
[139.45730591 506.42370605]
[138.07148743 521.38146973]
[134.74508667 536.03033447]
[129.53503418 550.11975098]
[122.53046417 563.40850830]
[113.85124207 575.66925049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 195]
[33 193]
[34 192]
[35 191]
[36 190]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[42 177]
[43 176]
[44 175]
[45 174]
[50 169]
[51 168]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[66 160]
[67 159]
[68 158]
[79 157]
[80 156]
[81 155]
[82 154]
[84 153]
[85 152]
[86 151]
[87 144]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
