%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[80.31574249 180.02615356]
[80.75497437 195.02647400]
[80.09807587 210.01882935]
[78.34855652 224.92324829]
[75.51573944 239.66020203]
[71.61475372 254.15104675]
[66.66640472 268.31848145]
[60.69709015 282.08691406]
[53.73866272 295.38287354]
[45.82825470 308.13543701]
[37.00806427 320.27655029]
[27.32515717 331.74145508]
[16.83119392 342.46893311]
[5.58216429 352.40179443]
[-6.36191177 361.48703003]
[-18.93730736 369.67614746]
[-32.07692719 376.92550659]
[-45.71066284 383.19635010]
[-59.76576996 388.45529175]
[-74.16726685 392.67422485]
[-88.83830261 395.83062744]
[-103.70060730 397.90774536]
[-118.67488098 398.89437866]
[-133.68122864 398.78536987]
[-148.63958740 397.58123779]
[-163.47013855 395.28842163]
[-178.09376526 391.91912842]
[-192.43244934 387.49139404]
[-206.40965271 382.02880859]
[-219.95083618 375.56051636]
[-232.98373413 368.12103271]
[-245.43881226 359.75003052]
[-257.24963379 350.49221802]
[-268.35314941 340.39694214]
[-278.69012451 329.51812744]
[-288.20541382 317.91375732]
[-296.84826660 305.64575195]
[-304.57254028 292.77960205]
[-311.33703613 279.38394165]
[-317.10568237 265.53021240]
[-321.84765625 251.29237366]
[-325.53765869 236.74636841]
[-328.15606689 221.96981812]
[-329.68884277 207.04156494]
[-330.12780762 192.04124451]
[-329.47067261 177.04888916]
[-327.72091675 162.14450073]
[-324.88784790 147.40760803]
[-320.98663330 132.91682434]
[-316.03805542 118.74946594]
[-310.06851196 104.98113251]
[-303.10986328 91.68527985]
[-295.19924927 78.93284607]
[-286.37884521 66.79187775]
[-276.69577026 55.32714462]
[-266.20162964 44.59982300]
[-254.95242310 34.66714859]
[-243.00819397 25.58211136]
[-230.43266296 17.39318848]
[-217.29293823 10.14407158]
[-203.65908813 3.87343740]
[-189.60389709 -1.38525665]
[-175.20233154 -5.60395288]
[-160.53125000 -8.76014328]
[-145.66889954 -10.83698654]
[-130.69461060 -11.82340336]
[-115.68826294 -11.71412945]
[-100.72992706 -10.50974751]
[-85.89941406 -8.21668530]
[-71.27584076 -4.84717607]
[-56.93724060 -0.41919827]
[-42.96011734 5.04362297]
[-29.41904259 11.51214027]
[-16.38626671 18.95184135]
[-3.93132544 27.32303238]
[7.87932873 36.58104706]
[18.98267937 46.67649460]
[29.31948662 57.55550385]
[38.83459473 69.16003418]
[47.47724152 81.42816162]
[55.20130920 94.29444885]
[61.96558762 107.69022369]
[75.81307220 101.92419434]
[89.66056061 96.15815735]
[76.99787140 88.11723328]
[75.23769379 73.22087097]
[85.67755127 62.45010757]
[100.62157440 63.74475098]
[109.05358887 76.15044403]
[104.75892639 90.52093506]
[118.99691772 85.80080414]
[129.66128540 74.11398315]
[144.17674255 77.45326233]
[158.41473389 72.73313141]
[172.65272522 68.01299286]
[186.89071655 63.29286194]
[201.12870789 58.57272720]
[215.36669922 53.85259247]
[211.54846191 39.34154129]
[208.64894104 24.61937332]
[206.67953491 9.74419498]
[205.64805603 -5.22529173]
[205.55854797 -20.23000717]
[206.41137695 -35.21073151]
[208.20318604 -50.10834885]
[210.92686462 -64.86405945]
[214.57171631 -79.41962433]
[219.12332153 -93.71761322]
[224.56372070 -107.70158386]
[230.87144470 -121.31636047]
[238.02160645 -134.50819397]
[245.98599243 -147.22503662]
[254.73315430 -159.41670227]
[264.22857666 -171.03506470]
[274.43481445 -182.03427124]
[285.31152344 -192.37092590]
[296.81582642 -202.00422668]
[308.90231323 -210.89614868]
[321.52328491 -219.01159668]
[334.62893677 -226.31855774]
[348.16751099 -232.78819275]
[362.08563232 -238.39495850]
[376.32830811 -243.11674500]
[390.83938599 -246.93489075]
[405.56155396 -249.83433533]
[420.43676758 -251.80366516]
[435.40625000 -252.83506775]
[450.41094971 -252.92449951]
[465.39169312 -252.07157898]
[480.28927612 -250.27970886]
[495.04498291 -247.55593872]
[509.60052490 -243.91102600]
[523.89849854 -239.35934448]
[537.88244629 -233.91886902]
[551.49719238 -227.61106873]
[564.68896484 -220.46083069]
[577.40576172 -212.49638367]
[589.59741211 -203.74916077]
[601.21569824 -194.25367737]
[612.21484375 -184.04739380]
[622.55145264 -173.17062378]
[632.18469238 -161.66625977]
[641.07653809 -149.57972717]
[649.19195557 -136.95872498]
[656.49884033 -123.85304260]
[662.96838379 -110.31442261]
[668.57507324 -96.39628601]
[673.29681396 -82.15357208]
[677.11486816 -67.64247894]
[680.01428223 -52.92028046]
[681.98352051 -38.04508209]
[683.01483154 -23.07558441]
[683.10418701 -8.07086754]
[682.25115967 6.90984964]
[680.45922852 21.80744553]
[677.73541260 36.56312561]
[674.09039307 51.11865997]
[669.53863525 65.41659546]
[664.09808350 79.40051270]
[657.79022217 93.01522064]
[650.63989258 106.20698547]
[642.67541504 118.92374420]
[633.92810059 131.11531067]
[624.43255615 142.73358154]
[614.22625732 153.73268127]
[603.34942627 164.06921387]
[591.84497070 173.70239258]
[579.75842285 182.59419250]
[567.13739014 190.70951843]
[554.03161621 198.01634216]
[540.49298096 204.48583984]
[526.57482910 210.09245300]
[512.33209229 214.81408691]
[497.82098389 218.63208008]
[483.09875488 221.53138733]
[468.22354126 223.50054932]
[453.25405884 224.53179932]
[438.24932861 224.62106323]
[423.26861572 223.76800537]
[408.37103271 221.97596741]
[393.61535645 219.25204468]
[379.05984497 215.60697937]
[364.76193237 211.05514526]
[350.77804565 205.61453247]
[337.16339111 199.30657959]
[323.97164917 192.15621948]
[311.25494385 184.19163513]
[299.06341553 175.44427490]
[287.44519043 165.94866943]
[276.44613647 155.74227905]
[266.10964966 144.86540222]
[256.47656250 133.36093140]
[247.58480835 121.27430725]
[239.46955872 108.65321350]
[232.16279602 95.54746246]
[225.69337463 82.00877380]
[220.08682251 68.09058380]
[205.84883118 72.81071472]
[191.61085510 77.53085327]
[177.37286377 82.25098419]
[163.13487244 86.97111511]
[148.89688110 91.69125366]
[139.25090027 103.04045868]
[123.71704865 100.03879547]
[109.47906494 104.75892639]
[95.42658997 110.00564575]
[81.57910156 115.77168274]
[67.73162079 121.53771210]
[72.47383118 135.77546692]
[76.16409302 150.32141113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 208]
[83 207]
[84 206]
[90 205]
[91 204]
[93 202]
[94 201]
[95 200]
[96 199]
[97 198]
[98 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
