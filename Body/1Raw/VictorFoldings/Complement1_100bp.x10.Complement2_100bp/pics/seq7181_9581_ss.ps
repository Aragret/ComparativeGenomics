%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[138.01341248 526.15515137]
[123.68596649 530.91192627]
[108.60639954 531.62567139]
[93.89373016 528.24334717]
[80.63972473 521.01605225]
[69.82792664 510.48004150]
[62.26064301 497.41717529]
[58.49940872 482.79678345]
[58.82333755 467.70382690]
[63.20838928 453.25827026]
[71.32917023 440.53207397]
[82.58305359 430.46966553]
[96.13494110 423.81765747]
[110.97917938 421.06973267]
[112.31741333 406.12954712]
[113.65564728 391.18936157]
[114.99388123 376.24917603]
[116.33211517 361.30899048]
[116.10878754 346.31063843]
[114.32632446 331.41693115]
[112.54385376 316.52322388]
[110.76139069 301.62948608]
[107.62727356 298.02584839]
[106.72367859 292.41506958]
[109.15439606 286.26666260]
[107.81616211 271.32647705]
[94.95973969 263.85314941]
[88.89743805 250.07954407]
[92.14595795 235.20336914]
[103.66426849 224.97425842]
[102.32603455 210.03407288]
[100.98780060 195.09388733]
[99.64956665 180.15370178]
[90.80764771 168.16748047]
[97.28290558 153.73204041]
[95.94467163 138.79185486]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[78.92885590 88.89388275]
[64.15204620 86.31594086]
[56.82073593 73.22961426]
[62.33929443 59.28166199]
[76.63964844 54.75398636]
[89.17925262 62.98281479]
[88.73265076 47.98946762]
[85.34912109 39.50479889]
[88.39268494 32.76992798]
[88.16935730 17.77159119]
[87.94602966 2.77325392]
[87.72270203 -12.22508335]
[87.49937439 -27.22342110]
[87.27604675 -42.22175980]
[86.94107056 -57.21801758]
[86.49446106 -72.21136475]
[86.04785919 -87.20471954]
[85.60124969 -102.19806671]
[85.15464783 -117.19141388]
[84.70803833 -132.18476868]
[83.70378113 -147.15110779]
[82.14325714 -162.06971741]
[80.58273315 -176.98832703]
[79.02220917 -191.90692139]
[64.01763153 -191.56707764]
[49.03528214 -192.45137024]
[34.17486572 -194.55393982]
[19.53527641 -197.86077881]
[5.21393967 -202.34989929]
[-8.69383621 -207.99139404]
[-22.09549713 -214.74775696]
[-34.90185547 -222.57398987]
[-47.02768326 -231.41802979]
[-58.39228821 -241.22102356]
[-68.92003632 -251.91770935]
[-78.54086304 -263.43695068]
[-87.19075775 -275.70202637]
[-94.81213379 -288.63134766]
[-101.35428619 -302.13885498]
[-106.77367401 -316.13467407]
[-111.03423309 -330.52566528]
[-114.10760498 -345.21603394]
[-115.97334290 -360.10803223]
[-116.61902618 -375.10256958]
[-116.04035950 -390.09985352]
[-114.24118805 -405.00003052]
[-111.23349762 -419.70401001]
[-107.03729248 -434.11389160]
[-101.68049622 -448.13378906]
[-95.19877625 -461.67041016]
[-87.63524628 -474.63363647]
[-79.04026031 -486.93725586]
[-69.47100067 -498.49935913]
[-58.99115753 -509.24301147]
[-47.67047501 -519.09667969]
[-35.58428955 -527.99481201]
[-22.81303406 -535.87817383]
[-9.44169998 -542.69439697]
[4.44072723 -548.39794922]
[18.74185944 -552.95104980]
[33.36652756 -556.32324219]
[48.21739960 -558.49224854]
[63.19564819 -559.44348145]
[78.20159149 -559.17065430]
[93.13536835 -557.67565918]
[107.89759827 -554.96838379]
[122.39002991 -551.06683350]
[136.51623535 -545.99694824]
[150.18217468 -539.79254150]
[163.29693604 -532.49487305]
[175.77322388 -524.15252686]
[187.52799988 -514.82098389]
[198.48306274 -504.56234741]
[208.56549072 -493.44488525]
[217.70819092 -481.54263306]
[225.85031128 -468.93475342]
[232.93766785 -455.70513916]
[238.92311096 -441.94189453]
[243.76678467 -427.73657227]
[247.43646240 -413.18368530]
[249.90774536 -398.38012695]
[251.16415405 -383.42437744]
[251.19734192 -368.41598511]
[250.00709534 -353.45483398]
[247.60131836 -338.64047241]
[243.99603271 -324.07150269]
[239.21524048 -309.84487915]
[233.29072571 -296.05529785]
[226.26194763 -282.79449463]
[218.17567444 -270.15072632]
[209.08570862 -258.20812988]
[199.05255127 -247.04620361]
[188.14297485 -236.73921204]
[176.42958069 -227.35577393]
[163.99032593 -218.95829773]
[150.90797424 -211.60269165]
[137.26959229 -205.33790588]
[123.16596222 -200.20562744]
[108.69092560 -196.24000549]
[93.94081116 -193.46745300]
[95.50133514 -178.54884338]
[97.06185913 -163.63023376]
[98.62238312 -148.71163940]
[109.95178223 -158.54243469]
[124.72859955 -155.96449280]
[132.05990601 -142.87817383]
[126.54134369 -128.93022156]
[112.24098969 -124.40254211]
[99.70138550 -132.63137817]
[100.14799500 -117.63802338]
[100.59460449 -102.64467621]
[101.04120636 -87.65132141]
[101.48781586 -72.65797424]
[101.93441772 -57.66462326]
[105.27567291 -51.07237244]
[102.27438354 -42.44508743]
[102.49771118 -27.44674873]
[102.72103882 -12.44841099]
[102.94436646 2.54992628]
[103.16769409 17.54826355]
[103.39102173 32.54660034]
[103.72599792 47.54286194]
[104.17259979 62.53620911]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[110.88484955 137.45362854]
[112.22309113 152.39381409]
[121.16072845 165.44866943]
[114.58975220 178.81547546]
[115.92798615 193.75566101]
[117.26622009 208.69584656]
[118.60445404 223.63603210]
[131.75732422 231.65527344]
[137.59791565 245.71730042]
[134.07995605 260.34906006]
[122.75634766 269.98825073]
[124.09458160 284.92843628]
[125.65510559 299.84701538]
[127.43756866 314.74075317]
[129.22003174 329.63446045]
[131.00250244 344.52816772]
[137.03247070 330.79357910]
[147.80610657 320.35668945]
[161.72520447 314.76574707]
[176.72497559 314.85018921]
[190.58026123 320.59741211]
[201.23573303 331.15493774]
[207.11070251 344.95654297]
[207.33366394 359.95489502]
[201.87153625 373.92504883]
[191.53459167 384.79461670]
[177.85626221 390.95117188]
[162.86563110 391.48141479]
[148.78648376 386.30670166]
[137.70738220 376.19467163]
[131.27229309 362.64721680]
[129.93406677 377.58740234]
[128.59582520 392.52758789]
[127.25759888 407.46777344]
[125.91936493 422.40795898]
[140.03894043 427.75027466]
[152.19290161 436.70480347]
[161.47933960 448.60708618]
[167.20915222 462.57391357]
[168.95715332 477.56881714]
[166.59359741 492.47906494]
[160.29391479 506.19827271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 184]
[20 183]
[21 182]
[22 181]
[25 180]
[26 179]
[30 175]
[31 174]
[32 173]
[33 172]
[35 170]
[36 169]
[37 168]
[38 167]
[39 165]
[40 164]
[46 163]
[47 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 154]
[56 153]
[57 152]
[58 151]
[59 150]
[60 149]
[61 143]
[62 142]
[63 141]
[64 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
