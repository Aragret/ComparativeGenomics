%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[153.34880066 979.83068848]
[138.41748047 978.37915039]
[123.54957581 976.38006592]
[108.76514435 973.83618164]
[94.08413696 970.75085449]
[79.52638245 967.12835693]
[65.11153412 962.97351074]
[50.85903931 958.29187012]
[36.78814697 953.08984375]
[22.91785240 947.37445068]
[9.26687813 941.15338135]
[-4.14634800 934.43505859]
[-17.30371857 927.22845459]
[-30.18746948 919.54345703]
[-42.78021240 911.39025879]
[-55.06494522 902.78002930]
[-67.02507782 893.72430420]
[-78.64447784 884.23535156]
[-89.90745544 874.32592773]
[-100.79879761 864.00946045]
[-111.30381012 853.29986572]
[-121.40830994 842.21160889]
[-131.09864807 830.75958252]
[-140.36175537 818.95935059]
[-149.18511963 806.82678223]
[-157.55683899 794.37829590]
[-165.46560669 781.63061523]
[-172.90074158 768.60107422]
[-179.85220337 755.30718994]
[-186.31062317 741.76684570]
[-192.26725769 727.99841309]
[-197.71409607 714.02050781]
[-202.64376831 699.85186768]
[-207.04962158 685.51177979]
[-210.92570496 671.01947021]
[-214.26679993 656.39453125]
[-217.06837463 641.65679932]
[-219.32666016 626.82604980]
[-221.03860474 611.92230225]
[-222.20190430 596.96582031]
[-222.81498718 581.97662354]
[-222.87701416 566.97509766]
[-222.38790894 551.98132324]
[-221.34832764 537.01568604]
[-219.75967407 522.09838867]
[-217.62411499 507.24945068]
[-214.94450378 492.48901367]
[-211.72445679 477.83697510]
[-207.96835327 463.31311035]
[-203.68122864 448.93704224]
[-198.86889648 434.72814941]
[-193.53782654 420.70565796]
[-187.69525146 406.88845825]
[-181.34901428 393.29519653]
[-174.50772095 379.94427490]
[-167.18058777 366.85363770]
[-159.37751770 354.04104614]
[-151.10902405 341.52374268]
[-142.38629150 329.31863403]
[-133.22106934 317.44219971]
[-123.62576294 305.91046143]
[-113.61330414 294.73898315]
[-103.19721222 283.94287109]
[-92.39154816 273.53671265]
[-81.21090698 263.53448486]
[-69.67037201 253.94976807]
[-57.78552628 244.79545593]
[-45.57241440 236.08392334]
[-33.04752350 227.82691956]
[-20.22776222 220.03559875]
[-7.13043547 212.72048950]
[6.22677565 205.89144897]
[19.82584000 199.55769348]
[33.64839935 193.72778320]
[47.67579269 188.40959167]
[61.88908386 183.61030579]
[76.26908875 179.33638000]
[90.79638672 175.59359741]
[105.45137787 172.38699341]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[85.11899567 59.80123138]
[70.07311249 58.86065292]
[55.68973160 54.34602356]
[42.80509949 46.51980972]
[32.16830063 35.83702087]
[24.39775085 22.91873932]
[19.94521713 8.51601696]
[19.06956482 -6.53378916]
[21.82170296 -21.35570335]
[28.04162598 -35.08800125]
[37.36771393 -46.93230438]
[49.25776291 -56.19999695]
[63.02050400 -62.35227203]
[77.85578156 -65.03144073]
[92.90109253 -64.08174896]
[107.28173065 -59.55839539]
[120.16162109 -51.72437286]
[130.79194641 -41.03513718]
[138.55465698 -28.11214638]
[142.99845886 -13.70672798]
[143.86499023 1.34360611]
[141.10386658 16.16385078]
[134.87561035 29.89237404]
[125.54234314 41.73101807]
[113.64668274 50.99150467]
[99.88021851 57.13543320]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[120.21259308 169.72120667]
[135.06344604 167.59919739]
[149.98223877 166.02418518]
[164.94882202 164.99827576]
[179.94297791 164.52285767]
[194.94448853 164.59858704]
[209.93309021 165.22535706]
[224.88853455 166.40231323]
[239.79066467 168.12788391]
[254.61933899 170.39971924]
[269.35455322 173.21475220]
[283.97640991 176.56919861]
[298.46517944 180.45852661]
[312.80126953 184.87747192]
[326.96536255 189.82008362]
[340.93832397 195.27967834]
[354.70129395 201.24890137]
[368.23568726 207.71968079]
[381.52325439 214.68328857]
[394.54602051 222.13032532]
[407.28643799 230.05072021]
[419.72729492 238.43380737]
[431.85177612 247.26824951]
[443.64355469 256.54214478]
[455.08670044 266.24291992]
[466.16574097 276.35754395]
[476.86575317 286.87234497]
[487.17227173 297.77310181]
[497.07138062 309.04513550]
[506.54974365 320.67318726]
[515.59454346 332.64160156]
[524.19354248 344.93417358]
[532.33520508 357.53436279]
[540.00842285 370.42514038]
[547.20300293 383.58908081]
[553.90911865 397.00845337]
[560.11767578 410.66510010]
[565.82043457 424.54058838]
[571.00958252 438.61624146]
[575.67816162 452.87301636]
[579.81988525 467.29165649]
[583.42907715 481.85269165]
[586.50097656 496.53652954]
[589.03137207 511.32327271]
[591.01684570 526.19299316]
[592.45477295 541.12561035]
[593.34313965 556.10101318]
[593.68072510 571.09887695]
[593.46722412 586.09906006]
[592.70275879 601.08129883]
[591.38848877 616.02526855]
[589.52606201 630.91094971]
[587.11810303 645.71813965]
[584.16784668 660.42681885]
[580.67919922 675.01727295]
[576.65692139 689.46966553]
[572.10644531 703.76458740]
[567.03393555 717.88269043]
[561.44616699 731.80487061]
[555.35076904 745.51245117]
[548.75592041 758.98681641]
[541.67053223 772.20983887]
[534.10418701 785.16363525]
[526.06707764 797.83074951]
[517.57006836 810.19409180]
[508.62460327 822.23687744]
[499.24279785 833.94299316]
[489.43725586 845.29650879]
[479.22128296 856.28216553]
[468.60864258 866.88513184]
[457.61364746 877.09106445]
[446.25115967 886.88623047]
[434.53652954 896.25732422]
[422.48553467 905.19177246]
[410.11447144 913.67749023]
[397.44000244 921.70306396]
[384.47930908 929.25756836]
[371.24981689 936.33087158]
[357.76940918 942.91339111]
[344.05630493 948.99627686]
[330.12899780 954.57128906]
[316.00625610 959.63092041]
[301.70721436 964.16833496]
[287.25112915 968.17742920]
[272.65753174 971.65270996]
[257.94610596 974.58959961]
[243.13673401 976.98400879]
[228.24940491 978.83282471]
[213.30419922 980.13348389]
[198.32128906 980.88421631]
[183.32092285 981.08404541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
