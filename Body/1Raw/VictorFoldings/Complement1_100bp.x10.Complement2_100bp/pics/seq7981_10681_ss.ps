%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[230.21054077 223.81010437]
[236.48114014 210.17416382]
[223.41696167 202.80348206]
[208.53024292 203.28833008]
[200.31300354 189.76843262]
[187.24880981 182.39775085]
[174.18463135 175.02705383]
[161.12043762 167.65637207]
[169.23078918 180.27470398]
[173.10568237 194.76556396]
[172.37577820 209.74778748]
[167.11064148 223.79338074]
[157.81213379 235.56358337]
[145.36650085 243.93653870]
[130.96000671 248.11419678]
[115.96577454 247.69836426]
[101.81295776 242.72866821]
[89.85050964 233.67881775]
[81.21862793 221.41134644]
[76.74003601 207.09555054]
[76.84161377 192.09588623]
[81.51367188 177.84205627]
[90.31090546 165.69262695]
[102.39481354 156.80560303]
[116.61363983 152.02804565]
[131.61212158 151.81532288]
[145.96174622 156.18818665]
[135.31573486 145.62113953]
[124.66973114 135.05409241]
[114.02371979 124.48705292]
[103.37771606 113.91999817]
[89.90921021 110.16619110]
[86.05523682 96.72600555]
[75.40923309 86.15895844]
[64.76322174 75.59191132]
[65.82006073 90.55463409]
[57.97827911 103.34159851]
[44.16266251 109.18357849]
[29.52609825 105.90166473]
[19.52766037 94.71993256]
[17.89651871 79.80888367]
[25.24105072 66.72997284]
[38.82192612 60.36131668]
[53.57484436 63.07881165]
[44.25996399 51.32155991]
[34.94507980 39.56430817]
[25.63019753 27.80705643]
[16.31531525 16.04980659]
[7.00043154 4.29255438]
[-2.40171957 -7.39502668]
[-11.89061832 -19.01228905]
[-24.39187050 -10.70052338]
[-37.64763260 -3.65413427]
[-51.53023529 2.05901551]
[-65.90598297 6.38390398]
[-80.63642883 9.27887821]
[-95.57969666 10.71605873]
[-110.59188080 10.68160343]
[-125.52838898 9.17584324]
[-140.24539185 6.21328211]
[-154.60113525 1.82244992]
[-168.45736694 -3.95436549]
[-181.68064880 -11.06152916]
[-194.14361572 -19.43059158]
[-205.72624207 -28.98095512]
[-216.31698608 -39.62063980]
[-225.81384277 -51.24718094]
[-234.12536621 -63.74860001]
[-241.17149353 -77.00450134]
[-246.88436890 -90.88722229]
[-251.20896912 -105.26305389]
[-254.10363770 -119.99355316]
[-255.54052734 -134.93685913]
[-255.50576782 -149.94903564]
[-253.99971008 -164.88551331]
[-251.03684998 -179.60246277]
[-246.64573669 -193.95811462]
[-240.86863708 -207.81422424]
[-233.76121521 -221.03736877]
[-225.39190674 -233.50016785]
[-215.84130859 -245.08261108]
[-205.20141602 -255.67314148]
[-193.57467651 -265.16976929]
[-181.07308960 -273.48104858]
[-167.81704712 -280.52688599]
[-153.93421936 -286.23950195]
[-139.55830383 -290.56381226]
[-124.82774353 -293.45819092]
[-109.88441467 -294.89477539]
[-94.87223816 -294.85971069]
[-79.93578339 -293.35336304]
[-65.21890259 -290.39019775]
[-50.86333466 -285.99880981]
[-37.00733185 -280.22143555]
[-23.78433990 -273.11373901]
[-11.32170677 -264.74417114]
[0.26054320 -255.19334412]
[10.85086346 -244.55323792]
[20.34725952 -232.92631531]
[28.65827560 -220.42457581]
[35.70386887 -207.16838074]
[41.41618729 -193.28544617]
[45.74021530 -178.90943909]
[48.63430405 -164.17881775]
[50.07058716 -149.23545837]
[50.03523254 -134.22328186]
[48.52857590 -119.28685760]
[45.56513214 -104.57003784]
[41.17343903 -90.21455383]
[35.39579010 -76.35866547]
[28.28783607 -63.13581848]
[19.91802406 -50.67335510]
[10.36696625 -39.09129715]
[-0.27335465 -28.50118828]
[9.21554375 -16.88392448]
[15.88143158 -13.69210339]
[18.75768280 -5.02232838]
[28.07256508 6.73492289]
[37.38744736 18.49217415]
[46.70233154 30.24942589]
[56.01721573 42.00667572]
[65.33209991 53.76392746]
[75.33026886 64.94589996]
[85.97628021 75.51294708]
[96.62228394 86.08000183]
[110.09078979 89.83380890]
[113.94476318 103.27399445]
[124.59076691 113.84104156]
[135.23678589 124.40808868]
[145.88278198 134.97514343]
[156.52879333 145.54219055]
[168.49113464 154.59217834]
[181.55531311 161.96287537]
[194.61950684 169.33355713]
[207.68368530 176.70425415]
[223.50483704 176.74659729]
[230.78765869 189.73928833]
[243.85183716 197.10998535]
[252.28074646 184.69172668]
[261.70639038 173.01196289]
[272.06433105 162.15043640]
[283.28384399 152.18138123]
[295.28826904 143.17288208]
[307.99563599 135.18647766]
[321.31909180 128.27673340]
[335.16766357 122.49082947]
[349.44674683 117.86830139]
[364.05874634 114.44073486]
[378.90393066 112.23152924]
[393.88082886 111.25578308]
[408.88714600 111.52016449]
[423.82037354 113.02286530]
[438.57852173 115.75361633]
[453.06072998 119.69376373]
[467.16812134 124.81639862]
[480.80429077 131.08653259]
[493.87609863 138.46130371]
[506.29421997 146.89038086]
[517.97387695 156.31613159]
[528.83526611 166.67420959]
[538.80419922 177.89384460]
[547.81256104 189.89839172]
[555.79882812 202.60583496]
[562.70843506 215.92939758]
[568.49414062 229.77803040]
[573.11651611 244.05715942]
[576.54388428 258.66921997]
[578.75292969 273.51440430]
[579.72851562 288.49133301]
[579.46392822 303.49765015]
[577.96105957 318.43084717]
[575.23010254 333.18896484]
[571.28979492 347.67114258]
[566.16699219 361.77844238]
[559.89672852 375.41455078]
[552.52178955 388.48626709]
[544.09259033 400.90429688]
[534.66668701 412.58386230]
[524.30847168 423.44512939]
[513.08868408 433.41390991]
[501.08404541 442.42211914]
[488.37649536 450.40823364]
[475.05288696 457.31765747]
[461.20416260 463.10324097]
[446.92498779 467.72540283]
[432.31286621 471.15264893]
[417.46765137 473.36148071]
[402.49075317 474.33688354]
[387.48443604 474.07214355]
[372.55123901 472.56909180]
[357.79315186 469.83798218]
[343.31103516 465.89749146]
[329.20376587 460.77450562]
[315.56774902 454.50405884]
[302.49612427 447.12896729]
[290.07818604 438.69961548]
[278.39874268 429.27355957]
[267.53759766 418.91522217]
[257.56893921 407.69537354]
[248.56086731 395.69061279]
[240.57492065 382.98297119]
[233.66564941 369.65924072]
[227.88023376 355.81045532]
[223.25822449 341.53125000]
[219.83117676 326.91909790]
[217.62251282 312.07385254]
[216.64729309 297.09692383]
[216.91221619 282.09060669]
[218.41545105 267.15740967]
[221.14672852 252.39938354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 138]
[3 137]
[5 135]
[6 134]
[7 133]
[8 132]
[27 131]
[28 130]
[29 129]
[30 128]
[31 127]
[33 125]
[34 124]
[35 123]
[44 122]
[45 121]
[46 120]
[47 119]
[48 118]
[49 117]
[50 115]
[51 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
