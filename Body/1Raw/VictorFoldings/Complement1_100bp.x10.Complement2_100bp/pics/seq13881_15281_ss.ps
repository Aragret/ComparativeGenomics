%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[43.15118027 797.99127197]
[28.16817284 798.76184082]
[13.16549110 798.82403564]
[-1.82338667 798.17761230]
[-16.76501465 796.82403564]
[-31.62605286 794.76641846]
[-46.37333679 792.00927734]
[-60.97396469 788.55877686]
[-75.39535522 784.42260742]
[-89.60532379 779.61004639]
[-103.57217407 774.13171387]
[-117.26472473 768.00000000]
[-130.65243530 761.22845459]
[-143.70542908 753.83227539]
[-156.39456177 745.82788086]
[-168.69155884 737.23321533]
[-180.56893921 728.06744385]
[-192.00022888 718.35095215]
[-202.95989990 708.10546875]
[-213.42350769 697.35382080]
[-223.36770630 686.12011719]
[-232.77029419 674.42926025]
[-241.61030579 662.30743408]
[-249.86799622 649.78167725]
[-257.52496338 636.87994385]
[-264.56411743 623.63098145]
[-270.96972656 610.06439209]
[-276.72750854 596.21038818]
[-281.82464600 582.09997559]
[-286.24969482 567.76464844]
[-289.99285889 553.23626709]
[-293.04574585 538.54736328]
[-295.40155029 523.73065186]
[-297.05502319 508.81924438]
[-298.00247192 493.84637451]
[-298.24176025 478.84548950]
[-297.77236938 463.85000610]
[-296.59536743 448.89346313]
[-294.71334839 434.00915527]
[-292.13052368 419.23034668]
[-288.85266113 404.58999634]
[-284.88708496 390.12075806]
[-280.24261475 375.85494995]
[-274.92965698 361.82440186]
[-268.96002197 348.06039429]
[-262.34704590 334.59365845]
[-255.10548401 321.45425415]
[-247.25151062 308.67147827]
[-238.80264282 296.27386475]
[-229.77772522 284.28906250]
[-220.19689941 272.74383545]
[-210.08154297 261.66394043]
[-199.45423889 251.07411194]
[-188.33868408 240.99797058]
[-176.75968933 231.45799255]
[-164.74310303 222.47546387]
[-152.31571960 214.07043457]
[-139.50527954 206.26165771]
[-126.34036255 199.06655884]
[-112.85035706 192.50120544]
[-99.06535339 186.58023071]
[-85.01611328 181.31684875]
[-70.73398590 176.72280884]
[-56.25084686 172.80834961]
[-41.59900665 169.58222961]
[-26.81116104 167.05163574]
[-11.92030716 165.22221375]
[3.04032588 164.09803772]
[18.03735542 163.68162537]
[33.03731918 163.97390747]
[48.00674438 164.97422791]
[62.91222763 166.68035889]
[77.72050476 169.08848572]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[93.57785797 56.73069763]
[103.78146362 45.88008881]
[89.48289490 41.30386734]
[75.72065735 35.30454254]
[62.63598633 27.94367599]
[50.36314392 19.29680443]
[39.02807617 9.45265770]
[28.74709320 -1.48774529]
[19.62569809 -13.41213989]
[11.75749207 -26.19816017]
[5.22321463 -39.71460342]
[0.08991826 -53.82276535]
[-3.58972096 -68.37787628]
[-5.77794409 -83.23057556]
[-6.45229578 -98.22845459]
[-5.60585642 -113.21759796]
[-3.24731207 -128.04420471]
[0.59913486 -142.55613708]
[5.89401388 -156.60444641]
[12.58298969 -170.04501343]
[20.59742355 -182.73988342]
[29.85507584 -194.55880737]
[40.26094437 -205.38049316]
[51.70824814 -215.09390259]
[64.07952118 -223.59933472]
[77.24781799 -230.80955505]
[91.07799530 -236.65052795]
[105.42815399 -241.06234741]
[120.15101624 -243.99972534]
[135.09552002 -245.43252563]
[150.10829163 -245.34603882]
[165.03529358 -243.74114990]
[179.72334290 -240.63435364]
[194.02171326 -236.05749512]
[207.78369141 -230.05757141]
[220.86804199 -222.69612122]
[233.14050293 -214.04870605]
[244.47514343 -204.20407104]
[254.75563049 -193.26321411]
[263.87649536 -181.33840942]
[271.74414062 -168.55204773]
[278.27783203 -155.03532410]
[283.41052246 -140.92692566]
[287.08950806 -126.37165833]
[289.27706909 -111.51885986]
[289.95077515 -96.52095795]
[289.10366821 -81.53184509]
[286.74447632 -66.70533752]
[282.89739990 -52.19358826]
[277.60189819 -38.14550400]
[270.91232300 -24.70523834]
[262.89733887 -12.01071644]
[253.63916016 -0.19220203]
[243.23281860 10.62902737]
[231.78507996 20.34192657]
[219.41343689 28.84682846]
[206.24482727 36.05645752]
[192.41438293 41.89682770]
[178.06404114 46.30801010]
[163.34103394 49.24473953]
[148.39646912 50.67687988]
[133.38369751 50.58973694]
[118.45677185 48.98419952]
[123.39279175 63.03713226]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[92.39581299 172.19259644]
[106.91088104 175.98692322]
[121.23058319 180.46249390]
[135.32293701 185.60929871]
[149.15652466 191.41586304]
[162.70046997 197.86924744]
[175.92453003 204.95501709]
[188.79922485 212.65739441]
[201.29582214 220.95918274]
[213.38641357 229.84184265]
[225.04403687 239.28556824]
[236.24269104 249.26928711]
[246.95736694 259.77072144]
[257.16415405 270.76641846]
[266.84030151 282.23187256]
[275.96420288 294.14147949]
[284.51550293 306.46868896]
[292.47509766 319.18594360]
[299.82525635 332.26492310]
[306.54959106 345.67639160]
[312.63302612 359.39047241]
[318.06207275 373.37652588]
[322.82455444 387.60339355]
[326.90988159 402.03924561]
[330.30892944 416.65194702]
[333.01409912 431.40884399]
[335.01934814 446.27703857]
[336.32022095 461.22335815]
[336.91381836 476.21441650]
[336.79882812 491.21679688]
[335.97546387 506.19699097]
[334.44558716 521.12158203]
[332.21261597 535.95727539]
[329.28152466 550.67102051]
[325.65884399 565.22985840]
[321.35269165 579.60137939]
[316.37265015 593.75354004]
[310.72982788 607.65472412]
[304.43682861 621.27392578]
[297.50769043 634.58074951]
[289.95788574 647.54553223]
[281.80422974 660.13922119]
[273.06494141 672.33386230]
[263.75955200 684.10223389]
[253.90875244 695.41796875]
[243.53457642 706.25592041]
[232.66015625 716.59185791]
[221.30976868 726.40270996]
[209.50871277 735.66656494]
[197.28335571 744.36285400]
[184.66096497 752.47204590]
[171.66969299 759.97613525]
[158.33854675 766.85833740]
[144.69726562 773.10333252]
[130.77627563 778.69708252]
[116.60666656 783.62725830]
[102.22003937 787.88275146]
[87.64849854 791.45410156]
[72.92456055 794.33331299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[79 146]
[80 145]
[82 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
