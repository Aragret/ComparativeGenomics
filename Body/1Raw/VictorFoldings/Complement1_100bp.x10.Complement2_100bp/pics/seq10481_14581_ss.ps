%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[56.87184143 811.44873047]
[41.86951828 811.40216064]
[26.88350296 810.70129395]
[11.94232273 809.34741211]
[-2.92558002 807.34307861]
[-17.69190407 804.69207764]
[-32.32854080 801.39959717]
[-46.80762482 797.47174072]
[-61.10160446 792.91607666]
[-75.18325806 787.74121094]
[-89.02578735 781.95709229]
[-102.60284424 775.57464600]
[-115.88857269 768.60607910]
[-128.85769653 761.06457520]
[-141.48551941 752.96459961]
[-153.74800110 744.32147217]
[-165.62181091 735.15173340]
[-177.08435059 725.47277832]
[-188.11376953 715.30303955]
[-198.68910217 704.66186523]
[-208.79020691 693.56958008]
[-218.39785767 682.04718018]
[-227.49375916 670.11669922]
[-236.06060791 657.80084229]
[-244.08209229 645.12298584]
[-251.54293823 632.10729980]
[-258.42895508 618.77856445]
[-264.72702026 605.16217041]
[-270.42514038 591.28405762]
[-275.51251221 577.17053223]
[-279.97940063 562.84857178]
[-283.81729126 548.34539795]
[-287.01895142 533.68859863]
[-289.57821655 518.90612793]
[-291.49026489 504.02606201]
[-292.75143433 489.07678223]
[-293.35928345 474.08670044]
[-293.31274414 459.08438110]
[-292.61181641 444.09835815]
[-291.25790405 429.15719604]
[-289.25354004 414.28927612]
[-286.60256958 399.52297974]
[-283.30999756 384.88635254]
[-279.38214111 370.40725708]
[-274.82644653 356.11328125]
[-269.65158081 342.03164673]
[-263.86743164 328.18911743]
[-257.48498535 314.61209106]
[-250.51637268 301.32635498]
[-242.97486877 288.35723877]
[-234.87486267 275.72943115]
[-226.23173523 263.46697998]
[-217.06195068 251.59317017]
[-207.38296509 240.13066101]
[-197.21321106 229.10125732]
[-186.57202148 218.52593994]
[-175.47969055 208.42485046]
[-163.95730591 198.81723022]
[-152.02680969 189.72134399]
[-139.71090698 181.15451050]
[-127.03305054 173.13305664]
[-114.01737213 165.67222595]
[-100.68864441 158.78623962]
[-87.07223511 152.48820496]
[-73.19406891 146.79010010]
[-59.08056641 141.70277405]
[-44.75858688 137.23590088]
[-30.25539970 133.39801025]
[-15.59860897 130.19639587]
[-0.81611574 127.63714600]
[14.06394100 125.72513580]
[29.01323700 124.46400452]
[44.00331116 123.85614777]
[59.00563812 123.90273285]
[73.99164581 124.60366821]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[92.38143921 42.46267319]
[101.74975586 30.88320732]
[103.75376892 16.01767921]
[105.75778198 1.15215123]
[107.76179504 -13.71337700]
[93.25402832 -17.60608101]
[79.36318207 -23.32208633]
[66.31735992 -30.76753426]
[54.33076859 -39.82016373]
[43.60025406 -50.33131790]
[34.30201721 -62.12839890]
[26.58874512 -75.01768494]
[20.58709145 -88.78752899]
[16.39561462 -103.21180725]
[14.08313751 -118.05366516]
[13.68763638 -133.06938171]
[15.21560478 -148.01240540]
[18.64195251 -162.63732910]
[23.91041374 -176.70401001]
[30.93447876 -189.98146057]
[39.59880447 -202.25166321]
[49.76111603 -213.31312561]
[61.25453568 -222.98419189]
[73.89033508 -231.10607910]
[87.46102142 -237.54539490]
[101.74374390 -242.19641113]
[116.50398254 -244.98275757]
[131.49935913 -245.85867310]
[146.48361206 -244.80978394]
[161.21072388 -241.85330200]
[175.43882751 -237.03778076]
[188.93431091 -230.44230652]
[201.47554016 -222.17515564]
[212.85659790 -212.37210083]
[222.89059448 -201.19412231]
[231.41276550 -188.82476807]
[238.28314209 -175.46713257]
[243.38894653 -161.34059143]
[246.64630127 -146.67710876]
[248.00173950 -131.71745300]
[247.43299866 -116.70729828]
[244.94941711 -101.89311218]
[240.59178162 -87.51815796]
[234.43162537 -73.81848907]
[226.57014465 -61.01906586]
[217.13639832 -49.33006287]
[206.28530884 -38.94342804]
[194.19505310 -30.02971458]
[181.06419373 -22.73530006]
[167.10830688 -17.17996216]
[152.55659485 -13.45492363]
[137.64799500 -11.62135410]
[122.62731934 -11.70936298]
[120.62330627 3.15616488]
[118.61929321 18.02169228]
[116.61528015 32.88722229]
[122.58283997 46.53410721]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[118.56468201 130.61253357]
[133.20133972 133.90501404]
[147.68043518 137.83280945]
[161.97442627 142.38842773]
[176.05609131 147.56320190]
[189.89865112 153.34729004]
[203.47572327 159.72969055]
[216.76147461 166.69822693]
[229.73063660 174.23965454]
[242.35847473 182.33959961]
[254.62100220 190.98266602]
[266.49484253 200.15238953]
[277.95739746 209.83131409]
[288.98687744 220.00100708]
[299.56222534 230.64213562]
[309.66339111 241.73442078]
[319.27105713 253.25674438]
[328.36700439 265.18719482]
[336.93389893 277.50305176]
[344.95544434 290.18087769]
[352.41632080 303.19650269]
[359.30236816 316.52520752]
[365.60049438 330.14157104]
[371.29867554 344.01971436]
[376.38607788 358.13317871]
[380.85299683 372.45513916]
[384.69097900 386.95831299]
[387.89266968 401.61508179]
[390.45199585 416.39755249]
[392.36410522 431.27761841]
[393.62530518 446.22689819]
[394.23321533 461.21697998]
[394.18673706 476.21929932]
[393.48587036 491.20532227]
[392.13198853 506.14648438]
[390.12768555 521.01440430]
[387.47674561 535.78070068]
[384.18426514 550.41735840]
[380.25643921 564.89648438]
[375.70080566 579.19042969]
[370.52600098 593.27209473]
[364.74188232 607.11462402]
[358.35946655 620.69171143]
[351.39089966 633.97747803]
[343.84945679 646.94659424]
[335.74948120 659.57446289]
[327.10638428 671.83691406]
[317.93664551 683.71075439]
[308.25772095 695.17333984]
[298.08798218 706.20275879]
[287.44683838 716.77807617]
[276.35455322 726.87921143]
[264.83218384 736.48687744]
[252.90173340 745.58282471]
[240.58586121 754.14971924]
[227.90803528 762.17120361]
[214.89237976 769.63208008]
[201.56367493 776.51812744]
[187.94728088 782.81622314]
[174.06913757 788.51434326]
[159.95565796 793.60174561]
[145.63369751 798.06866455]
[131.13052368 801.90655518]
[116.47373962 805.10827637]
[101.69125366 807.66754150]
[86.81120300 809.57958984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 144]
[77 143]
[79 141]
[80 140]
[81 139]
[83 137]
[84 136]
[85 135]
[86 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
