%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[216.38751221 584.64904785]
[212.70062256 570.00042725]
[213.29145813 554.90643311]
[218.11213684 540.59082031]
[226.77185059 528.21398926]
[238.56860352 518.77929688]
[252.54609680 513.05157471]
[250.98556519 498.13296509]
[249.42504883 483.21435547]
[247.75350952 468.30780029]
[245.97103882 453.41409302]
[244.18856812 438.52035522]
[234.99369812 426.80270386]
[241.03628540 412.18087769]
[239.25381470 397.28717041]
[237.47135925 382.39343262]
[235.68888855 367.49972534]
[233.90641785 352.60601807]
[232.12396240 337.71228027]
[227.19236755 323.54614258]
[219.34060669 310.76531982]
[211.48884583 297.98446655]
[203.63710022 285.20361328]
[190.38238525 278.40936279]
[189.75129700 262.60076904]
[181.89953613 249.81991577]
[174.04779053 237.03907776]
[166.19602966 224.25822449]
[152.49438477 228.85960388]
[138.10415649 230.29016113]
[123.74984741 228.47450256]
[110.15491486 223.50077820]
[98.00527954 215.61636353]
[87.91474152 205.21556091]
[80.39396667 192.81994629]
[75.82464600 179.05212402]
[74.44010162 164.60453796]
[76.31343079 150.20460510]
[81.35358429 136.57804871]
[89.30983734 124.41241455]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[73.61940765 85.42499542]
[73.77169037 70.53117371]
[66.11109161 57.63484573]
[58.45049667 44.73851776]
[59.61291122 59.69340897]
[57.34214020 74.52053070]
[51.75731277 88.44209290]
[43.15139389 100.72777557]
[31.97583389 110.73311615]
[18.81687737 117.93325043]
[4.36482096 121.95046997]
[-10.62221241 122.57403564]
[-25.35803223 119.77124786]
[-39.06962585 113.68912506]
[-51.03770828 104.64672852]
[-60.63446426 93.11840057]
[-67.35646057 79.70890045]
[-70.85108185 65.12165833]
[-70.93499756 50.12189484]
[-67.60382080 35.49646378]
[-61.03227997 22.01258850]
[-51.56511688 10.37760544]
[-39.69895554 1.20186424]
[-26.05627251 -5.03329563]
[-11.35273647 -8.00078964]
[3.64033604 -7.54494953]
[18.13643646 -3.68968701]
[31.37513161 3.36275816]
[42.66194153 13.24242878]
[51.40559387 25.43250656]
[48.95986557 10.63323593]
[46.51413727 -4.16603470]
[43.95830536 -18.94668770]
[41.29251099 -33.70790482]
[35.83651733 -19.73535538]
[25.22650909 -9.13216305]
[11.25045586 -3.68515158]
[-3.73643088 -4.31223774]
[-17.20859718 -10.90774727]
[-26.89574623 -22.36021996]
[-31.16542244 -36.73971558]
[-29.29811287 -51.62303162]
[-21.60848999 -64.50207520]
[-9.39239025 -73.20649719]
[5.29155779 -76.26944733]
[19.96885109 -73.17476654]
[32.16611099 -64.44396210]
[39.82841492 -51.54676056]
[40.05174255 -66.54509735]
[40.27507019 -81.54343414]
[40.49839783 -96.54177094]
[32.09127808 -106.32354736]
[32.58605957 -118.81110382]
[41.17251205 -127.33163452]
[41.61911774 -142.32498169]
[42.06572342 -157.31832886]
[42.51232910 -172.31167603]
[28.94035912 -179.29483032]
[19.74916267 -191.48025513]
[16.76366043 -206.44854736]
[20.57662773 -221.22772217]
[30.43099403 -232.88337708]
[44.37017059 -239.10125732]
[59.62651825 -238.64682007]
[73.17088318 -231.61027527]
[82.31402588 -219.38874817]
[85.24056244 -204.40882874]
[81.36942291 -189.64477539]
[71.46923065 -178.02803040]
[57.50568008 -171.86508179]
[57.05907440 -156.87171936]
[56.61246872 -141.87837219]
[56.16586304 -126.88502502]
[65.30454254 -111.90332031]
[55.49673462 -96.31844330]
[55.27340698 -81.32010651]
[55.05007935 -66.32176971]
[54.82675171 -51.32343292]
[56.05373001 -36.37370300]
[58.71952438 -21.61248398]
[63.00171661 -15.58881283]
[61.31340790 -6.61176252]
[63.75913620 8.18750858]
[66.20486450 22.98678017]
[71.34682465 37.07791901]
[79.00742340 49.97424698]
[86.66802216 62.87057495]
[99.82010651 69.86141968]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[127.58742523 102.09703064]
[143.14437866 101.22521973]
[158.45074463 104.09259033]
[172.62138367 110.52907562]
[184.83779907 120.15834045]
[194.39547729 132.41976929]
[200.74453735 146.60110474]
[203.52128601 161.87982178]
[202.56910706 177.37084961]
[197.94726562 192.17781067]
[189.92726135 205.44493103]
[178.97686768 216.40647888]
[186.82862854 229.18731689]
[194.68038940 241.96815491]
[202.53213501 254.74899292]
[216.34846497 262.45742798]
[216.41793823 277.35186768]
[224.26969910 290.13272095]
[232.12144470 302.91354370]
[239.97320557 315.69439697]
[238.59478760 300.75787354]
[240.20986938 285.84506226]
[244.75413513 271.54998779]
[252.04660034 258.44195557]
[261.79678345 247.04310608]
[273.61633301 237.80743408]
[287.03451538 231.10276794]
[301.51687622 227.19618225]
[316.48657227 226.24327087]
[331.34738159 228.28196716]
[345.50741577 233.23109436]
[358.40264893 240.89352417]
[369.51950073 250.96406555]
[378.41519165 263.04159546]
[384.73538208 276.64508057]
[388.22836304 291.23272705]
[388.75500488 306.22348022]
[386.29431152 321.02026367]
[380.94433594 335.03375244]
[372.91815186 347.70578003]
[362.53543091 358.53161621]
[350.20968628 367.08010864]
[336.43188477 373.01071167]
[321.75079346 376.08724976]
[306.75109863 376.18719482]
[292.03030396 373.30654907]
[278.17471313 367.56005859]
[265.73617554 359.17660522]
[255.21009827 348.49005127]
[247.01766968 335.92984009]
[248.80014038 350.82354736]
[250.58261108 365.71725464]
[252.36506653 380.61096191]
[254.14753723 395.50469971]
[255.93000793 410.39840698]
[265.25238037 423.18136597]
[259.08227539 436.73788452]
[260.86474609 451.63162231]
[262.64721680 466.52532959]
[266.77423096 474.67428589]
[264.34365845 481.65383911]
[265.90417480 496.57244873]
[267.46469116 511.49105835]
[282.32492065 514.20227051]
[295.81872559 520.99151611]
[306.85226440 531.30834961]
[314.53106689 544.31652832]
[318.23266602 558.96148682]
[317.65701294 574.05603027]
[312.85070801 588.37652588]
[304.20343018 600.76202393]
[292.41616821 610.20855713]
[278.44442749 615.95031738]
[263.42089844 617.52178955]
[248.56340027 614.79565430]
[235.07641602 607.99291992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 193]
[11 192]
[12 191]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 154]
[21 153]
[22 152]
[23 151]
[25 149]
[26 148]
[27 147]
[28 146]
[41 134]
[43 132]
[45 130]
[46 129]
[47 128]
[73 127]
[74 126]
[75 125]
[76 123]
[77 122]
[91 121]
[92 120]
[93 119]
[94 118]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
