%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[211.55276489 344.68490601]
[220.16213989 332.37261963]
[230.36788940 321.34735107]
[241.97990417 311.81451416]
[234.12814331 299.03369141]
[227.94844055 294.97991943]
[226.25627136 286.00357056]
[218.59567261 273.10726929]
[210.93507385 260.21093750]
[203.27447510 247.31460571]
[195.13926697 234.71229553]
[186.54069519 222.42144775]
[177.94213867 210.13061523]
[169.34356689 197.83978271]
[160.74501038 185.54893494]
[151.87411499 173.45318604]
[142.73530579 161.55854797]
[133.59651184 149.66392517]
[124.02138519 138.11761475]
[114.02321625 126.93564606]
[104.02503967 115.75366974]
[92.45697021 114.40422821]
[84.75889587 105.66461182]
[84.88036346 94.01873016]
[75.04978180 82.68914032]
[65.21920013 71.35954285]
[55.38861847 60.02994919]
[45.55803680 48.70035934]
[49.37123871 63.20758057]
[50.02108002 78.19349670]
[47.47800064 92.97634888]
[41.85768509 106.88361359]
[33.41582870 119.28260803]
[22.53647614 129.60925293]
[9.71456528 137.39376831]
[-4.46659231 142.28199768]
[-19.36184692 144.05155945]
[-34.29356766 142.62196350]
[-48.58245468 138.05822754]
[-61.57846832 130.56799316]
[-72.69036865 120.49199677]
[-81.41263580 108.28863525]
[-87.34848022 94.51308441]
[-90.22784424 79.79203796]
[-89.91973877 64.79520416]
[-86.43818665 50.20483398]
[-79.94157410 36.68470001]
[-70.72544861 24.84987640]
[-59.20909119 15.23876572]
[-45.91641235 8.28861141]
[-31.45213890 4.31559801]
[-16.47430229 3.50047231]
[-1.66429424 5.88031626]
[12.30412960 11.34686279]
[24.79549980 19.65142059]
[35.24420929 30.41960144]
[30.63019943 16.14686775]
[26.01618958 1.87413442]
[14.40908623 -8.87694550]
[17.85633087 -23.36714172]
[13.24232197 -37.63987350]
[8.62831306 -51.91260910]
[4.01430321 -66.18534088]
[-1.12765622 -80.27648163]
[-13.50223923 -90.13449097]
[-11.14227295 -104.84094238]
[-16.80505943 -118.73097229]
[-22.46784592 -132.62100220]
[-28.13063240 -146.51101685]
[-33.79341888 -160.40104675]
[-39.45620728 -174.29107666]
[-45.11899185 -188.18110657]
[-59.72515488 -184.64306641]
[-74.69550323 -183.32157898]
[-89.69559479 -184.24617004]
[-104.39032745 -187.39617920]
[-118.45140839 -192.70124817]
[-131.56471252 -200.04283142]
[-143.43727112 -209.25694275]
[-153.80386353 -220.13772583]
[-162.43290710 -232.44209290]
[-169.13159180 -245.89517212]
[-173.75028992 -260.19641113]
[-176.18580627 -275.02630615]
[-176.38372803 -290.05355835]
[-174.33966064 -304.94247437]
[-170.09924316 -319.36038208]
[-163.75721741 -332.98522949]
[-155.45526123 -345.51260376]
[-145.37884521 -356.66265869]
[-133.75308228 -366.18627930]
[-120.83769226 -373.87069702]
[-106.92121887 -379.54428101]
[-92.31455231 -383.08023071]
[-77.34401703 -384.39959717]
[-62.34405518 -383.47286987]
[-47.64977646 -380.32073975]
[-33.58945084 -375.01370239]
[-20.47719383 -367.67022705]
[-8.60593891 -358.45443726]
[1.75910652 -347.57217407]
[10.38638306 -335.26657104]
[17.08315468 -321.81253052]
[21.69981384 -307.51065063]
[24.13322067 -292.68041992]
[24.32901192 -277.65310669]
[22.28281593 -262.76449585]
[18.04034424 -248.34718323]
[11.69637489 -234.72325134]
[3.39263463 -222.19705200]
[-6.68536758 -211.04844666]
[-18.31248665 -201.52648926]
[-31.22896576 -193.84388733]
[-25.56617928 -179.95385742]
[-19.90339279 -166.06384277]
[-14.24060631 -152.17381287]
[-8.57781982 -138.28378296]
[-2.91503286 -124.39376068]
[2.74775362 -110.50373077]
[14.71729565 -101.63922882]
[12.76237106 -85.93927002]
[20.89733887 -98.54174042]
[35.80639648 -100.19097900]
[46.49914169 -89.67122650]
[45.09328079 -74.73725891]
[32.62516403 -66.39782715]
[18.28703690 -70.79935455]
[22.90104675 -56.52661896]
[27.51505470 -42.25388336]
[32.12906647 -27.98115158]
[43.40614319 -18.25095177]
[40.28892136 -2.73987484]
[44.90293121 11.53285885]
[49.51694107 25.80559158]
[56.88763046 38.86977768]
[66.71820831 50.19937134]
[76.54878998 61.52896500]
[86.37937164 72.85855865]
[96.20995331 84.18814850]
[112.20140839 89.25269318]
[115.20701599 105.75550079]
[125.20518494 116.93746948]
[135.20335388 128.11944580]
[138.63412476 113.51705933]
[152.12368774 106.95719910]
[165.72804260 113.27556610]
[169.41856384 127.81448364]
[160.47473145 139.85639954]
[145.49113464 140.52511597]
[154.62994385 152.41975403]
[163.76873779 164.31437683]
[168.59318542 166.30732727]
[171.84553528 169.62025452]
[173.28622437 173.43331909]
[173.03584290 176.95037842]
[181.63439941 189.24121094]
[190.23297119 201.53204346]
[198.83152771 213.82289124]
[207.43009949 226.11372375]
[212.57177734 212.02247620]
[226.74526978 207.11209106]
[239.50241089 215.00230408]
[241.43910217 229.87675476]
[231.12770081 240.77053833]
[216.17080688 239.65400696]
[223.83140564 252.55033875]
[231.49200439 265.44665527]
[239.15258789 278.34298706]
[246.90898132 291.18191528]
[254.76074219 303.96276855]
[268.51281738 297.91348267]
[282.96054077 293.79318237]
[297.83477783 291.67861938]
[312.85839844 291.60919189]
[327.75152588 293.58618164]
[342.23669434 297.57281494]
[356.04409790 303.49475098]
[368.91650391 311.24169922]
[380.61407471 320.66934204]
[390.91891479 331.60205078]
[399.63903809 343.83615112]
[406.61203003 357.14370728]
[411.70794678 371.27682495]
[414.83184814 385.97222900]
[415.92559814 400.95614624]
[414.96875000 415.94943237]
[411.97918701 430.67272949]
[407.01257324 444.85183716]
[400.16143799 458.22253418]
[391.55337524 470.53576660]
[381.34881592 481.56210327]
[369.73785400 491.09619141]
[356.93673706 498.96041870]
[343.18402100 505.00820923]
[328.73583984 509.12695312]
[313.86138916 511.23989868]
[298.83776855 511.30770874]
[283.94485474 509.32907104]
[269.46011353 505.34091187]
[255.65333557 499.41744995]
[242.78178406 491.66912842]
[231.08523560 482.24020386]
[220.78157043 471.30639648]
[212.06275940 459.07135010]
[205.09123230 445.76303101]
[199.99684143 431.62933350]
[196.87451172 416.93359375]
[195.78239441 401.94958496]
[196.74084473 386.95642090]
[199.73202515 372.23342896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 151]
[17 150]
[18 149]
[19 143]
[20 142]
[21 141]
[24 139]
[25 138]
[26 137]
[27 136]
[28 135]
[56 134]
[57 133]
[58 132]
[60 130]
[61 129]
[62 128]
[63 127]
[64 121]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
