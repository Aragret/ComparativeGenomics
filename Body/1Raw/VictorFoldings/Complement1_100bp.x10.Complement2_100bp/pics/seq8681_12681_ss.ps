%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[14.57460976 676.22216797]
[0.18353023 680.46319580]
[-14.39696884 683.99853516]
[-29.13230515 686.81982422]
[-43.98752594 688.92028809]
[-58.92739487 690.29504395]
[-73.91648102 690.94073486]
[-88.91922760 690.85589600]
[-103.90005493 690.04071045]
[-118.82342529 688.49713135]
[-133.65394592 686.22875977]
[-148.35643005 683.24102783]
[-162.89601135 679.54101562]
[-177.23820496 675.13751221]
[-191.34899902 670.04089355]
[-205.19491577 664.26336670]
[-218.74311829 657.81848145]
[-231.96145630 650.72167969]
[-244.81860352 642.98968506]
[-257.28402710 634.64093018]
[-269.32821655 625.69506836]
[-280.92254639 616.17352295]
[-292.03955078 606.09869385]
[-302.65286255 595.49456787]
[-312.73727417 584.38629150]
[-322.26892090 572.80017090]
[-331.22512817 560.76373291]
[-339.58471680 548.30554199]
[-347.32781982 535.45507812]
[-354.43606567 522.24285889]
[-360.89263916 508.70025635]
[-366.68215942 494.85934448]
[-371.79095459 480.75296021]
[-376.20687866 466.41458130]
[-379.91946411 451.87820435]
[-382.91992188 437.17831421]
[-385.20111084 422.34976196]
[-386.75759888 407.42773438]
[-387.58575439 392.44760132]
[-387.68356323 377.44494629]
[-387.05081177 362.45532227]
[-385.68899536 347.51425171]
[-383.60137939 332.65722656]
[-380.79284668 317.91946411]
[-377.27011108 303.33590698]
[-373.04153442 288.94116211]
[-368.11709595 274.76937866]
[-362.50851440 260.85412598]
[-356.22909546 247.22848511]
[-349.29370117 233.92472839]
[-341.71881104 220.97441101]
[-333.52239990 208.40824890]
[-324.72387695 196.25605774]
[-315.34411621 184.54666138]
[-305.40539551 173.30783081]
[-294.93127441 162.56622314]
[-283.94656372 152.34732056]
[-272.47738647 142.67533875]
[-260.55087280 133.57325745]
[-248.19534302 125.06262970]
[-235.44010925 117.16366577]
[-222.31542969 109.89508820]
[-208.85241699 103.27413940]
[-195.08300781 97.31652832]
[-181.03987122 92.03637695]
[-166.75631714 87.44622040]
[-152.26620483 83.55694580]
[-137.60392761 80.37776947]
[-122.80424500 77.91623688]
[-107.90227509 76.17817688]
[-92.93334961 75.16773224]
[-77.93298340 74.88728333]
[-62.93675232 75.33750153]
[-47.98022842 76.51731110]
[-33.09888077 78.42392731]
[-18.32801247 81.05281830]
[-3.70265579 84.39775085]
[10.74249935 88.45079041]
[24.97319031 93.20233154]
[38.95566177 98.64109039]
[52.65674973 104.75417328]
[66.04396057 111.52707672]
[79.08553314 118.94374847]
[87.12670898 106.28121948]
[87.90818024 92.32124329]
[100.21076965 85.67760468]
[108.25193787 73.01508331]
[116.29311371 60.35255432]
[124.33428955 47.69003296]
[132.37545776 35.02750778]
[140.41662598 22.36498070]
[148.45780945 9.70245647]
[156.49897766 -2.96006870]
[144.67561340 -12.21073914]
[133.81591797 -22.57576942]
[124.02449036 -33.95534134]
[115.39560699 -46.23985291]
[108.01239014 -59.31099701]
[101.94593811 -73.04289246]
[97.25467682 -87.30329132]
[93.98378754 -101.95484161]
[92.16476440 -116.85645294]
[91.81513977 -131.86460876]
[92.93827057 -146.83474731]
[95.52333832 -161.62272644]
[99.54545593 -176.08610535]
[104.96588135 -190.08560181]
[111.73241425 -203.48637390]
[119.77988434 -216.15937805]
[129.03079224 -227.98255920]
[139.39604187 -238.84204102]
[150.77580261 -248.63325500]
[163.06048584 -257.26187134]
[176.13179016 -264.64483643]
[189.86380005 -270.71102905]
[204.12429810 -275.40200806]
[218.77590942 -278.67257690]
[233.67755127 -280.49130249]
[248.68571472 -280.84063721]
[263.65585327 -279.71722412]
[278.44375610 -277.13183594]
[292.90707397 -273.10943604]
[306.90643311 -267.68872070]
[320.30709839 -260.92193604]
[332.97991943 -252.87420654]
[344.80291748 -243.62306213]
[355.66220093 -233.25759888]
[365.45318604 -221.87763977]
[374.08157349 -209.59277344]
[381.46426392 -196.52133179]
[387.53018188 -182.78919983]
[392.22085571 -168.52861023]
[395.49114990 -153.87693787]
[397.30960083 -138.97525024]
[397.65859985 -123.96708679]
[396.53488159 -108.99697876]
[393.94921875 -94.20911407]
[389.92651367 -79.74588776]
[384.50555420 -65.74661255]
[377.73846436 -52.34610748]
[369.69049072 -39.67342758]
[360.43911743 -27.85062027]
[350.07342529 -16.99155045]
[338.69326782 -7.20079851]
[326.40823364 1.42734277]
[313.33666992 8.80977726]
[299.60440063 14.87540627]
[285.34371948 19.56581306]
[270.69195557 22.83582497]
[255.79025269 24.65394974]
[240.78207397 25.00267792]
[225.81199646 23.87865067]
[211.02418518 21.29269028]
[196.56103516 17.26970673]
[182.56187439 11.84844017]
[169.16149902 5.08110428]
[161.12033081 17.74362946]
[153.07916260 30.40615463]
[145.03797913 43.06867981]
[136.99681091 55.73120499]
[128.95564270 68.39373016]
[120.91446686 81.05625153]
[112.87329102 93.71878052]
[112.09181976 107.67875671]
[99.78923035 114.32239532]
[91.74806213 126.98491669]
[104.00654602 135.63473511]
[115.82935333 144.87110901]
[127.18843842 154.67218018]
[138.05686951 165.01466370]
[148.40884399 175.87403870]
[158.21984863 187.22454834]
[167.46656799 199.03926086]
[176.12709045 211.29017639]
[184.18087769 223.94822693]
[191.60882568 236.98338318]
[198.39331055 250.36473083]
[204.51824951 264.06051636]
[209.96910095 278.03829956]
[214.73294067 292.26486206]
[218.79847717 306.70651245]
[222.15605164 321.32897949]
[224.79771423 336.09756470]
[226.71720886 350.97723389]
[227.90995789 365.93273926]
[228.37313843 380.92858887]
[228.10566711 395.92919922]
[227.10816956 410.89898682]
[225.38301086 425.80245972]
[222.93428040 440.60424805]
[219.76777649 455.26928711]
[215.89103699 469.76272583]
[211.31323242 484.05026245]
[206.04524231 498.09796143]
[200.09953308 511.87252808]
[193.49023438 525.34124756]
[186.23301697 538.47222900]
[178.34509277 551.23425293]
[169.84515381 563.59716797]
[160.75338745 575.53155518]
[151.09133911 587.00909424]
[140.88192749 598.00262451]
[130.14938354 608.48602295]
[118.91915131 618.43450928]
[107.21787262 627.82434082]
[95.07330322 636.63336182]
[82.51424408 644.84069824]
[69.57048035 652.42675781]
[56.27272034 659.37365723]
[42.65250397 665.66485596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 166]
[84 165]
[86 163]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[93 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
