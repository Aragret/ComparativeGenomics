%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[99.75328827 624.37481689]
[85.62121582 619.30505371]
[72.09651184 612.78588867]
[59.32734299 604.88867188]
[47.45362854 595.69995117]
[36.60546112 585.32037354]
[26.90169525 573.86376953]
[18.44865417 561.45550537]
[11.33895302 548.23168945]
[5.65048790 534.33709717]
[1.44558704 519.92407227]
[-1.22967935 505.15042114]
[-2.34599948 490.17803955]
[-1.89114225 475.17102051]
[0.12990861 460.29376221]
[3.69500947 445.70925903]
[8.76509857 431.57730103]
[15.28462601 418.05276489]
[23.18216133 405.28378296]
[32.37117004 393.41030884]
[42.75098038 382.56237793]
[54.20785522 372.85888672]
[66.61627960 364.40615845]
[79.84028625 357.29678345]
[93.73499298 351.60864258]
[108.14816284 347.40408325]
[122.92187500 344.72918701]
[121.80622864 329.77072144]
[120.69058228 314.81228638]
[118.27179718 312.24676514]
[116.97547913 308.38223267]
[117.39862061 303.75900269]
[119.87435913 299.16360474]
[119.42775726 284.17025757]
[118.98114777 269.17691040]
[118.53454590 254.18354797]
[118.08793640 239.19020081]
[117.64133453 224.19685364]
[117.19472504 209.20350647]
[115.19071198 194.33796692]
[104.66856384 183.79597473]
[108.93081665 168.55970764]
[105.39114380 153.98333740]
[94.86899567 143.44132996]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[75.51705170 63.75000763]
[80.03248596 49.55634308]
[76.49281311 34.97996902]
[72.95314026 20.40359116]
[69.41346741 5.82721663]
[65.87379456 -8.74915886]
[52.85776901 -21.77469826]
[58.45127869 -38.40838623]
[54.69497681 -52.93044662]
[50.93867874 -67.45250702]
[47.18237686 -81.97456360]
[36.23576736 -93.39745331]
[40.53937149 -107.65676880]
[35.36066055 -115.18131256]
[36.83696747 -122.42301941]
[33.29729843 -136.99938965]
[29.75762367 -151.57577515]
[26.21795273 -166.15214539]
[15.44262600 -177.73674011]
[19.95805359 -191.93040466]
[16.41838264 -206.50679016]
[12.87870979 -221.08316040]
[9.33903694 -235.65954590]
[5.79936457 -250.23591614]
[2.25969219 -264.81228638]
[-12.67554569 -263.20181274]
[-27.69322014 -263.55459595]
[-42.53636169 -265.86462402]
[-56.95097733 -270.09234619]
[-70.69042206 -276.16546631]
[-83.51959229 -283.98001099]
[-95.21896362 -293.40231323]
[-105.58834839 -304.27111816]
[-114.45030975 -316.40045166]
[-121.65320587 -329.58276367]
[-127.07379150 -343.59249878]
[-130.61930847 -358.18991089]
[-132.22908020 -373.12521362]
[-131.87557983 -388.14288330]
[-129.56484985 -402.98590088]
[-125.33642578 -417.40032959]
[-119.26266479 -431.13946533]
[-111.44748688 -443.96826172]
[-102.02463531 -455.66720581]
[-91.15533447 -466.03607178]
[-79.02558136 -474.89743042]
[-65.84293365 -482.09970093]
[-51.83295059 -487.51962280]
[-37.23537445 -491.06445312]
[-22.29998207 -492.67352295]
[-7.28234148 -492.31930542]
[7.56057835 -490.00787354]
[21.97479439 -485.77874756]
[35.71366119 -479.70434570]
[48.54208755 -471.88854980]
[60.24056244 -462.46514893]
[70.60890961 -451.59533691]
[79.46971893 -439.46517944]
[86.67135620 -426.28216553]
[92.09060669 -412.27194214]
[95.63473511 -397.67419434]
[97.24309540 -382.73873901]
[96.88816071 -367.72109985]
[94.57601929 -352.87829590]
[90.34621429 -338.46426392]
[84.27114868 -324.72570801]
[76.45475006 -311.89764404]
[67.03078461 -300.19961548]
[56.16049576 -289.83178711]
[44.02989960 -280.97155762]
[30.84656334 -273.77053833]
[16.83606720 -268.35195923]
[20.37574005 -253.77558899]
[23.91541290 -239.19920349]
[27.45508575 -224.62283325]
[30.99475670 -210.04646301]
[34.53443146 -195.47007751]
[45.05657578 -184.92808533]
[40.79432678 -169.69181824]
[44.33399963 -155.11544800]
[47.87367249 -140.53906250]
[51.41334534 -125.96269226]
[55.06143188 -111.41307068]
[65.73936462 -101.02890015]
[61.70443726 -85.73086548]
[65.46073914 -71.20880890]
[69.21704102 -56.68674469]
[72.97333527 -42.16468811]
[83.23369598 -35.75753403]
[86.48197937 -23.68970871]
[80.45017242 -12.28883171]
[83.98983765 2.28754401]
[87.52951050 16.86392021]
[91.06918335 31.44029427]
[94.60885620 46.01667023]
[105.13100433 56.55867004]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[124.48294830 136.24998474]
[119.96751404 150.44366455]
[123.50718689 165.02003479]
[134.28251648 176.60462952]
[129.76708984 190.79829407]
[134.12222290 176.44445801]
[143.57929993 164.80126953]
[156.73539734 157.59593201]
[171.63891602 155.89732361]
[186.07899475 159.95741272]
[197.91351318 169.17391968]
[205.38693237 182.17961121]
[207.39057922 197.04519653]
[203.62724304 211.56542969]
[194.65518188 223.58633423]
[181.80535889 231.32467651]
[166.98394775 233.63252258]
[152.38964844 230.16751099]
[140.18742371 221.44366455]
[132.18807983 208.75689697]
[132.63467407 223.75024414]
[133.08128357 238.74359131]
[133.52789307 253.73693848]
[133.97450256 268.73028564]
[134.42111206 283.72363281]
[134.86770630 298.71697998]
[135.64903259 313.69662476]
[136.76467896 328.65509033]
[137.88032532 343.61352539]
[152.88739014 344.06729126]
[167.76480103 346.08728027]
[182.34956360 349.65130615]
[196.48188782 354.72036743]
[210.00691223 361.23892212]
[222.77645874 369.13549805]
[234.65061951 378.32366943]
[245.49928284 388.70266724]
[255.20361328 400.15884399]
[263.65725708 412.56665039]
[270.76760864 425.79013062]
[276.45672607 439.68444824]
[280.66235352 454.09729004]
[283.33831787 468.87081909]
[284.45538330 483.84310913]
[284.00125122 498.85015869]
[281.98092651 513.72753906]
[278.41653442 528.31219482]
[273.34710693 542.44439697]
[266.82824707 555.96929932]
[258.93133545 568.73864746]
[249.74290466 580.61254883]
[239.36361694 591.46099854]
[227.90721130 601.16503906]
[215.49920654 609.61834717]
[202.27554321 616.72839355]
[188.38110352 622.41717529]
[173.96813965 626.62243652]
[159.19456482 629.29809570]
[144.22222900 630.41473389]
[129.21519470 629.96026611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 179]
[28 178]
[29 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[40 155]
[42 153]
[43 152]
[45 150]
[46 149]
[48 147]
[49 146]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[57 137]
[58 136]
[59 135]
[60 134]
[62 132]
[64 131]
[65 130]
[66 129]
[67 128]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
