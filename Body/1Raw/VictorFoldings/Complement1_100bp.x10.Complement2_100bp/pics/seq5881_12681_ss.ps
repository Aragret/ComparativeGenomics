%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[52.51324081 490.66918945]
[40.20743561 499.77005005]
[25.08003426 502.09823608]
[10.60720444 497.11868286]
[0.11469572 485.97570801]
[-3.98638988 471.22988892]
[-0.75365323 456.26965332]
[9.07004642 444.53280640]
[23.22729492 438.71636963]
[24.56552887 423.77621460]
[25.90376282 408.83602905]
[23.36954498 401.89343262]
[27.37476349 393.68392944]
[28.93528557 378.76531982]
[22.56405067 365.30215454]
[31.69506454 352.38180542]
[33.25558853 337.46319580]
[34.81611252 322.54461670]
[28.44487572 309.08145142]
[37.57588959 296.16110229]
[39.13641357 281.24249268]
[26.83228493 289.82205200]
[12.04171753 287.32421875]
[3.23741889 275.17990112]
[5.46289158 260.34591675]
[17.44328308 251.31982422]
[32.31568146 253.27220154]
[41.56024170 265.08370972]
[44.33585358 250.34274292]
[47.00165176 235.58152771]
[49.66744614 220.82031250]
[52.33324051 206.05909729]
[54.99903488 191.29788208]
[53.51332092 188.92074585]
[52.87969971 185.81185913]
[53.38160324 182.29284668]
[55.18090820 178.78186035]
[58.28798676 175.74870300]
[61.82765961 161.17231750]
[65.36733246 146.59594727]
[55.67272949 158.04211426]
[43.37633514 166.63273621]
[29.29372978 171.79801941]
[14.35895920 173.19538879]
[-0.43740588 170.73214722]
[-14.11397648 164.57167053]
[-25.76363564 155.12257385]
[-34.61370087 143.01156616]
[-40.07717896 129.04194641]
[-41.79170227 114.14025116]
[-39.64354706 99.29486847]
[-33.77519226 85.49043274]
[-24.57587051 73.64254761]
[-12.65573502 64.53703308]
[1.19459355 58.77782822]
[16.05647278 56.74692535]
[30.94416618 58.57902145]
[44.87022781 64.15260315]
[56.91099167 73.09799194]
[66.26783752 84.82187653]
[72.32015991 98.54665375]
[74.66652679 113.36199951]
[73.15014648 128.29026794]
[81.19131470 115.62774658]
[89.23249054 102.96522522]
[97.17917633 90.24318695]
[105.03092957 77.46234131]
[112.88268280 64.68150330]
[120.73444366 51.90065765]
[128.58619690 39.11981583]
[136.43795776 26.33897209]
[144.28970337 13.55813026]
[151.26815796 0.28028372]
[157.34199524 -13.43498325]
[155.85537720 -29.18619156]
[168.08354187 -37.69038010]
[174.15737915 -51.40564728]
[180.23121643 -65.12091827]
[178.74459839 -80.87212372]
[190.97276306 -89.37631226]
[197.04660034 -103.09158325]
[203.12043762 -116.80684662]
[208.88647461 -130.65432739]
[214.34182739 -144.62713623]
[219.79718018 -158.59992981]
[224.30480957 -172.90661621]
[227.84448242 -187.48298645]
[223.58222961 -202.71925354]
[234.10438538 -213.26126099]
[237.64405823 -227.83763123]
[227.77056885 -239.66220093]
[226.76473999 -254.85568237]
[234.80317688 -267.57760620]
[248.62596130 -273.06112671]
[252.16563416 -287.63748169]
[255.70530701 -302.21386719]
[259.24496460 -316.79025269]
[262.78463745 -331.36660767]
[266.32431030 -345.94299316]
[252.74922180 -352.45532227]
[240.82499695 -361.64807129]
[231.07293701 -373.11938477]
[223.91934204 -386.36776733]
[219.67695618 -400.81408691]
[218.53121948 -415.82678223]
[220.53222656 -430.74957275]
[225.59249878 -444.93008423]
[233.49081421 -457.74844360]
[243.88192749 -468.64425659]
[256.31155396 -477.14120483]
[270.23629761 -482.86785889]
[285.04748535 -485.57385254]
[300.09762573 -485.14089966]
[314.72875977 -481.58792114]
[328.30130005 -475.07025146]
[340.22189331 -465.87280273]
[349.96945190 -454.39767456]
[357.11782837 -441.14648438]
[361.35452271 -426.69848633]
[362.49435425 -411.68536377]
[360.48748779 -396.76333618]
[355.42163086 -382.58480835]
[347.51828003 -369.76956177]
[337.12289429 -358.87783813]
[324.68991089 -350.38577271]
[310.76290894 -344.66461182]
[295.95065308 -341.96444702]
[280.90069580 -342.40332031]
[277.36102295 -327.82693481]
[273.82135010 -313.25057983]
[270.28167725 -298.67419434]
[266.74200439 -284.09780884]
[263.20233154 -269.52145386]
[272.97076416 -258.30914307]
[274.27932739 -243.31742859]
[266.41735840 -230.27735901]
[252.22042847 -224.29795837]
[248.68075562 -209.72158813]
[253.19618225 -195.52792358]
[242.42085266 -183.94331360]
[238.88117981 -169.36694336]
[250.70861816 -178.59254456]
[265.63613892 -180.06521606]
[279.03833008 -173.32862854]
[286.76232910 -160.47018433]
[286.41479492 -145.47421265]
[278.10342407 -132.98736572]
[264.40356445 -126.87886047]
[249.56028748 -129.04145813]
[238.17292786 -138.80506897]
[233.76997375 -153.14457703]
[228.31462097 -139.17176819]
[222.85926819 -125.19897461]
[223.93252563 -121.84033966]
[223.43231201 -117.79499054]
[221.05360413 -113.80812836]
[216.83570862 -110.73300934]
[210.76187134 -97.01774597]
[204.68803406 -83.30248260]
[206.60908508 -68.53227997]
[193.94648743 -59.04708099]
[187.87265015 -45.33181381]
[181.79881287 -31.61654663]
[183.71986389 -16.84634590]
[171.05726624 -7.36114883]
[164.98342896 6.35411787]
[178.26214600 -0.62266254]
[193.21377563 0.58102781]
[205.20538330 9.59221172]
[210.52124023 23.61867714]
[207.51416016 38.31417084]
[197.11593628 49.12513351]
[182.54855347 52.70166779]
[168.32589722 47.93555450]
[158.85499573 36.30361557]
[157.07055664 21.40988541]
[149.21879578 34.19072723]
[141.36703491 46.97156906]
[133.51528931 59.75241470]
[125.66352844 72.53325653]
[117.81177521 85.31409454]
[109.96001434 98.09494019]
[108.75935364 106.06557465]
[101.89501190 111.00639343]
[93.85384369 123.66892242]
[85.81266785 136.33145142]
[79.94371033 150.13562012]
[76.40403748 164.71199036]
[72.86436462 179.28837585]
[69.76025391 193.96366882]
[67.09445953 208.72488403]
[64.42866516 223.48611450]
[61.76286697 238.24732971]
[59.09707260 253.00854492]
[60.65153503 262.00973511]
[56.28013611 267.96899414]
[54.05501938 282.80303955]
[52.49449539 297.72161865]
[58.75411224 312.25186157]
[49.73471451 324.10513306]
[48.17419434 339.02374268]
[46.61367035 353.94235229]
[52.87328720 368.47256470]
[43.85388947 380.32583618]
[42.29336548 395.24444580]
[40.84394836 410.17425537]
[39.50571442 425.11444092]
[38.16748047 440.05462646]
[51.06566620 448.29449463]
[58.64711761 461.59036255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[13 205]
[14 204]
[16 202]
[17 201]
[18 200]
[20 198]
[21 197]
[28 196]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[38 189]
[39 188]
[40 187]
[63 186]
[64 185]
[65 184]
[66 182]
[67 181]
[68 180]
[69 179]
[70 178]
[71 177]
[72 176]
[73 166]
[74 165]
[76 163]
[77 162]
[78 161]
[80 159]
[81 158]
[82 157]
[83 153]
[84 152]
[85 151]
[86 141]
[87 140]
[89 138]
[90 137]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
