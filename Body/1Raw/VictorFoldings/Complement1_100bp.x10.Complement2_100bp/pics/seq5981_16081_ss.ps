%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[173.40283203 710.51257324]
[161.85429382 700.93072510]
[150.99433899 690.57495117]
[140.87471008 679.49462891]
[131.54365540 667.74249268]
[123.04563141 655.37463379]
[115.42113495 642.44995117]
[108.70648956 629.03002930]
[102.93370819 615.17883301]
[98.13029480 600.96240234]
[94.31914520 586.44836426]
[91.51841736 571.70605469]
[89.74145508 556.80560303]
[88.99672699 541.81805420]
[89.28778839 526.81488037]
[90.61325073 511.86752319]
[92.96678925 497.04721069]
[96.33719635 482.42459106]
[100.70841217 468.06933594]
[106.05960083 454.04986572]
[112.36525726 440.43298340]
[119.59534454 427.28359985]
[127.71539307 414.66433716]
[136.68672180 402.63537598]
[146.46656799 391.25402832]
[157.00831604 380.57452393]
[168.26174927 370.64773560]
[180.17323303 361.52099609]
[192.68600464 353.23779297]
[205.74041748 345.83761597]
[199.26092529 332.30926514]
[192.78143311 318.78091431]
[186.30194092 305.25259399]
[179.82243347 291.72424316]
[165.73257446 287.03259277]
[158.96873474 273.40524292]
[163.98529053 258.65829468]
[151.50933838 250.52197266]
[152.52632141 234.73347473]
[146.04682922 221.20513916]
[140.32238770 216.53045654]
[139.57324219 207.42678833]
[133.29588318 193.80348206]
[127.01852417 180.18016052]
[120.74116516 166.55683899]
[114.46380615 152.93353271]
[110.37315369 150.46864319]
[107.78749847 145.40788269]
[108.20910645 138.80986023]
[102.34014893 125.00568390]
[96.47119141 111.20150757]
[94.24539948 126.03545380]
[86.24733734 138.72525024]
[73.82481384 147.13244629]
[59.07125473 149.84030151]
[44.47288132 146.39245605]
[32.48978424 137.36996460]
[25.14132118 124.29326630]
[23.66584015 109.36601257]
[28.31198120 95.10370636]
[38.29679489 83.90979767]
[51.93765640 77.67066193]
[66.93584442 77.43769836]
[80.76390839 83.25016022]
[91.09243774 94.12997437]
[87.98832703 79.45466614]
[75.36589050 66.04737091]
[81.45216370 49.58759308]
[78.12990570 34.96013260]
[74.80764771 20.33267403]
[69.85526276 12.65727711]
[71.54653168 5.46273756]
[68.44242096 -9.21256542]
[65.33831024 -23.88786697]
[52.71587753 -37.29516602]
[58.80215454 -53.75494003]
[55.47989273 -68.38240051]
[52.15763474 -83.00986481]
[48.83537292 -97.63732147]
[45.51311493 -112.26478577]
[42.45153809 -115.34386444]
[40.70470810 -118.88124847]
[40.25525284 -122.40734863]
[40.93508911 -125.50645447]
[42.45603180 -127.86120605]
[40.01030350 -142.66047668]
[37.56457520 -157.45974731]
[35.11885071 -172.25901794]
[20.09431076 -173.56825256]
[5.86766195 -178.57356262]
[-6.66679955 -186.96034241]
[-16.72114754 -198.20138550]
[-23.66335487 -211.59005737]
[-27.05703163 -226.28474426]
[-26.68884659 -241.36172485]
[-22.58194351 -255.87324524]
[-14.99448776 -268.90710449]
[-4.40343189 -279.64395142]
[8.52546120 -287.40890503]
[22.97947121 -291.71383667]
[38.05000305 -292.28814697]
[52.78971863 -289.09570312]
[66.27205658 -282.33718872]
[77.64951324 -272.43750000]
[86.20689392 -260.01885986]
[91.40626526 -245.86198425]
[92.92079926 -230.85675049]
[90.65528107 -215.94641113]
[84.75213623 -202.06823730]
[75.58243561 -190.09463501]
[63.72258759 -180.77825928]
[49.91812134 -174.70474243]
[52.36384964 -159.90547180]
[54.80957413 -145.10620117]
[57.25530243 -130.30693054]
[60.14057541 -115.58704376]
[63.46283340 -100.95957947]
[66.78509521 -86.33212280]
[70.10735321 -71.70465851]
[73.42961121 -57.07720184]
[83.49465942 -50.36740112]
[86.38220215 -38.20820999]
[80.01361084 -26.99197769]
[83.11772156 -12.31667519]
[86.22183228 2.35862732]
[89.43510437 17.01041412]
[92.75737000 31.63787460]
[96.07962799 46.26533508]
[106.14466858 52.97513580]
[109.03221130 65.13432312]
[102.66362762 76.35055542]
[105.76773834 91.02586365]
[110.27536774 105.33255005]
[116.14432526 119.13672638]
[122.01329041 132.94090271]
[128.08712769 146.65617371]
[134.36448669 160.27947998]
[140.64184570 173.90280151]
[146.91920471 187.52612305]
[153.19656372 201.14942932]
[159.57516479 214.72564697]
[166.05467224 228.25398254]
[178.99406433 237.35797119]
[177.51362610 252.17881775]
[192.14845276 257.51358032]
[198.52687073 271.32556152]
[193.35078430 285.24475098]
[199.83027649 298.77310181]
[206.30978394 312.30142212]
[212.78927612 325.82977295]
[219.26876831 339.35812378]
[233.21743774 333.82498169]
[247.51458740 329.26739502]
[262.09213257 325.70703125]
[276.88055420 323.16085815]
[291.80941772 321.64105225]
[306.80755615 321.15481567]
[321.80349731 321.70449829]
[336.72579956 323.28744507]
[351.50332642 325.89614868]
[366.06567383 329.51812744]
[380.34344482 334.13619995]
[394.26855469 339.72827148]
[407.77471924 346.26776123]
[420.79748535 353.72344971]
[433.27487183 362.05984497]
[445.14739990 371.23721313]
[456.35845947 381.21182251]
[466.85464478 391.93612671]
[476.58593750 403.35903931]
[485.50595093 415.42608643]
[493.57220459 428.07980347]
[500.74624634 441.25985718]
[506.99386597 454.90344238]
[512.28527832 468.94558716]
[516.59533691 483.31930542]
[519.90350342 497.95614624]
[522.19390869 512.78631592]
[523.45568848 527.73919678]
[523.68286133 542.74353027]
[522.87432861 557.72772217]
[521.03393555 572.62048340]
[518.17047119 587.35076904]
[514.29754639 601.84838867]
[509.43365479 616.04425049]
[503.60192871 629.87078857]
[496.83020020 643.26196289]
[489.15075684 656.15405273]
[480.60012817 668.48565674]
[471.21911621 680.19793701]
[461.05242920 691.23510742]
[450.14846802 701.54449463]
[438.55923462 711.07708740]
[426.33996582 719.78741455]
[413.54885864 727.63397217]
[400.24688721 734.57934570]
[386.49743652 740.59045410]
[372.36602783 745.63861084]
[357.92001343 749.69982910]
[343.22824097 752.75469971]
[328.36068726 754.78869629]
[313.38827515 755.79211426]
[298.38226318 755.76019287]
[283.41424561 754.69299316]
[268.55551147 752.59576416]
[253.87687683 749.47833252]
[239.44828796 745.35565186]
[225.33850098 740.24737549]
[211.61477661 734.17773438]
[198.34249878 727.17584229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[37 144]
[39 142]
[40 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[49 135]
[50 134]
[51 133]
[65 132]
[66 131]
[68 128]
[69 127]
[70 126]
[72 125]
[73 124]
[74 123]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
