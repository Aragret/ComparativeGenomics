%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[84.87403870 583.94329834]
[71.40262604 590.56726074]
[57.35480118 595.86010742]
[42.86171341 599.77239990]
[28.05869484 602.26757812]
[13.08395576 603.32244873]
[-1.92268300 602.92712402]
[-16.82110596 601.08520508]
[-31.47220802 597.81402588]
[-45.73918915 593.14404297]
[-59.48884201 587.11889648]
[-72.59278870 579.79479980]
[-84.92867279 571.24017334]
[-96.38131714 561.53491211]
[-106.84379578 550.76959229]
[-116.21840668 539.04473877]
[-124.41763306 526.46984863]
[-131.36491394 513.16229248]
[-136.99537659 499.24633789]
[-141.25645447 484.85195923]
[-144.10836792 470.11349487]
[-145.52449036 455.16857910]
[-145.49157715 440.15676880]
[-144.00996399 425.21823120]
[-141.09346008 410.49240112]
[-136.76931763 396.11682129]
[-131.07791138 382.22570801]
[-124.07235718 368.94873047]
[-115.81808472 356.40991211]
[-106.39215851 344.72625732]
[-95.88259125 334.00689697]
[-84.38750458 324.35192871]
[-72.01423645 315.85147095]
[-58.87831116 308.58493042]
[-45.10237503 302.62008667]
[-30.81505775 298.01269531]
[-16.14975548 294.80575562]
[-1.24340153 293.02920532]
[13.76482677 292.69964600]
[28.73479652 293.82015991]
[43.52673340 296.38024902]
[47.49883270 281.91571045]
[51.47092819 267.45120239]
[55.44302368 252.98666382]
[59.41511917 238.52214050]
[63.17142105 224.00007629]
[66.71109009 209.42370605]
[70.25076294 194.84733582]
[73.79043579 180.27095032]
[67.94989777 163.72239685]
[80.77054596 150.50450134]
[84.09280396 135.87704468]
[87.41506958 121.24958801]
[90.73732758 106.62212372]
[79.04856110 116.02280426]
[64.14460754 117.71755981]
[50.64361954 111.18125153]
[42.72902298 98.43923187]
[42.85324478 83.43974304]
[50.97779083 70.83055115]
[64.58518219 64.51874542]
[79.45902252 66.46010590]
[90.99048615 76.05309296]
[95.60643768 90.32545471]
[100.85315704 76.27298737]
[106.09987640 62.22051239]
[111.34659576 48.16804123]
[116.59331512 34.11557007]
[121.84002686 20.06309891]
[127.08674622 6.01062775]
[127.15671539 -3.12353468]
[132.51760864 -8.21103382]
[137.97296143 -22.18383217]
[143.42831421 -36.15663147]
[143.63427734 -45.28873825]
[149.07031250 -50.29585648]
[154.73310852 -64.18588257]
[141.29864502 -70.87376404]
[128.40155029 -78.54689789]
[116.11393738 -87.16239166]
[104.50451660 -96.67205048]
[93.63822174 -107.02268982]
[83.57582092 -118.15644073]
[74.37358856 -130.01101685]
[66.08298492 -142.52014160]
[58.75037766 -155.61384583]
[52.41677094 -169.21890259]
[47.11759186 -183.25923157]
[42.88246918 -197.65631104]
[39.73508835 -212.32963562]
[37.69305801 -227.19712830]
[36.76778793 -242.17564392]
[36.96445847 -257.18142700]
[38.28197098 -272.13055420]
[40.71295547 -286.93942261]
[44.24381638 -301.52520752]
[48.85480499 -315.80636597]
[54.52013779 -329.70297241]
[61.20813370 -343.13735962]
[68.88138580 -356.03439331]
[77.49698639 -368.32196045]
[87.00674438 -379.93127441]
[97.35748291 -390.79748535]
[108.49131775 -400.85980225]
[120.34598541 -410.06192017]
[132.85517883 -418.35241699]
[145.94894409 -425.68490601]
[159.55406189 -432.01837158]
[173.59443665 -437.31744385]
[187.99156189 -441.55242920]
[202.66490173 -444.69967651]
[217.53240967 -446.74157715]
[232.51094055 -447.66671753]
[247.51672363 -447.46990967]
[262.46585083 -446.15228271]
[277.27468872 -443.72116089]
[291.86044312 -440.19018555]
[306.14154053 -435.57907104]
[320.03811646 -429.91360474]
[333.47244263 -423.22549438]
[346.36941528 -415.55212402]
[358.65689087 -406.93643188]
[370.26614380 -397.42654419]
[381.13223267 -387.07571411]
[391.19445801 -375.94180298]
[400.39648438 -364.08703613]
[408.68685913 -351.57778931]
[416.01922607 -338.48394775]
[422.35260010 -324.87878418]
[427.65151978 -310.83834839]
[431.88641357 -296.44119263]
[435.03350830 -281.76782227]
[437.07528687 -266.90029907]
[438.00030518 -251.92176819]
[437.80334473 -236.91598511]
[436.48559570 -221.96687317]
[434.05435181 -207.15805054]
[430.52322388 -192.57232666]
[425.91198730 -178.29127502]
[420.24639893 -164.39474487]
[413.55816650 -150.96046448]
[405.88470459 -138.06356812]
[397.26889038 -125.77618408]
[387.75891113 -114.16701508]
[377.40798950 -103.30099487]
[366.27395630 -93.23888397]
[354.41912842 -84.03696442]
[341.90979004 -75.74669647]
[328.81588745 -68.41442871]
[315.21066284 -62.08118820]
[301.17019653 -56.78237915]
[286.77301025 -52.54763794]
[272.09960938 -49.40064621]
[257.23205566 -47.35900497]
[242.25352478 -46.43413162]
[227.24774170 -46.63120270]
[212.29864502 -47.94910812]
[197.48985291 -50.38048553]
[182.90414429 -53.91173172]
[168.62313843 -58.52309799]
[162.96034241 -44.63307190]
[157.40112305 -30.70127296]
[151.94575500 -16.72847557]
[146.49040222 -2.75567698]
[141.13922119 11.25734615]
[135.89250183 25.30981636]
[130.64578247 39.36228943]
[125.39906311 53.41476059]
[120.15234375 67.46723175]
[114.90563202 81.51969910]
[109.65891266 95.57217407]
[105.36478424 109.94438934]
[102.04252625 124.57184601]
[98.72026825 139.19931030]
[95.39801025 153.82676697]
[101.59889221 165.13658142]
[98.53063965 177.25141907]
[88.36681366 183.81062317]
[84.82714081 198.38700867]
[81.28746796 212.96337891]
[77.74779510 227.53974915]
[79.23955536 233.98072815]
[77.51365662 239.39537048]
[73.87964630 242.49423218]
[69.90754700 256.95877075]
[65.93544769 271.42327881]
[61.96335602 285.88781738]
[57.99126053 300.35232544]
[72.01615906 305.70562744]
[85.45891571 312.38754272]
[98.19400024 320.33566284]
[110.10252380 329.47583008]
[121.07328796 339.72268677]
[131.00386047 350.98052979]
[139.80151367 363.14428711]
[147.38410950 376.10037231]
[153.68086243 389.72778320]
[158.63294983 403.89929199]
[162.19416809 418.48263550]
[164.33123779 433.34158325]
[165.02423096 448.33743286]
[164.26664734 463.33013916]
[162.06559753 478.17974854]
[158.44158936 492.74758911]
[153.42849731 506.89767456]
[147.07310486 520.49780273]
[139.43476868 533.42114258]
[130.58480835 545.54687500]
[120.60582733 556.76184082]
[109.59103394 566.96130371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[46 181]
[47 180]
[48 179]
[49 178]
[51 175]
[52 174]
[53 173]
[54 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[72 164]
[73 163]
[74 162]
[76 161]
[77 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
