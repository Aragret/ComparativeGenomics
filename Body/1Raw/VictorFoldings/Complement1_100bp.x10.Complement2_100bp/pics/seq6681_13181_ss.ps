%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[85.31493378 703.24749756]
[70.49876404 705.65136719]
[55.52811432 706.73638916]
[40.52015305 706.49407959]
[25.59234047 704.92626953]
[10.86150837 702.04522705]
[-3.55705214 697.87359619]
[-17.55049324 692.44390869]
[-31.00929832 685.79876709]
[-43.82812881 677.99011230]
[-55.90665817 669.07904053]
[-67.15035248 659.13537598]
[-77.47122192 648.23687744]
[-86.78848267 636.46881104]
[-95.02920532 623.92340088]
[-102.12891388 610.69873047]
[-108.03202057 596.89831543]
[-112.69234467 582.63024902]
[-116.07339478 568.00604248]
[-118.14871979 553.14031982]
[-118.90207672 538.14929199]
[-118.32756805 523.15039062]
[-116.42968750 508.26092529]
[-113.22328949 493.59750366]
[-108.73346710 479.27481079]
[-102.99536896 465.40499878]
[-96.05389404 452.09658813]
[-87.96337128 439.45376587]
[-78.78713226 427.57546997]
[-68.59698486 416.55462646]
[-57.47267914 406.47756958]
[-45.50128555 397.42309570]
[-32.77649689 389.46209717]
[-19.39790344 382.65689087]
[-5.47021389 377.06072998]
[8.89756775 372.71740723]
[23.59299088 369.66091919]
[38.50104523 367.91516113]
[53.50504684 367.49386597]
[68.48757172 368.40026855]
[70.71269226 353.56622314]
[72.93780518 338.73217773]
[60.54996109 330.42514038]
[52.96613693 317.51022339]
[51.73672867 302.52191162]
[57.15896606 288.42864990]
[68.20737457 278.04504395]
[82.72724152 273.46957397]
[84.95236206 258.63552856]
[87.17747498 243.80149841]
[89.40259552 228.96745300]
[90.62957001 214.01771545]
[90.85289764 199.01937866]
[91.07622528 184.02104187]
[91.29955292 169.02270508]
[91.52288055 154.02436829]
[91.74620819 139.02603149]
[91.96953583 124.02769470]
[92.19286346 109.02935791]
[84.57665253 121.95195007]
[72.85188293 131.30769348]
[58.56116104 135.86567688]
[43.58467102 135.02621460]
[29.89282417 128.89976501]
[19.28702354 118.29236603]
[13.16264248 104.59960175]
[12.32544899 89.62297821]
[16.88559151 75.33294678]
[26.24310112 63.60959244]
[39.16683960 55.99533081]
[53.95646667 53.49195099]
[68.66615295 56.42881012]
[81.36058807 64.41951752]
[90.36959076 76.41275787]
[94.50811768 90.83297729]
[98.04779053 76.25660706]
[101.58746338 61.68022919]
[100.09569550 55.23925400]
[101.82160187 49.82461548]
[105.45561218 46.72574615]
[109.42771149 32.26122284]
[113.39980316 17.79669952]
[117.37190247 3.33217478]
[121.34400177 -11.13234901]
[125.10029602 -25.65440750]
[128.63996887 -40.23078537]
[132.17964172 -54.80715942]
[135.71931458 -69.38353729]
[139.25898743 -83.95990753]
[142.79866028 -98.53628540]
[146.33833313 -113.11266327]
[132.35700989 -118.61143494]
[119.25470734 -125.96284485]
[107.27548981 -135.02993774]
[96.64253998 -145.64379883]
[87.55393219 -157.60670471]
[80.17898560 -170.69577026]
[74.65509033 -184.66719055]
[71.08515930 -199.26065063]
[69.53568268 -214.20431519]
[70.03554535 -229.21977234]
[72.57542419 -244.02729797]
[77.10800171 -258.35104370]
[83.54884338 -271.92413330]
[91.77796173 -284.49377441]
[101.64204407 -295.82574463]
[112.95734406 -305.70895386]
[125.51304626 -313.95928955]
[139.07525635 -320.42303467]
[153.39132690 -324.97979736]
[168.19453430 -327.54467773]
[183.20912170 -328.06991577]
[198.15538025 -326.54568481]
[212.75485229 -323.00039673]
[226.73558044 -317.50009155]
[239.83708191 -310.14727783]
[251.81532288 -301.07888794]
[262.44711304 -290.46386719]
[271.53445435 -278.50000000]
[278.90795898 -265.41012573]
[284.43035889 -251.43811035]
[287.99871826 -236.84425354]
[289.54656982 -221.90042114]
[289.04507446 -206.88502502]
[286.50360107 -192.07777405]
[281.96945190 -177.75453186]
[275.52716064 -164.18211365]
[267.29669189 -151.61338806]
[257.43136597 -140.28248596]
[246.11500549 -130.40049744]
[233.55839539 -122.15151978]
[219.99548340 -115.68923187]
[205.67893982 -111.13401794]
[190.87544250 -108.57073212]
[175.86079407 -108.04714203]
[160.91470337 -109.57299042]
[157.37503052 -94.99661255]
[153.83535767 -80.42023468]
[150.29568481 -65.84386444]
[146.75601196 -51.26748657]
[143.21635437 -36.69111252]
[139.67668152 -22.11473656]
[141.35232544 -17.64245987]
[140.23629761 -12.07007122]
[135.80851746 -7.16025305]
[131.83642578 7.30427122]
[127.86432648 21.76879501]
[123.89223480 36.23331833]
[119.92013550 50.69784164]
[116.16383362 65.21990204]
[112.62416077 79.79627991]
[109.08449554 94.37265015]
[107.19120026 109.25268555]
[106.96787262 124.25102234]
[106.74454498 139.24935913]
[106.52121735 154.24769592]
[106.29788971 169.24603271]
[106.07456207 184.24436951]
[105.85123444 199.24270630]
[105.62790680 214.24104309]
[115.11826324 202.62498474]
[129.34889221 197.88267517]
[143.91024780 201.48359680]
[154.29037476 212.31195068]
[157.27284241 227.01245117]
[151.93351746 241.02999878]
[139.92684937 250.02110291]
[124.97322845 251.19975281]
[111.70619965 244.20075989]
[104.23663330 231.19256592]
[102.01152039 246.02661133]
[99.78639984 260.86065674]
[97.56128693 275.69470215]
[110.09969330 284.32891846]
[117.61530304 297.49716187]
[118.66395569 312.56103516]
[113.09107971 326.52902222]
[102.05178833 336.65045166]
[87.77185059 340.95727539]
[85.54673767 355.79132080]
[83.32161713 370.62536621]
[97.91069794 374.15472412]
[112.13075256 378.95968628]
[125.87050629 385.00259399]
[139.02239990 392.23620605]
[151.48352051 400.60391235]
[163.15634155 410.04016113]
[173.94949341 420.47116089]
[183.77850342 431.81521606]
[192.56645203 443.98361206]
[200.24456787 456.88107300]
[206.75273132 470.40664673]
[212.04003906 484.45449829]
[216.06509399 498.91467285]
[218.79638672 513.67401123]
[220.21253967 528.61694336]
[220.30249023 543.62658691]
[219.06552124 558.58544922]
[216.51132202 573.37646484]
[212.65986633 587.88385010]
[207.54130554 601.99401855]
[201.19570923 615.59667969]
[193.67272949 628.58520508]
[185.03125000 640.85803223]
[175.33889771 652.31909180]
[164.67153931 662.87872314]
[153.11265564 672.45416260]
[140.75271606 680.97058105]
[127.68845367 688.36132812]
[114.02211761 694.56848145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 181]
[41 180]
[42 179]
[48 173]
[49 172]
[50 171]
[51 170]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[75 152]
[76 151]
[77 150]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 142]
[86 141]
[87 140]
[88 139]
[89 138]
[90 137]
[91 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
