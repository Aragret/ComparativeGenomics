%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[193.52250671 631.59405518]
[184.36857605 619.70275879]
[176.09657288 607.18188477]
[168.74960327 594.09680176]
[162.36599731 580.51568604]
[156.97900391 566.50927734]
[152.61672974 552.15075684]
[149.30192566 537.51483154]
[147.05184937 522.67785645]
[145.87825012 507.71725464]
[145.78724670 492.71093750]
[146.77929688 477.73718262]
[148.84924316 462.87402344]
[151.98629761 448.19900513]
[156.17408752 433.78857422]
[161.39079285 419.71789551]
[167.60920715 406.06033325]
[174.79692078 392.88708496]
[182.91645813 380.26684570]
[191.92547607 368.26538086]
[201.77702332 356.94525146]
[212.41972351 346.36553955]
[223.79809570 336.58132935]
[235.85281372 327.64367676]
[227.81163025 314.98114014]
[219.77046204 302.31863403]
[211.63523865 289.71630859]
[203.40643311 277.17492676]
[195.17762756 264.63351440]
[186.94882202 252.09211731]
[173.88269043 257.08016968]
[160.05659485 259.22961426]
[146.08020020 258.44305420]
[132.57038879 254.75254822]
[120.12395477 248.31838989]
[109.29133606 239.42211914]
[100.55218506 228.45426941]
[94.29418945 215.89715576]
[90.79584503 202.30368042]
[90.21407318 188.27299500]
[92.57718658 174.42410278]
[97.78351593 161.36853027]
[105.60578156 149.68334961]
[115.70101929 139.88563538]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[71.42321014 68.02493286]
[63.38203812 55.36240768]
[55.34086609 42.69988251]
[47.29969406 30.03735733]
[46.32207108 45.00546646]
[38.07374954 57.53403854]
[24.71081161 64.34813690]
[9.72630501 63.66657257]
[-2.96286058 55.66750717]
[-10.03976631 42.44187164]
[-9.65452576 27.44681931]
[-1.90784025 14.60201931]
[11.17532539 7.26507330]
[26.17506218 7.35383940]
[39.16984558 14.84449100]
[33.09601212 1.12922394]
[27.02217865 -12.58604240]
[14.35957241 -22.07124138]
[16.28062630 -36.84144211]
[10.20679188 -50.55670929]
[4.13295794 -64.27197266]
[-1.94087601 -77.98724365]
[-8.01471043 -91.70250702]
[-22.54113007 -87.83861542]
[-37.49316406 -86.29486084]
[-52.50260162 -87.10923767]
[-67.19982910 -90.26171112]
[-81.22290802 -95.67463684]
[-94.22650146 -103.21472168]
[-105.89040375 -112.69628143]
[-115.92736053 -123.88582611]
[-124.09021759 -136.50779724]
[-130.17794800 -150.25138855]
[-134.04063416 -164.77812195]
[-135.58316040 -179.73028564]
[-134.76754761 -194.73965454]
[-131.61386108 -209.43661499]
[-126.19977570 -223.45925903]
[-118.65862274 -236.46223450]
[-109.17609406 -248.12535095]
[-97.98572540 -258.16137695]
[-85.36307526 -266.32318115]
[-71.61898804 -272.40979004]
[-57.09193039 -276.27127075]
[-42.13964462 -277.81256104]
[-27.13034058 -276.99572754]
[-12.43363571 -273.84082031]
[1.58854938 -268.42556763]
[14.59090519 -260.88336182]
[26.25323677 -251.39987183]
[36.28834915 -240.20866394]
[44.44912338 -227.58534241]
[50.53458405 -213.84075928]
[54.39487457 -199.31338501]
[55.93493652 -184.36096191]
[55.11684036 -169.35173035]
[51.96073151 -154.65528870]
[46.54433441 -140.63354492]
[39.00102997 -127.63181305]
[29.51658440 -115.97026062]
[18.32455444 -105.93607330]
[5.70055676 -97.77634430]
[11.77439022 -84.06107330]
[17.84822464 -70.34580994]
[23.92205811 -56.63054276]
[29.99589348 -42.91527557]
[42.22405624 -34.41108322]
[40.73744583 -18.65987587]
[46.81127930 -4.94461012]
[52.88511276 8.77065659]
[59.96221924 21.99618340]
[68.00339508 34.65871048]
[76.04456329 47.32123566]
[84.08573914 59.98376083]
[90.32510376 63.94507980]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[128.48185730 132.03387451]
[143.75607300 127.03565216]
[159.77287292 125.82102203]
[175.60954285 128.45593262]
[190.35469055 134.78466797]
[203.16072083 144.43908691]
[213.29254150 156.85997009]
[220.16976929 171.32945251]
[223.39996338 187.01249695]
[222.80102539 203.00511169]
[218.41145325 218.38642883]
[210.48791504 232.27171326]
[199.49021912 243.86331177]
[207.71902466 256.40472412]
[215.94783020 268.94610596]
[224.17665100 281.48751831]
[231.50090027 286.94580078]
[232.43298340 294.27746582]
[240.47415161 306.93997192]
[248.51533508 319.60250854]
[261.73077393 312.49267578]
[275.42480469 306.35494995]
[289.52600098 301.22140503]
[303.96090698 297.11871338]
[318.65420532 294.06835938]
[333.52929688 292.08615112]
[348.50866699 291.18249512]
[363.51416016 291.36206055]
[378.46762085 292.62396240]
[393.29101562 294.96154785]
[407.90710449 298.36267090]
[422.23968506 302.80963135]
[436.21398926 308.27917480]
[449.75720215 314.74282837]
[462.79873657 322.16690063]
[475.27053833 330.51266479]
[487.10760498 339.73663330]
[498.24826050 349.79067993]
[508.63436890 360.62237549]
[518.21185303 372.17532349]
[526.93066406 384.38922119]
[534.74548340 397.20043945]
[541.61541748 410.54214478]
[547.50482178 424.34478760]
[552.38281250 438.53643799]
[556.22412109 453.04306030]
[559.00860596 467.78906250]
[560.72180176 482.69754028]
[561.35473633 497.69076538]
[560.90417480 512.69061279]
[559.37237549 527.61877441]
[556.76745605 542.39758301]
[553.10284424 556.94982910]
[548.39776611 571.19976807]
[542.67669678 585.07299805]
[535.96948242 598.49725342]
[528.31103516 611.40252686]
[519.74139404 623.72155762]
[510.30514526 635.39013672]
[500.05151367 646.34735107]
[489.03393555 656.53613281]
[477.30990601 665.90338135]
[464.94052124 674.40014648]
[451.99026489 681.98229980]
[438.52664185 688.61016846]
[424.61987305 694.24926758]
[410.34243774 698.87017822]
[395.76879883 702.44879150]
[380.97491455 704.96649170]
[366.03790283 706.41009521]
[351.03567505 706.77215576]
[336.04644775 706.05072021]
[321.14834595 704.24957275]
[306.41903687 701.37811279]
[291.93533325 697.45123291]
[277.77273560 692.48956299]
[264.00506592 686.51879883]
[250.70414734 679.57025146]
[237.93930054 671.67999268]
[225.77706909 662.88916016]
[214.28085327 653.24371338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 149]
[25 148]
[26 147]
[27 145]
[28 144]
[29 143]
[30 142]
[44 130]
[45 129]
[46 128]
[48 126]
[49 125]
[50 123]
[51 122]
[52 121]
[53 120]
[64 119]
[65 118]
[66 117]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
