%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[72.58179474 871.94268799]
[57.58026123 872.26434326]
[42.58813095 871.64343262]
[27.66457176 870.08239746]
[12.86847878 867.58740234]
[-1.74175191 864.16821289]
[-16.10846138 859.83843994]
[-30.17494965 854.61511230]
[-43.88570404 848.51879883]
[-57.18661118 841.57366943]
[-70.02518463 833.80700684]
[-82.35074615 825.24957275]
[-94.11465454 815.93505859]
[-105.27049255 805.90026855]
[-115.77422333 795.18481445]
[-125.58439636 783.83099365]
[-134.66229248 771.88354492]
[-142.97209167 759.38964844]
[-150.48098755 746.39868164]
[-157.15934753 732.96179199]
[-162.98083496 719.13214111]
[-167.92245483 704.96423340]
[-171.96470642 690.51397705]
[-175.09162903 675.83843994]
[-177.29090881 660.99548340]
[-178.55384827 646.04376221]
[-178.87545776 631.04223633]
[-178.25448608 616.05010986]
[-176.69335938 601.12652588]
[-174.19827271 586.33044434]
[-170.77903748 571.72027588]
[-166.44915771 557.35357666]
[-161.22573853 543.28710938]
[-155.12937927 529.57635498]
[-148.18414307 516.27551270]
[-140.41744995 503.43698120]
[-131.85993958 491.11145020]
[-122.54537201 479.34759521]
[-112.51053619 468.19180298]
[-101.79502106 457.68814087]
[-90.44111633 447.87802124]
[-78.49362946 438.80020142]
[-65.99971771 430.49047852]
[-53.00868225 422.98162842]
[-39.57180023 416.30334473]
[-25.74209785 410.48193359]
[-11.57415390 405.54037476]
[2.87611532 401.49819946]
[17.55168152 398.37133789]
[32.39462662 396.17214966]
[47.34637070 394.90930176]
[62.34790802 394.58776855]
[77.34002686 395.20880127]
[78.90055084 380.29022217]
[80.46107483 365.37161255]
[82.02159882 350.45300293]
[83.58212280 335.53439331]
[84.80909729 320.58465576]
[85.70191193 305.61126709]
[86.59472656 290.63784790]
[87.26451111 275.65280151]
[87.71112061 260.65945435]
[88.15773010 245.66610718]
[88.60433197 230.67276001]
[89.05094147 215.67941284]
[81.69600677 202.72741699]
[89.84075928 189.16372681]
[90.28736877 174.17037964]
[90.73397064 159.17703247]
[91.18058014 144.18368530]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[84.61260986 105.25426483]
[85.04602814 93.61582184]
[93.15166473 85.25281525]
[93.82144928 70.26777649]
[94.49123383 55.28274155]
[94.26790619 40.28440475]
[93.15225983 25.32594872]
[92.03661346 10.36749649]
[90.92095947 -4.59095716]
[89.80531311 -19.54940987]
[88.68966675 -34.50786209]
[87.35143280 -49.44804764]
[85.79090881 -64.36665344]
[76.65989685 -77.28699493]
[83.03112793 -90.75015259]
[81.47060394 -105.66875458]
[71.96067810 -114.38219452]
[70.96804047 -126.84006500]
[78.48114777 -136.32055664]
[77.14291382 -151.26074219]
[62.32471466 -154.19290161]
[48.93347168 -161.18226624]
[38.05476379 -171.66227722]
[30.57047462 -184.78332520]
[27.08732224 -199.48176575]
[27.88767052 -214.56607056]
[32.90663910 -228.81341553]
[41.73736191 -241.06881714]
[53.66397095 -250.33880615]
[67.71963501 -255.87188721]
[82.76491547 -257.21954346]
[97.58016205 -254.27250671]
[110.96437836 -247.26966858]
[121.83255005 -236.77874756]
[129.30364990 -223.65019226]
[132.77204895 -208.94824219]
[131.95654297 -193.86476135]
[126.92326355 -179.62246704]
[118.08023071 -167.37594604]
[106.14431763 -158.11793518]
[92.08309937 -152.59896851]
[93.42133331 -137.65878296]
[104.27555847 -123.86920166]
[96.38921356 -107.22927856]
[97.94972992 -92.31067657]
[106.96913147 -80.45741272]
[100.70951080 -65.92717743]
[102.27003479 -51.00857162]
[105.35015106 -47.35865021]
[106.17011261 -41.73506546]
[103.64811707 -35.62351227]
[104.76376343 -20.66506004]
[105.87941742 -5.70660591]
[106.99506378 9.25184727]
[108.11071014 24.21030045]
[109.22636414 39.16875458]
[118.23427582 27.17469215]
[132.53744507 22.65590477]
[146.80113220 27.29778671]
[155.70535278 39.36903381]
[155.92903137 54.36736679]
[147.38876343 66.69877625]
[133.26983643 71.76395416]
[118.83827209 67.67372131]
[109.47627258 55.95252609]
[108.80648804 70.93756104]
[108.13670349 85.92259979]
[116.24847412 100.60508728]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[106.17392731 144.63027954]
[105.72731781 159.62364197]
[105.28071594 174.61698914]
[104.83410645 189.61033630]
[112.15709686 203.63476562]
[104.04428864 216.12602234]
[103.59767914 231.11936951]
[103.15107727 246.11271667]
[102.70446777 261.10607910]
[102.25786591 276.09942627]
[105.05023956 282.09225464]
[104.48220062 287.74685669]
[101.56813812 291.53067017]
[100.67531586 306.50405884]
[99.78250122 321.47747803]
[102.12032318 326.14456177]
[102.40563202 330.77835083]
[100.99481964 334.60256958]
[98.50072479 337.09490967]
[96.94020081 352.01351929]
[95.37968445 366.93212891]
[93.81916046 381.85073853]
[92.25863647 396.76934814]
[107.05475616 399.26422119]
[121.66501617 402.68319702]
[136.03176880 407.01284790]
[150.09831238 412.23605347]
[163.80912781 418.33221436]
[177.11012268 425.27722168]
[189.94876099 433.04373169]
[202.27441406 441.60104370]
[214.03843689 450.91543579]
[225.19436646 460.95007324]
[235.69821167 471.66543579]
[245.50849915 483.01919556]
[254.58651733 494.96652222]
[262.89645386 507.46032715]
[270.40548706 520.45123291]
[277.08398438 533.88800049]
[282.90560913 547.71765137]
[287.84738159 561.88549805]
[291.88977051 576.33569336]
[295.01687622 591.01123047]
[297.21630859 605.85412598]
[298.47940063 620.80584717]
[298.80114746 635.80737305]
[298.18032837 650.79949951]
[296.61938477 665.72308350]
[294.12442017 680.51916504]
[290.70535278 695.12945557]
[286.37564087 709.49615479]
[281.15234375 723.56268311]
[275.05615234 737.27343750]
[268.11105347 750.57440186]
[260.34448242 763.41302490]
[251.78709412 775.73864746]
[242.47265625 787.50256348]
[232.43794250 798.65850830]
[221.72253418 809.16229248]
[210.36872864 818.97247314]
[198.42134094 828.05047607]
[185.92750549 836.36029053]
[172.93655396 843.86926270]
[159.49974060 850.54772949]
[145.67010498 856.36926270]
[131.50221252 861.31097412]
[117.05197906 865.35327148]
[102.37644958 868.48028564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[58 157]
[59 156]
[60 155]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[75 139]
[76 138]
[77 137]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 120]
[85 119]
[87 117]
[88 116]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
