%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[79.27284241 639.60656738]
[64.27043152 640.30297852]
[49.29346466 639.18597412]
[34.56034470 636.27178955]
[20.28592873 631.60290527]
[6.67837811 625.24743652]
[-6.06386852 617.29803467]
[-17.75499153 607.87066650]
[-28.22450066 597.10284424]
[-37.31971741 585.15148926]
[-44.90801239 572.19097900]
[-50.87871933 558.41027832]
[-55.14477158 544.01031494]
[-57.64395523 529.20117188]
[-58.33982468 514.19873047]
[-57.22223663 499.22180176]
[-54.30748367 484.48880005]
[-49.63807297 470.21453857]
[-43.28210068 456.60723877]
[-35.33225250 443.86529541]
[-25.90446091 432.17453003]
[-15.13621235 421.70541382]
[-3.18453860 412.61062622]
[9.77626896 405.02282715]
[23.55720329 399.05264282]
[37.95729828 394.78713989]
[52.76655960 392.28848267]
[67.76902008 391.59320068]
[68.88467407 376.63473511]
[70.00032043 361.67626953]
[71.11596680 346.71783447]
[72.23162079 331.75936890]
[73.34726715 316.80093384]
[63.65556335 308.30972290]
[60.57814026 295.59707642]
[65.45629120 283.25146484]
[76.71749878 275.86227417]
[78.05573273 260.92211914]
[79.39396667 245.98191833]
[80.73220062 231.04173279]
[74.16122437 217.67492676]
[83.09886169 204.62007141]
[76.52788544 191.25326538]
[85.46552277 178.19841003]
[86.80375671 163.25822449]
[80.23278046 149.89141846]
[89.17041779 136.83656311]
[90.50865173 121.89637756]
[91.84688568 106.95619202]
[91.06556702 91.97655487]
[88.18029022 77.25666809]
[85.29502106 62.53677368]
[82.40974426 47.81688309]
[78.43518829 62.28073120]
[71.03289032 75.32703400]
[60.65550995 86.15800476]
[47.93761826 94.11132050]
[33.65692902 98.70064545]
[18.68670654 99.64532471]
[3.94238639 96.88760376]
[-9.67440987 90.59611511]
[-21.33101082 81.15557861]
[-30.31460953 69.14329529]
[-36.07585526 55.29381943]
[-38.26244736 40.45404816]
[-36.74067307 25.53144073]
[-31.60359192 11.43852139]
[-23.16533661 -0.96292388]
[-11.94190884 -10.91454124]
[1.38037276 -17.80778503]
[15.98684597 -21.22113037]
[30.98431969 -20.94585228]
[45.45569229 -16.99878120]
[58.51603317 -9.62128448]
[69.36669922 0.73550320]
[77.34416962 13.43825912]
[81.96061707 27.71023369]
[84.18573761 12.87618923]
[86.41085052 -1.95785439]
[88.63597107 -16.79189873]
[90.19649506 -31.71050262]
[91.08930969 -46.68391037]
[91.98212433 -61.65731430]
[92.87493896 -76.63072205]
[93.32154846 -91.62406921]
[93.32154846 -106.62406921]
[93.32154846 -121.62406921]
[93.32154846 -136.62406921]
[84.76972198 -146.27958679]
[85.07852936 -158.77313232]
[93.53717041 -167.42054749]
[93.76049805 -182.41888428]
[93.98382568 -197.41722107]
[85.57670593 -207.19900513]
[86.07148743 -219.68655396]
[94.65793610 -228.20707703]
[95.10454559 -243.20043945]
[95.55114746 -258.19378662]
[95.99775696 -273.18713379]
[96.44435883 -288.18048096]
[82.87239075 -295.16363525]
[73.68119812 -307.34906006]
[70.69569397 -322.31735229]
[74.50865936 -337.09652710]
[84.36302948 -348.75216675]
[98.30220032 -354.97006226]
[113.55855560 -354.51562500]
[127.10292053 -347.47909546]
[136.24606323 -335.25753784]
[139.17259216 -320.27761841]
[135.30145264 -305.51358032]
[125.40126801 -293.89682007]
[111.43771362 -287.73388672]
[110.99110413 -272.74053955]
[110.54450226 -257.74716187]
[110.09789276 -242.75382996]
[109.65129089 -227.76048279]
[118.78997040 -212.77877808]
[108.98216248 -197.19389343]
[108.75883484 -182.19555664]
[108.53550720 -167.19721985]
[117.89623260 -152.35324097]
[108.32154846 -136.62406921]
[108.32154846 -121.62406921]
[108.32154846 -106.62406921]
[108.32154846 -91.62406921]
[110.20607758 -89.54881287]
[111.38211823 -86.60202789]
[111.51360321 -83.04982758]
[110.36691284 -79.27496338]
[107.84834290 -75.73790741]
[106.95552826 -60.76449966]
[106.06271362 -45.79109192]
[105.16989899 -30.81768608]
[117.07865906 -39.93807220]
[131.96600342 -38.10317612]
[141.30380249 -26.36411095]
[139.74291992 -11.44554329]
[128.17750549 -1.89350832]
[113.23276520 -3.17984557]
[103.47001648 -14.56678104]
[101.24489594 0.26726282]
[99.01978302 15.10130692]
[96.79466248 29.93535042]
[97.12963867 44.93161011]
[100.01490784 59.65150070]
[102.90018463 74.37139130]
[105.78545380 89.09128571]
[110.00495911 74.69698334]
[118.22965240 62.15288544]
[129.74801636 52.54417419]
[143.56358337 46.70209503]
[158.48120117 45.13205338]
[173.21031189 47.96987152]
[186.47671509 54.97004700]
[197.13273621 65.52699280]
[204.25651550 78.72743988]
[207.23179626 93.42940521]
[205.80114746 108.36102295]
[200.08837891 122.23056793]
[190.58766174 133.83816528]
[178.12094116 142.17967224]
[163.76667786 146.53344727]
[148.76667786 146.52282715]
[134.41859436 142.14877319]
[121.96367645 133.78964233]
[112.47939301 122.16861725]
[106.78707123 108.29442596]
[105.44883728 123.23461151]
[104.11060333 138.17480469]
[110.58586121 152.61022949]
[101.74394226 164.59646606]
[100.40570831 179.53665161]
[106.88096619 193.97207642]
[98.03904724 205.95831299]
[104.51429749 220.39373779]
[95.67238617 232.37997437]
[94.33415222 247.32015991]
[92.99591827 262.26034546]
[91.65768433 277.20053101]
[103.11843109 290.41680908]
[101.50654602 307.49655151]
[88.30571747 317.91656494]
[87.19007111 332.87503052]
[86.07442474 347.83346558]
[84.95877075 362.79193115]
[83.84312439 377.75036621]
[82.72747803 392.70883179]
[97.46081543 395.62194824]
[111.73558044 400.28973389]
[125.34360504 406.64419556]
[138.08644104 414.59262085]
[149.77827454 424.01907349]
[160.24858093 434.78616333]
[169.34469604 446.73681641]
[176.93395996 459.69677734]
[182.90570068 473.47705078]
[187.17282104 487.87664795]
[189.67312622 502.68563843]
[190.37011719 517.68804932]
[189.25364685 532.66503906]
[186.33999634 547.39825439]
[181.67164612 561.67285156]
[175.31669617 575.28063965]
[167.36779785 588.02319336]
[157.94088745 599.71466064]
[147.17341614 610.18457031]
[135.22242737 619.28021240]
[122.26218414 626.86901855]
[108.48169708 632.84020996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[37 180]
[38 179]
[39 178]
[40 177]
[42 175]
[44 173]
[45 172]
[47 170]
[48 169]
[49 168]
[50 148]
[51 147]
[52 146]
[53 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 134]
[82 133]
[83 132]
[84 131]
[85 126]
[86 125]
[87 124]
[88 123]
[91 121]
[92 120]
[93 119]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
