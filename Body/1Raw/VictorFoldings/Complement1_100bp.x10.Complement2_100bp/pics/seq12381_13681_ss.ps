%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[24.92255783 823.55993652]
[10.10544205 825.92510986]
[-4.82830238 827.38256836]
[-19.82312012 827.92687988]
[-34.82323074 827.55603027]
[-49.77283478 826.27136230]
[-64.61631012 824.07775879]
[-79.29844666 820.98327637]
[-93.76462555 816.99951172]
[-107.96102142 812.14117432]
[-121.83483124 806.42645264]
[-135.33444214 799.87652588]
[-148.40962219 792.51580811]
[-161.01176453 784.37164307]
[-173.09394836 775.47436523]
[-184.61123657 765.85705566]
[-195.52081299 755.55548096]
[-205.78205872 744.60797119]
[-215.35681152 733.05529785]
[-224.20945740 720.94036865]
[-232.30705261 708.30828857]
[-239.61949158 695.20599365]
[-246.11955261 681.68231201]
[-251.78306580 667.78753662]
[-256.58895874 653.57330322]
[-260.51934814 639.09252930]
[-263.55963135 624.39904785]
[-265.69848633 609.54760742]
[-266.92794800 594.59338379]
[-267.24346924 579.59197998]
[-266.64382935 564.59930420]
[-265.13128662 549.67102051]
[-262.71148682 534.86273193]
[-259.39340210 520.22949219]
[-255.18940735 505.82577515]
[-250.11509705 491.70513916]
[-244.18939209 477.92013550]
[-237.43429565 464.52200317]
[-229.87496948 451.56063843]
[-221.53952026 439.08419800]
[-212.45896912 427.13912964]
[-202.66708374 415.76989746]
[-192.20030212 405.01873779]
[-181.09753418 394.92568970]
[-169.40011597 385.52828979]
[-157.15155029 376.86148071]
[-144.39741516 368.95751953]
[-131.18513489 361.84579468]
[-117.56386566 355.55279541]
[-103.58428192 350.10189819]
[-89.29840088 345.51339722]
[-74.75935364 341.80435181]
[-60.02123260 338.98858643]
[-45.13886261 337.07653809]
[-30.16760826 336.07534790]
[-15.16316319 335.98870850]
[-0.18134628 336.81698608]
[14.72210884 338.55706787]
[29.49176025 341.20248413]
[33.03143311 326.62609863]
[36.57110596 312.04971313]
[28.62662506 299.50299072]
[32.00871277 284.67004395]
[45.22275925 276.42221069]
[48.76243210 261.84582520]
[52.30210495 247.26945496]
[55.84177399 232.69308472]
[59.38144684 218.11669922]
[62.92111969 203.54032898]
[61.24547195 199.06805420]
[62.36149597 193.49566650]
[66.78927612 188.58584595]
[70.76136780 174.12132263]
[69.50132751 166.83886719]
[74.90177917 159.47186279]
[79.08879089 145.06806946]
[75.21164703 130.68693542]
[86.49349976 119.59503937]
[90.68051147 105.19125366]
[93.45612335 90.45029449]
[94.79435730 75.51010895]
[96.13259125 60.56992340]
[97.24824524 45.61146927]
[90.34606171 31.37523270]
[98.82718658 19.13105774]
[99.72000122 4.15765190]
[100.61281586 -10.81575394]
[101.50563049 -25.78915977]
[101.61729431 -40.78874588]
[100.94750977 -55.77378464]
[100.27772522 -70.75881958]
[91.93193817 -84.19973755]
[99.09321594 -97.25980377]
[98.42343140 -112.24484253]
[97.75364685 -127.22988129]
[83.22090149 -131.48173523]
[70.85759735 -140.22401428]
[62.00481033 -152.50842285]
[57.62282181 -167.00245667]
[58.18695450 -182.13389587]
[63.63602066 -196.26139832]
[73.37894440 -207.85252380]
[86.35888672 -215.64994812]
[101.16787720 -218.80786133]
[116.19955444 -216.98373413]
[129.82339478 -210.37541199]
[140.56156921 -199.69973755]
[147.24929810 -186.11470032]
[149.16114807 -171.09393311]
[146.08972168 -156.26675415]
[138.36819458 -143.24153137]
[126.83414459 -133.43110657]
[112.73868561 -127.89967346]
[113.40847015 -112.91463470]
[114.07825470 -97.92959595]
[122.37613678 -85.56050110]
[115.26276398 -71.42860413]
[115.93254852 -56.44356918]
[116.60233307 -41.45853043]
[126.65979767 -52.58720398]
[141.49984741 -54.77194977]
[154.33779907 -47.01392746]
[159.30432129 -32.86000061]
[154.12879944 -18.78115654]
[141.17738342 -11.21405125]
[126.37131500 -13.61826324]
[116.47903442 -24.89634323]
[115.58621979 -9.92293835]
[114.69340515 5.05046749]
[113.80059052 20.02387238]
[120.76663208 33.18911362]
[112.22164917 46.50428391]
[114.66542816 50.60757446]
[114.55750275 56.28959656]
[111.07277679 61.90815735]
[109.73454285 76.84834290]
[108.39630890 91.78852844]
[117.35755157 79.75955963]
[130.39659119 72.34448242]
[145.31613159 70.79286957]
[159.60195923 75.36618805]
[170.84664917 85.29376984]
[177.15528870 98.90262604]
[177.46476746 113.89942932]
[171.72291565 127.75696564]
[160.89735413 138.13998413]
[146.81236267 143.29876709]
[131.84152222 142.36396790]
[118.50766754 135.49311829]
[109.05780792 123.84408569]
[105.08429718 109.37826538]
[100.89728546 123.78205109]
[104.47494507 139.19343567]
[93.49256897 149.25508118]
[89.30555725 163.65885925]
[85.22589111 178.09341431]
[81.25379944 192.55793762]
[77.49749756 207.08000183]
[73.95782471 221.65637207]
[70.41815186 236.23275757]
[66.87847900 250.80912781]
[63.33880615 265.38549805]
[59.79913330 279.96188354]
[67.75883484 293.35147095]
[63.96145630 308.08355713]
[51.14748001 315.58938599]
[47.60780716 330.16577148]
[44.06813431 344.74215698]
[58.40613174 349.16513062]
[72.44782257 354.45397949]
[86.14095306 360.58901978]
[99.43460846 367.54745483]
[112.27931213 375.30337524]
[124.62729645 383.82794189]
[136.43261719 393.08941650]
[147.65136719 403.05340576]
[158.24179077 413.68276978]
[168.16452026 424.93801880]
[177.38261414 436.77725220]
[185.86180115 449.15643311]
[193.57052612 462.02951050]
[200.48011780 475.34863281]
[206.56486511 489.06417847]
[211.80213928 503.12518311]
[216.17245483 517.47930908]
[219.65956116 532.07318115]
[222.25047302 546.85247803]
[223.93554688 561.76226807]
[224.70854187 576.74707031]
[224.56655884 591.75109863]
[223.51013184 606.71850586]
[221.54318237 621.59375000]
[218.67304993 636.32135010]
[214.91038513 650.84661865]
[210.26921082 665.11547852]
[204.76678467 679.07489014]
[198.42355347 692.67285156]
[191.26315308 705.85876465]
[183.31217957 718.58367920]
[174.60025024 730.80017090]
[165.15974426 742.46282959]
[155.02580261 753.52832031]
[144.23611450 763.95532227]
[132.83081055 773.70520020]
[120.85233307 782.74163818]
[108.34523773 791.03100586]
[95.35605621 798.54248047]
[81.93310547 805.24804688]
[68.12631226 811.12286377]
[53.98705292 816.14501953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 168]
[60 167]
[61 166]
[64 163]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[72 157]
[73 156]
[75 155]
[76 154]
[78 152]
[79 151]
[80 137]
[81 136]
[82 135]
[83 132]
[85 130]
[86 129]
[87 128]
[88 127]
[89 119]
[90 118]
[91 117]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
