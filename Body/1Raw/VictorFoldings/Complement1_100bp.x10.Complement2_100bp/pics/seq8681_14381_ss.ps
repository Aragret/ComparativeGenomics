%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[51.85062027 519.40698242]
[45.72395325 533.11022949]
[38.37655258 546.19958496]
[29.86930275 558.56652832]
[20.27270317 570.10864258]
[9.66627121 580.73028564]
[-1.86210012 590.34338379]
[-14.21688271 598.86834717]
[-27.29569817 606.23443604]
[-40.99016953 612.38073730]
[-55.18681717 617.25622559]
[-69.76800537 620.82055664]
[-84.61289978 623.04412842]
[-99.59848785 623.90856934]
[-114.60060120 623.40667725]
[-129.49491882 621.54266357]
[-144.15802002 618.33197021]
[-158.46839905 613.80114746]
[-172.30747986 607.98779297]
[-185.56056213 600.94006348]
[-198.11785889 592.71630859]
[-209.87528992 583.38476562]
[-220.73542786 573.02264404]
[-230.60829163 561.71594238]
[-239.41206360 549.55828857]
[-247.07380676 536.65045166]
[-253.52999878 523.09930420]
[-258.72717285 509.01724243]
[-262.62225342 494.52090454]
[-265.18292236 479.73043823]
[-266.38803101 464.76837158]
[-266.22756958 449.75872803]
[-264.70285034 434.82586670]
[-261.82650757 420.09353638]
[-257.62237549 405.68377686]
[-252.12533569 391.71606445]
[-245.38087463 378.30606079]
[-237.44493103 365.56497192]
[-228.38322449 353.59829712]
[-218.27087402 342.50524902]
[-207.19166565 332.37774658]
[-195.23741150 323.29968262]
[-182.50717163 315.34631348]
[-169.10643005 308.58355713]
[-155.14622498 303.06738281]
[-140.74224854 298.84356689]
[-126.01384735 295.94708252]
[-111.08308411 294.40194702]
[-96.07366943 294.22094727]
[-81.10998535 295.40557861]
[-66.31602478 297.94607544]
[-51.81437683 301.82131958]
[-37.72521591 306.99920654]
[-24.16528320 313.43685913]
[-11.24694729 321.08093262]
[-2.46634412 308.91949463]
[6.31425905 296.75802612]
[15.09486198 284.59658813]
[23.87546539 272.43511963]
[32.65606689 260.27368164]
[39.63452148 246.99581909]
[44.67143631 232.86679077]
[49.70835495 218.73776245]
[54.74526978 204.60873413]
[59.78218460 190.47970581]
[64.81909943 176.35067749]
[69.85601807 162.22164917]
[74.89293671 148.09262085]
[71.87864685 133.50621033]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[107.10718536 57.72857666]
[108.88964844 42.83485794]
[107.32912445 27.91625404]
[105.76860809 12.99764919]
[104.20808411 -1.92095554]
[102.64756012 -16.83955956]
[93.51654816 -29.75989914]
[99.88777924 -43.22305679]
[98.32725525 -58.14166260]
[83.31826019 -58.99380875]
[68.64035034 -62.24266815]
[54.67371368 -67.80408478]
[41.78013229 -75.53400421]
[30.29357147 -85.23220825]
[20.51156616 -96.64748383]
[12.68749046 -109.48415375]
[7.02400827 -123.40970612]
[3.66781640 -138.06344604]
[2.70584917 -153.06581116]
[4.16302347 -168.02818298]
[8.00159550 -182.56303406]
[14.12213612 -196.29383850]
[22.36610794 -208.86495972]
[32.51997375 -219.95077515]
[44.32072449 -229.26411438]
[57.46269226 -236.56376648]
[71.60546875 -241.66064453]
[86.38271332 -244.42271423]
[101.41167450 -244.77844238]
[116.30306244 -242.71861267]
[130.67114258 -238.29658508]
[144.14375305 -231.62689209]
[156.37193298 -222.88229370]
[167.03892517 -212.28930664]
[175.86843872 -200.12231445]
[182.63177490 -186.69645691]
[187.15373230 -172.35951233]
[189.31718445 -157.48283386]
[189.06610107 -142.45176697]
[186.40698242 -127.65563965]
[181.40869141 -113.47772217]
[174.20071411 -100.28525543]
[164.96975708 -88.41994476]
[153.95491028 -78.18914032]
[141.44148254 -69.85784912]
[127.75362396 -63.64185715]
[113.24586487 -59.70218658]
[114.80638123 -44.78358078]
[123.82578278 -32.93032074]
[117.56616211 -18.40008354]
[119.12668610 -3.48147869]
[120.68721008 11.43712616]
[122.24773407 26.35573006]
[123.80825806 41.27433395]
[129.03474426 27.21433067]
[136.86936951 14.42297745]
[147.01921082 3.37849021]
[159.10481262 -5.50622559]
[172.67436218 -11.89900780]
[187.22052002 -15.56085682]
[202.19949341 -16.35487366]
[217.05126953 -14.25137138]
[231.22061157 -9.32899284]
[244.17778015 -1.77176321]
[255.43836975 8.13778400]
[264.58139038 20.02917480]
[271.26501465 33.45783615]
[275.23941040 47.92173386]
[276.35592651 62.88012314]
[274.57287598 77.77376556]
[269.95690918 92.04586792]
[262.68057251 105.16284180]
[253.01593018 116.63430786]
[241.32426453 126.03138733]
[228.04270935 133.00277710]
[213.66780090 137.28784180]
[198.73693848 138.72637939]
[183.80833435 137.26460266]
[169.44009399 132.95716858]
[156.16941833 125.96511078]
[144.49240112 116.54984283]
[134.84561157 105.06334686]
[127.58970642 91.93506622]
[122.99595642 77.65579987]
[121.23621368 62.76549149]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[100.58374786 143.73941040]
[89.02196503 153.12953186]
[83.98504639 167.25856018]
[78.94813538 181.38758850]
[73.91121674 195.51661682]
[68.87429810 209.64564514]
[63.83738327 223.77467346]
[58.80046844 237.90370178]
[53.76354980 252.03273010]
[64.74255371 241.81208801]
[78.22012329 235.22764587]
[93.03032684 232.84899902]
[107.89192963 234.88195801]
[121.51924896 241.15061951]
[132.73338318 251.11270142]
[140.56420898 263.90637207]
[144.33427429 278.42486572]
[143.71743774 293.41217041]
[138.76704407 307.57174683]
[129.91137695 319.67864990]
[117.91651917 328.68551636]
[103.82015991 333.81314087]
[88.84176636 334.61795044]
[74.27712250 331.03030396]
[61.38621140 323.36059570]
[51.28423691 312.27230835]
[44.84510803 298.72470093]
[42.62588501 283.88977051]
[44.81752396 269.05426025]
[36.03692245 281.21572876]
[27.25631714 293.37719727]
[18.47571564 305.53863525]
[9.69511127 317.70010376]
[0.91450834 329.86154175]
[12.23534203 339.71823120]
[22.61294556 350.56353760]
[31.96132660 362.30758667]
[40.20302200 374.85308838]
[47.26972961 388.09609985]
[53.10290146 401.92681885]
[57.65419388 416.23071289]
[60.88589096 430.88919067]
[62.77122116 445.78082275]
[63.29455566 460.78219604]
[62.45156097 475.76901245]
[60.24922180 490.61709595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 198]
[56 197]
[57 196]
[58 195]
[59 194]
[60 193]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[70 164]
[71 163]
[73 161]
[74 160]
[75 159]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[82 122]
[83 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
