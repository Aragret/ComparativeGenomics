%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[137.82678223 696.52984619]
[124.36627960 689.90057373]
[111.32214355 682.48547363]
[98.74018860 674.31066895]
[86.66461182 665.40484619]
[75.13783264 655.79931641]
[64.20033264 645.52783203]
[53.89054108 634.62640381]
[44.24466324 623.13336182]
[35.29658127 611.08905029]
[27.07772827 598.53582764]
[19.61697388 585.51776123]
[12.94052219 572.08056641]
[7.07182693 558.27148438]
[2.03150034 544.13897705]
[-2.16275215 529.73266602]
[-5.49619818 515.10321045]
[-7.95712948 500.30197144]
[-9.53690052 485.38092041]
[-10.22996426 470.39251709]
[-10.03388405 455.38937378]
[-8.94935036 440.42416382]
[-6.98017168 425.54953003]
[-4.13326502 410.81765747]
[-0.41863078 396.28030396]
[4.15068340 381.98855591]
[9.55862808 367.99258423]
[15.78620625 354.34155273]
[22.81154442 341.08346558]
[30.60996628 328.26480103]
[39.15407944 315.93066406]
[48.41386795 304.12432861]
[58.35681152 292.88729858]
[68.94798279 282.25903320]
[80.15017700 272.27688599]
[91.92405701 262.97586060]
[104.22824860 254.38867188]
[117.01954651 246.54548645]
[130.25302124 239.47383118]
[143.88217163 233.19856262]
[138.42681885 219.22576904]
[132.97146606 205.25297546]
[127.51610565 191.28016663]
[122.06074524 177.30737305]
[116.60539246 163.33457947]
[111.15003204 149.36178589]
[99.31379700 140.32005310]
[101.50225830 124.65093994]
[96.04689789 110.67813873]
[91.64409637 125.01743317]
[80.25682068 134.78114319]
[65.41355896 136.94387817]
[51.71364212 130.83551025]
[43.40214539 118.34874725]
[43.05447769 103.35278320]
[50.77836227 90.49425507]
[64.18047333 83.75753784]
[79.10801697 85.23006439]
[90.93569183 94.45576477]
[87.39601898 79.87939453]
[83.85634613 65.30301666]
[80.31667328 50.72664261]
[76.77700043 36.15026855]
[73.23732758 21.57389069]
[61.00459671 15.93697643]
[54.34905624 4.45158291]
[55.50662231 -8.57692909]
[63.83150482 -18.41185951]
[60.50924683 -33.03931808]
[57.18698502 -47.66677856]
[53.86472702 -62.29423904]
[50.54246521 -76.92169952]
[35.60707855 -75.34991455]
[20.59062004 -75.55564880]
[5.70389843 -77.53603363]
[-8.84409809 -81.26325226]
[-22.84914017 -86.68498230]
[-36.11461639 -93.72511292]
[-48.45430374 -102.28481293]
[-59.69496918 -112.24391937]
[-69.67881012 -123.46262360]
[-78.26567841 -135.78341675]
[-85.33501434 -149.03335571]
[-90.78758240 -163.02642822]
[-94.54683685 -177.56617737]
[-96.56000519 -192.44850159]
[-96.79882812 -207.46446228]
[-95.25994110 -222.40327454]
[-91.96495819 -237.05522156]
[-86.96013641 -251.21459961]
[-80.31572723 -264.68264771]
[-72.12501526 -277.27029419]
[-62.50297928 -288.80081177]
[-51.58470535 -299.11233521]
[-39.52346039 -308.06011963]
[-26.48857307 -315.51852417]
[-12.66302967 -321.38290405]
[1.75908148 -325.57086182]
[16.57529640 -328.02365112]
[31.57761765 -328.70681763]
[46.55543518 -327.61077881]
[61.29848862 -324.75091553]
[75.59980011 -320.16735840]
[89.25861359 -313.92449951]
[102.08316803 -306.10995483]
[113.89343262 -296.83343506]
[124.52360535 -286.22515869]
[133.82446289 -274.43405151]
[141.66543579 -261.62561035]
[147.93644714 -247.97970581]
[152.54945374 -233.68788147]
[155.43969727 -218.95075989]
[156.56661987 -203.97521973]
[155.91438293 -188.97152710]
[153.49214172 -174.15028381]
[149.33392334 -159.71957397]
[143.49807739 -145.88197327]
[136.06654358 -132.83172607]
[127.14365387 -120.75206757]
[116.85465240 -109.81256104]
[105.34400177 -100.16677094]
[92.77327728 -91.95012665]
[79.31896210 -85.27796936]
[65.16992950 -80.24395752]
[68.49218750 -65.61650085]
[71.81444550 -50.98904037]
[75.13670349 -36.36157990]
[78.45896149 -21.73411942]
[93.05945587 -13.38760185]
[97.18713379 3.26404023]
[87.81370544 18.03421974]
[91.35337830 32.61059570]
[94.89305115 47.18696976]
[98.43272400 61.76334381]
[101.97239685 76.33972168]
[105.51206970 90.91609955]
[110.01969910 105.22278595]
[115.47505188 119.19557953]
[127.70149231 129.23674011]
[125.12283325 143.90641785]
[130.57818604 157.87922668]
[136.03353882 171.85202026]
[141.48890686 185.82481384]
[146.94425964 199.79760742]
[152.39961243 213.77041626]
[157.85498047 227.74320984]
[172.13058472 223.12370300]
[186.65478516 219.35800171]
[201.37657166 216.45935059]
[216.24421692 214.43792725]
[231.20549011 213.30081177]
[246.20785522 213.05200195]
[261.19860840 213.69239807]
[276.12512207 215.21972656]
[290.93490601 217.62863159]
[305.57598877 220.91065979]
[319.99694824 225.05426025]
[334.14706421 230.04489136]
[347.97671509 235.86503601]
[361.43728638 242.49423218]
[374.48147583 249.90919495]
[387.06350708 258.08389282]
[399.13916016 266.98959351]
[410.66601562 276.59503174]
[421.60360718 286.86645508]
[431.91351318 297.76779175]
[441.55947876 309.26074219]
[450.50765991 321.30493164]
[458.72662354 333.85809326]
[466.18750000 346.87609863]
[472.86407471 360.31323242]
[478.73287964 374.12228394]
[483.77334595 388.25476074]
[487.96771240 402.66101074]
[491.30130005 417.29043579]
[493.76235962 432.09164429]
[495.34225464 447.01269531]
[496.03546143 462.00109863]
[495.83950806 477.00424194]
[494.75509644 491.96945190]
[492.78604126 506.84411621]
[489.93927002 521.57598877]
[486.22476196 536.11340332]
[481.65557861 550.40515137]
[476.24774170 564.40118408]
[470.02029419 578.05224609]
[462.99508667 591.31042480]
[455.19677734 604.12915039]
[446.65277100 616.46337891]
[437.39306641 628.26977539]
[427.45022583 639.50689697]
[416.85916138 650.13525391]
[405.65704346 660.11749268]
[393.88323975 669.41864014]
[381.57913208 678.00592041]
[368.78790283 685.84924316]
[355.55450439 692.92102051]
[341.92538452 699.19641113]
[327.94845581 704.65338135]
[313.67282104 709.27276611]
[299.14855957 713.03833008]
[284.42675781 715.93682861]
[269.55911255 717.95812988]
[254.59780884 719.09509277]
[239.59544373 719.34381104]
[224.60469055 718.70324707]
[209.67820740 717.17578125]
[194.86843872 714.76678467]
[180.22737122 711.48461914]
[165.80647278 707.34088135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[48 138]
[49 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
