%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[46.11254883 395.82186890]
[38.29445267 408.62951660]
[29.66370964 420.90426636]
[20.25652313 432.59460449]
[10.11234951 443.65148926]
[-0.72626239 454.02853394]
[-12.21385098 463.68225098]
[-24.30223465 472.57214355]
[-36.94070816 480.66088867]
[-50.07625961 487.91458130]
[-63.65380096 494.30279541]
[-77.61637115 499.79876709]
[-91.90541840 504.37936401]
[-106.46099854 508.02545166]
[-121.22206879 510.72171021]
[-136.12670898 512.45684814]
[-151.11239624 513.22357178]
[-166.11630249 513.01861572]
[-181.07546997 511.84289551]
[-195.92715454 509.70135498]
[-210.60906982 506.60296631]
[-225.05964661 502.56069946]
[-239.21824646 497.59152222]
[-253.02551270 491.71627808]
[-266.42352295 484.95959473]
[-279.35604858 477.34985352]
[-291.76889038 468.91891479]
[-303.60995483 459.70220947]
[-314.82958984 449.73834229]
[-325.38076782 439.06912231]
[-335.21914673 427.73931885]
[-344.30355835 415.79641724]
[-352.59582520 403.29055786]
[-360.06121826 390.27413940]
[-366.66836548 376.80178833]
[-372.38961792 362.92999268]
[-377.20095825 348.71697998]
[-381.08218384 334.22232056]
[-384.01702881 319.50683594]
[-385.99319458 304.63223267]
[-387.00234985 289.66091919]
[-387.04034424 274.65567017]
[-386.10693359 259.67944336]
[-384.20608521 244.79501343]
[-381.34573364 230.06486511]
[-377.53790283 215.55076599]
[-372.79858398 201.31356812]
[-367.14761353 187.41300964]
[-360.60870361 173.90739441]
[-353.20928955 160.85336304]
[-344.98040771 148.30567932]
[-335.95657349 136.31697083]
[-326.17565918 124.93750000]
[-315.67861938 114.21502686]
[-304.50955200 104.19451141]
[-292.71527100 94.91798401]
[-280.34527588 86.42436218]
[-267.45138550 78.74925995]
[-254.08776855 71.92487335]
[-240.31042480 65.97982788]
[-226.17713928 60.93905640]
[-211.74720764 56.82370758]
[-197.08116150 53.65103531]
[-182.24049377 51.43435669]
[-167.28747559 50.18296051]
[-152.28480530 49.90209961]
[-137.29542542 50.59295273]
[-122.38219452 52.25261688]
[-107.60767365 54.87413788]
[-93.03382111 58.44651413]
[-78.72177887 62.95476532]
[-64.73157501 68.37998199]
[-51.12187958 74.69940948]
[-37.94978333 81.88653564]
[-25.27053452 89.91122437]
[-13.13731670 98.73980713]
[-1.60101902 108.33526611]
[9.28997135 118.65734100]
[19.48997116 129.66273499]
[28.95620155 141.30531311]
[41.18268585 132.61547852]
[53.40917206 123.92565918]
[65.63565826 115.23583984]
[77.86214447 106.54601288]
[90.08863068 97.85618591]
[94.31219482 90.99076843]
[102.56246185 89.12960052]
[114.91697693 80.62277222]
[121.89527130 66.42369080]
[136.76588440 65.57848358]
[149.12039185 57.07165527]
[161.47489929 48.56482697]
[153.81842041 35.65935135]
[147.05065918 22.26642799]
[141.20249939 8.44716740]
[136.30061340 -5.73537540]
[132.36738586 -20.21648788]
[129.42074585 -34.93009567]
[127.47414398 -49.80906296]
[126.53646088 -64.78549957]
[126.61198425 -79.79107666]
[127.70035553 -94.75731659]
[129.79661560 -109.61593628]
[132.89120483 -124.29914093]
[136.96998596 -138.73992920]
[142.01435852 -152.87242126]
[148.00132751 -166.63212585]
[154.90353394 -179.95625305]
[162.68951416 -192.78401184]
[171.32374573 -205.05686951]
[180.76679993 -216.71884155]
[190.97561646 -227.71670532]
[201.90361023 -238.00027466]
[213.50093079 -247.52262878]
[225.71463013 -256.24032593]
[238.48899841 -264.11361694]
[251.76576233 -271.10650635]
[265.48431396 -277.18716431]
[279.58206177 -282.32778931]
[293.99472046 -286.50494385]
[308.65649414 -289.69955444]
[323.50045776 -291.89709473]
[338.45892334 -293.08749390]
[353.46365356 -293.26531982]
[368.44613647 -292.42977905]
[383.33801270 -290.58468628]
[398.07138062 -287.73843384]
[412.57897949 -283.90402222]
[426.79461670 -279.09896851]
[440.65344238 -273.34518433]
[454.09219360 -266.66888428]
[467.04956055 -259.10058594]
[479.46646118 -250.67480469]
[491.28619385 -241.42997742]
[502.45483398 -231.40829468]
[512.92144775 -220.65547180]
[522.63824463 -209.22058105]
[531.56091309 -197.15580750]
[539.64874268 -184.51617432]
[546.86480713 -171.35937500]
[553.17614746 -157.74543762]
[558.55407715 -143.73646545]
[562.97399902 -129.39640808]
[566.41571045 -114.79066467]
[568.86352539 -99.98590088]
[570.30627441 -85.04965973]
[570.73742676 -70.05008698]
[570.15496826 -55.05563354]
[568.56152344 -40.13471222]
[565.96441650 -25.35540009]
[562.37548828 -10.78513622]
[557.81115723 3.50959849]
[552.29211426 17.46358109]
[545.84368896 31.01313972]
[538.49523926 44.09645081]
[530.28027344 56.65382385]
[521.23632812 68.62795258]
[511.40463257 79.96420288]
[500.83004761 90.61086273]
[489.56085205 100.51933289]
[477.64843750 109.64441681]
[465.14715576 117.94447327]
[452.11404419 125.38163757]
[438.60861206 131.92196655]
[424.69244385 137.53562927]
[410.42904663 142.19699097]
[395.88348389 145.88479614]
[381.12216187 148.58222961]
[366.21240234 150.27696228]
[351.22225952 150.96127319]
[336.22009277 150.63203430]
[321.27438354 149.29075623]
[306.45333862 146.94354248]
[291.82455444 143.60113525]
[277.45480347 139.27874756]
[263.40963745 133.99612427]
[249.75314331 127.77735138]
[236.54762268 120.65082550]
[223.85334778 112.64905548]
[211.72824097 103.80854797]
[200.22761536 94.16963959]
[189.40394592 83.77632141]
[179.30662537 72.67600250]
[169.98171997 60.91933823]
[157.62721252 69.42616272]
[145.27270508 77.93299103]
[139.17808533 91.52360535]
[123.42379761 92.97727966]
[111.06929016 101.48410797]
[98.77845001 110.08267212]
[86.55197144 118.77249908]
[74.32548523 127.46232605]
[62.09899521 136.15214539]
[49.87251282 144.84196472]
[37.64602661 153.53179932]
[45.52913284 166.29954529]
[52.56925201 179.55079651]
[58.73685074 193.22996521]
[64.00605774 207.27967834]
[68.35478210 221.64099121]
[71.76477814 236.25369263]
[74.22173309 251.05647278]
[75.71536255 265.98724365]
[76.23937988 280.98339844]
[75.79160309 295.98199463]
[74.37390137 310.92016602]
[71.99222565 325.73526001]
[68.65656281 340.36508179]
[64.38090515 354.74835205]
[59.18318939 368.82464600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 195]
[81 194]
[82 193]
[83 192]
[84 191]
[85 190]
[87 189]
[88 188]
[90 186]
[91 185]
[92 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
