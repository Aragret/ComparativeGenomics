%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[168.70863342 506.67776489]
[167.17677307 491.74218750]
[167.21450806 476.72833252]
[168.82144165 461.80065918]
[171.97998047 447.12271118]
[176.65548706 432.85537720]
[182.79673767 419.15490723]
[190.33647156 406.17144775]
[199.19204712 394.04724121]
[209.26646423 382.91513062]
[220.44932556 372.89709473]
[232.61811829 364.10287476]
[225.15037537 351.09393311]
[217.68263245 338.08496094]
[210.02203369 325.18862915]
[202.17028809 312.40780640]
[194.31852722 299.62695312]
[186.46676636 286.84609985]
[178.61502075 274.06527710]
[170.76325989 261.28442383]
[168.07124329 260.50265503]
[165.52668762 258.60742188]
[163.55526733 255.64958191]
[162.55635071 251.83294678]
[162.85083008 247.50082397]
[155.77372742 234.27529907]
[153.13301086 233.33467102]
[150.70578003 231.29135132]
[148.91389465 228.22140503]
[148.14393616 224.35208130]
[148.69573975 220.04518127]
[142.41838074 206.42185974]
[127.56394196 197.07774353]
[129.40478516 178.75582886]
[122.92528534 165.22747803]
[116.44578552 151.69912720]
[103.96984100 143.56278992]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[68.54542542 69.60121155]
[70.02586365 54.78036499]
[63.54637146 41.25201797]
[57.06687546 27.72367287]
[44.12747192 18.61969185]
[45.60791016 3.79884315]
[38.23747635 16.86317444]
[23.45301628 19.39689064]
[12.15308189 9.53223419]
[12.66756344 -5.45894003]
[24.61720657 -14.52569580]
[39.19189453 -10.98539829]
[26.96545410 -21.02655029]
[29.54411507 -35.69623947]
[24.08875847 -49.66903687]
[18.63340187 -63.64183426]
[13.17804432 -77.61463165]
[7.72268724 -91.58743286]
[2.26733041 -105.56022644]
[-11.93017387 -111.96871185]
[-17.26363373 -126.21682739]
[-11.06663132 -139.71247864]
[-16.52198792 -153.68528748]
[-21.97734451 -167.65808105]
[-37.08195496 -170.06599426]
[-48.87542343 -179.64778137]
[-54.25362015 -193.75244141]
[-51.86571884 -208.55628967]
[-42.45188522 -220.09948730]
[-47.90724182 -234.07228088]
[-53.36259842 -248.04508972]
[-58.81795502 -262.01788330]
[-73.51680756 -258.86514282]
[-88.53105927 -258.11120605]
[-103.47180939 -259.77563477]
[-117.95204163 -263.81530762]
[-131.59669495 -270.12557983]
[-144.05233765 -278.54299927]
[-154.99633789 -288.84957886]
[-164.14521790 -300.77828979]
[-171.26200867 -314.02017212]
[-176.16235352 -328.23223877]
[-178.71932983 -343.04635620]
[-178.86671448 -358.07879639]
[-176.60067749 -372.94018555]
[-171.97990417 -387.24560547]
[-165.12411499 -400.62448120]
[-156.21086121 -412.73025513]
[-145.47103882 -423.24938965]
[-133.18281555 -431.90942383]
[-119.66451263 -438.48599243]
[-105.26625824 -442.80880737]
[-90.36102295 -444.76583862]
[-75.33487701 -444.30642700]
[-60.57703018 -441.44247437]
[-46.46975708 -436.24813843]
[-33.37846756 -428.85800171]
[-21.64225197 -419.46347046]
[-11.56511021 -408.30786133]
[-3.40806460 -395.68014526]
[2.61759853 -381.90744019]
[6.35579967 -367.34646606]
[7.70971060 -352.37438965]
[6.64426136 -337.37902832]
[3.18705010 -322.74877930]
[-2.57237315 -308.86264038]
[-10.48482513 -296.08026123]
[-20.34535599 -284.73275757]
[-31.89855194 -275.11401367]
[-44.84515762 -267.47323608]
[-39.38980103 -253.50044250]
[-33.93444443 -239.52764893]
[-28.47908783 -225.55484009]
[-13.73428440 -223.44383240]
[-1.94744194 -214.17419434]
[3.65401030 -200.15669250]
[1.47273946 -185.11877441]
[-8.00454807 -173.11343384]
[-2.54919052 -159.14064026]
[2.90616655 -145.16784668]
[16.60805321 -139.44125366]
[22.33960915 -125.34855652]
[16.24012756 -111.01558685]
[21.69548607 -97.04278564]
[27.15084267 -83.06999207]
[32.60620117 -69.09719086]
[38.06155777 -55.12439346]
[43.51691437 -41.15159607]
[55.35314941 -32.10987091]
[53.16469193 -16.44075584]
[59.13625336 -2.68065262]
[71.61219788 5.45568895]
[70.59522247 21.24417686]
[77.07471466 34.77252197]
[83.55421448 48.30086899]
[96.03015900 56.43721008]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[131.45457458 130.39878845]
[129.97413635 145.21963501]
[136.45362854 158.74798584]
[142.93312073 172.27632141]
[154.81678772 177.29045105]
[159.93507385 188.69161987]
[156.04170227 200.14450073]
[162.31906128 213.76782227]
[168.99925232 227.19819641]
[176.07637024 240.42372131]
[183.54409790 253.43267822]
[191.39585876 266.21350098]
[199.24761963 278.99435425]
[207.09936523 291.77520752]
[214.95112610 304.55603027]
[222.80288696 317.33688354]
[228.42517090 320.81561279]
[231.05226135 325.85498047]
[230.69158936 330.61721802]
[238.15933228 343.62619019]
[245.62707520 356.63513184]
[259.35778809 350.56182861]
[273.64813232 345.95706177]
[288.34152222 342.87130737]
[303.27697754 341.33834839]
[318.29086304 341.37500000]
[333.21865845 342.98086548]
[347.89678955 346.13830566]
[362.16448975 350.81277466]
[375.86541748 356.95303345]
[388.84942627 364.49182129]
[400.97427368 373.34652710]
[412.10711670 383.42013550]
[422.12597656 394.60226440]
[430.92108154 406.77041626]
[438.39605713 419.79125977]
[444.46902466 433.52212524]
[449.07342529 447.81259155]
[452.15884399 462.50604248]
[453.69143677 477.44152832]
[453.65441895 492.45541382]
[452.04818726 507.38314819]
[448.89038086 522.06121826]
[444.21557617 536.32879639]
[438.07498169 550.02960205]
[430.53588867 563.01342773]
[421.68087769 575.13806152]
[411.60702515 586.27062988]
[400.42465210 596.28924561]
[388.25628662 605.08404541]
[375.23526001 612.55871582]
[361.50424194 618.63134766]
[347.21365356 623.23541260]
[332.52011108 626.32043457]
[317.58459473 627.85266113]
[302.57073975 627.81530762]
[287.64300537 626.20874023]
[272.96502686 623.05053711]
[258.69754028 618.37536621]
[244.99693298 612.23443604]
[232.01329041 604.69506836]
[219.88887024 595.83978271]
[208.75651550 585.76562500]
[198.73820496 574.58300781]
[189.94367981 562.41442871]
[182.46932983 549.39324951]
[176.39703369 535.66204834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 164]
[13 163]
[14 162]
[15 159]
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[25 153]
[26 152]
[31 151]
[32 150]
[34 147]
[35 146]
[36 145]
[38 143]
[39 142]
[41 140]
[42 139]
[44 137]
[45 136]
[46 135]
[48 133]
[54 132]
[56 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[64 122]
[65 121]
[66 120]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
