%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[76.02222443 719.08361816]
[62.22826385 713.17266846]
[48.91460419 706.24743652]
[36.15569687 698.34667969]
[24.02289581 689.51446533]
[12.58405495 679.80029297]
[1.90314472 669.25848389]
[-7.96010208 657.94793701]
[-16.95052528 645.93194580]
[-25.01784706 633.27764893]
[-32.11695099 620.05590820]
[-38.20813370 606.34057617]
[-43.25733185 592.20843506]
[-47.23630905 577.73846436]
[-50.12281418 563.01159668]
[-51.90069962 548.11022949]
[-52.56002808 533.11761475]
[-52.09710693 518.11767578]
[-50.51452637 503.19430542]
[-47.82114029 488.43090820]
[-44.03200912 473.91006470]
[-39.16832352 459.71301270]
[-33.25728607 445.91909790]
[-26.33194923 432.60549927]
[-18.43104553 419.84664917]
[-9.59876060 407.71392822]
[0.11551198 396.27517700]
[10.65744495 385.59436035]
[21.96808434 375.73123169]
[33.98417282 366.74090576]
[46.63851547 358.67370605]
[59.86033630 351.57470703]
[73.57569885 345.48364258]
[87.70790100 340.43457031]
[102.17790222 336.45571899]
[99.29262543 321.73583984]
[89.25170135 310.73449707]
[94.19003296 295.70376587]
[91.30476379 280.98385620]
[88.41948700 266.26397705]
[85.53421783 251.54408264]
[75.67340851 244.53758240]
[73.14916992 232.29780579]
[79.84888458 221.27616882]
[77.18309021 206.51495361]
[74.51729584 191.75372314]
[70.38117981 206.17221069]
[63.37569046 219.43580627]
[53.79869080 230.98054504]
[42.05739975 240.31555176]
[28.65107155 247.04386902]
[14.14974403 250.87942505]
[-0.82997733 251.65913391]
[-15.65114784 249.34982300]
[-29.68356323 244.04969788]
[-42.33055878 235.98413086]
[-53.05437851 225.49604797]
[-61.39903641 213.03143311]
[-67.00971985 199.12026978]
[-69.64785004 184.35409546]
[-69.20126343 169.36073303]
[-65.68894196 154.77775574]
[-59.26023483 141.22518921]
[-50.18849182 129.27934265]
[-38.85944748 119.44812775]
[-25.75482178 112.14958191]
[-11.43182659 107.69404602]
[3.50051594 106.27096558]
[18.40727425 107.94086456]
[32.65460587 112.63272095]
[45.63670731 120.14704132]
[56.80157471 130.16430664]
[65.67446899 142.25860596]
[71.87811279 155.91564941]
[75.14874268 170.55491638]
[78.68841553 155.97853088]
[82.22808838 141.40216064]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[84.17134094 96.28079224]
[95.88154602 84.27049255]
[99.20380402 69.64303589]
[102.52606964 55.01557159]
[101.37507629 45.95394897]
[106.00820923 40.19583511]
[97.72309875 29.57644463]
[97.07631683 16.31778336]
[104.08019257 5.27116489]
[115.98849487 0.34958419]
[111.95356750 -14.94845200]
[122.63150024 -25.33262444]
[126.38779449 -39.85468292]
[130.14410400 -54.37674332]
[133.90040588 -68.89880371]
[137.65669250 -83.42086029]
[141.41299438 -97.94291687]
[145.16929626 -112.46498108]
[131.51239014 -118.76805115]
[119.20053864 -127.40853882]
[108.62951660 -138.10868835]
[100.13912964 -150.52452087]
[94.00231171 -164.25694275]
[90.41634369 -178.86450195]
[89.49649048 -193.87760925]
[91.27232361 -208.81367493]
[95.68676758 -223.19256592]
[102.59790039 -236.55206299]
[111.78357697 -248.46269226]
[122.94849396 -258.54159546]
[135.73376465 -266.46478271]
[149.72837830 -271.97753906]
[164.48246765 -274.90264893]
[179.52177429 -275.14611816]
[194.36282349 -272.70007324]
[208.52853394 -267.64318848]
[221.56355286 -260.13796997]
[233.04885864 -250.42572021]
[242.61521912 -238.81864929]
[249.95513916 -225.68984985]
[254.83267212 -211.46138000]
[257.09103394 -196.59060669]
[256.65759277 -181.55558777]
[253.54629517 -166.83961487]
[247.85717773 -152.91577148]
[239.77311707 -140.23161316]
[229.55395508 -129.19491577]
[217.52821350 -120.16046143]
[204.08248901 -113.41865540]
[189.64897156 -109.18622589]
[174.69165039 -107.59922791]
[159.69136047 -108.70867920]
[155.93505859 -94.18662262]
[152.17875671 -79.66455841]
[148.42245483 -65.14250183]
[144.66615295 -50.62044144]
[140.90985107 -36.09838104]
[137.15354919 -21.57632256]
[141.45716858 -7.31700134]
[130.51055908 4.10588503]
[139.65702820 18.21902657]
[135.68809509 34.90921783]
[120.58458710 43.73550797]
[117.15352631 58.33782959]
[113.83126831 72.96529388]
[110.50901031 87.59275055]
[116.11071014 97.80363464]
[113.44671631 109.14138031]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[96.80445862 144.94183350]
[93.26478577 159.51820374]
[89.72512054 174.09458923]
[89.27851105 189.08793640]
[91.94430542 203.84915161]
[94.61009979 218.61036682]
[106.82775116 232.38754272]
[100.25410461 248.65881348]
[103.13938141 263.37869263]
[106.02465057 278.09860229]
[108.90992737 292.81848145]
[119.15722656 304.87268066]
[114.01251984 318.85055542]
[116.89778900 333.57043457]
[131.79913330 331.79217529]
[146.79170227 331.13244629]
[161.79164124 331.59497070]
[176.71507263 333.17715454]
[191.47854614 335.87014771]
[205.99948120 339.65890503]
[220.19667053 344.52218628]
[233.99073792 350.43286133]
[247.30451965 357.35784912]
[260.06356812 365.25842285]
[272.19653320 374.09039307]
[283.63552856 383.80435181]
[294.31661987 394.34600830]
[304.18008423 405.65640259]
[313.17071533 417.67224121]
[321.23825073 430.32635498]
[328.33758545 443.54800415]
[334.42901611 457.26321411]
[339.47845459 471.39526367]
[343.45770264 485.86517334]
[346.34445190 500.59197998]
[348.12261963 515.49334717]
[348.78219604 530.48590088]
[348.31954956 545.48583984]
[346.73724365 560.40924072]
[344.04409790 575.17272949]
[340.25521851 589.69360352]
[335.39178467 603.89074707]
[329.48098755 617.68475342]
[322.55590820 630.99847412]
[314.65521240 643.75744629]
[305.82315063 655.89031982]
[296.10906982 667.32928467]
[285.56732178 678.01025391]
[274.25686646 687.87359619]
[262.24093628 696.86413574]
[249.58674622 704.93157959]
[236.36503601 712.03082275]
[222.64978027 718.12213135]
[208.51766968 723.17144775]
[194.04774475 727.15051270]
[179.32090759 730.03717041]
[164.41954041 731.81518555]
[149.42697144 732.47467041]
[134.42703247 732.01184082]
[119.50362396 730.42944336]
[104.74020386 727.73614502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 163]
[36 162]
[38 160]
[39 159]
[40 158]
[41 157]
[44 155]
[45 154]
[46 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[81 145]
[82 144]
[83 143]
[85 142]
[89 139]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
[97 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
