%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[166.54559326 688.09857178]
[153.68400574 680.37194824]
[141.28015137 671.93005371]
[129.37376404 662.79992676]
[118.00297546 653.01080322]
[107.20423126 642.59405518]
[97.01210785 631.58306885]
[87.45925903 620.01312256]
[78.57627869 607.92120361]
[70.39163208 595.34613037]
[62.93153000 582.32812500]
[56.21987534 568.90893555]
[50.27816010 555.13153076]
[45.12542343 541.04003906]
[40.77816772 526.67956543]
[37.25032043 512.09619141]
[34.55318069 497.33654785]
[32.69539261 482.44796753]
[31.68290329 467.47811890]
[31.51895714 452.47497559]
[32.20407867 437.48660278]
[33.73607254 422.56097412]
[36.11003494 407.74594116]
[39.31835556 393.08892822]
[43.35076523 378.63690186]
[48.19433975 364.43615723]
[53.83356476 350.53219604]
[60.25037766 336.96954346]
[67.42422485 323.79162598]
[75.33212280 311.04071045]
[83.94874573 298.75756836]
[93.24648285 286.98162842]
[103.19555664 275.75054932]
[113.76409149 265.10031128]
[124.91824341 255.06506348]
[136.62226868 245.67694092]
[148.83869934 236.96601868]
[161.52836609 228.96018982]
[154.25514221 215.84149170]
[146.98190308 202.72279358]
[139.70867920 189.60409546]
[132.43545532 176.48541260]
[125.16222382 163.36671448]
[113.62430573 159.73310852]
[107.45749664 148.86323547]
[110.44210815 136.31512451]
[104.51464844 131.90072632]
[103.35975647 122.83959198]
[96.48034668 109.51016235]
[90.27890015 104.36092377]
[89.59940338 95.93067169]
[82.91921234 82.50029755]
[76.23901367 69.06992340]
[69.55882263 55.63954544]
[62.87862778 42.20916748]
[56.19843292 28.77879143]
[41.48580551 23.66250420]
[34.90245819 9.94703197]
[39.87072754 -4.04767847]
[33.19053268 -17.47805405]
[26.51033783 -30.90843010]
[19.83014297 -44.33880615]
[6.75663042 -53.24913025]
[8.01624393 -68.09037781]
[1.33604920 -81.52075195]
[-5.34414530 -94.95112610]
[-12.02433968 -108.38150787]
[-26.24634743 -103.54229736]
[-40.98647690 -100.64193726]
[-55.98166656 -99.73218536]
[-70.96431732 -100.82928467]
[-85.66704559 -103.91365051]
[-99.82746124 -108.93022919]
[-113.19284821 -115.78951263]
[-125.52469635 -124.36907959]
[-136.60293579 -134.51580811]
[-146.22984314 -146.04864502]
[-154.23361206 -158.76173401]
[-160.47143555 -172.42823792]
[-164.83197021 -186.80422974]
[-167.23739624 -201.63316345]
[-167.64480591 -216.65040588]
[-166.04690552 -231.58795166]
[-162.47221375 -246.17921448]
[-156.98452759 -260.16381836]
[-149.68179321 -273.29214478]
[-140.69433594 -285.32995605]
[-130.18252563 -296.06240845]
[-118.33398438 -305.29794312]
[-105.36013794 -312.87179565]
[-91.49254608 -318.64874268]
[-76.97866821 -322.52572632]
[-62.07753754 -324.43353271]
[-47.05507660 -324.33810425]
[-32.17937851 -322.24118042]
[-17.71591949 -318.18017578]
[-3.92281604 -312.22756958]
[8.95377827 -304.48956299]
[20.68406487 -295.10424805]
[31.05870438 -284.23916626]
[39.89254761 -272.08816528]
[47.02794647 -258.86813354]
[52.33755493 -244.81495667]
[55.72662354 -230.17947388]
[57.13467026 -215.22283936]
[56.53656387 -200.21199036]
[53.94297791 -185.41479492]
[49.40020370 -171.09535217]
[42.98930359 -157.50918579]
[34.82469177 -144.89877319]
[25.05207825 -133.48915100]
[13.84586334 -123.48394012]
[1.40603602 -115.06169891]
[8.08623028 -101.63132477]
[14.76642513 -88.20095062]
[21.44661903 -74.77056885]
[34.04232025 -66.82087708]
[33.26052094 -51.01900101]
[39.94071579 -37.58862686]
[46.62090683 -24.15824890]
[53.30110168 -10.72787285]
[67.45925140 -6.24653721]
[74.42523956 7.27861166]
[69.62880707 22.09859848]
[76.30900574 35.52897263]
[82.98919678 48.95935059]
[89.66939545 62.38972473]
[96.34958649 75.82009888]
[103.02977753 89.25048065]
[109.80977631 102.63075256]
[116.68918610 115.96018219]
[123.66764069 129.23802185]
[139.53079224 138.58906555]
[138.28091431 156.09349060]
[145.55413818 169.21217346]
[152.82737732 182.33087158]
[160.10060120 195.44956970]
[167.37384033 208.56825256]
[174.64706421 221.68695068]
[188.15982056 215.16571045]
[202.01986694 209.41938782]
[216.18283081 204.46641541]
[230.60330200 200.32264709]
[245.23512268 197.00135803]
[260.03143311 194.51318359]
[274.94479370 192.86608887]
[289.92742920 192.06536865]
[304.93139648 192.11357117]
[319.90859985 193.01055908]
[334.81106567 194.75343323]
[349.59106445 197.33663940]
[364.20123291 200.75187683]
[378.59481812 204.98822021]
[392.72564697 210.03210449]
[406.54849243 215.86737061]
[420.01904297 222.47531128]
[433.09420776 229.83476257]
[445.73205566 237.92216492]
[457.89212036 246.71159363]
[469.53543091 256.17489624]
[480.62472534 266.28179932]
[491.12445068 276.99984741]
[501.00097656 288.29479980]
[510.22265625 300.13040161]
[518.76000977 312.46875000]
[526.58557129 325.27035522]
[533.67443848 338.49420166]
[540.00372314 352.09790039]
[545.55328369 366.03790283]
[550.30529785 380.26956177]
[554.24456787 394.74725342]
[557.35839844 409.42462158]
[559.63690186 424.25463867]
[561.07269287 439.18981934]
[561.66125488 454.18231201]
[561.40069580 469.18408203]
[560.29180908 484.14709473]
[558.33813477 499.02340698]
[555.54602051 513.76538086]
[551.92431641 528.32574463]
[547.48468018 542.65789795]
[542.24127197 556.71588135]
[536.21093750 570.45477295]
[529.41296387 583.83044434]
[521.86920166 596.80010986]
[513.60369873 609.32220459]
[504.64303589 621.35668945]
[495.01586914 632.86486816]
[484.75302124 643.80999756]
[473.88742065 654.15692139]
[462.45382690 663.87261963]
[450.48886108 672.92584229]
[438.03088379 681.28765869]
[425.11981201 688.93127441]
[411.79693604 695.83221436]
[398.10501099 701.96832275]
[384.08786011 707.32000732]
[369.79037476 711.87011719]
[355.25839233 715.60400391]
[340.53839111 718.50982666]
[325.67761230 720.57818604]
[310.72360229 721.80242920]
[295.72427368 722.17877197]
[280.72769165 721.70587158]
[265.78189087 720.38525391]
[250.93472290 718.22125244]
[236.23377991 715.22070312]
[221.72612000 711.39324951]
[207.45825195 706.75122070]
[193.47584534 701.30932617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 139]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[46 132]
[48 131]
[49 130]
[51 129]
[52 128]
[53 127]
[54 126]
[55 125]
[56 124]
[59 121]
[60 120]
[61 119]
[62 118]
[64 116]
[65 115]
[66 114]
[67 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
