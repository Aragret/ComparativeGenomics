%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[95.57626343 776.85485840]
[80.67453766 775.10296631]
[65.90131378 772.47955322]
[51.30751801 768.99365234]
[36.94345093 764.65722656]
[22.85863876 759.48535156]
[9.10162830 753.49578857]
[-4.28015518 746.70916748]
[-17.24058151 739.14886475]
[-29.73497200 730.84100342]
[-41.72025681 721.81420898]
[-53.15512085 712.09954834]
[-64.00014496 701.73052979]
[-74.21794128 690.74298096]
[-83.77329254 679.17462158]
[-92.63325500 667.06549072]
[-100.76728058 654.45721436]
[-108.14734650 641.39337158]
[-114.74799347 627.91888428]
[-120.54647827 614.08020020]
[-125.52281189 599.92510986]
[-129.65983582 585.50238037]
[-132.94328308 570.86169434]
[-135.36184692 556.05358887]
[-136.90719604 541.12902832]
[-137.57397461 526.13946533]
[-137.35990906 511.13665771]
[-136.26573181 496.17227173]
[-134.29521179 481.29788208]
[-131.45515442 466.56475830]
[-127.75532532 452.02371216]
[-123.20849609 437.72488403]
[-117.83033752 423.71752930]
[-111.63938904 410.04995728]
[-104.65699005 396.76928711]
[-96.90721130 383.92126465]
[-88.41677094 371.55020142]
[-79.21493530 359.69876099]
[-69.33342743 348.40777588]
[-58.80630493 337.71618652]
[-47.66986084 327.66082764]
[-35.96248627 318.27639771]
[-23.72453880 309.59518433]
[-10.99820518 301.64718628]
[2.17264414 294.45974731]
[15.74260712 288.05767822]
[29.66490364 282.46301270]
[43.89154053 277.69509888]
[58.37347794 273.77029419]
[73.06079102 270.70217896]
[87.90284729 268.50131226]
[102.84848785 267.17529297]
[102.40188599 252.18194580]
[99.06062317 245.58969116]
[102.06192017 236.96241760]
[101.83859253 221.96406555]
[93.91265869 209.35340881]
[101.44364166 195.43957520]
[101.22030640 180.44123840]
[100.21604919 165.47488403]
[98.43358612 150.58117676]
[96.65111542 135.68745422]
[87.45624542 123.96979523]
[93.49883270 109.34796906]
[85.64546967 122.12782288]
[72.17600250 128.72883606]
[57.26408768 127.10561371]
[45.53034973 117.76113129]
[40.61061096 103.59087372]
[44.02931213 88.98564911]
[54.72712326 78.47105408]
[69.38922119 75.30513763]
[83.47238159 80.46890259]
[92.61289215 92.36254120]
[92.83621979 77.36419678]
[85.30524445 63.45035934]
[93.23117065 50.83969498]
[93.45449829 35.84135818]
[93.67782593 20.84302139]
[93.90115356 5.84468460]
[93.90115356 -9.15531540]
[85.95925140 -22.83876228]
[93.50620270 -35.67982101]
[93.28287506 -50.67815781]
[93.05954742 -65.67649078]
[92.83621979 -80.67483521]
[84.89431000 -94.35827637]
[92.44126892 -107.19933319]
[92.21793365 -122.19766998]
[88.96110535 -130.73178101]
[92.10460663 -137.42057800]
[92.10460663 -152.42057800]
[92.10460663 -167.42057800]
[92.10460663 -182.42057800]
[92.10460663 -197.42057800]
[92.10460663 -212.42057800]
[77.71143341 -217.07801819]
[65.46313477 -225.95689392]
[56.55966187 -238.18731689]
[51.87329865 -252.57110596]
[51.86316299 -267.69906616]
[56.53024673 -282.08911133]
[65.41731262 -294.33145142]
[77.65370941 -303.22674561]
[92.04062653 -307.90344238]
[107.16858673 -307.90344238]
[121.55550385 -303.22674561]
[133.79190063 -294.33145142]
[142.67897034 -282.08911133]
[147.34605408 -267.69906616]
[147.33592224 -252.57110596]
[142.64955139 -238.18731689]
[133.74607849 -225.95689392]
[121.49777985 -217.07801819]
[107.10460663 -212.42057800]
[107.10460663 -197.42057800]
[107.10460663 -182.42057800]
[107.10460663 -167.42057800]
[107.10460663 -152.42057800]
[107.10460663 -137.42057800]
[107.21627808 -122.42099762]
[107.43960571 -107.42266083]
[115.36553192 -94.81199646]
[107.83455658 -80.89816284]
[108.05788422 -65.89981842]
[108.28121185 -50.90148544]
[108.50453949 -35.90314865]
[116.43047333 -23.29248238]
[108.89949799 -9.37864304]
[111.64170074 -5.46848202]
[111.95667267 0.20582984]
[108.89949799 6.06801224]
[108.67616272 21.06634903]
[108.45283508 36.06468582]
[108.22950745 51.06302261]
[115.77646637 63.90408325]
[107.83455658 77.58753204]
[107.61122894 92.58586884]
[108.39254761 107.56550598]
[117.71492004 120.34846497]
[111.54483795 133.90498352]
[113.32730103 148.79870605]
[115.10976410 163.69242859]
[124.31166077 151.84652710]
[138.94810486 148.56408691]
[152.32751465 155.34577942]
[158.33300781 169.09111023]
[154.21894836 183.51589966]
[141.86622620 192.02531433]
[126.92235565 190.72898865]
[116.21865082 180.21791077]
[116.44197845 195.21624756]
[124.38388062 208.89968872]
[116.83692932 221.74073792]
[117.06025696 236.73908997]
[117.39523315 251.73533630]
[117.84184265 266.72869873]
[132.83990479 267.16278076]
[147.78665161 268.47631836]
[162.63053894 270.66479492]
[177.32040405 273.72064209]
[191.80561829 277.63336182]
[206.03622437 282.38940430]
[219.96319580 287.97244263]
[233.53849792 294.36318970]
[246.71533203 301.53961182]
[259.44830322 309.47702026]
[271.69348145 318.14797974]
[283.40869141 327.52264404]
[294.55352783 337.56872559]
[305.08956909 348.25152588]
[314.98049927 359.53424072]
[324.19223022 371.37799072]
[332.69299316 383.74194336]
[340.45349121 396.58349609]
[347.44696045 409.85833740]
[353.64932251 423.52075195]
[359.03918457 437.52362061]
[363.59793091 451.81863403]
[367.30990601 466.35659790]
[370.16226196 481.08731079]
[372.14520264 495.96005249]
[373.25186157 510.92355347]
[373.47845459 525.92620850]
[372.82418823 540.91625977]
[371.29129028 555.84210205]
[368.88510132 570.65228271]
[365.61386108 585.29565430]
[361.48889160 599.72186279]
[356.52438354 613.88110352]
[350.73742676 627.72460938]
[344.14804077 641.20458984]
[336.77890015 654.27459717]
[328.65539551 666.88964844]
[319.80554199 679.00622559]
[310.25985718 690.58245850]
[300.05123901 701.57861328]
[289.21487427 711.95666504]
[277.78811646 721.68084717]
[265.81036377 730.71765137]
[253.32290649 739.03594971]
[240.36880493 746.60705566]
[226.99269104 753.40484619]
[213.24067688 759.40588379]
[199.16018677 764.58953857]
[184.79974365 768.93792725]
[170.20886230 772.43597412]
[155.43783569 775.07177734]
[140.53758240 776.83605957]
[125.55946350 777.72290039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 157]
[53 156]
[55 155]
[56 154]
[58 152]
[59 151]
[60 143]
[61 142]
[62 141]
[64 139]
[74 138]
[75 137]
[77 135]
[78 134]
[79 133]
[80 132]
[81 129]
[83 127]
[84 126]
[85 125]
[86 124]
[88 122]
[89 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
