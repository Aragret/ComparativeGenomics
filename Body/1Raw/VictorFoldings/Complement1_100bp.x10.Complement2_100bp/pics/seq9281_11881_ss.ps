%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[121.47526550 709.24218750]
[107.43590546 703.94927979]
[93.71540833 697.87744141]
[80.35694122 691.04583740]
[67.40254211 683.47601318]
[54.89297485 675.19171143]
[42.86758804 666.21899414]
[31.36422348 656.58618164]
[20.41907501 646.32348633]
[10.06657982 635.46325684]
[0.33931252 624.03961182]
[-8.73212242 612.08856201]
[-17.11918449 599.64764404]
[-24.79548073 586.75604248]
[-31.73686218 573.45428467]
[-37.92148590 559.78424072]
[-43.32989502 545.78900146]
[-47.94507217 531.51245117]
[-51.75249481 516.99963379]
[-54.74018478 502.29611206]
[-56.89874268 487.44824219]
[-58.22137451 472.50268555]
[-58.70391846 457.50646973]
[-58.34485626 442.50680542]
[-57.14532089 427.55087280]
[-55.10908127 412.68569946]
[-52.24254990 397.95809937]
[-48.55474472 383.41442871]
[-44.05726242 369.10037231]
[-38.76426315 355.06103516]
[-32.69239807 341.34054565]
[-25.86076736 327.98211670]
[-18.29086876 315.02774048]
[-10.00652027 302.51821899]
[-1.03378785 290.49285889]
[8.59909725 278.98953247]
[18.86182594 268.04440308]
[29.72210884 257.69195557]
[41.14577484 247.96473694]
[53.09687805 238.89334106]
[65.53781891 230.50633240]
[78.42945862 222.83007812]
[91.73121643 215.88874817]
[105.40126038 209.70417786]
[119.39657593 204.29582214]
[114.78256226 190.02308655]
[110.16855621 175.75035095]
[105.55454254 161.47761536]
[100.94053650 147.20487976]
[96.70326996 161.59396362]
[86.33089447 172.42973328]
[72.14062500 177.29144287]
[57.30260849 175.09298706]
[45.13169098 166.32551575]
[38.34688568 152.94767761]
[38.46393967 137.94813538]
[45.45669937 124.67781830]
[57.76296616 116.10134888]
[72.63348389 114.13473511]
[86.74615479 119.21732330]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[85.79135132 107.90526581]
[84.14948273 96.37506866]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[86.63179016 56.97360229]
[84.62777710 42.10807419]
[82.62376404 27.24254799]
[79.84909821 23.90260696]
[78.42481995 20.22348213]
[78.29174042 16.67134285]
[79.24535370 13.64525032]
[80.97031403 11.43557739]
[79.85466766 -3.52287579]
[78.73902130 -18.48132896]
[77.62336731 -33.43978119]
[76.50772095 -48.39823532]
[62.22503662 -50.91559601]
[48.97103119 -56.77981949]
[37.51690292 -65.64472961]
[28.52793884 -76.98970032]
[22.52486229 -90.15020752]
[19.85367775 -104.35680389]
[20.66572189 -118.78003693]
[24.90910721 -132.57893372]
[32.33200073 -144.95001221]
[42.49757385 -155.17404175]
[54.80970764 -162.65794373]
[68.54793549 -166.96907043]
[67.65512085 -181.94247437]
[66.76230621 -196.91587830]
[51.97920609 -199.93620300]
[38.48197556 -206.68061829]
[27.19088173 -216.68930054]
[18.87576866 -229.27981567]
[14.10357475 -243.59375000]
[13.19967651 -258.65512085]
[16.22570229 -273.43707275]
[22.97533417 -286.93170166]
[32.98836899 -298.21893311]
[45.58210373 -306.52917480]
[59.89787674 -311.29583740]
[74.95960999 -312.19390869]
[89.74037933 -309.16220093]
[103.23239136 -302.40734863]
[114.51575470 -292.38995361]
[122.82114410 -279.79299927]
[127.58228302 -265.47540283]
[128.47454834 -250.41331482]
[125.43710327 -235.63372803]
[118.67705536 -222.14431763]
[108.65530396 -210.86482239]
[96.05516052 -202.56430054]
[81.73571014 -197.80870056]
[82.62852478 -182.83528137]
[83.52134705 -167.86187744]
[98.76896667 -164.85688782]
[112.73204041 -158.00860596]
[124.45936584 -147.77714539]
[133.15039062 -134.85331726]
[138.20988464 -120.11193085]
[139.28862000 -104.55268097]
[136.30760193 -89.23226166]
[129.46369934 -75.19267273]
[119.21671295 -63.39027023]
[106.25847626 -54.63071060]
[91.46617126 -49.51388550]
[92.58182526 -34.55543137]
[93.69747162 -19.59697723]
[94.81311798 -4.63852453]
[95.92877197 10.31992912]
[97.48928833 25.23853302]
[99.49330902 40.10406113]
[101.49732208 54.96958923]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[116.09735107 97.70778656]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[115.21327209 142.59086609]
[119.82727814 156.86360168]
[124.44129181 171.13633728]
[129.05529785 185.40907288]
[133.66931152 199.68180847]
[148.18211365 195.87422180]
[162.88557434 192.88636780]
[177.73342896 190.72764587]
[192.67897034 189.40484619]
[207.67517090 188.92213440]
[222.67485046 189.28103638]
[237.63079834 190.48040771]
[252.49597168 192.51647949]
[267.22360229 195.38284302]
[281.76733398 199.07049561]
[296.08142090 203.56781006]
[310.12081909 208.86065674]
[323.84136963 214.93237305]
[337.19989014 221.76385498]
[350.15435791 229.33360291]
[362.66397095 237.61781311]
[374.68942261 246.59040833]
[386.19287109 256.22317505]
[397.13809204 266.48577881]
[407.49066162 277.34594727]
[417.21801758 288.76950073]
[426.28955078 300.72048950]
[434.67669678 313.16134644]
[442.35308838 326.05288696]
[449.29455566 339.35458374]
[455.47930908 353.02456665]
[460.88781738 367.01980591]
[465.50308228 381.29629517]
[469.31060791 395.80911255]
[472.29843140 410.51260376]
[474.45709229 425.36044312]
[475.77981567 440.30599976]
[476.26248169 455.30221558]
[475.90353394 470.30187988]
[474.70410156 485.25784302]
[472.66796875 500.12298584]
[469.80154419 514.85058594]
[466.11386108 529.39434814]
[461.61648560 543.70843506]
[456.32357788 557.74780273]
[450.25183105 571.46832275]
[443.42028809 584.82678223]
[435.85049438 597.78125000]
[427.56622314 610.29083252]
[418.59359741 622.31622314]
[408.96078491 633.81964111]
[398.69815063 644.76483154]
[387.83795166 655.11737061]
[376.41433716 664.84466553]
[364.46331787 673.91613770]
[352.02243042 682.30328369]
[339.13085938 689.97961426]
[325.82913208 696.92102051]
[312.15914917 703.10571289]
[298.16387939 708.51416016]
[283.88735962 713.12939453]
[269.37454224 716.93688965]
[254.67105103 719.92462158]
[239.82318115 722.08325195]
[224.87762451 723.40594482]
[209.88142395 723.88854980]
[194.88174438 723.52954102]
[179.92579651 722.33001709]
[165.06063843 720.29388428]
[150.33303833 717.42736816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[61 140]
[62 139]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
