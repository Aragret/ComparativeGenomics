%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[49.67023468 336.73284912]
[45.95547104 351.27365112]
[41.11129379 365.47814941]
[35.16756821 379.25881958]
[28.16094589 392.53063965]
[20.13461685 405.21179199]
[11.13807297 417.22415161]
[1.22677898 428.49359131]
[-9.53815746 438.95065308]
[-21.09036636 448.53088379]
[-33.35862350 457.17517090]
[-46.26728821 464.83026123]
[-59.73677826 471.44894409]
[-73.68404388 476.99041748]
[-88.02309418 481.42050171]
[-102.66551971 484.71191406]
[-117.52105713 486.84432983]
[-132.49810791 487.80459595]
[-147.50433350 487.58682251]
[-162.44720459 486.19235229]
[-177.23460388 483.62976074]
[-191.77536011 479.91482544]
[-205.97981262 475.07052612]
[-219.76040649 469.12664795]
[-233.03215027 462.11990356]
[-245.71324158 454.09344482]
[-257.72549438 445.09677124]
[-268.99484253 435.18536377]
[-279.45178223 424.42031860]
[-289.03189087 412.86801147]
[-297.67605591 400.59967041]
[-305.33102417 387.69091797]
[-311.94958496 374.22137451]
[-317.49090576 360.27404785]
[-321.92083740 345.93493652]
[-325.21209717 331.29248047]
[-327.34436035 316.43692017]
[-328.30447388 301.45986938]
[-328.08654785 286.45364380]
[-326.69192505 271.51077271]
[-324.12918091 256.72341919]
[-320.41409302 242.18269348]
[-315.56964111 227.97828674]
[-309.62564087 214.19776917]
[-302.61874390 200.92608643]
[-294.59216309 188.24507141]
[-285.59536743 176.23292542]
[-275.68383789 164.96368408]
[-264.91870117 154.50683594]
[-253.36628723 144.92684937]
[-241.09785461 136.28279114]
[-228.18902588 128.62797546]
[-214.71940613 122.00955963]
[-200.77203369 116.46837616]
[-186.43289185 112.03857422]
[-171.79039001 108.74747467]
[-156.93481445 106.61536407]
[-141.95774841 105.65539551]
[-126.95153046 105.87347412]
[-112.00868225 107.26826477]
[-97.22133636 109.83116150]
[-82.68065643 113.54637146]
[-68.47629547 118.39098358]
[-54.69583130 124.33512878]
[-41.42422485 131.34216309]
[-28.74329567 139.36888123]
[-16.73123360 148.36578369]
[-5.46209335 158.27743530]
[4.99464273 169.04267883]
[16.54094505 159.46755981]
[28.08724594 149.89244080]
[39.63354874 140.31732178]
[51.17984772 130.74220276]
[62.72615051 121.16708374]
[74.27245331 111.59196472]
[85.81875610 102.01684570]
[90.85643768 88.97409058]
[104.60612488 86.43685150]
[116.15242767 76.86173248]
[127.69873047 67.28661346]
[118.78968811 55.21390533]
[110.57793427 42.65650558]
[103.08976746 29.65463829]
[96.34918213 16.24995041]
[90.37776184 2.48538232]
[85.19463348 -11.59497452]
[80.81641388 -25.94601440]
[77.25711823 -40.52177048]
[74.52814484 -55.27554703]
[72.63824463 -70.16008759]
[71.59346008 -85.12770081]
[71.39715576 -100.13046265]
[72.04994202 -115.12029266]
[73.54973602 -130.04917908]
[75.89173126 -144.86930847]
[79.06842804 -159.53320312]
[83.06965637 -173.99389648]
[87.88258362 -188.20504761]
[93.49180603 -202.12115479]
[99.87934875 -215.69761658]
[107.02474976 -228.89096069]
[114.90512085 -241.65893555]
[123.49522400 -253.96061707]
[132.76753235 -265.75659180]
[142.69236755 -277.00912476]
[153.23789978 -287.68209839]
[164.37037659 -297.74139404]
[176.05412292 -307.15475464]
[188.25172424 -315.89199829]
[200.92410278 -323.92520142]
[214.03067017 -331.22857666]
[227.52941895 -337.77874756]
[241.37713623 -343.55471802]
[255.52944946 -348.53802490]
[269.94100952 -352.71267700]
[284.56570435 -356.06530762]
[299.35662842 -358.58517456]
[314.26641846 -360.26419067]
[329.24731445 -361.09701538]
[344.25137329 -361.08093262]
[359.23043823 -360.21603394]
[374.13662720 -358.50509644]
[388.92211914 -355.95355225]
[403.53958130 -352.56961060]
[417.94216919 -348.36410522]
[432.08377075 -343.35049438]
[445.91909790 -337.54486084]
[459.40377808 -330.96578979]
[472.49465942 -323.63433838]
[485.14981079 -315.57403564]
[497.32867432 -306.81066895]
[508.99221802 -297.37231445]
[520.10314941 -287.28921509]
[530.62579346 -276.59365845]
[540.52648926 -265.31991577]
[549.77349854 -253.50408936]
[558.33721924 -241.18403625]
[566.19024658 -228.39921570]
[573.30737305 -215.19059753]
[579.66583252 -201.60047913]
[585.24523926 -187.67239380]
[590.02770996 -173.45095825]
[593.99792480 -158.98173523]
[597.14324951 -144.31108093]
[599.45349121 -129.48596191]
[600.92132568 -114.55389404]
[601.54199219 -99.56269836]
[601.31353760 -84.56039429]
[600.23669434 -69.59504700]
[598.31494141 -54.71459198]
[595.55432129 -39.96669388]
[591.96386719 -25.39859772]
[587.55487061 -11.05696774]
[582.34161377 3.01225471]
[576.34075928 16.76400185]
[569.57147217 30.15422058]
[562.05541992 43.14002228]
[553.81683350 55.67980194]
[544.88195801 67.73339844]
[535.27941895 79.26219177]
[525.04003906 90.22926331]
[514.19665527 100.59947205]
[502.78387451 110.33959961]
[490.83834839 119.41844940]
[478.39831543 127.80693817]
[465.50363159 135.47819519]
[452.19558716 142.40765381]
[438.51681519 148.57308960]
[424.51116943 153.95478821]
[410.22344971 158.53549194]
[395.69949341 162.30052185]
[380.98577881 165.23783875]
[366.12945557 167.33799744]
[351.17810059 168.59431458]
[336.17962646 169.00273132]
[321.18206787 168.56196594]
[306.23345947 167.27340698]
[291.38168335 165.14118958]
[276.67434692 162.17214966]
[262.15853882 158.37579346]
[247.88073730 153.76428223]
[233.88671875 148.35238647]
[220.22128296 142.15744019]
[206.92822266 135.19931030]
[194.05010986 127.50025177]
[181.62820435 119.08494568]
[169.70228577 109.98034668]
[158.31056213 100.21562195]
[147.48953247 89.82204437]
[137.27384949 78.83291626]
[125.72754669 88.40803528]
[114.18124390 97.98315430]
[109.14356232 111.02590942]
[95.39387512 113.56314850]
[83.84757233 123.13826752]
[72.30126953 132.71339417]
[60.75497055 142.28851318]
[49.20866776 151.86363220]
[37.66236496 161.43875122]
[26.11606407 171.01387024]
[14.56976223 180.58898926]
[23.21418953 192.85716248]
[30.86941528 205.76574707]
[37.48823547 219.23516846]
[43.02985001 233.18237305]
[47.46008682 247.52137756]
[50.75163651 262.16378784]
[52.88420105 277.01928711]
[53.84463120 291.99633789]
[53.62701035 307.00253296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 201]
[70 200]
[71 199]
[72 198]
[73 197]
[74 196]
[75 195]
[76 194]
[78 192]
[79 191]
[80 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
