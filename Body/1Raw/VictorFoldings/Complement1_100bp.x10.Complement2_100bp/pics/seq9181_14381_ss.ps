%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[3.42255211 525.40325928]
[7.88345861 510.98092651]
[16.07100296 498.29760742]
[27.37761497 488.29443359]
[40.96426773 481.71377563]
[38.29847336 466.95254517]
[35.63267517 452.19131470]
[32.96688080 437.43011475]
[23.21148300 430.27758789]
[20.86975861 418.00158691]
[27.73282433 407.08090210]
[25.28709602 392.28164673]
[22.84136963 377.48236084]
[18.49104691 391.83767700]
[11.28885460 404.99548340]
[1.54103172 416.39636230]
[-10.33793831 425.55551147]
[-23.84295654 432.08349609]
[-38.39978409 435.70272827]
[-53.38945389 436.25930786]
[-68.17459869 433.72958374]
[-82.12654877 428.22113037]
[-94.65206146 419.96817017]
[-105.21853638 409.32159424]
[-113.37669373 396.73410034]
[-118.77963257 382.74096680]
[-121.19763184 367.93713379]
[-120.52786255 352.95208740]
[-116.79881287 338.42300415]
[-110.16903687 324.96768188]
[-100.92044067 313.15820312]
[-89.44628143 303.49676514]
[-76.23444366 296.39413452]
[-61.84670258 292.15234375]
[-46.89482498 290.95175171]
[-32.01458359 292.84338379]
[-17.83868408 297.74685669]
[-4.96989775 305.45361328]
[6.04458857 315.63601685]
[14.73643398 327.86105347]
[20.73605537 341.60894775]
[23.78836632 356.29528809]
[27.54466629 341.77322388]
[31.30096626 327.25119019]
[26.99736214 312.99185181]
[37.94396973 301.56896973]
[41.70027161 287.04690552]
[45.45657349 272.52484131]
[49.21287155 258.00277710]
[37.75646973 248.45207214]
[31.55739594 234.81825256]
[31.89396667 219.78337097]
[38.75297165 206.33070374]
[50.82168198 197.15283203]
[65.73876953 194.11279297]
[69.49507141 179.59072876]
[73.25137329 165.06866455]
[77.00767517 150.54661560]
[75.54290771 147.33930969]
[75.55885315 143.26318359]
[77.44695282 139.02191162]
[81.26955414 135.46736145]
[85.67054749 121.12751007]
[90.07154846 106.78766632]
[94.25856018 92.38388062]
[98.23065186 77.91935730]
[92.54096222 66.34394836]
[96.14710999 54.37818527]
[106.59368896 48.27936172]
[110.78070068 33.87557983]
[114.96770477 19.47179794]
[119.15471649 5.06801558]
[123.34172821 -9.33576584]
[113.98159790 -16.87473679]
[107.72980499 -27.09885979]
[105.29872894 -38.79839706]
[106.95027924 -50.59822083]
[112.46789551 -61.11943436]
[121.18461609 -69.14051056]
[132.06364441 -73.73910522]
[143.82160950 -74.39806366]
[148.64759827 -88.60052490]
[153.47360229 -102.80297852]
[158.29959106 -117.00543213]
[163.12559509 -131.20788574]
[167.95159912 -145.41033936]
[172.77758789 -159.61280823]
[171.78070068 -163.83892822]
[172.14395142 -167.76736450]
[173.60671997 -171.00706482]
[175.80821228 -173.29180908]
[178.33673096 -174.50205994]
[176.38180542 -190.20202637]
[188.35134888 -199.06652832]
[194.01414490 -212.95654297]
[192.05921936 -228.65650940]
[204.02876282 -237.52101135]
[209.69154358 -251.41104126]
[215.35432434 -265.30105591]
[202.49298096 -273.08129883]
[191.00715637 -282.77783203]
[181.17971802 -294.15182495]
[173.25263977 -306.92318726]
[167.42117310 -320.77743530]
[163.82888794 -335.37341309]
[162.56427002 -350.35162354]
[163.65846252 -365.34326172]
[167.08451843 -379.97915649]
[172.75804138 -393.89883423]
[180.53935242 -406.75952148]
[190.23681641 -418.24453735]
[201.61161804 -428.07107544]
[214.38365173 -435.99707031]
[228.23838806 -441.82742310]
[242.83464050 -445.41848755]
[257.81298828 -446.68185425]
[272.80453491 -445.58642578]
[287.44012451 -442.15917969]
[301.35931396 -436.48449707]
[314.21939087 -428.70211792]
[325.70361328 -419.00372314]
[335.52917480 -407.62811279]
[343.45413208 -394.85540771]
[349.28332520 -381.00021362]
[352.87319946 -366.40365601]
[354.13534546 -351.42520142]
[353.03866577 -336.43374634]
[349.61022949 -321.79846191]
[343.93438721 -307.87969971]
[336.15093994 -295.02029419]
[326.45159912 -283.53686523]
[315.07516479 -273.71221924]
[302.30181885 -265.78833008]
[288.44613647 -259.96026611]
[273.84927368 -256.37161255]
[258.87075806 -255.11070251]
[243.87937927 -256.20861816]
[229.24435425 -259.63827515]
[223.58157349 -245.74824524]
[217.91879272 -231.85823059]
[220.27874756 -217.15176392]
[207.90417480 -207.29376221]
[202.24137878 -193.40373230]
[204.60134888 -178.69728088]
[192.22676086 -168.83927917]
[186.98004150 -154.78680420]
[182.15405273 -140.58435059]
[177.32804871 -126.38188934]
[172.50205994 -112.17943573]
[167.67605591 -97.97698212]
[162.85005188 -83.77452850]
[158.02406311 -69.57206726]
[170.58143616 -56.50750732]
[174.78822327 -38.79406738]
[169.39567566 -21.31579018]
[155.81416321 -8.93703747]
[137.74551392 -5.14875507]
[133.55850220 9.25502682]
[129.37149048 23.65880966]
[125.18447876 38.06259155]
[120.99746704 52.46637344]
[126.09324646 69.25922394]
[112.69517517 81.89145660]
[108.72308350 96.35597992]
[110.21811676 101.38378906]
[108.78973389 106.89133453]
[104.41139221 111.18865967]
[100.01039886 125.52851105]
[95.60939789 139.86836243]
[91.52973175 154.30291748]
[87.77342987 168.82496643]
[84.01712799 183.34703064]
[80.26082611 197.86909485]
[91.83294678 207.76087952]
[97.93781281 221.63955688]
[97.41360474 236.73078918]
[90.41781616 250.04318237]
[78.38544464 258.96121216]
[63.73493195 261.75909424]
[59.97863007 276.28115845]
[56.22233200 290.80322266]
[52.46603012 305.32525635]
[56.50095749 320.62329102]
[45.82302475 331.00747681]
[42.06672668 345.52954102]
[38.31042480 360.05160522]
[37.64064026 375.03662109]
[40.08636856 389.83590698]
[42.53209305 404.63516235]
[54.54327011 418.59271240]
[47.72809982 434.76431274]
[50.39389420 449.52554321]
[53.05968857 464.28674316]
[55.72548294 479.04797363]
[70.75569153 480.46060181]
[84.84699249 485.87704468]
[96.95372772 494.89532471]
[106.17749786 506.84625244]
[111.83383179 520.84295654]
[113.50299835 535.84686279]
[111.06113434 550.74450684]
[104.68943024 564.43041992]
[94.86072540 575.88897705]
[82.30436707 584.26995850]
[67.95211792 588.95135498]
[52.86901093 589.58581543]
[38.17431641 586.12622070]
[24.95847893 578.82940674]
[14.20219707 568.23669434]
[6.70366144 555.13421631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[11 189]
[12 188]
[13 187]
[42 186]
[43 185]
[44 184]
[46 182]
[47 181]
[48 180]
[49 179]
[55 173]
[56 172]
[57 171]
[58 170]
[62 169]
[63 168]
[64 167]
[65 164]
[66 163]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[92 145]
[94 143]
[95 142]
[97 140]
[98 139]
[99 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
