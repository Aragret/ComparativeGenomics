%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[261.94958496 399.20477295]
[269.82168579 386.41622925]
[279.12524414 374.62808228]
[289.73443604 363.99975586]
[280.41955566 352.24252319]
[271.10467529 340.48526001]
[261.78979492 328.72799683]
[252.47491455 316.97076416]
[243.16003418 305.21350098]
[228.82223511 309.37966919]
[213.94140625 307.73458862]
[200.78855896 300.49804688]
[191.38301086 288.74545288]
[187.18232727 274.24829102]
[188.85653687 259.20700073]
[196.18145752 245.91711426]
[186.86657715 234.15986633]
[177.55169678 222.40261841]
[170.93406677 219.11190796]
[168.18721008 210.40026855]
[159.04841614 198.50563049]
[149.90960693 186.61100769]
[140.77081299 174.71636963]
[136.26345825 189.02314758]
[122.32336426 194.56152344]
[109.22663116 187.24880981]
[106.62769318 172.47567749]
[116.44238281 161.13232422]
[131.43421936 161.57989502]
[117.98309326 155.18328857]
[116.88159943 139.40046692]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.57700348 68.82833862]
[65.01805115 82.76024628]
[50.70463562 87.24646759]
[38.18807602 78.97992706]
[36.69511032 64.05441284]
[47.32629776 53.47245407]
[62.24331665 55.03382111]
[54.97008514 41.91512680]
[47.69685745 28.79643250]
[34.23851776 20.47875977]
[34.83417892 5.59607029]
[27.56094742 -7.52262402]
[20.28771782 -20.64131737]
[8.12667942 -24.93921471]
[2.33886456 -36.01554108]
[5.54363966 -47.67984390]
[-1.53346562 -60.90537262]
[-8.61057091 -74.13089752]
[-15.68767643 -87.35643005]
[-31.55082893 -96.70746613]
[-30.30095482 -114.21188354]
[-37.57418442 -127.33057404]
[-44.47218704 -133.31851196]
[-44.85638428 -140.69917297]
[-51.93349075 -153.92469788]
[-59.01059341 -167.15023804]
[-66.08769989 -180.37576294]
[-73.16480255 -193.60128784]
[-87.17738342 -188.19506836]
[-101.74813080 -184.55184937]
[-116.65615082 -182.72686768]
[-131.67544556 -182.74778748]
[-146.57832336 -184.61430359]
[-161.13887024 -188.29808044]
[-175.13632202 -193.74331665]
[-188.35852051 -200.86744690]
[-200.60499573 -209.56246948]
[-211.69010925 -219.69656372]
[-221.44580078 -231.11611938]
[-229.72418213 -243.64799500]
[-236.39976501 -257.10223389]
[-241.37132263 -271.27484131]
[-244.56350708 -285.95098877]
[-245.92791748 -300.90820312]
[-245.44389343 -315.91970825]
[-243.11872864 -330.75796509]
[-238.98771667 -345.19796753]
[-233.11344910 -359.02087402]
[-225.58500671 -372.01712036]
[-216.51649475 -383.98965454]
[-206.04539490 -394.75698853]
[-194.33045959 -404.15591431]
[-181.54927063 -412.04394531]
[-167.89558411 -418.30148315]
[-153.57641602 -422.83364868]
[-138.80879211 -425.57177734]
[-123.81663513 -426.47433472]
[-108.82719421 -425.52764893]
[-94.06771088 -422.74606323]
[-79.76193237 -418.17172241]
[-66.12673950 -411.87402344]
[-53.36882782 -403.94839478]
[-41.68161392 -394.51504517]
[-31.24226570 -383.71688843]
[-22.20904541 -371.71771240]
[-14.71889114 -358.69937134]
[-8.88535404 -344.85922241]
[-4.79686832 -330.40710449]
[-2.51541400 -315.56207275]
[-2.07557774 -300.54922485]
[-3.48402715 -285.59609985]
[-6.71941042 -270.92941284]
[-11.73268032 -256.77148438]
[-18.44783783 -243.33695984]
[-26.76308060 -230.82951355]
[-36.55235291 -219.43873596]
[-47.66725159 -209.33731079]
[-59.93927765 -200.67839050]
[-52.86217117 -187.45286560]
[-45.78506851 -174.22734070]
[-38.70796204 -161.00181580]
[-31.63085556 -147.77627563]
[-24.45549011 -134.60380554]
[-17.18226051 -121.48511505]
[-5.64434528 -117.85150909]
[0.52246672 -106.98163605]
[-2.46214890 -94.43353271]
[4.61495638 -81.20800781]
[11.69206238 -67.98247528]
[18.76916695 -54.75695038]
[34.15344620 -46.31355286]
[33.40641403 -27.91454697]
[40.67964172 -14.79585361]
[47.95287323 -1.67715943]
[60.89097977 5.70217562]
[60.81555176 21.52320290]
[68.08878326 34.64189529]
[75.36200714 47.76058960]
[83.11840057 60.59952927]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.42300415 131.17166138]
[143.46270752 138.46531677]
[143.97561646 153.35107422]
[152.66543579 165.57756042]
[161.80424500 177.47219849]
[170.94303894 189.36683655]
[180.08184814 201.26145935]
[189.30894470 213.08773804]
[198.62382507 224.84498596]
[207.93870544 236.60223389]
[222.55174255 232.51141357]
[237.57720947 234.32209778]
[250.72917175 241.72744751]
[260.01876831 253.57189941]
[264.05493164 268.03131104]
[262.25256348 282.89389038]
[254.91728210 295.89862061]
[264.23217773 307.65588379]
[273.54705811 319.41311646]
[282.86193848 331.17037964]
[292.17681885 342.92761230]
[301.49169922 354.68487549]
[314.26498413 346.78805542]
[327.86865234 340.42752075]
[342.11877441 335.68933105]
[356.82263184 332.63757324]
[371.78137207 331.31347656]
[386.79263306 331.73498535]
[401.65350342 333.89639282]
[416.16293335 337.76843262]
[430.12472534 343.29879761]
[443.35006714 350.41265869]
[455.66009521 359.01382446]
[466.88830566 368.98593140]
[476.88290405 380.19418335]
[485.50869751 392.48696899]
[492.64898682 405.69802856]
[498.20727539 419.64874268]
[502.10839844 434.15039062]
[504.29953003 449.00689697]
[504.75106812 464.01730347]
[503.45693970 478.97863770]
[500.43460083 493.68856812]
[495.72494507 507.94815063]
[489.39169312 521.56457520]
[481.52044678 534.35357666]
[472.21765137 546.14239502]
[461.60916138 556.77142334]
[449.83843994 566.09698486]
[437.06463623 573.99298096]
[423.46051025 580.35253906]
[409.21008301 585.08978271]
[394.50601196 588.14056396]
[379.54721069 589.46368408]
[364.53594971 589.04113770]
[349.67523193 586.87878418]
[335.16607666 583.00573730]
[321.20465088 577.47448730]
[307.97976685 570.35974121]
[295.67031860 561.75775146]
[284.44277954 551.78485107]
[274.44891357 540.57598877]
[265.82397461 528.28259277]
[258.68453979 515.07104492]
[253.12716675 501.11999512]
[249.22705078 486.61807251]
[247.03689575 471.76144409]
[246.58634949 456.75097656]
[247.88148499 441.78973389]
[250.90480042 427.08001709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[9 157]
[16 150]
[17 149]
[18 148]
[20 147]
[21 146]
[22 145]
[23 144]
[29 143]
[31 141]
[32 140]
[33 139]
[35 137]
[36 136]
[37 135]
[43 134]
[44 133]
[45 132]
[47 130]
[48 129]
[49 128]
[52 126]
[53 125]
[54 124]
[55 123]
[57 120]
[58 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
