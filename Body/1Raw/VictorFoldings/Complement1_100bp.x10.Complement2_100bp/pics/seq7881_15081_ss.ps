%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[112.70733643 603.01861572]
[110.11440277 587.81066895]
[116.17613220 573.62408447]
[128.95822144 564.98571777]
[128.51162720 549.99237061]
[128.06501770 534.99902344]
[127.61840820 520.00567627]
[127.17180634 505.01232910]
[123.83054352 498.42007446]
[126.83184052 489.79278564]
[126.60851288 474.79446411]
[125.93872833 459.80941772]
[124.82308197 444.85098267]
[123.70742798 429.89251709]
[122.59178162 414.93405151]
[108.19128418 410.94519043]
[96.00155640 402.25384521]
[87.50501251 389.89328003]
[83.74304962 375.34445190]
[85.18838501 360.35839844]
[91.68579865 346.74578857]
[102.46851349 336.15780640]
[116.24864197 329.88616943]
[115.13299561 314.92770386]
[114.01734161 299.96926880]
[112.90169525 285.01080322]
[111.67472076 270.06106567]
[110.33648682 255.12089539]
[108.99825287 240.18070984]
[107.43772888 225.26210022]
[105.65526581 210.36837769]
[96.46038818 198.65072632]
[102.50297546 184.02890015]
[100.72051239 169.13517761]
[98.93804932 154.24147034]
[97.15557861 139.34774780]
[87.96070862 127.63008881]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[85.75559235 44.09304810]
[83.97312164 29.19933319]
[71.83280182 19.43970299]
[70.23729706 4.30996370]
[79.61642456 -7.20383120]
[77.83396149 -22.09754944]
[73.70696259 -30.24651718]
[76.13753510 -37.22606659]
[74.57701111 -52.14466858]
[73.01648712 -67.06327820]
[67.78999329 -53.00326920]
[59.95536804 -40.21191788]
[49.80552673 -29.16742897]
[37.71992493 -20.28271484]
[24.15038681 -13.88993168]
[9.60422325 -10.22808266]
[-5.37474680 -9.43406582]
[-20.22652435 -11.53756809]
[-34.39586258 -16.45994759]
[-47.35303497 -24.01717567]
[-58.61362457 -33.92672348]
[-67.75664520 -45.81811523]
[-74.44028473 -59.24677658]
[-78.41465759 -73.71067047]
[-79.53119659 -88.66905975]
[-77.74814606 -103.56270599]
[-73.13216400 -117.83480835]
[-65.85583496 -130.95178223]
[-56.19118118 -142.42324829]
[-44.49952698 -151.82032776]
[-31.21796989 -158.79171753]
[-16.84305382 -163.07678223]
[-1.91219175 -164.51530457]
[13.01641273 -163.05354309]
[27.38464165 -158.74610901]
[40.65533066 -151.75405884]
[52.33234406 -142.33877563]
[61.97912979 -130.85227966]
[69.23503113 -117.72399902]
[73.82878876 -103.44474030]
[75.58853149 -88.55442810]
[80.62544250 -102.68346405]
[77.97142792 -118.28047180]
[89.53321075 -127.67060089]
[94.57012939 -141.79962158]
[99.60704803 -155.92864990]
[104.11466980 -170.23533630]
[107.97898102 -184.72903442]
[111.73527527 -199.25109863]
[107.70034790 -214.54913330]
[118.37828064 -224.93330383]
[122.13458252 -239.45536804]
[125.89088440 -253.97741699]
[129.64718628 -268.49948120]
[132.31297302 -283.26071167]
[133.87350464 -298.17929077]
[135.43402100 -313.09790039]
[121.52536011 -319.01739502]
[109.98049164 -328.77484131]
[101.82598114 -341.50256348]
[97.78692627 -356.06887817]
[98.22248077 -371.17852783]
[103.09390259 -385.48800659]
[111.96804047 -397.72488403]
[124.05580139 -406.80108643]
[138.28236389 -411.90954590]
[153.38269043 -412.59603882]
[168.01409912 -408.79953003]
[180.87554932 -400.85757446]
[190.82342529 -389.47640991]
[196.97315979 -375.66799927]
[198.77792358 -360.66018677]
[196.07723999 -345.78747559]
[189.11125183 -332.37231445]
[178.49937439 -321.60757446]
[165.18521118 -314.45046997]
[150.35263062 -311.53738403]
[148.79211426 -296.61877441]
[147.23158264 -281.70016479]
[157.29293823 -292.82534790]
[171.53825378 -297.52328491]
[186.24385071 -294.56600952]
[197.56571960 -284.72653198]
[202.54434204 -270.57687378]
[199.87832642 -255.81568909]
[190.26455688 -244.30154419]
[176.21604919 -239.04420471]
[161.40505981 -241.41792297]
[149.70314026 -250.80223083]
[144.16925049 -264.74319458]
[140.41294861 -250.22111511]
[136.65664673 -235.69906616]
[132.90034485 -221.17700195]
[137.20394897 -206.91767883]
[126.25733948 -195.49479675]
[122.50103760 -180.97273254]
[123.86936188 -173.70985413]
[118.57919312 -166.26324463]
[132.70812988 -171.30044556]
[145.53544617 -163.52485657]
[147.60534668 -148.66835022]
[137.39195251 -137.68260193]
[122.42421722 -138.66589355]
[113.73607635 -150.89173889]
[108.69915771 -136.76271057]
[103.66223907 -122.63368225]
[106.67652893 -108.04727173]
[94.75447083 -97.64654541]
[89.71755981 -83.51751709]
[87.93508911 -68.62379456]
[89.49561310 -53.70519257]
[91.05613708 -38.78659058]
[92.72767639 -23.88001442]
[94.51014709 -8.98629761]
[106.34140015 -0.01094109]
[108.36123657 15.06801414]
[98.86683655 27.41686630]
[100.64930725 42.31058502]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[118.21938324 124.00875854]
[112.04930115 137.56527710]
[113.83176422 152.45899963]
[115.61422729 167.35272217]
[117.39669800 182.24642944]
[126.71906281 195.02938843]
[120.54898071 208.58592224]
[122.33144379 223.47962952]
[125.98191071 228.99195862]
[126.25896454 234.66824341]
[123.93843842 238.84246826]
[125.27667236 253.78265381]
[126.61490631 268.72283936]
[130.49745178 276.99105835]
[127.86014557 283.89517212]
[128.97579956 298.85360718]
[130.09144592 313.81207275]
[131.20709229 328.77050781]
[145.76510620 332.92861938]
[157.99914551 341.79992676]
[166.44400024 354.29809570]
[170.09638977 368.90393066]
[168.53424072 383.84988403]
[161.96527100 397.33407593]
[151.19969177 407.73748779]
[137.55023193 413.81842041]
[138.66587830 428.77685547]
[139.78152466 443.73532104]
[140.89718628 458.69378662]
[143.46812439 462.19293213]
[144.67089844 465.95031738]
[144.59231567 469.50408936]
[143.46026611 472.46804810]
[141.60685730 474.57113647]
[141.83018494 489.56945801]
[142.16516113 504.56573486]
[142.61175537 519.55908203]
[143.05836487 534.55242920]
[143.50497437 549.54577637]
[143.95158386 564.53912354]
[157.22517395 572.40136719]
[164.12055969 586.20202637]
[162.43740845 601.53729248]
[152.71284485 613.51379395]
[138.04991150 618.30981445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[10 200]
[11 199]
[12 194]
[13 193]
[14 192]
[15 191]
[23 183]
[24 182]
[25 181]
[26 180]
[27 178]
[28 177]
[29 176]
[30 173]
[31 172]
[33 170]
[34 169]
[35 168]
[36 167]
[38 165]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[47 156]
[48 155]
[50 154]
[51 153]
[52 152]
[83 151]
[84 150]
[86 148]
[87 147]
[88 146]
[89 140]
[90 138]
[91 137]
[93 135]
[94 134]
[95 133]
[96 132]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
