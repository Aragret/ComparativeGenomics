%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[117.06891632 842.89898682]
[102.21978760 840.75793457]
[87.48538208 837.93341064]
[72.89714813 834.43145752]
[58.48620987 830.25946045]
[44.28332520 825.42633057]
[30.31880951 819.94250488]
[16.62245750 813.81951904]
[3.22349811 807.07055664]
[-9.84947300 799.71002197]
[-22.56855774 791.75354004]
[-34.90661240 783.21813965]
[-46.83730698 774.12200928]
[-58.33518219 764.48461914]
[-69.37569427 754.32647705]
[-79.93529510 743.66931152]
[-89.99143982 732.53582764]
[-99.52266693 720.94976807]
[-108.50864410 708.93591309]
[-116.93019104 696.51989746]
[-124.76933289 683.72814941]
[-132.00935364 670.58801270]
[-138.63478088 657.12756348]
[-144.63148499 643.37542725]
[-149.98666382 629.36108398]
[-154.68891907 615.11431885]
[-158.72816467 600.66564941]
[-162.09582520 586.04577637]
[-164.78469849 571.28601074]
[-166.78903198 556.41784668]
[-168.10458374 541.47296143]
[-168.72850037 526.48321533]
[-168.65948486 511.48071289]
[-167.89767456 496.49737549]
[-166.44468689 481.56521606]
[-164.30363464 466.71609497]
[-161.47908020 451.98168945]
[-157.97705078 437.39346313]
[-153.80503845 422.98254395]
[-148.97190857 408.77966309]
[-143.48800659 394.81515503]
[-137.36503601 381.11880493]
[-130.61604309 367.71987915]
[-123.25543976 354.64691162]
[-115.29893494 341.92785645]
[-106.76351166 329.58981323]
[-97.66738129 317.65914917]
[-88.02995300 306.16128540]
[-77.87180328 295.12078857]
[-67.21459961 284.56121826]
[-56.08108902 274.50509644]
[-44.49503326 264.97387695]
[-32.48115540 255.98793030]
[-20.06509018 247.56640625]
[-7.27334070 239.72729492]
[5.86679792 232.48730469]
[19.32728386 225.86190796]
[33.07939148 219.86523438]
[47.09377289 214.51007080]
[61.34051895 209.80786133]
[75.78923035 205.76863098]
[90.40907288 202.40100098]
[105.16883850 199.71215820]
[103.16482544 184.84663391]
[101.16081238 169.98110962]
[99.15679932 155.11558533]
[95.14785004 148.90670776]
[97.23531342 140.01399231]
[95.45285034 125.12027740]
[93.67038727 110.22656250]
[91.66637421 95.36103058]
[89.44125366 80.52698517]
[87.10576630 65.70992279]
[84.66004181 50.91064835]
[82.21430969 36.11137772]
[79.76858521 21.31210899]
[69.88472748 8.95816422]
[75.44332123 -4.86034679]
[72.99759674 -19.65961838]
[70.55187225 -34.45888901]
[68.10614014 -49.25815964]
[53.07303238 -49.21544266]
[38.22777176 -51.58489990]
[23.95487976 -56.30514526]
[10.62406254 -63.25392532]
[-1.41937923 -72.25123596]
[-11.86349201 -83.06404114]
[-20.43774796 -95.41225433]
[-26.92005348 -108.97602081]
[-31.14249992 -123.40402222]
[-32.99571991 -138.32252502]
[-32.43170547 -153.34510803]
[-29.46506691 -168.08265686]
[-24.17265129 -182.15342712]
[-16.69153976 -195.19294739]
[-7.21551514 -206.86346436]
[4.00997305 -216.86270142]
[16.69415665 -224.93162537]
[30.50848579 -230.86125183]
[45.09513474 -234.49798584]
[60.07627487 -235.74763489]
[75.06385803 -234.57780457]
[89.66967010 -231.01881409]
[103.51538849 -225.16285706]
[116.24237061 -217.16160583]
[127.52096558 -207.22230530]
[137.05902100 -195.60241699]
[144.60948181 -182.60293579]
[149.97676086 -168.56056213]
[153.02186584 -153.83901978]
[153.66587830 -138.81965637]
[151.89215088 -123.89148712]
[147.74661255 -109.44120789]
[141.33665466 -95.84310150]
[132.82829285 -83.44939423]
[122.44191742 -72.58111572]
[110.44657135 -63.51977921]
[97.15296173 -56.50009155]
[82.90541077 -51.70388794]
[85.35114288 -36.90461731]
[87.79686737 -22.10534477]
[90.24259186 -7.30607414]
[99.95151520 3.98932672]
[94.56785583 18.86638069]
[97.01358032 33.66565323]
[99.45931244 48.46492386]
[101.90503693 63.26419449]
[106.09706879 69.35095215]
[104.27529907 78.30187225]
[106.50041199 93.13591766]
[109.90326691 97.12772369]
[110.82735443 102.74193573]
[108.56410217 108.44409180]
[110.34656525 123.33781433]
[112.12903595 138.23153687]
[114.02232361 153.11157227]
[116.02633667 167.97709656]
[118.03034973 182.84262085]
[120.03437042 197.70814514]
[134.97926331 196.39251709]
[149.96896362 195.76849365]
[164.97149658 195.83741760]
[179.95481873 196.59915161]
[194.88699341 198.05203247]
[209.73612976 200.19299316]
[224.47055054 203.01745605]
[239.05880737 206.51939392]
[253.46975708 210.69132996]
[267.67266846 215.52435303]
[281.63720703 221.00817871]
[295.33358765 227.13107300]
[308.73257446 233.87997437]
[321.80557251 241.24049377]
[334.52468872 249.19692993]
[346.86276245 257.73226929]
[358.79351807 266.82833862]
[370.29141235 276.46566772]
[381.33197021 286.62377930]
[391.89163208 297.28091431]
[401.94781494 308.41433716]
[411.47909546 320.00033569]
[420.46511841 332.01416016]
[428.88671875 344.43017578]
[436.72589111 357.22189331]
[443.96597290 370.36196899]
[450.59146118 383.82241821]
[456.58822632 397.57449341]
[461.94348145 411.58883667]
[466.64575195 425.83557129]
[470.68508911 440.28424072]
[474.05279541 454.90405273]
[476.74172974 469.66381836]
[478.74612427 484.53201294]
[480.06173706 499.47689819]
[480.68572998 514.46661377]
[480.61676025 529.46911621]
[479.85501099 544.45245361]
[478.40209961 559.38464355]
[476.26110840 574.23376465]
[473.43661499 588.96820068]
[469.93466187 603.55639648]
[465.76269531 617.96734619]
[460.92962646 632.17022705]
[455.44577026 646.13476562]
[449.32284546 659.83117676]
[442.57391357 673.23010254]
[435.21337891 686.30310059]
[427.25692749 699.02221680]
[418.72155762 711.36029053]
[409.62545776 723.29101562]
[399.98809814 734.78887939]
[389.82998657 745.82940674]
[379.17282104 756.38903809]
[368.03936768 766.44519043]
[356.45333862 775.97644043]
[344.43948364 784.96246338]
[332.02346802 793.38403320]
[319.23175049 801.22320557]
[306.09164429 808.46325684]
[292.63119507 815.08868408]
[278.87908936 821.08544922]
[264.86474609 826.44067383]
[250.61801147 831.14294434]
[236.16931152 835.18218994]
[221.54949951 838.54992676]
[206.78973389 841.23883057]
[191.92153931 843.24316406]
[176.97665405 844.55871582]
[161.98693848 845.18267822]
[146.98442078 845.11370850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 139]
[64 138]
[65 137]
[66 136]
[68 135]
[69 134]
[70 133]
[71 130]
[72 129]
[73 127]
[74 126]
[75 125]
[76 124]
[78 122]
[79 121]
[80 120]
[81 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
