%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[42.13945770 926.27331543]
[27.13742447 926.43823242]
[12.14493847 925.87823486]
[-2.80298185 924.59448242]
[-17.67142487 922.59008789]
[-32.42566681 919.86968994]
[-47.03124619 916.43963623]
[-61.45404816 912.30792236]
[-75.66039276 907.48419189]
[-89.61709595 901.97979736]
[-103.29157257 895.80749512]
[-116.65186310 888.98175049]
[-129.66677856 881.51849365]
[-142.30592346 873.43518066]
[-154.53977966 864.75067139]
[-166.33976746 855.48516846]
[-177.67832947 845.66046143]
[-188.52897644 835.29937744]
[-198.86637878 824.42620850]
[-208.66639709 813.06628418]
[-217.90612793 801.24615479]
[-226.56399536 788.99340820]
[-234.61976624 776.33666992]
[-242.05465698 763.30554199]
[-248.85128784 749.93041992]
[-254.99377441 736.24249268]
[-260.46777344 722.27386475]
[-265.26052856 708.05706787]
[-269.36080933 693.62530518]
[-272.75903320 679.01226807]
[-275.44732666 664.25213623]
[-277.41934204 649.37933350]
[-278.67050171 634.42864990]
[-279.19787598 619.43499756]
[-279.00024414 604.43334961]
[-278.07806396 589.45880127]
[-276.43347168 574.54626465]
[-274.07034302 559.73059082]
[-270.99417114 545.04638672]
[-267.21215820 530.52801514]
[-262.73312378 516.20922852]
[-257.56750488 502.12362671]
[-251.72741699 488.30401611]
[-245.22647095 474.78268433]
[-238.07986450 461.59124756]
[-230.30427551 448.76049805]
[-221.91786194 436.32037354]
[-212.94021606 424.29995728]
[-203.39231873 412.72732544]
[-193.29644775 401.62951660]
[-182.67619324 391.03240967]
[-171.55635071 380.96078491]
[-159.96290588 371.43817139]
[-147.92294312 362.48678589]
[-135.46455383 354.12756348]
[-122.61684418 346.38000488]
[-109.40983582 339.26217651]
[-95.87435913 332.79077148]
[-82.04203796 326.98086548]
[-67.94516754 321.84600830]
[-53.61668015 317.39825439]
[-39.09003830 313.64791870]
[-24.39916992 310.60382080]
[-9.57838440 308.27301025]
[5.33770180 306.66101074]
[20.31425285 305.77151489]
[35.31628799 305.60662842]
[50.30876923 306.16671753]
[65.25668335 307.45053101]
[67.26069641 292.58499146]
[69.15399170 277.70495605]
[70.93645477 262.81124878]
[72.71892548 247.91752625]
[74.50138855 233.02380371]
[76.28385162 218.13008118]
[78.06632233 203.23637390]
[79.84878540 188.34265137]
[81.63124847 173.44892883]
[79.43603516 169.20745850]
[79.88197327 163.54194641]
[83.69493866 158.14074707]
[85.92005920 143.30671692]
[88.14517212 128.47267151]
[75.43192291 118.64508820]
[69.38759613 103.75636292]
[71.65290070 87.84798431]
[81.61293030 75.23822784]
[96.56407166 69.34997559]
[90.73984528 54.63980865]
[100.10816193 43.06034470]
[102.11217499 28.19481468]
[104.11618805 13.32928753]
[105.67671204 -1.58931744]
[106.79235840 -16.54777145]
[107.90800476 -31.50622368]
[109.02365875 -46.46467590]
[110.13930511 -61.42313004]
[111.25495148 -76.38158417]
[97.17620850 -81.88433838]
[85.34593964 -91.29370880]
[76.81609344 -103.77301788]
[72.34513855 -118.21261597]
[72.33062744 -133.32853699]
[76.77384186 -147.77670288]
[85.27970886 -160.27236938]
[97.09188080 -169.70443726]
[111.16003418 -175.23422241]
[126.23323822 -176.37001038]
[140.97119141 -173.01080322]
[154.06340027 -165.45532227]
[164.34571838 -154.37536621]
[170.90385437 -140.75617981]
[173.15466309 -125.80876923]
[170.89799500 -110.86222839]
[164.33451843 -97.24562073]
[154.04785156 -86.16970062]
[140.95266724 -78.61935425]
[126.21340942 -75.26593781]
[125.09775543 -60.30748367]
[123.98210907 -45.34902954]
[122.86646271 -30.39057541]
[121.75080872 -15.43212223]
[120.63516235 -0.47366872]
[122.36012268 1.73600423]
[123.31373596 4.76209641]
[123.18065643 8.31423569]
[121.75637817 11.99336052]
[118.98171234 15.33330059]
[116.97769928 30.19882965]
[114.97368622 45.06435776]
[120.94124603 58.71124268]
[111.42959595 71.35398865]
[122.63064575 79.04567719]
[129.43927002 90.80442047]
[130.53399658 104.34795380]
[125.70233154 117.04757690]
[115.88205719 126.43841553]
[102.97921753 130.69778442]
[100.75409698 145.53182983]
[98.52898407 160.36587524]
[96.52497101 175.23139954]
[94.74250031 190.12512207]
[92.96003723 205.01882935]
[91.17757416 219.91255188]
[89.39510345 234.80627441]
[87.61264038 249.69998169]
[85.83017731 264.59368896]
[84.04770660 279.48742676]
[86.13517761 288.38012695]
[82.12622833 294.58898926]
[80.12221527 309.45452881]
[94.87646484 312.17486572]
[109.48206329 315.60485840]
[123.90488434 319.73651123]
[138.11125183 324.56011963]
[152.06797791 330.06448364]
[165.74247742 336.23669434]
[179.10281372 343.06237793]
[192.11776733 350.52557373]
[204.75695801 358.60885620]
[216.99084473 367.29330444]
[228.79087830 376.55871582]
[240.12948608 386.38339233]
[250.98017883 396.74438477]
[261.31762695 407.61755371]
[271.11770630 418.97741699]
[280.35748291 430.79751587]
[289.01541138 443.05023193]
[297.07125854 455.70690918]
[304.50619507 468.73800659]
[311.30288696 482.11312866]
[317.44543457 495.80096436]
[322.91952515 509.76959229]
[327.71231079 523.98638916]
[331.81268311 538.41815186]
[335.21099854 553.03112793]
[337.89932251 567.79125977]
[339.87142944 582.66400146]
[341.12265015 597.61468506]
[341.65008545 612.60839844]
[341.45254517 627.60998535]
[340.53042603 642.58459473]
[338.88592529 657.49713135]
[336.52285767 672.31280518]
[333.44674683 686.99700928]
[329.66479492 701.51544189]
[325.18582153 715.83422852]
[320.02029419 729.91986084]
[314.18026733 743.73950195]
[307.67938232 757.26086426]
[300.53283691 770.45233154]
[292.75729370 783.28314209]
[284.37094116 795.72326660]
[275.39337158 807.74371338]
[265.84552002 819.31640625]
[255.74969482 830.41424561]
[245.12950134 841.01141357]
[234.00970459 851.08306885]
[222.41630554 860.60577393]
[210.37637329 869.55718994]
[197.91802979 877.91650391]
[185.07035828 885.66412354]
[171.86338806 892.78198242]
[158.32794189 899.25347900]
[144.49565125 905.06347656]
[130.39880371 910.19836426]
[116.07033539 914.64617920]
[101.54371643 918.39660645]
[86.85285950 921.44079590]
[72.03208160 923.77160645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 151]
[70 150]
[71 148]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[81 140]
[82 139]
[83 138]
[88 132]
[90 130]
[91 129]
[92 128]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
