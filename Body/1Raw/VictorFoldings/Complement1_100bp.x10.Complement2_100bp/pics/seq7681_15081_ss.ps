%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[79.43373871 578.56536865]
[78.93802643 593.65368652]
[74.38882446 608.04833984]
[66.12371063 620.68127441]
[54.75601196 630.61492920]
[41.12928772 637.11224365]
[26.25473213 639.69104004]
[11.23613358 638.15991211]
[-2.81202769 632.63256836]
[-14.84728336 623.51910400]
[-23.97653961 611.49584961]
[-29.52234268 597.45495605]
[-31.07315826 582.43835449]
[-28.51390457 567.56042480]
[-22.03449631 553.92517090]
[-12.11574936 542.54443359]
[0.50630051 534.26275635]
[14.89501381 529.69464111]
[29.98265076 529.17913818]
[33.52232361 514.60278320]
[37.06199646 500.02639771]
[40.60166931 485.45001221]
[34.57802963 474.95989990]
[37.40769577 462.78713989]
[48.10497284 455.58081055]
[51.86127472 441.05874634]
[55.61757278 426.53668213]
[59.37387466 412.01461792]
[61.81960297 397.21536255]
[62.93524933 382.25689697]
[64.05089569 367.29846191]
[62.32593918 365.08877563]
[61.37232590 362.06268311]
[61.50540543 358.51055908]
[62.92968369 354.83142090]
[65.70434570 351.49148560]
[67.70835876 336.62594604]
[69.71237183 321.76043701]
[67.49068451 314.71160889]
[71.85848236 306.68911743]
[74.08360291 291.85507202]
[76.30871582 277.02102661]
[78.53383636 262.18698120]
[80.75894928 247.35295105]
[82.98406982 232.51890564]
[84.65560913 217.61233521]
[85.77125549 202.65386963]
[86.88690948 187.69541931]
[74.02729797 177.49209595]
[69.74043274 161.47383118]
[75.90712738 145.90228271]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.40186310 92.04403687]
[92.17853546 77.04570007]
[91.95520782 62.04735947]
[91.73188019 47.04902267]
[83.78997803 33.36557770]
[91.33692932 20.52452087]
[91.11360168 5.52618265]
[90.89027405 -9.47215462]
[90.66694641 -24.47049141]
[90.44361877 -39.46883011]
[79.24618530 -29.48797226]
[64.26359558 -30.21051598]
[54.07855988 -41.22255707]
[54.52552795 -56.21589279]
[65.34844971 -66.60166931]
[80.34747314 -66.43043518]
[90.93010712 -55.80115509]
[92.04575348 -70.75961304]
[93.16140747 -85.71806335]
[86.47194672 -100.05548859]
[95.13442230 -112.17203522]
[96.25007629 -127.13048553]
[97.36572266 -142.08894348]
[87.80220032 -159.83439636]
[99.37261200 -175.32675171]
[100.04239655 -190.31178284]
[100.71218109 -205.29682922]
[101.38196564 -220.28186035]
[102.05175018 -235.26690674]
[102.27507782 -250.26524353]
[102.05175018 -265.26358032]
[101.82842255 -280.26190186]
[99.47030640 -283.90789795]
[98.49331665 -287.73019409]
[98.78328705 -291.27297974]
[100.08973694 -294.16433716]
[102.06504822 -296.15335083]
[102.73483276 -311.13839722]
[103.40461731 -326.12344360]
[104.07440186 -341.10848999]
[95.96224976 -351.13623047]
[96.82861328 -363.60351562]
[105.66494751 -371.86462402]
[106.55776215 -386.83801270]
[92.46732330 -392.34390259]
[80.76921844 -401.93606567]
[72.60949707 -414.67474365]
[68.78758240 -429.31195068]
[69.67789459 -444.41369629]
[75.19321442 -458.50045776]
[84.79320526 -470.19213867]
[97.53736115 -478.34329224]
[112.17713928 -482.15542603]
[127.27827454 -481.25497437]
[141.36132812 -475.73022461]
[153.04656982 -466.12240601]
[161.18920898 -453.37277222]
[164.99150085 -438.73046875]
[164.08094788 -423.62991333]
[158.54675293 -409.55059814]
[148.93110657 -397.87179565]
[136.17604065 -389.73770142]
[121.53116608 -385.94519043]
[120.63835144 -370.97180176]
[129.32691956 -355.72463989]
[119.05944061 -340.43869019]
[118.38965607 -325.45364380]
[117.71987152 -310.46862793]
[117.05008698 -295.48358154]
[116.82675934 -280.48522949]
[117.05008698 -265.48690796]
[117.27341461 -250.48857117]
[119.18863678 -248.44158936]
[120.40841675 -245.51264954]
[120.59277344 -241.96279907]
[119.50241852 -238.17127991]
[117.03678894 -234.59712219]
[116.36700439 -219.61207581]
[115.69721985 -204.62702942]
[115.02743530 -189.64199829]
[114.35765076 -174.65695190]
[121.90354919 -167.76693726]
[124.46513367 -157.64831543]
[120.96254730 -147.58291626]
[112.32417297 -140.97329712]
[111.20852661 -126.01483917]
[110.09288025 -111.05638123]
[116.86213684 -97.78888702]
[108.11985779 -84.60241699]
[107.00421143 -69.64395905]
[105.88855743 -54.68550873]
[105.44195557 -39.69215775]
[105.66528320 -24.69381905]
[105.88861084 -9.69548225]
[106.11193848 5.30285501]
[106.33526611 20.30119133]
[114.26119995 32.91185760]
[106.73021698 46.82569504]
[106.95354462 61.82403183]
[107.17687225 76.82237244]
[107.40019989 91.82070923]
[119.56148529 83.03986359]
[134.04937744 86.92584991]
[140.18395996 100.61405945]
[133.44302368 114.01405334]
[118.79575348 117.24785614]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[116.52554321 145.81452942]
[122.35774994 158.18400574]
[121.32463074 171.71183777]
[113.80268860 182.87268066]
[101.84535980 188.81106567]
[100.72971344 203.76953125]
[99.61405945 218.72798157]
[112.51023865 211.06712341]
[126.59367371 216.23016357]
[131.48257446 230.41108704]
[123.57304382 243.15625000]
[108.69567108 245.07038879]
[97.81811523 234.74401855]
[95.59299469 249.57806396]
[93.36788177 264.41210938]
[91.14276123 279.24615479]
[88.91764069 294.08020020]
[86.69252777 308.91424561]
[84.57790375 323.76443481]
[82.57389069 338.62997437]
[80.56987762 353.49548340]
[79.00935364 368.41409302]
[77.89370728 383.37255859]
[76.77805328 398.33099365]
[85.82221985 386.36425781]
[99.12310791 379.42984009]
[114.11253357 378.86663818]
[127.89627075 384.78344727]
[137.81289673 396.03781128]
[141.94764709 410.45669556]
[139.50219727 425.25601196]
[130.94871521 437.57824707]
[117.93873596 445.04418945]
[102.98428345 446.21228027]
[88.97283936 440.85699463]
[78.60977936 430.01229858]
[73.89593506 415.77093506]
[70.13963318 430.29299927]
[66.38333130 444.81503296]
[62.62703323 459.33709717]
[67.95774078 476.96279907]
[55.17804337 488.98968506]
[51.63837051 503.56607056]
[48.09869766 518.14245605]
[44.55902863 532.71881104]
[57.72990036 540.09655762]
[68.42106628 550.75494385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[20 207]
[21 206]
[22 205]
[25 203]
[26 202]
[27 201]
[28 200]
[29 187]
[30 186]
[31 185]
[36 184]
[37 183]
[38 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 170]
[47 169]
[48 168]
[52 163]
[53 162]
[54 161]
[55 155]
[56 154]
[57 153]
[58 152]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[71 145]
[72 144]
[73 143]
[75 141]
[76 140]
[77 139]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 126]
[85 125]
[86 124]
[91 123]
[92 122]
[93 121]
[94 120]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
