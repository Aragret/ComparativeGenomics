%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[108.60553741 306.76348877]
[117.03244019 294.26345825]
[128.20639038 284.14385986]
[141.47776794 276.99307251]
[137.72146606 262.47100830]
[133.96516418 247.94894409]
[130.20886230 233.42687988]
[126.45256042 218.90481567]
[122.48046875 204.44029236]
[118.29345703 190.03651428]
[114.10644531 175.63273621]
[103.12406921 165.57109070]
[106.70172882 150.15969849]
[95.71935272 140.09805298]
[99.29701233 124.68666077]
[95.11000824 110.28288269]
[89.44546509 124.17219543]
[77.23252869 132.88105774]
[62.25550461 133.71092224]
[49.15518188 126.40464783]
[41.99084473 113.22616577]
[42.98243332 98.25897980]
[51.82270050 86.14082336]
[65.77239227 80.62664795]
[80.50904083 83.42507172]
[91.46646881 93.66919708]
[89.24134827 78.83515167]
[87.01623535 64.00111389]
[84.79111481 49.16706848]
[82.56600189 34.33302307]
[79.57122803 19.63501930]
[68.62461853 8.21213341]
[72.92822266 -6.04718781]
[69.17192078 -20.56924820]
[65.41561890 -35.09130478]
[61.65932083 -49.61336517]
[57.90301895 -64.13542175]
[54.14671707 -78.65748596]
[50.39041901 -93.17954254]
[46.63411713 -107.70159912]
[42.87781525 -122.22366333]
[27.87055588 -121.21453857]
[12.93737316 -122.97982788]
[-1.41332877 -127.45796204]
[-14.69324398 -134.49502563]
[-26.45078659 -143.85006714]
[-36.28644180 -155.20332336]
[-43.86634827 -168.16719055]
[-48.93362045 -182.29942322]
[-51.31706619 -197.11822510]
[-50.93695450 -212.11866760]
[-47.80769730 -226.78991699]
[-42.03730011 -240.63264465]
[-33.82364273 -253.17594910]
[-23.44767952 -263.99346924]
[-11.26384163 -272.71780396]
[2.31207323 -279.05300903]
[-1.44422746 -293.57504272]
[-5.20052814 -308.09710693]
[-21.13640594 -310.23162842]
[-34.99977112 -318.29870605]
[-44.68267059 -331.03750610]
[-48.72596741 -346.47949219]
[-46.53913879 -362.25265503]
[-38.48634338 -375.94580078]
[-25.82615852 -385.47708130]
[-29.79825592 -399.94161987]
[-33.77035141 -414.40615845]
[-37.74244690 -428.87066650]
[-52.57641983 -426.53973389]
[-67.57810211 -425.88433838]
[-82.55883789 -426.91278076]
[-97.33021545 -429.61209106]
[-111.70648956 -433.94830322]
[-125.50684357 -439.86694336]
[-138.55773926 -447.29351807]
[-150.69503784 -456.13467407]
[-161.76609802 -466.27923584]
[-171.63169861 -477.59954834]
[-180.16775513 -489.95333862]
[-187.26693726 -503.18518066]
[-192.83995056 -517.12866211]
[-196.81671143 -531.60852051]
[-199.14721680 -546.44256592]
[-199.80213928 -561.44427490]
[-198.77326965 -576.42492676]
[-196.07351685 -591.19622803]
[-191.73686218 -605.57238770]
[-185.81781006 -619.37255859]
[-178.39083862 -632.42321777]
[-169.54931641 -644.56030273]
[-159.40444946 -655.63104248]
[-148.08381653 -665.49627686]
[-135.72979736 -674.03198242]
[-122.49773407 -681.13079834]
[-108.55406189 -686.70336914]
[-94.07411194 -690.67968750]
[-79.24000549 -693.00976562]
[-64.23828125 -693.66424561]
[-49.25761032 -692.63488770]
[-34.48638916 -689.93475342]
[-20.11038017 -685.59765625]
[-6.31037664 -679.67816162]
[6.74006987 -672.25079346]
[18.87683678 -663.40893555]
[29.94729424 -653.26373291]
[39.81221390 -641.94281006]
[48.34753799 -629.58850098]
[55.44592667 -616.35626221]
[61.01810837 -602.41241455]
[64.99400330 -587.93237305]
[67.32361603 -573.09814453]
[67.97765350 -558.09643555]
[66.94787598 -543.11578369]
[64.24724579 -528.34466553]
[59.90972519 -513.96875000]
[53.98985672 -500.16894531]
[46.56209564 -487.11871338]
[37.71985245 -474.98220825]
[27.57432365 -463.91204834]
[16.25310326 -454.04748535]
[3.89856744 -445.51251221]
[-9.33391190 -438.41452026]
[-23.27792358 -432.84277344]
[-19.30582809 -418.37823486]
[-15.33373165 -403.91372681]
[-11.36163521 -389.44918823]
[2.61926556 -388.23519897]
[15.37317276 -382.30929565]
[25.35948372 -372.36480713]
[31.36424828 -359.58181763]
[32.64771271 -345.48715210]
[29.03540421 -331.77203369]
[20.94151497 -320.08914185]
[9.32153130 -311.85342407]
[13.07783222 -297.33135986]
[16.83413315 -282.80929565]
[31.77917480 -283.85137939]
[46.66517639 -282.12899780]
[60.98500443 -277.69931030]
[74.25052643 -270.71185303]
[86.00928497 -261.40325928]
[95.85989380 -250.08938599]
[103.46577454 -237.15461731]
[108.56663513 -223.03871155]
[110.98736572 -208.22192383]
[110.64408112 -193.20861816]
[107.54700470 -178.51016235]
[101.80019379 -164.62741089]
[93.59799194 -152.03375244]
[83.21852875 -141.15887451]
[71.01422882 -132.37414551]
[57.39987564 -125.97996521]
[61.15617752 -111.45790100]
[64.91247559 -96.93584442]
[68.66877747 -82.41378784]
[72.42507935 -67.89172363]
[76.18138123 -53.36966705]
[79.93768311 -38.84760666]
[83.69397736 -24.32554817]
[87.45027924 -9.80348873]
[98.12821198 0.58068269]
[94.09328461 15.87871933]
[101.63006592 2.90964198]
[115.69676208 -2.29881930]
[129.86227417 2.63457346]
[137.65031433 15.45433998]
[135.50028992 30.29945564]
[124.39518738 40.38293076]
[109.41208649 41.09474182]
[97.40004730 32.10790634]
[99.62516022 46.94195175]
[101.85028076 61.77599335]
[104.07539368 76.61003876]
[106.30051422 91.44408417]
[109.51378632 106.09587097]
[113.70079803 120.49964905]
[124.98265839 131.59155273]
[121.10551453 145.97268677]
[132.38737488 157.06459045]
[128.51022339 171.44572449]
[132.69723511 185.84950256]
[136.88424683 200.25328064]
[141.38462830 205.09663391]
[142.58349609 210.65179443]
[140.97462463 215.14851379]
[144.73092651 229.67057800]
[148.48722839 244.19264221]
[152.24353027 258.71469116]
[155.99981689 273.23675537]
[171.07398987 273.05566406]
[185.75331116 276.48800659]
[199.18435669 283.33422852]
[210.58624268 293.19628906]
[219.29608154 305.50085449]
[224.80751038 319.53253174]
[226.80009460 334.47552490]
[225.15797424 349.46105957]
[219.97663879 363.61795044]
[211.55732727 376.12307739]
[200.38951111 386.24945068]
[187.12246704 393.40832520]
[172.52755737 397.18347168]
[157.45327759 397.35540771]
[142.77603149 393.91418457]
[129.34915161 387.05981445]
[117.95324707 377.19082642]
[109.25086212 364.88098145]
[103.74794769 350.84597778]
[101.76442719 335.90179443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 183]
[10 182]
[11 181]
[13 179]
[15 177]
[16 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 163]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 153]
[57 137]
[58 136]
[59 135]
[66 127]
[67 126]
[68 125]
[69 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
