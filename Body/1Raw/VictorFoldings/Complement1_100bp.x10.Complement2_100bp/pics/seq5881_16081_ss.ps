%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[261.03970337 471.82852173]
[265.19815063 457.40097046]
[270.89215088 443.50759888]
[278.05496216 430.31134033]
[286.60253906 417.96685791]
[296.43472290 406.61892700]
[307.43621826 396.40060425]
[298.47552490 384.37121582]
[289.51480103 372.34182739]
[280.55410767 360.31246948]
[266.74612427 354.72781372]
[264.70715332 339.03854370]
[255.74645996 327.00918579]
[246.78576660 314.97979736]
[233.35433960 319.45306396]
[219.17654419 319.55969238]
[205.63844299 315.27603149]
[194.06764221 307.00827026]
[185.60310364 295.55392456]
[181.08305359 282.02502441]
[180.96200562 267.74011230]
[185.26501465 254.09562683]
[193.58403015 242.42962646]
[184.80342102 230.26817322]
[176.02282715 218.10671997]
[162.29948425 212.31710815]
[160.49435425 196.59922791]
[146.77102661 190.80963135]
[144.96589661 175.09173584]
[136.18528748 162.93028259]
[127.40468597 150.76882935]
[118.62408447 138.60736084]
[109.84348297 126.44591522]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[77.99506378 82.33469391]
[69.03437042 70.30531311]
[59.89556503 58.41067886]
[59.67034912 73.40898895]
[51.46108246 85.96318817]
[37.81150055 92.18322754]
[22.95106888 90.14175415]
[11.48445797 80.47134399]
[6.96472120 66.16847992]
[10.79234695 51.66505432]
[21.78130531 41.45512009]
[36.52654648 38.70232773]
[50.45930099 44.25982666]
[42.99156189 31.25087357]
[35.52381897 18.24192047]
[28.05607796 5.23296881]
[20.58833694 -7.77598381]
[13.12059593 -20.78493690]
[13.91421986 -5.80594540]
[10.69107151 8.84367275]
[3.68383336 22.10634995]
[-6.60163641 33.02464294]
[-19.42282104 40.81034851]
[-33.85414886 44.90141296]
[-48.85380936 45.00249481]
[-63.33896255 41.10630035]
[-76.26391602 33.49409866]
[-86.69560242 22.71542168]
[-93.88095093 9.54838848]
[-97.30124664 -5.05645895]
[-96.70957184 -20.04478455]
[-92.14864349 -34.33456802]
[-83.94771576 -46.89422226]
[-72.69882965 -56.81704712]
[-59.21403885 -63.38670731]
[-44.46683121 -66.12893677]
[-29.52181435 -64.84577179]
[-15.45788670 -59.62984085]
[-3.29033327 -50.85768890]
[6.10305977 -39.16159058]
[2.99894953 -53.83689117]
[-0.10516054 -68.51219177]
[-3.20927072 -83.18750000]
[-13.63490200 -95.08778381]
[-8.69887829 -109.14071655]
[-11.80298805 -123.81601715]
[-19.91135025 -111.19641113]
[-34.19658661 -106.62125397]
[-48.12767792 -112.18225098]
[-55.33551788 -125.33698273]
[-52.52478027 -140.07128906]
[-40.98049545 -149.64883423]
[-25.98055458 -149.69090271]
[-14.38177776 -140.17666626]
[-15.94230080 -155.09527588]
[-17.50282288 -170.01388550]
[-32.33539963 -172.92697144]
[-45.64957047 -180.08407593]
[-56.26145172 -190.84881592]
[-63.22743607 -204.26397705]
[-65.92811584 -219.13668823]
[-64.12335205 -234.14450073]
[-57.97361755 -247.95289612]
[-48.02574158 -259.33407593]
[-35.16429138 -267.27603149]
[-20.53289032 -271.07254028]
[-5.43255424 -270.38604736]
[8.79400349 -265.27755737]
[20.88176918 -256.20138550]
[29.75590515 -243.96449280]
[34.62733078 -229.65502930]
[35.06287766 -214.54537964]
[31.02382469 -199.97906494]
[22.86931610 -187.25132751]
[11.32444859 -177.49389648]
[-2.58421874 -171.57440186]
[-1.02369559 -156.65580750]
[0.53682739 -141.73719788]
[2.87231445 -126.92012787]
[5.97642469 -112.24482727]
[16.18002892 -101.39421844]
[11.46603203 -86.29161072]
[14.57014179 -71.61630249]
[17.67425156 -56.94100189]
[20.77836227 -42.26570129]
[26.12954712 -28.25267792]
[33.59729004 -15.24372482]
[41.06502914 -2.23477244]
[48.53277206 10.77417946]
[56.00051117 23.78313255]
[63.46825409 36.79208374]
[71.79019928 49.27187729]
[80.92900085 61.16651154]
[85.46398163 62.66416168]
[89.10630035 67.02656555]
[90.15651703 73.55408478]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[122.00493622 117.66530609]
[130.78553772 129.82676697]
[139.56614685 141.98822021]
[148.34674072 154.14967346]
[157.12734985 166.31112671]
[171.47872925 172.97059631]
[172.65580750 187.81861877]
[187.00718689 194.47808838]
[188.18428040 209.32611084]
[196.96487427 221.48756409]
[205.74548340 233.64901733]
[221.05053711 229.22236633]
[236.91934204 230.30227661]
[251.43452454 236.73982239]
[262.84854126 247.73988342]
[269.79409790 261.95922852]
[271.44793701 277.67059326]
[267.62841797 292.97244263]
[258.81515503 306.01910400]
[267.77584839 318.04846191]
[276.73654175 330.07785034]
[291.18548584 336.52291870]
[292.58349609 351.35177612]
[301.54418945 363.38113403]
[310.50488281 375.41052246]
[319.46557617 387.43991089]
[332.40570068 379.82409668]
[346.09341431 373.65206909]
[360.36819458 368.99612427]
[375.06271362 365.91085815]
[390.00463867 364.43249512]
[405.01882935 364.57830811]
[419.92922974 366.34664917]
[434.56106567 369.71670532]
[448.74270630 374.64904785]
[462.30795288 381.08578491]
[475.09771729 388.95147705]
[486.96203613 398.15390015]
[497.76187134 408.58517456]
[507.37054443 420.12295532]
[515.67541504 432.63201904]
[522.57910156 445.96566772]
[528.00067139 459.96759033]
[531.87652588 474.47363281]
[534.16131592 489.31365967]
[534.82818604 504.31375122]
[533.86926270 519.29803467]
[531.29589844 534.09075928]
[527.13824463 548.51849365]
[521.44494629 562.41217041]
[514.28289795 575.60882568]
[505.73596191 587.95379639]
[495.90438843 599.30224609]
[484.90344238 609.52117920]
[472.86212158 618.49078369]
[459.92156982 626.10589600]
[446.23355103 632.27716064]
[431.95852661 636.93237305]
[417.26385498 640.01678467]
[402.32183838 641.49438477]
[387.30764771 641.34771729]
[372.39733887 639.57861328]
[357.76571655 636.20776367]
[343.58432007 631.27465820]
[330.01940918 624.83721924]
[317.23007202 616.97082520]
[305.36624146 607.76776123]
[294.56698608 597.33593750]
[284.95892334 585.79760742]
[276.65475464 573.28808594]
[269.75177002 559.95404053]
[264.33096313 545.95184326]
[260.45584106 531.44561768]
[258.17187500 516.60546875]
[257.50582886 501.60531616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 161]
[8 160]
[9 159]
[10 158]
[12 156]
[13 155]
[14 154]
[23 146]
[24 145]
[25 144]
[27 142]
[29 140]
[30 139]
[31 138]
[32 137]
[33 136]
[34 135]
[36 133]
[37 132]
[38 129]
[39 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[76 121]
[77 120]
[78 119]
[79 118]
[81 116]
[82 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
