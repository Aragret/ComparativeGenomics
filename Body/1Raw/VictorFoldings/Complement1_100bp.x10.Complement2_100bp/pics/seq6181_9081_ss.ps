%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[53.86881638 514.27270508]
[42.68580627 524.27832031]
[30.85282516 533.50622559]
[18.42386627 541.91418457]
[5.45564175 549.46386719]
[-7.99267817 556.12091064]
[-21.85973167 561.85479736]
[-36.08224487 566.63946533]
[-50.59532547 570.45306396]
[-65.33274841 573.27819824]
[-80.22727203 575.10192871]
[-95.21093750 575.91595459]
[-110.21537781 575.71661377]
[-125.17212677 574.50476074]
[-140.01293945 572.28594971]
[-154.67010498 569.07031250]
[-169.07675171 564.87249756]
[-183.16712952 559.71166992]
[-196.87693787 553.61132812]
[-210.14366150 546.59936523]
[-222.90672302 538.70782471]
[-235.10791016 529.97259521]
[-246.69155884 520.43359375]
[-257.60479736 510.13436890]
[-267.79782104 499.12188721]
[-277.22415161 487.44638062]
[-285.84075928 475.16116333]
[-293.60833740 462.32223511]
[-300.49142456 448.98822021]
[-306.45864868 435.21997070]
[-311.48275757 421.08026123]
[-315.54083252 406.63363647]
[-318.61434937 391.94601440]
[-320.68930054 377.08438110]
[-321.75622559 362.11660767]
[-321.81021118 347.11093140]
[-320.85104370 332.13586426]
[-318.88311768 317.25970459]
[-315.91537476 302.55032349]
[-311.96136475 288.07485962]
[-307.03915405 273.89938354]
[-301.17117310 260.08850098]
[-294.38421631 246.70530701]
[-286.70925903 233.81082153]
[-278.18127441 221.46389771]
[-268.83923340 209.72087097]
[-258.72570801 198.63529968]
[-247.88687134 188.25779724]
[-236.37217712 178.63569641]
[-224.23417664 169.81289673]
[-211.52822876 161.82966614]
[-198.31231689 154.72242737]
[-184.64675903 148.52362061]
[-170.59388733 143.26150513]
[-156.21783447 138.96009827]
[-141.58419800 135.63905334]
[-126.75972748 133.31349182]
[-111.81208801 131.99403381]
[-96.80947113 131.68670654]
[-81.82033539 132.39289856]
[-66.91307068 134.10940552]
[-52.15569687 136.82836914]
[-37.61554718 140.53741455]
[-23.35896873 145.21960449]
[-9.45100784 150.85357666]
[4.04487228 157.41362000]
[17.06709480 164.86979675]
[29.55624199 173.18811035]
[38.69504166 161.29347229]
[47.83384705 149.39883423]
[47.60381699 146.60505676]
[48.46658325 143.55181885]
[50.52650833 140.65490723]
[53.73565674 138.36015320]
[57.88778305 137.08979797]
[67.71836853 125.76020813]
[77.54894257 114.43061066]
[87.37952423 103.10102081]
[96.86842346 91.48375702]
[106.00722504 79.58912659]
[115.14602661 67.69448853]
[110.90623474 52.88468552]
[116.13873291 38.58523178]
[128.64007568 30.20785332]
[143.49934387 30.79116440]
[152.63813782 18.89653206]
[161.77694702 7.00189877]
[170.28376770 -5.35261059]
[178.13552856 -18.13345337]
[185.98728943 -30.91429520]
[193.83903503 -43.69513702]
[181.84039307 -52.71550369]
[170.73915100 -62.81981277]
[160.63290405 -73.91927338]
[151.61042786 -85.91633606]
[143.75103760 -98.70556641]
[137.12379456 -112.17457581]
[131.78695679 -126.20498657]
[127.78739929 -140.67350769]
[125.16029358 -155.45298767]
[123.92871857 -170.41351318]
[124.10349274 -185.42364502]
[125.68309021 -200.35145569]
[128.65362549 -215.06575012]
[132.98898315 -229.43721008]
[138.65107727 -243.33955383]
[145.59013367 -256.65060425]
[153.74519348 -269.25335693]
[163.04457092 -281.03707886]
[173.40652466 -291.89822388]
[184.74003601 -301.74130249]
[196.94546509 -310.47982788]
[209.91555786 -318.03701782]
[223.53633118 -324.34643555]
[237.68809509 -329.35266113]
[252.24645996 -333.01168823]
[267.08349609 -335.29132080]
[282.06881714 -336.17160034]
[297.07070923 -335.64471436]
[311.95733643 -333.71536255]
[326.59790039 -330.40045166]
[340.86370850 -325.72912598]
[354.62939453 -319.74243164]
[367.77398682 -312.49298096]
[380.18194580 -304.04452515]
[391.74426270 -294.47125244]
[402.35931396 -283.85733032]
[411.93377686 -272.29605103]
[420.38357544 -259.88894653]
[427.63439941 -246.74513245]
[433.62255859 -232.98008728]
[438.29537964 -218.71478271]
[441.61184692 -204.07456970]
[443.54278564 -189.18814087]
[444.07125854 -174.18630981]
[443.19259644 -159.20089722]
[440.91448975 -144.36361694]
[437.25701904 -129.80487061]
[432.25231934 -115.65257263]
[425.94433594 -102.03112793]
[418.38851929 -89.06023407]
[409.65127563 -76.85388184]
[399.80938721 -65.51934052]
[388.94934082 -55.15621948]
[377.16662598 -45.85559845]
[364.56472778 -37.69921112]
[351.25439453 -30.75873947]
[337.35266113 -25.09517288]
[322.98165894 -20.75828934]
[308.26766968 -17.78619957]
[293.34002686 -16.20502281]
[278.32992554 -16.02865601]
[263.36926270 -17.25864983]
[248.58950806 -19.88419151]
[234.12057495 -23.88221169]
[220.08958435 -29.21757126]
[206.61987305 -35.84338379]
[198.76812744 -23.06254005]
[190.91636658 -10.28169727]
[183.06462097 2.49914503]
[197.63342285 -1.07155907]
[211.14408875 5.44472408]
[217.41970825 19.06883812]
[213.59117126 33.57202148]
[201.40882874 42.32361221]
[186.44227600 41.32250214]
[175.53401184 31.02638626]
[173.67156982 16.14070129]
[164.53277588 28.03533363]
[155.39396667 39.92996597]
[159.78564453 54.13740158]
[154.91163635 68.37496185]
[142.44284058 77.11466980]
[127.04066467 76.83329010]
[117.90186310 88.72792816]
[108.76306152 100.62255859]
[108.90144348 103.66728210]
[107.93504333 106.82965851]
[105.81813812 109.70057678]
[102.65679932 111.85978699]
[98.70912170 112.93160248]
[88.87854004 124.26119232]
[79.04795837 135.59078979]
[69.21737671 146.92037964]
[59.72847748 158.53764343]
[50.58967590 170.43228149]
[41.45087433 182.32690430]
[52.70586014 192.25154114]
[63.26515961 202.91334534]
[73.08058929 214.26368713]
[82.10736084 226.25077820]
[90.30429840 238.81991577]
[97.63398743 251.91375732]
[104.06298828 265.47253418]
[109.56196594 279.43441772]
[114.10583496 293.73568726]
[117.67385864 308.31109619]
[120.24975586 323.09411621]
[121.82176971 338.01730347]
[122.38273621 353.01257324]
[121.93009186 368.01150513]
[120.46590424 382.94567871]
[117.99684906 397.74691772]
[114.53419495 412.34768677]
[110.09373474 426.68139648]
[104.69574738 440.68264771]
[98.36484528 454.28753662]
[91.12992096 467.43395996]
[83.02398682 480.06198120]
[74.08402252 492.11395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 187]
[69 186]
[70 185]
[75 184]
[76 183]
[77 182]
[78 181]
[79 176]
[80 175]
[81 174]
[85 170]
[86 169]
[87 168]
[88 160]
[89 159]
[90 158]
[91 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
