%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-43.98385239 471.77450562]
[-36.29669189 484.68673706]
[-30.57156754 498.58062744]
[-26.93051338 513.16009521]
[-25.45113945 528.11431885]
[-26.16497993 543.12463379]
[-29.05681610 557.87097168]
[-34.06501007 572.03912354]
[-41.08280945 585.32702637]
[-49.96063614 597.45141602]
[-60.50925064 608.15399170]
[-72.50381470 617.20654297]
[-85.68865967 624.41607666]
[-99.78274536 629.62902832]
[-114.48566437 632.73413086]
[-129.48402405 633.66534424]
[-144.45812988 632.40277100]
[-159.08880615 628.97332764]
[-173.06419373 623.45007324]
[-186.08641052 615.95074463]
[-197.87789917 606.63525391]
[-208.18731689 595.70208740]
[-216.79490662 583.38433838]
[-223.51719666 569.94451904]
[-228.21092224 555.66912842]
[-230.77601624 540.86242676]
[-231.15782166 525.84002686]
[-229.34817505 510.92218018]
[-225.38568115 496.42678833]
[-219.35476685 482.66284180]
[-211.38400269 469.92373657]
[-201.64328003 458.48098755]
[-190.34022522 448.57852173]
[-177.71575928 440.42739868]
[-164.03898621 434.20138550]
[-149.60140991 430.03314209]
[-134.71076965 428.01153564]
[-119.68447876 428.17965698]
[-104.84280396 430.53390503]
[-90.50210571 435.02416992]
[-76.96805573 441.55465698]
[-68.55343628 429.13714600]
[-60.13881683 416.71966553]
[-62.11270523 404.78524780]
[-55.20397568 394.37115479]
[-42.66179657 391.36175537]
[-34.06323242 379.07092285]
[-25.46466637 366.78005981]
[-16.86610222 354.48922729]
[-8.26753902 342.19839478]
[0.33102518 329.90756226]
[7.70171499 316.84338379]
[13.77554893 303.12811279]
[19.84938240 289.41284180]
[25.92321587 275.69757080]
[31.79217720 261.89340210]
[37.45496368 248.00337219]
[43.11775208 234.11334229]
[38.71687317 222.84574890]
[43.32095337 211.22738647]
[54.96887207 205.68763733]
[60.83783340 191.88346863]
[66.70679474 178.07928467]
[72.57575226 164.27510071]
[77.61267090 150.14607239]
[81.79968262 135.74229431]
[85.98669434 121.33851624]
[90.17370605 106.93473053]
[94.14580536 92.47020721]
[97.90209961 77.94815063]
[90.14263916 64.44154358]
[94.15893555 49.76762009]
[107.08323669 42.45339203]
[110.83953857 27.93133163]
[114.59584045 13.40927219]
[118.35214233 -1.11278689]
[122.10843658 -15.63484573]
[125.86473846 -30.15690613]
[128.96885681 -44.83220673]
[123.58518982 -59.70926285]
[133.29411316 -71.00466156]
[135.73983765 -85.80393219]
[138.18556213 -100.60320282]
[140.63128662 -115.40247345]
[141.07789612 -130.39582825]
[139.51737976 -145.31443787]
[135.51216125 -153.52394104]
[138.04637146 -160.46652222]
[136.70814514 -175.40670776]
[127.77050781 -188.46156311]
[134.34147644 -201.82836914]
[133.00325012 -216.76855469]
[131.66500854 -231.70874023]
[116.91371918 -235.06352234]
[103.92212677 -242.81423950]
[93.96301270 -254.20156860]
[88.01207733 -268.10989380]
[86.65232849 -283.17663574]
[90.01699066 -297.92565918]
[97.77641296 -310.91207886]
[109.17041016 -320.86355591]
[123.08272552 -326.80514526]
[138.15036011 -328.15481567]
[152.89714050 -324.78027344]
[165.87834167 -317.01214600]
[175.82218933 -305.61148071]
[181.75447083 -291.69519043]
[183.09402466 -276.62664795]
[179.70960999 -261.88214111]
[171.93278503 -248.90614319]
[160.52545166 -238.96994019]
[146.60519409 -233.04698181]
[147.94343567 -218.10679626]
[149.28166199 -203.16661072]
[158.12358093 -191.18037415]
[151.64833069 -176.74494934]
[152.98655701 -161.80476379]
[154.43597412 -146.87495422]
[155.99650574 -131.95634460]
[161.58319092 -145.87716675]
[171.14987183 -157.43045044]
[183.78472900 -165.51502991]
[198.28347778 -169.36033630]
[213.26417542 -168.59986877]
[227.29899597 -163.30607605]
[239.05018616 -153.98356628]
[247.39773560 -141.52087402]
[251.54597473 -127.10588074]
[251.09954834 -112.11252594]
[246.10098267 -97.96987915]
[237.02673340 -86.02593231]
[224.74168396 -77.41909790]
[210.41677856 -72.96973419]
[195.41735840 -73.10192108]
[181.17308044 -77.80306244]
[169.04162598 -86.62506866]
[160.17927551 -98.72708893]
[155.43055725 -112.95674896]
[152.98483276 -98.15747833]
[150.53910828 -83.35820770]
[148.09338379 -68.55893707]
[153.65197754 -54.74042511]
[143.76812744 -42.38648224]
[156.56109619 -50.21844864]
[171.17677307 -46.84470749]
[179.24261475 -34.19788361]
[176.13815308 -19.52265739]
[163.64175415 -11.22566128]
[148.91194153 -14.05979252]
[140.38679504 -26.40060425]
[136.63049316 -11.87854576]
[132.87419128 2.64351368]
[129.11790466 17.16557312]
[125.36159515 31.68763161]
[121.60529327 46.20969009]
[129.36209106 58.87332916]
[125.75954437 73.65427399]
[112.42416382 81.70445251]
[108.66786194 96.22650909]
[110.23758698 101.23149872]
[108.89136505 106.75970459]
[104.57748413 111.12174225]
[100.39048004 125.52552795]
[96.20346832 139.92930603]
[92.01645660 154.33308411]
[104.65065002 146.24746704]
[119.63088989 147.01710510]
[131.36991882 156.35494995]
[135.48937988 170.77819824]
[130.45278931 184.90734863]
[118.13870239 193.47256470]
[103.13994598 193.27925110]
[91.05069733 184.39950562]
[86.37993622 170.14407349]
[80.51097107 183.94824219]
[74.64201355 197.75242615]
[68.77304840 211.55659485]
[71.43016815 229.77804565]
[57.00777817 239.77612305]
[51.34498978 253.66615295]
[45.68220520 267.55618286]
[46.20199966 274.14718628]
[43.69197845 279.24591064]
[39.63848495 281.77139282]
[33.56464767 295.48666382]
[27.49081612 309.20193481]
[21.41698074 322.91720581]
[33.77187729 314.41094971]
[48.50331497 311.58520508]
[63.12878799 314.91619873]
[75.18364716 323.84259033]
[82.63643646 336.86010742]
[84.23123932 351.77508545]
[79.69928741 366.07409668]
[69.80429840 377.34747314]
[56.21376038 383.69549561]
[41.21791458 384.04837036]
[27.34381866 378.34667969]
[16.92950630 367.55120850]
[11.72997189 353.48120117]
[12.62186337 338.50613403]
[4.02329922 350.79696655]
[-4.57526493 363.08779907]
[-13.17382908 375.37863159]
[-21.77239227 387.66946411]
[-30.37095642 399.96032715]
[-31.54211617 418.33718872]
[-47.72132111 425.13427734]
[-56.13594055 437.55175781]
[-64.55056000 449.96926880]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 210]
[42 209]
[43 208]
[46 206]
[47 205]
[48 204]
[49 203]
[50 202]
[51 201]
[52 187]
[53 186]
[54 185]
[55 184]
[56 181]
[57 180]
[58 179]
[61 177]
[62 176]
[63 175]
[64 174]
[65 165]
[66 164]
[67 163]
[68 162]
[69 159]
[70 158]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 143]
[81 141]
[82 140]
[83 139]
[84 138]
[85 119]
[86 118]
[88 117]
[89 116]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
