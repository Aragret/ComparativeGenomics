%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[65.74032593 520.47723389]
[61.21271896 534.79504395]
[55.08248901 548.50335693]
[47.42955780 561.42352295]
[38.35369492 573.38702393]
[27.97322273 584.23803711]
[16.42347527 593.83496094]
[3.85502577 602.05273438]
[-9.56827068 608.78417969]
[-23.67141342 613.94165039]
[-38.27054214 617.45776367]
[-53.17531967 619.28680420]
[-68.19143677 619.40484619]
[-83.12313080 617.81036377]
[-97.77573395 614.52416992]
[-111.95821381 609.58911133]
[-125.48567963 603.06945801]
[-138.18176270 595.05029297]
[-149.88096619 585.63616943]
[-160.43074036 574.94970703]
[-169.69355774 563.13031006]
[-177.54867554 550.33209229]
[-183.89366150 536.72180176]
[-188.64579773 522.47698975]
[-191.74314880 507.78332520]
[-193.14530945 492.83233643]
[-192.83403015 477.81900024]
[-190.81333923 462.93899536]
[-187.10958862 448.38632202]
[-181.77108765 434.35070801]
[-174.86740112 421.01516724]
[-166.48855591 408.55352783]
[-156.74377441 397.12823486]
[-145.76010132 386.88827515]
[-133.68074036 377.96713257]
[-120.66316223 370.48110962]
[-106.87708282 364.52783203]
[-92.50222778 360.18484497]
[-77.72600555 357.50885010]
[-62.74105835 356.53466797]
[-47.74273682 357.27502441]
[-32.92657852 359.72027588]
[-18.48574638 363.83856201]
[-4.60850191 369.57614136]
[2.66472769 356.45742798]
[9.93795681 343.33874512]
[17.21118736 330.22006226]
[24.48441505 317.10134888]
[30.14720345 303.21133423]
[34.11929703 288.74679565]
[38.09139633 274.28228760]
[42.06349182 259.81774902]
[37.97266388 245.49594116]
[49.08812714 234.23730469]
[53.06022644 219.77278137]
[51.51847839 215.25259399]
[52.79991531 209.71591187]
[57.37191391 204.94009399]
[61.77291107 190.60025024]
[60.36642838 186.03616333]
[61.81214523 180.54008484]
[66.52431488 175.90251160]
[71.35031128 161.70005798]
[76.17630768 147.49760437]
[81.00230408 133.29515076]
[85.82830048 119.09268951]
[90.54843903 104.85470581]
[94.19652557 90.30508423]
[96.86231995 75.54386902]
[99.52811432 60.78264999]
[102.19390869 46.02143097]
[104.85970306 31.26021385]
[107.52550507 16.49899673]
[110.19129944 1.73777926]
[105.02973175 -13.21778107]
[114.90574646 -24.36737823]
[117.57154083 -39.12859726]
[107.01175690 -50.34452820]
[105.10337830 -65.45119476]
[112.37033081 -78.62903595]
[125.84222412 -84.92555237]
[128.50802612 -99.68677521]
[131.17381287 -114.44799042]
[133.83961487 -129.20921326]
[136.50540161 -143.97042847]
[139.17120361 -158.73164368]
[134.00962830 -173.68719482]
[143.88565063 -184.83679199]
[145.77894592 -199.71682739]
[146.89459229 -214.67529297]
[148.01023865 -229.63374329]
[149.12588501 -244.59219360]
[142.43643188 -258.92962646]
[151.09890747 -271.04617310]
[136.67044067 -275.36282349]
[123.50748444 -282.68063354]
[112.22568512 -292.65737915]
[103.35271454 -304.82635498]
[97.30357361 -318.61846924]
[94.36119843 -333.38858032]
[94.66320801 -348.44589233]
[98.19547272 -363.08615112]
[104.79278564 -376.62460327]
[114.14657593 -388.42803955]
[125.81935120 -397.94433594]
[139.26515198 -404.72848511]
[153.85510254 -408.46310425]
[168.90679932 -408.97357178]
[183.71624756 -406.23596191]
[197.59077454 -400.37835693]
[209.88145447 -391.67474365]
[220.01342773 -380.53213501]
[227.51280212 -367.47177124]
[232.02880859 -353.10446167]
[233.35023499 -338.10217285]
[231.41528320 -323.16665649]
[226.31445312 -308.99642944]
[218.28630066 -296.25424194]
[207.70632935 -285.53613281]
[195.06939697 -277.34332275]
[180.96653748 -272.05908203]
[166.05735779 -269.93051147]
[172.82661438 -256.66302490]
[164.08433533 -243.47654724]
[162.96868896 -228.51809692]
[161.85304260 -213.55964661]
[160.73739624 -198.60118103]
[172.04603577 -208.45587158]
[187.04054260 -208.86167908]
[198.86563110 -199.63307190]
[202.11505127 -184.98925781]
[195.30317688 -171.62518311]
[181.54434204 -165.65072632]
[167.12887573 -169.79731750]
[158.64686584 -182.17100525]
[163.99911499 -168.27127075]
[153.93241882 -156.06584167]
[151.26661682 -141.30462646]
[148.60083008 -126.54341125]
[145.93502808 -111.78219604]
[143.26924133 -97.02098083]
[140.60343933 -82.25975800]
[151.02192688 -71.64876556]
[153.22047424 -56.76151276]
[146.14862061 -43.27662277]
[132.33276367 -36.46279907]
[129.66696167 -21.70158386]
[135.01921082 -7.80184412]
[124.95251465 4.40357494]
[122.28672028 19.16479111]
[119.62092590 33.92601013]
[116.95513153 48.68722534]
[114.28932953 63.44844437]
[111.62353516 78.20966339]
[108.95774078 92.97087860]
[120.21508789 83.05764771]
[135.02850342 80.69908142]
[148.80787659 86.62602234]
[157.28353882 99.00193024]
[157.82920837 113.99200439]
[150.27580261 126.95140076]
[136.96382141 133.86451721]
[122.01812744 132.58923340]
[110.06980896 123.52072906]
[104.82116699 109.46871185]
[105.15913391 118.59688568]
[100.03076172 123.91869354]
[95.20475769 138.12113953]
[90.37876129 152.32360840]
[85.55276489 166.52606201]
[80.72676849 180.72851562]
[76.11275482 195.00125122]
[71.71176147 209.34109497]
[67.52474976 223.74487305]
[63.55265427 238.20939636]
[67.35936737 253.56581116]
[56.52801514 263.78985596]
[52.55591965 278.25439453]
[48.58382416 292.71890259]
[44.61172485 307.18344116]
[55.08677673 296.44689941]
[68.57205963 289.87823486]
[83.48332977 288.24914551]
[98.06883240 291.75100708]
[110.61508179 299.97241211]
[119.64814758 311.94754028]
[124.10684204 326.26956177]
[123.46735382 341.25592041]
[117.80481720 355.14605713]
[107.78445435 366.30816650]
[94.58345795 373.43090820]
[79.75265503 375.67755127]
[65.03436279 372.78411865]
[52.15766525 365.09057617]
[42.63531113 353.50070190]
[37.58597183 339.37612915]
[37.60311127 324.37457275]
[30.32987976 337.49328613]
[23.05665016 350.61196899]
[15.78342152 363.73068237]
[8.51019192 376.84936523]
[20.72831345 385.57949829]
[31.87160873 395.64550781]
[41.79480362 406.91619873]
[50.36853027 419.24456787]
[57.48101044 432.46994019]
[63.03951645 446.41986084]
[66.97158813 460.91250610]
[69.22595978 475.75891113]
[69.77323914 490.76553345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 201]
[45 200]
[46 199]
[47 198]
[48 197]
[49 180]
[50 179]
[51 178]
[52 177]
[54 175]
[55 174]
[58 173]
[59 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 165]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[76 147]
[77 146]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[88 135]
[89 127]
[90 126]
[91 125]
[92 124]
[94 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
