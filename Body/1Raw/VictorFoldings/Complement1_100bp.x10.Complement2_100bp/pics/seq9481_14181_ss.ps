%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[147.56910706 406.19744873]
[151.49542236 391.68936157]
[157.59046936 377.95071411]
[165.71138000 365.30352783]
[175.66778564 354.04428101]
[187.22628784 344.43692017]
[200.11595154 336.70666504]
[194.45317078 322.81661987]
[182.48362732 313.95211792]
[184.43855286 298.25216675]
[178.77575684 284.36212158]
[173.11297607 270.47210693]
[161.14343262 261.60760498]
[163.09835815 245.90765381]
[157.43557739 232.01762390]
[151.77278137 218.12759399]
[145.49542236 204.50427246]
[138.61601257 191.17485046]
[125.90335083 183.41357422]
[126.44979858 167.60180664]
[119.57038116 154.27236938]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[80.85900879 79.26589966]
[81.12268829 94.26358032]
[78.40290833 109.01494598]
[72.80800629 122.93245697]
[64.56082153 135.46177673]
[53.98983765 146.10388184]
[41.51608658 154.43487549]
[27.63640404 160.12297058]
[12.90360355 162.94158936]
[-2.09550977 162.77847290]
[-16.76352692 159.64012146]
[-30.51622772 153.65151978]
[-42.80584717 145.05120850]
[-53.14289093 134.18174744]
[-61.11564255 121.47602081]
[-66.40654755 107.44013214]
[-68.80487823 92.63310242]
[-68.21510315 77.64470673]
[-64.66071320 63.07191086]
[-58.28327560 49.49515152]
[-49.33681107 37.45518875]
[-38.17764664 27.43156624]
[-25.25024605 19.82351875]
[-11.06950855 14.93407631]
[3.79975700 12.95798016]
[18.76531219 13.97393990]
[33.23108292 17.94148827]
[46.62090683 24.70260048]
[58.40147018 33.98798370]
[68.10355377 45.42780304]
[75.33909607 58.56257629]
[74.66931152 43.57753754]
[73.99952698 28.59250069]
[73.32974243 13.60746098]
[72.65995789 -1.37757742]
[71.99017334 -16.36261559]
[63.64437866 -29.80353546]
[70.80565643 -42.86360168]
[70.13587189 -57.84864044]
[54.71458817 -67.38497162]
[48.16231155 -84.12257385]
[52.92680359 -101.29087067]
[66.91844177 -112.06610870]
[65.80279541 -127.02455902]
[64.68714905 -141.98301697]
[63.57149887 -156.94146729]
[62.45584869 -171.89991760]
[61.34019852 -186.85836792]
[57.93951797 -192.52819824]
[57.91619492 -198.21119690]
[60.42079926 -202.27764893]
[52.07500458 -215.71856689]
[59.23628616 -228.77862549]
[58.56650162 -243.76367188]
[57.89671707 -258.74871826]
[57.22693253 -273.73373413]
[42.26961517 -275.15670776]
[27.65591431 -278.64752197]
[13.67029285 -284.13830566]
[0.58498305 -291.52212524]
[-11.34530449 -300.65527344]
[-21.88834381 -311.35995483]
[-30.83891296 -323.42782593]
[-38.02278519 -336.62396240]
[-43.30012131 -350.69149780]
[-46.56820297 -365.35662842]
[-47.76341248 -380.33386230]
[-46.86248016 -395.33169556]
[-43.88295364 -410.05813599]
[-38.88282013 -424.22659302]
[-31.95941353 -437.56121826]
[-23.24749947 -449.80249023]
[-12.91665840 -460.71212769]
[-1.16798115 -470.07772827]
[11.76983929 -477.71704102]
[25.64496422 -483.48132324]
[40.18731308 -487.25839233]
[55.11380768 -488.97473145]
[70.13391113 -488.59692383]
[84.95523834 -486.13229370]
[99.28929901 -481.62887573]
[112.85707092 -475.17428589]
[125.39446259 -466.89419556]
[136.65740967 -456.94973755]
[146.42669678 -445.53454590]
[154.51216125 -432.87075806]
[160.75639343 -419.20489502]
[165.03787231 -404.80297852]
[167.27325439 -389.94534302]
[167.41900635 -374.92120361]
[165.47232056 -360.02301025]
[161.47106934 -345.54074097]
[155.49314880 -331.75628662]
[147.65490723 -318.93801880]
[138.10894775 -307.33541870]
[127.04104614 -297.17431641]
[114.66667175 -288.65252686]
[101.22668457 -281.93591309]
[86.98269653 -277.15524292]
[72.21196747 -274.40353394]
[72.88175201 -259.41848755]
[73.55153656 -244.43345642]
[74.22132874 -229.44841003]
[82.51921082 -217.07933044]
[75.40583801 -202.94743347]
[76.29865265 -187.97401428]
[77.41429901 -173.01556396]
[78.52995300 -158.05711365]
[79.64559937 -143.09866333]
[80.76124573 -128.14021301]
[81.87689972 -113.18175507]
[93.03430939 -108.39766693]
[101.14690399 -99.26976013]
[104.62927246 -87.48951721]
[102.76168060 -75.27511597]
[95.83790588 -64.95378876]
[85.12091064 -58.51842499]
[85.79069519 -43.53338623]
[94.08858490 -31.16429710]
[86.97521210 -17.03240204]
[87.64499664 -2.04736257]
[88.31478119 12.93767643]
[88.98456573 27.92271423]
[89.65435028 42.90775299]
[90.32413483 57.89279175]
[94.18843842 72.38648224]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[132.89981079 147.39295959]
[139.77922058 160.72239685]
[152.98394775 169.43707275]
[151.94543457 184.29544067]
[158.82485962 197.62486267]
[164.40562439 183.70169067]
[178.14219666 177.67617798]
[192.16563416 183.00003052]
[198.44265747 196.62350464]
[193.37753296 210.74244690]
[179.87176514 217.26887512]
[165.66281128 212.46481323]
[171.32559204 226.35482788]
[176.98838806 240.24485779]
[189.36296082 250.10285950]
[187.00300598 264.80932617]
[192.66578674 278.69934082]
[198.32856750 292.58938599]
[210.70315552 302.44738770]
[208.34318542 317.15383911]
[214.00598145 331.04385376]
[228.62629700 327.55865479]
[243.60729980 326.34622192]
[258.59780884 327.43490601]
[273.24639893 330.79925537]
[287.20974731 336.36038208]
[300.16046143 343.98788452]
[311.79498291 353.50305176]
[321.84060669 364.68273926]
[330.06182861 377.26495361]
[336.26593018 390.95471191]
[340.30749512 405.43112183]
[342.09176636 420.35482788]
[341.57690430 435.37597656]
[338.77502441 450.14248657]
[333.75177002 464.30819702]
[326.62487793 477.54104614]
[317.56146240 489.53082275]
[306.77395630 499.99649048]
[294.51522827 508.69268799]
[281.07263184 515.41558838]
[266.76132202 520.00762939]
[251.91673279 522.36108398]
[236.88687134 522.42083740]
[222.02404785 520.18548584]
[207.67666626 515.70739746]
[194.18104553 509.09161377]
[181.85356140 500.49316406]
[170.98316956 490.11361694]
[161.82469177 478.19628906]
[154.59280396 465.02053833]
[149.45706177 450.89523315]
[146.53784180 436.15145874]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 178]
[8 177]
[10 175]
[11 174]
[12 173]
[14 171]
[15 170]
[16 169]
[17 162]
[18 161]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[26 153]
[27 152]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[64 144]
[65 143]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[77 131]
[79 129]
[80 128]
[81 127]
[82 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
