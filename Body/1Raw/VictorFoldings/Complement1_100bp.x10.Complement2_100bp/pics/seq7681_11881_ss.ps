%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[112.82286072 612.29931641]
[104.78179932 599.60858154]
[98.54375458 585.94110107]
[94.22493744 571.55145264]
[91.90579987 556.70776367]
[91.62955475 541.68652344]
[93.40134430 526.76757812]
[97.18815613 512.22888184]
[102.91944885 498.34124756]
[110.48845673 485.36343384]
[119.75416565 473.53717041]
[130.54396057 463.08279419]
[142.65684509 454.19506836]
[155.86715698 447.03955078]
[169.92880249 441.74954224]
[166.60653687 427.12207031]
[163.28427124 412.49462891]
[159.96202087 397.86715698]
[156.63975525 383.23968506]
[153.31750488 368.61224365]
[149.99523926 353.98477173]
[146.67297363 339.35733032]
[143.35072327 324.72985840]
[132.98669434 314.03237915]
[137.47531128 298.86123657]
[134.15306091 284.23379517]
[119.17999268 284.65988159]
[104.40680695 282.15573120]
[90.40158844 276.81570435]
[77.70328522 268.84335327]
[66.80092621 258.54342651]
[58.11482620 246.31045532]
[51.98034286 232.61352539]
[48.63496399 217.97828674]
[48.20908356 202.96681213]
[50.72094345 188.15597534]
[56.07585526 174.11534119]
[64.06975555 161.38520813]
[74.39699554 150.45584106]
[86.66202545 141.74856567]
[100.39453888 135.59957886]
[90.03050995 124.90209198]
[94.51913452 109.73097229]
[91.08807373 95.12865448]
[87.54840088 80.55227661]
[84.00872803 65.97590637]
[73.23339844 54.39130402]
[77.74883270 40.19763565]
[74.20915985 25.62126160]
[70.66948700 11.04488659]
[67.12981415 -3.53148913]
[63.59013748 -18.10786438]
[50.50368118 -19.93712425]
[38.84591675 -26.08976936]
[29.99427795 -35.81428528]
[24.98628998 -47.93859482]
[24.39797401 -61.01131058]
[28.27766991 -73.47547150]
[36.14287186 -83.85396576]
[47.04011917 -90.92459106]
[43.93600845 -105.59989166]
[40.83189774 -120.27519989]
[37.72778702 -134.95050049]
[34.62367630 -149.62580872]
[31.51956749 -164.30110168]
[28.41545677 -178.97640991]
[25.31134605 -193.65170288]
[21.82110977 -197.53311157]
[20.31893349 -201.92591858]
[20.66670227 -205.98721313]
[22.41176796 -209.05105591]
[19.96603966 -223.85032654]
[17.52031326 -238.64959717]
[15.07458496 -253.44886780]
[3.06340861 -267.40640259]
[9.87858105 -283.57800293]
[7.21278572 -298.33923340]
[4.54699039 -313.10043335]
[1.88119495 -327.86166382]
[-13.14095783 -327.42282104]
[-28.06072044 -329.22790527]
[-42.54477692 -333.23660278]
[-56.26955032 -339.35937500]
[-68.92842865 -347.45941162]
[-80.23859406 -357.35577393]
[-89.94738770 -368.82733154]
[-97.83790588 -381.61785889]
[-103.73387909 -395.44155884]
[-107.50357056 -409.98965454]
[-109.06278229 -424.93713379]
[-108.37667084 -439.95001221]
[-105.46057129 -454.69296265]
[-100.37962341 -468.83654785]
[-93.24733734 -482.06488037]
[-84.22305298 -494.08236694]
[-73.50838470 -504.62054443]
[-61.34269333 -513.44403076]
[-47.99776459 -520.35565186]
[-33.77172852 -525.20098877]
[-18.98240471 -527.87188721]
[-3.96018982 -528.30859375]
[10.95931435 -526.50134277]
[25.44280052 -522.49060059]
[39.16670227 -516.36584473]
[51.82442474 -508.26403809]
[63.13318634 -498.36608887]
[72.84034729 -486.89312744]
[80.72904205 -474.10147095]
[86.62303925 -460.27691650]
[90.39066315 -445.72830200]
[91.94774628 -430.78060913]
[91.25949860 -415.76782227]
[88.34129333 -401.02529907]
[83.25833130 -386.88241577]
[76.12416077 -373.65512085]
[67.09817505 -361.63891602]
[56.38199997 -351.10226440]
[44.21504974 -342.28051758]
[30.86913681 -335.37078857]
[16.64241219 -330.52746582]
[19.30820847 -315.76623535]
[21.97400284 -301.00500488]
[24.63979912 -286.24380493]
[34.39519501 -279.09127808]
[36.73692322 -266.81527710]
[29.87385559 -255.89459229]
[32.31958389 -241.09532166]
[34.76531219 -226.29605103]
[37.21103668 -211.49678040]
[39.98664856 -196.75581360]
[43.09075928 -182.08052063]
[46.19487000 -167.40521240]
[49.29898071 -152.72990417]
[52.40309143 -138.05461121]
[55.50719833 -123.37930298]
[58.61130905 -108.70400238]
[61.71541977 -94.02870178]
[78.23487854 -90.48364258]
[91.58657837 -80.04019165]
[99.05450439 -64.76132965]
[99.09270477 -47.69973373]
[91.64511108 -32.28789139]
[78.16651154 -21.64753723]
[81.70618439 -7.07116127]
[85.24585724 7.50521374]
[88.78553009 22.08158875]
[92.32520294 36.65796280]
[102.84735107 47.19996262]
[98.58509827 62.43622971]
[102.12477112 77.01260376]
[105.66444397 91.58898163]
[110.47563934 98.05619812]
[109.14659119 106.40871429]
[119.74824524 118.15245819]
[115.02199554 132.27732849]
[130.06335449 131.89105225]
[144.88630676 134.44596863]
[158.92146301 139.84202576]
[171.63006592 147.87010193]
[182.52468872 158.22007751]
[191.18789673 170.49276733]
[197.28825378 184.21543884]
[200.59301758 198.85989380]
[200.97700500 213.86291504]
[198.42733765 228.64779663]
[193.04382324 242.64663696]
[185.03515625 255.32208252]
[174.71069336 266.18795776]
[162.46862793 274.82797241]
[148.78051758 280.91152954]
[152.10276794 295.53900146]
[162.70442200 307.28274536]
[157.97817993 321.40759277]
[161.30044556 336.03506470]
[164.62269592 350.66250610]
[167.94496155 365.28997803]
[171.26721191 379.91744995]
[174.58947754 394.54489136]
[177.91174316 409.17236328]
[181.23399353 423.79983521]
[184.55625916 438.42727661]
[199.52340698 437.12411499]
[214.52859497 437.87121582]
[229.29228210 440.65460205]
[243.53942871 445.42248535]
[257.00460815 452.08596802]
[269.43701172 460.52099609]
[280.60498047 470.57037354]
[290.30050659 482.04687500]
[298.34295654 494.73675537]
[304.58245850 508.40359497]
[308.90283203 522.79278564]
[311.22360229 537.63623047]
[311.50146484 552.65740967]
[309.73129272 567.57653809]
[305.94604492 582.11566162]
[300.21624756 596.00390625]
[292.64865112 608.98254395]
[283.38421631 620.80981445]
[272.59555054 631.26531982]
[260.48364258 640.15435791]
[247.27409363 647.31134033]
[233.21304321 652.60284424]
[218.56239319 655.93035889]
[203.59510803 657.23193359]
[188.58999634 656.48321533]
[173.82661438 653.69818115]
[159.57998657 648.92883301]
[146.11550903 642.26385498]
[133.68403625 633.82751465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[25 171]
[26 170]
[41 155]
[43 153]
[44 151]
[45 150]
[46 149]
[48 147]
[49 146]
[50 145]
[51 144]
[52 143]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[71 129]
[72 128]
[73 127]
[74 126]
[76 123]
[77 122]
[78 121]
[79 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
