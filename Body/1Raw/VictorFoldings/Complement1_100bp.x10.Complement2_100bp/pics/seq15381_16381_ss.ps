%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[122.28964996 602.68060303]
[110.44306183 593.46343994]
[99.45745850 583.23529053]
[89.41881561 572.07629395]
[80.40569305 560.07379150]
[72.48864746 547.32159424]
[65.72962189 533.91961670]
[60.18153381 519.97271729]
[55.88779449 505.59002686]
[52.88201141 490.88412476]
[51.18770981 475.97015381]
[50.81814957 460.96478271]
[51.77622604 445.98547363]
[54.05443954 431.14947510]
[57.63495636 416.57284546]
[62.48975754 402.36972046]
[68.58084106 388.65127563]
[75.86054230 375.52481079]
[84.27188873 363.09313965]
[93.74903870 351.45349121]
[104.21781921 340.69699097]
[115.59630585 330.90783691]
[127.79544830 322.16262817]
[140.71975708 314.52981567]
[154.26808167 308.06912231]
[168.33439636 302.83114624]
[164.36228943 288.36660767]
[160.39019775 273.90209961]
[156.41810608 259.43756104]
[152.44599915 244.97303772]
[148.47390747 230.50851440]
[144.50181580 216.04399109]
[140.52970886 201.57946777]
[135.17852783 187.56643677]
[128.49833679 174.13606262]
[115.90263367 166.18637085]
[116.68443298 150.38449097]
[110.00424194 136.95411682]
[103.32404327 123.52374268]
[96.64385223 110.09336853]
[88.98325348 97.19704437]
[80.38468933 84.90620422]
[71.78612518 72.61536407]
[63.18756485 60.32452774]
[54.58900070 48.03369141]
[37.72705078 40.63394547]
[36.88800049 23.10503006]
[28.10739708 10.94357395]
[19.32679558 -1.21788168]
[11.76611614 -6.34369421]
[10.50758839 -13.62640667]
[1.90902424 -25.91724396]
[-6.68953991 -38.20808411]
[-15.28810406 -50.49892044]
[-28.38471413 -43.16016006]
[-42.14695740 -37.16188431]
[-56.43805313 -32.56371307]
[-71.11596680 -29.41134453]
[-86.03482056 -27.73610878]
[-101.04634094 -27.55465508]
[-116.00132751 -28.86878777]
[-130.75114441 -31.66544724]
[-145.14921570 -35.91683578]
[-159.05242920 -41.58069992]
[-172.32260132 -48.60074997]
[-184.82785034 -56.90721893]
[-196.44389343 -66.41754150]
[-207.05526733 -77.03720856]
[-216.55651855 -88.66066742]
[-224.85322571 -101.17239380]
[-231.86291504 -114.44804382]
[-237.51593018 -128.35566711]
[-241.75607300 -142.75704956]
[-244.54121399 -157.50904846]
[-245.84367371 -172.46505737]
[-245.65049744 -187.47642517]
[-243.96362305 -202.39396667]
[-240.79980469 -217.06942749]
[-236.19047546 -231.35693359]
[-230.18145752 -245.11448669]
[-222.83247375 -258.20535278]
[-214.21656799 -270.49945068]
[-204.41935730 -281.87457275]
[-193.53822327 -292.21765137]
[-181.68130493 -301.42593384]
[-168.96646118 -309.40786743]
[-155.52003479 -316.08410645]
[-141.47569275 -321.38833618]
[-126.97299194 -325.26782227]
[-112.15608978 -327.68402100]
[-97.17223358 -328.61288452]
[-82.17035675 -328.04519653]
[-67.29955292 -325.98663330]
[-52.70761490 -322.45761108]
[-38.53957367 -317.49322510]
[-24.93623734 -311.14279175]
[-12.03280640 -303.46945190]
[0.04247346 -294.54946899]
[11.16959095 -284.47146606]
[21.23795700 -273.33566284]
[30.14750481 -261.25265503]
[37.80968475 -248.34260559]
[44.14834595 -234.73379517]
[49.10049057 -220.56146240]
[52.61689377 -205.96647644]
[54.66261673 -191.09390259]
[55.21732330 -176.09153748]
[54.27549744 -161.10848999]
[51.84650421 -146.29368591]
[47.95448303 -131.79434204]
[42.63811874 -117.75458527]
[35.95024109 -104.31394196]
[27.95732880 -91.60599518]
[18.73881340 -79.75704193]
[8.38631821 -68.88485718]
[-2.99726582 -59.09748459]
[5.60129833 -46.80664825]
[14.19986248 -34.51580811]
[22.79842567 -22.22496986]
[31.48825073 -9.99848461]
[40.26885223 2.16297102]
[49.04945755 14.32442665]
[60.93740463 16.56122208]
[68.35220337 26.62126923]
[66.87983704 39.43512726]
[75.47840118 51.72596359]
[84.07696533 64.01679993]
[92.67552948 76.30764008]
[101.27409363 88.59848022]
[101.58237457 73.60164642]
[109.26304626 60.71726227]
[122.30838776 53.31327438]
[137.30838013 53.32506561]
[150.34207153 60.74955368]
[158.00247192 73.64599609]
[158.28718567 88.64329529]
[151.12176514 101.82118988]
[138.37927246 109.73500824]
[123.39052582 110.31610870]
[110.07422638 103.41317749]
[116.75442505 116.84355164]
[123.43461609 130.27392578]
[130.11480713 143.70429993]
[143.18832397 152.61462402]
[141.92871094 167.45587158]
[148.60890198 180.88624573]
[149.94781494 165.94612122]
[157.17639160 152.80276489]
[169.07647705 143.67108154]
[183.64271545 140.08988953]
[198.42042542 142.66268921]
[210.91929626 150.95594788]
[219.03306580 163.57206726]
[221.39442444 178.38504028]
[217.60542297 192.89860535]
[208.30459595 204.66696167]
[195.05928040 211.70697021]
[180.10154724 212.83222961]
[165.95202637 207.85311890]
[154.99424744 197.60737610]
[158.96633911 212.07189941]
[162.93843079 226.53642273]
[166.91052246 241.00094604]
[170.88262939 255.46546936]
[174.85472107 269.92999268]
[178.82681274 284.39450073]
[182.79891968 298.85903931]
[197.56756592 296.17868042]
[212.51533508 294.81405640]
[227.52519226 294.77587891]
[242.47970581 296.06445312]
[257.26181030 298.66964722]
[271.75579834 302.57113647]
[285.84826660 307.73834229]
[299.42892456 314.13082886]
[312.39144897 321.69854736]
[324.63439941 330.38232422]
[336.06195068 340.11413574]
[346.58468628 350.81787109]
[356.12023926 362.40969849]
[364.59399414 374.79895020]
[371.93960571 387.88864136]
[378.09957886 401.57629395]
[383.02572632 415.75482178]
[386.67950439 430.31323242]
[389.03225708 445.13760376]
[390.06564331 460.11190796]
[389.77154541 475.11895752]
[388.15225220 490.04125977]
[385.22045898 504.76208496]
[380.99908447 519.16613770]
[375.52117920 533.14080811]
[368.82962036 546.57659912]
[360.97680664 559.36840820]
[352.02413940 571.41613770]
[342.04171753 582.62548828]
[331.10769653 592.90869141]
[319.30758667 602.18530273]
[306.73379517 610.38269043]
[293.48474121 617.43670654]
[279.66406250 623.29223633]
[265.37994385 627.90325928]
[250.74421692 631.23388672]
[235.87138367 633.25793457]
[220.87788391 633.95953369]
[205.88102722 633.33331299]
[190.99821472 631.38409424]
[176.34591675 628.12713623]
[162.03881836 623.58789062]
[148.18887329 617.80200195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 160]
[34 146]
[35 145]
[37 143]
[38 142]
[39 141]
[40 140]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[47 122]
[48 121]
[49 120]
[51 119]
[52 118]
[53 117]
[54 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
