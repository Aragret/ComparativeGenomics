%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[136.32034302 794.83135986]
[122.12987518 789.95458984]
[108.27727509 784.18762207]
[94.81832886 777.55364990]
[81.80723572 770.07946777]
[69.29637909 761.79504395]
[57.33614731 752.73388672]
[45.97468948 742.93231201]
[35.25776291 732.42993164]
[25.22851562 721.26904297]
[15.92733288 709.49444580]
[7.39167023 697.15362549]
[-0.34410366 684.29632568]
[-7.24883938 670.97430420]
[-13.29473400 657.24114990]
[-18.45744133 643.15216064]
[-22.71617508 628.76409912]
[-26.05378532 614.13494873]
[-28.45683289 599.32354736]
[-29.91564178 584.38952637]
[-30.42433548 569.39306641]
[-29.98086929 554.39453125]
[-28.58702660 539.45434570]
[-26.24842072 524.63262939]
[-22.97446823 509.98907471]
[-18.77835274 495.58264160]
[-13.67697048 481.47134399]
[-7.69086218 467.71203613]
[-0.84413278 454.36007690]
[6.83564854 441.46923828]
[15.31755733 429.09143066]
[24.56744003 417.27651978]
[34.54804993 406.07208252]
[45.21920013 395.52316284]
[56.53791809 385.67233276]
[68.45863342 376.55920410]
[80.93333435 368.22048950]
[93.91179657 360.68975830]
[107.34176636 353.99731445]
[121.16915131 348.17013550]
[135.33828735 343.23168945]
[149.79209900 339.20187378]
[146.68798828 324.52655029]
[143.58387756 309.85125732]
[140.47976685 295.17596436]
[137.37565613 280.50064087]
[127.17205811 269.65005493]
[131.88604736 254.54743958]
[128.78193665 239.87213135]
[125.67783356 225.19683838]
[122.57372284 210.52153015]
[119.46961212 195.84622192]
[115.82152557 181.29660034]
[104.83914948 171.23495483]
[108.41680908 155.82357788]
[97.43444061 145.76193237]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[84.42077637 104.65475464]
[88.59729004 88.40874481]
[84.19628906 74.06889343]
[72.75054169 63.14619446]
[76.41314697 48.70892715]
[72.01214600 34.36907959]
[67.61114502 20.02923393]
[56.16539764 9.10653210]
[59.82799911 -5.33073282]
[55.42700195 -19.67057991]
[50.60100174 -33.87303543]
[45.35428619 -47.92550659]
[33.27869797 -58.14757919]
[36.07548523 -72.77725220]
[30.82876587 -86.82971954]
[18.75317764 -97.05179596]
[21.54996300 -111.68146515]
[16.30324554 -125.73393250]
[1.51542890 -122.99685669]
[-13.52301788 -122.86943054]
[-28.35509300 -125.35552216]
[-42.53006744 -130.37959290]
[-55.61717987 -137.78895569]
[-67.21872711 -147.35844421]
[-76.98214722 -158.79727173]
[-84.61074829 -171.75781250]
[-89.87270355 -185.84620667]
[-92.60810089 -200.63433838]
[-92.73382568 -215.67279053]
[-90.24604797 -230.50459290]
[-85.22037506 -244.67900085]
[-77.80953217 -257.76525879]
[-68.23871613 -269.36572266]
[-56.79878616 -279.12783813]
[-43.83738327 -286.75497437]
[-29.74838638 -292.01535034]
[-14.95994949 -294.74905396]
[0.07852579 -294.87307739]
[14.91003704 -292.38360596]
[29.08387184 -287.35635376]
[42.16930008 -279.94400024]
[53.76867676 -270.37188721]
[63.52950287 -258.93084717]
[71.15516663 -245.96856689]
[76.41392517 -231.87898254]
[79.14596558 -217.09024048]
[79.26828003 -202.05174255]
[76.77713776 -187.22052002]
[71.74825287 -173.04725647]
[64.33444214 -159.96266174]
[54.76099777 -148.36437988]
[43.31885147 -138.60484314]
[30.35571671 -130.98065186]
[35.60243607 -116.92818451]
[47.30274200 -107.71123505]
[44.88123703 -92.07643890]
[50.12795639 -78.02397156]
[61.82826233 -68.80702209]
[59.40675735 -53.17222595]
[64.65347290 -39.11975479]
[67.14484406 -37.83476257]
[69.27732849 -35.48548126]
[70.64300537 -32.20365906]
[70.88912201 -28.26615334]
[69.76684570 -24.07157898]
[74.16784668 -9.73173141]
[85.29880524 0.16528827]
[81.95099640 15.62823486]
[86.35198975 29.96808243]
[90.75299072 44.30792999]
[101.88394928 54.20494843]
[98.53614044 69.66789246]
[102.93714142 84.00774384]
[112.87877655 90.07446289]
[116.21287537 101.23354340]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[126.69773865 137.25543213]
[122.82059479 151.63656616]
[134.10244751 162.72845459]
[130.22531128 177.10958862]
[139.62722778 165.42182922]
[154.62696838 165.33259583]
[164.16726685 176.90768433]
[161.21537781 191.61436462]
[147.94732666 198.61141968]
[134.14491272 192.74211121]
[137.24902344 207.41741943]
[140.35313416 222.09272766]
[143.45724487 236.76802063]
[146.56135559 251.44332886]
[156.98698425 263.34359741]
[152.05096436 277.39654541]
[155.15507507 292.07183838]
[158.25918579 306.74716187]
[161.36329651 321.42245483]
[164.46740723 336.09774780]
[179.31504822 333.92977905]
[194.27029419 332.70785522]
[209.27293396 332.43692017]
[224.26254272 333.11804199]
[239.17877197 334.74850464]
[253.96157837 337.32174683]
[268.55139160 340.82739258]
[282.88949585 345.25131226]
[296.91815186 350.57571411]
[310.58087158 356.77914429]
[323.82263184 363.83663940]
[336.59011841 371.71978760]
[348.83193970 380.39682007]
[360.49874878 389.83279419]
[371.54360962 399.98974609]
[381.92205811 410.82675171]
[391.59225464 422.30020142]
[400.51528931 434.36386108]
[408.65524292 446.96914673]
[415.97933960 460.06533813]
[422.45803833 473.59970093]
[428.06533813 487.51770020]
[432.77856445 501.76333618]
[436.57882690 516.27923584]
[439.45074463 531.00689697]
[441.38281250 545.88708496]
[442.36721802 560.85980225]
[442.39999390 575.86486816]
[441.48104858 590.84179688]
[439.61404419 605.73028564]
[436.80651855 620.47033691]
[433.06976318 635.00268555]
[428.41882324 649.26879883]
[422.87243652 663.21118164]
[416.45291138 676.77374268]
[409.18615723 689.90179443]
[401.10137939 702.54254150]
[392.23114014 714.64508057]
[382.61117554 726.16070557]
[372.28021240 737.04296875]
[361.27984619 747.24810791]
[349.65438843 756.73498535]
[337.45062256 765.46545410]
[324.71771240 773.40429688]
[311.50692749 780.51959229]
[297.87145996 786.78271484]
[283.86621094 792.16833496]
[269.54754639 796.65490723]
[254.97319031 800.22430420]
[240.20179749 802.86212158]
[225.29283142 804.55773926]
[210.30633545 805.30438232]
[195.30265808 805.09906006]
[180.34220886 803.94250488]
[165.48522949 801.83941650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[53 139]
[55 137]
[57 135]
[58 134]
[60 131]
[61 130]
[63 128]
[64 127]
[65 126]
[67 124]
[68 123]
[69 118]
[70 117]
[72 115]
[73 114]
[75 112]
[76 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
