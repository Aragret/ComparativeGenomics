%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[150.11492920 591.09320068]
[139.86917114 580.12969971]
[130.38693237 568.49957275]
[121.71147156 556.25579834]
[113.88239288 543.45434570]
[106.93539429 530.15350342]
[100.90219116 516.41400146]
[95.81029510 502.29858398]
[91.68296051 487.87158203]
[88.53900146 473.19888306]
[86.39277649 458.34738159]
[85.25406647 443.38488770]
[85.12807465 428.37963867]
[86.01537323 413.40014648]
[87.91191864 398.51470947]
[90.80904388 383.79129028]
[94.69355011 369.29702759]
[99.54769897 355.09805298]
[105.34934235 341.25921631]
[112.07200623 327.84359741]
[119.68502808 314.91244507]
[128.15367126 302.52474976]
[137.43927002 290.73703003]
[147.49949646 279.60305786]
[158.28840637 269.17367554]
[169.75679016 259.49642944]
[181.85234070 250.61549377]
[173.81115723 237.95297241]
[165.76998901 225.29045105]
[157.72882080 212.62792969]
[149.68763733 199.96539307]
[141.64646912 187.30287170]
[138.30340576 186.18205261]
[135.33711243 183.38630676]
[133.52893066 179.11035156]
[133.54365540 173.89050293]
[120.49710846 166.70462036]
[120.33698273 150.88421631]
[112.86923981 137.87525940]
[105.40149689 124.86631012]
[97.93375397 111.85736084]
[98.17448425 126.85543060]
[93.33650970 141.05380249]
[83.98818207 152.78448486]
[71.22774506 160.66935730]
[56.55427551 163.78211975]
[41.69159698 161.75706482]
[28.38576317 154.83212280]
[18.19993401 143.82081604]
[12.33072472 130.01675415]
[11.46764851 115.04160309]
[15.71209717 100.65464020]
[24.56543541 88.54603577]
[36.98758698 80.13828278]
[51.51920319 76.41913605]
[66.45313263 77.82550049]
[80.03494263 84.19216156]
[90.66996765 94.77245331]
[86.48295593 80.36867523]
[72.89829254 67.93732452]
[77.74349213 51.07046127]
[73.34249115 36.73061371]
[68.94149017 22.39076614]
[64.54049683 8.05091953]
[62.09225082 22.84977341]
[56.08739090 36.59537888]
[46.89311600 48.44718552]
[35.07166290 57.68045044]
[21.34591103 63.73056030]
[6.55520248 66.22753906]
[-8.39600849 65.01870728]
[-22.59345055 60.17797852]
[-35.16894150 52.00136566]
[-45.35348892 40.98887253]
[-52.52430344 27.81391716]
[-56.24288177 13.28215408]
[-56.28183746 -1.71779513]
[-52.63878632 -16.26867676]
[-45.53650284 -29.48070145]
[-35.40929413 -40.54594421]
[-22.87644005 -48.78776550]
[-8.70433331 -53.70217133]
[6.24039793 -54.98864746]
[21.04387665 -52.56852341]
[34.80086517 -46.58978653]
[46.67012024 -37.41804886]
[55.92582703 -25.61415672]
[62.00201035 -11.89989948]
[62.67179489 -26.88493729]
[63.34157944 -41.86997604]
[64.01136780 -56.85501480]
[64.68115234 -71.84005737]
[65.35093689 -86.82509613]
[66.02072144 -101.81013489]
[66.69050598 -116.79517365]
[52.26213074 -121.18524933]
[39.37924194 -129.02629089]
[28.85167313 -139.82542419]
[21.34119606 -152.90377808]
[17.31992340 -167.43925476]
[17.04063606 -182.51814270]
[20.52089119 -197.19256592]
[27.54191780 -210.54008484]
[37.66236496 -221.72163391]
[50.24605560 -230.03437805]
[64.50196838 -234.95573425]
[79.53396606 -236.17634583]
[94.39711761 -233.61950684]
[108.15712738 -227.44592285]
[119.94901276 -218.04368591]
[129.03153992 -206.00379944]
[134.83375549 -192.08312988]
[136.99095154 -177.15673828]
[135.36749268 -162.16290283]
[130.06547546 -148.04414368]
[121.41814423 -135.68798828]
[109.96910858 -125.87114716]
[96.43804932 -119.21071625]
[81.67554474 -116.12538910]
[81.00576019 -101.14035034]
[80.33597565 -86.15531158]
[79.66619110 -71.17027283]
[78.99640656 -56.18523026]
[78.32662201 -41.20019150]
[77.65683746 -26.21515274]
[76.98705292 -11.23011398]
[78.88034058 3.64992118]
[83.28134155 17.98976898]
[87.68233490 32.32961655]
[92.08333588 46.66946411]
[102.61955261 52.61207581]
[106.40345764 64.52281952]
[100.88673401 76.18166351]
[105.07374573 90.58544159]
[110.94271088 104.38961792]
[118.41044617 117.39857483]
[125.87818909 130.40753174]
[133.34593201 143.41647339]
[146.92662048 151.53285217]
[146.55259705 166.42276001]
[154.30899048 179.26170349]
[162.35017395 191.92422485]
[170.39134216 204.58674622]
[178.43251038 217.24928284]
[186.47369385 229.91180420]
[194.51486206 242.57432556]
[207.69631958 235.40342712]
[221.33183289 229.13876343]
[235.35914612 223.80891418]
[249.71429443 219.43821716]
[264.33172607 216.04661560]
[279.14480591 213.64956665]
[294.08590698 212.25802612]
[309.08688354 211.87832642]
[324.07925415 212.51220703]
[338.99462891 214.15678406]
[353.76492310 216.80453491]
[368.32281494 220.44340515]
[382.60180664 225.05676270]
[396.53677368 230.62358093]
[410.06414795 237.11843872]
[423.12219238 244.51171875]
[435.65130615 252.76968384]
[447.59436035 261.85464478]
[458.89685059 271.72515869]
[469.50717163 282.33618164]
[479.37695312 293.63928223]
[488.46112061 305.58294678]
[496.71826172 318.11260986]
[504.11068726 331.17111206]
[510.60467529 344.69891357]
[516.17059326 358.63424683]
[520.78302002 372.91354370]
[524.42089844 387.47167969]
[527.06774902 402.24215698]
[528.71130371 417.15762329]
[529.34423828 432.15005493]
[528.96356201 447.15097046]
[527.57104492 462.09197998]
[525.17303467 476.90490723]
[521.78045654 491.52212524]
[517.40881348 505.87698364]
[512.07806396 519.90399170]
[505.81250000 533.53906250]
[498.64074707 546.72003174]
[490.59548950 559.38684082]
[481.71347046 571.48156738]
[472.03518677 582.94903564]
[461.60479736 593.73699951]
[450.46990967 603.79620361]
[438.68136597 613.08074951]
[426.29287720 621.54827881]
[413.36102295 629.16009521]
[399.94479370 635.88153076]
[386.10540771 641.68194580]
[371.90603638 646.53479004]
[357.41140747 650.41796875]
[342.68771362 653.31372070]
[327.80209351 655.20892334]
[312.82250977 656.09484863]
[297.81729126 655.96752930]
[282.85488892 654.82745361]
[268.00360107 652.67987061]
[253.33117676 649.53454590]
[238.90457153 645.40588379]
[224.78959656 640.31274414]
[211.05065918 634.27825928]
[197.75045776 627.33007812]
[184.94967651 619.49981689]
[172.70672607 610.82324219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[36 140]
[38 138]
[39 137]
[40 136]
[41 135]
[58 134]
[59 133]
[61 130]
[62 129]
[63 128]
[64 127]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
