%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[140.74017334 578.40557861]
[131.59324646 566.50708008]
[123.42057800 553.91949463]
[116.27383423 540.72235107]
[110.19820404 526.99914551]
[105.23210144 512.83660889]
[101.40692139 498.32424927]
[98.74684906 483.55389404]
[97.26869965 468.61883545]
[96.98182678 453.61358643]
[97.88803864 438.63296509]
[99.98160553 423.77172852]
[103.24929047 409.12377930]
[107.67043304 394.78173828]
[113.21708679 380.83633423]
[119.85417938 367.37567139]
[127.53974915 354.48489380]
[136.22520447 342.24551392]
[145.85563660 330.73486328]
[156.37014771 320.02572632]
[167.70227051 310.18585205]
[179.78034973 301.27743530]
[192.52803040 293.35678101]
[185.64862061 280.02737427]
[172.93595886 272.26608276]
[173.48240662 256.45431519]
[158.22554016 247.78280640]
[159.24642944 229.39695740]
[152.16931152 216.17143250]
[145.09220886 202.94590759]
[138.01510620 189.72038269]
[130.93800354 176.49485779]
[123.86089325 163.26933289]
[116.78379059 150.04379272]
[112.55368042 147.82676697]
[109.67138672 142.92886353]
[109.69953156 136.31745911]
[103.01933289 122.88708496]
[96.33914185 109.45671082]
[90.21504974 104.21570587]
[89.66114044 95.77627563]
[83.18164825 82.24792480]
[70.24224854 73.14395142]
[71.72268677 58.32310104]
[64.94269562 44.94282532]
[57.86558533 31.71729851]
[50.78848267 18.49177170]
[43.71137619 5.26624346]
[38.30611801 1.45904779]
[35.98362350 -3.72776508]
[36.62711334 -8.46009636]
[29.94692039 -21.89047241]
[23.26672554 -35.32084656]
[10.19321346 -44.23117065]
[11.45282650 -59.07241821]
[4.77263165 -72.50279236]
[-1.90756273 -85.93317413]
[-15.91468620 -80.53549194]
[-30.36571312 -76.47319031]
[-45.13364410 -73.78196716]
[-60.08869553 -72.48548126]
[-75.09944153 -72.59511566]
[-90.03395844 -74.10991669]
[-104.76100922 -77.01656342]
[-119.15115356 -81.28952026]
[-133.07794189 -86.89122772]
[-146.41896057 -93.77246094]
[-159.05700684 -101.87274170]
[-170.88096619 -111.12089539]
[-181.78695679 -121.43563080]
[-191.67913818 -132.72630310]
[-200.47055054 -144.89370728]
[-208.08395386 -157.83087158]
[-214.45243835 -171.42414856]
[-219.52001953 -185.55404663]
[-223.24217224 -200.09640503]
[-225.58619690 -214.92340088]
[-226.53147888 -229.90475464]
[-226.06971741 -244.90879822]
[-224.20497131 -259.80368042]
[-220.95361328 -274.45846558]
[-216.34423828 -288.74441528]
[-210.41734314 -302.53594971]
[-203.22502136 -315.71185303]
[-194.83047485 -328.15637207]
[-185.30747986 -339.76013184]
[-174.73973083 -350.42114258]
[-163.22009277 -360.04571533]
[-150.84979248 -368.54925537]
[-137.73756409 -375.85705566]
[-123.99862671 -381.90487671]
[-109.75373077 -386.63958740]
[-95.12805939 -390.01953125]
[-80.25014496 -392.01507568]
[-65.25074005 -392.60864258]
[-50.26166153 -391.79498291]
[-35.41463852 -389.58132935]
[-20.84014702 -385.98706055]
[-6.66627455 -381.04379272]
[6.98241758 -374.79498291]
[19.98598099 -367.29553223]
[32.23013687 -358.61135864]
[43.60728073 -348.81875610]
[54.01742935 -338.00378418]
[63.36909485 -326.26153564]
[71.58009338 -313.69512939]
[78.57826233 -300.41506958]
[84.30210114 -286.53805542]
[88.70130920 -272.18597412]
[91.73722839 -257.48504639]
[93.38316345 -242.56440735]
[93.62467194 -227.55520630]
[92.45960999 -212.58934021]
[89.89823151 -197.79833984]
[85.96304321 -183.31217957]
[80.68862152 -169.25817871]
[74.12132263 -155.75984192]
[66.31887054 -142.93579102]
[57.34981918 -130.89874268]
[47.29300308 -119.75447083]
[36.23679733 -109.60090637]
[24.27836990 -100.52729034]
[11.52281284 -92.61336517]
[18.20300865 -79.18299103]
[24.88320160 -65.75261688]
[37.47890472 -57.80292130]
[36.69710159 -42.00104141]
[43.37729645 -28.57066727]
[50.05749130 -15.14029121]
[56.93690491 -1.81086183]
[64.01400757 11.41466618]
[71.09111786 24.64019394]
[78.16822052 37.86572266]
[81.41866302 39.23207855]
[84.16879272 42.24070740]
[85.65393829 46.63930130]
[85.25102997 51.84360504]
[97.72697449 59.97994614]
[96.70999146 75.76843262]
[103.18949127 89.29677582]
[109.76951599 102.77651215]
[116.44971466 116.20688629]
[123.12990570 129.63726807]
[130.00932312 142.96669006]
[137.08642578 156.19221497]
[144.16352844 169.41775513]
[151.24063110 182.64328003]
[158.31773376 195.86880493]
[165.39485168 209.09432983]
[172.47195435 222.31985474]
[184.56765747 226.79833984]
[190.18991089 237.95960999]
[186.81182861 249.57490540]
[200.01655579 258.28958130]
[198.97804260 273.14794922]
[205.85746765 286.47738647]
[219.69857788 280.67535400]
[233.95692444 275.99136353]
[248.54234314 272.45501709]
[263.36260986 270.08868408]
[278.32403564 268.90728760]
[293.33203125 268.91833496]
[308.29171753 270.12173462]
[323.10848999 272.50988770]
[337.68869019 276.06771851]
[351.94012451 280.77267456]
[365.77267456 286.59506226]
[379.09893799 293.49804688]
[391.83459473 301.43798828]
[403.89920044 310.36468506]
[415.21640015 320.22171021]
[425.71469116 330.94674683]
[435.32766724 342.47195435]
[443.99456787 354.72448730]
[451.66061401 367.62689209]
[458.27731323 381.09756470]
[463.80285645 395.05136108]
[468.20227051 409.40008545]
[471.44778442 424.05294800]
[473.51882935 438.91735840]
[474.40237427 453.89932251]
[474.09277344 468.90414429]
[472.59201050 483.83691406]
[469.90957642 498.60324097]
[466.06243896 513.10980225]
[461.07489014 527.26483154]
[454.97848511 540.97882080]
[447.81176758 554.16510010]
[439.62005615 566.74029541]
[430.45510864 578.62493896]
[420.37490845 589.74377441]
[409.44317627 600.02667236]
[397.72900391 609.40844727]
[385.30648804 617.82995605]
[372.25411987 625.23779297]
[358.65447998 631.58520508]
[344.59353638 636.83209229]
[330.16015625 640.94519043]
[315.44561768 643.89855957]
[300.54293823 645.67352295]
[285.54635620 646.25885010]
[270.55068970 645.65081787]
[255.65071106 643.85327148]
[240.94065857 640.87762451]
[226.51351929 636.74267578]
[212.46052551 631.47454834]
[198.87051392 625.10650635]
[185.82939148 617.67889404]
[173.41963196 609.23864746]
[161.71969604 599.83911133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 156]
[24 155]
[26 153]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[37 143]
[38 142]
[39 141]
[41 140]
[42 139]
[44 137]
[45 133]
[46 132]
[47 131]
[48 130]
[51 129]
[52 128]
[53 127]
[55 125]
[56 124]
[57 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
