%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[90.82443237 746.19610596]
[77.06246948 740.20532227]
[63.86645126 733.05364990]
[51.33407974 724.79400635]
[39.55814743 715.48760986]
[28.62583351 705.20336914]
[18.61808205 694.01739502]
[9.60898876 682.01251221]
[1.66525328 669.27752686]
[-5.15431023 655.90686035]
[-10.79921055 641.99945068]
[-15.22765541 627.65826416]
[-18.40685654 612.98944092]
[-20.31327629 598.10162354]
[-20.93280029 583.10504150]
[-20.26083946 568.11071777]
[-18.30237198 553.22961426]
[-15.07189655 538.57202148]
[-10.59333134 524.24639893]
[-4.89983320 510.35879517]
[1.96644294 497.01205444]
[9.95466137 484.30496216]
[19.00567818 472.33163452]
[29.05248451 461.18072510]
[40.02069092 450.93475342]
[51.82909775 441.66958618]
[64.39027405 433.45385742]
[77.61122131 426.34835815]
[91.39405060 420.40573120]
[105.63671875 415.66992188]
[120.23377991 412.17602539]
[118.00865936 397.34197998]
[115.78354645 382.50793457]
[113.55842590 367.67388916]
[110.89263153 352.91268921]
[107.78852081 338.23739624]
[104.68441010 323.56207275]
[101.58029938 308.88677979]
[98.13718414 305.57708740]
[96.73662567 300.06933594]
[98.60911560 293.72857666]
[95.94332123 278.96734619]
[93.27752686 264.20614624]
[90.61173248 249.44491577]
[85.40995789 263.51409912]
[75.27664185 274.57373047]
[61.71498489 280.98324585]
[46.73679352 281.79174805]
[32.56398392 276.87936401]
[21.29901123 266.97482300]
[14.61296558 253.54734802]
[13.49768448 238.58886719]
[18.11861038 224.31837463]
[27.79026031 212.85281372]
[41.07789612 205.89302063]
[56.01038361 204.47145081]
[70.37257385 208.79898071]
[82.03392029 218.23365784]
[89.26394653 231.37406921]
[89.71055603 216.38072205]
[82.35562134 203.42871094]
[90.50037384 189.86503601]
[90.94698334 174.87168884]
[91.39358521 159.87832642]
[82.25490570 144.89663696]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[83.74071503 99.87895203]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[92.50000000 55.57332230]
[84.76270294 41.77314758]
[92.50000000 29.04587746]
[89.37059021 20.46423340]
[92.61332703 13.82296467]
[92.83665466 -1.17537248]
[93.05998230 -16.17370987]
[93.28330994 -31.17204666]
[93.50663757 -46.17038345]
[93.72996521 -61.16872025]
[93.95329285 -76.16706085]
[86.42231750 -90.08090210]
[94.34825134 -102.69156647]
[94.57157898 -117.68990326]
[94.79490662 -132.68823242]
[85.45546722 -148.55822754]
[95.03615570 -163.26118469]
[95.03615570 -178.26118469]
[78.74314117 -186.94247437]
[69.15679169 -202.62025452]
[68.85736847 -220.90905762]
[77.84136963 -236.74417114]
[93.54637909 -245.78424072]
[92.87659454 -260.76928711]
[92.20681000 -275.75433350]
[91.53702545 -290.73934937]
[90.86724091 -305.72439575]
[76.67685699 -311.25186157]
[65.96612549 -322.07775879]
[60.59075928 -336.32647705]
[61.48205948 -351.52926636]
[68.48561096 -365.05221558]
[80.38800812 -374.55236816]
[95.12707520 -378.38378906]
[110.14920044 -375.88259888]
[122.85169220 -367.48220825]
[131.03376770 -354.63803101]
[133.27784729 -339.57534790]
[129.19511414 -324.90390015]
[119.49294281 -313.16561890]
[105.85227966 -306.39419556]
[106.52206421 -291.40914917]
[107.19184875 -276.42410278]
[107.86163330 -261.43905640]
[108.53141785 -246.45402527]
[119.63809204 -242.53921509]
[128.80107117 -235.08670044]
[134.93237305 -224.95130920]
[137.29383850 -213.30813599]
[135.58601379 -201.51632690]
[129.98582458 -190.96041870]
[121.12863159 -182.88777161]
[110.03615570 -178.26118469]
[110.03615570 -163.26118469]
[118.36511230 -154.48878479]
[118.48787689 -141.99203491]
[109.79324341 -132.46490479]
[109.56991577 -117.46657562]
[109.34658813 -102.46823883]
[116.89353943 -89.62717438]
[108.95162964 -75.94373322]
[108.72830200 -60.94539261]
[108.50497437 -45.94705582]
[108.28164673 -30.94871902]
[108.05831909 -15.95038223]
[107.83499146 -0.95204473]
[107.61166382 14.04629230]
[107.50000000 29.04587746]
[115.23729706 41.77314758]
[107.50000000 55.57332230]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[115.22412872 94.28992462]
[115.13742828 105.93611145]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[115.46817017 139.31686401]
[114.97338867 151.80441284]
[106.38693237 160.32493591]
[105.94033051 175.31828308]
[105.49372101 190.31164551]
[112.81671143 204.33605957]
[104.70390320 216.82731628]
[104.25729370 231.82067871]
[105.37294769 246.77912903]
[108.03874207 261.54034424]
[110.70453644 276.30157471]
[113.37033081 291.06277466]
[116.25560760 305.78265381]
[119.35971832 320.45797729]
[122.46382904 335.13327026]
[125.56793213 349.80856323]
[128.58332825 352.93289185]
[130.27729797 356.49591064]
[130.67420959 360.02828979]
[129.94830322 363.11694336]
[128.39247131 365.44879150]
[130.61758423 380.28283691]
[132.84271240 395.11688232]
[135.06782532 409.95092773]
[150.04757690 409.00827026]
[165.05290222 409.35684204]
[179.97271729 410.99407959]
[194.69656372 413.90780640]
[209.11541748 418.07653809]
[223.12251282 423.46932983]
[236.61418152 430.04629517]
[249.49050903 437.75875854]
[261.65615845 446.54956055]
[273.02105713 456.35363770]
[283.50109863 467.09844971]
[293.01864624 478.70437622]
[301.50323486 491.08554077]
[308.89208984 504.15023804]
[315.13046265 517.80175781]
[320.17218018 531.93902588]
[323.97991943 546.45739746]
[326.52548218 561.24932861]
[327.79003906 576.20532227]
[327.76419067 591.21472168]
[326.44815063 606.16625977]
[323.85168457 620.94934082]
[319.99398804 635.45452881]
[314.90362549 649.57434082]
[308.61828613 663.20428467]
[301.18447876 676.24346924]
[292.65731812 688.59533691]
[283.09985352 700.16845703]
[272.58291626 710.87713623]
[261.18429565 720.64202881]
[248.98846436 729.39086914]
[236.08566284 737.05895996]
[222.57142639 743.58941650]
[208.54583740 748.93395996]
[194.11271667 753.05303955]
[179.37893677 755.91607666]
[164.45356750 757.50189209]
[149.44712830 757.79882812]
[134.47071838 756.80462646]
[119.63521576 754.52661133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 170]
[32 169]
[33 168]
[34 167]
[35 162]
[36 161]
[37 160]
[38 159]
[41 158]
[42 157]
[43 156]
[44 155]
[59 154]
[60 153]
[62 151]
[63 150]
[64 149]
[66 146]
[67 145]
[69 142]
[70 141]
[71 140]
[73 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
[83 129]
[84 128]
[85 127]
[87 124]
[88 123]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
