%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[133.80535889 575.25457764]
[131.51608276 560.40515137]
[131.31579590 545.38165283]
[133.20840454 530.47650146]
[137.15705872 515.97979736]
[143.08491516 502.17373657]
[150.87658691 489.32711792]
[160.38038635 477.68994141]
[171.41133118 467.48873901]
[183.75469971 458.92208862]
[197.17022705 452.15673828]
[192.34422302 437.95428467]
[187.51821899 423.75183105]
[172.88238525 420.98452759]
[161.52120972 411.19784546]
[156.55126953 396.94421387]
[159.40184021 382.01867676]
[169.40574646 370.44848633]
[164.57974243 356.24603271]
[159.75373840 342.04357910]
[154.92774963 327.84112549]
[143.50704956 318.27990723]
[146.39299011 302.72415161]
[141.56698608 288.52169800]
[136.74099731 274.31924438]
[131.91499329 260.11679077]
[124.33058167 273.05804443]
[109.85216522 276.97918701]
[96.77362823 269.63400269]
[92.58696747 255.23011780]
[99.69047546 242.01875305]
[114.01495361 237.56797791]
[127.35406494 244.42666626]
[123.81439209 229.85029602]
[120.27471924 215.27392578]
[116.73504639 200.69754028]
[113.19537354 186.12117004]
[109.65570068 171.54479980]
[106.11602783 156.96841431]
[91.16699982 156.61080933]
[76.81960297 152.39729309]
[64.05110168 144.61482239]
[53.73117447 133.79351807]
[46.56275558 120.67044067]
[43.03409958 106.13944244]
[43.38555908 91.19026184]
[47.59318924 76.84114075]
[55.37040329 64.06943512]
[66.18746185 53.74506760]
[79.30759430 46.57125473]
[75.76792145 31.99488068]
[72.22824860 17.41850471]
[68.68857574 2.84212923]
[65.14890289 -11.73424625]
[61.28459930 -26.22793961]
[57.09758759 -40.63172150]
[52.91057968 -55.03550339]
[48.72356796 -69.43928528]
[34.27379990 -74.77880096]
[25.83741951 -87.45479584]
[26.47524643 -102.48999786]
[35.73328400 -114.12729645]
[31.54627228 -128.53108215]
[27.35926247 -142.93486023]
[23.17225075 -157.33863831]
[18.98523903 -171.74241638]
[6.51300478 -176.82749939]
[-0.64874411 -188.00424194]
[-0.07408656 -201.07145691]
[7.80333853 -211.26829529]
[3.83124256 -225.73281860]
[-0.14085369 -240.19734192]
[-4.11294985 -254.66186523]
[-18.99361610 -252.60742188]
[-34.01513672 -252.51290894]
[-48.92047501 -254.37998962]
[-63.45457840 -258.17666626]
[-77.36875153 -263.83801270]
[-90.42490387 -271.26715088]
[-102.39962769 -280.33691406]
[-113.08802032 -290.89218140]
[-122.30718231 -302.75228882]
[-129.89936829 -315.71429443]
[-135.73468018 -329.55639648]
[-139.71324158 -344.04177856]
[-141.76698303 -358.92254639]
[-141.86077881 -373.94406128]
[-139.99299622 -388.84930420]
[-136.19561768 -403.38323975]
[-130.53361511 -417.29714966]
[-123.10385895 -430.35293579]
[-114.03350830 -442.32723999]
[-103.47774506 -453.01513672]
[-91.61721039 -462.23373413]
[-78.65483856 -469.82528687]
[-64.81243896 -475.65994263]
[-50.32687759 -479.63781738]
[-35.44601440 -481.69085693]
[-20.42448616 -481.78393555]
[-5.51932621 -479.91543579]
[9.01441574 -476.11737061]
[22.92804909 -470.45471191]
[35.98349380 -463.02432251]
[47.95735550 -453.95339966]
[58.64474106 -443.39712524]
[67.86277771 -431.53616333]
[75.45373535 -418.57342529]
[81.28771973 -404.73074341]
[85.26490021 -390.24499512]
[87.31723022 -375.36404419]
[87.40959167 -360.34249878]
[85.54039001 -345.43743896]
[81.74163055 -330.90386963]
[76.07830048 -316.99050903]
[68.64730835 -303.93542480]
[59.57581329 -291.96197510]
[49.01903534 -281.27511597]
[37.15761948 -272.05764771]
[24.19452667 -264.46728516]
[10.35157394 -258.63397217]
[14.32367039 -244.16944885]
[18.29576683 -229.70492554]
[22.26786232 -215.24040222]
[37.22648621 -207.55415344]
[42.09357452 -191.10342407]
[33.38902283 -175.92942810]
[37.57603073 -161.52565002]
[41.76304245 -147.12187195]
[45.95005417 -132.71809387]
[50.13706589 -118.31430817]
[64.19091034 -113.45349884]
[72.78938293 -101.10318756]
[72.46298218 -85.87995148]
[63.12734985 -73.62629700]
[67.31436157 -59.22251511]
[71.50137329 -44.81873322]
[75.68838501 -30.41495132]
[78.58571625 -28.40551949]
[80.65370178 -24.89290428]
[81.19644928 -20.28218651]
[79.72528076 -15.27391815]
[83.26495361 -0.69754314]
[86.80462646 13.87883186]
[90.34429932 28.45520782]
[93.88397217 43.03158188]
[108.83300018 43.38918304]
[123.18039703 47.60271454]
[135.94889832 55.38517380]
[146.26882935 66.20647430]
[153.43724060 79.32955933]
[156.96589661 93.86055756]
[156.61444092 108.80973816]
[152.40681458 123.15885925]
[144.62959290 135.93055725]
[133.81253052 146.25492859]
[120.69240570 153.42874146]
[124.23207855 168.00512695]
[127.77175140 182.58149719]
[131.31141663 197.15786743]
[134.85108948 211.73425293]
[138.39076233 226.31062317]
[141.93043518 240.88699341]
[146.11744690 255.29077148]
[150.94345093 269.49322510]
[155.76943970 283.69567871]
[160.59544373 297.89813232]
[172.36132812 308.47521973]
[169.13020325 323.01513672]
[173.95620728 337.21759033]
[178.78219604 351.42004395]
[183.60820007 365.62249756]
[198.59022522 368.70245361]
[209.94407654 378.80130005]
[214.68710327 393.13204956]
[211.64054871 407.81451416]
[201.72068787 418.92584229]
[206.54667664 433.12829590]
[211.37268066 447.33074951]
[226.13265991 444.52203369]
[241.13990784 443.79495239]
[256.10229492 445.16360474]
[270.72857666 448.60137939]
[284.73403931 454.04135132]
[297.84603882 461.37762451]
[309.80941772 470.46740723]
[320.39123535 481.13378906]
[329.38552856 493.16909790]
[336.61724854 506.33908081]
[341.94561768 520.38739014]
[345.26687622 535.04052734]
[346.51644897 550.01330566]
[345.66995239 565.01434326]
[342.74389648 579.75146484]
[337.79519653 593.93798828]
[330.92025757 607.29766846]
[322.25280762 619.57049561]
[311.96163940 630.51751709]
[300.24700928 639.92572021]
[287.33700562 647.61193848]
[273.48291016 653.42651367]
[258.95434570 657.25634766]
[244.03417969 659.02685547]
[229.01281738 658.70355225]
[214.18263245 656.29272461]
[199.83232117 651.84136963]
[186.24121094 645.43609619]
[173.67385864 637.20153809]
[162.37489319 627.29803467]
[152.56423950 615.91833496]
[144.43287659 603.28399658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 178]
[12 177]
[13 176]
[18 171]
[19 170]
[20 169]
[21 168]
[23 166]
[24 165]
[25 164]
[26 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 137]
[56 136]
[57 135]
[58 134]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[70 123]
[71 122]
[72 121]
[73 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
