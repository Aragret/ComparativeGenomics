%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[81.94142914 669.31243896]
[69.04682159 661.60046387]
[57.35105896 652.16882324]
[47.08179855 641.20123291]
[38.43894196 628.91107178]
[31.59071732 615.53765869]
[26.67042923 601.34130859]
[23.77385521 586.59832764]
[22.95737648 571.59564209]
[24.23688698 556.62542725]
[27.58747673 541.97888184]
[32.94393158 527.94128418]
[40.20198059 514.78582764]
[49.22034836 502.76852417]
[59.82348633 492.12335205]
[71.80500031 483.05752563]
[84.93167877 475.74749756]
[98.94799042 470.33554077]
[113.58110809 466.92703247]
[112.24287415 451.98684692]
[110.90464020 437.04666138]
[107.87920380 433.35128784]
[107.14306641 427.71612549]
[109.75576782 421.64279175]
[108.86295319 406.66940308]
[107.97013855 391.69598389]
[107.07732391 376.72256470]
[104.16325378 372.93875122]
[103.59522247 367.28417969]
[106.38759613 361.29132080]
[105.94098663 346.29797363]
[105.49438477 331.30462646]
[105.04777527 316.31127930]
[104.60117340 301.31793213]
[104.15456390 286.32458496]
[103.70795441 271.33123779]
[91.67875671 280.29217529]
[77.13461304 276.62231445]
[70.79692078 263.02694702]
[77.33760071 249.52809143]
[91.93509674 246.07656860]
[103.82793427 255.21525574]
[104.49771881 240.23020935]
[105.16750336 225.24517822]
[105.83728790 210.26013184]
[106.50708008 195.27510071]
[107.17686462 180.29005432]
[107.84664917 165.30502319]
[106.17510223 150.39845276]
[102.20301056 135.93392944]
[98.23091125 121.46939850]
[94.25881958 107.00487518]
[91.21127319 104.64164734]
[89.22020721 100.94657898]
[88.85706329 96.42163086]
[90.44779205 91.80541992]
[87.12553406 77.17795563]
[83.80327606 62.55049896]
[79.83117676 48.08597565]
[75.21717072 33.81324005]
[70.60315704 19.54050827]
[65.98915100 5.26777506]
[61.37514114 -9.00495815]
[56.76113129 -23.27769089]
[54.28201294 -8.48397732]
[47.60622787 4.94859028]
[37.31129456 15.85795975]
[24.28783035 23.30036354]
[9.66249275 26.63195610]
[-5.29947901 25.56452179]
[-19.30372429 20.19040680]
[-31.13873672 10.97452450]
[-39.78066635 -1.28585958]
[-44.48190689 -15.53009892]
[-44.83574677 -30.52592468]
[-40.81157684 -44.97604752]
[-32.75753021 -57.63039017]
[-21.37036133 -67.39421844]
[-7.63517475 -73.42287445]
[7.25979900 -75.19480896]
[22.02599525 -72.55673218]
[35.38599014 -65.73686981]
[46.18401337 -55.32521057]
[53.48468399 -42.22574997]
[53.03807831 -57.21909714]
[52.59147263 -72.21244812]
[40.56227112 -63.25151443]
[26.01812363 -66.92136383]
[19.68043518 -80.51672363]
[26.22111130 -94.01559448]
[40.81861115 -97.46711731]
[52.71144867 -88.32842255]
[45.59807587 -102.46031952]
[53.89596176 -114.82940674]
[54.56574631 -129.81445312]
[55.23553085 -144.79948425]
[40.89149475 -149.50599670]
[28.34981346 -157.90888977]
[18.54116631 -169.38465881]
[12.19341660 -183.08168030]
[9.77761269 -197.98358154]
[11.47302246 -212.98451233]
[17.15383530 -226.97132874]
[26.39849472 -238.90609741]
[38.52098846 -247.90319824]
[52.62174606 -253.29496765]
[67.65439606 -254.68132019]
[82.50342560 -251.95935059]
[96.06692505 -245.33106995]
[107.33839417 -235.28834534]
[115.48142242 -222.57638550]
[119.89173889 -208.13853455]
[120.24207306 -193.04615784]
[116.50641632 -178.41921997]
[108.96199036 -165.34312439]
[98.16864014 -154.78820801]
[84.92729950 -147.53771973]
[70.22057343 -144.12969971]
[69.55078888 -129.14466858]
[68.88099670 -114.15962219]
[76.04228210 -101.09955597]
[67.69648743 -87.65863800]
[67.58482361 -72.65905762]
[68.03142548 -57.66570282]
[68.47803497 -42.67235565]
[71.03386688 -27.89170074]
[75.64787292 -13.61896801]
[80.26188660 0.65376586]
[84.87589264 14.92649937]
[89.48989868 29.19923210]
[94.10391235 43.47196579]
[101.88015747 30.64504242]
[116.41535187 26.93989754]
[129.38307190 34.47900772]
[133.35482788 48.94362640]
[126.05540466 62.04776382]
[111.66625214 66.28477478]
[98.43073273 59.22824097]
[101.75299072 73.85569763]
[105.07525635 88.48316193]
[108.72334290 103.03278351]
[112.69543457 117.49730682]
[116.66753387 131.96182251]
[120.63963318 146.42634583]
[123.62232971 131.72589111]
[130.41134644 118.35018921]
[140.51655579 107.26485443]
[153.20845032 99.27013397]
[167.57081604 94.94318390]
[182.56680298 94.59636688]
[197.11384583 98.25472260]
[210.16178894 105.65414429]
[220.76866150 116.26046753]
[228.16877747 129.30801392]
[231.82788086 143.85485840]
[231.48185730 158.85087585]
[227.15565491 173.21345520]
[219.16160583 185.90579224]
[208.07679749 196.01158142]
[194.70144653 202.80128479]
[180.00114441 205.78475952]
[165.03712463 204.74661255]
[150.88961792 199.76181030]
[138.57998657 191.19017029]
[128.99684143 179.65052795]
[122.83168793 165.97480774]
[122.16190338 180.95983887]
[121.49211884 195.94488525]
[120.82232666 210.92993164]
[120.15254211 225.91496277]
[119.48275757 240.90000916]
[118.81297302 255.88504028]
[118.70130920 270.88461304]
[119.14791107 285.87796021]
[119.59452057 300.87133789]
[120.04112244 315.86468506]
[120.48773193 330.85803223]
[120.93433380 345.85137939]
[121.38094330 360.84472656]
[122.05072784 375.82977295]
[122.94354248 390.80316162]
[123.83635712 405.77658081]
[124.72917938 420.74996948]
[125.84482574 435.70843506]
[127.18305969 450.64862061]
[128.52128601 465.58880615]
[143.52723694 466.34246826]
[158.28222656 469.17727661]
[172.49906921 474.03808594]
[185.90103149 480.83023071]
[198.22724915 489.42156982]
[209.23776245 499.64480591]
[218.71826172 511.30096436]
[226.48420715 524.16314697]
[232.38442993 537.98101807]
[236.30407715 552.48559570]
[238.16685486 567.39453125]
[237.93652344 582.41760254]
[235.61753845 597.26245117]
[231.25503540 611.64001465]
[224.93395996 625.27050781]
[216.77734375 637.88854980]
[206.94393921 649.24859619]
[195.62518311 659.12945557]
[183.04138184 667.33886719]
[169.43748474 673.71697998]
[155.07829285 678.13964844]
[140.24331665 680.52075195]
[125.22133636 680.81396484]
[110.30473328 679.01367188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 186]
[20 185]
[21 184]
[24 183]
[25 182]
[26 181]
[27 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 144]
[50 143]
[51 142]
[52 141]
[56 140]
[57 139]
[58 138]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
[84 125]
[85 124]
[86 123]
[92 122]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
