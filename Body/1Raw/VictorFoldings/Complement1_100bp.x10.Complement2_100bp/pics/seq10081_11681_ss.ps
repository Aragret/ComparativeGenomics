%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[324.31588745 174.44044495]
[319.14297485 188.51753235]
[313.08764648 202.23820496]
[306.17431641 215.54719543]
[298.43078613 228.39093018]
[289.88821411 240.71766663]
[280.58108521 252.47779846]
[270.54678345 263.62396240]
[259.82577515 274.11123657]
[248.46118164 283.89746094]
[236.49880981 292.94320679]
[223.98680115 301.21200562]
[210.97554016 308.67062378]
[197.51742554 315.28900146]
[183.66664124 321.04049683]
[169.47895813 325.90191650]
[155.01152039 329.85372925]
[140.32257080 332.88000488]
[125.47124481 334.96853638]
[110.51736450 336.11096191]
[95.52113342 336.30264282]
[80.54293823 335.54281616]
[65.64308167 333.83456421]
[50.88157654 331.18472290]
[36.31785202 327.60400391]
[22.01054955 323.10681152]
[8.01728249 317.71124268]
[-5.60560322 311.43902588]
[-18.80325317 304.31542969]
[-31.52252769 296.36911011]
[-43.71220779 287.63208008]
[-55.32321167 278.13955688]
[-66.30878448 267.92971802]
[-76.62469482 257.04367065]
[-86.22940826 245.52528381]
[-95.08423615 233.42092896]
[-103.15353394 220.77932739]
[-110.40480804 207.65138245]
[-116.80885315 194.08996582]
[-122.33989716 180.14968872]
[-126.97565460 165.88668823]
[-130.69746399 151.35836792]
[-133.49034119 136.62326050]
[-135.34303284 121.74067688]
[-136.24809265 106.77055359]
[-136.20185852 91.77317047]
[-135.20454407 76.80890656]
[-133.26013184 61.93803406]
[-130.37646484 47.22041702]
[-126.56516266 32.71532440]
[-121.84156799 18.48116493]
[-116.22469330 4.57525015]
[-109.73716736 -8.94642448]
[-102.40509796 -22.02941132]
[-94.25802612 -34.62102890]
[-85.32874298 -46.67057800]
[-75.65321350 -58.12953949]
[-65.27038574 -68.95177460]
[-54.22208023 -79.09369659]
[-42.55277634 -88.51447296]
[-30.30946732 -97.17617798]
[-17.54144859 -105.04392242]
[-4.30013323 -112.08602905]
[9.36116028 -118.27414703]
[23.38742256 -123.58335114]
[37.72217560 -127.99227142]
[52.30770111 -131.48313904]
[67.08526611 -134.04191589]
[81.99536133 -135.65829468]
[96.97795868 -136.32577515]
[111.97272491 -136.04164124]
[126.91928101 -134.80705261]
[141.75744629 -132.62699890]
[156.42745972 -129.51022339]
[170.87026978 -125.46930695]
[185.02770996 -120.52050018]
[198.84277344 -114.68373871]
[212.25982666 -107.98252869]
[225.22485352 -100.44384766]
[237.68565369 -92.09805298]
[249.59204102 -82.97875214]
[260.89608765 -73.12265778]
[271.55224609 -62.56946564]
[281.51760864 -51.36166763]
[290.75210571 -39.54438782]
[299.21850586 -27.16521645]
[306.88272095 -14.27399540]
[313.71386719 -0.92263621]
[327.47399902 -6.89419889]
[341.23410034 -12.86576176]
[354.99420166 -18.83732414]
[368.75430298 -24.80888748]
[382.51440430 -30.78045082]
[396.27450562 -36.75201416]
[410.03460693 -42.72357559]
[404.93698120 -56.83611679]
[400.73556519 -71.24089050]
[397.44692993 -85.88105774]
[395.08404541 -100.69882202]
[393.65625000 -115.63571930]
[393.16915894 -130.63279724]
[393.62472534 -145.63085938]
[395.02111816 -160.57072449]
[397.35284424 -175.39343262]
[400.61068726 -190.04046631]
[404.78179932 -204.45405579]
[409.84973145 -218.57727051]
[415.79446411 -232.35441589]
[422.59252930 -245.73109436]
[430.21713257 -258.65454102]
[438.63815308 -271.07369995]
[447.82238770 -282.93960571]
[457.73355103 -294.20541382]
[468.33251953 -304.82666016]
[479.57751465 -314.76141357]
[491.42413330 -323.97048950]
[503.82562256 -332.41754150]
[516.73303223 -340.06924438]
[530.09539795 -346.89535522]
[543.86004639 -352.86898804]
[557.97265625 -357.96652222]
[572.37744141 -362.16787720]
[587.01757812 -365.45642090]
[601.83538818 -367.81924438]
[616.77227783 -369.24694824]
[631.76934814 -369.73397827]
[646.76745605 -369.27832031]
[661.70727539 -367.88186646]
[676.52996826 -365.55004883]
[691.17700195 -362.29214478]
[705.59057617 -358.12094116]
[719.71374512 -353.05294800]
[733.49084473 -347.10812378]
[746.86749268 -340.30999756]
[759.79089355 -332.68533325]
[772.21002197 -324.26422119]
[784.07586670 -315.07995605]
[795.34161377 -305.16873169]
[805.96282959 -294.56970215]
[815.89752197 -283.32464600]
[825.10656738 -271.47796631]
[833.55352783 -259.07644653]
[841.20520020 -246.16900635]
[848.03125000 -232.80657959]
[854.00476074 -219.04190063]
[859.10223389 -204.92930603]
[863.30352783 -190.52449036]
[866.59197998 -175.88429260]
[868.95471191 -161.06649780]
[870.38238525 -146.12959290]
[870.86932373 -131.13250732]
[870.41357422 -116.13445282]
[869.01702881 -101.19460297]
[866.68518066 -86.37192535]
[863.42718506 -71.72491455]
[859.25585938 -57.31137848]
[854.18780518 -43.18820190]
[848.24291992 -29.41112328]
[841.44470215 -16.03451538]
[833.82000732 -3.11116672]
[825.39880371 9.30791759]
[816.21447754 21.17372513]
[806.30322266 32.43942642]
[795.70410156 43.06056213]
[784.45898438 52.99521255]
[772.61230469 62.20417023]
[760.21075439 70.65109253]
[747.30322266 78.30265045]
[733.94079590 85.12863159]
[720.17608643 91.10210419]
[706.06347656 96.19949341]
[691.65863037 100.40068817]
[677.01837158 103.68909454]
[662.20062256 106.05175018]
[647.26367188 107.47931671]
[632.26660156 107.96617126]
[617.26855469 107.51038361]
[602.32867432 106.11375427]
[587.50604248 103.78179932]
[572.85900879 100.52371979]
[558.44549561 96.35237885]
[544.32238770 91.28422546]
[530.54534912 85.33927917]
[517.16876221 78.54098511]
[504.24545288 70.91619110]
[491.82641602 62.49497223]
[479.96063232 53.31056976]
[468.69500732 43.39923096]
[458.07391357 32.80007553]
[448.13931274 21.55492592]
[438.93041992 9.70816803]
[430.48355103 -2.69344664]
[422.83209229 -15.60097408]
[416.00616455 -28.96347237]
[402.24606323 -22.99191093]
[388.48596191 -17.02034760]
[374.72586060 -11.04878426]
[360.96575928 -5.07722187]
[347.20565796 0.89434117]
[333.44555664 6.86590385]
[319.68545532 12.83746719]
[324.77133179 26.94624138]
[328.95214844 41.34917450]
[332.21105957 55.98827362]
[334.53491211 70.80459595]
[335.91442871 85.73847198]
[336.34396362 100.72977448]
[335.82183838 115.71813965]
[334.35015869 130.64321899]
[331.93481445 145.44490051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 201]
[89 200]
[90 199]
[91 198]
[92 197]
[93 196]
[94 195]
[95 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
