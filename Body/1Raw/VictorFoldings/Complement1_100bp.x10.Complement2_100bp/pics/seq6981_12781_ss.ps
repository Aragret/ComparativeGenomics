%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[65.76393890 489.75976562]
[51.85861969 495.75317383]
[36.76048279 496.90426636]
[22.10727119 493.08825684]
[9.48844910 484.71902466]
[0.27281454 472.70440674]
[-4.53998995 458.34768677]
[-4.42790747 443.20614624]
[0.59690464 428.92224121]
[9.98939228 417.04537964]
[22.73072815 408.86386108]
[37.43882751 405.26519775]
[38.77706146 390.32501221]
[40.11529541 375.38482666]
[41.45352936 360.44464111]
[42.79176331 345.50445557]
[44.12999725 330.56427002]
[45.46823120 315.62408447]
[32.45942688 323.09207153]
[18.45442581 317.71994019]
[13.77719307 303.46777344]
[21.87561226 290.84179688]
[36.77982712 289.14938354]
[47.50243759 299.63653564]
[45.49160385 292.52468872]
[50.09632492 284.63583374]
[52.76211929 269.87460327]
[55.42791748 255.11338806]
[58.09371185 240.35217285]
[60.75950623 225.59095764]
[63.42530060 210.82974243]
[66.09109497 196.06852722]
[53.18293381 203.70915222]
[38.61911011 200.11817932]
[30.74245071 187.35267639]
[34.06505966 172.72529602]
[46.68360138 164.61526489]
[61.36959457 167.66838074]
[69.71005249 180.13476562]
[73.68214417 165.67024231]
[77.65424347 151.20571899]
[81.62634277 136.74118042]
[85.59843445 122.27666473]
[89.57053375 107.81214142]
[79.60736847 119.02532196]
[67.35419464 127.67746735]
[53.45378113 133.31471252]
[38.63531876 135.64132690]
[23.67615128 134.53527832]
[9.36101151 130.05456543]
[-3.55916023 122.43424988]
[-14.40659618 112.07408142]
[-22.61226273 99.51752472]
[-27.74570465 85.42327881]
[-29.53763390 70.53070068]
[-27.89405060 55.62101364]
[-22.90117073 41.47636414]
[-14.82091331 28.83874512]
[-4.07715082 18.37110138]
[8.76651955 10.62254429]
[23.03634453 5.99954844]
[37.98375702 4.74462748]
[52.82464981 6.92361116]
[66.78049469 12.42219448]
[79.11919403 20.95193291]
[89.19348907 32.06537247]
[96.47490692 45.17952728]
[100.58146667 59.60645294]
[101.29775238 74.58934021]
[98.58570862 89.34380341]
[107.54640198 77.31443024]
[116.50709534 65.28504944]
[125.46779633 53.25567245]
[134.42848206 41.22629547]
[142.08908081 28.32996750]
[148.36645508 14.70665169]
[154.64381409 1.08333576]
[160.92117310 -12.53998089]
[167.19853210 -26.16329575]
[173.47589111 -39.78661346]
[179.75325012 -53.40992737]
[186.03060913 -67.03324127]
[184.77867126 -82.80484009]
[197.13209534 -91.12602997]
[203.40945435 -104.74934387]
[204.15859985 -113.85300446]
[209.88304138 -118.52768707]
[216.36253357 -132.05603027]
[222.84202576 -145.58438110]
[212.75552368 -156.92184448]
[207.79150391 -171.21875000]
[208.67697144 -186.28625488]
[215.24591064 -199.83012390]
[226.46929932 -209.80009460]
[240.61619568 -214.70016479]
[255.52064514 -213.81307983]
[262.00015259 -227.34143066]
[268.47964478 -240.86976624]
[255.93888855 -249.14282227]
[244.64149475 -259.04650879]
[234.79794312 -270.39630127]
[226.59159851 -282.98080444]
[220.17533875 -296.56555176]
[215.66870117 -310.89746094]
[213.15562439 -325.70956421]
[212.68295288 -340.72592163]
[214.25947571 -355.66674805]
[217.85581970 -370.25372314]
[223.40499878 -384.21511841]
[230.80361938 -397.29080200]
[239.91387939 -409.23724365]
[250.56602478 -419.83181763]
[262.56164551 -428.87722778]
[275.67721558 -436.20489502]
[289.66848755 -441.67837524]
[304.27471924 -445.19561768]
[319.22387695 -446.69119263]
[334.23742676 -446.13714600]
[349.03570557 -443.54388428]
[363.34298706 -438.95965576]
[376.89279175 -432.46987915]
[389.43264771 -424.19549561]
[400.72894287 -414.29058838]
[410.57125854 -402.93969727]
[418.77624512 -390.35430908]
[425.19104004 -376.76889038]
[429.69613647 -362.43646240]
[432.20761108 -347.62408447]
[432.67864990 -332.60772705]
[431.10052490 -317.66705322]
[427.50259399 -303.08047485]
[421.95190430 -289.11965942]
[414.55184937 -276.04476929]
[405.44030762 -264.09933472]
[394.78701782 -253.50588989]
[382.79043579 -244.46179199]
[369.67404175 -237.13552856]
[355.68218994 -231.66358948]
[341.07556152 -228.14790344]
[326.12625122 -226.65397644]
[311.11276245 -227.20962524]
[296.31478882 -229.80450439]
[282.00796509 -234.39027405]
[275.52847290 -220.86192322]
[269.04898071 -207.33358765]
[279.08242798 -196.27650452]
[284.13186646 -182.18222046]
[283.39846802 -167.18798828]
[276.96295166 -153.58021545]
[265.77777100 -143.44581604]
[251.52653503 -138.35220337]
[236.37037659 -139.10488892]
[229.89088440 -125.57653809]
[223.41137695 -112.04819489]
[217.03277588 -98.47198486]
[210.75541687 -84.84867096]
[212.45634460 -70.05150604]
[199.65393066 -60.75588608]
[193.37657166 -47.13256836]
[187.09921265 -33.50925064]
[180.82183838 -19.88593674]
[174.54447937 -6.26261997]
[168.26712036 7.36069632]
[161.98976135 20.98401260]
[155.71240234 34.60733032]
[168.03965759 26.06105232]
[182.68260193 22.80769539]
[197.46902466 25.32987595]
[210.20547485 33.25344086]
[219.00256348 45.40298080]
[222.55529785 59.97617722]
[220.33663940 74.81118774]
[212.67572021 87.70732880]
[200.70899963 96.75153351]
[186.21165466 100.60214233]
[171.33430481 98.68794250]
[158.28388977 91.29290009]
[148.99636841 79.51401520]
[144.84950256 65.09862518]
[146.45787048 50.18699265]
[137.49717712 62.21636963]
[128.53646851 74.24574280]
[119.57578278 86.27512360]
[110.61508179 98.30450439]
[104.03505707 111.78423309]
[100.06295776 126.24875641]
[96.09086609 140.71328735]
[92.11876678 155.17781067]
[88.14666748 169.64233398]
[84.17457581 184.10685730]
[80.85231781 198.73431396]
[78.18651581 213.49552917]
[75.52072144 228.25674438]
[72.85492706 243.01797485]
[70.18913269 257.77917480]
[67.52333832 272.54040527]
[64.85754395 287.30160522]
[62.30170822 302.08227539]
[60.40841675 316.96231079]
[59.07018280 331.90249634]
[57.73194885 346.84268188]
[56.39371490 361.78286743]
[55.05548096 376.72305298]
[53.71724701 391.66323853]
[52.37901306 406.60342407]
[66.21341705 412.75872803]
[77.29791260 423.07440186]
[84.43013000 436.43142700]
[86.83641815 451.38095093]
[84.25576782 466.30136108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[24 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 193]
[31 192]
[32 191]
[39 190]
[40 189]
[41 188]
[42 187]
[43 186]
[44 185]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 165]
[76 164]
[77 163]
[78 162]
[79 161]
[80 160]
[81 159]
[82 158]
[84 156]
[85 155]
[87 154]
[88 153]
[89 152]
[96 145]
[97 144]
[98 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
