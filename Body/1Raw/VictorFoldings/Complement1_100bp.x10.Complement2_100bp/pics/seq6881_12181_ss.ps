%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[241.13887024 539.86450195]
[249.94734192 527.68957520]
[260.43469238 516.92700195]
[272.37741089 507.80618286]
[265.10418701 494.68746948]
[257.83093262 481.56878662]
[250.55772400 468.45007324]
[243.28448486 455.33139038]
[236.01126099 442.21270752]
[228.73802185 429.09399414]
[221.46479797 415.97531128]
[214.19157410 402.85662842]
[206.91833496 389.73791504]
[203.64790344 388.42010498]
[200.85328674 385.45275879]
[199.30282593 381.07675171]
[199.62820435 375.86703491]
[192.94801331 362.43667603]
[186.26782227 349.00628662]
[182.45446777 363.51345825]
[170.91563416 373.09759521]
[155.95503235 374.18402100]
[143.15258789 366.36752319]
[137.28329468 352.56350708]
[140.53625488 337.92047119]
[151.69821167 327.89993286]
[166.60600281 326.23931885]
[179.70019531 333.55883789]
[174.66328430 319.42980957]
[169.62637329 305.30078125]
[164.48440552 291.20962524]
[159.23768616 277.15716553]
[153.99096680 263.10470581]
[148.74426270 249.05221558]
[143.49754333 234.99974060]
[131.79722595 225.78280640]
[134.21873474 210.14801025]
[128.97201538 196.09553528]
[114.85369873 185.67248535]
[118.05216217 167.53822327]
[112.59680176 153.56541443]
[107.14144897 139.59262085]
[101.68608856 125.61982727]
[96.23073578 111.64702606]
[94.52980804 126.55027771]
[88.36402130 140.22445679]
[78.32106018 151.36622620]
[65.35816193 158.91362000]
[50.71085739 162.14727783]
[35.77524185 160.75897217]
[21.97488022 154.88105774]
[10.62513351 145.07374573]
[2.80778933 132.27182007]
[-0.73205340 117.69549561]
[0.34300044 102.73406982]
[5.93048382 88.81357574]
[15.49783325 77.26083374]
[28.13315010 69.17697906]
[42.63211441 65.33250427]
[57.61278152 66.09384155]
[71.64728546 71.38842773]
[83.39794922 80.71162415]
[91.74525452 93.17581940]
[90.18473053 78.25720978]
[88.62420654 63.33860779]
[87.06368256 48.42000580]
[77.93267059 35.49966431]
[84.30390930 22.03650665]
[75.17288971 9.11616802]
[81.54412842 -4.34699011]
[79.98360443 -19.26559448]
[77.86898041 -34.11579132]
[75.20318604 -48.87701035]
[72.53739166 -63.63822556]
[67.93267059 -71.52710724]
[69.94350433 -78.63894653]
[67.49777222 -93.43821716]
[65.05204773 -108.23748779]
[62.60631943 -123.03675842]
[56.28144073 -109.43544006]
[44.41643524 -100.25820923]
[29.66197205 -97.55528259]
[15.31423759 -101.93049622]
[4.57855320 -112.40642548]
[-0.14670283 -126.64271545]
[2.19410419 -141.45893860]
[11.07803154 -153.54512024]
[24.52038765 -160.20118713]
[39.51811600 -159.94012451]
[52.72068405 -152.82028198]
[61.17861557 -140.43222046]
[61.17861557 -155.43222046]
[61.17861557 -170.43222046]
[58.20905304 -176.33926392]
[58.60847855 -182.00827026]
[61.40859222 -185.87716675]
[61.85519791 -200.87051392]
[62.30180740 -215.86386108]
[48.20912170 -221.44705200]
[36.87795258 -231.51583862]
[29.67659569 -244.85437012]
[27.47464943 -259.85192871]
[30.53800964 -274.69754028]
[38.49676132 -287.59848022]
[50.38984299 -296.99688721]
[64.78111267 -301.75790405]
[79.93274689 -301.30657959]
[94.01512146 -295.69741821]
[105.32771301 -285.60778809]
[112.50447845 -272.25601196]
[114.67877960 -257.25439453]
[111.58806610 -242.41447449]
[103.60555267 -229.52822876]
[91.69517517 -220.15173340]
[77.29515839 -215.41726685]
[76.84854889 -200.42390442]
[76.40194702 -185.43055725]
[76.17861938 -170.43222046]
[76.17861938 -155.43222046]
[76.17861938 -140.43222046]
[77.40559387 -125.48249054]
[79.85131836 -110.68321991]
[82.29704285 -95.88394928]
[84.74277496 -81.08467865]
[87.29860687 -66.30402374]
[89.96440125 -51.54280472]
[92.63019562 -36.78158951]
[103.19703674 -47.42780685]
[118.12465668 -45.95605469]
[126.40898132 -33.45125198]
[121.94310760 -19.13147736]
[108.01911163 -13.55273342]
[94.90220642 -20.82611847]
[96.46273041 -5.90751314]
[105.48212433 5.94574690]
[99.22251129 20.47598457]
[108.24190521 32.32924271]
[101.98229218 46.85948181]
[103.54281616 61.77808762]
[105.10333252 76.69669342]
[106.66385651 91.61529541]
[110.20352936 106.19167328]
[115.65888977 120.16446686]
[121.11424255 134.13726807]
[126.56960297 148.11006165]
[132.02496338 162.08285522]
[143.50277710 167.96694946]
[147.75889587 179.71723938]
[143.02449036 190.84881592]
[148.27120972 204.90129089]
[160.34678650 215.12335205]
[157.55000305 229.75303650]
[162.79672241 243.80549622]
[168.04344177 257.85797119]
[173.29016113 271.91043091]
[178.53688049 285.96292114]
[184.47030640 292.90786743]
[183.75540161 300.26385498]
[188.79231262 314.39288330]
[193.82923889 328.52191162]
[199.69819641 342.32608032]
[206.37838745 355.75646973]
[213.05857849 369.18685913]
[220.03703308 382.46469116]
[227.31025696 395.58337402]
[234.58349609 408.70208740]
[241.85671997 421.82077026]
[249.12995911 434.93945312]
[256.40316772 448.05816650]
[263.67642212 461.17684937]
[270.94964600 474.29556274]
[278.22286987 487.41424561]
[285.49609375 500.53292847]
[299.55880737 495.23593140]
[314.24291992 492.04302979]
[329.23544312 491.02224731]
[344.21682739 492.19537354]
[358.86770630 495.53738403]
[372.87585449 500.97708130]
[385.94262695 508.39846802]
[397.78955078 517.64337158]
[408.16406250 528.51477051]
[416.84506226 540.78088379]
[423.64752197 554.18029785]
[428.42642212 568.42742920]
[431.07992554 583.21850586]
[431.55142212 598.23834229]
[429.83093262 613.16680908]
[425.95507812 627.68560791]
[420.00646973 641.48529053]
[412.11193848 654.27178955]
[402.43972778 665.77252197]
[391.19604492 675.74230957]
[378.62048340 683.96868896]
[364.98114014 690.27630615]
[350.56869507 694.53070068]
[335.69039917 696.64117432]
[320.66339111 696.56280518]
[305.80792236 694.29724121]
[291.44064331 689.89276123]
[277.86782837 683.44317627]
[265.37878418 675.08612061]
[254.23966980 664.99957275]
[244.68794250 653.39862061]
[236.92721558 640.53045654]
[231.12289429 626.66943359]
[227.39868164 612.11102295]
[225.83398438 597.16546631]
[226.46214294 582.15136719]
[229.26977539 567.38873291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[17 163]
[18 162]
[19 161]
[28 160]
[29 159]
[30 158]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[37 150]
[38 149]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[63 141]
[64 140]
[65 139]
[66 138]
[68 136]
[70 134]
[71 133]
[72 127]
[73 126]
[74 125]
[76 124]
[77 123]
[78 122]
[79 121]
[91 120]
[92 119]
[93 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
