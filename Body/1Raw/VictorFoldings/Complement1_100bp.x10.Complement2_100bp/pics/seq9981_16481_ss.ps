%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[165.66964722 513.59985352]
[154.87020874 503.18472290]
[144.63066101 492.21862793]
[134.97904968 480.73165894]
[125.94186401 468.75531006]
[117.54385376 456.32241821]
[109.80804443 443.46704102]
[102.75563812 430.22439575]
[96.40596008 416.63082886]
[90.77642059 402.72357178]
[85.88244629 388.54074097]
[81.73744965 374.12121582]
[78.35279846 359.50451660]
[75.73776245 344.73071289]
[73.89951324 329.84030151]
[72.84309387 314.87408447]
[72.57138824 299.87307739]
[73.08515167 284.87844849]
[74.38297272 269.93121338]
[76.46128845 255.07240295]
[79.31441498 240.34272766]
[82.93451691 225.78256226]
[87.31168365 211.43180847]
[92.43391418 197.32981873]
[98.28717041 183.51521301]
[104.85540009 170.02589417]
[112.12061310 156.89880371]
[120.06288147 144.16993713]
[128.66044617 131.87419128]
[116.83418274 122.64709473]
[105.00791168 113.41999054]
[91.18876648 111.29325867]
[85.76499176 98.40627289]
[73.93872070 89.17917633]
[62.11245346 79.95207977]
[46.47262573 77.56327057]
[41.19773865 63.63399124]
[29.37146950 54.40689087]
[17.54519844 45.17979431]
[7.32951927 56.17621613]
[-3.79365635 66.25373840]
[-15.74197483 75.33773804]
[-28.42697334 83.36097717]
[-41.75473404 90.26403046]
[-55.62658310 95.99581146]
[-69.93981171 100.51386261]
[-84.58845520 103.78475189]
[-99.46405792 105.78425598]
[-114.45647430 106.49756622]
[-129.45471191 105.91940308]
[-144.34773254 104.05404663]
[-159.02525330 100.91531372]
[-173.37863159 96.52643585]
[-187.30157471 90.91991425]
[-200.69099426 84.13725281]
[-213.44779968 76.22866821]
[-225.47749329 67.25271606]
[-236.69104004 57.27584839]
[-247.00541687 46.37194061]
[-256.34423828 34.62171555]
[-264.63836670 22.11217499]
[-271.82641602 8.93593025]
[-277.85516357 -4.80946207]
[-282.67996216 -19.02223396]
[-286.26507568 -33.59715652]
[-288.58398438 -48.42631912]
[-289.61950684 -63.39993668]
[-289.36398315 -78.40713501]
[-287.81930542 -93.33682251]
[-284.99688721 -108.07844543]
[-280.91766357 -122.52286530]
[-275.61181641 -136.56314087]
[-269.11865234 -150.09533691]
[-261.48620605 -163.01922607]
[-252.77098083 -175.23916626]
[-243.03755188 -186.66464233]
[-232.35795593 -197.21109009]
[-220.81126404 -206.80043030]
[-208.48295593 -215.36163330]
[-195.46432495 -222.83134460]
[-181.85174561 -229.15425110]
[-167.74600220 -234.28353882]
[-153.25154114 -238.18122864]
[-138.47566223 -240.81846619]
[-123.52777863 -242.17573547]
[-108.51855469 -242.24296570]
[-93.55911255 -241.01966858]
[-78.76020050 -238.51490784]
[-64.23140717 -234.74722290]
[-50.08028030 -229.74452209]
[-36.41160202 -223.54380798]
[-23.32657242 -216.19102478]
[-10.92206764 -207.74060059]
[0.71007186 -198.25509644]
[11.48372459 -187.80474854]
[21.31912422 -176.46691895]
[30.14345169 -164.32556152]
[37.89137268 -151.47055054]
[44.50552750 -137.99708557]
[49.93694305 -124.00489807]
[54.14540482 -109.59760284]
[57.09975433 -94.88185120]
[58.77812195 -79.96660614]
[59.16807938 -64.96229553]
[58.26674271 -49.98000336]
[56.08077621 -35.13066101]
[52.62637329 -20.52420616]
[47.92910767 -6.26878166]
[42.02375412 7.53006792]
[34.95403671 20.77017784]
[26.77229691 33.35352325]
[38.59856796 42.58062363]
[50.42483521 51.80772018]
[65.21877289 53.53654480]
[71.33955383 68.12580872]
[83.16581726 77.35290527]
[94.99208832 86.58000946]
[108.81123352 88.70674133]
[114.23500824 101.59372711]
[126.06127930 110.82082367]
[137.88754272 120.04792023]
[147.72312927 108.71810150]
[158.13819885 97.91856384]
[169.10420227 87.67890930]
[180.59107971 78.02720642]
[192.56733704 68.98991394]
[205.00016785 60.59178925]
[217.85548401 52.85586166]
[231.09805298 45.80333328]
[244.69155884 39.45353317]
[258.59878540 33.82386398]
[272.78155518 28.92976189]
[287.20104980 24.78463745]
[301.81771851 21.39985275]
[316.59149170 18.78468513]
[331.48187256 16.94630241]
[346.44808960 15.88974476]
[361.44909668 15.61790657]
[376.44375610 16.13153458]
[391.39096069 17.42921829]
[406.24978638 19.50740433]
[420.97949219 22.36039352]
[435.53970337 25.98036766]
[449.89050293 30.35740471]
[463.99255371 35.47950745]
[477.80718994 41.33263397]
[491.29656982 47.90074539]
[504.42373657 55.16583633]
[517.15264893 63.10799026]
[529.44848633 71.70544434]
[541.27752686 80.93463135]
[552.60729980 90.77025604]
[563.40679932 101.18535614]
[573.64642334 112.15139008]
[583.29809570 123.63829041]
[592.33532715 135.61457825]
[600.73345947 148.04743958]
[608.46929932 160.90277100]
[615.52178955 174.14535522]
[621.87158203 187.73889160]
[627.50122070 201.64611816]
[632.39526367 215.82891846]
[636.54034424 230.24841309]
[639.92510986 244.86509705]
[642.54022217 259.63888550]
[644.37854004 274.52929688]
[645.43505859 289.49548340]
[645.70684814 304.49649048]
[645.19317627 319.49114990]
[643.89544678 334.43835449]
[641.81719971 349.29718018]
[638.96417236 364.02688599]
[635.34417725 378.58706665]
[630.96710205 392.93783569]
[625.84497070 407.03988647]
[619.99176025 420.85452271]
[613.42364502 434.34387207]
[606.15850830 447.47100830]
[598.21630859 460.19992065]
[589.61883545 472.49572754]
[580.38958740 484.32470703]
[570.55389404 495.65447998]
[560.13879395 506.45394897]
[549.17272949 516.69354248]
[537.68579102 526.34515381]
[525.70947266 535.38238525]
[513.27661133 543.78045654]
[500.42123413 551.51629639]
[487.17864990 558.56872559]
[473.58508301 564.91845703]
[459.67782593 570.54803467]
[445.49502563 575.44207764]
[431.07550049 579.58709717]
[416.45883179 582.97180176]
[401.68502808 585.58685303]
[386.79461670 587.42517090]
[371.82839966 588.48162842]
[356.82742310 588.75335693]
[341.83276367 588.23968506]
[326.88552856 586.94189453]
[312.02673340 584.86358643]
[297.29702759 582.01055908]
[282.73684692 578.39050293]
[268.38610840 574.01336670]
[254.28408813 568.89117432]
[240.46946716 563.03796387]
[226.98011780 556.46978760]
[213.85301208 549.20458984]
[201.12413025 541.26232910]
[188.82835388 532.66485596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 121]
[30 120]
[31 119]
[33 117]
[34 116]
[35 115]
[37 113]
[38 112]
[39 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
