%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[170.41656494 579.21984863]
[165.45199585 565.04998779]
[162.02174377 550.43267822]
[160.16468811 535.53356934]
[159.90184021 520.52148438]
[161.23620605 505.56649780]
[164.15264893 490.83807373]
[168.61813354 476.50308228]
[174.58206177 462.72399902]
[181.97685242 449.65689087]
[190.71871948 437.44985962]
[200.70860291 426.24118042]
[211.83332825 416.15789795]
[223.96682739 407.31423950]
[236.97161865 399.81042480]
[230.89779663 386.09515381]
[224.82395935 372.37988281]
[212.59579468 363.87570190]
[214.08239746 348.12448120]
[208.00857544 334.40921021]
[201.93473816 320.69393921]
[195.86090088 306.97869873]
[181.28364563 304.03906250]
[171.11222839 292.94824219]
[169.40187073 277.81787109]
[177.01672363 264.42681885]
[170.94288635 250.71153259]
[164.46337891 237.18319702]
[157.58396912 223.85375977]
[150.70455933 210.52433777]
[143.72610474 197.24649048]
[136.64900208 184.02096558]
[129.57189941 170.79544067]
[122.49478912 157.56990051]
[115.41768646 144.34437561]
[108.34058380 131.11885071]
[95.51377106 123.54770660]
[95.82474518 107.72955322]
[92.99308014 106.60210419]
[90.50905609 104.41940308]
[88.76432800 101.30823517]
[88.09819031 97.53828430]
[88.74676514 93.49943542]
[75.94434357 84.20381927]
[77.64527130 69.40665436]
[71.36791229 55.78333282]
[65.09055328 42.16001892]
[59.92148972 38.03784561]
[57.91183472 32.72199249]
[58.83585739 28.03635216]
[52.96689606 14.23217487]
[47.09793854 0.42799789]
[35.45001984 -5.11175013]
[30.84593582 -16.73010445]
[35.24681473 -27.99770546]
[29.58402824 -41.88773346]
[23.92124176 -55.77775955]
[18.25845528 -69.66778564]
[12.59566784 -83.55781555]
[6.62410545 -97.31791687]
[0.34674454 -110.94123077]
[-5.93061638 -124.56455231]
[-12.20797729 -138.18786621]
[-18.48533821 -151.81118774]
[-24.96483421 -165.33952332]
[-31.64502716 -178.76989746]
[-38.32522202 -192.20027161]
[-45.00541687 -205.63066101]
[-59.25784302 -200.87518311]
[-74.03340912 -198.14961243]
[-89.04450989 -197.50701904]
[-103.99895477 -198.95988464]
[-118.60563660 -202.47994995]
[-132.58024597 -207.99868774]
[-145.65075684 -215.40867615]
[-157.56274414 -224.56567383]
[-168.08435059 -235.29142761]
[-177.01075745 -247.37718201]
[-184.16821289 -260.58767700]
[-189.41740417 -274.66574097]
[-192.65612793 -289.33737183]
[-193.82138062 -304.31698608]
[-192.89044189 -319.31295776]
[-189.88145447 -334.03341675]
[-184.85299683 -348.19183350]
[-177.90292358 -361.51260376]
[-169.16653442 -373.73641968]
[-158.81388855 -384.62533569]
[-147.04649353 -393.96743774]
[-134.09341431 -401.58084106]
[-120.20678711 -407.31735229]
[-105.65691376 -411.06533813]
[-90.72701263 -412.75180054]
[-75.70770264 -412.34393311]
[-60.89133072 -409.84967041]
[-46.56630707 -405.31759644]
[-33.01147461 -398.83587646]
[-20.49067879 -390.53070068]
[-9.24764156 -380.56375122]
[0.49878788 -369.12899780]
[8.55889225 -356.44906616]
[14.77577877 -342.77075195]
[19.02843475 -328.36029053]
[21.23408318 -313.49822998]
[21.34978485 -298.47381592]
[19.37329292 -283.57952881]
[15.34307766 -269.10531616]
[9.33758926 -255.33285522]
[1.47372663 -242.53028870]
[-8.09543896 -230.94679260]
[-19.18363953 -220.80786133]
[-31.57504082 -212.31085205]
[-24.89484596 -198.88047791]
[-18.21465111 -185.45010376]
[-11.53445721 -172.01971436]
[-7.37223387 -169.67773438]
[-4.63704729 -164.69618225]
[-4.86202145 -158.08854675]
[1.41533935 -144.46522522]
[7.69269991 -130.84190369]
[13.97006035 -117.21858978]
[20.24742126 -103.59527588]
[23.41077805 -102.03787231]
[25.97695351 -98.87088776]
[27.19765663 -94.39169312]
[26.48569489 -89.22059631]
[32.14848328 -75.33057404]
[37.81126785 -61.44054794]
[43.47405624 -47.55051804]
[49.13684082 -33.66049194]
[63.55923080 -23.66241264]
[60.90211487 -5.44096279]
[66.77107239 8.36321354]
[72.64003754 22.16739082]
[78.71386719 35.88265610]
[84.99123383 49.50597382]
[91.26859283 63.12929153]
[103.62201691 71.45047760]
[102.37007904 87.22207642]
[109.05027771 100.65245056]
[122.38328552 109.16957092]
[121.56610870 124.04174805]
[128.64321899 137.26727295]
[135.72032166 150.49279785]
[142.79742432 163.71832275]
[149.87452698 176.94386292]
[156.95162964 190.16938782]
[163.75971985 196.25935364]
[164.03399658 203.64492798]
[170.91340637 216.97434998]
[177.79281616 230.30378723]
[181.52790833 232.51806641]
[184.10490417 235.50531006]
[185.42304993 238.80650330]
[185.54095459 241.97711182]
[184.65814209 244.63771057]
[190.73197937 258.35296631]
[205.76557922 261.71411133]
[215.81985474 273.14938354]
[217.19645691 288.13500977]
[209.57617188 300.90484619]
[215.65000916 314.62011719]
[221.72383118 328.33538818]
[227.79766846 342.05065918]
[240.46028137 351.53585815]
[238.53923035 366.30606079]
[244.61305237 380.02130127]
[250.68688965 393.73657227]
[264.98355103 389.14990234]
[279.68676758 386.10885620]
[294.62991333 384.64794922]
[309.64367676 384.78369141]
[324.55798340 386.51455688]
[339.20379639 389.82092285]
[353.41519165 394.66534424]
[367.03112793 400.99291992]
[379.89733887 408.73196411]
[391.86804199 417.79476929]
[402.80758667 428.07867432]
[412.59201050 439.46713257]
[421.11047363 451.83111572]
[428.26644897 465.03048706]
[433.97885132 478.91577148]
[438.18295288 493.32955933]
[440.83111572 508.10858154]
[441.89334106 523.08532715]
[441.35757446 538.09020996]
[439.22991943 552.95306396]
[435.53445435 567.50555420]
[430.31307983 581.58282471]
[423.62493896 595.02532959]
[415.54580688 607.68078613]
[406.16720581 619.40570068]
[395.59548950 630.06732178]
[383.95034790 639.54486084]
[371.36376953 647.73083496]
[357.97836304 654.53253174]
[343.94583130 659.87292480]
[329.42510986 663.69146729]
[314.58078003 665.94488525]
[299.58102417 666.60760498]
[284.59579468 665.67224121]
[269.79489136 663.14929199]
[255.34600830 659.06738281]
[241.41288757 653.47271729]
[228.15338135 646.42877197]
[215.71772766 638.01525879]
[204.24684143 628.32757568]
[193.87071228 617.47552490]
[184.70687866 605.58197021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 168]
[16 167]
[17 166]
[19 164]
[20 163]
[21 162]
[22 161]
[26 157]
[27 156]
[28 151]
[29 150]
[30 149]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[38 140]
[43 139]
[45 137]
[46 136]
[47 135]
[50 134]
[51 133]
[52 132]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 115]
[66 114]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
