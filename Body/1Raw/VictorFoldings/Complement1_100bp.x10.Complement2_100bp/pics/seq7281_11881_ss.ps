%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-37.57498169 743.48291016]
[-50.55135727 751.01788330]
[-63.99276352 757.68804932]
[-77.84163666 763.46478271]
[-92.03868103 768.32342529]
[-106.52310181 772.24310303]
[-121.23286438 775.20709229]
[-136.10499573 777.20263672]
[-151.07579041 778.22119141]
[-166.08114624 778.25848389]
[-181.05682373 777.31427002]
[-195.93867493 775.39257812]
[-210.66297913 772.50170898]
[-225.16668701 768.65405273]
[-239.38768005 763.86596680]
[-253.26507568 758.15808105]
[-266.73944092 751.55480957]
[-279.75308228 744.08435059]
[-292.25027466 735.77880859]
[-304.17749023 726.67364502]
[-315.48367310 716.80792236]
[-326.12039185 706.22381592]
[-336.04208374 694.96673584]
[-345.20629883 683.08483887]
[-353.57376099 670.62902832]
[-361.10867310 657.65258789]
[-367.77874756 644.21112061]
[-373.55541992 630.36224365]
[-378.41394043 616.16516113]
[-382.33352661 601.68072510]
[-385.29742432 586.97094727]
[-387.29287720 572.09881592]
[-388.31137085 557.12799072]
[-388.34854126 542.12261963]
[-387.40423584 527.14697266]
[-385.48251343 512.26513672]
[-382.59155273 497.54086304]
[-378.74377441 483.03717041]
[-373.95565796 468.81619263]
[-368.24768066 454.93884277]
[-361.64428711 441.46450806]
[-354.17376709 428.45089722]
[-345.86813354 415.95376587]
[-336.76290894 404.02661133]
[-326.89712524 392.72048950]
[-316.31298828 382.08383179]
[-305.05581665 372.16220093]
[-293.17388916 362.99804688]
[-280.71798706 354.63064575]
[-267.74154663 347.09582520]
[-254.30004883 340.42584229]
[-240.45109558 334.64926147]
[-226.25399780 329.79080200]
[-211.76953125 325.87127686]
[-197.05973816 322.90750122]
[-182.18759155 320.91213989]
[-167.21678162 319.89370728]
[-152.21142578 319.85662842]
[-137.23576355 320.80102539]
[-122.35393524 322.72283936]
[-107.62966156 325.61389160]
[-93.12599945 329.46176147]
[-78.90505219 334.24996948]
[-65.02772522 339.95803833]
[-51.55343246 346.56149292]
[-44.08568954 333.55252075]
[-36.61795044 320.54357910]
[-29.15020752 307.53463745]
[-21.68246651 294.52566528]
[-14.21472549 281.51672363]
[-6.74698448 268.50778198]
[-10.87346363 254.24215698]
[-3.48542953 240.94284058]
[11.50563812 236.71133423]
[18.97337914 223.70239258]
[26.44112015 210.69343567]
[33.90886307 197.68447876]
[41.37660217 184.67553711]
[48.84434509 171.66658020]
[56.31208420 158.65762329]
[63.77982712 145.64868164]
[71.24756622 132.63972473]
[78.71530914 119.63076782]
[78.11408997 116.89276123]
[78.56120300 113.75163269]
[80.21563721 110.60548401]
[83.08943176 107.90255737]
[87.03461456 106.08885956]
[88.02384186 92.14206696]
[100.42398071 85.68233490]
[108.65279388 73.14093018]
[116.88159943 60.59952927]
[123.95870209 47.37400436]
[129.82766724 33.56982803]
[135.69662476 19.76564980]
[133.97566223 4.03832054]
[146.07586670 -4.64698601]
[151.94482422 -18.45116234]
[157.81378174 -32.25534058]
[145.04064941 -40.17666245]
[133.62646484 -49.95504761]
[123.83879089 -61.36127090]
[115.90707397 -74.12796021]
[110.01725006 -87.95584106]
[106.30737305 -102.52077484]
[104.86441040 -117.48133850]
[105.72219086 -132.48681641]
[108.86061096 -147.18548584]
[114.20609283 -161.23277283]
[121.63333130 -174.29939270]
[130.96823120 -186.07904053]
[141.99194336 -196.29559326]
[154.44609070 -204.70956421]
[168.03871155 -211.12370300]
[182.45117188 -215.38764954]
[197.34564209 -217.40147400]
[212.37294006 -217.11795044]
[227.18084717 -214.54371643]
[241.42221069 -209.73915100]
[254.76321411 -202.81684875]
[266.89111328 -193.93910217]
[277.52160645 -183.31398010]
[286.40551758 -171.19059753]
[293.33459473 -157.85311890]
[298.14639282 -143.61418152]
[300.72811890 -128.80760193]
[301.01925659 -113.78043365]
[299.01300049 -98.88494873]
[294.75634766 -84.47032928]
[288.34912109 -70.87445068]
[279.94146729 -58.41604233]
[269.73052979 -47.38713837]
[257.95559692 -38.04626846]
[244.89276123 -30.61239815]
[230.84819031 -25.25979233]
[216.15110779 -22.11391830]
[201.14605713 -21.24852371]
[186.18476868 -22.68389320]
[171.61796570 -26.38637924]
[165.74899292 -12.58220196]
[159.88003540 1.22197473]
[162.02078247 15.96193600]
[149.50080872 25.63461113]
[143.63183594 39.43878555]
[137.76287842 53.24296570]
[150.17626953 44.82228851]
[165.00099182 42.53590012]
[179.37463379 46.82526016]
[190.52185059 56.86216354]
[196.29031372 70.70864105]
[195.56620789 85.69114685]
[188.48934937 98.91680908]
[176.42616272 107.83194733]
[161.70587158 110.71519470]
[147.17073059 107.00983429]
[135.62724304 97.43132019]
[129.30429077 83.82911682]
[129.42300415 68.82833862]
[121.19419098 81.36973572]
[112.96538544 93.91114044]
[111.97615814 107.85793304]
[99.57601929 114.31766510]
[91.72425842 127.09851074]
[84.25652313 140.10746765]
[76.78878021 153.11640930]
[69.32103729 166.12536621]
[61.85329819 179.13432312]
[54.38555527 192.14328003]
[46.91781235 205.15222168]
[39.45007324 218.16117859]
[31.98233223 231.17013550]
[24.51459122 244.17907715]
[28.42041969 259.25827026]
[20.66175079 272.34481812]
[6.26196766 275.97552490]
[-1.20577323 288.98446655]
[-8.67351437 301.99340820]
[-16.14125633 315.00238037]
[-23.60899734 328.01132202]
[-31.07673836 341.02026367]
[-38.54447937 354.02923584]
[-26.04719353 362.33465576]
[-14.11987019 371.43966675]
[-2.81358123 381.30526733]
[7.82325602 391.88922119]
[17.74509239 403.14617920]
[26.90944099 415.02798462]
[35.27706146 427.48370361]
[42.81211472 440.46002197]
[49.48234177 453.90139771]
[55.25917435 467.75024414]
[60.11788177 481.94726562]
[64.03765106 496.43164062]
[67.00169373 511.14138794]
[68.99732971 526.01348877]
[70.01600647 540.98431396]
[70.05335999 555.98968506]
[69.10923004 570.96533203]
[67.18766785 585.84722900]
[64.29689026 600.57153320]
[60.44928741 615.07525635]
[55.66132736 629.29626465]
[49.95351410 643.17370605]
[43.35028839 656.64813232]
[35.87993240 669.66180420]
[27.57443237 682.15905762]
[18.46935272 694.08630371]
[8.60368538 705.39257812]
[-1.98032558 716.02929688]
[-13.23735619 725.95111084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[71 175]
[74 172]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[81 165]
[82 164]
[83 163]
[88 162]
[90 160]
[91 159]
[92 158]
[93 145]
[94 144]
[95 143]
[97 141]
[98 140]
[99 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
