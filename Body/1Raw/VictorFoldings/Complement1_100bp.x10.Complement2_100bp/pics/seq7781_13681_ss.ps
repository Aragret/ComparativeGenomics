%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[227.89775085 302.76135254]
[236.84620667 290.70144653]
[247.13426208 279.76196289]
[237.47344971 268.28726196]
[227.81263733 256.81256104]
[218.15182495 245.33784485]
[208.49101257 233.86314392]
[198.83021545 222.38845825]
[189.16940308 210.91375732]
[178.68190002 200.18937683]
[167.42579651 190.27471924]
[156.16970825 180.36006165]
[141.50489807 177.75375366]
[136.26333618 162.82604980]
[141.46461487 176.89540100]
[141.88160706 191.88960266]
[137.47030640 206.22627258]
[128.69622803 218.39245605]
[116.48535156 227.10418701]
[102.12630463 231.44212341]
[87.13442993 230.94845581]
[73.09185791 225.67530823]
[61.48053741 216.17913818]
[53.52583694 203.46211243]
[50.06723404 188.86628723]
[51.46972656 173.93199158]
[57.58530426 160.23529053]
[67.76856995 149.22161865]
[80.94487000 142.05326843]
[95.72367096 139.48675537]
[110.54533386 141.79290771]
[123.84584808 148.72846985]
[115.43122864 136.31097412]
[107.01660919 123.89347839]
[98.60198975 111.47598267]
[98.54962921 126.47589111]
[91.61416626 139.77624512]
[79.34500122 148.40570068]
[64.48310089 150.43643188]
[50.34864426 145.41476440]
[40.09931183 134.46253967]
[36.02482986 120.02651978]
[39.03544617 105.33175659]
[48.45858002 93.66108704]
[62.18907928 87.62177277]
[77.15952301 88.56301117]
[90.02548218 96.27454376]
[77.22305298 86.97891998]
[78.92398834 72.18175507]
[72.64662933 58.55844116]
[66.36927032 44.93512726]
[62.10604477 41.92314911]
[59.66823959 37.97214890]
[59.10786057 33.93469620]
[60.13099670 30.56044960]
[54.46820831 16.67042160]
[48.80542374 2.78039503]
[43.14263535 -11.10963154]
[38.26084900 3.07374382]
[26.04114532 11.77310276]
[11.04117393 11.74380016]
[-1.14444757 2.99676442]
[-5.97078323 -11.20557690]
[-1.63772917 -25.56610107]
[10.23859215 -34.72868729]
[25.22860718 -35.27591705]
[37.74214172 -27.00277710]
[33.77004623 -41.46730042]
[29.79794884 -55.93182755]
[25.82585335 -70.39634705]
[21.85375595 -84.86087036]
[17.88166046 -99.32540131]
[13.90956402 -113.78992462]
[-0.97110236 -111.73546600]
[-15.99262333 -111.64096069]
[-30.89796066 -113.50803375]
[-45.43206406 -117.30471802]
[-59.34623718 -122.96606445]
[-72.40238953 -130.39518738]
[-84.37711334 -139.46498108]
[-95.06550598 -150.02023315]
[-104.28466797 -161.88032532]
[-111.87686157 -174.84233093]
[-117.71215820 -188.68444824]
[-121.69072723 -203.16983032]
[-123.74446869 -218.05059814]
[-123.83825684 -233.07211304]
[-121.97048187 -247.97737122]
[-118.17310333 -262.51129150]
[-112.51109314 -276.42520142]
[-105.08134460 -289.48098755]
[-96.01099396 -301.45529175]
[-85.45523071 -312.14315796]
[-73.59469604 -321.36178589]
[-60.63232422 -328.95333862]
[-46.78992462 -334.78799438]
[-32.30436325 -338.76586914]
[-17.42350197 -340.81890869]
[-2.40197158 -340.91198730]
[12.50318813 -339.04348755]
[27.03693008 -335.24542236]
[40.95056534 -329.58273315]
[54.00600815 -322.15237427]
[65.97986603 -313.08145142]
[76.66725159 -302.52517700]
[85.88529205 -290.66421509]
[93.47624969 -277.70147705]
[99.31023407 -263.85879517]
[103.28741455 -249.37304688]
[105.33974457 -234.49208069]
[105.43210602 -219.47055054]
[103.56290436 -204.56547546]
[99.76414490 -190.03192139]
[94.10081482 -176.11856079]
[86.66982269 -163.06346130]
[77.59832764 -151.09004211]
[67.04154968 -140.40315247]
[55.18013382 -131.18568420]
[42.21704102 -123.59534454]
[28.37408829 -117.76201630]
[32.34618378 -103.29749298]
[36.31827927 -88.83296967]
[40.29037476 -74.36844635]
[44.26247406 -59.90392303]
[48.23456955 -45.43939972]
[52.20666504 -30.97487450]
[57.03266144 -16.77241898]
[62.69544983 -2.88239169]
[68.35823822 11.00763512]
[74.02101898 24.89766312]
[79.99258423 38.65776443]
[86.26994324 52.28108215]
[92.54730988 65.90439606]
[104.90073395 74.22558594]
[103.64879608 89.99718475]
[111.01948547 103.06136322]
[119.43410492 115.47885895]
[127.84872437 127.89635468]
[136.26333618 140.31385803]
[146.17799377 151.56994629]
[161.64790344 154.88542175]
[166.08435059 169.10397339]
[177.34045410 179.01863098]
[188.59654236 188.93327332]
[185.35720825 174.28723145]
[189.78051758 159.95425415]
[200.71026611 149.68095398]
[215.28941345 146.15274048]
[229.70703125 150.29188538]
[240.19436646 161.01641846]
[244.01007080 175.52297974]
[240.15672302 190.01959229]
[229.64157104 200.71687317]
[215.21325684 204.81857300]
[200.64410400 201.25294495]
[210.30490112 212.72764587]
[219.96571350 224.20234680]
[229.62652588 235.67704773]
[239.28733826 247.15173340]
[248.94815063 258.62643433]
[258.60894775 270.10113525]
[271.14144897 261.82751465]
[284.54974365 255.06477356]
[298.65246582 249.90440369]
[313.25894165 246.41619873]
[328.17160034 244.64732361]
[343.18878174 244.62170410]
[358.10739136 246.33967590]
[372.72570801 249.77801514]
[386.84594727 254.89022827]
[400.27725220 261.60714722]
[412.83789062 269.83798218]
[424.35806274 279.47140503]
[434.68191528 290.37710571]
[443.66986084 302.40759277]
[451.20037842 315.40020752]
[457.17156982 329.17922974]
[461.50268555 343.55831909]
[464.13519287 358.34298706]
[465.03347778 373.33331299]
[464.18536377 388.32653809]
[461.60232544 403.11993408]
[457.31933594 417.51342773]
[451.39428711 431.31234741]
[443.90728760 444.33007812]
[434.95962524 456.39059448]
[424.67233276 467.33078003]
[413.18444824 477.00268555]
[400.65139771 485.27548218]
[387.24267578 492.03732300]
[373.13958740 497.19674683]
[358.53289795 500.68395996]
[343.62011719 502.45184326]
[328.60293579 502.47647095]
[313.68441772 500.75750732]
[299.06637573 497.31817627]
[284.94644165 492.20501709]
[271.51559448 485.48721313]
[258.95550537 477.25552368]
[247.43598938 467.62136841]
[237.11285400 456.71496582]
[228.12570190 444.68386841]
[220.59606934 431.69073486]
[214.62579346 417.91131592]
[210.29562378 403.53195190]
[207.66410828 388.74710083]
[206.76684570 373.75674438]
[207.61595154 358.76354980]
[210.19996643 343.97033691]
[214.48391724 329.57711792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 144]
[11 143]
[12 142]
[14 140]
[32 139]
[33 138]
[34 137]
[35 136]
[47 135]
[49 133]
[50 132]
[51 131]
[55 130]
[56 129]
[57 128]
[58 127]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
