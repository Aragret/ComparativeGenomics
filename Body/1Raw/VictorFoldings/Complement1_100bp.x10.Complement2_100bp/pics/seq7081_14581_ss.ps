%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[164.95649719 790.53741455]
[150.95547485 785.14477539]
[137.26408386 779.00842285]
[123.92182159 772.14599609]
[110.96714020 764.57727051]
[98.43740082 756.32409668]
[86.36872864 747.41027832]
[74.79592133 737.86151123]
[63.75234222 727.70532227]
[53.26983261 716.97094727]
[43.37862396 705.68945312]
[34.10723114 693.89324951]
[25.48238373 681.61639404]
[17.52895355 668.89428711]
[10.26986885 655.76361084]
[3.72606182 642.26220703]
[-2.08360076 628.42901611]
[-7.14236784 614.30395508]
[-11.43565369 599.92767334]
[-14.95107937 585.34167480]
[-17.67850876 570.58807373]
[-19.61008072 555.70928955]
[-20.74022102 540.74829102]
[-21.06567574 525.74816895]
[-20.58550262 510.75219727]
[-19.30109024 495.80364990]
[-17.21613693 480.94558716]
[-14.33665943 466.22085571]
[-10.67095661 451.67190552]
[-6.22959900 437.34072876]
[-1.02539206 423.26858521]
[4.92665958 409.49606323]
[11.60939407 396.06289673]
[19.00354385 383.00778198]
[27.08778763 370.36840820]
[35.83881760 358.18118286]
[45.23140335 346.48123169]
[55.23846436 335.30233765]
[65.83114624 324.67669678]
[76.97890472 314.63497925]
[88.64959717 305.20608521]
[100.80957794 296.41723633]
[113.42378998 288.29376221]
[126.45585632 280.85910034]
[139.86820984 274.13464355]
[153.62216187 268.13986206]
[148.37544250 254.08737183]
[143.12872314 240.03491211]
[131.42842102 230.81796265]
[133.84991455 215.18316650]
[128.60321045 201.13069153]
[123.35648346 187.07821655]
[110.21682739 184.71357727]
[99.87849426 176.09597778]
[95.11036682 163.39422607]
[97.25800323 149.88844299]
[105.86607361 139.12313843]
[100.82916260 124.99410248]
[95.79224396 110.86507416]
[92.36830139 125.46906281]
[83.01452637 137.19538879]
[69.53697205 143.77989197]
[54.53794861 143.95118713]
[40.91353607 137.67620850]
[31.29438972 126.16656494]
[27.53781700 111.64457703]
[30.36915398 96.91421509]
[39.24171448 84.81967926]
[52.44234848 77.69624329]
[67.42221069 76.91932678]
[81.28894043 82.63893890]
[91.36569977 93.75182343]
[88.91997528 78.95255280]
[86.47424316 64.15328217]
[84.02851868 49.35401154]
[81.58279419 34.55474091]
[79.13706207 19.75547028]
[76.69133759 4.95619917]
[66.80747986 -7.39774513]
[72.36607361 -21.21625710]
[69.92034912 -36.01552582]
[60.03649139 -48.36947250]
[65.59509277 -62.18798447]
[63.14936066 -76.98725128]
[48.10810471 -77.38357544]
[33.41372299 -80.61956787]
[19.59741211 -86.57826233]
[7.15862179 -95.04425812]
[-3.45299363 -105.71150208]
[-11.85383034 -118.19438934]
[-17.74020386 -132.04165649]
[-20.89932632 -146.75276184]
[-21.21699715 -161.79588318]
[-18.68173027 -176.62724304]
[-13.38517666 -190.71066284]
[-5.51880217 -203.53707886]
[4.63302755 -214.64279175]
[16.70333099 -223.62634277]
[30.25577545 -230.16299438]
[44.80044556 -234.01643372]
[59.81156540 -235.04737854]
[74.74648285 -233.21855164]
[89.06532288 -228.59606934]
[102.25045776 -221.34701538]
[113.82526398 -211.73345947]
[123.37130737 -200.10292053]
[130.54351807 -186.87582397]
[135.08261108 -172.53033447]
[136.82449341 -157.58502197]
[135.70623779 -142.58015442]
[131.76821899 -128.05815125]
[125.15283203 -114.54397583]
[116.09919739 -102.52614594]
[104.93460083 -92.43910980]
[92.06264496 -84.64749908]
[77.94863129 -79.43298340]
[80.39436340 -64.63371277]
[90.10327911 -53.33831024]
[84.71961975 -38.46125412]
[87.16534424 -23.66198349]
[96.87426758 -12.36658287]
[91.49060822 2.51047158]
[93.93633270 17.30974197]
[96.38206482 32.10901260]
[98.82778931 46.90828323]
[101.27351379 61.70755386]
[103.71924591 76.50682831]
[106.16497040 91.30609894]
[109.92127228 105.82815552]
[114.95819092 119.95718384]
[119.99510193 134.08621216]
[136.28642273 138.63471985]
[146.55455017 151.86599731]
[146.90931702 168.44418335]
[137.40895081 181.83149719]
[142.65567017 195.88397217]
[147.90238953 209.93644714]
[159.97798157 220.15852356]
[157.18119812 234.78819275]
[162.42791748 248.84066772]
[167.67463684 262.89312744]
[181.99191284 258.40707397]
[196.52934265 254.69601440]
[211.24501038 251.77061462]
[226.09649658 249.63932800]
[241.04098511 248.30828857]
[256.03536987 247.78134155]
[271.03640747 248.05999756]
[286.00085449 249.14346313]
[300.88558960 251.02861023]
[315.64767456 253.70999146]
[330.24456787 257.17990112]
[344.63415527 261.42831421]
[358.77493286 266.44299316]
[372.62615967 272.20947266]
[386.14791870 278.71112061]
[399.30117798 285.92922974]
[412.04803467 293.84292603]
[424.35171509 302.42944336]
[436.17678833 311.66397095]
[447.48913574 321.51995850]
[458.25613403 331.96893311]
[468.44671631 342.98077393]
[478.03155518 354.52371216]
[486.98297119 366.56454468]
[495.27517700 379.06845093]
[502.88427734 391.99948120]
[509.78829956 405.32025146]
[515.96734619 418.99243164]
[521.40362549 432.97656250]
[526.08142090 447.23236084]
[529.98724365 461.71865845]
[533.10992432 476.39373779]
[535.44036865 491.21530151]
[536.97186279 506.14056396]
[537.70001221 521.12652588]
[537.62274170 536.12994385]
[536.74023438 551.10760498]
[535.05505371 566.01629639]
[532.57202148 580.81304932]
[529.29833984 595.45520020]
[525.24346924 609.90051270]
[520.41900635 624.10729980]
[514.83898926 638.03466797]
[508.51937866 651.64251709]
[501.47848511 664.89141846]
[493.73657227 677.74334717]
[485.31597900 690.16119385]
[476.24099731 702.10913086]
[466.53775024 713.55273438]
[456.23422241 724.45904541]
[445.36016846 734.79650879]
[433.94686890 744.53540039]
[422.02731323 753.64764404]
[409.63580322 762.10693359]
[396.80807495 769.88885498]
[383.58114624 776.97106934]
[369.99313354 783.33306885]
[356.08322144 788.95654297]
[341.89154053 793.82525635]
[327.45895386 797.92523193]
[312.82708740 801.24456787]
[298.03814697 803.77368164]
[283.13479614 805.50543213]
[268.15997314 806.43463135]
[253.15684509 806.55871582]
[238.16868591 805.87731934]
[223.23872375 804.39239502]
[208.40998840 802.10821533]
[193.72521973 799.03137207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 141]
[47 140]
[48 139]
[50 137]
[51 136]
[52 135]
[57 131]
[58 130]
[59 129]
[72 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[80 120]
[81 119]
[83 117]
[84 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
