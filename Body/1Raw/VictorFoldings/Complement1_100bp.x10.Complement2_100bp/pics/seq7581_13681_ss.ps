%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[106.94728088 485.80902100]
[104.14084625 470.97570801]
[105.44161224 455.93542480]
[110.75303650 441.80419922]
[119.68099213 429.63070679]
[131.56295776 420.31826782]
[145.51721191 414.55792236]
[143.73474121 399.66421509]
[134.53987122 387.94656372]
[140.58245850 373.32473755]
[131.38758850 361.60708618]
[137.43017578 346.98526001]
[135.64770508 332.09152222]
[133.86524963 317.19781494]
[132.08277893 302.30410767]
[130.30030823 287.41036987]
[128.51785278 272.51666260]
[119.32297516 260.79901123]
[125.36556244 246.17718506]
[116.17068481 234.45951843]
[122.21327972 219.83769226]
[119.43766785 205.09674072]
[115.68136597 190.57467651]
[111.92506409 176.05261230]
[108.16876221 161.53056335]
[93.20921326 161.69784546]
[78.64415741 158.28092957]
[65.31971741 151.47830200]
[54.00995636 141.68518066]
[45.37187958 129.47044373]
[39.90730286 115.54367828]
[37.93367767 100.71394348]
[39.56565475 85.84273529]
[44.70843124 71.79396820]
[53.06324768 59.38375854]
[64.14474487 49.33306122]
[77.30917358 42.22574615]
[73.55287933 27.70368576]
[69.79657745 13.18162632]
[58.84996796 1.75873995]
[63.15357208 -12.50058174]
[58.85944748 -26.87279510]
[54.03345108 -41.07524872]
[49.20745468 -55.27770615]
[44.38145447 -69.48016357]
[39.55545807 -83.68261719]
[36.23253250 -69.05530548]
[27.31279945 -56.99552536]
[14.29938984 -49.53555298]
[-0.61470819 -47.93252945]
[-14.91620636 -52.45659256]
[-26.19505310 -62.34535599]
[-32.55056000 -75.93238831]
[-32.91172028 -90.92803955]
[-27.21766472 -104.80528259]
[-16.42794418 -115.22554779]
[-2.36081696 -120.43283844]
[12.61315918 -119.54964447]
[25.97060776 -112.72480011]
[35.46132278 -101.10692596]
[33.45730972 -115.97245026]
[31.45329666 -130.83798218]
[29.44928360 -145.70350647]
[14.08986568 -151.82560730]
[3.97164631 -164.78390503]
[1.78161645 -180.98330688]
[8.02367592 -195.98971558]
[20.90670013 -205.74369812]
[18.68158340 -220.57774353]
[8.98275280 -233.07746887]
[14.74647141 -246.81169128]
[12.52135372 -261.64575195]
[10.29623699 -276.47979736]
[0.59740674 -288.97952271]
[6.36112547 -302.71374512]
[4.13600826 -317.54779053]
[1.91089106 -332.38183594]
[-13.10847092 -332.11019897]
[-28.03478622 -333.80139160]
[-42.61264801 -337.42645264]
[-56.59260559 -342.92333984]
[-69.73544312 -350.19799805]
[-81.81627655 -359.12597656]
[-92.62837982 -369.55447388]
[-101.98674774 -381.30505371]
[-109.73123932 -394.17663574]
[-115.72934723 -407.94897461]
[-119.87843323 -422.38644409]
[-122.10749054 -437.24194336]
[-122.37838745 -452.26132202]
[-120.68648529 -467.18756104]
[-117.06073761 -481.76525879]
[-111.56318665 -495.74493408]
[-104.28788757 -508.88745117]
[-95.35935211 -520.96783447]
[-84.93034363 -531.77947998]
[-73.17932892 -541.13726807]
[-60.30736923 -548.88116455]
[-46.53472900 -554.87860107]
[-32.09707642 -559.02697754]
[-17.24145699 -561.25537109]
[-2.22206903 -561.52551270]
[12.70408535 -559.83288574]
[27.28159904 -556.20648193]
[41.26103592 -550.70825195]
[54.40318298 -543.43231201]
[66.48316193 -534.50323486]
[77.29427338 -524.07366943]
[86.65151978 -512.32220459]
[94.39479065 -499.44992065]
[100.39158630 -485.67697144]
[104.53929901 -471.23913574]
[106.76694489 -456.38339233]
[107.03640747 -441.36401367]
[105.34308624 -426.43792725]
[101.71595001 -411.86059570]
[96.21706390 -397.88140869]
[88.94052124 -384.73962402]
[80.01083374 -372.66006470]
[69.58079529 -361.84945679]
[57.82888794 -352.49276733]
[44.95619202 -344.75009155]
[31.18298340 -338.75396729]
[16.74493408 -334.60693359]
[18.97005272 -319.77288818]
[21.19516945 -304.93884277]
[30.73484421 -293.50015259]
[25.13028145 -278.70489502]
[27.35539818 -263.87084961]
[29.58051491 -249.03681946]
[39.12018967 -237.59811401]
[33.51562500 -222.80285645]
[35.74074173 -207.96881104]
[48.75212097 -203.81898499]
[58.75415421 -194.42280579]
[63.75588989 -181.57244873]
[62.72809601 -167.75500488]
[55.81449509 -155.67118835]
[44.31481171 -147.70751953]
[46.31882477 -132.84199524]
[48.32283783 -117.97646332]
[50.32685089 -103.11093903]
[53.75791168 -88.50861359]
[58.58391190 -74.30615997]
[63.40990829 -60.10370255]
[68.23590851 -45.90124893]
[73.06190491 -31.69879150]
[81.93256378 -43.79471970]
[96.91335297 -44.55363083]
[106.96099091 -33.41608810]
[104.66873932 -18.59226799]
[91.72635651 -11.00974464]
[77.67562866 -16.25688171]
[88.35356140 -5.87271070]
[84.31863403 9.42532539]
[88.07493591 23.94738388]
[91.83123779 38.46944427]
[106.79078674 38.30216217]
[121.35584259 41.71907806]
[134.68028259 48.52169418]
[145.99005127 58.31482315]
[154.62811279 70.52956390]
[160.09269714 84.45632172]
[162.06631470 99.28605652]
[160.43434143 114.15726471]
[155.29156494 128.20603943]
[146.93675232 140.61624146]
[135.85525513 150.66694641]
[122.69082642 157.77426147]
[126.44712067 172.29631042]
[130.20343018 186.81837463]
[133.95973206 201.34043884]
[140.03527832 187.62593079]
[152.50210571 179.28456116]
[167.49719238 178.90098572]
[180.37417603 186.59405518]
[187.14297485 199.98001099]
[185.70619202 214.91104126]
[176.50903320 226.76060486]
[162.40135193 231.85700989]
[147.75456238 228.62106323]
[137.10699463 218.05523682]
[146.42936707 230.83819580]
[140.25927734 244.39471436]
[149.58164978 257.17767334]
[143.41156006 270.73419189]
[145.19403076 285.62792969]
[146.97650146 300.52163696]
[148.75895691 315.41534424]
[150.54142761 330.30908203]
[152.32389832 345.20278931]
[161.64625549 357.98574829]
[155.47618103 371.54226685]
[164.79853821 384.32522583]
[158.62846375 397.88174438]
[160.41091919 412.77548218]
[175.33039856 415.08023071]
[189.07432556 421.32577515]
[200.62281799 431.04867554]
[209.11891174 443.52743530]
[213.93211365 457.83599854]
[214.70527649 472.91262817]
[211.38101196 487.63851929]
[204.20600891 500.92092896]
[193.71270752 511.77416992]
[180.67976379 519.39288330]
[166.07431030 523.21173096]
[150.98019409 522.94732666]
[136.51745605 518.61926270]
[123.75936890 510.54870605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[10 193]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[19 184]
[21 182]
[22 172]
[23 171]
[24 170]
[25 169]
[37 157]
[38 156]
[39 155]
[41 153]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[60 142]
[61 141]
[62 140]
[63 139]
[68 133]
[69 132]
[71 130]
[72 129]
[73 128]
[75 126]
[76 125]
[77 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
