%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[16.85403442 620.57568359]
[1.84719956 619.90490723]
[-12.94368744 617.28106689]
[-27.26553535 612.74896240]
[-40.87327957 606.38623047]
[-53.53407288 598.30175781]
[-65.03127289 588.63378906]
[-75.16814423 577.54779053]
[-83.77123260 565.23352051]
[-90.69333649 551.90161133]
[-95.81599426 537.78021240]
[-99.05156708 523.11102295]
[-100.34467316 508.14495850]
[-99.67320251 493.13815308]
[-97.04863739 478.34738159]
[-92.51587677 464.02575684]
[-86.15250397 450.41830444]
[-78.06739044 437.75790405]
[-68.39888000 426.26116943]
[-57.31242371 416.12481689]
[-44.99771881 407.52230835]
[-31.66549110 400.60086060]
[-17.54386711 395.47885132]
[-2.87449026 392.24398804]
[12.09162903 390.95159912]
[12.76141357 375.96655273]
[13.43119907 360.98150635]
[14.10098457 345.99645996]
[6.60390615 358.98852539]
[-4.34863997 369.23751831]
[-17.80914879 375.85678101]
[-32.61315536 378.27371216]
[-47.47995758 376.27917480]
[-61.12343597 370.04574585]
[-72.36328888 360.11270142]
[-80.22715759 347.33929443]
[-84.03473663 332.83059692]
[-83.45663452 317.84173584]
[-78.54286957 303.66940308]
[-69.71851349 291.53967285]
[-57.74698257 282.50183105]
[-43.66392136 277.33779907]
[-28.68765640 276.49426270]
[-14.11378765 280.04425049]
[-1.20309937 287.68060303]
[8.92750549 298.74276733]
[15.40162754 312.27368164]
[17.65917778 327.09930420]
[14.42805290 312.55938721]
[26.19393730 301.98229980]
[31.01993561 287.77984619]
[35.84593201 273.57739258]
[40.67192841 259.37493896]
[45.49792862 245.17248535]
[50.32392502 230.97003174]
[55.14992142 216.76757812]
[59.87005615 202.52958679]
[64.48406982 188.25685120]
[69.09807587 173.98411560]
[73.71208191 159.71138000]
[78.21971130 145.40469360]
[82.62071228 131.06484985]
[87.02171326 116.72499847]
[79.79343414 106.31319427]
[79.80866241 93.63828278]
[87.06192017 83.24387360]
[98.95312500 78.85607147]
[103.56713867 64.58333588]
[108.18114471 50.31060410]
[112.79515839 36.03787231]
[117.40916443 21.76513863]
[117.07120514 12.63696194]
[122.19957733 7.31516027]
[119.31363678 -8.24060822]
[130.73432922 -17.80183029]
[135.56033325 -32.00428391]
[140.38633728 -46.20674133]
[145.21232605 -60.40919495]
[150.03833008 -74.61164856]
[154.33244324 -88.98386383]
[158.08874512 -103.50592804]
[161.84504700 -118.02798462]
[155.98364258 -129.51741028]
[159.41123962 -141.53552246]
[169.76585388 -147.78921509]
[173.73796082 -162.25373840]
[177.71005249 -176.71826172]
[181.68214417 -191.18278503]
[167.76025391 -196.81280518]
[154.58610535 -204.02102661]
[142.33789062 -212.70996094]
[131.18122864 -222.76211548]
[121.26702881 -234.04151917]
[112.72935486 -246.39566040]
[105.68366241 -259.65744019]
[100.22525024 -273.64752197]
[96.42792511 -288.17669678]
[94.34304810 -303.04846191]
[93.99881744 -318.06173706]
[95.39987946 -333.01342773]
[98.52729797 -347.70138550]
[103.33876801 -361.92694092]
[109.76922607 -375.49771118]
[117.73169708 -388.23016357]
[127.11851501 -399.95211792]
[137.80271912 -410.50503540]
[149.63983154 -419.74621582]
[162.46974182 -427.55068970]
[176.11897278 -433.81286621]
[190.40292358 -438.44812012]
[205.12841797 -441.39370728]
[220.09629822 -442.60980225]
[235.10415649 -442.07998657]
[249.94902039 -439.81143188]
[264.43014526 -435.83477783]
[278.35165405 -430.20382690]
[291.52532959 -422.99472046]
[303.77297974 -414.30496216]
[314.92895508 -404.25207520]
[324.84240723 -392.97201538]
[333.37924194 -380.61730957]
[340.42407227 -367.35504150]
[345.88153076 -353.36459351]
[349.67788696 -338.83517456]
[351.76177979 -323.96325684]
[352.10501099 -308.94998169]
[350.70294189 -293.99835205]
[347.57455444 -279.31063843]
[342.76211548 -265.08538818]
[336.33078003 -251.51506042]
[328.36743164 -238.78312683]
[318.97985840 -227.06179810]
[308.29492188 -216.50958252]
[296.45721436 -207.26919556]
[283.62677002 -199.46559143]
[269.97711182 -193.20431519]
[255.69287109 -188.57003784]
[240.96717834 -185.62542725]
[225.99920654 -184.41030884]
[210.99139404 -184.94111633]
[196.14666748 -187.21067810]
[192.17457581 -172.74615479]
[188.20248413 -158.28163147]
[184.23039246 -143.81710815]
[189.57562256 -127.10198975]
[176.36711121 -114.27168274]
[172.61080933 -99.74962616]
[168.85450745 -85.22756195]
[182.90687561 -90.47455597]
[195.84854126 -82.89080811]
[198.13940430 -68.06678009]
[188.09069824 -56.93018341]
[173.10998535 -57.69050980]
[164.24078369 -69.78565216]
[159.41477966 -55.58319855]
[154.58879089 -41.38074493]
[149.76278687 -27.17828751]
[144.93679810 -12.97583199]
[148.16792297 1.56408203]
[136.40203857 12.14115810]
[131.68190002 26.37914658]
[127.06788635 40.65188217]
[122.45388031 54.92461395]
[117.83987427 69.19734955]
[113.22586060 83.47007751]
[121.07401276 97.98815155]
[116.11454773 113.72890472]
[101.36155701 121.12599945]
[96.96055603 135.46585083]
[92.55956268 149.80569458]
[93.03339386 158.92782593]
[87.98481750 164.32539368]
[83.37081146 178.59812927]
[78.75679779 192.87086487]
[74.14279175 207.14358521]
[74.48075104 216.27177429]
[69.35237885 221.59356689]
[64.52638245 235.79602051]
[59.70038223 249.99847412]
[54.87438583 264.20092773]
[50.04838943 278.40338135]
[45.22238922 292.60583496]
[40.39639282 306.80828857]
[43.28232956 322.36407471]
[31.86163330 331.92529297]
[29.08602333 346.66625977]
[28.41623878 361.65130615]
[27.74645233 376.63632202]
[27.07666779 391.62136841]
[41.86780548 394.24383545]
[56.19008636 398.77453613]
[69.79843140 405.13598633]
[82.45999908 413.21926880]
[93.95811462 422.88613892]
[104.09603882 433.97116089]
[112.70030212 446.28463745]
[119.62367249 459.61587524]
[124.74768066 473.73675537]
[127.98464966 488.40567017]
[129.27919006 503.37161255]
[128.60913086 518.37847900]
[125.98597717 533.16949463]
[121.45458984 547.49157715]
[115.09250641 561.09960938]
[107.00859070 573.76080322]
[97.34117889 585.25842285]
[86.25569153 595.39581299]
[73.94180298 603.99951172]
[60.61023331 610.92224121]
[46.48910141 616.04559326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 189]
[26 188]
[27 187]
[28 186]
[48 185]
[50 183]
[51 182]
[52 181]
[53 180]
[54 179]
[55 178]
[56 177]
[57 175]
[58 174]
[59 173]
[60 172]
[61 170]
[62 169]
[63 168]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[73 160]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 148]
[81 147]
[82 146]
[85 144]
[86 143]
[87 142]
[88 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
