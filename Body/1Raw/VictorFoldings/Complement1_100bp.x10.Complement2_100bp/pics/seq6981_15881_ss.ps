%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[202.80247498 266.48873901]
[212.00106812 254.61680603]
[222.56362915 243.94021606]
[213.24874878 232.18296814]
[203.93386841 220.42572021]
[194.61898804 208.66847229]
[185.30410767 196.91120911]
[175.30593872 185.72923279]
[164.65992737 175.16218567]
[150.17625427 171.68763733]
[145.83250427 156.47441101]
[135.18649292 145.90736389]
[124.54048157 135.34031677]
[113.89447021 124.77326202]
[106.93269348 122.29224396]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.61802673 85.79437256]
[64.21556854 76.04840851]
[51.98907852 67.35858154]
[39.76259613 58.66875839]
[27.53610802 49.97893524]
[15.30962276 41.28910828]
[3.08313727 32.59928513]
[-15.28452015 31.29135323]
[-21.96096230 15.06199551]
[-34.31547165 6.55516863]
[-46.66997910 -1.95165813]
[-59.02449036 -10.45848560]
[-52.95127869 3.25705791]
[-52.90026474 18.25697136]
[-58.88004684 32.01350403]
[-69.88291931 42.20844269]
[-84.05471039 47.12376022]
[-99.00722504 45.93113708]
[-112.22069550 38.83155060]
[-121.46842957 27.02140808]
[-125.19201660 12.49092484]
[-122.76396179 -2.31125569]
[-114.59344482 -14.89070797]
[-102.05733490 -23.12757301]
[-87.26818848 -25.63379288]
[-72.71674347 -21.98630333]
[-83.20424652 -32.71068192]
[-93.69174194 -43.43506241]
[-104.17924500 -54.15944290]
[-114.66674805 -64.88381958]
[-126.37660980 -55.48989487]
[-138.95086670 -47.28898239]
[-152.26840210 -40.36006927]
[-166.20098877 -34.76988602]
[-180.61441040 -30.57226944]
[-195.36987305 -27.80764771]
[-210.32525635 -26.50264549]
[-225.33654785 -26.66983032]
[-240.25917053 -28.30759239]
[-254.94940186 -31.40015793]
[-269.26574707 -35.91774750]
[-283.07037354 -41.81684494]
[-296.23028564 -49.04064560]
[-308.61877441 -57.51957321]
[-320.11651611 -67.17197418]
[-330.61279297 -77.90487671]
[-340.00646973 -89.61492920]
[-348.20712280 -102.18934631]
[-355.13577271 -115.50702667]
[-360.72567749 -129.43971252]
[-364.92300415 -143.85322571]
[-367.68734741 -158.60873413]
[-368.99203491 -173.56416321]
[-368.82455444 -188.57543945]
[-367.18649292 -203.49803162]
[-364.09362793 -218.18820190]
[-359.57577515 -232.50447083]
[-353.67639160 -246.30895996]
[-346.45233154 -259.46875000]
[-337.97314453 -271.85705566]
[-328.32052612 -283.35461426]
[-317.58740234 -293.85064697]
[-305.87716675 -303.24411011]
[-293.30258179 -311.44451904]
[-279.98477173 -318.37289429]
[-266.05197144 -323.96252441]
[-251.63838196 -328.15957642]
[-236.88279724 -330.92358398]
[-221.92735291 -332.22799683]
[-206.91607666 -332.06021118]
[-191.99351501 -330.42184448]
[-177.30342102 -327.32870483]
[-162.98724365 -322.81054688]
[-149.18286133 -316.91088867]
[-136.02322388 -309.68655396]
[-123.63507843 -301.20715332]
[-112.13772583 -291.55429077]
[-101.64189148 -280.82095337]
[-92.24866486 -269.11053467]
[-84.04850769 -256.53579712]
[-77.12039948 -243.21783447]
[-71.53105164 -229.28491211]
[-67.33429718 -214.87124634]
[-64.57056427 -200.11561584]
[-63.26645660 -185.16014099]
[-63.43453979 -170.14886475]
[-65.07319641 -155.22634888]
[-68.16664886 -140.53630066]
[-72.68508911 -126.22020721]
[-78.58502197 -112.41594696]
[-85.80960846 -99.25646210]
[-94.28927612 -86.86848450]
[-103.94236755 -75.37132263]
[-93.45486450 -64.64694214]
[-82.96736145 -53.92256546]
[-72.47986603 -43.19818497]
[-61.99236298 -32.47380447]
[-50.51766205 -22.81299400]
[-38.16315460 -14.30616760]
[-25.80864525 -5.79934025]
[-13.45413589 2.70748687]
[-1.50535464 0.82249594]
[8.85701084 7.80856371]
[11.77296162 20.37280083]
[23.99944687 29.06262398]
[36.22593307 37.75244904]
[48.45241928 46.44227219]
[60.67890549 55.13209915]
[72.90538788 63.82192230]
[67.33937073 49.89283752]
[68.28178406 34.92247009]
[75.55066681 21.80136681]
[87.74250793 13.06300545]
[102.50325775 10.39462566]
[116.98284149 14.31145096]
[128.38548279 24.05720329]
[134.50952148 37.75013351]
[134.17247009 52.74634552]
[127.43944550 66.15030670]
[115.61045837 75.37393188]
[100.96952057 78.63626862]
[86.34240723 75.30686951]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[124.46151733 114.12725830]
[135.10752869 124.69430542]
[145.75354004 135.26135254]
[156.39955139 145.82839966]
[171.64468384 150.05877686]
[175.22697449 164.51618958]
[185.87298584 175.08323669]
[184.81614685 160.12051392]
[192.65792847 147.33354187]
[206.47354126 141.49156189]
[221.11010742 144.77346802]
[231.10853577 155.95521545]
[232.73968506 170.86625671]
[225.39515686 183.94517517]
[211.81427002 190.31382751]
[197.06135559 187.59632874]
[206.37623596 199.35357666]
[215.69111633 211.11083984]
[225.00601196 222.86808777]
[234.32089233 234.62533569]
[247.13047791 226.78494263]
[260.79174805 220.54576111]
[275.10546875 215.99880981]
[289.86288452 213.21037292]
[304.84884644 212.22113037]
[319.84475708 213.04550171]
[334.63198853 215.67146301]
[348.99484253 220.06071472]
[362.72390747 226.14926147]
[375.61895752 233.84829712]
[387.49191284 243.04557800]
[398.16970825 253.60694885]
[407.49655151 265.37838745]
[415.33645630 278.18826294]
[421.57513428 291.84976196]
[426.12155151 306.16366577]
[428.90942383 320.92120361]
[429.89810181 335.90719604]
[429.07318115 350.90307617]
[426.44668579 365.69021606]
[422.05688477 380.05291748]
[415.96783447 393.78173828]
[408.26831055 406.67648315]
[399.07058716 418.54913330]
[388.50881958 429.22650146]
[376.73699951 438.55291748]
[363.92684937 446.39236450]
[350.26510620 452.63049316]
[335.95104980 457.17639160]
[321.19338989 459.96371460]
[306.20736694 460.95184326]
[291.21151733 460.12634277]
[276.42449951 457.49929810]
[262.06195068 453.10894775]
[248.33335876 447.01937866]
[235.43890381 439.31936646]
[223.56660461 430.12121582]
[212.88961792 419.55905151]
[203.56364441 407.78689575]
[195.72468567 394.97644043]
[189.48704529 381.31448364]
[184.94169617 367.00024414]
[182.15492249 352.24249268]
[181.16735840 337.25643921]
[181.99340820 322.26058960]
[184.62103271 307.47366333]
[189.01190186 293.11129761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 163]
[4 162]
[5 161]
[6 160]
[7 159]
[8 150]
[9 149]
[11 147]
[12 146]
[13 145]
[14 144]
[16 143]
[18 141]
[19 140]
[20 127]
[21 126]
[22 125]
[23 124]
[24 123]
[25 122]
[27 119]
[28 118]
[29 117]
[30 116]
[44 115]
[45 114]
[46 113]
[47 112]
[48 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
