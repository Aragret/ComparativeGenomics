%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[82.26618195 444.84323120]
[75.37143707 431.48797607]
[70.59628296 417.23672485]
[68.05263519 402.42355347]
[67.80014038 387.39569092]
[69.84470367 372.50540161]
[74.13840485 358.10177612]
[80.58058929 344.52243042]
[89.02024078 332.08569336]
[99.25952911 321.08306885]
[111.05843353 311.77252197]
[124.14035797 304.37228394]
[138.19865417 299.05581665]
[135.09454346 284.38049316]
[131.99043274 269.70520020]
[121.78682709 258.85458374]
[126.50082397 243.75198364]
[123.39671326 229.07669067]
[120.07445526 214.44921875]
[109.55230713 203.90722656]
[113.81455231 188.67095947]
[110.27487946 174.09458923]
[106.73521423 159.51820374]
[103.19554138 144.94183350]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[86.55328369 109.14138031]
[83.88928986 97.80363464]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[82.84647369 58.33782959]
[79.52421570 43.71037292]
[75.97657776 39.88135910]
[74.40916443 35.51140213]
[74.69642639 31.44537926]
[76.39568329 28.35590363]
[73.72988892 13.59468555]
[71.06409454 -1.16653144]
[66.89780426 13.24325943]
[60.03626251 26.58189583]
[50.73598480 38.35070419]
[39.34466934 48.10969543]
[26.28818893 55.49402618]
[12.05467224 60.22762680]
[-2.82375312 62.13352966]
[-17.79084587 61.14048004]
[-32.28704834 57.28559875]
[-45.77041245 50.71301270]
[-57.73685074 41.66843796]
[-67.73899078 30.49000931]
[-75.40289307 17.59564590]
[-80.44203949 3.46741199]
[-82.66802979 -11.36649990]
[-81.99765778 -26.35151291]
[-78.45597839 -40.92739868]
[-72.17539215 -54.54923248]
[-63.39072037 -66.70774841]
[-52.43037033 -76.94838715]
[-39.70410919 -84.88830566]
[-25.68771362 -90.23065186]
[-10.90520096 -92.77571106]
[4.09077549 -92.42832184]
[18.73958015 -89.20148468]
[32.49355698 -83.21582031]
[44.83850479 -74.69512177]
[55.31289673 -63.95794296]
[63.52513885 -51.40568924]
[69.16821289 -37.50764084]
[72.03057098 -22.78946114]
[76.00266266 -37.25398636]
[79.97476196 -51.71850967]
[83.94686127 -66.18303680]
[87.91895294 -80.64756012]
[73.79002380 -75.61035919]
[60.96269989 -83.38595581]
[58.89281082 -98.24245453]
[69.10620117 -109.22820282]
[84.07393646 -108.24491882]
[92.76207733 -96.01906586]
[97.79899597 -110.14809418]
[102.83590698 -124.27712250]
[107.87282562 -138.40615845]
[112.90974426 -152.53518677]
[110.25572968 -168.13218689]
[121.81751251 -177.52232361]
[126.85442352 -191.65135193]
[113.28546143 -198.07487488]
[100.42350769 -205.81753540]
[88.39640045 -214.80238342]
[77.32367706 -224.94009399]
[67.31537628 -236.12994385]
[58.47097778 -248.26069641]
[50.87837601 -261.21179199]
[44.61303711 -274.85452271]
[39.73723221 -289.05331421]
[36.29941177 -303.66699219]
[34.33375168 -318.55035400]
[33.85978317 -333.55551147]
[34.88221741 -348.53326416]
[37.39089584 -363.33477783]
[41.36088181 -377.81295776]
[46.75271988 -391.82391357]
[53.51282501 -405.22836304]
[61.57400513 -417.89312744]
[70.85614777 -429.69229126]
[81.26699829 -440.50863647]
[92.70307922 -450.23458862]
[105.05074310 -458.77355957]
[118.18726349 -466.04064941]
[131.98208618 -471.96362305]
[146.29809570 -476.48361206]
[160.99301147 -479.55572510]
[175.92080688 -481.14941406]
[190.93309021 -481.24880981]
[205.88067627 -479.85296631]
[220.61499023 -476.97573853]
[234.98960876 -472.64575195]
[248.86166382 -466.90597534]
[262.09326172 -459.81350708]
[274.55294800 -451.43884277]
[286.11682129 -441.86517334]
[296.67001343 -431.18765259]
[306.10760498 -419.51245117]
[314.33581543 -406.95556641]
[321.27282715 -393.64181519]
[326.84976196 -379.70349121]
[331.01113892 -365.27917480]
[333.71563721 -350.51217651]
[334.93634033 -335.54925537]
[334.66113281 -320.53918457]
[332.89276123 -305.63107300]
[329.64877319 -290.97311401]
[324.96142578 -276.71102905]
[318.87731934 -262.98651123]
[311.45690918 -249.93600464]
[302.77395630 -237.68917847]
[292.91470337 -226.36776733]
[281.97723389 -216.08428955]
[270.07015991 -206.94096375]
[257.31188965 -199.02864075]
[243.82917786 -192.42596436]
[229.75604248 -187.19857788]
[215.23236084 -183.39840698]
[200.40248108 -181.06323242]
[185.41377258 -180.21624756]
[170.41522217 -180.86590576]
[155.55589294 -183.00572205]
[140.98345947 -186.61442566]
[135.94653320 -172.48539734]
[138.96083069 -157.89898682]
[127.03877258 -147.49826050]
[122.00185394 -133.36923218]
[116.96494293 -119.24020386]
[111.92802429 -105.11117554]
[106.89110565 -90.98214722]
[102.38347626 -76.67546082]
[98.41138458 -62.21093750]
[94.43928528 -47.74641418]
[90.46718597 -33.28189087]
[86.49509430 -18.81736565]
[85.82530975 -3.83232689]
[88.49110413 10.92889023]
[91.15689850 25.69010735]
[94.15167236 40.38811111]
[97.47393036 55.01557159]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[115.82865906 96.28079224]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[117.77191162 141.40216064]
[121.31158447 155.97853088]
[124.85125732 170.55491638]
[128.39093018 185.13128662]
[139.16625977 196.71588135]
[134.65083313 210.90954590]
[138.93046570 215.94902039]
[139.88008118 221.55216980]
[138.07202148 225.97257996]
[141.17613220 240.64787292]
[151.60176086 252.54815674]
[146.66572571 266.60110474]
[149.76983643 281.27639771]
[152.87394714 295.95169067]
[167.88092041 295.12030029]
[182.83892822 296.58956909]
[197.39730835 300.32504272]
[211.21481323 306.23916626]
[223.96754456 314.19332886]
[235.35653687 324.00103760]
[245.11483765 335.43240356]
[253.01368713 348.21942139]
[258.86795044 362.06240845]
[262.54034424 376.63684082]
[263.94482422 391.60107422]
[263.04843140 406.60430908]
[259.87222290 421.29483032]
[254.49064636 435.32833862]
[247.02983093 448.37582397]
[237.66465759 460.13140869]
[226.61470032 470.31958008]
[214.13896179 478.70147705]
[200.52989197 485.08062744]
[186.10650635 489.30752563]
[171.20690918 491.28302002]
[156.18037415 490.96084595]
[141.37915039 488.34854126]
[127.15019226 483.50735474]
[113.82704163 476.55078125]
[101.72201538 467.64184570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 184]
[14 183]
[15 182]
[17 180]
[18 179]
[19 176]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[29 167]
[30 166]
[31 165]
[32 164]
[36 163]
[37 162]
[38 161]
[69 160]
[70 159]
[71 158]
[72 157]
[73 156]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[85 149]
[86 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
