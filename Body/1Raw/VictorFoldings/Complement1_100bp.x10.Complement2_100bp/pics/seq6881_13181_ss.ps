%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[48.60482788 487.10256958]
[44.55482483 501.56634521]
[38.72391510 515.40844727]
[31.20406723 528.41058350]
[22.11387634 540.36761475]
[11.59670925 551.09106445]
[-0.18156260 560.41180420]
[-13.03518009 568.18273926]
[-26.76142120 574.28137207]
[-41.14380646 578.61157227]
[-55.95550156 581.10491943]
[-70.96290588 581.72216797]
[-85.92933655 580.45361328]
[-100.61874390 577.31915283]
[-114.79945374 572.36834717]
[-128.24781799 565.67919922]
[-140.75173950 557.35723877]
[-152.11401367 547.53369141]
[-162.15544128 536.36352539]
[-170.71765137 524.02288818]
[-177.66560364 510.70635986]
[-182.88972473 496.62405396]
[-186.30761719 481.99798584]
[-187.86538696 467.05889893]
[-187.53845215 452.04235840]
[-185.33197021 437.18521118]
[-181.28074646 422.72180176]
[-175.44866943 408.88018799]
[-167.92771912 395.87869263]
[-158.83653259 383.92239380]
[-148.31846619 373.19979858]
[-136.53939819 363.88009644]
[-123.68513489 356.11022949]
[-109.95837402 350.01272583]
[-95.57563019 345.68377686]
[-80.76372528 343.19165039]
[-65.75626373 342.57565308]
[-50.78994370 343.84552002]
[-36.10080338 346.98117065]
[-21.92050743 351.93316650]
[-15.24031162 338.50280762]
[-8.56011772 325.07241821]
[-1.87992275 311.64205933]
[4.80027199 298.21166992]
[11.48046684 284.78131104]
[18.16066170 271.35092163]
[24.84085655 257.92053223]
[31.52104950 244.49017334]
[38.20124435 231.05979919]
[37.55775070 226.32746887]
[39.88024902 221.14065552]
[45.28550720 217.33345032]
[52.36260986 204.10792542]
[51.54543686 189.23574829]
[64.87844849 180.71862793]
[65.26264191 173.33796692]
[72.16064453 167.35003662]
[79.43387604 154.23133850]
[86.70710754 141.11264038]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[95.02529144 57.42491913]
[84.98479462 48.44700241]
[81.99198151 35.51434708]
[86.92116547 23.39885330]
[97.76523590 16.43927956]
[98.88088226 1.48082566]
[99.99653625 -13.47762775]
[101.11218262 -28.43608093]
[91.20646667 -37.56248856]
[88.40653229 -50.53826904]
[93.51554871 -62.57903290]
[104.46203613 -69.37638092]
[105.80027008 -84.31656647]
[107.13850403 -99.25675201]
[108.36547852 -114.20648956]
[101.67601776 -128.54391479]
[110.33850098 -140.66046143]
[111.45414734 -155.61891174]
[112.56979370 -170.57736206]
[113.68544769 -185.53581238]
[114.80109406 -200.49426270]
[115.69390869 -215.46768188]
[116.36369324 -230.45271301]
[117.03347778 -245.43775940]
[102.31694794 -248.50692749]
[88.28337097 -253.89717102]
[75.29624939 -261.46890259]
[63.69197845 -271.02593994]
[53.77114868 -282.32077026]
[45.79072189 -295.06082153]
[39.95741653 -308.91610718]
[36.42232513 -323.52770996]
[35.27701950 -338.51718140]
[36.55116272 -353.49627686]
[40.21175003 -368.07696533]
[46.16396713 -381.88156128]
[54.25363541 -394.55252075]
[64.27121735 -405.76165771]
[75.95722198 -415.21856689]
[89.00896454 -422.67834473]
[103.08837128 -427.94772339]
[117.83074951 -430.89025879]
[132.85423279 -431.42968750]
[147.76968384 -429.55209351]
[162.19076538 -425.30603027]
[175.74391174 -418.80154419]
[188.07807922 -410.20712280]
[198.87377930 -399.74533081]
[207.85137939 -387.68719482]
[214.77835083 -374.34503174]
[219.47523499 -360.06442261]
[221.82040405 -345.21530151]
[221.75309753 -330.18228149]
[219.27507019 -315.35476685]
[214.45048523 -301.11679077]
[207.40434265 -287.83718872]
[198.31912231 -275.85992432]
[187.43017578 -265.49520874]
[175.01954651 -257.01156616]
[161.40870667 -250.62869263]
[146.95018005 -246.51196289]
[132.01852417 -244.76797485]
[131.34873962 -229.78292847]
[130.67895508 -214.79789734]
[133.18354797 -210.73144531]
[133.16023254 -205.04844666]
[129.75955200 -199.37861633]
[128.64390564 -184.42016602]
[127.52825165 -169.46171570]
[126.41260529 -154.50326538]
[125.29695129 -139.54479980]
[132.06620789 -126.27731323]
[123.32393646 -113.09083557]
[125.96123505 -106.18675232]
[122.07868958 -97.91851807]
[120.74045563 -82.97833252]
[119.40222168 -68.03814697]
[130.72741699 -55.60518646]
[129.53291321 -38.49121475]
[116.07063293 -27.32043266]
[114.95498657 -12.36197948]
[113.83934021 2.59647441]
[112.72368622 17.55492783]
[124.23274231 29.81789589]
[123.29316711 46.94775391]
[109.99870300 58.31773376]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[113.31654358 114.58199310]
[123.13192749 103.23923492]
[134.94673157 93.99746704]
[148.31924438 87.20217896]
[162.74952698 83.10743713]
[177.69810486 81.86632538]
[192.60607910 83.52523041]
[206.91613770 88.02214050]
[220.09327698 95.18894196]
[231.64486694 104.75769043]
[241.13902283 116.37065125]
[248.22082520 129.59365845]
[252.62550354 143.93238831]
[254.18836975 158.85073853]
[252.85102844 173.79100037]
[248.66345215 188.19462585]
[241.78219604 201.52310181]
[232.46453857 213.27815247]
[221.05880737 223.02029419]
[207.99143982 230.38533020]
[193.75093079 235.09788513]
[178.86970520 236.98179626]
[163.90409851 235.96662903]
[149.41360474 232.09033203]
[135.93997192 225.49781799]
[123.98691559 216.43556213]
[114.00131226 205.24237061]
[106.35647583 192.33668518]
[101.33821869 178.20101929]
[99.13414764 163.36384583]
[99.82579803 148.38587952]
[92.55256653 161.50456238]
[85.27934265 174.62326050]
[78.10397339 187.79573059]
[78.41494751 203.61389160]
[65.58814240 211.18502808]
[58.51103210 224.41055298]
[51.63162231 237.73999023]
[44.95142746 251.17036438]
[38.27123260 264.60073853]
[31.59103775 278.03112793]
[24.91084290 291.46148682]
[18.23064804 304.89187622]
[11.55045319 318.32223511]
[4.87025881 331.75262451]
[-1.80993605 345.18298340]
[-8.49013042 358.61337280]
[4.01449299 366.93429565]
[15.37759399 376.75686646]
[25.41996002 387.92620850]
[33.98320770 400.26614380]
[40.93228149 413.58206177]
[46.15758514 427.66394043]
[49.57670975 442.28970337]
[51.13573074 457.22866821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[52 192]
[53 191]
[55 189]
[57 188]
[58 187]
[59 186]
[60 155]
[61 154]
[63 152]
[64 151]
[65 150]
[69 147]
[70 146]
[71 145]
[72 144]
[76 141]
[77 140]
[78 139]
[79 137]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 128]
[87 127]
[88 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
