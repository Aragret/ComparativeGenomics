%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[47.98954773 701.77947998]
[35.05254745 694.11511230]
[23.59702110 684.37457275]
[13.95257187 672.83795166]
[6.39668512 659.83734131]
[1.14676106 645.74670410]
[-1.64615023 630.97143555]
[-1.90169108 615.93670654]
[0.38749108 601.07513428]
[5.15553188 586.81420898]
[12.26524544 573.56427002]
[21.51206970 561.70660400]
[32.62995911 551.58239746]
[45.29902267 543.48278809]
[59.15475464 537.64099121]
[73.79849243 534.22503662]
[72.90567780 519.25158691]
[72.01286316 504.27819824]
[71.12004089 489.30480957]
[70.22722626 474.33139038]
[61.74610519 462.08721924]
[68.64828491 447.85098267]
[66.26797485 445.24975586]
[65.02932739 441.36633301]
[65.52126312 436.74993896]
[68.06514740 432.19189453]
[67.84181976 417.19354248]
[67.61849213 402.19522095]
[67.39516449 387.19686890]
[67.17183685 372.19854736]
[58.89929581 384.71112061]
[45.80419922 392.02676392]
[30.81202126 392.51107788]
[17.27205086 386.05590820]
[8.20915413 374.10336304]
[5.64800501 359.32360840]
[10.16077042 345.01855469]
[20.73928642 334.38394165]
[35.02028656 329.79559326]
[49.81335831 332.27853394]
[61.81369400 341.27807617]
[68.34038544 354.78375244]
[70.56550598 339.94970703]
[72.79061890 325.11566162]
[75.01573944 310.28161621]
[77.24085236 295.44757080]
[79.46597290 280.61352539]
[72.17233276 264.65200806]
[83.76261902 250.34303284]
[85.76663208 235.47750854]
[87.10486603 220.53732300]
[87.77465057 205.55229187]
[88.44443512 190.56724548]
[89.11421967 175.58221436]
[81.95294189 162.52214050]
[90.29872894 149.08122253]
[75.61476898 143.68571472]
[63.31498337 134.01898193]
[54.60195541 121.02614594]
[50.32757187 105.97756195]
[50.90974426 90.34453583]
[56.29155350 75.65554047]
[65.94680786 63.34674072]
[78.93150330 54.62159729]
[93.97609711 50.33317184]
[94.42269897 35.33982086]
[94.86930847 20.34647179]
[95.31591034 5.35312176]
[95.76251984 -9.64022827]
[88.43952942 -23.66464996]
[96.55233765 -36.15591049]
[96.99894714 -51.14926147]
[97.44554901 -66.14260864]
[97.89215851 -81.13596344]
[98.22713470 -96.13221741]
[85.80980682 -87.71735382]
[71.44403076 -92.03297424]
[65.71972656 -105.89776611]
[72.85663605 -119.09111786]
[87.59369659 -121.88738251]
[99.06661224 -112.22676849]
[100.40484619 -127.16694641]
[101.74308014 -142.10713196]
[94.08677673 -152.48710632]
[95.50897217 -164.90327454]
[104.70536804 -172.76156616]
[106.26589203 -187.68017578]
[98.37953949 -204.32009888]
[109.23376465 -218.10969543]
[110.57199860 -233.04988098]
[111.91023254 -247.99006653]
[113.24846649 -262.93023682]
[114.58670044 -277.87042236]
[115.81367493 -292.82015991]
[116.92932892 -307.77862549]
[118.04497528 -322.73706055]
[119.16062164 -337.69552612]
[120.27627563 -352.65399170]
[106.19752502 -358.15673828]
[94.36726379 -367.56610107]
[85.83741760 -380.04541016]
[81.36645508 -394.48501587]
[81.35194397 -409.60092163]
[85.79516602 -424.04910278]
[94.30102539 -436.54476929]
[106.11319733 -445.97683716]
[120.18135071 -451.50662231]
[135.25456238 -452.64239502]
[149.99250793 -449.28320312]
[163.08471680 -441.72772217]
[173.36703491 -430.64776611]
[179.92517090 -417.02856445]
[182.17597961 -402.08114624]
[179.91931152 -387.13461304]
[173.35583496 -373.51800537]
[163.06916809 -362.44210815]
[149.97399902 -354.89175415]
[135.23472595 -351.53833008]
[134.11907959 -336.57986450]
[133.00343323 -321.62142944]
[131.88778687 -306.66296387]
[130.77212524 -291.70452881]
[133.40943909 -284.80041504]
[129.52688599 -276.53219604]
[128.18865967 -261.59201050]
[126.85041809 -246.65182495]
[125.51218414 -231.71163940]
[124.17395020 -216.77145386]
[131.68705750 -207.29095459]
[130.69442749 -194.83309937]
[121.18449402 -186.11965942]
[119.62397003 -171.20104980]
[127.62305450 -155.58114624]
[116.68326569 -140.76890564]
[115.34503174 -125.82871246]
[114.00679779 -110.88852692]
[113.22547150 -95.90888977]
[116.26903534 -89.17401886]
[112.88550568 -80.68935394]
[112.43890381 -65.69600677]
[111.99229431 -50.70265579]
[111.54569244 -35.70930481]
[118.90061951 -22.75730896]
[110.75586700 -9.19362259]
[110.30926514 5.79972792]
[109.86265564 20.79307747]
[109.41605377 35.78642654]
[108.96944427 50.77977753]
[122.47100067 55.29949188]
[134.15266418 63.43941116]
[143.06837463 74.54030609]
[148.49606323 87.70312500]
[149.99615479 101.86184692]
[147.44714355 115.86978149]
[141.05548096 128.59245300]
[131.33882141 138.99948120]
[119.08408356 146.24801636]
[105.28376770 149.75100708]
[112.39714050 163.88290405]
[104.09925842 176.25199890]
[103.42947388 191.23703003]
[102.75968933 206.22207642]
[102.08990479 221.20710754]
[113.86155701 211.91043091]
[128.77456665 213.52346802]
[138.28610229 225.12220764]
[136.94750977 240.06236267]
[125.52560425 249.78553772]
[110.56336212 248.72184753]
[100.63215637 237.48152161]
[98.62814331 252.34706116]
[105.81331635 263.05853271]
[103.83813477 275.39883423]
[94.30001831 282.83865356]
[92.07489777 297.67269897]
[89.84978485 312.50674438]
[87.62466431 327.34078979]
[85.39955139 342.17480469]
[83.17443085 357.00885010]
[82.17017365 371.97521973]
[82.39350128 386.97354126]
[82.61682892 401.97189331]
[82.84015656 416.97021484]
[83.06348419 431.96856689]
[83.62168884 446.95816040]
[92.16667938 460.27334595]
[85.20063782 473.43856812]
[86.09345245 488.41198730]
[86.98626709 503.38537598]
[87.87908173 518.35882568]
[88.77189636 533.33221436]
[103.71780396 534.98382568]
[118.16954803 539.13775635]
[131.71131897 545.67443848]
[143.95350647 554.40582275]
[154.54388428 565.08068848]
[163.17771912 577.39184570]
[169.60661316 590.98510742]
[173.64559937 605.46942139]
[175.17845154 620.42797852]
[174.16108704 635.43041992]
[170.62277222 650.04504395]
[164.66529846 663.85144043]
[156.46009827 676.45233154]
[146.24322510 687.48516846]
[134.30863953 696.63250732]
[120.99974823 703.63122559]
[106.69946289 708.27984619]
[91.81922150 710.44464111]
[76.78716278 710.06341553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[22 185]
[26 184]
[27 183]
[28 182]
[29 181]
[30 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[49 171]
[50 170]
[51 163]
[52 162]
[53 161]
[54 160]
[56 158]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[71 142]
[72 141]
[73 140]
[74 139]
[75 137]
[81 136]
[82 135]
[83 134]
[86 132]
[87 131]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
