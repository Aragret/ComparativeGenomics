%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[60.51958084 753.05499268]
[45.51749420 753.33972168]
[30.52633476 752.70031738]
[15.60296822 751.13934326]
[0.80400544 748.66253662]
[-13.81441689 745.27947998]
[-28.19684410 741.00286865]
[-42.28872299 735.84893799]
[-56.03659058 729.83728027]
[-69.38829803 722.99072266]
[-82.29320526 715.33520508]
[-94.70235443 706.89978027]
[-106.56866455 697.71643066]
[-117.84713745 687.81994629]
[-128.49497986 677.24792480]
[-138.47180176 666.04052734]
[-147.73976135 654.24017334]
[-156.26368713 641.89160156]
[-164.01126099 629.04174805]
[-170.95309448 615.73931885]
[-177.06285095 602.03479004]
[-182.31735229 587.98010254]
[-186.69667053 573.62860107]
[-190.18417358 559.03479004]
[-192.76666260 544.25390625]
[-194.43431091 529.34204102]
[-195.18083191 514.35583496]
[-195.00334167 499.35211182]
[-193.90255737 484.38775635]
[-191.88264465 469.51956177]
[-188.95124817 454.80389404]
[-185.11950684 440.29660034]
[-180.40193176 426.05273438]
[-174.81645203 412.12628174]
[-168.38423157 398.57009888]
[-161.12968445 385.43557739]
[-153.08032227 372.77258301]
[-144.26667786 360.62915039]
[-134.72218323 349.05130005]
[-124.48304749 338.08300781]
[-113.58811188 327.76583862]
[-102.07870483 318.13894653]
[-89.99848175 309.23883057]
[-77.39327240 301.09927368]
[-64.31089020 293.75115967]
[-50.80096436 287.22232056]
[-36.91474152 281.53756714]
[-22.70489693 276.71844482]
[-8.22533131 272.78323364]
[6.46902561 269.74688721]
[21.32243347 267.62088013]
[36.27854919 266.41329956]
[51.28063965 266.12872314]
[66.27178955 266.76821899]
[67.83231354 251.84960938]
[69.39283752 236.93101501]
[70.95336151 222.01240540]
[57.83480835 229.28588867]
[43.91134262 223.70582581]
[39.44682312 209.38563538]
[47.73232651 196.88162231]
[62.66008759 195.41127014]
[73.22537231 206.05693054]
[75.89116669 191.29571533]
[78.55696106 176.53450012]
[81.22275543 161.77328491]
[75.87051392 147.87355042]
[85.93721008 135.66812134]
[88.60300446 120.90690613]
[91.26879883 106.14569092]
[92.38444519 91.18724060]
[91.93784332 76.19388580]
[91.49123383 61.20053864]
[80.68980408 53.15419388]
[76.55513000 40.54011536]
[80.38376617 28.03317261]
[90.56369019 20.13389015]
[90.34036255 5.13555384]
[90.11703491 -9.86278343]
[89.89370728 -24.86112022]
[89.67037964 -39.85945892]
[89.44705200 -54.85779572]
[89.22372437 -69.85613251]
[89.00039673 -84.85446930]
[88.77706909 -99.85280609]
[76.61579132 -91.07196808]
[62.12789154 -94.95794678]
[55.99332047 -108.64615631]
[62.73425293 -122.04615021]
[77.38152313 -125.27995300]
[89.13697815 -115.96520996]
[90.02979279 -130.93861389]
[83.12761688 -145.17485046]
[91.60873413 -157.41902161]
[92.50154877 -172.39244080]
[93.39437103 -187.36584473]
[94.28718567 -202.33924866]
[95.18000031 -217.31265259]
[81.08956146 -222.81852722]
[69.39144897 -232.41069031]
[61.23173523 -245.14938354]
[57.40982056 -259.78659058]
[58.30013275 -274.88833618]
[63.81545258 -288.97506714]
[73.41544342 -300.66674805]
[86.15959930 -308.81793213]
[100.79937744 -312.63003540]
[115.90051270 -311.72961426]
[129.98356628 -306.20486450]
[141.66880798 -296.59704590]
[149.81144714 -283.84741211]
[153.61373901 -269.20507812]
[152.70318604 -254.10455322]
[147.16899109 -240.02522278]
[137.55334473 -228.34642029]
[124.79827881 -220.21232605]
[110.15340424 -216.41983032]
[109.26058960 -201.44642639]
[108.36777496 -186.47302246]
[107.47496033 -171.49961853]
[106.58214569 -156.52621460]
[113.54818726 -143.36097717]
[105.00320435 -130.04580688]
[104.11038208 -115.07239532]
[103.77540588 -100.07613373]
[103.99873352 -85.07779694]
[104.22206116 -70.07946014]
[104.44538879 -55.08112335]
[104.66871643 -40.08278656]
[104.89204407 -25.08444977]
[105.11537170 -10.08611107]
[105.33869934 4.91222620]
[105.56202698 19.91056252]
[118.11923981 31.09784317]
[118.71166229 48.24322128]
[106.48458862 60.75393295]
[106.93119049 75.74728394]
[107.37779999 90.74063110]
[114.60905457 77.59875488]
[126.27085876 68.16465759]
[140.63327026 63.83782578]
[155.56567383 65.26013184]
[168.85298157 72.22057343]
[178.52406311 83.68661499]
[183.14428711 97.95733643]
[182.02827454 112.91575623]
[175.34156799 126.34289551]
[164.07611084 136.24690247]
[149.90306091 141.15858459]
[134.92491150 140.34933472]
[121.36357117 133.93917847]
[111.23078918 122.87902832]
[106.03001404 108.81148529]
[103.36421967 123.57270050]
[100.69842529 138.33392334]
[105.85999298 153.28947449]
[95.98397827 164.43907166]
[93.31818390 179.20030212]
[90.65238190 193.96151733]
[87.98658752 208.72273254]
[85.87196350 223.57292175]
[84.31143951 238.49153137]
[82.75091553 253.41014099]
[81.19039917 268.32873535]
[95.98938751 270.80535889]
[110.60784149 274.18832397]
[124.99031067 278.46478271]
[139.08222961 283.61853027]
[152.83016968 289.63003540]
[166.18194580 296.47647095]
[179.08692932 304.13186646]
[191.49615479 312.56719971]
[203.36254883 321.75045776]
[214.64112854 331.64678955]
[225.28906250 342.21868896]
[235.26599121 353.42602539]
[244.53407288 365.22628784]
[253.05812073 377.57473755]
[260.80584717 390.42453003]
[267.74780273 403.72686768]
[273.85769653 417.43136597]
[279.11233521 431.48599243]
[283.49176025 445.83743286]
[286.97943115 460.43127441]
[289.56207275 475.21212769]
[291.22985840 490.12393188]
[291.97653198 505.11013794]
[291.79919434 520.11389160]
[290.69854736 535.07824707]
[288.67877197 549.94647217]
[285.74752808 564.66217041]
[281.91592407 579.16949463]
[277.19848633 593.41339111]
[271.61315918 607.33990479]
[265.18106079 620.89617920]
[257.92663574 634.03076172]
[249.87741089 646.69378662]
[241.06387329 658.83734131]
[231.51950073 670.41528320]
[221.28047180 681.38366699]
[210.38563538 691.70092773]
[198.87632751 701.32794189]
[186.79618835 710.22821045]
[174.19105530 718.36785889]
[161.10874939 725.71612549]
[147.59889221 732.24505615]
[133.71272278 737.92999268]
[119.50292206 742.74920654]
[105.02339935 746.68457031]
[90.32907104 749.72106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 164]
[55 163]
[56 162]
[57 161]
[63 160]
[64 159]
[65 158]
[66 157]
[68 155]
[69 154]
[70 153]
[71 138]
[72 137]
[73 136]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[91 124]
[92 123]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
