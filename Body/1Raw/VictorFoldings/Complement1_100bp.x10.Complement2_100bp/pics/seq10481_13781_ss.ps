%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[120.95247650 725.30822754]
[107.52556610 718.60870361]
[94.57079315 711.03643799]
[82.14479828 702.62451172]
[70.30191803 693.40972900]
[59.09394836 683.43243408]
[48.56989288 672.73614502]
[38.77577209 661.36773682]
[29.75441360 649.37689209]
[21.54526520 636.81604004]
[14.18422318 623.74005127]
[7.70347691 610.20617676]
[2.13136506 596.27355957]
[-2.50774693 582.00317383]
[-6.19357347 567.45739746]
[-8.90999699 552.69976807]
[-10.64513874 537.79492188]
[-11.39141273 522.80798340]
[-11.14555359 507.80444336]
[-9.90863800 492.85000610]
[-7.68607426 478.00997925]
[-4.48758125 463.34930420]
[-0.32714516 448.93209839]
[4.77704144 434.82135010]
[10.80265903 421.07879639]
[17.72335815 407.76452637]
[25.50887871 394.93676758]
[34.12517166 382.65161133]
[43.53456497 370.96276855]
[53.69591141 359.92135620]
[64.56477356 349.57565308]
[76.09363556 339.97091675]
[88.23207092 331.14910889]
[100.92700195 323.14886475]
[114.12293243 316.00509644]
[127.76213837 309.74908447]
[141.78498840 304.40817261]
[137.38400269 290.06832886]
[132.98300171 275.72848511]
[128.58200073 261.38864136]
[124.18099976 247.04879761]
[119.78000641 232.70893860]
[115.37900543 218.36909485]
[112.96853638 216.93809509]
[110.97966766 214.46604919]
[109.81175232 211.10876465]
[109.80043030 207.16358948]
[111.17037964 203.04324341]
[107.63070679 188.46687317]
[104.09104156 173.89050293]
[100.55136871 159.31411743]
[93.61961365 172.61640930]
[80.24462891 179.40682983]
[65.41496277 177.15274048]
[54.66170502 166.69485474]
[51.99555588 151.93370056]
[58.41092682 138.37483215]
[71.51504517 131.07536316]
[86.42038727 132.75781250]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[76.09544373 87.76929474]
[61.53197861 84.02474213]
[47.90820694 77.66949463]
[35.68750381 68.92130280]
[25.28520584 58.07931519]
[17.05453110 45.51377487]
[11.27456188 31.65344048]
[8.14079475 16.97091103]
[7.75852346 1.96653461]
[10.13930035 -12.84864807]
[15.20059681 -26.97031021]
[22.76866150 -39.91800690]
[32.58448410 -51.25151825]
[44.31266022 -60.58581924]
[57.55284882 -67.60415649]
[71.85344696 -72.06880951]
[70.07098389 -86.96252441]
[60.74861526 -99.74549103]
[66.91870117 -113.30200958]
[63.26823425 -118.81433105]
[62.99117661 -124.49062347]
[65.31170654 -128.66484070]
[63.97347260 -143.60502625]
[62.63523865 -158.54521179]
[61.29700470 -173.48539734]
[59.95877075 -188.42558289]
[58.62053680 -203.36576843]
[57.28230286 -218.30595398]
[55.94406891 -233.24613953]
[41.19277191 -236.60092163]
[28.20117950 -244.35163879]
[18.24206924 -255.73896790]
[12.29113388 -269.64730835]
[10.93138790 -284.71401978]
[14.29604340 -299.46307373]
[22.05546761 -312.44946289]
[33.44946671 -322.40093994]
[47.36177826 -328.34255981]
[62.42941666 -329.69219971]
[77.17620087 -326.31765747]
[90.15739441 -318.54953003]
[100.10123444 -307.14886475]
[106.03352356 -293.23257446]
[107.37307739 -278.16406250]
[103.98866272 -263.41952515]
[96.21184540 -250.44354248]
[84.80451202 -240.50733948]
[70.88425446 -234.58438110]
[72.22248840 -219.64419556]
[73.56072235 -204.70401001]
[74.89895630 -189.76382446]
[76.23719025 -174.82363892]
[77.57542419 -159.88345337]
[78.91365814 -144.94326782]
[80.25189209 -130.00308228]
[81.81241608 -115.08448029]
[91.00728607 -103.36681366]
[84.96469879 -88.74499512]
[86.74716187 -73.85128021]
[101.69744873 -72.88734436]
[116.21989441 -69.19161224]
[129.81953430 -62.88851547]
[142.03260803 -54.19140244]
[152.44230652 -43.39526749]
[160.69306946 -30.86677933]
[166.50267029 -17.03181267]
[169.67190552 -2.36097741]
[170.09138489 12.64639473]
[167.74539185 27.47923851]
[162.71235657 41.63216400]
[155.16230774 54.62267303]
[145.35112000 66.00761414]
[133.61181641 75.39830017]
[120.34327698 82.47376251]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[115.12773895 155.77444458]
[118.66741180 170.35083008]
[122.20708466 184.92720032]
[125.74675751 199.50357056]
[129.71885681 213.96809387]
[134.11985779 228.30795288]
[138.52084351 242.64779663]
[142.92184448 256.98764038]
[147.32284546 271.32748413]
[151.72384644 285.66732788]
[156.12484741 300.00717163]
[170.72953796 296.56210327]
[185.52998352 294.08978271]
[200.46147156 292.60104370]
[215.45870972 292.10238647]
[230.45611572 292.59600830]
[245.38809204 294.07974243]
[260.18939209 296.54708862]
[274.79522705 299.98727417]
[289.14178467 304.38525391]
[303.16629028 309.72180176]
[316.80743408 315.97357178]
[330.00558472 323.11322021]
[342.70303345 331.10952759]
[354.84420776 339.92755127]
[366.37603760 349.52871704]
[377.24813843 359.87103271]
[387.41290283 370.90927124]
[396.82592773 382.59518433]
[405.44604492 394.87765503]
[413.23556519 407.70300293]
[420.16040039 421.01510620]
[426.19030762 434.75576782]
[431.29888916 448.86492920]
[435.46380615 463.28085327]
[438.66683960 477.94055176]
[440.89404297 492.77987671]
[442.13558960 507.73394775]
[442.38613892 522.73736572]
[441.64453125 537.72454834]
[439.91400146 552.62994385]
[437.20217896 567.38842773]
[433.52087402 581.93536377]
[428.88619995 596.20721436]
[423.31842041 610.14154053]
[416.84188843 623.67742920]
[409.48492432 636.75567627]
[401.27969360 649.31909180]
[392.26205444 661.31274414]
[382.47146606 672.68420410]
[371.95074463 683.38372803]
[360.74588013 693.36456299]
[348.90588379 702.58300781]
[336.48251343 710.99877930]
[323.53009033 718.57513428]
[310.10525513 725.27880859]
[296.26672363 731.08062744]
[282.07501221 735.95513916]
[267.59216309 739.88104248]
[252.88150024 742.84118652]
[238.00738525 744.82263184]
[223.03482056 745.81671143]
[208.02929688 745.81903076]
[193.05642700 744.82958984]
[178.18168640 742.85284424]
[163.47012329 739.89727783]
[148.98603821 735.97583008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[43 148]
[48 147]
[49 146]
[50 145]
[51 144]
[60 143]
[61 142]
[62 141]
[64 139]
[80 123]
[81 122]
[83 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
