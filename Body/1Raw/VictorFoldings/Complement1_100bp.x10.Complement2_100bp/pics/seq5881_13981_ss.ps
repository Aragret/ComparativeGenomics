%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[69.65539551 544.80236816]
[57.00450897 552.87170410]
[43.85782623 560.10522461]
[30.27049065 566.47253418]
[16.29948997 571.94702148]
[2.00342464 576.50573730]
[-12.55774117 580.12945557]
[-27.32293320 582.80303955]
[-42.23022079 584.51525879]
[-57.21707535 585.25891113]
[-72.22064209 585.03094482]
[-87.17798615 583.83221436]
[-102.02636719 581.66790771]
[-116.70350647 578.54693604]
[-131.14784241 574.48248291]
[-145.29881287 569.49151611]
[-159.09703064 563.59509277]
[-172.48461914 556.81781006]
[-185.40545654 549.18823242]
[-197.80532837 540.73822021]
[-209.63223267 531.50335693]
[-220.83654785 521.52227783]
[-231.37129211 510.83685303]
[-241.19227600 499.49194336]
[-250.25831604 487.53509521]
[-258.53137207 475.01647949]
[-265.97674561 461.98861694]
[-272.56320190 448.50613403]
[-278.26312256 434.62557983]
[-283.05261230 420.40518188]
[-286.91156006 405.90457153]
[-289.82379150 391.18460083]
[-291.77709961 376.30697632]
[-292.76327515 361.33413696]
[-292.77819824 346.32882690]
[-291.82180786 331.35406494]
[-289.89807129 316.47259521]
[-287.01510620 301.74685669]
[-283.18499756 287.23861694]
[-278.42379761 273.00869751]
[-272.75146484 259.11685181]
[-266.19183350 245.62129211]
[-258.77236938 232.57865906]
[-250.52421570 220.04362488]
[-241.48197937 208.06878662]
[-231.68356323 196.70436096]
[-221.17008972 185.99803162]
[-209.98562622 175.99468994]
[-198.17710876 166.73629761]
[-185.79406738 158.26167297]
[-172.88842773 150.60639954]
[-159.51432800 143.80255127]
[-145.72785950 137.87867737]
[-131.58685303 132.85963440]
[-117.15061951 128.76644897]
[-102.47971344 125.61631775]
[-87.63565826 123.42243958]
[-72.68073273 122.19402313]
[-57.67765045 121.93621063]
[-42.68934631 122.65009308]
[-27.77868271 124.33266449]
[-13.00820541 126.97688293]
[1.56013656 130.57164001]
[15.86523628 135.10188293]
[29.84709358 140.54858398]
[43.44706345 146.88891602]
[56.60810089 154.09626770]
[64.64926910 141.43374634]
[72.69044495 128.77122498]
[80.73162079 116.10869598]
[88.77278900 103.44616699]
[75.29275513 110.02558136]
[60.30513382 110.63477325]
[46.33559418 105.17107391]
[35.73825836 94.55521393]
[30.29895782 80.57615662]
[30.93431091 65.58962250]
[37.53725052 52.12109375]
[48.99506760 42.44026566]
[63.37691498 38.17852020]
[78.25920105 40.05404282]
[91.13399506 47.75076675]
[99.83168030 59.97166824]
[102.88652802 74.65730286]
[99.78308105 89.33440399]
[110.10974884 78.45507050]
[120.43641663 67.57573700]
[130.76309204 56.69640350]
[141.08975220 45.81706619]
[151.41642761 34.93773270]
[161.74308777 24.05839920]
[172.06976318 13.17906475]
[182.39642334 2.29973054]
[186.28068542 -15.70010662]
[203.28916931 -20.02194023]
[213.45271301 -31.05381775]
[223.61625671 -42.08569336]
[213.56161499 -53.23148727]
[204.57826233 -65.25746918]
[196.74287415 -78.06103516]
[190.12228394 -91.53294373]
[184.77297974 -105.55826569]
[180.74061584 -120.01733398]
[178.05957031 -134.78677368]
[176.75273132 -149.74060059]
[176.83123779 -164.75122070]
[178.29443359 -179.69055176]
[181.12983704 -194.43115234]
[185.31324768 -208.84724426]
[190.80895996 -222.81582642]
[197.57011414 -236.21775818]
[205.53901672 -248.93865967]
[214.64767456 -260.86999512]
[224.81835938 -271.91000366]
[235.96432495 -281.96447754]
[247.99044800 -290.94760132]
[260.79415894 -298.78277588]
[274.26617432 -305.40316772]
[288.29156494 -310.75222778]
[302.75070190 -314.78436279]
[317.52020264 -317.46514893]
[332.47406006 -318.77175903]
[347.48464966 -318.69299316]
[362.42398071 -317.22955322]
[377.16452026 -314.39389038]
[391.58053589 -310.21023560]
[405.54904175 -304.71429443]
[418.95086670 -297.95291138]
[431.67163086 -289.98379517]
[443.60281372 -280.87496948]
[454.64263916 -270.70407104]
[464.69692993 -259.55795288]
[473.67987061 -247.53167725]
[481.51483154 -234.72784424]
[488.13497925 -221.25570679]
[493.48382568 -207.23020935]
[497.51571655 -192.77101135]
[500.19625854 -178.00148010]
[501.50259399 -163.04760742]
[501.42358398 -148.03700256]
[499.95989990 -133.09771729]
[497.12399292 -118.35721588]
[492.94012451 -103.94126129]
[487.44393921 -89.97284698]
[480.68231201 -76.57115173]
[472.71301270 -63.85051727]
[463.60394287 -51.91947174]
[453.43289185 -40.87980652]
[442.28659058 -30.82571411]
[430.26016235 -21.84297371]
[417.45620728 -14.00822163]
[403.98397827 -7.38830566]
[389.95837402 -2.03970432]
[375.49911499 1.99194849]
[360.72952271 4.67225552]
[345.77563477 5.97834921]
[330.76504517 5.89908600]
[315.82577515 4.43514156]
[301.08532715 1.59900713]
[286.66943359 -2.58512092]
[272.70111084 -8.08154392]
[259.29953003 -14.84336662]
[246.57904053 -22.81290054]
[234.64813232 -31.92214775]
[224.48458862 -20.89027023]
[214.32104492 -9.85839272]
[214.50273132 2.23679399]
[206.12559509 11.51081181]
[193.27575684 12.62639904]
[182.94909668 23.50573349]
[172.62242126 34.38506699]
[162.29576111 45.26440048]
[151.96908569 56.14373779]
[141.64242554 67.02307129]
[131.31575012 77.90240479]
[120.98908234 88.78173828]
[110.66241455 99.66107178]
[101.43531799 111.48734283]
[93.39414215 124.14987183]
[85.35297394 136.81239319]
[77.31179810 149.47491455]
[69.27062225 162.13743591]
[81.39046478 170.98437500]
[92.91223145 180.59729004]
[103.78758240 190.93583679]
[113.97091675 201.95666504]
[123.41951752 213.61354065]
[132.09375000 225.85758972]
[139.95722961 238.63743591]
[146.97697449 251.89949036]
[153.12355042 265.58810425]
[158.37117004 279.64590454]
[162.69783020 294.01388550]
[166.08535767 308.63180542]
[168.51957703 323.43835449]
[169.99026489 338.37139893]
[170.49124146 353.36831665]
[170.02041626 368.36624146]
[168.57977295 383.30221558]
[166.17533875 398.11361694]
[162.81719971 412.73831177]
[158.51945496 427.11495972]
[153.30010986 441.18328857]
[147.18107605 454.88424683]
[140.18801880 468.16036987]
[132.35025024 480.95602417]
[123.70065308 493.21746826]
[114.27552032 504.89334106]
[104.11437225 515.93463135]
[93.25982666 526.29504395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 182]
[68 181]
[69 180]
[70 179]
[71 178]
[85 177]
[86 176]
[87 175]
[88 174]
[89 173]
[90 172]
[91 171]
[92 170]
[93 169]
[95 166]
[96 165]
[97 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
