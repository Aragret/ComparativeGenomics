%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[99.90934753 563.43957520]
[85.26541138 566.95654297]
[70.20778656 567.24285889]
[55.44074249 564.28509521]
[41.65496063 558.22155762]
[29.49522781 549.33587646]
[19.53027725 538.04370117]
[12.22618675 524.87310791]
[7.92458200 510.44012451]
[6.82665730 495.41986084]
[8.98376465 480.51480103]
[14.29501152 466.42208862]
[22.51198196 453.80084229]
[33.25035477 443.24142456]
[46.00787354 435.23770142]
[60.18784714 430.16400146]
[75.12705231 428.25762939]
[68.55607605 414.89083862]
[77.49371338 401.83596802]
[78.83194733 386.89578247]
[80.17018127 371.95559692]
[73.59920502 358.58880615]
[82.53684235 345.53393555]
[83.87508392 330.59375000]
[85.21331787 315.65356445]
[75.64910889 307.01901245]
[72.76129913 294.26196289]
[77.82270813 281.99035645]
[89.19268799 274.76965332]
[90.75320435 259.85104370]
[92.31372833 244.93244934]
[93.87425232 230.01385498]
[80.75570679 237.28733826]
[66.83223724 231.70727539]
[62.36771774 217.38706970]
[70.65322113 204.88305664]
[85.58097839 203.41271973]
[96.14626312 214.05838013]
[98.81205750 199.29716492]
[101.47785950 184.53594971]
[104.14365387 169.77471924]
[103.92032623 154.77638245]
[100.81621552 140.10108948]
[97.71210480 125.42578125]
[94.60799408 110.75048065]
[91.28573608 96.12302399]
[87.74606323 81.54664612]
[84.20639038 66.97026825]
[75.49765778 79.18329620]
[60.72714615 81.79709625]
[48.35607147 73.31437683]
[45.47115326 58.59441757]
[53.72499847 46.06948090]
[68.38943481 42.91442108]
[81.06344604 50.93582535]
[78.83833313 36.10177994]
[76.61321259 21.26773643]
[62.41705704 15.57420158]
[53.03870392 3.61831236]
[50.91803741 -11.32722759]
[56.52544785 -25.23452377]
[68.26210785 -34.40602112]
[66.03699493 -49.24006271]
[56.33816528 -61.73979568]
[62.10188293 -75.47401428]
[59.87676620 -90.30805969]
[57.65164948 -105.14210510]
[55.42652893 -119.97614288]
[53.20141220 -134.81019592]
[50.97629547 -149.64422607]
[48.75117874 -164.47827148]
[46.52606201 -179.31231689]
[44.30094528 -194.14636230]
[42.07582855 -208.98040771]
[30.27379036 -223.11523438]
[37.32897949 -239.18356323]
[27.44511986 -251.53750610]
[33.00371933 -265.35601807]
[30.55799103 -280.15530396]
[24.59313965 -266.39227295]
[13.30426216 -256.51498413]
[-1.12893772 -252.43052673]
[-15.91963482 -254.92756653]
[-28.21197891 -263.52398682]
[-35.63250732 -276.55993652]
[-36.74843597 -291.51837158]
[-31.34429359 -305.51104736]
[-20.46353912 -315.83621216]
[-6.20707130 -320.50024414]
[8.67240620 -318.60256958]
[21.30190086 -310.50961304]
[29.24327469 -297.78280640]
[29.46660233 -312.78112793]
[29.68992996 -327.77947998]
[29.91325760 -342.77780151]
[30.13658714 -357.77615356]
[30.35991478 -372.77447510]
[16.10601425 -377.88378906]
[4.28497934 -387.34646606]
[-3.82093310 -400.13601685]
[-7.33245420 -414.86517334]
[-5.86868095 -429.93621826]
[0.41160789 -443.71432495]
[10.82717323 -454.70498657]
[24.24821281 -461.71600342]
[39.21891403 -463.98687744]
[54.11536407 -461.27130127]
[67.32170868 -453.86376953]
[77.40542603 -442.56787109]
[83.27270508 -428.60888672]
[84.28710938 -413.50094604]
[80.33860016 -398.88287354]
[71.85548401 -386.34033203]
[59.75795364 -377.23382568]
[45.35824966 -372.55114746]
[45.13492203 -357.55282593]
[44.91159439 -342.55447388]
[44.68826675 -327.55615234]
[44.46493912 -312.55780029]
[44.24161148 -297.55947876]
[45.35726166 -282.60101318]
[47.80298996 -267.80175781]
[57.51191330 -256.50634766]
[52.12825012 -241.62930298]
[61.77607346 -234.33230591]
[63.93476868 -222.02281189]
[56.90987015 -211.20552063]
[59.13498688 -196.37147522]
[61.36010742 -181.53744507]
[63.58522415 -166.70339966]
[65.81034088 -151.86935425]
[68.03545380 -137.03530884]
[70.26057434 -122.20126343]
[72.48569489 -107.36721802]
[74.71080780 -92.53317261]
[76.93592834 -77.69913483]
[86.47560120 -66.26042938]
[80.87104034 -51.46517944]
[83.09615326 -36.63113785]
[97.00720215 -31.30681610]
[106.44822693 -19.65679550]
[108.80590820 -4.74680901]
[103.34815979 9.43450737]
[91.44725800 19.04261971]
[93.67237854 33.87666321]
[95.89749146 48.71070480]
[98.78276825 63.43059921]
[102.32243347 78.00697327]
[105.86210632 92.58335114]
[109.60752869 96.25565338]
[111.02880859 101.76503754]
[109.28329468 107.64636993]
[112.38740540 122.32167053]
[115.49151611 136.99697876]
[118.59562683 151.67227173]
[122.29676056 137.13606262]
[129.09886169 123.76701355]
[138.67002869 112.21743774]
[150.54327393 103.05086517]
[164.13928223 96.71455383]
[178.79464722 93.51766968]
[193.79432678 93.61618042]
[208.40643311 97.00530243]
[221.91802979 103.51965332]
[233.66984558 112.84139252]
[243.08848572 124.51569366]
[249.71438599 137.97293091]
[253.22425842 152.55651855]
[253.44686890 167.55487061]
[250.37132263 182.23617554]
[244.14768982 195.88412476]
[235.07965088 207.83279419]
[223.60964966 217.49919128]
[210.29733276 224.41163635]
[195.79222107 228.23289490]
[180.80207825 228.77650452]
[166.05828857 226.01594543]
[152.28024292 220.08590698]
[140.14019775 211.27572632]
[130.23049927 200.01527405]
[123.03464508 186.85397339]
[118.90486908 172.44052124]
[116.23907471 187.20173645]
[113.57328033 201.96295166]
[110.90748596 216.72416687]
[108.79286194 231.57437134]
[107.23233795 246.49298096]
[105.67181396 261.41159058]
[104.11128998 276.33016968]
[115.37399292 289.71566772]
[113.50800323 306.76947021]
[100.15349579 316.99182129]
[98.81526184 331.93200684]
[97.47702789 346.87219238]
[103.95228577 361.30761719]
[95.11036682 373.29385376]
[93.77213287 388.23403931]
[92.43389893 403.17422485]
[98.90915680 417.60964966]
[90.06723785 429.59588623]
[104.42983246 434.12686157]
[117.48238373 441.63986206]
[128.61439514 451.78344727]
[137.30520630 464.08319092]
[143.14833069 477.96383667]
[145.87046814 492.77612305]
[145.34431458 507.82727051]
[141.59448242 522.41333008]
[134.79632568 535.85205078]
[125.26783752 547.51489258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 200]
[19 198]
[20 197]
[21 196]
[23 194]
[24 193]
[25 192]
[29 189]
[30 188]
[31 187]
[32 186]
[38 185]
[39 184]
[40 183]
[41 182]
[42 155]
[43 154]
[44 153]
[45 152]
[46 149]
[47 148]
[48 147]
[55 146]
[56 145]
[57 144]
[62 139]
[63 138]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[76 124]
[78 122]
[79 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
