%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[153.04040527 572.87902832]
[137.98878479 574.04144287]
[123.18193054 571.09869385]
[109.71862030 564.26922607]
[98.59791565 554.05975342]
[90.64505768 541.22796631]
[86.45018768 526.72607422]
[86.32459259 511.63015747]
[90.27761078 497.06045532]
[98.01587677 484.09811401]
[108.96517944 473.70507812]
[122.31300354 466.65255737]
[137.06884766 463.46386719]
[137.96165466 448.49044800]
[138.85447693 433.51705933]
[139.74729919 418.54364014]
[137.00749207 411.67959595]
[140.76651001 403.35446167]
[141.88215637 388.39602661]
[142.66348267 373.41638184]
[143.11007690 358.42303467]
[143.55668640 343.42968750]
[144.00329590 328.43634033]
[144.44990540 313.44299316]
[144.89649963 298.44961548]
[144.11518860 283.47000122]
[142.11117554 268.60446167]
[140.10716248 253.73893738]
[138.10313416 238.87341309]
[134.78088379 224.24594116]
[130.16687012 209.97322083]
[118.88979340 200.24301147]
[122.00701141 184.73193359]
[117.18101501 170.52947998]
[112.14410400 156.40045166]
[107.10718536 142.27142334]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[77.54008484 84.80033112]
[73.63569641 72.92853546]
[78.69943237 61.94285202]
[66.93354797 51.36577606]
[70.16467285 36.82586288]
[65.33867645 22.62340736]
[50.94848251 23.08485985]
[37.02704620 19.47567749]
[24.70093536 12.09719658]
[14.96500492 1.55539739]
[8.60209751 -11.28884983]
[6.12010860 -25.39008904]
[7.71145344 -39.60336304]
[13.23818016 -52.77719498]
[22.24387932 -63.84685516]
[33.99136734 -71.92041779]
[29.37735748 -86.19315338]
[24.76334763 -100.46588898]
[13.15624428 -111.21696472]
[16.60348892 -125.70716095]
[11.98948002 -139.97988892]
[7.37547064 -154.25262451]
[2.76146126 -168.52536011]
[-1.85254800 -182.79809570]
[-13.45965099 -193.54917908]
[-10.01240635 -208.03936768]
[-14.62641525 -222.31210327]
[-19.24042511 -236.58483887]
[-23.85443497 -250.85757446]
[-34.96167374 -257.41439819]
[-38.51085663 -269.39718628]
[-33.12228012 -280.22723389]
[-37.52328110 -294.56707764]
[-41.92427826 -308.90692139]
[-56.76990891 -306.58572388]
[-71.79477692 -306.40100098]
[-86.69299316 -308.35647583]
[-101.16124725 -312.41238403]
[-114.90498352 -318.48614502]
[-127.64440155 -326.45407104]
[-139.12013245 -336.15399170]
[-149.09857178 -347.38839722]
[-157.37654114 -359.92855835]
[-163.78552246 -373.51919556]
[-168.19503784 -387.88363647]
[-170.51531982 -402.72943115]
[-170.69911194 -417.75430298]
[-168.74270630 -432.65240479]
[-164.68589783 -447.12039185]
[-158.61129761 -460.86376953]
[-150.64257812 -473.60269165]
[-140.94195557 -485.07781982]
[-129.70693970 -495.05554199]
[-117.16625214 -503.33273315]
[-103.57521057 -509.74087524]
[-89.21050262 -514.14953613]
[-74.36457825 -516.46887207]
[-59.33969116 -516.65173340]
[-44.44171906 -514.69439697]
[-29.97396660 -510.63671875]
[-16.23097992 -504.56124878]
[-3.49254990 -496.59173584]
[7.98198748 -486.89041138]
[17.95902443 -475.65478516]
[26.23544121 -463.11358643]
[32.64274216 -449.52215576]
[37.05047989 -435.15716553]
[39.36891937 -420.31109619]
[39.55086517 -405.28619385]
[37.59260559 -390.38833618]
[33.53401184 -375.92083740]
[27.45771027 -362.17822266]
[19.48740768 -349.44030762]
[9.78537083 -337.96636963]
[-1.45088172 -327.99002075]
[-13.99259377 -319.71438599]
[-27.58443069 -313.30792236]
[-23.18343353 -298.96807861]
[-18.78243446 -284.62823486]
[-5.30954075 -273.38330078]
[-9.58170033 -255.47158813]
[-4.96769142 -241.19885254]
[-0.35368210 -226.92611694]
[4.26032734 -212.65338135]
[15.53740597 -202.92318726]
[12.42018509 -187.41210938]
[17.03419495 -173.13937378]
[21.64820480 -158.86663818]
[26.26221275 -144.59390259]
[30.87622261 -130.32116699]
[42.15330124 -120.59097290]
[39.03607941 -105.07989502]
[43.65008926 -90.80715942]
[48.26409912 -76.53443146]
[63.92635727 -76.67591095]
[78.88428497 -71.96466064]
[91.67005157 -62.85040283]
[101.02507782 -50.21555328]
[106.02397156 -35.28978348]
[106.16598511 -19.53035927]
[101.42521667 -4.47985506]
[92.25428009 8.38483238]
[79.54113770 17.79741096]
[84.36713409 31.99986649]
[95.78782654 41.56108856]
[92.90189362 57.11685562]
[106.70361328 67.95564270]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[121.23621368 137.23451233]
[126.27313232 151.36354065]
[131.31004333 165.49256897]
[136.09074402 170.05946350]
[137.61811829 175.53341675]
[136.27975464 180.11793518]
[147.88685608 190.86900330]
[144.43960571 205.35920715]
[149.05361938 219.63194275]
[152.91085815 205.13636780]
[162.60961914 193.69372559]
[176.27723694 187.51342773]
[191.27471924 187.78878784]
[204.70625305 194.46662903]
[213.97845459 206.25756836]
[217.30099487 220.88497925]
[214.03233337 235.52450562]
[204.80360413 247.34950256]
[191.39672852 254.07675171]
[176.40037537 254.40731812]
[162.71009827 248.27737427]
[152.96867371 236.86940002]
[154.97268677 251.73492432]
[156.97669983 266.60046387]
[158.98071289 281.46597290]
[165.70774841 268.05899048]
[177.84072876 259.23910522]
[192.66912842 256.97668457]
[206.88023376 261.77713013]
[217.29925537 272.56805420]
[221.59855652 286.93872070]
[218.81764221 301.67868042]
[209.57780457 313.49499512]
[195.94323730 319.74789429]
[180.95993042 319.04040527]
[167.97518921 311.53063965]
[159.88986206 298.89624023]
[159.44325256 313.88958740]
[158.99664307 328.88293457]
[158.55003357 343.87628174]
[158.10342407 358.86962891]
[157.65682983 373.86297607]
[160.13256836 378.45840454]
[160.55570984 383.08163452]
[159.25938416 386.94616699]
[156.84060669 389.51165771]
[155.72496033 404.47012329]
[154.72070312 419.43646240]
[153.82788086 434.40988159]
[152.93505859 449.38327026]
[152.04225159 464.35668945]
[166.31462097 469.27621460]
[178.72981262 477.86492920]
[188.36651611 489.48544312]
[194.50962830 503.27548218]
[196.70329285 518.21166992]
[194.78472900 533.18572998]
[188.89631653 547.08642578]
[179.47497559 558.88220215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 202]
[14 201]
[15 200]
[16 199]
[18 198]
[19 197]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 176]
[27 175]
[28 174]
[29 173]
[30 160]
[31 159]
[33 157]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[40 148]
[43 146]
[45 144]
[46 143]
[56 134]
[57 133]
[58 132]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
[66 124]
[67 123]
[68 122]
[69 121]
[72 119]
[73 118]
[74 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
