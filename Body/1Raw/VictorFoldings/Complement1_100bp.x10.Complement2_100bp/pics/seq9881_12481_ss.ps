%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[106.63439941 585.74621582]
[94.58653259 576.78924561]
[83.49037933 566.67718506]
[73.45621490 555.51049805]
[64.58376312 543.40026855]
[56.96121597 530.46679688]
[50.66432190 516.83856201]
[45.75567245 502.65112305]
[42.28404236 488.04541016]
[40.28394699 473.16662598]
[39.77525711 458.16265869]
[40.76302719 443.18255615]
[43.23744583 428.37527466]
[47.17391968 413.88793945]
[52.53332138 399.86456299]
[59.26238632 386.44448853]
[67.29424286 373.76110840]
[76.54904938 361.94049072]
[86.93484497 351.10009766]
[98.34839630 341.34768677]
[110.67626190 332.78018188]
[123.79592896 325.48272705]
[137.57701111 319.52783203]
[151.88252258 314.97473145]
[148.77841187 300.29940796]
[145.67430115 285.62411499]
[142.57019043 270.94882202]
[139.46607971 256.27349854]
[135.27906799 241.86973572]
[130.03234863 227.81726074]
[124.78562927 213.76478577]
[119.53890991 199.71231079]
[115.94837952 214.27624512]
[106.07019043 225.56436157]
[92.11116791 231.05485535]
[77.18978119 229.52114868]
[64.63951111 221.30587769]
[57.26412201 208.24433899]
[56.71129608 193.25453186]
[63.10453033 179.68521118]
[75.01556396 170.56779480]
[89.78343964 167.93913269]
[104.10897827 172.38648987]
[114.79182434 182.91632080]
[111.90655518 168.19642639]
[109.02127838 153.47653198]
[106.13600922 138.75663757]
[101.84188843 124.38442993]
[96.17910004 110.49440002]
[90.41306305 96.64691925]
[84.54410553 82.84274292]
[78.67514038 69.03856659]
[72.80618286 55.23438644]
[66.32668304 41.70604324]
[52.99367523 33.18891907]
[53.81085205 18.31674576]
[46.73374557 5.09121799]
[39.65663910 -8.13430977]
[32.57953644 -21.35983658]
[28.14459419 -24.11272430]
[25.47594452 -27.91161919]
[24.67624283 -31.90855789]
[25.49672508 -35.33771896]
[19.01723099 -48.86606598]
[12.53773403 -62.39440918]
[6.05823851 -75.92276001]
[-0.42125750 -89.45110321]
[-14.69992352 -84.78476715]
[-29.46552467 -82.02214813]
[-44.46540070 -81.21051788]
[-59.44288254 -82.36376953]
[-74.14169312 -85.46217346]
[-88.31030273 -90.45269775]
[-101.70628357 -97.24996185]
[-114.10040283 -105.73764801]
[-125.28058624 -115.77052307]
[-135.05552673 -127.17691040]
[-143.25794983 -139.76162720]
[-149.74751282 -153.30934143]
[-154.41317749 -167.58822632]
[-157.17509460 -182.35395813]
[-157.98600769 -197.35388184]
[-156.83203125 -212.33129883]
[-153.73294067 -227.02996826]
[-148.74172974 -241.19834900]
[-141.94383240 -254.59399414]
[-133.45556641 -266.98770142]
[-123.42215729 -278.16741943]
[-112.01530457 -287.94180298]
[-99.43019104 -296.14364624]
[-85.88217163 -302.63256836]
[-71.60305786 -307.29754639]
[-56.83719635 -310.05874634]
[-41.83724213 -310.86895752]
[-26.85986710 -309.71426392]
[-12.16135502 -306.61447144]
[2.00678444 -301.62258911]
[15.40211582 -294.82406616]
[27.79542923 -286.33520508]
[38.97465515 -276.30126953]
[48.74850464 -264.89395142]
[56.94973373 -252.30844116]
[63.43801117 -238.76010132]
[68.10231018 -224.48077393]
[70.86281586 -209.71478271]
[71.67230225 -194.71478271]
[70.51690674 -179.73747253]
[67.41641235 -165.03910828]
[62.42386246 -150.87120056]
[55.62468719 -137.47619629]
[47.13523102 -125.08328247]
[37.10076141 -113.90453339]
[25.69297981 -104.13122559]
[13.10708809 -95.93059540]
[19.58658409 -82.40225220]
[26.06608009 -68.87390900]
[32.54557419 -55.34556198]
[39.02507019 -41.81721497]
[45.80506134 -28.43694305]
[52.88216782 -15.21141529]
[59.95927429 -1.98588729]
[67.03637695 11.23964024]
[79.86318970 18.81078720]
[79.55221558 34.62893677]
[84.92507935 20.62421036]
[98.57041168 14.39485645]
[112.67154694 19.50933266]
[119.15071869 33.03783417]
[114.29636383 47.23062134]
[100.88926697 53.95742035]
[86.61035919 49.36542511]
[92.47931671 63.16960526]
[98.34828186 76.97377777]
[104.21723938 90.77795410]
[110.01852417 96.37417603]
[110.06912231 104.83161926]
[115.73191071 118.72164154]
[118.17831421 103.92248535]
[126.36441803 91.35317230]
[138.91073608 83.13185120]
[153.70297241 80.64396667]
[168.24839783 84.30876923]
[180.09584045 93.50867462]
[187.24879456 106.69332886]
[188.50186157 121.64089966]
[183.64389038 135.83244324]
[173.49353027 146.87646484]
[159.76127625 152.91181946]
[144.76129150 152.92144775]
[131.02130127 146.90374756]
[120.85589600 135.87136841]
[123.74117279 150.59126282]
[126.62644196 165.31115723]
[129.51171875 180.03105164]
[133.59138489 194.46559143]
[138.83810425 208.51806641]
[144.08482361 222.57054138]
[149.33154297 236.62301636]
[153.38551331 222.18121338]
[164.04795837 211.63076782]
[178.53173828 207.72949219]
[193.05084229 211.49720764]
[203.80999756 221.94903564]
[207.99679565 236.35287476]
[204.51681519 250.94361877]
[194.27970886 261.90725708]
[179.96142578 266.37796021]
[165.30474854 263.18704224]
[154.14138794 253.16940308]
[157.24549866 267.84469604]
[160.34959412 282.52001953]
[163.45370483 297.19531250]
[166.55781555 311.87060547]
[181.48175049 310.24114990]
[196.49374390 310.10574341]
[211.44464111 311.46572876]
[226.18580627 314.30761719]
[240.57077026 318.60311890]
[254.45654297 324.30960083]
[267.70513916 331.37033081]
[280.18484497 339.71511841]
[291.77166748 349.26101685]
[302.35040283 359.91317749]
[311.81597900 371.56573486]
[320.07424927 384.10284424]
[327.04321289 397.39993286]
[332.65353394 411.32482910]
[336.84948730 425.73913574]
[339.58938599 440.49960327]
[340.84594727 455.45953369]
[340.60675049 470.47024536]
[338.87411499 485.38256836]
[335.66531372 500.04821777]
[331.01217651 514.32153320]
[324.96099854 528.06060791]
[317.57189941 541.12884521]
[308.91833496 553.39648438]
[299.08627319 564.74151611]
[288.17346191 575.05114746]
[276.28836060 584.22302246]
[263.54910278 592.16589355]
[250.08226013 598.80090332]
[236.02171326 604.06201172]
[221.50718689 607.89703369]
[206.68293762 610.26776123]
[191.69631958 611.15063477]
[176.69624329 610.53698730]
[161.83181763 608.43280029]
[147.25077820 604.85906982]
[133.09802246 599.85119629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[29 158]
[30 157]
[31 156]
[32 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 137]
[49 136]
[50 134]
[51 133]
[52 132]
[53 131]
[54 124]
[56 122]
[57 121]
[58 120]
[59 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
