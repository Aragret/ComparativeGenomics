%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[127.33215332 653.57995605]
[115.84005737 643.92199707]
[105.31805420 633.21533203]
[95.86143494 621.55700684]
[87.55585480 609.05249023]
[80.47651672 595.81518555]
[74.68754578 581.96478271]
[70.24136353 567.62689209]
[67.17823792 552.93121338]
[65.52590942 538.01092529]
[65.29933929 523.00115967]
[66.50057983 508.03781128]
[69.11875916 493.25640869]
[73.13015747 478.79083252]
[78.49844360 464.77203369]
[85.17501831 451.32702637]
[93.09939575 438.57757568]
[102.19982147 426.63909912]
[112.39387512 415.61975098]
[123.58923340 405.61932373]
[135.68450928 396.72836304]
[148.57017517 389.02743530]
[162.12951660 382.58621216]
[176.23973083 377.46310425]
[172.48342896 362.94104004]
[168.72712708 348.41897583]
[164.97082520 333.89691162]
[161.21452332 319.37484741]
[157.45822144 304.85281372]
[153.16410828 290.48059082]
[148.33810425 276.27813721]
[143.51211548 262.07568359]
[138.68611145 247.87321472]
[133.86010742 233.67076111]
[122.43941498 224.10954285]
[125.32535553 208.55377197]
[120.49935913 194.35131836]
[115.67336273 180.14886475]
[112.68919373 178.27081299]
[110.46641541 174.85403442]
[109.71833038 170.27215576]
[110.96440887 165.20318604]
[99.98203278 155.14154053]
[103.55969238 139.73014832]
[99.37268066 125.32637024]
[95.18566895 110.92259216]
[91.69613647 125.51104736]
[83.23235321 137.89508057]
[70.90787506 146.44537354]
[56.34420776 150.03695679]
[41.45744324 148.19732666]
[28.20619583 141.16850281]
[18.33389282 129.87524414]
[13.13940620 115.80337524]
[13.30616093 100.80430603]
[18.81221581 86.85140228]
[28.93315697 75.78042603]
[42.33739853 69.04794312]
[57.26138306 67.53973389]
[71.74160004 71.45422363]
[83.87293243 80.27639771]
[92.06021118 92.84774017]
[91.16739655 77.87433624]
[90.27458191 62.90092850]
[89.38176727 47.92752457]
[88.48895264 32.95411682]
[87.59613037 17.98071098]
[86.48048401 3.02225828]
[85.14225006 -11.91792679]
[83.80401611 -26.85811234]
[74.86637878 -39.91296387]
[81.43735504 -53.27977371]
[77.55480957 -61.54800415]
[80.19210815 -68.45209503]
[71.44982910 -81.63856506]
[78.21909332 -94.90605927]
[77.10343933 -109.86451721]
[75.98779297 -124.82296753]
[74.87214661 -139.78141785]
[73.75649261 -154.73986816]
[64.51021576 -163.73260498]
[63.88893890 -176.21449280]
[71.68098450 -185.46708679]
[70.78816986 -200.44050598]
[69.89535522 -215.41390991]
[69.00254059 -230.38731384]
[68.10971832 -245.36071777]
[53.18331909 -247.23614502]
[38.85575104 -251.82257080]
[25.61500359 -258.96380615]
[13.91205311 -268.41662598]
[4.14549875 -279.85903931]
[-3.35201478 -292.90136719]
[-8.32512474 -307.09933472]
[-10.60444927 -321.96942139]
[-10.11235523 -337.00512695]
[-6.86560345 -351.69436646]
[-0.97477669 -365.53677368]
[7.35948563 -378.06094360]
[17.85332108 -388.84027100]
[30.14931488 -397.50765991]
[43.82867050 -403.76782227]
[58.42546844 -407.40762329]
[73.44255829 -408.30303955]
[88.36844635 -406.42358398]
[102.69478607 -401.83328247]
[115.93360901 -394.68850708]
[127.63401031 -385.23254395]
[137.39747620 -373.78747559]
[144.89147949 -360.74313354]
[149.86076355 -346.54382324]
[152.13607788 -331.67312622]
[151.63992310 -316.63754272]
[148.38922119 -301.94918823]
[142.49465942 -288.10836792]
[134.15701294 -275.58642578]
[123.66027832 -264.80993652]
[111.36194611 -256.14587402]
[97.68090820 -249.88938904]
[83.08312988 -246.25354004]
[83.97594452 -231.28012085]
[84.86875916 -216.30671692]
[85.76157379 -201.33331299]
[86.65438843 -186.35990906]
[97.09323120 -172.25326538]
[88.71495056 -155.85552979]
[89.83059692 -140.89706421]
[90.94624329 -125.93861389]
[92.06189728 -110.98016357]
[93.17754364 -96.02171326]
[101.84002686 -83.90516663]
[95.15056610 -69.56774139]
[96.37754059 -54.61800766]
[105.21945953 -42.63177490]
[98.74420166 -28.19634628]
[100.08243561 -13.25616074]
[101.42066956 1.68402421]
[104.44610596 5.37939978]
[105.18224335 11.01456738]
[102.56954193 17.08789635]
[103.46235657 32.06130219]
[104.35517120 47.03470612]
[105.24798584 62.00811386]
[106.14080048 76.98152161]
[107.03361511 91.95492554]
[109.58945465 106.73558044]
[113.77645874 121.13935852]
[117.96347046 135.54313660]
[129.24533081 146.63504028]
[125.36818695 161.01617432]
[129.87580872 175.32286072]
[134.70181274 189.52531433]
[139.52781677 203.72776794]
[151.29370117 214.30485535]
[148.06257629 228.84477234]
[152.88856506 243.04722595]
[157.71456909 257.24966431]
[162.54055786 271.45211792]
[167.36656189 285.65460205]
[176.23721313 273.55865479]
[191.21800232 272.79974365]
[201.26565552 283.93728638]
[198.97338867 298.76110840]
[186.03100586 306.34362793]
[171.98028564 301.09649658]
[175.73658752 315.61856079]
[179.49288940 330.14062500]
[183.24919128 344.66268921]
[187.00549316 359.18472290]
[190.76179504 373.70678711]
[205.58641052 371.34558105]
[220.56835938 370.40423584]
[235.57194519 370.89132690]
[250.46128845 372.80236816]
[265.10156250 376.12011719]
[279.36013794 380.81451416]
[293.10794067 386.84301758]
[306.22042847 394.15106201]
[318.57885742 402.67242432]
[330.07131958 412.32998657]
[340.59371948 423.03625488]
[350.05075073 434.69424438]
[358.35678101 447.19842529]
[365.43661499 460.43551636]
[371.22607422 474.28567505]
[375.67279053 488.62344360]
[378.73645020 503.31896973]
[380.38931274 518.23919678]
[380.61642456 533.24896240]
[379.41574097 548.21234131]
[376.79809570 562.99383545]
[372.78723145 577.45959473]
[367.41946411 591.47857666]
[360.74337769 604.92382812]
[352.81945801 617.67358398]
[343.71945190 629.61236572]
[333.52581787 640.63208008]
[322.33081055 650.63293457]
[310.23587036 659.52435303]
[297.35049438 667.22576904]
[283.79138184 673.66741943]
[269.68133545 678.79107666]
[255.14816284 682.55023193]
[240.32345581 684.91094971]
[225.34147644 685.85174561]
[210.33792114 685.36413574]
[195.44863892 683.45251465]
[180.80850220 680.13421631]
[166.55007935 675.43933105]
[152.80250549 669.41033936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 170]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[30 159]
[31 158]
[32 157]
[33 156]
[34 155]
[36 153]
[37 152]
[38 151]
[42 150]
[44 148]
[45 147]
[46 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 137]
[69 136]
[70 135]
[72 133]
[74 132]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
