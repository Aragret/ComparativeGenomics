%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[267.67968750 418.81954956]
[274.04431152 405.22033691]
[281.84201050 392.38900757]
[290.98129272 380.47598267]
[301.35507202 369.62091064]
[291.69427490 358.14620972]
[277.57833862 353.39334106]
[274.60916138 337.85327148]
[264.94836426 326.37857056]
[255.28755188 314.90386963]
[245.62673950 303.42916870]
[242.16389465 302.76501465]
[238.85069275 300.39062500]
[236.48744202 296.39459229]
[235.80465698 291.21957397]
[226.66584778 279.32492065]
[217.43875122 267.49865723]
[208.12387085 255.74140930]
[194.15570068 250.57037354]
[191.65052795 234.94876099]
[182.33564758 223.19151306]
[173.02076721 211.43424988]
[163.70588684 199.67700195]
[154.39100647 187.91975403]
[145.07611084 176.16250610]
[135.76123047 164.40525818]
[126.44635010 152.64799500]
[123.64793396 167.38464355]
[111.32689667 175.93988037]
[96.54129028 173.41287231]
[87.76097870 161.25120544]
[90.01572418 146.42164612]
[102.01390839 137.41921997]
[116.88159943 139.40046692]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[88.16761780 108.86828613]
[84.18332672 123.32945251]
[75.54979706 135.59576416]
[63.28129578 144.22616577]
[48.81911469 148.20678711]
[33.86225510 147.06997681]
[20.16783333 140.94927979]
[9.34465694 130.56376648]
[2.66422200 117.13351440]
[0.91133887 102.23628998]
[4.29193497 87.62220001]
[12.40886116 75.00810242]
[24.30854797 65.87587738]
[38.59303284 61.29838562]
[53.58419037 61.81337357]
[67.52087402 67.36034393]
[78.76679230 77.28887177]
[66.84473419 66.88814545]
[69.85902405 52.30173492]
[64.82210541 38.17270660]
[59.78519440 24.04367638]
[47.86313629 13.64294910]
[50.87742615 -0.94345981]
[45.84050751 -15.07248974]
[40.80359268 -29.20151901]
[34.97422409 -36.23403549]
[35.79857254 -43.57857132]
[30.97257423 -57.78102875]
[19.20669174 -68.35810089]
[22.43781662 -82.89801788]
[17.61181831 -97.10047150]
[12.78582096 -111.30293274]
[-1.11136854 -118.33897400]
[-5.80329704 -132.81103516]
[0.99013692 -146.01651001]
[-3.83586073 -160.21896362]
[-8.66185856 -174.42143250]
[-13.48785591 -188.62388611]
[-18.31385422 -202.82633972]
[-33.17660904 -200.53076172]
[-48.21218109 -200.85113525]
[-62.96366119 -203.77774048]
[-76.98276520 -209.22161865]
[-89.84346771 -217.01734924]
[-101.15495300 -226.92802429]
[-110.57347107 -238.65246582]
[-117.81280518 -251.83439636]
[-122.65296173 -266.07321167]
[-124.94685364 -280.93621826]
[-124.62477112 -295.97177124]
[-121.69649506 -310.72290039]
[-116.25102997 -324.74139404]
[-108.45384216 -337.60122681]
[-98.54188538 -348.91159058]
[-86.81636810 -358.32876587]
[-73.63362122 -365.56661987]
[-59.39425278 -370.40515137]
[-44.53097916 -372.69735718]
[-29.49547768 -372.37356567]
[-14.74466228 -369.44363403]
[-0.72679275 -363.99655151]
[12.13214397 -356.19790649]
[23.44137764 -346.28466797]
[32.85723495 -334.55810547]
[40.09358215 -321.37451172]
[44.93050766 -307.13461304]
[47.22102737 -292.27108765]
[46.89553070 -277.23559570]
[43.96391678 -262.48513794]
[38.51526642 -248.46788025]
[30.71516228 -235.60981750]
[20.80064011 -224.30171204]
[9.07298946 -214.88717651]
[-4.11139822 -207.65232849]
[0.71459961 -193.44987488]
[5.54059744 -179.24742126]
[10.36659527 -165.04496765]
[15.19259262 -150.84251404]
[28.62510681 -144.50981140]
[33.72167587 -130.17524719]
[26.98827744 -116.12892914]
[31.81427383 -101.92646790]
[36.64027023 -87.72401428]
[48.06097031 -78.16279602]
[45.17502975 -62.60702515]
[50.00102997 -48.40457153]
[54.93262100 -34.23843384]
[59.96953964 -20.10940552]
[65.00645447 -5.98037624]
[76.56823730 3.40974855]
[73.91422272 19.00675964]
[78.95114136 33.13578796]
[83.98805237 47.26482010]
[95.54983521 56.65494537]
[92.89582062 72.25195312]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.42300415 131.17166138]
[138.20359802 143.33311462]
[147.51847839 155.09036255]
[156.83337402 166.84762573]
[166.14825439 178.60487366]
[175.46313477 190.36212158]
[184.77801514 202.11936951]
[194.09289551 213.87661743]
[203.40777588 225.63388062]
[218.04220581 231.64587402]
[219.88111877 246.42652893]
[229.19599915 258.18377686]
[236.97801208 262.96688843]
[238.56048584 270.18612671]
[247.69927979 282.08078003]
[257.10144043 293.76834106]
[266.76223755 305.24304199]
[276.42306519 316.71774292]
[286.08386230 328.19244385]
[300.89080811 333.76605225]
[303.16897583 348.48541260]
[312.82977295 359.96011353]
[325.29367065 351.58761597]
[338.58972168 344.61178589]
[352.56207275 339.11447144]
[367.04690552 335.16006470]
[381.87435913 332.79495239]
[396.87060547 332.04684448]
[411.85983276 332.92453003]
[426.66629028 335.41775513]
[441.11639404 339.49722290]
[455.04067993 345.11514282]
[468.27593994 352.20562744]
[480.66699219 360.68554688]
[492.06854248 370.45550537]
[502.34692383 381.40093994]
[511.38162231 393.39349365]
[519.06671143 406.29260254]
[525.31207275 419.94699097]
[530.04449463 434.19659424]
[533.20849609 448.87435913]
[534.76696777 463.80813599]
[534.70166016 478.82290649]
[533.01336670 493.74258423]
[529.72180176 508.39224243]
[524.86560059 522.60015869]
[518.50170898 536.19970703]
[510.70471191 549.03149414]
[501.56604004 560.94500732]
[491.19284058 571.80059814]
[479.70675659 581.47100830]
[467.24240112 589.84283447]
[453.94598389 596.81793213]
[439.97332764 602.31451416]
[425.48831177 606.26818848]
[410.66070557 608.63250732]
[395.66442871 609.37976074]
[380.67523193 608.50128174]
[365.86892700 606.00726318]
[351.41903687 601.92700195]
[337.49505615 596.30834961]
[324.26016235 589.21716309]
[311.86956787 580.73657227]
[300.46856689 570.96600342]
[290.19076538 560.02001953]
[281.15673828 548.02697754]
[273.47235107 535.12744141]
[267.22769165 521.47271729]
[262.49603271 507.22283936]
[259.33282471 492.54492188]
[257.77514648 477.61105347]
[257.84124756 462.59628296]
[259.53036499 447.67669678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 159]
[6 158]
[8 156]
[9 155]
[10 154]
[11 153]
[15 152]
[16 151]
[17 149]
[18 148]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[26 140]
[27 139]
[34 138]
[35 137]
[36 136]
[38 134]
[55 133]
[57 131]
[58 130]
[59 129]
[61 127]
[62 126]
[63 125]
[65 124]
[66 123]
[68 121]
[69 120]
[70 119]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
