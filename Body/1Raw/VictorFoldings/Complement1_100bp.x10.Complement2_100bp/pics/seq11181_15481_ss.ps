%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[178.83058167 624.57464600]
[166.34498596 616.25543213]
[154.30419922 607.30444336]
[142.74017334 597.74548340]
[131.68356323 587.60394287]
[121.16368103 576.90661621]
[111.20843506 565.68194580]
[101.84423065 553.95965576]
[93.09588623 541.77087402]
[84.98660278 529.14788818]
[77.53789520 516.12414551]
[70.76950836 502.73428345]
[64.69938660 489.01370239]
[59.34363937 474.99884033]
[54.71646118 460.72686768]
[50.83012009 446.23559570]
[47.69492722 431.56350708]
[45.31919479 416.74945068]
[43.70922089 401.83273315]
[42.86927795 386.85293579]
[42.80159378 371.84973145]
[43.50634384 356.86294556]
[44.98166275 341.93231201]
[47.22363663 327.09744263]
[50.22631836 312.39764404]
[53.98175049 297.87191772]
[58.47997284 283.55874634]
[63.70905304 269.49615479]
[69.65512848 255.72137451]
[76.30242920 242.27095032]
[83.63332367 229.18057251]
[91.62837982 216.48492432]
[100.26639557 204.21769714]
[109.52445221 192.41139221]
[119.37801361 181.09735107]
[129.80094910 170.30555725]
[140.76560974 160.06463623]
[131.10479736 148.58993530]
[121.44398499 137.11523438]
[111.78317261 125.64054108]
[102.12236023 114.16584015]
[89.04246521 109.22539520]
[86.40293884 95.49497223]
[76.74212646 84.02027130]
[67.08131409 72.54557037]
[57.33535004 61.14310837]
[47.50476837 49.81351471]
[35.33156586 58.59527588]
[22.42016602 66.25047302]
[8.87453461 72.71747589]
[-5.19626904 77.94420624]
[-19.67895126 81.88858795]
[-34.45690536 84.51885986]
[-49.41114426 85.81384277]
[-64.42126465 85.76311493]
[-79.36640930 84.36708069]
[-94.12624359 81.63697815]
[-108.58193207 77.59479523]
[-122.61708832 72.27307892]
[-136.11869812 65.71466827]
[-148.97805786 57.97237015]
[-161.09162903 49.10852814]
[-172.36187744 39.19450760]
[-182.69805908 28.31013298]
[-192.01695251 16.54303932]
[-200.24351501 3.98796988]
[-207.31153870 -9.25398636]
[-213.16407776 -23.07621193]
[-217.75404358 -37.36741638]
[-221.04446411 -52.01253128]
[-223.00883484 -66.89363861]
[-223.63136292 -81.89093018]
[-222.90702820 -96.88365173]
[-220.84164429 -111.75107574]
[-217.45187378 -126.37351227]
[-212.76498413 -140.63322449]
[-206.81871033 -154.41539001]
[-199.66094971 -167.60905457]
[-191.34931946 -180.10797119]
[-181.95075989 -191.81152344]
[-171.54090881 -202.62547302]
[-160.20361328 -212.46273804]
[-148.03013611 -221.24412537]
[-135.11849976 -228.89892578]
[-121.57266998 -235.36552429]
[-107.50170898 -240.59182739]
[-93.01890564 -244.53576660]
[-78.24087524 -247.16558838]
[-63.28659439 -248.46011353]
[-48.27647781 -248.40892029]
[-33.33137512 -247.01243591]
[-18.57162285 -244.28187561]
[-4.11605549 -240.23925781]
[9.91893578 -234.91709900]
[23.42034531 -228.35827637]
[36.27946854 -220.61560059]
[48.39276505 -211.75138855]
[59.66271210 -201.83702087]
[69.99855804 -190.95233154]
[79.31709290 -179.18495178]
[87.54328156 -166.62962341]
[94.61088562 -153.38745117]
[100.46301270 -139.56504822]
[105.05254364 -125.27371216]
[108.34250641 -110.62849426]
[110.30643463 -95.74732208]
[110.92850494 -80.75001526]
[110.20370483 -65.75731659]
[108.13787842 -50.88994980]
[104.74765015 -36.26762009]
[100.06032562 -22.00805283]
[94.11363983 -8.22606468]
[86.95547485 4.96737814]
[78.64347076 17.46604729]
[69.24453735 29.16930962]
[58.83436203 39.98293686]
[68.66493988 51.31252670]
[75.42291260 54.30446625]
[78.55601501 62.88476181]
[88.21682739 74.35945892]
[97.87763977 85.83415985]
[110.95753479 90.77460480]
[113.59706116 104.50502777]
[123.25787354 115.97972870]
[132.91868591 127.45442963]
[142.57949829 138.92912292]
[152.24031067 150.40382385]
[164.19972229 141.34445190]
[176.60966492 132.91273499]
[189.43719482 125.13105011]
[202.64831543 118.02002716]
[216.20799255 111.59852600]
[230.08024597 105.88358307]
[244.22831726 100.89033508]
[258.61465454 96.63204193]
[273.20117188 93.11998749]
[287.94909668 90.36347961]
[302.81939697 88.36984253]
[317.77261353 87.14434814]
[332.76907349 86.69025421]
[347.76904297 87.00876617]
[362.73269653 88.09902954]
[377.62042236 89.95816803]
[392.39266968 92.58123779]
[407.01031494 95.96128845]
[421.43460083 100.08936310]
[435.62722778 104.95449829]
[449.55056763 110.54381561]
[463.16772461 116.84246826]
[476.44259644 123.83377075]
[489.33996582 131.49917603]
[501.82559204 139.81835938]
[513.86645508 148.76927185]
[525.43054199 158.32814026]
[536.48718262 168.46966553]
[547.00714111 179.16691589]
[556.96246338 190.39152527]
[566.32672119 202.11375427]
[575.07513428 214.30250549]
[583.18444824 226.92544556]
[590.63323975 239.94911194]
[597.40173340 253.33895874]
[603.47192383 267.05947876]
[608.82775879 281.07431030]
[613.45501709 295.34628296]
[617.34143066 309.83752441]
[620.47668457 324.50961304]
[622.85253906 339.32363892]
[624.46258545 354.24035645]
[625.30261230 369.22015381]
[625.37036133 384.22332764]
[624.66571045 399.21011353]
[623.19049072 414.14074707]
[620.94860840 428.97564697]
[617.94598389 443.67547607]
[614.19067383 458.20123291]
[609.69250488 472.51440430]
[604.46350098 486.57705688]
[598.51751709 500.35186768]
[591.87030029 513.80230713]
[584.53948975 526.89276123]
[576.54449463 539.58843994]
[567.90655518 551.85571289]
[558.64855957 563.66204834]
[548.79504395 574.97613525]
[538.37219238 585.76800537]
[527.40759277 596.00897217]
[515.93035889 605.67193604]
[503.97085571 614.73126221]
[491.56088257 623.16290283]
[478.73330688 630.94451904]
[465.52212524 638.05548096]
[451.96243286 644.47686768]
[438.09014893 650.19177246]
[423.94204712 655.18493652]
[409.55566406 659.44311523]
[394.96914673 662.95507812]
[380.22119141 665.71154785]
[365.35089111 667.70507812]
[350.39767456 668.93048096]
[335.40121460 669.38452148]
[320.40124512 669.06591797]
[305.43756104 667.97552490]
[290.54986572 666.11633301]
[275.77761841 663.49316406]
[261.16000366 660.11303711]
[246.73576355 655.98486328]
[232.54316711 651.11968994]
[218.61984253 645.53027344]
[205.00271606 639.23150635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 127]
[38 126]
[39 125]
[40 124]
[41 123]
[43 121]
[44 120]
[45 119]
[46 117]
[47 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
