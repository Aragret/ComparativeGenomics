%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[75.07026672 435.68829346]
[60.14116669 434.24450684]
[45.29120255 432.13711548]
[30.54986000 429.37030029]
[15.94640160 425.94955444]
[1.50982451 421.88165283]
[-12.73120975 417.17468262]
[-26.74842644 411.83801270]
[-40.51399612 405.88220215]
[-54.00059128 399.31912231]
[-67.18142700 392.16174316]
[-80.03034210 384.42431641]
[-92.52182770 376.12219238]
[-104.63108063 367.27185059]
[-116.33405304 357.89083862]
[-127.60751343 347.99783325]
[-138.42909241 337.61245728]
[-148.77728271 326.75534058]
[-158.63154602 315.44799805]
[-167.97232056 303.71289062]
[-176.78106689 291.57336426]
[-185.04029846 279.05346680]
[-192.73359680 266.17807007]
[-199.84570312 252.97276306]
[-206.36250305 239.46372986]
[-212.27104187 225.67781067]
[-217.55960083 211.64236450]
[-222.21766663 197.38526917]
[-226.23600769 182.93481445]
[-229.60662842 168.31970215]
[-232.32286072 153.56895447]
[-234.37928772 138.71185303]
[-235.77183533 123.77788544]
[-236.49774170 108.79671478]
[-236.55557251 93.79807281]
[-235.94519043 78.81174469]
[-234.66783142 63.86748886]
[-232.72601318 48.99496841]
[-230.12359619 34.22371292]
[-226.86576843 19.58305168]
[-222.95896912 5.10204983]
[-218.41096497 -9.19054127]
[-213.23077393 -23.26634407]
[-207.42871094 -37.09741592]
[-201.01626587 -50.65629196]
[-194.00619507 -63.91605377]
[-186.41238403 -76.85037231]
[-178.24993896 -89.43357849]
[-169.53506470 -101.64067841]
[-160.28503418 -113.44744110]
[-150.51824951 -124.83042145]
[-140.25407410 -135.76702881]
[-129.51290894 -146.23553467]
[-118.31605530 -156.21516418]
[-106.68576050 -165.68611145]
[-94.64511108 -174.62956238]
[-82.21800995 -183.02775574]
[-69.42913818 -190.86402893]
[-56.30387497 -198.12281799]
[-42.86828613 -204.78970337]
[-29.14904594 -210.85147095]
[-15.17339230 -216.29606628]
[-0.96907425 -221.11268616]
[13.43570900 -225.29177856]
[28.01235771 -228.82501221]
[42.73192978 -231.70541382]
[57.56520462 -233.92724609]
[72.48272705 -235.48608398]
[71.58991241 -250.45948792]
[70.69709778 -265.43289185]
[69.80427551 -280.40631104]
[68.91146088 -295.37969971]
[68.01864624 -310.35311890]
[53.01869583 -310.97961426]
[38.15909195 -313.12045288]
[23.59231758 -316.75363159]
[9.46784973 -321.84188843]
[-4.06936884 -328.33303833]
[-16.88042450 -336.16040039]
[-28.83385658 -345.24371338]
[-39.80699921 -355.48974609]
[-49.68725586 -366.79336548]
[-58.37323380 -379.03854370]
[-65.77580261 -392.09967041]
[-71.81900024 -405.84271240]
[-76.44081116 -420.12661743]
[-79.59381104 -434.80480957]
[-81.24564362 -449.72668457]
[-81.37935638 -464.73910522]
[-79.99358368 -479.68804932]
[-77.10253906 -494.42007446]
[-72.73589325 -508.78405762]
[-66.93845367 -522.63250732]
[-59.76970673 -535.82342529]
[-51.30322266 -548.22143555]
[-41.62588120 -559.69921875]
[-30.83698654 -570.13909912]
[-19.04724693 -579.43389893]
[-6.37764883 -587.48822021]
[7.04179955 -594.21942139]
[21.07339096 -599.55847168]
[35.57313919 -603.45056152]
[50.39225388 -605.85577393]
[65.37866211 -606.74932861]
[80.37858582 -606.12219238]
[95.23809814 -603.98071289]
[109.80471039 -600.34686279]
[123.92895508 -595.25799561]
[137.46588135 -588.76623535]
[150.27659607 -580.93829346]
[162.22962952 -571.85449219]
[173.20233154 -561.60797119]
[183.08207703 -550.30389404]
[191.76751709 -538.05834961]
[199.16950989 -524.99688721]
[205.21211243 -511.25360107]
[209.83329773 -496.96948242]
[212.98564148 -482.29113770]
[214.63682556 -467.36920166]
[214.76988220 -452.35675049]
[213.38343811 -437.40789795]
[210.49174500 -422.67596436]
[206.12446594 -408.31219482]
[200.32641602 -394.46395874]
[193.15708923 -381.27337646]
[184.69006348 -368.87579346]
[175.01222229 -357.39840698]
[164.22286987 -346.95901489]
[152.43270874 -337.66473389]
[139.76275635 -329.61096191]
[126.34301758 -322.88034058]
[112.31119537 -317.54190063]
[97.81127167 -313.65045166]
[82.99205017 -311.24594116]
[83.88487244 -296.27252197]
[84.77768707 -281.29910278]
[85.67050171 -266.32571411]
[86.56331635 -251.35231018]
[87.45613098 -236.37890625]
[102.45319366 -236.60375977]
[117.44538879 -236.16033936]
[132.40295410 -235.04948425]
[147.29617310 -233.27343750]
[162.09548950 -230.83570862]
[176.77153015 -227.74111938]
[191.29515076 -223.99584961]
[205.63751221 -219.60729980]
[219.77012634 -214.58421326]
[233.66496277 -208.93655396]
[247.29441833 -202.67552185]
[260.63143921 -195.81355286]
[273.64953613 -188.36427307]
[286.32284546 -180.34248352]
[298.62625122 -171.76409912]
[310.53530884 -162.64614868]
[322.02636719 -153.00672913]
[333.07659912 -142.86500549]
[343.66409302 -132.24108887]
[353.76782227 -121.15608215]
[363.36770630 -109.63198853]
[372.44470215 -97.69168854]
[380.98077393 -85.35889435]
[388.95898438 -72.65808868]
[396.36349487 -59.61448669]
[403.17962646 -46.25398254]
[409.39379883 -32.60310364]
[414.99371338 -18.68895721]
[419.96823120 -4.53916502]
[424.30749512 9.81818104]
[428.00286865 24.35457420]
[431.04702759 39.04115295]
[433.43392944 53.84876251]
[435.15881348 68.74800110]
[436.21826172 83.70928192]
[436.61019897 98.70291138]
[436.33383179 113.69911194]
[435.38970947 128.66812134]
[433.77969360 143.58020020]
[431.50698853 158.40577698]
[428.57611084 173.11537170]
[424.99285889 187.67980957]
[420.76437378 202.07017517]
[415.89904785 216.25788879]
[410.40655518 230.21478271]
[404.29776001 243.91313171]
[397.58480835 257.32577515]
[390.28103638 270.42605591]
[382.40090942 283.18795776]
[373.96014404 295.58618164]
[364.97543335 307.59606934]
[355.46466064 319.19381714]
[345.44665527 330.35635376]
[334.94134521 341.06155396]
[323.96960449 351.28814697]
[312.55319214 361.01580811]
[300.71475220 370.22528076]
[288.47781372 378.89822388]
[275.86669922 387.01745605]
[262.90640259 394.56683350]
[249.62265015 401.53137207]
[236.04185486 407.89727783]
[222.19096375 413.65185547]
[208.09747314 418.78369141]
[193.78936768 423.28265381]
[179.29504395 427.13973999]
[164.64329529 430.34732056]
[149.86318970 432.89904785]
[134.98410034 434.78982544]
[120.03554535 436.01589966]
[105.04721069 436.57485962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
