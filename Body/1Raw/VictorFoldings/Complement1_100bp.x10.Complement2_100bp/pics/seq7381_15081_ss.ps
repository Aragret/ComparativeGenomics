%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[111.72533417 590.49377441]
[97.94515228 596.63940430]
[83.04375458 599.00811768]
[68.03714752 597.43841553]
[53.94849777 592.03723145]
[41.73839569 583.17297363]
[32.23934937 571.44989014]
[26.09901428 557.66729736]
[23.73605347 542.76501465]
[25.31157684 527.75903320]
[30.71816063 513.67242432]
[39.58717728 501.46575928]
[51.31391907 491.97125244]
[65.09883881 485.83624268]
[80.00205994 483.47903442]
[81.56258392 468.56042480]
[83.12310791 453.64181519]
[84.68363190 438.72320557]
[86.24415588 423.80459595]
[87.80467987 408.88601685]
[89.36519623 393.96740723]
[90.92572021 379.04879761]
[91.59550476 364.06375122]
[79.33053589 355.65493774]
[74.30945587 341.46856689]
[78.65541077 326.87521362]
[90.90262604 317.53112793]
[90.67929840 302.53277588]
[90.45597076 287.53445435]
[82.53004456 274.92379761]
[90.06101990 261.00994873]
[89.83769226 246.01161194]
[89.61436462 231.01327515]
[89.39103699 216.01493835]
[87.12924957 213.30999756]
[86.06524658 209.37516785]
[86.76281738 204.78532410]
[89.50769043 200.34541321]
[89.95429993 185.35206604]
[90.40090179 170.35871887]
[90.84751129 155.36537170]
[91.29411316 140.37202454]
[91.74072266 125.37866974]
[92.18732452 110.38531494]
[92.18732452 95.38531494]
[91.74072266 80.39196777]
[88.35719299 71.90730286]
[91.40075684 65.17243195]
[91.17742920 50.17409134]
[90.95410156 35.17575455]
[84.43474579 48.68493652]
[74.68141174 60.08109665]
[62.34100723 68.60837555]
[48.23202515 73.70117950]
[33.29026794 75.02172852]
[18.50676346 72.48242950]
[4.86205053 66.25171661]
[-6.73886490 56.74283600]
[-15.52653790 44.58649063]
[-20.91811180 30.58895683]
[-22.55598450 15.67864513]
[-20.33152008 0.84450322]
[-14.39226151 -12.92957401]
[-5.13213682 -24.73000145]
[6.83466244 -33.77410126]
[20.71442223 -39.46200562]
[35.58654785 -41.41646194]
[50.46462250 -39.50783539]
[64.36183929 -33.86271667]
[76.35644531 -24.85552979]
[85.65288544 -13.08368778]
[91.63455200 0.67202544]
[93.90482330 15.50437450]
[98.51882935 1.23164082]
[103.13284302 -13.04109287]
[107.74684906 -27.31382561]
[112.36086273 -41.58655930]
[98.49462891 -49.23492432]
[86.37776184 -59.42359543]
[76.46895599 -71.76460266]
[69.14286041 -85.78853607]
[64.67594147 -100.96240997]
[63.23603058 -116.70993042]
[64.87602997 -132.43333435]
[69.53196716 -147.53614807]
[77.02549744 -161.44577026]
[87.07071686 -173.63519287]
[99.28508759 -183.64294434]
[113.20399475 -191.09063721]
[128.29843140 -195.69715881]
[143.99507141 -197.28938293]
[159.69808960 -195.80860901]
[163.88510132 -210.21240234]
[168.07211304 -224.61618042]
[172.25912476 -239.01995850]
[168.68147278 -254.43135071]
[179.66384888 -264.49301147]
[183.85086060 -278.89678955]
[170.38766479 -285.60366821]
[158.33853149 -294.60690308]
[148.09077454 -305.61703491]
[139.97381592 -318.28018188]
[134.24859619 -332.18920898]
[131.09913635 -346.89706421]
[130.62667847 -361.93090820]
[132.84643555 -376.80749512]
[137.68702698 -391.04855347]
[144.99285889 -404.19635010]
[154.52908325 -415.82821655]
[165.98915100 -425.57025146]
[179.00463867 -433.10925293]
[193.15719604 -438.20288086]
[207.99183655 -440.68740845]
[223.03172302 -440.48300171]
[237.79336548 -437.59616089]
[251.80223083 -432.11975098]
[264.60800171 -424.22976685]
[275.79904175 -414.17987061]
[285.01559448 -402.29309082]
[291.96136475 -388.95156860]
[296.41311646 -374.58419800]
[298.22769165 -359.65277100]
[297.34680176 -344.63732910]
[293.79873657 -330.02053833]
[287.69757080 -316.27221680]
[279.23944092 -303.83441162]
[268.69619751 -293.10687256]
[256.40682983 -284.43444824]
[242.76631165 -278.09597778]
[228.21318054 -274.29516602]
[213.21525574 -273.15420532]
[198.25463867 -274.70977783]
[194.06762695 -260.30599976]
[197.94476318 -245.92485046]
[186.66291809 -234.83294678]
[182.47590637 -220.42916870]
[178.28889465 -206.02539062]
[174.10188293 -191.62159729]
[186.81661987 -185.28932190]
[198.23196411 -176.83035278]
[207.99583435 -166.50402832]
[215.80679321 -154.62730408]
[221.42341614 -141.56504822]
[224.67167664 -127.71875000]
[225.45040894 -113.51429749]
[223.73437500 -99.38879395]
[219.57516479 -85.77713013]
[213.09956360 -73.09860229]
[204.50579834 -61.74399185]
[194.05732727 -52.06351471]
[182.07490540 -44.35602188]
[168.92662048 -38.85978699]
[155.01666260 -35.74511719]
[140.77288818 -35.10909653]
[126.63359070 -36.97254944]
[122.01958466 -22.69981575]
[117.40557861 -8.42708302]
[112.79156494 5.84565020]
[108.17755890 20.11838341]
[105.95243835 34.95242691]
[106.17576599 49.95076370]
[106.39909363 64.94910431]
[106.73406982 79.94535828]
[107.18067932 94.93871307]
[109.21392822 97.20925903]
[110.46595764 100.26980591]
[110.64257050 103.83242798]
[109.56006622 107.50453949]
[107.18067932 110.83192444]
[106.73406982 125.82527161]
[106.28746796 140.81861877]
[105.84085846 155.81196594]
[105.39425659 170.80532837]
[104.94764709 185.79867554]
[104.50103760 200.79202271]
[104.38937378 215.79161072]
[104.61270142 230.78994751]
[104.83602905 245.78828430]
[105.05935669 260.78662109]
[113.00126648 274.47006226]
[105.45431519 287.31112671]
[105.67764282 302.30944824]
[105.90097046 317.30780029]
[118.42095947 326.28308105]
[123.19949341 340.74057007]
[118.60301971 355.07015991]
[106.59384918 363.84042358]
[116.29969025 352.40377808]
[130.84645081 348.74435425]
[144.80856323 354.22698975]
[152.97850037 366.80682373]
[152.30908203 381.79187012]
[143.04997253 393.59310913]
[128.65458679 397.80892944]
[114.49207306 392.86697388]
[105.84432983 380.60931396]
[104.28380585 395.52792358]
[102.72328186 410.44653320]
[101.16275787 425.36514282]
[99.60223389 440.28372192]
[98.04170990 455.20233154]
[96.48118591 470.12094116]
[94.92066956 485.03955078]
[109.01348114 490.42980957]
[121.23042297 499.28469849]
[130.73852539 511.00042725]
[136.88949585 524.77819824]
[139.26396179 539.67871094]
[137.70002747 554.68591309]
[132.30432129 568.77667236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[23 187]
[27 183]
[28 182]
[29 181]
[31 179]
[32 178]
[33 177]
[34 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 164]
[46 163]
[48 162]
[49 161]
[50 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[92 138]
[93 137]
[94 136]
[95 135]
[97 133]
[98 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
