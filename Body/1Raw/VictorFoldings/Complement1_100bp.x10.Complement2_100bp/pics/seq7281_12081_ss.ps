%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[53.13235855 763.70043945]
[39.16087341 769.21197510]
[24.61796761 772.96478271]
[9.72410870 774.90197754]
[-5.29491615 774.99407959]
[-20.21142387 773.23986816]
[-34.79928207 769.66577148]
[-48.83734512 764.32604980]
[-62.11279678 757.30169678]
[-74.42438507 748.69909668]
[-85.58547211 738.64874268]
[-95.42685699 727.30297852]
[-103.79934692 714.83374023]
[-110.57601929 701.43017578]
[-115.65413666 687.29534912]
[-118.95671844 672.64367676]
[-120.43370056 657.69714355]
[-120.06268311 642.68243408]
[-117.84930420 627.82708740]
[-113.82711029 613.35638428]
[-108.05707550 599.48968506]
[-100.62667847 586.43713379]
[-91.64855957 574.39666748]
[-81.25881958 563.55078125]
[-69.61496735 554.06390381]
[-56.89352417 546.07989502]
[-43.28734207 539.71978760]
[-29.00268555 535.07989502]
[-14.25610638 532.23071289]
[0.72883892 531.21533203]
[15.72498417 532.04913330]
[10.37273884 518.14941406]
[20.43943405 505.94396973]
[23.10522842 491.18273926]
[25.77102470 476.42153931]
[20.41877937 462.52178955]
[30.48547363 450.31637573]
[33.15126801 435.55514526]
[35.81706619 420.79394531]
[38.48286057 406.03271484]
[41.14865494 391.27151489]
[27.13915253 385.96359253]
[14.34017563 378.16961670]
[3.18838096 368.15380859]
[-5.93545580 356.25613403]
[-12.71944237 342.88092041]
[-16.93122864 328.48306274]
[-18.42597008 313.55242920]
[-17.15130043 298.59741211]
[-13.14916897 284.12744141]
[-6.55446625 270.63571167]
[2.40953064 258.58233643]
[13.43871117 248.37872314]
[26.15845108 240.37344360]
[40.13633728 234.84034729]
[54.89686203 231.96926880]
[69.93761444 231.85942078]
[72.60340881 217.09819031]
[75.26920319 202.33697510]
[68.45403290 186.16539001]
[80.46520996 172.20783997]
[82.91093445 157.40856934]
[85.35665894 142.60929871]
[87.80239105 127.81002808]
[90.24811554 113.01075745]
[84.04858398 103.15139771]
[86.03302002 91.67519379]
[95.18329620 84.47007751]
[97.84909058 69.70886230]
[92.68752289 54.75330353]
[102.56353760 43.60370636]
[102.89851379 28.60744476]
[100.89450073 13.74191666]
[98.89048767 -1.12361109]
[96.88647461 -15.98913956]
[87.37482452 -28.63188553]
[93.34238434 -42.27877045]
[91.33837128 -57.14429855]
[89.33435822 -72.00982666]
[87.33034515 -86.87535858]
[85.32633209 -101.74088287]
[83.32231903 -116.60641479]
[81.31830597 -131.47193909]
[75.24384308 -117.75695038]
[64.17095947 -107.63809204]
[49.96562576 -102.82057953]
[35.02169037 -104.11624146]
[21.85746574 -111.30673218]
[12.69135857 -123.18033600]
[9.06801796 -137.73614502]
[11.59804058 -152.52124023]
[19.85507393 -165.04406738]
[32.44766235 -173.19433594]
[47.25373077 -175.59855652]
[61.77820206 -171.85157776]
[73.57344055 -162.58485413]
[80.65221405 -149.35838318]
[81.54502869 -164.33178711]
[82.43784332 -179.30519104]
[83.33066559 -194.27859497]
[69.64271545 -200.88984680]
[59.53044510 -212.23930359]
[54.53590393 -226.59629822]
[55.42071915 -241.77145386]
[62.04996109 -255.45069885]
[73.41271973 -265.54803467]
[87.77626801 -270.52368164]
[102.95024872 -269.61889648]
[116.62075806 -262.97167969]
[126.70313263 -251.59562683]
[131.65988159 -237.22555542]
[130.73515320 -222.05278015]
[124.06993866 -208.39102173]
[112.68064880 -198.32362366]
[98.30406952 -193.38578796]
[97.41125488 -178.41236877]
[96.51844025 -163.43896484]
[95.62561798 -148.46556091]
[96.18383026 -133.47595215]
[98.18784332 -118.61042786]
[100.19185638 -103.74489594]
[102.19586945 -88.87937164]
[104.19989014 -74.01383972]
[106.20390320 -59.14831161]
[108.20791626 -44.28278351]
[117.57622528 -32.70331955]
[111.75200653 -17.99315262]
[113.75601959 -3.12762475]
[115.76003265 11.73790359]
[117.76404572 26.60343170]
[122.68400574 12.43325138]
[131.19915771 0.08447833]
[142.69477844 -9.55141830]
[156.34101868 -15.77881527]
[171.15270996 -18.14815140]
[186.06059265 -16.48838234]
[199.98846436 -10.91932774]
[211.93086243 -1.84302258]
[221.02563477 10.08530617]
[226.61624146 24.00454330]
[228.29907227 38.90984726]
[225.95266724 53.72518921]
[219.74639893 67.38103485]
[210.12831116 78.89156342]
[197.79272461 87.42581940]
[183.63017273 92.36769867]
[168.66307068 93.36045837]
[153.97187805 90.33241272]
[140.61718750 83.50216675]
[129.56307983 73.36280823]
[121.60755920 60.64629364]
[117.32476044 46.26950073]
[122.67700195 60.16923904]
[112.61030579 72.37465668]
[109.94451141 87.13587189]
[116.02197266 102.77047729]
[105.04738617 115.45648193]
[102.60166168 130.25575256]
[100.15592957 145.05502319]
[97.71020508 159.85429382]
[95.26448059 174.65356445]
[102.12754059 185.57424927]
[99.78582001 197.85023499]
[90.03041840 205.00277710]
[87.36462402 219.76399231]
[84.69882965 234.52520752]
[98.75104523 239.88909912]
[111.57492065 247.74177551]
[122.73447418 257.81454468]
[131.85063171 269.76327515]
[138.61407471 283.18014526]
[142.79579163 297.60754395]
[144.25476074 312.55371094]
[142.94276428 327.50952148]
[138.90592957 341.96569824]
[132.28315735 355.43035889]
[123.30131531 367.44552612]
[112.26747131 377.60293579]
[99.55839539 385.55767822]
[85.60769653 391.04013062]
[70.89102936 393.86492920]
[55.90987396 393.93731689]
[53.24407578 408.69851685]
[50.57828140 423.45974731]
[47.91248703 438.22094727]
[45.24669266 452.98217773]
[50.40826035 467.93774414]
[40.53224182 479.08734131]
[37.86644745 493.84854126]
[35.20064926 508.60977173]
[40.36222076 523.56530762]
[30.48620033 534.71490479]
[44.82671738 539.17913818]
[58.50991821 545.37182617]
[71.32836914 553.19915771]
[83.08775330 562.54241943]
[93.60979462 573.26000977]
[102.73498535 585.18939209]
[110.32498932 598.14978027]
[116.26473999 611.94464111]
[120.46419525 626.36492920]
[122.85969543 641.19195557]
[123.41491699 656.20098877]
[122.12145233 671.16455078]
[118.99890137 685.85565186]
[114.09461212 700.05169678]
[107.48292542 713.53741455]
[99.26406860 726.10845947]
[89.56264496 737.57409668]
[78.52571869 747.76068115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 192]
[33 190]
[34 189]
[35 188]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[57 166]
[58 165]
[59 164]
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[68 155]
[69 154]
[71 152]
[72 130]
[73 129]
[74 128]
[75 127]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
