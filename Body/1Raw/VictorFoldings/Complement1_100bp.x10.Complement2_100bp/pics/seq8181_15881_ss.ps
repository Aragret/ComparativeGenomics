%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[82.39196014 682.70806885]
[74.64215088 668.25567627]
[83.51219177 654.46240234]
[83.73551941 639.46405029]
[83.95884705 624.46569824]
[84.18217468 609.46734619]
[84.40550232 594.46905518]
[84.62882996 579.47070312]
[84.85215759 564.47235107]
[84.96382904 549.47277832]
[84.96382904 534.47277832]
[84.96382904 519.47277832]
[76.63487244 510.70037842]
[76.51210785 498.20361328]
[85.20674133 488.67651367]
[85.43006897 473.67816162]
[74.90399933 463.20260620]
[74.91682434 447.98898315]
[85.97592926 437.01928711]
[86.19925690 422.02093506]
[86.42258453 407.02261353]
[86.64591217 392.02426147]
[77.28518677 377.18029785]
[86.85987091 361.45111084]
[86.85987091 346.45111084]
[76.08918762 340.85043335]
[68.67796326 331.14443970]
[66.08142090 319.13778687]
[68.85229492 307.09613037]
[76.52455902 297.31835938]
[87.69051361 291.69790649]
[88.13711548 276.70455933]
[88.58372498 261.71121216]
[89.03032684 246.71786499]
[89.47693634 231.72451782]
[89.92353821 216.73117065]
[80.78485870 201.74946594]
[90.59266663 186.16459656]
[90.81599426 171.16625977]
[91.03932190 156.16790771]
[82.84189606 147.27247620]
[82.90520477 134.77528381]
[91.74072266 125.37866974]
[92.18732452 110.38531494]
[92.18732452 95.38531494]
[91.74072266 80.39196777]
[91.29411316 65.39862061]
[83.14936066 51.83493042]
[90.50429535 38.88293457]
[90.05768585 23.88958359]
[89.61108398 8.89623356]
[83.10107422 22.40992355]
[72.94114685 33.44513702]
[60.01024246 41.04721451]
[45.42700195 44.55850601]
[30.45302963 43.67524338]
[16.38372231 38.47384262]
[4.43621397 29.40427399]
[-4.35591459 17.25114822]
[-9.23205662 3.06583095]
[-9.77037811 -11.92450619]
[-5.92430687 -26.42304993]
[1.97343135 -39.17552948]
[13.23960400 -49.07872772]
[26.89957619 -55.27592087]
[41.77162170 -57.23098755]
[56.56915665 -54.77479553]
[70.01205444 -48.11983109]
[80.93736267 -37.84181595]
[88.39993286 -24.82989693]
[91.75391388 -10.21324730]
[95.51021576 -24.73530579]
[91.47528839 -40.03334427]
[102.15322113 -50.41751480]
[105.90951538 -64.93957520]
[107.58106232 -79.84614563]
[107.13445282 -94.83950043]
[106.68785095 -109.83284760]
[106.24124146 -124.82619476]
[105.79463196 -139.81954956]
[105.34803009 -154.81289673]
[97.20327759 -168.37658691]
[104.55821228 -181.32858276]
[104.11160278 -196.32192993]
[103.66499329 -211.31527710]
[93.62623596 -226.75241089]
[102.54085541 -241.86851501]
[101.87107086 -256.85354614]
[93.52527618 -270.29446411]
[100.68655396 -283.35452271]
[100.01676941 -298.33956909]
[99.01251221 -313.30590820]
[97.67427826 -328.24609375]
[96.33604431 -343.18627930]
[81.67975616 -347.05526733]
[69.23239136 -355.70620728]
[60.49702835 -368.09448242]
[56.52850723 -382.72415161]
[57.80604172 -397.82855225]
[64.17536926 -411.58383179]
[74.86736298 -422.32894897]
[88.59090424 -428.76632690]
[103.68881226 -430.11871338]
[118.33794403 -426.22271729]
[130.76934814 -417.54885864]
[139.48187256 -405.14450073]
[143.42341614 -390.50756836]
[142.11805725 -375.40551758]
[135.72338867 -361.66198730]
[125.01161194 -350.93661499]
[111.27622986 -344.52453613]
[112.61446381 -329.58435059]
[113.95269775 -314.64416504]
[116.40940857 -312.11492920]
[117.76312256 -308.27014160]
[117.40885925 -303.64111328]
[115.00180817 -299.00936890]
[115.67159271 -284.02432251]
[123.96948242 -271.65524292]
[116.85610962 -257.52334595]
[117.52589417 -242.53829956]
[126.23825073 -234.14654541]
[126.91889954 -221.66775513]
[118.65834808 -211.76188660]
[119.10494995 -196.76853943]
[119.55155945 -181.77519226]
[127.66436768 -169.28392029]
[120.34137726 -155.25950623]
[120.78798676 -140.26615906]
[121.23458862 -125.27280426]
[121.68119812 -110.27945709]
[122.12779999 -95.28610229]
[122.57440948 -80.29275513]
[129.08441162 -93.80644226]
[139.24433899 -104.84165192]
[152.17524719 -112.44373322]
[166.75848389 -115.95502472]
[181.73246765 -115.07176208]
[195.80177307 -109.87036133]
[207.74928284 -100.80079651]
[216.54141235 -88.64766693]
[221.41754150 -74.46234894]
[221.95587158 -59.47201157]
[218.10980225 -44.97347260]
[210.21206665 -32.22099304]
[198.94589233 -22.31779289]
[185.28591919 -16.12059975]
[170.41386414 -14.16553307]
[155.61633301 -16.62172508]
[142.17343140 -23.27668762]
[131.24812317 -33.55470657]
[123.78555298 -46.56662369]
[120.43157959 -61.18327332]
[116.67527771 -46.66121292]
[120.97888184 -32.40189362]
[110.03227234 -20.97900581]
[106.27597046 -6.45694637]
[104.60443115 8.44962788]
[105.05104065 23.44297791]
[105.49764252 38.43632889]
[113.61045074 50.92758942]
[106.28746796 64.95201111]
[106.73406982 79.94535828]
[107.18067932 94.93871307]
[109.21392822 97.20925903]
[110.46595764 100.26980591]
[110.64257050 103.83242798]
[109.56006622 107.50453949]
[107.18067932 110.83192444]
[106.73406982 125.82527161]
[115.83619690 141.83255005]
[106.03765869 156.39123535]
[105.81433105 171.38958740]
[105.59100342 186.38792419]
[113.99812317 196.16969299]
[113.50334167 208.65724182]
[104.91689301 217.17778015]
[104.47028351 232.17112732]
[104.02368164 247.16447449]
[103.57707214 262.15783691]
[103.13047028 277.15118408]
[102.68386078 292.14453125]
[117.35315704 302.80142212]
[122.64239502 319.98001099]
[116.61418152 336.74639893]
[101.85987091 346.45111084]
[101.85987091 361.45111084]
[110.41169739 371.10662842]
[110.10289001 383.60018921]
[101.64424896 392.24758911]
[101.42092133 407.24594116]
[101.19759369 422.24426270]
[100.97426605 437.24261475]
[111.70185089 448.53671265]
[111.26171112 463.74398804]
[100.42840576 473.90148926]
[100.20507812 488.89984131]
[109.54452515 504.76980591]
[99.96382904 519.47277832]
[99.96382904 534.47277832]
[99.96382904 549.47277832]
[103.09323883 558.05444336]
[99.85050201 564.69567871]
[99.62717438 579.69403076]
[99.40384674 594.69238281]
[99.18051910 609.69067383]
[98.95719147 624.68902588]
[98.73386383 639.68737793]
[98.51052856 654.68572998]
[106.96597290 668.73693848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 201]
[11 200]
[12 199]
[15 197]
[16 196]
[19 193]
[20 192]
[21 191]
[22 190]
[24 187]
[25 186]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[38 174]
[39 173]
[40 172]
[43 170]
[44 169]
[45 164]
[46 163]
[47 162]
[49 160]
[50 159]
[51 158]
[71 157]
[72 156]
[74 154]
[75 153]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[83 126]
[84 125]
[85 124]
[87 121]
[88 120]
[90 118]
[91 117]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
