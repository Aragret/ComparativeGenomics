%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[111.20550537 511.34722900]
[112.71875000 496.38864136]
[116.67359924 481.88314819]
[122.96218109 468.22650146]
[131.41291809 455.79129028]
[141.79528809 444.91671753]
[153.82603455 435.89947510]
[167.17697144 428.98553467]
[162.56295776 414.71279907]
[157.94894409 400.44006348]
[152.90037537 395.04248047]
[153.37420654 385.92034912]
[148.97320557 371.58050537]
[144.57221985 357.24066162]
[140.17121887 342.90081787]
[135.77021790 328.56097412]
[124.63925934 318.66394043]
[127.98706818 303.20101929]
[123.58606720 288.86114502]
[112.45510864 278.96414185]
[115.80291748 263.50119019]
[111.40192413 249.16134644]
[107.00092316 234.82150269]
[102.59992981 220.48165894]
[98.19892883 206.14179993]
[95.39425659 220.87727356]
[88.22851562 234.05497742]
[77.38468170 244.41893005]
[63.89633942 250.98127747]
[49.04909897 253.11656189]
[34.25810623 250.62124634]
[20.93314743 243.73318481]
[10.34427166 233.10888672]
[3.50074291 219.76100159]
[1.05484259 204.96176147]
[3.23969841 190.12173462]
[9.84706402 176.65538025]
[20.24716759 165.84622192]
[33.44873810 158.72451782]
[48.19348145 155.96908569]
[63.07603073 157.84251404]
[76.67787170 164.16629028]
[87.70256042 174.33763123]
[95.09970093 187.38813782]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[90.57946014 73.10660553]
[87.91366577 58.34539032]
[85.24786377 43.58417511]
[82.58206940 28.82295799]
[79.91627502 14.06173992]
[77.25048065 -0.69947714]
[74.32944489 -3.91219115]
[72.74230957 -7.52404881]
[72.45075226 -11.06670284]
[73.26828766 -14.13235760]
[74.89286041 -16.41685104]
[65.57049561 -29.19981003]
[71.74057770 -42.75633240]
[69.95811462 -57.65005112]
[66.63585663 -72.27751160]
[61.80985641 -86.47996521]
[56.98386002 -100.68242645]
[45.21797562 -111.25949860]
[48.44910049 -125.79941559]
[43.62310028 -140.00186157]
[38.79710388 -154.20433044]
[24.04674530 -151.35113525]
[9.04525948 -150.53309631]
[-5.92788458 -151.76545715]
[-20.59374619 -155.02525330]
[-34.67911148 -160.25175476]
[-47.92157745 -167.34757996]
[-60.07444000 -176.18057251]
[-70.91130829 -186.58615112]
[-80.23029327 -198.37046814]
[-87.85778046 -211.31401062]
[-93.65168762 -225.17562866]
[-97.50407410 -239.69708252]
[-99.34317017 -254.60786438]
[-99.13471222 -269.63018799]
[-96.88258362 -284.48422241]
[-92.62874603 -298.89318848]
[-86.45243835 -312.58868408]
[-78.46872711 -325.31561279]
[-68.82634735 -336.83682251]
[-57.70491791 -346.93768311]
[-45.31163406 -355.43005371]
[-31.87737656 -362.15570068]
[-17.65241051 -366.98934937]
[-2.90174389 -369.84094238]
[12.09983063 -370.65734863]
[27.07284164 -369.42337036]
[41.73834991 -366.16198730]
[55.82315063 -360.93395996]
[69.06484222 -353.83670044]
[81.21675873 -345.00241089]
[92.05249786 -334.59564209]
[101.37020111 -322.81033325]
[108.99629211 -309.86596680]
[114.78870392 -296.00372314]
[118.63951111 -281.48184204]
[120.47698975 -266.57086182]
[120.26690674 -251.54855347]
[118.01317596 -236.69477844]
[113.75777435 -222.28627014]
[107.57998657 -208.59141541]
[99.59490204 -195.86538696]
[89.95127106 -184.34521484]
[78.82875061 -174.24554443]
[66.43454742 -165.75451660]
[52.99956131 -159.03031921]
[57.82555771 -144.82786560]
[62.65155411 -130.62541199]
[74.07225037 -121.06418610]
[71.18631744 -105.50842285]
[76.01231384 -91.30596161]
[80.83831024 -77.10350800]
[83.89549255 -91.78865814]
[92.27610016 -104.22913361]
[104.73691559 -112.57946777]
[119.42945862 -115.60092926]
[134.17416382 -112.84530640]
[146.78376770 -104.72138214]
[155.38768005 -92.43429565]
[158.70957947 -77.80675507]
[156.25668335 -63.00867081]
[148.39285278 -50.23525238]
[136.28465271 -41.38135910]
[121.72824860 -37.76041794]
[106.88301086 -39.90956879]
[93.95113373 -47.50999832]
[84.85182953 -59.43251801]
[86.63430023 -44.53879929]
[95.82917023 -32.82114029]
[89.78658295 -18.19931602]
[92.01169586 -3.36527252]
[94.67749023 11.39594460]
[97.34329224 26.15716171]
[100.00908661 40.91838074]
[102.67488098 55.67959595]
[105.34067535 70.44081116]
[111.89669800 56.94939041]
[124.26444244 48.46180725]
[139.21099854 47.19670486]
[152.82937622 53.48477173]
[161.55976868 65.68232727]
[163.12005615 80.60095215]
[157.10240173 94.34096527]
[145.07980347 103.31074524]
[130.19493103 105.16562653]
[116.33866119 99.42074585]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[110.09304810 186.94154358]
[112.53877258 201.74081421]
[116.93977356 216.08065796]
[121.34077454 230.42050171]
[125.74176788 244.76034546]
[130.14276123 259.10018921]
[141.58851624 270.02288818]
[137.92591858 284.46017456]
[142.32691956 298.80001831]
[153.77265930 309.72271729]
[150.11006165 324.15997314]
[154.51106262 338.49981689]
[158.91206360 352.83966064]
[163.31306458 367.17950439]
[167.71405029 381.51937866]
[172.22167969 395.82604980]
[176.83569336 410.09878540]
[181.44970703 424.37152100]
[196.32139587 422.16180420]
[211.35394287 422.43017578]
[226.13728333 425.16934204]
[240.26808167 430.30450439]
[253.36087036 437.69564819]
[265.05844116 447.14111328]
[275.04168701 458.38317871]
[283.03826904 471.11523438]
[288.83001709 484.98986816]
[292.25894165 499.62857056]
[293.23150635 514.63208008]
[291.72113037 529.59094238]
[287.76907349 544.09716797]
[281.48315430 557.75506592]
[273.03479004 570.19189453]
[262.65451050 581.06848145]
[250.62550354 590.08801270]
[237.27590942 597.00451660]
[222.96990967 601.62933350]
[208.09780884 603.83618164]
[193.06529236 603.56488037]
[178.28248596 600.82287598]
[164.15267944 595.68499756]
[151.06130981 588.29132080]
[139.36555481 578.84362793]
[129.38447571 567.59960938]
[121.39034271 554.86602783]
[115.60126495 540.99029541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 182]
[9 181]
[10 180]
[12 179]
[13 178]
[14 177]
[15 176]
[16 175]
[18 173]
[19 172]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[44 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[51 158]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[62 141]
[64 139]
[65 138]
[66 123]
[67 122]
[68 121]
[70 119]
[71 118]
[72 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
