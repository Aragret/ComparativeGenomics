%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[19.10235214 667.30163574]
[17.09723473 682.28399658]
[10.76356220 696.00897217]
[0.66451895 707.25622559]
[-12.30189419 715.02563477]
[-26.98271370 718.62634277]
[-42.07252884 717.73815918]
[-56.22956467 712.44006348]
[-68.19498444 703.20318604]
[-76.90483856 690.84881592]
[-81.58464813 676.47558594]
[-81.81828308 661.36145020]
[-77.58497620 646.85040283]
[-69.26114655 634.23272705]
[-57.58694839 624.63043213]
[-43.60043335 618.89727783]
[-28.54528046 617.54309082]
[-25.44117165 602.86779785]
[-22.33706093 588.19250488]
[-19.23295021 573.51721191]
[-24.16897583 559.46423340]
[-13.74334335 547.56396484]
[-10.63923359 532.88867188]
[-7.53512287 518.21337891]
[-16.00550842 508.50347900]
[-17.35692215 495.49365234]
[-10.87312222 483.91043091]
[1.27433038 478.09201050]
[4.59659004 463.46456909]
[7.91884947 448.83709717]
[-4.31437826 440.27688599]
[-12.36004639 427.65100098]
[-14.96585941 412.86672974]
[-11.70406437 398.17153931]
[-3.04130650 385.81152344]
[9.72784710 377.68798828]
[24.67429352 375.06512451]
[27.99655342 360.43768311]
[31.31881332 345.81021118]
[34.64107132 331.18273926]
[21.82637024 325.37557983]
[10.39545345 317.16467285]
[0.79359996 306.86734009]
[-6.60467243 294.88229370]
[-11.51021290 281.67407227]
[-13.73053932 267.75512695]
[-13.17739010 253.66587830]
[-9.87023258 239.95381165]
[-3.93558049 227.15208435]
[4.39783955 215.75894165]
[14.80790615 206.21818542]
[26.89155006 198.90196228]
[40.18036652 194.09626770]
[54.15877151 191.98970032]
[68.28398895 192.66610718]
[72.04029083 178.14404297]
[75.79659271 163.62199402]
[79.55289459 149.09992981]
[83.30919647 134.57786560]
[87.06549072 120.05580902]
[90.82179260 105.53375244]
[92.49333191 90.62718201]
[92.04673004 75.63382721]
[91.60012054 60.64048004]
[91.15351868 45.64712906]
[83.68518829 58.65574265]
[71.61967468 67.56772614]
[56.99023056 70.88124847]
[42.26217651 68.03792572]
[29.91744995 59.51691055]
[22.03635025 46.75414276]
[19.94698143 31.90036964]
[24.00144196 17.45871735]
[33.51647949 5.86285400]
[46.88864899 -0.93311197]
[61.86449814 -1.78394091]
[75.92033386 3.45374680]
[86.68750763 13.89730835]
[92.35186005 27.78845215]
[94.79758453 12.98918056]
[97.24330902 -1.81008995]
[91.85964966 -16.68714333]
[101.56857300 -27.98254585]
[104.01429749 -42.78181458]
[106.46002960 -57.58108521]
[108.90575409 -72.38035583]
[111.13087463 -87.21440125]
[113.13488770 -102.07993317]
[115.02817535 -116.95996857]
[116.81064606 -131.85368347]
[107.32231903 -141.41329956]
[105.10457611 -154.50115967]
[110.74615479 -166.30178833]
[121.98523712 -172.60357666]
[123.98925018 -187.46910095]
[125.99326324 -202.33462524]
[127.99727631 -217.20014954]
[130.00129700 -232.06568909]
[132.00531006 -246.93121338]
[118.13835907 -252.89865112]
[106.39636230 -262.38696289]
[97.65064240 -274.69204712]
[92.55019379 -288.90078735]
[91.47351074 -303.95877075]
[94.50047302 -318.74862671]
[101.40647125 -332.17285156]
[111.67903900 -343.23529053]
[124.55587006 -351.11499023]
[139.08143616 -355.22723389]
[154.17782593 -355.26690674]
[168.72479248 -351.23104858]
[181.64285278 -343.41912842]
[191.97341919 -332.41082764]
[198.94987488 -319.02310181]
[202.05451965 -304.24932861]
[201.05697632 -289.18588257]
[196.03126526 -274.95056152]
[187.35034180 -262.59967041]
[175.65835571 -253.04980469]
[161.82296753 -247.00956726]
[146.87083435 -244.92720032]
[144.86682129 -230.06167603]
[142.86280823 -215.19613647]
[140.85879517 -200.33061218]
[138.85478210 -185.46508789]
[136.85076904 -170.59956360]
[147.60951233 -157.67329407]
[145.65200806 -140.62973022]
[131.70436096 -130.07121277]
[129.92189026 -115.17749786]
[132.24827576 -108.16253662]
[128.00041199 -100.07591248]
[125.99639893 -85.21038818]
[128.12821960 -80.93670654]
[127.59798431 -75.27845001]
[123.70502472 -69.93463135]
[121.25930023 -55.13536072]
[118.81356812 -40.33609009]
[116.36784363 -25.53681755]
[121.92643738 -11.71830654]
[112.04257965 0.63563752]
[109.59685516 15.43490791]
[107.15113068 30.23417854]
[106.14686584 45.20052338]
[106.59347534 60.19387436]
[107.04007721 75.18722534]
[107.48668671 90.18057251]
[113.99669647 76.66688538]
[124.15661621 65.63166809]
[137.08752441 58.02959061]
[151.67076111 54.51830292]
[166.64474487 55.40156174]
[180.71405029 60.60296631]
[192.66156006 69.67253113]
[201.45368958 81.82566071]
[206.32981873 96.01097870]
[206.86814880 111.00131226]
[203.02207947 125.49985504]
[195.12432861 138.25233459]
[183.85816956 148.15553284]
[170.19819641 154.35272217]
[155.32614136 156.30780029]
[140.52861023 153.85160828]
[127.08571625 147.19664001]
[116.16040802 136.91862488]
[108.69783020 123.90670776]
[105.34385681 109.29005432]
[101.58755493 123.81211090]
[97.83125305 138.33416748]
[94.07495117 152.85623169]
[90.31864929 167.37829590]
[86.56234741 181.90034485]
[82.80605316 196.42240906]
[97.04486084 203.67874146]
[109.31891632 213.90274048]
[119.02108765 226.58483887]
[125.67231750 241.09393311]
[128.94529724 256.70883179]
[128.68054199 272.65414429]
[124.89415741 288.13870239]
[117.77693176 302.39489746]
[107.68467712 314.71664429]
[95.12047577 324.49444580]
[80.70958710 331.24548340]
[65.16835022 334.63745117]
[49.26853180 334.50500488]
[45.94627380 349.13247681]
[42.62401581 363.75991821]
[39.30175400 378.38739014]
[51.64881516 387.20928955]
[59.65608978 400.05166626]
[62.12982559 414.94107056]
[58.72378159 429.60348511]
[49.98731613 441.81164551]
[37.27706146 449.72332764]
[22.54631042 452.15936279]
[19.22405052 466.78680420]
[15.90179062 481.41427612]
[25.49408531 496.04327393]
[21.61478806 512.75451660]
[7.14017916 521.31750488]
[4.03606939 535.99279785]
[0.93195909 550.66809082]
[5.64595699 565.77069092]
[-4.55764818 576.62127686]
[-7.66175842 591.29663086]
[-10.76586819 605.97192383]
[-13.86997890 620.64721680]
[-0.65261847 627.98156738]
[9.81449032 638.88714600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 205]
[22 203]
[23 202]
[24 201]
[28 198]
[29 197]
[30 196]
[37 189]
[38 188]
[39 187]
[40 186]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 147]
[63 146]
[64 145]
[65 144]
[79 143]
[80 142]
[81 141]
[83 139]
[84 138]
[85 137]
[86 136]
[87 133]
[88 132]
[89 130]
[90 129]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
