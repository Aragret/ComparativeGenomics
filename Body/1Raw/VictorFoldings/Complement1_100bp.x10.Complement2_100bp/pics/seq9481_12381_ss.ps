%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[98.46304321 340.19500732]
[100.86888885 325.34210205]
[106.04244232 311.21304321]
[113.79666901 298.31854248]
[123.85128021 287.12472534]
[135.84278870 278.03625488]
[149.33772278 271.38168335]
[145.36563110 256.91714478]
[141.28596497 242.48260498]
[137.09895325 228.07882690]
[132.69795227 213.73898315]
[128.08393860 199.46624756]
[123.46993256 185.19351196]
[118.85591888 170.92077637]
[114.24191284 156.64804077]
[109.62790680 142.37530518]
[105.01389313 128.10258484]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[73.47532654 66.32765198]
[66.39822388 53.10212326]
[59.32111740 39.87659454]
[52.04788971 26.75790024]
[44.58014679 13.74894810]
[37.11240768 0.73999602]
[29.64466476 -12.26895618]
[22.17692375 -25.27790833]
[14.70918274 -38.28686142]
[15.65487957 -23.31670189]
[13.51000023 -8.47084427]
[8.36574554 5.61945868]
[0.44085166 18.35507965]
[-9.92771053 29.19449615]
[-22.29906464 37.67680740]
[-36.14717484 43.44134140]
[-50.88320923 46.24299240]
[-65.88059235 45.96262360]
[-80.50161743 42.61216354]
[-94.12459564 36.33407593]
[-106.17027283 27.39530373]
[-116.12646484 16.17593002]
[-123.56981659 3.15300965]
[-128.18383789 -11.11971855]
[-129.77235413 -26.03536987]
[-128.26779175 -40.95972061]
[-123.73415375 -55.25818634]
[-116.36418915 -68.32278442]
[-106.47129059 -79.59799957]
[-94.47609711 -88.60440826]
[-80.88866425 -94.95905304]
[-66.28672028 -98.39173126]
[-51.29115295 -98.75647736]
[-36.53958511 -96.03778839]
[-22.65925980 -90.35126495]
[-10.24037361 -81.93869781]
[0.18901491 -71.15779877]
[8.18552113 -58.46681213]
[6.62499762 -73.38541412]
[5.06447458 -88.30402374]
[3.50395179 -103.22262573]
[1.94342875 -118.14123535]
[-0.39205831 -132.95829773]
[-3.49616838 -147.63360596]
[-6.60027838 -162.30889893]
[-9.70438862 -176.98420715]
[-13.19462585 -180.86561584]
[-14.69680214 -185.25842285]
[-14.34903336 -189.31971741]
[-12.60396767 -192.38354492]
[-15.04969597 -207.18281555]
[-17.49542236 -221.98210144]
[-19.94115067 -236.78137207]
[-34.94361496 -236.10133362]
[-49.92120361 -237.20050049]
[-64.66365814 -240.06344604]
[-78.96401215 -244.64996338]
[-92.62151337 -250.89567566]
[-105.44443512 -258.71292114]
[-117.25276184 -267.99191284]
[-127.88072205 -278.60241699]
[-137.17912292 -290.39547729]
[-145.01741028 -303.20553589]
[-151.28556824 -316.85275269]
[-155.89558411 -331.14553833]
[-158.78276062 -345.88327026]
[-159.90653992 -360.85903931]
[-159.25117493 -375.86257935]
[-156.82583618 -390.68331909]
[-152.66459656 -405.11315918]
[-146.82586670 -418.94955444]
[-139.39160156 -431.99822998]
[-130.46618652 -444.07604980]
[-120.17490387 -455.01339722]
[-108.66223145 -464.65676880]
[-96.08979034 -472.87078857]
[-82.63408661 -479.54016113]
[-68.48400116 -484.57119751]
[-53.83818436 -487.89331055]
[-38.90224457 -489.45986938]
[-23.88586044 -489.24887085]
[-8.99983406 -487.26327515]
[5.54685640 -483.53097534]
[19.54999924 -478.10433960]
[32.81300735 -471.05957031]
[45.14969635 -462.49554443]
[56.38687515 -452.53250122]
[66.36679077 -441.31030273]
[74.94934082 -428.98648071]
[82.01403809 -415.73406982]
[87.46170044 -401.73910522]
[91.21586609 -387.19802856]
[93.22382355 -372.31500244]
[93.45738220 -357.29895020]
[91.91326904 -342.36068726]
[88.61315155 -327.70989990]
[83.60337067 -313.55227661]
[76.95424652 -300.08654785]
[68.75912476 -287.50180054]
[59.13305664 -275.97463989]
[48.21117020 -265.66693115]
[36.14679337 -256.72338867]
[23.10929489 -249.26951599]
[9.28169727 -243.41000366]
[-5.14187956 -239.22709656]
[-2.69615197 -224.42782593]
[-0.25042465 -209.62855530]
[2.19530272 -194.82928467]
[4.97091389 -180.08831787]
[8.07502365 -165.41300964]
[11.17913437 -150.73771667]
[14.28324413 -136.06240845]
[22.39160538 -148.68202209]
[36.67684174 -153.25717163]
[50.60793304 -147.69618225]
[57.81577301 -134.54144287]
[55.00503540 -119.80713654]
[43.46075058 -110.22958374]
[28.46080971 -110.18751526]
[16.86203384 -119.70175171]
[18.42255592 -104.78314972]
[19.98307991 -89.86454773]
[21.54360199 -74.94593811]
[23.10412598 -60.02733612]
[27.71813393 -45.75460052]
[35.18587494 -32.74565125]
[42.65361786 -19.73669815]
[50.12135696 -6.72774506]
[57.58909988 6.28120708]
[65.05683899 19.29015923]
[69.35108185 21.38026237]
[72.37792969 26.19017220]
[72.54664612 32.79948807]
[79.62374878 46.02501678]
[86.70085907 59.25054550]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[113.59014130 92.27096558]
[121.10093689 79.28681946]
[133.45262146 70.77590179]
[148.26029968 68.38153076]
[162.66481018 72.56601715]
[173.88488770 82.52140808]
[179.75410461 96.32547760]
[179.13920593 111.31286621]
[172.15893555 124.58975220]
[160.16104126 133.59257507]
[145.46215820 136.58302307]
[130.90040588 132.98370361]
[119.28662872 123.48857117]
[123.90063477 137.76130676]
[128.51464844 152.03404236]
[133.12866211 166.30676270]
[137.74266052 180.57949829]
[142.35667419 194.85223389]
[146.97068787 209.12496948]
[151.61328125 213.83218384]
[152.97700500 219.34918213]
[151.50273132 223.89181519]
[155.68974304 238.29559326]
[161.09019470 245.66261292]
[159.83015442 252.94506836]
[163.80224609 267.40957642]
[178.80311584 266.23895264]
[193.75440979 267.92864990]
[208.11566162 272.41763306]
[221.36772156 279.54360962]
[233.03150940 289.04901123]
[242.68542480 300.59017944]
[249.98045349 313.74990845]
[254.65290833 328.05252075]
[256.53384399 342.98098755]
[255.55532837 357.99560547]
[251.75268555 372.55364990]
[245.26338196 386.12881470]
[236.32202148 398.23040771]
[225.25181580 408.42095947]
[212.45295715 416.33206177]
[198.38810730 421.67773438]
[183.56568909 424.26477051]
[168.52156067 423.99963379]
[153.79951477 420.89187622]
[139.93177795 415.05389404]
[127.41963196 406.69668579]
[116.71540833 396.12237549]
[108.20603943 383.71319580]
[102.19915009 369.91778564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 186]
[8 185]
[9 183]
[10 182]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 160]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[30 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 133]
[65 132]
[66 131]
[67 130]
[71 129]
[72 128]
[73 127]
[74 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
