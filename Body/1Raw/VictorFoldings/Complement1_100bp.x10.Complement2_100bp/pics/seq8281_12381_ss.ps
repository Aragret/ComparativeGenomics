%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[170.43228149 633.85107422]
[159.53627014 623.53417969]
[149.33834839 612.52667236]
[139.88218689 600.87579346]
[131.20828247 588.63140869]
[123.35376740 575.84588623]
[116.35228729 562.57403564]
[110.23381805 548.87274170]
[105.02456665 534.80053711]
[100.74684143 520.41778564]
[97.41894531 505.78607178]
[95.05514526 490.96801758]
[93.66555786 476.02709961]
[93.25612640 461.02728271]
[93.82861328 446.03280640]
[95.38056183 431.10784912]
[97.90533447 416.31637573]
[101.39211273 401.72171021]
[105.82596588 387.38632202]
[111.18790436 373.37161255]
[117.45497131 359.73760986]
[124.60033417 346.54269409]
[132.59338379 333.84335327]
[141.39991760 321.69396973]
[150.98219299 310.14657593]
[161.29917908 299.25061035]
[172.30673218 289.05276489]
[183.95767212 279.59667969]
[196.20213318 270.92285156]
[188.35037231 258.14199829]
[180.49862671 245.36114502]
[172.64686584 232.58030701]
[159.39215088 225.78605652]
[158.76106262 209.97743225]
[150.90931702 197.19659424]
[143.05755615 184.41575623]
[135.20579529 171.63490295]
[127.35404205 158.85406494]
[119.50228882 146.07322693]
[105.73427582 149.70109558]
[91.50185394 149.30378723]
[77.95767975 144.91343689]
[66.19866943 136.88565063]
[57.17716599 125.87056732]
[51.62379837 112.76026917]
[49.98832703 98.61654663]
[52.40320587 84.58486938]
[58.67285156 71.80162811]
[68.28950500 61.30212021]
[60.62891006 48.40579224]
[52.96831131 35.50946808]
[45.30771637 22.61314011]
[37.64711761 9.71681309]
[29.98652077 -3.17951417]
[22.32592201 -16.07584190]
[8.62590122 -23.98912048]
[8.77818489 -38.88294601]
[1.11758733 -51.77927399]
[-6.54301023 -64.67559814]
[-14.20360756 -77.57192993]
[-21.86420441 -90.46825409]
[-29.52480316 -103.36457825]
[-37.18539810 -116.26091003]
[-50.95810318 -110.26792908]
[-65.37334442 -106.04842377]
[-80.20375824 -103.66896057]
[-95.21546936 -103.16704559]
[-110.17170715 -104.55060577]
[-124.83658600 -107.79782104]
[-138.97883606 -112.85748291]
[-152.37539673 -119.64978027]
[-164.81500244 -128.06759644]
[-176.10144043 -137.97816467]
[-186.05673218 -149.22518921]
[-194.52384949 -161.63127136]
[-201.36926270 -175.00077820]
[-206.48500061 -189.12283325]
[-209.79039001 -203.77471924]
[-211.23330688 -218.72534180]
[-210.79096985 -233.73892212]
[-208.47038269 -248.57867432]
[-204.30812073 -263.01052856]
[-198.36985779 -276.80691528]
[-190.74922180 -289.75021362]
[-181.56640625 -301.63632202]
[-170.96624756 -312.27774048]
[-159.11590576 -321.50665283]
[-146.20230103 -329.17752075]
[-132.42909241 -335.16934204]
[-118.01350403 -339.38763428]
[-103.18288422 -341.76583862]
[-88.17113495 -342.26647949]
[-73.21501923 -340.88165283]
[-58.55040741 -337.63320923]
[-44.40858459 -332.57235718]
[-31.01259422 -325.77896118]
[-18.57370186 -317.36007690]
[-7.28809166 -307.44857788]
[2.66624737 -296.20071411]
[11.13232136 -283.79388428]
[17.97660637 -270.42382812]
[23.09116173 -256.30133057]
[26.39531898 -241.64916992]
[27.83697128 -226.69842529]
[27.39337730 -211.68489075]
[25.07153702 -196.84533691]
[20.90806770 -182.41381836]
[14.96863174 -168.61793518]
[7.34690523 -155.67527771]
[-1.83690798 -143.78994751]
[-12.43796539 -133.14942932]
[-24.28907204 -123.92150879]
[-16.62847519 -111.02517700]
[-8.96787834 -98.12885284]
[-1.30728054 -85.23252869]
[6.35331678 -72.33619690]
[14.01391411 -59.43987274]
[21.67451096 -46.54354477]
[34.82659531 -39.55269623]
[35.22224808 -23.73643875]
[42.88284683 -10.84011173]
[50.54344559 2.05621529]
[58.20404053 14.95254230]
[65.86463928 27.84886932]
[73.52523804 40.74519730]
[81.18583679 53.64152145]
[96.42291260 50.09723663]
[112.00971985 51.43202972]
[126.42232513 57.51539230]
[138.25157166 67.75254822]
[146.34089661 81.14258575]
[149.89939880 96.37635040]
[148.57916260 111.96440125]
[142.50924683 126.38267517]
[132.28312683 138.22146606]
[140.13488770 151.00230408]
[147.98664856 163.78315735]
[155.83839417 176.56399536]
[163.69015503 189.34483337]
[171.54191589 202.12568665]
[185.35823059 209.83410645]
[185.42770386 224.72854614]
[193.27946472 237.50939941]
[201.13122559 250.29023743]
[208.98297119 263.07107544]
[222.25468445 256.06936646]
[235.95591736 249.95065308]
[250.02798462 244.74116516]
[264.41064453 240.46318054]
[279.04232788 237.13502502]
[293.86032104 234.77096558]
[308.80123901 233.38110352]
[323.80105591 232.97140503]
[338.79553223 233.54364014]
[353.72052002 235.09532166]
[368.51202393 237.61982727]
[383.10678101 241.10635376]
[397.44223022 245.53994751]
[411.45703125 250.90164185]
[425.09115601 257.16845703]
[438.28619385 264.31359863]
[450.98568726 272.30642700]
[463.13522339 281.11273193]
[474.68276978 290.69479370]
[485.57891846 301.01159668]
[495.77697754 312.01898193]
[505.23327637 323.66973877]
[513.90728760 335.91406250]
[521.76196289 348.69946289]
[528.76361084 361.97122192]
[534.88226318 375.67248535]
[540.09167480 389.74456787]
[544.36956787 404.12725830]
[547.69763184 418.75897217]
[550.06158447 433.57699585]
[551.45135498 448.51788330]
[551.86096191 463.51770020]
[551.28863525 478.51220703]
[549.73687744 493.43716431]
[547.21228027 508.22866821]
[543.72570801 522.82336426]
[539.29199219 537.15881348]
[533.93023682 551.17358398]
[527.66333008 564.80767822]
[520.51812744 578.00268555]
[512.52520752 590.70208740]
[503.71884155 602.85156250]
[494.13668823 614.39910889]
[483.81982422 625.29516602]
[472.81240845 635.49316406]
[461.16156006 644.94940186]
[448.91720581 653.62335205]
[436.13174438 661.47796631]
[422.85995483 668.47949219]
[409.15866089 674.59808350]
[395.08651733 679.80737305]
[380.70379639 684.08520508]
[366.07211304 687.41320801]
[351.25405884 689.77709961]
[336.31314087 691.16674805]
[321.31332397 691.57629395]
[306.31884766 691.00384521]
[291.39389038 689.45202637]
[276.60241699 686.92730713]
[262.00769043 683.44061279]
[247.67230225 679.00689697]
[233.65756226 673.64501953]
[220.02351379 667.37799072]
[206.82855225 660.23272705]
[194.12916565 652.23974609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 145]
[30 144]
[31 143]
[32 142]
[34 140]
[35 139]
[36 138]
[37 137]
[38 136]
[39 135]
[49 126]
[50 125]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[57 118]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
