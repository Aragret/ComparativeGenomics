%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[108.68566895 522.08953857]
[111.83657074 507.38436890]
[117.49330902 493.44979858]
[125.48398590 480.70928955]
[135.56576538 469.55004883]
[147.43229675 460.31115723]
[160.72293091 453.27340698]
[156.10891724 439.00070190]
[151.49491882 424.72796631]
[146.88090515 410.45523071]
[142.26689148 396.18249512]
[137.65289307 381.90975952]
[133.03887939 367.63702393]
[121.76180267 357.90682983]
[124.87902069 342.39575195]
[121.11026001 339.46221924]
[119.14430237 334.13006592]
[120.34696960 327.62890625]
[116.15995789 313.22512817]
[111.97295380 298.82135010]
[108.94920349 313.51339722]
[101.58805084 326.58297729]
[90.59112549 336.78433228]
[77.00656891 343.14514160]
[62.12918091 345.05911255]
[47.37698364 342.34387207]
[34.15605545 335.25817871]
[23.72653198 324.47741699]
[17.08249092 311.02911377]
[14.85720062 296.19509888]
[17.26276016 281.38922119]
[24.06988716 268.02273560]
[34.62977219 257.36962891]
[47.93590927 250.44528198]
[62.72004318 247.90966797]
[77.57305145 250.00447083]
[91.07923126 256.53005981]
[101.95126343 266.86441040]
[109.15327454 280.02362061]
[108.92994690 265.02526855]
[108.70661926 250.02693176]
[108.48329163 235.02859497]
[107.81350708 220.04356384]
[99.15103149 207.92701721]
[105.84049225 193.58958435]
[104.72483826 178.63113403]
[102.94237518 163.73741150]
[100.49665070 148.93814087]
[98.05091858 134.13887024]
[88.34199524 122.84347534]
[93.72566223 107.96642303]
[89.40879822 101.15927124]
[91.35540009 92.92874146]
[89.13027954 78.09469604]
[79.24076080 69.81459045]
[77.69284821 57.41347122]
[84.77513123 47.60695648]
[82.77111816 32.74142838]
[75.61920929 45.92665482]
[62.88481903 53.85351944]
[47.89667892 54.44996262]
[34.57266235 47.56007767]
[26.39563179 34.98485565]
[25.50304222 20.01143646]
[32.12821579 6.55383444]
[44.53934860 -1.87016690]
[59.49219894 -3.05855322]
[73.07812500 3.29931712]
[81.74549866 15.54068089]
[81.96882629 0.54234338]
[82.19215393 -14.45599365]
[82.41548157 -29.45433235]
[80.16696167 -33.16891479]
[79.30420685 -37.01861572]
[79.69953156 -40.55119705]
[81.09148407 -43.40234756]
[83.12514496 -45.33169174]
[84.24079895 -60.29014587]
[74.33507538 -69.41654968]
[71.53514862 -82.39233398]
[76.64416504 -94.43309784]
[87.59065247 -101.23044586]
[88.92888641 -116.17063141]
[90.26712036 -131.11080933]
[91.60535431 -146.05099487]
[92.94358826 -160.99118042]
[93.50180054 -175.98078918]
[93.27847290 -190.97914124]
[83.47066498 -206.56401062]
[92.60934448 -221.54571533]
[92.16274261 -236.53906250]
[84.01799011 -250.10275269]
[91.37291718 -263.05474854]
[90.92631531 -278.04809570]
[90.47970581 -293.04144287]
[90.03310394 -308.03479004]
[89.58649445 -323.02813721]
[75.36330414 -328.39184570]
[64.27880859 -338.79388428]
[58.02331543 -352.64804077]
[57.55073929 -367.84161377]
[62.93314743 -382.05773926]
[73.34976196 -393.12854004]
[87.21212006 -399.36581421]
[102.40631104 -399.81838989]
[116.61534119 -394.41729736]
[127.67243195 -383.98611450]
[133.89144897 -370.11557007]
[134.32405090 -354.92080688]
[128.90426636 -340.71887207]
[118.45856476 -329.67553711]
[104.57984161 -323.47476196]
[105.02645111 -308.48141479]
[105.47305298 -293.48803711]
[105.91966248 -278.49468994]
[106.36626434 -263.50134277]
[114.47908020 -251.01008606]
[107.15608978 -236.98567200]
[107.60269165 -221.99232483]
[116.18914795 -213.47178650]
[116.68392944 -200.98423767]
[108.27680969 -191.20246887]
[108.50013733 -176.20411682]
[118.88448334 -187.02841187]
[133.78298950 -188.77035522]
[146.38427734 -180.63352966]
[150.92718506 -166.33801270]
[145.33476257 -152.41950989]
[132.16380310 -145.24136353]
[117.43587494 -148.08534241]
[107.88377380 -159.65295410]
[106.54553986 -144.71276855]
[105.20730591 -129.77258301]
[103.86907196 -114.83239746]
[102.53083801 -99.89221191]
[113.85604095 -87.45925140]
[112.66152954 -70.34527588]
[99.19924927 -59.17449570]
[98.08360291 -44.21604156]
[97.41381836 -29.23100281]
[97.19049072 -14.23266602]
[96.96716309 0.76567107]
[96.74383545 15.76400852]
[97.63665009 30.73741341]
[99.64066315 45.60294342]
[111.09980011 58.89411163]
[103.96432495 75.86958313]
[106.18944550 90.70362854]
[108.52493286 105.52069092]
[118.40879059 117.87463379]
[112.85018921 131.69314575]
[115.29592133 146.49241638]
[117.74164581 161.29168701]
[127.33461761 149.76022339]
[142.25862122 148.25222778]
[153.96452332 157.63157654]
[155.74662781 172.52534485]
[146.58407593 184.40168762]
[131.72560120 186.45732117]
[119.68329620 177.51548767]
[120.79894257 192.47393799]
[129.54122925 205.66041565]
[122.77196503 218.92790222]
[125.34291077 222.42707825]
[126.54567719 226.18444824]
[126.46709442 229.73822021]
[125.33505249 232.70217896]
[123.48162842 234.80526733]
[123.70495605 249.80360413]
[123.92828369 264.80194092]
[124.15161896 279.80029297]
[126.37673187 294.63433838]
[130.56373596 309.03811646]
[134.75074768 323.44189453]
[139.15174866 337.78173828]
[150.75885010 348.53280640]
[147.31161499 363.02301025]
[151.92561340 377.29574585]
[156.53962708 391.56848145]
[161.15364075 405.84121704]
[165.76765442 420.11395264]
[170.38165283 434.38668823]
[174.99566650 448.65942383]
[189.89094543 446.58538818]
[204.92008972 447.12957764]
[219.62635803 450.27548218]
[233.56286621 455.92749023]
[246.30607605 463.91381836]
[257.46875000 473.99179077]
[266.71166992 485.85519409]
[273.75393677 499.14343262]
[278.38156128 513.45275879]
[280.45391846 528.34826660]
[279.90798950 543.37731934]
[276.76043701 558.08325195]
[271.10684204 572.01910400]
[263.11907959 584.76141357]
[253.03981018 595.92291260]
[241.17538452 605.16448975]
[227.88633728 612.20526123]
[213.57650757 616.83129883]
[198.68075562 618.90191650]
[183.65174866 618.35430908]
[168.94618225 615.20507812]
[155.01097107 609.54992676]
[142.26956177 601.56066895]
[131.10917664 591.48016357]
[121.86895752 579.61468506]
[114.82969666 566.32489014]
[110.20532227 552.01452637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 183]
[8 182]
[9 181]
[10 180]
[11 179]
[12 178]
[13 177]
[15 175]
[18 174]
[19 173]
[20 172]
[39 171]
[40 170]
[41 169]
[42 168]
[43 163]
[45 161]
[46 160]
[47 153]
[48 152]
[49 151]
[51 149]
[53 148]
[54 147]
[57 145]
[58 144]
[69 143]
[70 142]
[71 141]
[72 140]
[77 139]
[78 138]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 123]
[88 122]
[90 119]
[91 118]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
