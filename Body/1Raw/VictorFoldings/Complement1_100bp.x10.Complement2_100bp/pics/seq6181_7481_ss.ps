%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[100.45358276 948.68927002]
[85.49679565 947.52429199]
[70.59996796 945.75024414]
[55.78789520 943.36999512]
[41.08523941 940.38757324]
[26.51646805 936.80798340]
[12.10582829 932.63708496]
[-2.12269473 927.88189697]
[-16.14541817 922.55029297]
[-29.93900299 916.65112305]
[-43.48049164 910.19427490]
[-56.74734497 903.19049072]
[-69.71748352 895.65136719]
[-82.36931610 887.58947754]
[-94.68178558 879.01824951]
[-106.63439941 869.95196533]
[-118.20726776 860.40563965]
[-129.38111877 850.39526367]
[-140.13737488 839.93743896]
[-150.45809937 829.04962158]
[-160.32614136 817.74987793]
[-169.72508240 806.05700684]
[-178.63925171 793.99047852]
[-187.05383301 781.57043457]
[-194.95481873 768.81750488]
[-202.32905579 755.75292969]
[-209.16426086 742.39843750]
[-215.44906616 728.77624512]
[-221.17301941 714.90905762]
[-226.32656860 700.81988525]
[-230.90116882 686.53228760]
[-234.88919067 672.06994629]
[-238.28398132 657.45703125]
[-241.07991028 642.71777344]
[-243.27232361 627.87677002]
[-244.85757446 612.95861816]
[-245.83300781 597.98828125]
[-246.19700623 582.99060059]
[-245.94897461 567.99060059]
[-245.08930969 553.01312256]
[-243.61946106 538.08319092]
[-241.54185486 523.22570801]
[-238.85997009 508.46524048]
[-235.57824707 493.82650757]
[-231.70216370 479.33377075]
[-227.23817444 465.01123047]
[-222.19369507 450.88265991]
[-216.57713318 436.97161865]
[-210.39784241 423.30123901]
[-203.66609192 409.89431763]
[-196.39308167 396.77310181]
[-188.59094238 383.95944214]
[-180.27264404 371.47470093]
[-171.45202637 359.33966064]
[-162.14376831 347.57449341]
[-152.36338806 336.19876099]
[-142.12713623 325.23144531]
[-131.45207214 314.69076538]
[-120.35594940 304.59429932]
[-108.85723877 294.95883179]
[-96.97507477 285.80038452]
[-84.72924042 277.13421631]
[-72.14012146 268.97476196]
[-59.22865677 261.33557129]
[-46.01635361 254.22940063]
[-32.52519226 247.66804504]
[-18.77762794 241.66244507]
[-4.79654455 236.22257996]
[9.39478779 231.35749817]
[23.77274895 227.07533264]
[38.31341171 223.38317871]
[52.99256897 220.28718567]
[67.78578949 217.79251099]
[82.66845703 215.90332031]
[97.61579895 214.62272644]
[96.94600677 199.63769531]
[96.27622223 184.65264893]
[95.60643768 169.66761780]
[94.93665314 154.68257141]
[94.26686859 139.69754028]
[93.59708405 124.71250153]
[92.92729950 109.72746277]
[92.03448486 94.75405121]
[90.91883850 79.79560089]
[82.99480438 92.53176117]
[69.81117249 99.68660736]
[54.81410980 99.38988495]
[41.92380905 91.71915436]
[34.50976562 78.67952728]
[34.50999069 63.67952347]
[41.92443085 50.64011765]
[54.81496429 42.96977615]
[69.81203461 42.67350388]
[82.99545288 49.82875443]
[90.91883850 62.56430435]
[92.03448486 47.60585022]
[93.15013123 32.64739609]
[94.26577759 17.68894386]
[95.38143158 2.73049045]
[81.45690918 -3.21816969]
[70.22006226 -13.36764908]
[62.88977051 -26.61700821]
[60.26116943 -41.52905655]
[62.61939240 -56.48624802]
[69.70863342 -69.86613464]
[80.75991058 -80.21736908]
[94.57445526 -86.41712189]
[109.65377808 -87.79290009]
[124.36218262 -84.19545746]
[137.10421753 -76.01502991]
[146.49771118 -64.13896179]
[151.52372742 -49.85548019]
[151.63710022 -34.71395111]
[146.82550049 -20.35681725]
[137.61088562 -8.34142876]
[124.99277496 0.02887230]
[110.33988190 3.84613895]
[109.22423553 18.80459213]
[108.10858917 33.76304626]
[106.99293518 48.72150040]
[105.87728882 63.67995453]
[105.87728882 78.67995453]
[106.99293518 93.63840485]
[110.08946991 97.87225342]
[110.59342957 103.53964233]
[107.91233826 109.05767822]
[108.58212280 124.04271698]
[109.25190735 139.02775574]
[109.92169189 154.01278687]
[110.59147644 168.99783325]
[111.26126099 183.98286438]
[111.93104553 198.96791077]
[112.60083771 213.95294189]
[127.60281372 213.89488220]
[142.59468079 214.44879150]
[157.55148315 215.61372375]
[172.44830322 217.38775635]
[187.26039124 219.76792908]
[201.96304321 222.75028992]
[216.53182983 226.32987976]
[230.94248962 230.50071716]
[245.17102051 235.25587463]
[259.19375610 240.58744812]
[272.98736572 246.48654175]
[286.52886963 252.94335938]
[299.79574585 259.94714355]
[312.76589966 267.48623657]
[325.41775513 275.54806519]
[337.73025513 284.11926270]
[349.68289185 293.18551636]
[361.25576782 302.73178101]
[372.42965698 312.74212646]
[383.18594360 323.19992065]
[393.50671387 334.08773804]
[403.37478638 345.38748169]
[412.77374268 357.08029175]
[421.68795776 369.14675903]
[430.10256958 381.56680298]
[438.00360107 394.31970215]
[445.37786865 407.38427734]
[452.21310425 420.73876953]
[458.49795532 434.36093140]
[464.22195435 448.22811890]
[469.37554932 462.31723022]
[473.95019531 476.60482788]
[477.93823242 491.06713867]
[481.33306885 505.68005371]
[484.12905884 520.41931152]
[486.32150269 535.26031494]
[487.90679932 550.17840576]
[488.88226318 565.14880371]
[489.24630737 580.14648438]
[488.99832153 595.14648438]
[488.13870239 610.12396240]
[486.66888428 625.05389404]
[484.59133911 639.91143799]
[481.90948486 654.67187500]
[478.62780762 669.31060791]
[474.75177002 683.80334473]
[470.28781128 698.12591553]
[465.24337769 712.25445557]
[459.62686157 726.16552734]
[453.44760132 739.83593750]
[446.71588135 753.24291992]
[439.44293213 766.36413574]
[431.64080811 779.17779541]
[423.32254028 791.66253662]
[414.50195312 803.79760742]
[405.19375610 815.56280518]
[395.41339111 826.93859863]
[385.17718506 837.90594482]
[374.50213623 848.44659424]
[363.40603638 858.54315186]
[351.90734863 868.17864990]
[340.02523804 877.33709717]
[327.77941895 886.00329590]
[315.19030762 894.16284180]
[302.27886963 901.80200195]
[289.06658936 908.90826416]
[275.57543945 915.46966553]
[261.82791138 921.47528076]
[247.84683228 926.91516113]
[233.65551758 931.78027344]
[219.27757263 936.06250000]
[204.73692322 939.75469971]
[190.05776978 942.85076904]
[175.26455688 945.34545898]
[160.38189697 947.23468018]
[145.43455505 948.51531982]
[130.44743347 949.18518066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 123]
[84 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
