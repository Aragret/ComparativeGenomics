%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[95.34021759 656.45947266]
[83.53548431 647.19042969]
[72.54776764 636.96612549]
[62.45413971 625.85827637]
[53.32540512 613.94470215]
[45.22559357 601.30902100]
[38.21152496 588.03991699]
[32.33239365 574.23040771]
[27.62944221 559.97741699]
[24.13565445 545.38085938]
[21.87554169 530.54309082]
[20.86495399 515.56829834]
[21.11098099 500.56140137]
[22.61189842 485.62777710]
[25.35717583 470.87210083]
[29.32755852 456.39788818]
[34.49519348 442.30667114]
[40.82384109 428.69732666]
[48.26910019 415.66525269]
[56.77875137 403.30191040]
[66.29310608 391.69400024]
[76.74542236 380.92294312]
[88.06238556 371.06430054]
[100.16461182 362.18719482]
[112.96721649 354.35394287]
[126.38040161 347.61947632]
[140.31007385 342.03100586]
[135.90907288 327.69116211]
[131.50807190 313.35131836]
[127.10707092 299.01147461]
[122.70607758 284.67163086]
[118.30507660 270.33178711]
[113.90407562 255.99194336]
[109.50308228 241.65208435]
[105.10208130 227.31224060]
[101.60902405 241.89985657]
[92.86173248 254.08529663]
[80.15782166 262.06091309]
[65.38182831 264.64358521]
[50.72570038 261.45019531]
[38.36357498 252.95443726]
[30.12930679 240.41661072]
[27.24439430 225.69665527]
[30.13680077 210.97816467]
[38.37745667 198.44454956]
[50.74390411 189.95507812]
[65.40165710 186.76914978]
[80.17633057 189.35934448]
[92.87618256 197.34143066]
[101.61647034 209.52958679]
[100.27823639 194.58940125]
[98.94000244 179.64921570]
[97.60176849 164.70903015]
[86.65528107 157.91168213]
[81.54626465 145.87091064]
[84.34619904 132.89514160]
[94.25191498 123.76873016]
[93.13626862 108.81027985]
[91.90929413 93.86054230]
[90.57106018 78.92035675]
[81.63342285 65.86550140]
[88.20439911 52.49869537]
[86.86615753 37.55850983]
[77.48701477 28.70444870]
[76.67996979 16.23318291]
[84.33339691 6.86559963]
[83.21775055 -8.09285355]
[82.10209656 -23.05130768]
[80.98645020 -38.00976181]
[79.87080383 -52.96821594]
[78.75515747 -67.92666626]
[62.25184250 -71.22128296]
[47.34688568 -79.00607300]
[35.23325348 -90.64944458]
[26.87811089 -105.21129608]
[22.94560623 -121.51894379]
[23.74406815 -138.26155090]
[29.20186043 -154.09550476]
[38.87372589 -167.75219727]
[51.97711563 -178.13975525]
[67.45548248 -184.43023682]
[65.67301178 -199.32395935]
[63.89054871 -214.21768188]
[62.10808182 -229.11138916]
[60.32561493 -244.00511169]
[45.31405258 -244.98876953]
[30.73889351 -248.71427917]
[17.09656715 -255.05474854]
[4.85172558 -263.79421997]
[-5.57857847 -274.63504028]
[-13.83909130 -287.20797729]
[-19.64846420 -301.08480835]
[-22.80883026 -315.79284668]
[-23.21254921 -330.83117676]
[-20.84587288 -345.68762207]
[-15.78940582 -359.85614014]
[-8.21537113 -372.85415649]
[1.61826265 -384.23898315]
[13.37656498 -393.62283325]
[26.65905380 -400.68615723]
[41.01333237 -405.18829346]
[55.95049667 -406.97595215]
[70.96179199 -405.98825073]
[85.53594971 -402.25881958]
[99.17655945 -395.91467285]
[111.41905212 -387.17187500]
[121.84642792 -376.32824707]
[130.10356140 -363.75308228]
[135.90917969 -349.87472534]
[139.06558228 -335.16583252]
[139.46525574 -320.12738037]
[137.09457397 -305.27157593]
[132.03428650 -291.10443115]
[124.45674896 -278.10845947]
[114.62004852 -266.72625732]
[102.85921478 -257.34558105]
[89.57482147 -250.28585815]
[75.21932983 -245.78758240]
[77.00180054 -230.89385986]
[78.78426361 -216.00013733]
[80.56673431 -201.10643005]
[82.34919739 -186.21270752]
[95.52746582 -184.64367676]
[108.02879333 -180.16439819]
[119.21864319 -172.99830627]
[128.52819824 -163.50532532]
[135.48321533 -152.16377258]
[139.72822571 -139.54623413]
[141.04473877 -126.29074097]
[139.36236572 -113.06840515]
[134.76269531 -100.54949951]
[127.47526550 -89.36946869]
[117.86618042 -80.09667969]
[106.41963959 -73.20351410]
[93.71360779 -69.04231262]
[94.82925415 -54.08386230]
[95.94490814 -39.12540817]
[97.06055450 -24.16695595]
[98.17620087 -9.20850277]
[99.29185486 5.74995089]
[109.93956757 19.69961548]
[101.80634308 36.22027588]
[103.14457703 51.16046143]
[111.98649597 63.14669418]
[105.51124573 77.58212280]
[106.84947968 92.52230835]
[110.64808655 99.63167572]
[108.09471893 107.69462585]
[109.21037292 122.65308380]
[122.67264557 133.82386780]
[123.86715698 150.93783569]
[112.54195404 163.37080383]
[113.88018799 178.31098938]
[115.21842194 193.25117493]
[116.55665588 208.19134521]
[119.44193268 222.91123962]
[123.84292603 237.25109863]
[128.24392700 251.59094238]
[132.64492798 265.93078613]
[137.04592896 280.27062988]
[141.44691467 294.61047363]
[145.84791565 308.95031738]
[150.24891663 323.29016113]
[154.64991760 337.63003540]
[169.31634521 334.44213867]
[184.19807434 332.49270630]
[199.19075012 331.79541016]
[214.18919373 332.35510254]
[229.08821106 334.16787720]
[243.78326416 337.22103882]
[258.17129517 341.49313354]
[272.15139771 346.95422363]
[285.62548828 353.56600952]
[298.49905396 361.28207397]
[310.68179321 370.04830933]
[322.08828735 379.80325317]
[332.63845825 390.47845459]
[342.25836182 401.99905396]
[350.88052368 414.28421021]
[358.44439697 427.24780273]
[364.89700317 440.79882812]
[370.19305420 454.84228516]
[374.29537964 469.27963257]
[377.17520142 484.00964355]
[378.81237793 498.92895508]
[379.19534302 513.93298340]
[378.32147217 528.91638184]
[376.19689941 543.77410889]
[372.83648682 558.40197754]
[368.26382446 572.69732666]
[362.51095581 586.55993652]
[355.61828613 599.89251709]
[347.63415527 612.60156250]
[338.61453247 624.59796143]
[328.62271118 635.79748535]
[317.72879028 646.12164307]
[306.00912476 655.49804688]
[293.54598999 663.86083984]
[280.42675781 671.15142822]
[266.74349976 677.31866455]
[252.59214783 682.31927490]
[238.07199097 686.11816406]
[223.28486633 688.68865967]
[208.33451843 690.01287842]
[193.32579041 690.08135986]
[178.36396790 688.89367676]
[163.55400085 686.45825195]
[148.99978638 682.79199219]
[134.80337524 677.92077637]
[121.06439209 671.87872314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[50 155]
[51 154]
[52 153]
[53 152]
[57 149]
[58 148]
[59 146]
[60 145]
[62 143]
[63 142]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
