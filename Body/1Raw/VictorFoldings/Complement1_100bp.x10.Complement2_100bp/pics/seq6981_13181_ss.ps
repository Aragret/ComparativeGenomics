%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[72.86717987 827.64892578]
[58.26616287 824.17376709]
[44.00715256 819.48901367]
[30.19016266 813.62744141]
[16.91211510 806.63031006]
[4.26614809 798.54663086]
[-7.65903664 789.43310547]
[-18.77979088 779.35363770]
[-29.01810646 768.37896729]
[-38.30217361 756.58605957]
[-46.56686401 744.05761719]
[-53.75421143 730.88159180]
[-59.81379700 717.15032959]
[-64.70311737 702.96014404]
[-68.38787842 688.41058350]
[-70.84223175 673.60375977]
[-72.04895782 658.64343262]
[-71.99960327 643.63464355]
[-70.69450378 628.68261719]
[-68.14282227 613.89221191]
[-64.36244965 599.36724854]
[-59.37990952 585.20953369]
[-53.23014450 571.51843262]
[-45.95629501 558.38989258]
[-37.60938263 545.91607666]
[-28.24795723 534.18450928]
[-17.93768311 523.27740479]
[-6.75087738 513.27130127]
[5.23398829 504.23641968]
[17.93284798 496.23605347]
[31.25662804 489.32641602]
[45.11186981 483.55587769]
[59.40138245 478.96499634]
[74.02494049 475.58593750]
[88.87996674 473.44238281]
[87.98715210 458.46899414]
[87.09433746 443.49557495]
[86.20152283 428.52218628]
[85.30870056 413.54876709]
[83.74818420 398.63015747]
[81.52306366 383.79611206]
[79.29795074 368.96206665]
[73.89066315 382.95355225]
[63.84823990 394.09579468]
[50.49192429 400.92288208]
[35.57897568 402.53652954]
[21.07144547 398.72451782]
[8.87804985 389.98831177]
[0.60303944 377.47735596]
[-2.66486597 362.83764648]
[-0.49571684 347.99533081]
[6.82509756 334.90313721]
[18.33439827 325.28356934]
[32.51794052 320.40225220]
[47.50963211 320.90142822]
[61.33705902 326.71539307]
[72.18099213 337.07922363]
[78.61532593 350.63171387]
[79.73097229 335.67324829]
[80.84662628 320.71478271]
[81.96227264 305.75634766]
[83.07791901 290.79788208]
[67.88983154 284.86999512]
[55.25925446 274.53100586]
[46.42740250 260.78204346]
[42.26676559 244.96011353]
[43.19493484 228.60794067]
[49.13272858 213.32369995]
[59.51079559 200.60469055]
[73.32418823 191.70075989]
[89.22966003 187.49143982]
[89.89944458 172.50640869]
[90.56923676 157.52136230]
[81.65461731 142.40525818]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[78.71099091 79.03409576]
[70.84100342 64.59945679]
[71.32156372 48.25975418]
[79.92687225 34.47191238]
[94.22786713 26.94901466]
[94.45119476 11.95067787]
[94.67452240 -3.04765987]
[87.14353943 -16.96150017]
[95.06947327 -29.57216454]
[87.53849792 -43.48600388]
[95.46443176 -56.09666824]
[95.68775940 -71.09500885]
[88.15677643 -85.00884247]
[96.08271027 -97.61950684]
[96.30603790 -112.61784363]
[87.89891815 -122.39962006]
[88.39369965 -134.88717651]
[96.98014832 -143.40769958]
[97.42675781 -158.40104675]
[97.87335968 -173.39440918]
[83.78067780 -178.97760010]
[72.44950867 -189.04638672]
[65.24815369 -202.38490295]
[63.04620743 -217.38247681]
[66.10956573 -232.22807312]
[74.06832123 -245.12901306]
[85.96140289 -254.52743530]
[100.35266876 -259.28845215]
[115.50430298 -258.83712769]
[129.58668518 -253.22796631]
[140.89927673 -243.13832092]
[148.07603455 -229.78654480]
[150.25033569 -214.78494263]
[147.15962219 -199.94500732]
[139.17710876 -187.05876160]
[127.26673126 -177.68228149]
[112.86671448 -172.94779968]
[112.42010498 -157.95445251]
[111.97350311 -142.96110535]
[121.11218262 -127.97939301]
[111.30437469 -112.39451599]
[111.08104706 -97.39617920]
[118.62799835 -84.55512238]
[110.68609619 -70.87168121]
[110.46276855 -55.87334061]
[118.00971985 -43.03228378]
[110.06781006 -29.34883690]
[117.61476135 -16.50777817]
[109.67285919 -2.82433224]
[109.44953156 12.17400551]
[109.22620392 27.17234230]
[121.38683319 33.38813400]
[129.72299194 44.28938293]
[132.56256104 57.78330612]
[129.29560852 71.24826813]
[120.50428009 82.04311371]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[114.94728088 137.32060242]
[114.26663208 149.79940796]
[105.55427551 158.19114685]
[104.88448334 173.17619324]
[104.21469879 188.16122437]
[117.27050781 192.51910400]
[128.73988342 200.10510254]
[137.84251404 210.39517212]
[143.96115112 222.68156433]
[146.68345642 236.12152100]
[145.82986450 249.79502869]
[141.46528625 262.76785278]
[133.89434814 274.15539551]
[123.64006805 283.18289185]
[111.40771484 289.23828125]
[98.03637695 291.91354370]
[96.92072296 306.87197876]
[95.80507660 321.83044434]
[94.68943024 336.78890991]
[93.57377625 351.74734497]
[94.13198853 366.73696899]
[96.35710907 381.57101440]
[98.58222198 396.40505981]
[108.34582520 385.01766968]
[123.29062653 383.73205566]
[134.85557556 393.28463745]
[136.41574097 408.20327759]
[127.07739258 419.94189453]
[112.18994904 421.77609253]
[100.28211212 412.65594482]
[101.17492676 427.62936401]
[102.06774139 442.60275269]
[102.96055603 457.57617188]
[103.85337067 472.54959106]
[118.85786438 472.91268921]
[133.77934265 474.53009033]
[148.51315308 477.39041138]
[162.95593262 481.47360229]
[177.00639343 486.75103760]
[190.56596375 493.18566895]
[203.53953552 500.73239136]
[215.83612061 509.33822632]
[227.36943054 518.94287109]
[238.05860901 529.47888184]
[247.82865906 540.87243652]
[256.61105347 553.04357910]
[264.34414673 565.90692139]
[270.97378540 579.37225342]
[276.45336914 593.34509277]
[280.74453735 607.72741699]
[283.81716919 622.41845703]
[285.64968872 637.31506348]
[286.22924805 652.31274414]
[285.55178833 667.30633545]
[283.62207031 682.19061279]
[280.45364380 696.86126709]
[276.06869507 711.21533203]
[270.49798584 725.15209961]
[263.78063965 738.57385254]
[255.96371460 751.38641357]
[247.10206604 763.49993896]
[237.25785828 774.82946777]
[226.50013733 785.29553223]
[214.90437317 794.82470703]
[202.55187988 803.35009766]
[189.52932739 810.81195068]
[175.92803955 817.15795898]
[161.84344482 822.34356689]
[147.37431335 826.33239746]
[132.62214661 829.09649658]
[117.69042206 830.61645508]
[102.68388367 830.88159180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[40 161]
[41 160]
[42 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[71 143]
[72 142]
[73 141]
[75 138]
[76 137]
[78 135]
[83 129]
[84 128]
[85 127]
[87 125]
[89 123]
[90 122]
[92 120]
[93 119]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
