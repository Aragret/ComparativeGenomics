%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[110.08534241 651.30023193]
[96.18202209 645.65881348]
[82.63024139 639.21850586]
[69.47586060 632.00115967]
[56.76339340 624.03112793]
[44.53584671 615.33544922]
[32.83459854 605.94348145]
[21.69924355 595.88708496]
[11.16745853 585.20019531]
[1.27488101 573.91900635]
[-7.94501638 562.08172607]
[-16.46103668 549.72833252]
[-24.24436188 536.90069580]
[-31.26865768 523.64221191]
[-37.51015472 509.99777222]
[-42.94773483 496.01345825]
[-47.56299591 481.73663330]
[-51.34032822 467.21563721]
[-54.26694107 452.49954224]
[-56.33293915 437.63818359]
[-57.53133011 422.68185425]
[-57.85805511 407.68115234]
[-57.31201172 392.68682861]
[-55.89504623 377.74960327]
[-53.61195755 362.92007446]
[-50.47046280 348.24835205]
[-46.48120117 333.78411865]
[-41.65766525 319.57632446]
[-36.01617813 305.67303467]
[-29.57582664 292.12127686]
[-22.35840607 278.96691895]
[-14.38833714 266.25448608]
[-5.69258738 254.02697754]
[3.69941854 242.32577515]
[13.75590134 231.19046021]
[24.44283295 220.65872192]
[35.72404861 210.76618958]
[47.56138229 201.54634094]
[59.91477966 193.03036499]
[72.74243164 185.24710083]
[86.00094604 178.22285461]
[99.64544678 171.98141479]
[113.62977600 166.54389954]
[109.01576233 152.27116394]
[104.40175629 137.99842834]
[99.78775024 123.72569275]
[95.17373657 109.45295715]
[89.71838379 95.48016357]
[83.44101715 81.85684204]
[77.16365814 68.23352814]
[70.88629913 54.61021423]
[64.60894012 40.98689651]
[58.33157730 27.36358070]
[52.05421448 13.74026489]
[45.77685547 0.11694861]
[31.65564728 5.20349360]
[17.14944839 9.05727196]
[2.36565638 11.64974976]
[-12.58627129 12.96173477]
[-27.59563446 12.98351288]
[-42.55130386 11.71492195]
[-57.34255981 9.16535473]
[-71.85987854 5.35368872]
[-85.99578857 0.30814293]
[-99.64562225 -5.93392563]
[-112.70832825 -13.32630157]
[-125.08718109 -21.81425476]
[-136.69055176 -31.33494186]
[-147.43249512 -41.81787109]
[-157.23352051 -53.18543625]
[-166.02104187 -65.35346222]
[-173.72999573 -78.23187256]
[-180.30331421 -91.72531128]
[-185.69232178 -105.73387909]
[-189.85713196 -120.15386200]
[-192.76690674 -134.87849426]
[-194.40010071 -149.79875183]
[-194.74461365 -164.80416870]
[-193.79791260 -179.78366089]
[-191.56698608 -194.62631226]
[-188.06835938 -209.22224426]
[-183.32794189 -223.46337891]
[-177.38082886 -237.24427795]
[-170.27105713 -250.46292114]
[-162.05123901 -263.02142334]
[-152.78225708 -274.82684326]
[-142.53273010 -285.79171753]
[-131.37855530 -295.83489990]
[-119.40229034 -304.88204956]
[-106.69261932 -312.86611938]
[-93.34365082 -319.72808838]
[-79.45420074 -325.41708374]
[-65.12710571 -329.89099121]
[-50.46845245 -333.11669922]
[-35.58676147 -335.07034302]
[-20.59221649 -335.73745728]
[-5.59583092 -335.11306763]
[9.29136372 -333.20181274]
[23.95914650 -330.01785278]
[38.29891968 -325.58474731]
[52.20451736 -319.93533325]
[65.57298279 -313.11145020]
[78.30533600 -305.16357422]
[90.30731201 -296.15060425]
[101.49005890 -286.13922119]
[111.77076721 -275.20355225]
[121.07333374 -263.42462158]
[129.32887268 -250.88955688]
[136.47627258 -237.69122314]
[142.46261597 -223.92732239]
[147.24357605 -209.69973755]
[150.78375244 -195.11384583]
[153.05694580 -180.27760315]
[154.04631042 -165.30085754]
[153.74452209 -150.29450989]
[152.15383911 -135.36967468]
[149.28601074 -120.63681030]
[145.16229248 -106.20503235]
[139.81318665 -92.18116760]
[133.27833557 -78.66906738]
[125.60608673 -65.76875305]
[116.85325623 -53.57574463]
[107.08465576 -42.18031311]
[96.37259674 -31.66683197]
[84.79640198 -22.11313629]
[72.44176483 -13.58996201]
[59.40017319 -6.16041231]
[65.67753601 7.46290398]
[71.95489502 21.08621979]
[78.23225403 34.70953751]
[84.50961304 48.33285141]
[90.78697205 61.95616913]
[97.06433868 75.57948303]
[103.34169769 89.20280457]
[107.58529663 74.81558990]
[119.40436554 65.57926941]
[134.39068604 64.93875885]
[146.95472717 73.13294983]
[152.41041565 87.10562134]
[148.72291565 101.64530182]
[137.26756287 111.32905579]
[122.31694031 112.54508209]
[109.44647217 104.83895111]
[114.06047821 119.11168671]
[118.67449188 133.38441467]
[123.28849792 147.65715027]
[127.90251160 161.92988586]
[142.42347717 158.15237427]
[157.13951111 155.22557068]
[172.00083923 153.15939331]
[186.95716858 151.96081543]
[201.95787048 151.63391113]
[216.95220947 152.17976379]
[231.88943481 153.59654236]
[246.71900940 155.87945557]
[261.39074707 159.02075195]
[275.85504150 163.00984192]
[290.06289673 167.83320618]
[303.96624756 173.47451782]
[317.51809692 179.91470337]
[330.67254639 187.13195801]
[343.38507080 195.10186768]
[355.61270142 203.79747009]
[367.31402588 213.18933105]
[378.44946289 223.24566650]
[388.98132324 233.93246460]
[398.87399292 245.21356201]
[408.09399414 257.05078125]
[416.61010742 269.40408325]
[424.39355469 282.23162842]
[431.41793823 295.49005127]
[437.65954590 309.13449097]
[443.09725952 323.11874390]
[447.71264648 337.39550781]
[451.49008179 351.91650391]
[454.41680908 366.63256836]
[456.48294067 381.49389648]
[457.68145752 396.45022583]
[458.00830078 411.45092773]
[457.46240234 426.44525146]
[456.04556274 441.38247681]
[453.76257324 456.21203613]
[450.62121582 470.88378906]
[446.63208008 485.34805298]
[441.80865479 499.55587769]
[436.16726685 513.45922852]
[429.72705078 527.01104736]
[422.50973511 540.16546631]
[414.53976440 552.87792969]
[405.84411621 565.10552979]
[396.45220947 576.80682373]
[386.39581299 587.94219971]
[375.70895386 598.47406006]
[364.42782593 608.36663818]
[352.59057617 617.58660889]
[340.23724365 626.10266113]
[327.40966797 633.88604736]
[314.15121460 640.91040039]
[300.50674438 647.15197754]
[286.52246094 652.58959961]
[272.24566650 657.20489502]
[257.72467041 660.98229980]
[243.00862122 663.90899658]
[228.14727783 665.97503662]
[213.19094849 667.17352295]
[198.19023132 667.50030518]
[183.19590759 666.95428467]
[168.25868225 665.53741455]
[153.42912292 663.25439453]
[138.75740051 660.11291504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
