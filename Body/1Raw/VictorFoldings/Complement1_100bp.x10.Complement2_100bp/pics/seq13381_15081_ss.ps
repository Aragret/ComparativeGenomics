%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[-25.48900032 518.41412354]
[-30.02559662 532.72369385]
[-35.90187836 546.53723145]
[-43.06462860 559.72967529]
[-51.44897461 572.18145752]
[-60.97899246 583.77990723]
[-71.56836700 594.41992188]
[-83.12120056 604.00512695]
[-95.53286743 612.44879150]
[-108.69095612 619.67437744]
[-122.47631836 625.61651611]
[-136.76408386 630.22131348]
[-151.42488098 633.44714355]
[-166.32592773 635.26470947]
[-181.33227539 635.65759277]
[-196.30801392 634.62225342]
[-211.11752319 632.16809082]
[-225.62669373 628.31726074]
[-239.70410156 623.10461426]
[-253.22227478 616.57751465]
[-266.05877686 608.79486084]
[-278.09738159 599.82733154]
[-289.22903442 589.75604248]
[-299.35290527 578.67218018]
[-308.37734985 566.67620850]
[-316.22064209 553.87664795]
[-322.81170654 540.38952637]
[-328.09091187 526.33697510]
[-332.01037598 511.84619141]
[-334.53466797 497.04846191]
[-335.64089966 482.07778931]
[-335.31903076 467.06976318]
[-333.57202148 452.16027832]
[-330.41564941 437.48437500]
[-325.87854004 423.17495728]
[-320.00173950 409.36163330]
[-312.83853149 396.16946411]
[-304.45373535 383.71795654]
[-294.92327881 372.11987305]
[-284.33352661 361.48025513]
[-272.78033447 351.89544678]
[-260.36837769 343.45223999]
[-247.21000671 336.22711182]
[-233.42443848 330.28552246]
[-219.13648987 325.68121338]
[-204.47558594 322.45596313]
[-189.57446289 320.63891602]
[-174.56811523 320.24655151]
[-159.59240723 321.28244019]
[-144.78297424 323.73718262]
[-130.27395630 327.58853149]
[-116.19673920 332.80166626]
[-102.67880249 339.32931519]
[-89.84257507 347.11236572]
[-80.88188171 335.08300781]
[-71.92118835 323.05361938]
[-62.96048737 311.02423096]
[-73.20031738 299.49615479]
[-80.83011627 286.09051514]
[-85.51624298 271.38882446]
[-87.05278015 256.02938843]
[-85.37061310 240.67950439]
[-80.54052734 226.00663757]
[-72.77023315 212.64926147]
[-62.39542770 201.18908691]
[-49.86531448 192.12582397]
[-35.72312164 185.85528564]
[-20.58257866 182.65214539]
[-5.10126638 182.65792847]
[10.04793262 185.87472534]
[24.20608902 192.16500854]
[32.98669052 180.00354004]
[41.76729584 167.84208679]
[50.54789734 155.68063354]
[59.32850266 143.51918030]
[68.10910797 131.35772705]
[69.28619385 116.50970459]
[83.63756561 109.85023499]
[81.43197632 95.52956390]
[89.91375732 83.78198242]
[104.20097351 81.36916351]
[112.98158264 69.20771027]
[121.48840332 56.85319901]
[129.71720886 44.31179810]
[137.94601440 31.77039909]
[146.17483521 19.22899818]
[154.40364075 6.68759775]
[162.63244629 -5.85380268]
[170.86125183 -18.39520264]
[177.13861084 -32.01852036]
[181.32562256 -46.42230225]
[185.51263428 -60.82608414]
[184.30996704 -67.32724762]
[186.27592468 -72.65941620]
[190.04467773 -75.59292603]
[194.65869141 -89.86566162]
[199.27270508 -104.13839722]
[203.88670349 -118.41112518]
[208.50071716 -132.68386841]
[213.11473083 -146.95658875]
[199.93040466 -154.20710754]
[188.35667419 -163.82196045]
[178.81192017 -175.45356750]
[171.64118958 -188.68145752]
[167.10369873 -203.02745056]
[165.36346436 -217.97296143]
[166.48341370 -232.97770691]
[170.42303467 -247.49926758]
[177.03994751 -261.01269531]
[186.09490967 -273.02951050]
[197.26063538 -283.11532593]
[210.13346863 -290.90548706]
[224.24804688 -296.11843872]
[239.09417725 -298.56570435]
[254.13514709 -298.15884399]
[268.82727051 -294.91253662]
[282.63937378 -288.94415283]
[295.07223511 -280.46942139]
[305.67636108 -269.79473877]
[314.06845093 -257.30596924]
[319.94509888 -243.45457458]
[323.09390259 -228.74125671]
[323.40103149 -213.69792175]
[320.85534668 -198.86834717]
[315.54891968 -184.78863525]
[307.67355347 -171.96775818]
[297.51394653 -160.86917114]
[285.43731689 -151.89407349]
[271.88031006 -145.36694336]
[257.33294678 -141.52369690]
[242.32109070 -140.50328064]
[227.38746643 -142.34259033]
[222.77345276 -128.06985474]
[218.15943909 -113.79711914]
[213.54544067 -99.52438354]
[208.93142700 -85.25165558]
[204.31741333 -70.97891998]
[199.91641235 -56.63907242]
[195.72940063 -42.23529053]
[191.54238892 -27.83150864]
[201.82997131 -38.74781036]
[214.74713135 -46.37324524]
[229.27514648 -50.10643768]
[244.26829529 -49.65297318]
[258.54412842 -45.04861450]
[270.97683716 -36.65648270]
[280.58590698 -25.13840866]
[286.61349487 -11.40276432]
[288.58428955 3.46720505]
[286.34283447 18.29878998]
[280.06591797 31.92230988]
[270.24856567 43.26335907]
[257.66500854 51.42753220]
[243.30760193 55.77096939]
[228.30868530 55.95112610]
[213.85112000 51.95380402]
[201.07507324 44.09423828]
[190.98814392 32.99227142]
[184.38580322 19.52345085]
[181.78874207 4.74998474]
[183.40264893 -10.16639519]
[175.17384338 2.37500525]
[166.94503784 14.91640568]
[158.71623230 27.45780563]
[150.48742676 39.99920654]
[142.25862122 52.54060745]
[134.02980042 65.08200836]
[134.38479614 68.59004211]
[133.05827332 72.44431305]
[129.90600586 75.85261536]
[125.14303589 77.98831177]
[116.36243439 90.14976501]
[118.56802368 104.47043610]
[110.08624268 116.21801758]
[95.79902649 118.63083649]
[93.99388885 134.34872437]
[80.27056122 140.13832092]
[71.48995972 152.29977417]
[62.70935440 164.46124268]
[53.92874908 176.62269592]
[45.14814758 188.78414917]
[36.36754227 200.94560242]
[46.26415634 211.69332886]
[53.86411285 224.16539001]
[58.87532425 237.87866211]
[61.10591507 252.30244446]
[60.47159195 266.87890625]
[56.99881744 281.04473877]
[50.82371140 294.25283813]
[42.18672180 305.99349976]
[31.42325974 315.81408691]
[18.95067215 323.33642578]
[5.25206137 328.27142334]
[-9.14242458 330.43017578]
[-23.67611122 329.73117065]
[-37.78733063 326.20333862]
[-50.93111038 319.98492432]
[-59.89180756 332.01431274]
[-68.85250092 344.04370117]
[-77.81320190 356.07305908]
[-66.68118286 366.14398193]
[-56.55689240 377.22744751]
[-47.53200531 389.22311401]
[-39.68825531 402.02233887]
[-33.09668732 415.50921631]
[-27.81698990 429.56161499]
[-23.89698029 444.05224609]
[-21.37215805 458.84988403]
[-20.26538849 473.82052612]
[-20.58669662 488.82855225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 200]
[55 199]
[56 198]
[57 197]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[76 177]
[78 175]
[81 172]
[82 171]
[83 167]
[84 166]
[85 165]
[86 164]
[87 163]
[88 162]
[89 161]
[90 140]
[91 139]
[92 138]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
