%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[135.73811340 402.21383667]
[138.14596558 387.38076782]
[142.68795776 373.05636597]
[149.26727295 359.54598999]
[157.74368286 347.13760376]
[167.93650818 336.09567261]
[179.62849426 326.65557861]
[192.57041931 319.01852417]
[186.90762329 305.12847900]
[181.24484253 291.23846436]
[175.58206177 277.34844971]
[161.79643250 271.82647705]
[155.85568237 257.82067871]
[161.74108887 243.39848328]
[156.07830811 229.50845337]
[144.10876465 220.64396667]
[146.06369019 204.94400024]
[140.40090942 191.05397034]
[128.43136597 182.18946838]
[130.38629150 166.48951721]
[124.72350311 152.59948730]
[119.06071472 138.70945740]
[111.40011597 125.81313324]
[101.91121674 114.19586945]
[88.90633392 109.06123352]
[86.47151947 95.29302979]
[76.98262024 83.67576599]
[67.49372101 72.05850220]
[58.00482178 60.44124222]
[61.37872696 75.05687714]
[61.68314362 90.05378723]
[58.90513229 104.79429626]
[53.16281128 118.65163422]
[44.70035172 131.03657532]
[33.87757874 141.42250061]
[21.15468407 149.36781311]
[7.07264900 154.53466797]
[-7.76974964 156.70335388]
[-22.74140549 155.78166199]
[-37.20571899 151.80879211]
[-50.54765320 144.95365906]
[-62.19990921 135.50776672]
[-71.66702271 123.87274933]
[-78.54645538 110.54332733]
[-82.54567719 96.08628082]
[-83.49465179 81.11633301]
[-81.35301971 66.27000427]
[-76.21184540 52.17857361]
[-68.28974152 39.44121933]
[-57.92354965 28.59953690]
[-45.55405045 20.11451912]
[-31.70720291 14.34695339]
[-16.97178078 11.54208183]
[-1.97433972 11.81916714]
[12.64741993 15.16642761]
[26.27177238 21.44153786]
[38.31940460 30.37767410]
[48.27814865 41.59500885]
[44.30605316 27.13048553]
[40.33395767 12.66596222]
[36.36186218 -1.79856169]
[32.38976288 -16.26308632]
[24.04852104 -3.79618335]
[9.36237907 -0.74376476]
[-3.25577044 -8.85439396]
[-6.57767963 -23.48193359]
[1.29959249 -36.24706650]
[15.86358643 -39.83734131]
[28.77081108 -32.19684601]
[18.70411682 -44.40226364]
[24.05636215 -58.30200577]
[21.39056587 -73.06322479]
[18.72477150 -87.82444000]
[16.05897522 -102.58565521]
[11.39886761 -88.32790375]
[2.41442752 -76.31625366]
[-9.94619465 -67.81831360]
[-24.37855339 -63.73089218]
[-39.35956955 -64.48534393]
[-53.30825806 -70.00205994]
[-64.75257874 -79.69883728]
[-72.48478699 -92.55235291]
[-75.68888855 -107.20614624]
[-74.02674103 -122.11376953]
[-67.67375946 -135.70199585]
[-57.30038834 -146.53680420]
[-44.00135040 -153.47477722]
[-29.18012619 -155.78375244]
[-14.40083790 -153.22004700]
[-1.22317600 -146.05419922]
[8.96218777 -135.04246521]
[15.08041668 -121.34674072]
[16.19606590 -136.30519104]
[17.31171417 -151.26364136]
[18.42736244 -166.22209167]
[19.54301262 -181.18055725]
[20.65866089 -196.13900757]
[21.77430916 -211.09745789]
[15.08484936 -225.43487549]
[23.74732971 -237.55142212]
[10.02890778 -244.04521179]
[-0.41447467 -255.05885315]
[-6.17043495 -269.10284424]
[-6.46052647 -284.27783203]
[-1.24551749 -298.53152466]
[8.76930523 -309.93624878]
[22.22951889 -316.94961548]
[37.31473923 -318.62307739]
[51.98481750 -314.73034668]
[64.25574493 -305.79791260]
[72.46797180 -293.03375244]
[75.51087189 -278.16412354]
[72.97291565 -263.20007324]
[65.19734192 -250.16531372]
[53.23572540 -240.82272339]
[38.70578384 -236.43577576]
[45.47504044 -223.16828918]
[36.73276138 -209.98181152]
[35.61711502 -195.02336121]
[34.50146484 -180.06489563]
[33.38581848 -165.10644531]
[32.27016830 -150.14799500]
[31.15452003 -135.18954468]
[30.03886986 -120.23108673]
[30.82019234 -105.25144958]
[33.48598862 -90.49023438]
[36.15178299 -75.72901917]
[38.81757736 -60.96780014]
[48.69359589 -49.81820297]
[43.53202820 -34.86264038]
[46.85429001 -20.23518181]
[50.82638550 -5.77065802]
[54.79848099 8.69386578]
[58.77057648 23.15839005]
[62.74267197 37.62291336]
[69.62208557 50.95234299]
[79.11098480 62.56960678]
[88.59988403 74.18686676]
[98.08878326 85.80413055]
[111.09366608 90.93876648]
[113.52848053 104.70697021]
[123.01737976 116.32423401]
[119.86065674 101.66015625]
[120.90568542 86.69660187]
[126.07005310 72.61366272]
[134.94648743 60.52196884]
[146.83493042 51.37512589]
[160.79783630 45.89449310]
[175.73402405 44.51229477]
[190.46554565 47.33753967]
[203.83064270 54.14741135]
[214.77526855 64.40486145]
[222.43627930 77.30093384]
[226.20950317 91.81860352]
[225.79737854 106.81294250]
[221.23239136 121.10143280]
[212.87457275 133.55722046]
[201.38302612 143.19799805]
[187.66406250 149.26345825]
[172.79957581 151.27522278]
[157.96186829 149.07467651]
[144.32109070 142.83534241]
[132.95074463 133.04667664]
[138.61352539 146.93669128]
[144.27632141 160.82672119]
[156.65089417 170.68472290]
[154.29093933 185.39118958]
[159.95372009 199.28121948]
[172.32830811 209.13922119]
[169.96833801 223.84567261]
[175.63111877 237.73570251]
[189.92247009 243.93209839]
[195.46746826 258.09921265]
[189.47207642 271.68563843]
[195.13487244 285.57568359]
[200.79765320 299.46569824]
[206.46044922 313.35574341]
[221.05294800 309.76733398]
[236.01243591 308.34197998]
[251.02003479 309.11001587]
[265.75585938 312.05508423]
[279.90582275 317.11441040]
[293.16827393 324.18014526]
[305.26058960 333.10168457]
[315.92498779 343.68887329]
[324.93414307 355.71606445]
[332.09603882 368.92684937]
[337.25802612 383.03967285]
[340.31005859 397.75372314]
[341.18710327 412.75534058]
[339.87045288 427.72479248]
[336.38818359 442.34298706]
[330.81451416 456.29833984]
[323.26821899 469.29339600]
[313.91018677 481.05114746]
[302.93988037 491.32101440]
[290.59112549 499.88406372]
[277.12713623 506.55780029]
[262.83486938 511.19995117]
[248.01901245 513.71154785]
[232.99534607 514.03912354]
[218.08410645 512.17559814]
[203.60311890 508.16079712]
[189.86103821 502.08023071]
[177.15080261 494.06350708]
[165.74331665 484.28152466]
[155.88172913 472.94277954]
[147.77624512 460.28897095]
[141.59963989 446.58981323]
[137.48355103 432.13726807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 177]
[9 176]
[10 175]
[11 174]
[14 171]
[15 170]
[17 168]
[18 167]
[20 165]
[21 164]
[22 163]
[23 142]
[24 141]
[26 139]
[27 138]
[28 137]
[29 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[69 130]
[71 128]
[72 127]
[73 126]
[74 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
