%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[125.23501587 618.61608887]
[112.20281982 611.18096924]
[99.60802460 603.02679443]
[87.49024963 594.17932129]
[75.88762665 584.66625977]
[64.83666229 574.51757812]
[54.37211609 563.76525879]
[44.52692413 552.44311523]
[35.33206177 540.58673096]
[26.81645584 528.23345947]
[19.00690269 515.42211914]
[11.92797470 502.19308472]
[5.60194397 488.58795166]
[0.04871393 474.64947510]
[-4.71424198 460.42156982]
[-8.67193794 445.94897461]
[-11.81192207 431.27725220]
[-14.12431335 416.45254517]
[-15.60183811 401.52151489]
[-16.23984528 386.53112793]
[-16.03632927 371.52853394]
[-14.99192905 356.56094360]
[-13.10993195 341.67547607]
[-10.39625835 326.91897583]
[-6.85944700 312.33779907]
[-2.51062608 297.97790527]
[2.63652134 283.88442993]
[8.56580067 270.10174561]
[15.25855541 256.67318726]
[22.69372749 243.64102173]
[30.84792519 231.04626465]
[39.69548798 218.92852783]
[49.20858383 207.32592773]
[59.35727310 196.27499390]
[70.10963440 185.81050110]
[81.43182373 175.96534729]
[93.28823090 166.77052307]
[105.64154053 158.25497437]
[118.45289612 150.44546509]
[111.37578583 137.21994019]
[104.29868317 123.99440765]
[97.22157288 110.76888275]
[91.84871674 124.77360535]
[78.20337677 131.00296021]
[64.10224152 125.88848877]
[57.62306976 112.35998535]
[62.47742844 98.16719818]
[75.88452148 91.44039917]
[90.16342926 96.03239441]
[84.29447174 82.22821808]
[78.42550659 68.42403412]
[72.55654907 54.61986160]
[66.68759155 40.81568527]
[62.51593399 37.67810822]
[60.19684601 33.65627670]
[59.75692368 29.60392952]
[60.88006592 26.26164246]
[55.63335037 12.20917225]
[50.38663101 -1.84329951]
[45.13991165 -15.89577103]
[30.65296745 -11.96473122]
[15.86510849 -9.38716221]
[0.90250260 -8.18505573]
[-14.10719204 -8.36866570]
[-29.03591537 -9.93642712]
[-43.75629807 -12.87496471]
[-58.14274597 -17.15920639]
[-72.07251740 -22.75259972]
[-85.42677307 -29.60742378]
[-98.09156799 -37.66519165]
[-109.95884705 -46.85715866]
[-120.92736816 -57.10490036]
[-130.90354919 -68.32098389]
[-139.80226135 -80.40971375]
[-147.54760742 -93.26795959]
[-154.07347107 -106.78600311]
[-159.32421875 -120.84852600]
[-163.25500488 -135.33554077]
[-165.83233643 -150.12344360]
[-167.03419495 -165.08605957]
[-166.85032654 -180.09574890]
[-165.28231812 -195.02444458]
[-162.34353638 -209.74478149]
[-158.05905151 -224.13116455]
[-152.46543884 -238.06083679]
[-145.61038208 -251.41497803]
[-137.55241394 -264.07965088]
[-128.36024475 -275.94677734]
[-118.11231995 -286.91513062]
[-106.89606476 -296.89111328]
[-94.80718994 -305.78961182]
[-81.94881439 -313.53475952]
[-68.43066406 -320.06039429]
[-54.36805344 -325.31091309]
[-39.88097763 -329.24145508]
[-25.09303474 -331.81854248]
[-10.13038826 -333.02014160]
[4.87930059 -332.83602905]
[19.80797195 -331.26776123]
[34.52825546 -328.32873535]
[48.91456223 -324.04403687]
[62.84415054 -318.45016479]
[76.19817352 -311.59490967]
[88.86269379 -303.53671265]
[100.72967529 -294.34436035]
[111.69785309 -284.09625244]
[121.67365265 -272.87982178]
[130.57197571 -260.79080200]
[138.31687927 -247.93229675]
[144.84230042 -234.41403198]
[150.09257507 -220.35133362]
[154.02288818 -205.86419678]
[156.59971619 -191.07620239]
[157.80108643 -176.11354065]
[157.61671448 -161.10385132]
[156.04821777 -146.17521667]
[153.10893250 -131.45497131]
[148.82397461 -117.06874084]
[143.22988892 -103.13924408]
[136.37440491 -89.78533936]
[128.31599426 -77.12094879]
[119.12343597 -65.25412750]
[108.87514496 -54.28611755]
[97.65856171 -44.31050110]
[85.56938934 -35.41238403]
[72.71075439 -27.66769028]
[59.19238281 -21.14248848]
[64.43910217 -7.09001780]
[69.68582153 6.96245384]
[74.93254089 21.01492500]
[80.49176788 34.94672394]
[86.36072540 48.75090027]
[92.22968292 62.55507660]
[98.09864807 76.35925293]
[103.96760559 90.16342926]
[110.44710541 103.69178009]
[117.52420807 116.91730499]
[124.60131836 130.14283752]
[131.67842102 143.36836243]
[145.28350830 137.04217529]
[159.22190857 131.48878479]
[173.44976807 126.72567749]
[187.92230225 122.76782227]
[202.59399414 119.62767029]
[217.41867065 117.31511688]
[232.34970093 115.83742523]
[247.34008789 115.19924927]
[262.34268188 115.40260315]
[277.31027222 116.44683075]
[292.19573975 118.32866669]
[306.95230103 121.04217529]
[321.53350830 124.57882690]
[335.89343262 128.92749023]
[349.98696899 134.07447815]
[363.76974487 140.00360107]
[377.19836426 146.69621277]
[390.23062134 154.13124084]
[402.82546997 162.28529358]
[414.94329834 171.13272095]
[426.54598999 180.64569092]
[437.59704590 190.79425049]
[448.06167603 201.54649353]
[457.90695190 212.86857605]
[467.10189819 224.72488403]
[475.61758423 237.07809448]
[483.42724609 249.88935852]
[490.50625610 263.11834717]
[496.83239746 276.72348022]
[502.38574219 290.66189575]
[507.14880371 304.88977051]
[511.10659790 319.36230469]
[514.24670410 334.03402710]
[516.55920410 348.85870361]
[518.03680420 363.78973389]
[518.67492676 378.78012085]
[518.47155762 393.78271484]
[517.42724609 408.75030518]
[515.54534912 423.63577271]
[512.83178711 438.39233398]
[509.29510498 452.97351074]
[504.94638062 467.33343506]
[499.79934692 481.42694092]
[493.87014771 495.20968628]
[487.17752075 508.63830566]
[479.74243164 521.67053223]
[471.58831787 534.26531982]
[462.74084473 546.38311768]
[453.22784424 557.98577881]
[443.07922363 569.03680420]
[432.32696533 579.50140381]
[421.00482178 589.34661865]
[409.14849854 598.54150391]
[396.79525757 607.05718994]
[383.98394775 614.86676025]
[370.75494385 621.94573975]
[357.14978027 628.27185059]
[343.21136475 633.82513428]
[328.98345947 638.58813477]
[314.51089478 642.54589844]
[299.83917236 645.68591309]
[285.01449585 647.99835205]
[270.08346558 649.47595215]
[255.09306335 650.11401367]
[240.09046936 649.91052246]
[225.12289429 648.86621094]
[210.23741150 646.98425293]
[195.48088074 644.27062988]
[180.89971924 640.73388672]
[166.53979492 636.38513184]
[152.44630432 631.23803711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 139]
[40 138]
[41 137]
[42 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[57 130]
[58 129]
[59 128]
[60 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
