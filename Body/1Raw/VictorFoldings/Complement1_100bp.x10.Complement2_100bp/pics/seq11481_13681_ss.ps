%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[109.10504150 686.19952393]
[95.86646271 679.13287354]
[83.17231750 671.12933350]
[71.08878326 662.23071289]
[59.67885590 652.48333740]
[49.00202560 641.93804932]
[39.11395645 630.64984131]
[30.06619644 618.67755127]
[21.90592194 606.08355713]
[14.67567444 592.93365479]
[8.41315174 579.29620361]
[3.15100312 565.24249268]
[-1.08333707 550.84570312]
[-4.26779270 536.18084717]
[-6.38576078 521.32446289]
[-7.42619991 506.35400391]
[-7.38368464 491.34747314]
[-6.25843763 476.38314819]
[-4.05632496 461.53900146]
[-0.78882760 446.89245605]
[3.52701902 432.51986694]
[8.86871433 418.49615479]
[15.20840740 404.89447021]
[22.51304817 391.78570557]
[30.74455070 379.23818970]
[39.86000061 367.31735229]
[49.81187439 356.08535767]
[60.54828644 345.60073853]
[72.01325989 335.91815186]
[84.14701843 327.08813477]
[96.88631439 319.15664673]
[110.16471863 312.16510010]
[123.91300201 306.14993286]
[138.05949402 301.14248657]
[134.08740234 286.67794800]
[130.11529541 272.21340942]
[126.14320374 257.74890137]
[121.34068298 252.13128662]
[122.22136688 243.03941345]
[118.46506500 228.51734924]
[114.70876312 213.99530029]
[110.95246124 199.47323608]
[101.20671844 210.87588501]
[86.21097565 210.51847839]
[77.01953888 198.66447449]
[80.40798950 184.05220032]
[93.87848663 177.45329285]
[107.50003052 183.73094177]
[104.83423615 168.96972656]
[102.16844177 154.20851135]
[92.29241943 143.05891418]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[75.56713867 60.78527451]
[82.14078522 44.51400757]
[79.25551605 29.79411697]
[69.00821686 17.73992920]
[74.15292358 3.76204348]
[71.26764679 -10.95784760]
[66.67020416 3.32022977]
[57.52136993 15.20714855]
[44.89594269 23.30644608]
[30.27714729 26.66662407]
[15.38238335 24.89293289]
[1.96147180 18.19374466]
[-8.40891075 7.35607052]
[-14.51046276 -6.34688759]
[-15.62637901 -21.30532074]
[-11.62556362 -35.76192856]
[-2.97802854 -48.01836014]
[9.30032349 -56.63474274]
[23.76704216 -60.59883881]
[38.72259521 -59.44493866]
[52.41001511 -53.30861282]
[63.22131729 -42.91073990]
[69.88685608 -29.47135925]
[70.55664062 -44.45639801]
[71.22642517 -59.44143677]
[71.89620972 -74.42647552]
[72.56599426 -89.41151428]
[73.01259613 -104.40486145]
[73.23592377 -119.40319824]
[73.45925140 -134.40153503]
[73.68257904 -149.39987183]
[58.88119125 -152.02952576]
[44.69334793 -156.99955750]
[31.48654366 -164.18122864]
[19.60287285 -173.38853455]
[9.35015011 -184.38298035]
[0.99394351 -196.87979126]
[-5.24929953 -210.55523682]
[-9.21786499 -225.05513000]
[-10.80895615 -240.00386047]
[-9.98136139 -255.01423645]
[-6.75651646 -269.69744873]
[-1.21795285 -283.67315674]
[6.49086714 -296.57934570]
[16.17026711 -308.08175659]
[27.56952667 -317.88241577]
[40.39337921 -325.72750854]
[54.30965042 -331.41375732]
[68.95788574 -334.79391479]
[83.95864868 -335.78039551]
[98.92339325 -334.34771729]
[113.46449280 -330.53292847]
[127.20529938 -324.43484497]
[139.78988647 -316.21145630]
[150.89228821 -306.07574463]
[160.22492981 -294.29022217]
[167.54606628 -281.16021729]
[172.66606140 -267.02581787]
[175.45230103 -252.25309753]
[175.83261108 -237.22473145]
[173.79714966 -222.33000183]
[169.39863586 -207.95471191]
[162.75099182 -194.47119141]
[154.02641296 -182.22872925]
[143.45088196 -171.54441833]
[131.29833984 -162.69502258]
[117.88357544 -155.90974426]
[103.55403900 -151.36433411]
[88.68091583 -149.17654419]
[88.45758820 -134.17820740]
[88.23426056 -119.17987061]
[88.01093292 -104.18153381]
[90.63550568 -100.19145966]
[90.78139496 -94.51029205]
[87.55103302 -88.74172974]
[86.88124847 -73.75669098]
[86.21146393 -58.77165222]
[85.54167938 -43.78661346]
[84.87189484 -28.80157471]
[85.98754120 -13.84312057]
[88.87281036 0.87677085]
[98.91373444 11.87809372]
[93.97540283 26.90884399]
[96.86067963 41.62873459]
[106.72148895 48.63523483]
[109.24571991 60.87500763]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[122.28189850 137.64297485]
[116.92965698 151.54270935]
[119.59545135 166.30392456]
[122.26124573 181.06513977]
[125.47451782 195.71693420]
[129.23081970 210.23899841]
[132.98712158 224.76104736]
[136.74342346 239.28311157]
[140.60772705 253.77680969]
[144.57981873 268.24133301]
[148.55192566 282.70584106]
[152.52401733 297.17037964]
[167.24386597 294.25085449]
[182.13601685 292.40109253]
[197.12283325 291.63073730]
[212.12614441 291.94381714]
[227.06777954 293.33871460]
[241.86979675 295.80810547]
[256.45504761 299.33917236]
[270.74746704 303.91345215]
[284.67257690 309.50714111]
[298.15774536 316.09103394]
[311.13269043 323.63085938]
[323.52975464 332.08724976]
[335.28430176 341.41616821]
[346.33502197 351.56893921]
[356.62435913 362.49264526]
[366.09863281 374.13034058]
[374.70846558 386.42132568]
[382.40893555 399.30154419]
[389.15994263 412.70385742]
[394.92626953 426.55838013]
[399.67782593 440.79284668]
[403.38989258 455.33306885]
[406.04306030 470.10327148]
[407.62353516 485.02639771]
[408.12304688 500.02468872]
[407.53903198 515.01989746]
[405.87451172 529.93389893]
[403.13815308 544.68890381]
[399.34423828 559.20800781]
[394.51254272 573.41546631]
[388.66824341 587.23724365]
[381.84185791 600.60131836]
[374.06890869 613.43792725]
[365.38995361 625.68023682]
[355.85028076 637.26434326]
[345.49954224 648.12994385]
[334.39178467 658.22027588]
[322.58486938 667.48278809]
[310.14035034 675.86920166]
[297.12313843 683.33581543]
[283.60107422 689.84362793]
[269.64468384 695.35876465]
[255.32670593 699.85241699]
[240.72178650 703.30126953]
[225.90609741 705.68719482]
[210.95684814 706.99786377]
[195.95199585 707.22644043]
[180.96977234 706.37164307]
[166.08828735 704.43804932]
[151.38510132 701.43560791]
[136.93692017 697.38006592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 159]
[35 158]
[36 157]
[37 156]
[39 155]
[40 154]
[41 153]
[42 152]
[48 151]
[49 150]
[50 149]
[52 147]
[53 146]
[55 144]
[56 143]
[58 140]
[59 139]
[61 137]
[62 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 128]
[85 127]
[86 126]
[87 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
