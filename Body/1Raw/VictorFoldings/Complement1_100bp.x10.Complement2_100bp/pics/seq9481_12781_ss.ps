%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[19.85510063 546.00616455]
[13.33927727 559.53417969]
[5.37478256 572.26324463]
[-3.94170284 584.03894043]
[-14.49708462 594.71820068]
[-26.16323090 604.17150879]
[-38.79852295 612.28399658]
[-52.24958420 618.95721436]
[-66.35312653 624.11022949]
[-80.93795013 627.68035889]
[-95.82700348 629.62438965]
[-110.83955383 629.91870117]
[-125.79335022 628.55963135]
[-140.50688171 625.56378174]
[-154.80152893 620.96746826]
[-168.50378418 614.82653809]
[-181.44729614 607.21539307]
[-193.47494507 598.22662354]
[-204.44073486 587.96917725]
[-214.21154785 576.56768799]
[-222.66877747 564.16046143]
[-229.70974731 550.89819336]
[-235.24900818 536.94183350]
[-239.21929932 522.46081543]
[-241.57243347 507.63092041]
[-242.27984619 492.63217163]
[-241.33294678 477.64663696]
[-238.74324036 462.85620117]
[-234.54214478 448.44046021]
[-228.78067017 434.57434082]
[-221.52876282 421.42623901]
[-212.87443542 409.15570068]
[-202.92274475 397.91174316]
[-191.79450989 387.83078003]
[-179.62481689 379.03521729]
[-166.56138611 371.63186646]
[-152.76278687 365.71054077]
[-138.39654541 361.34313965]
[-123.63703918 358.58267212]
[-108.66343689 357.46267700]
[-93.65750885 357.99670410]
[-78.80139923 360.17831421]
[-64.27546692 363.98098755]
[-50.25603485 369.35861206]
[-43.37662125 356.02917480]
[-36.49720764 342.69973755]
[-41.25656509 328.63259888]
[-34.46974564 315.01666260]
[-19.68257523 310.11999512]
[-12.80316353 296.79055786]
[-5.92375088 283.46115112]
[-15.83558559 273.35327148]
[-22.15076828 260.65921021]
[-24.24000359 246.61408997]
[-21.88592720 232.58918762]
[-15.30562496 219.95788574]
[-5.13069963 209.96125793]
[7.65334034 203.58612061]
[21.80252266 201.46762085]
[35.93545532 203.82597351]
[43.01256180 190.60044861]
[50.08966446 177.37492371]
[57.16677094 164.14939880]
[64.24387360 150.92387390]
[59.69448471 136.78744507]
[66.68327332 123.27405548]
[81.54170990 118.59809113]
[88.61881256 105.37255859]
[95.39880371 91.99228668]
[94.38182831 76.20380402]
[106.85777283 68.06745911]
[113.33726501 54.53911209]
[119.81676483 41.01076889]
[126.29625702 27.48242188]
[132.77575684 13.95407677]
[131.75877380 -1.83441007]
[144.23471069 -9.97075176]
[133.96138000 -22.58790207]
[130.23211670 -38.36561966]
[133.74415588 -54.13349533]
[143.74481201 -66.74580383]
[158.19219971 -73.70905304]
[174.17185974 -73.67491150]
[180.44921875 -87.29823303]
[186.72657776 -100.92154694]
[193.00393677 -114.54486084]
[199.28129578 -128.16818237]
[205.55865479 -141.79148865]
[200.32310486 -156.46209717]
[206.88331604 -170.18865967]
[220.90176392 -175.08955383]
[227.17912292 -188.71286011]
[233.45648193 -202.33618164]
[239.73384094 -215.95950317]
[226.93283081 -223.81254578]
[215.15048218 -233.12452698]
[204.55223083 -243.76469421]
[195.28684998 -255.58370972]
[187.48440552 -268.41561890]
[181.25444031 -282.08032227]
[176.68438721 -296.38595581]
[173.83843994 -311.13168335]
[172.75653076 -326.11053467]
[173.45384216 -341.11221313]
[175.92060852 -355.92611694]
[180.12217712 -370.34426880]
[185.99957275 -384.16427612]
[193.47027588 -397.19210815]
[202.42944336 -409.24490356]
[212.75126648 -420.15344238]
[224.29084778 -429.76461792]
[236.88619995 -437.94345093]
[250.36050415 -444.57513428]
[264.52459717 -449.56661987]
[279.17965698 -452.84777832]
[294.11990356 -454.37255859]
[309.13565063 -454.11956787]
[324.01605225 -452.09237671]
[338.55227661 -448.31939697]
[352.54019165 -442.85363770]
[365.78344727 -435.77182007]
[378.09613037 -427.17333984]
[389.30541992 -417.17889404]
[399.25390625 -405.92886353]
[407.80197144 -393.58108521]
[414.82958984 -380.30899048]
[420.23809814 -366.29882812]
[423.95159912 -351.74731445]
[425.91793823 -336.85873413]
[426.10949707 -321.84210205]
[424.52362061 -306.90820312]
[421.18255615 -292.26669312]
[416.13320923 -278.12313843]
[409.44647217 -264.67605591]
[401.21618652 -252.11425781]
[391.55795288 -240.61405945]
[380.60726929 -230.33692932]
[368.51794434 -221.42713928]
[355.45965576 -214.00976562]
[341.61572266 -208.18893433]
[327.18051147 -204.04637146]
[312.35665894 -201.64021301]
[297.35226440 -201.00424194]
[282.37796021 -202.14739990]
[267.64398193 -205.05363464]
[253.35716248 -209.68214417]
[247.07980347 -196.05882263]
[240.80242920 -182.43550110]
[234.52507019 -168.81219482]
[239.90782166 -154.97160339]
[233.73574829 -141.06620789]
[219.18197632 -135.51412964]
[212.90461731 -121.89081573]
[206.62725830 -108.26750183]
[200.34989929 -94.64418793]
[194.07252502 -81.02086639]
[187.79516602 -67.39755249]
[197.14382935 -57.14714432]
[201.89453125 -44.06651688]
[201.29898071 -30.11930847]
[195.41410828 -17.41266060]
[185.09844971 -7.87888908]
[171.88705444 -2.98164105]
[157.76306152 -3.49125600]
[159.24349976 11.32959270]
[146.30409241 20.43357277]
[139.82460022 33.96191788]
[133.34510803 47.49026489]
[126.86560822 61.01860809]
[120.38611603 74.54695129]
[121.86655426 89.36780548]
[108.92715454 98.47178650]
[109.68018341 102.25402069]
[108.76241302 106.34981537]
[106.07116699 110.00553131]
[101.84434509 112.44966888]
[94.76723480 125.67519379]
[99.12030029 140.63142395]
[91.75469971 153.94316101]
[77.46940613 158.00097656]
[70.39229584 171.22650146]
[63.31519318 184.45202637]
[56.23808670 197.67755127]
[49.16098404 210.90309143]
[59.85283279 222.71511841]
[65.84352875 237.44932556]
[66.42577362 253.31732178]
[61.54754639 268.39990234]
[51.81613922 280.87908936]
[38.42263794 289.25741577]
[22.99615288 292.53744507]
[7.40567827 290.34054565]
[0.52626568 303.66998291]
[-6.35314703 316.99942017]
[-1.77789247 331.88916016]
[-8.94447803 345.30911255]
[-23.16777992 349.57916260]
[-30.04719162 362.90856934]
[-36.92660522 376.23800659]
[-24.42156219 384.54986572]
[-12.90680885 394.18698120]
[-2.52212405 405.03231812]
[6.60643196 416.95425415]
[14.36804676 429.80807495]
[20.66850090 443.43771362]
[25.43131447 457.67776489]
[28.59866905 472.35534668]
[30.13211632 487.29226685]
[30.01304245 502.30722046]
[28.24289322 517.21795654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 199]
[45 198]
[46 197]
[49 194]
[50 193]
[51 192]
[60 184]
[61 183]
[62 182]
[63 181]
[64 180]
[67 177]
[68 176]
[69 172]
[71 170]
[72 169]
[73 168]
[74 167]
[75 166]
[77 164]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[91 149]
[92 148]
[93 147]
[94 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
