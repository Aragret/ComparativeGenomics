%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[141.58290100 829.01953125]
[126.80560303 826.43066406]
[112.15431976 823.20404053]
[97.65655518 819.34582520]
[83.33954620 814.86322021]
[69.23014832 809.76458740]
[55.35486221 804.05957031]
[41.73973846 797.75885010]
[28.41033745 790.87420654]
[15.39167881 783.41864014]
[2.70820761 775.40612793]
[-9.61626434 766.85168457]
[-21.55860138 757.77142334]
[-33.09637833 748.18231201]
[-44.20793915 738.10247803]
[-54.87242126 727.55065918]
[-65.06980133 716.54687500]
[-74.78093719 705.11163330]
[-83.98759460 693.26641846]
[-92.67249298 681.03356934]
[-100.81932831 668.43591309]
[-108.41279602 655.49725342]
[-115.43865204 642.24169922]
[-121.88369751 628.69433594]
[-127.73583221 614.88043213]
[-132.98408508 600.82598877]
[-137.61857605 586.55743408]
[-141.63063049 572.10150146]
[-145.01269531 557.48529053]
[-147.75843811 542.73632812]
[-149.86268616 527.88232422]
[-151.32150269 512.95104980]
[-152.13214111 497.97058105]
[-152.29309082 482.96908569]
[-151.80404663 467.97470093]
[-150.66592407 453.01556396]
[-148.88084412 438.11978149]
[-146.45217896 423.31530762]
[-143.38449097 408.62994385]
[-139.68351746 394.09124756]
[-135.35621643 379.72650146]
[-130.41072083 365.56271362]
[-124.85631561 351.62646484]
[-118.70341492 337.94387817]
[-111.96358490 324.54071045]
[-104.64945984 311.44204712]
[-96.77478790 298.67254639]
[-88.35435486 286.25613403]
[-79.40395355 274.21615601]
[-69.94039917 262.57519531]
[-59.98145294 251.35510254]
[-49.54581833 240.57695007]
[-38.65307999 230.26098633]
[-27.32369423 220.42655945]
[-15.57892704 211.09214783]
[-3.44082904 202.27526855]
[9.06781197 193.99246216]
[21.92351151 186.25929260]
[35.10213470 179.09028625]
[48.57894135 172.49888611]
[62.32862854 166.49746704]
[76.32538605 161.09730530]
[90.54293060 156.30853271]
[104.95456696 152.14015198]
[101.41490173 137.56376648]
[97.87522888 122.98739624]
[94.33555603 108.41101837]
[89.52436066 101.94380188]
[90.85340881 93.59128571]
[87.53115082 78.96382141]
[74.71049500 65.74594116]
[80.55104065 49.19737244]
[77.01136780 34.62099838]
[73.47169495 20.04462242]
[69.93202209 5.46824741]
[54.98593140 6.99409437]
[39.97128677 6.47049999]
[25.16779518 3.90721893]
[10.85123920 -0.64799696]
[-2.71167183 -7.11028671]
[-15.26827049 -15.35926151]
[-26.58463478 -25.24124718]
[-36.44994736 -36.57215118]
[-44.68042374 -49.14088058]
[-51.12273407 -62.71329498]
[-55.65686417 -77.03654480]
[-58.19834518 -91.84378815]
[-58.69982910 -106.85919189]
[-57.15197754 -121.80301666]
[-53.58362198 -136.39686584]
[-48.06124115 -150.36888123]
[-40.68770981 -163.45875549]
[-31.60039711 -175.42263794]
[-20.96859169 -186.03765869]
[-8.99035931 -195.10604858]
[4.11115456 -202.45887756]
[18.09187508 -207.95916748]
[32.69135284 -211.50444031]
[47.63760757 -213.02867126]
[62.65219498 -212.50344849]
[77.45540619 -209.93856812]
[91.77146912 -205.38180542]
[105.33368683 -198.91804504]
[117.88938904 -190.66770935]
[129.20468140 -180.78450012]
[139.06877136 -169.45252991]
[147.29788208 -156.88290405]
[153.73872375 -143.30979919]
[158.27130127 -128.98605347]
[160.81118774 -114.17853546]
[161.31105042 -99.16307831]
[159.76158142 -84.21942139]
[156.19163513 -69.62595367]
[150.66773987 -55.65454102]
[143.29280090 -42.56546402]
[134.20419312 -30.60256577]
[123.57123566 -19.98870468]
[111.59202576 -10.92161179]
[98.48971558 -3.57020092]
[84.50839233 1.92857480]
[88.04806519 16.50494957]
[91.58773804 31.08132553]
[95.12741089 45.65769958]
[105.29124451 52.21690369]
[108.35949707 64.33175659]
[102.15860748 75.64156342]
[105.48086548 90.26902771]
[108.91192627 104.87134552]
[112.45159912 119.44772339]
[115.99127197 134.02409363]
[119.53094482 148.60047913]
[134.24928284 145.69505310]
[149.07966614 143.42993164]
[163.99423218 141.80937195]
[178.96501160 140.83641052]
[193.96389771 140.51289368]
[208.96270752 140.83940125]
[223.93328857 141.81533813]
[238.84754944 143.43885803]
[253.67747498 145.70693970]
[268.39523315 148.61529541]
[282.97317505 152.15847778]
[297.38397217 156.32981873]
[311.60052490 161.12152100]
[325.59616089 166.52456665]
[339.34460449 172.52880859]
[352.82006836 179.12298584]
[365.99722290 186.29472351]
[378.85131836 194.03053284]
[391.35824585 202.31590271]
[403.49453735 211.13528442]
[415.23739624 220.47212219]
[426.56475830 230.30888367]
[437.45535278 240.62709045]
[447.88876343 251.40737915]
[457.84539795 262.62951660]
[467.30657959 274.27243042]
[476.25448608 286.31427002]
[484.67236328 298.73239136]
[492.54440308 311.50354004]
[499.85583496 324.60366821]
[506.59292603 338.00827026]
[512.74298096 351.69207764]
[518.29455566 365.62948608]
[523.23712158 379.79431152]
[527.56146240 394.15991211]
[531.25939941 408.69937134]
[534.32409668 423.38537598]
[536.74969482 438.19036865]
[538.53173828 453.08651733]
[539.66674805 468.04586792]
[540.15270996 483.04037476]
[539.98870850 498.04183960]
[539.17498779 513.02209473]
[537.71307373 527.95306396]
[535.60577393 542.80670166]
[532.85699463 557.55511475]
[529.47192383 572.17059326]
[525.45690918 586.62567139]
[520.81945801 600.89331055]
[515.56829834 614.94665527]
[509.71331787 628.75933838]
[503.26550293 642.30541992]
[496.23690796 655.55944824]
[488.64077759 668.49658203]
[480.49136353 681.09252930]
[471.80392456 693.32366943]
[462.59484863 705.16693115]
[452.88134766 716.60015869]
[442.68170166 727.60192871]
[432.01504517 738.15148926]
[420.90142822 748.22906494]
[409.36166382 757.81579590]
[397.41744995 766.89361572]
[385.09121704 775.44549561]
[372.40609741 783.45538330]
[359.38589478 790.90826416]
[346.05508423 797.79016113]
[332.43865967 804.08807373]
[318.56219482 809.79028320]
[304.45175171 814.88598633]
[290.13381958 819.36566162]
[275.63528442 823.22088623]
[260.98333740 826.44445801]
[246.20549011 829.03027344]
[231.32951355 830.97351074]
[216.38333130 832.27050781]
[201.39497375 832.91888428]
[186.39260864 832.91735840]
[171.40440369 832.26593018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 131]
[65 130]
[66 129]
[67 128]
[69 127]
[70 126]
[72 123]
[73 122]
[74 121]
[75 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
