%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[72.90275574 314.42169189]
[57.40115738 313.72882080]
[45.28837585 304.03036499]
[41.22202301 289.05557251]
[46.76569366 274.56256104]
[59.78773499 266.12420654]
[60.45751953 251.13916016]
[61.12730408 236.15411377]
[61.79708862 221.16908264]
[62.46687317 206.18403625]
[63.13666153 191.19900513]
[55.97537994 178.13893127]
[64.32117462 164.69801331]
[57.09432602 177.84231567]
[47.32514572 189.22489929]
[35.42902374 198.36175537]
[21.91178894 204.86441040]
[7.34820414 208.45632935]
[-7.64248323 208.98481750]
[-22.42285919 206.42738342]
[-36.36445618 200.89279175]
[-48.87447357 192.61634827]
[-59.42097092 181.94998169]
[-67.55551147 169.34722900]
[-72.93221283 155.34397888]
[-75.32244873 140.53564453]
[-74.62458801 125.55187988]
[-70.86830902 111.02982330]
[-64.21331787 97.58693695]
[-54.94260025 85.79483032]
[-43.45034790 76.15490723]
[-30.22521591 69.07706451]
[-15.82954407 64.86225128]
[-0.87544417 63.68968201]
[14.00122738 65.60922241]
[28.16790771 70.53925323]
[41.02222443 78.27013397]
[52.01760101 88.47315979]
[60.68650818 100.71448517]
[66.66034698 114.47360229]
[69.68509674 129.16546631]
[69.63213348 144.16554260]
[76.31233215 130.73516846]
[82.99252319 117.30479431]
[89.67272186 103.87441254]
[74.83872223 106.09982300]
[63.74658203 96.00208282]
[64.57301331 81.02486420]
[76.70880127 72.20882416]
[91.20789337 76.05281067]
[97.38213348 89.72153473]
[105.04273224 76.82521057]
[112.70333099 63.92888260]
[120.36392975 51.03255844]
[128.02452087 38.13623047]
[135.19989014 24.96375465]
[141.88008118 11.53337860]
[148.56028748 -1.89699781]
[153.70223999 -15.98813915]
[157.24191284 -30.56451416]
[160.78158569 -45.14088821]
[164.32125854 -59.71726608]
[150.98120117 -52.85848618]
[136.65693665 -57.30994797]
[129.55406189 -70.52165222]
[133.74140930 -84.92533112]
[146.82029724 -92.26991272]
[161.29853821 -88.34807587]
[168.88218689 -75.40737152]
[173.70819092 -89.60982513]
[178.53417969 -103.81228638]
[183.36018372 -118.01473999]
[188.18617249 -132.21719360]
[193.01217651 -146.41964722]
[179.19357300 -152.27189636]
[165.83903503 -159.11723328]
[153.01979065 -166.91911316]
[140.80426025 -175.63595581]
[129.25759888 -185.22120667]
[118.44143677 -195.62374878]
[108.41345978 -206.78807068]
[99.22718811 -218.65461731]
[90.93162537 -231.16004944]
[83.57103729 -244.23767090]
[77.18469238 -257.81768799]
[71.80667114 -271.82766724]
[67.46566772 -286.19284058]
[64.18483734 -300.83654785]
[61.98168564 -315.68069458]
[60.86796951 -330.64605713]
[60.84963608 -345.65280151]
[61.92677689 -360.62081909]
[64.09364319 -375.47030640]
[67.33868408 -390.12200928]
[71.64456940 -404.49774170]
[76.98834229 -418.52081299]
[83.34147644 -432.11639404]
[90.67008972 -445.21197510]
[98.93506622 -457.73764038]
[108.09231567 -469.62658691]
[118.09297943 -480.81539917]
[128.88369751 -491.24432373]
[140.40689087 -500.85778809]
[152.60108948 -509.60443115]
[165.40122986 -517.43762207]
[178.73899841 -524.31555176]
[192.54325867 -530.20153809]
[206.74034119 -535.06420898]
[221.25450134 -538.87756348]
[236.00830078 -541.62127686]
[250.92301941 -543.28063965]
[265.91906738 -543.84692383]
[280.91644287 -543.31707764]
[295.83514404 -541.69384766]
[310.59558105 -538.98596191]
[325.11892700 -535.20788574]
[339.32778931 -530.37969971]
[353.14627075 -524.52722168]
[366.50073242 -517.68170166]
[379.31982422 -509.87957764]
[391.53521729 -501.16253662]
[403.08172607 -491.57711792]
[413.89770508 -481.17437744]
[423.92550659 -470.00988770]
[433.11160278 -458.14321899]
[441.40695190 -445.63763428]
[448.76730347 -432.55987549]
[455.15344238 -418.97976685]
[460.53121948 -404.96969604]
[464.87200928 -390.60446167]
[468.15258789 -375.96069336]
[470.35549927 -361.11651611]
[471.46896362 -346.15112305]
[471.48706055 -331.14437866]
[470.40966797 -316.17636108]
[468.24255371 -301.32693481]
[464.99728394 -286.67529297]
[460.69116211 -272.29962158]
[455.34713745 -258.27664185]
[448.99377441 -244.68115234]
[441.66497803 -231.58570862]
[433.39978027 -219.06016541]
[424.24234009 -207.17137146]
[414.24148560 -195.98274231]
[403.45059204 -185.55397034]
[391.92724609 -175.94071960]
[379.73291016 -167.19425964]
[366.93264771 -159.36128235]
[353.59475708 -152.48355103]
[339.79040527 -146.59777832]
[325.59323120 -141.73538208]
[311.07901001 -137.92227173]
[296.32516479 -135.17881775]
[281.41043091 -133.51963806]
[266.41436768 -132.95361328]
[251.41697693 -133.48373413]
[236.49830627 -135.10719299]
[221.73794556 -137.81530762]
[207.21463013 -141.59365845]
[202.38864136 -127.39119720]
[197.56263733 -113.18874359]
[192.73663330 -98.98628235]
[187.91064453 -84.78382874]
[183.08464050 -70.58137512]
[178.89762878 -56.17759323]
[175.35795593 -41.60121536]
[171.81828308 -27.02484131]
[168.27861023 -12.44846630]
[178.56781006 -23.36324120]
[192.07353210 -29.88977623]
[207.01885986 -31.16939163]
[221.43746948 -27.03373337]
[233.43234253 -18.02691650]
[241.42536926 -5.33394480]
[244.36491394 9.37520409]
[241.86424255 24.16528893]
[234.25233459 37.09041977]
[222.53070068 46.45006943]
[208.24150085 51.01282120]
[193.26472473 50.17836380]
[179.57083130 44.05648422]
[168.96150208 33.45262146]
[162.83255005 19.76189613]
[161.99066162 4.78319693]
[155.31045532 18.21357346]
[148.63026428 31.64394951]
[163.46426392 29.41853905]
[174.55641174 39.51628113]
[173.72998047 54.49349976]
[161.59419250 63.30953979]
[147.09509277 59.46555328]
[140.92085266 45.79682922]
[133.26025391 58.69315338]
[125.59965515 71.58947754]
[117.93905640 84.48580933]
[110.27846527 97.38213348]
[103.10309601 110.55461121]
[96.42290497 123.98498535]
[89.74270630 137.41535950]
[83.06251526 150.84573364]
[79.30621338 165.36779785]
[86.41958618 179.49969482]
[78.12169647 191.86878967]
[77.45191193 206.85382080]
[76.78212738 221.83886719]
[76.11234283 236.82389832]
[75.44255829 251.80894470]
[74.77277374 266.79397583]
[86.99005127 276.36047363]
[91.21861267 291.29025269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[13 201]
[42 200]
[43 199]
[44 198]
[45 197]
[51 196]
[52 195]
[53 194]
[54 193]
[55 192]
[56 186]
[57 185]
[58 184]
[59 168]
[60 167]
[61 166]
[62 165]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
