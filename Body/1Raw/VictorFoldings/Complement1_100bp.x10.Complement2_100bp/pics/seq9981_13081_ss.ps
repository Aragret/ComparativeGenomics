%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[52.94244385 909.66162109]
[37.94147491 909.44464111]
[22.96535110 908.55487061]
[8.04422379 906.99407959]
[-6.79185295 904.76544189]
[-21.51300240 901.87341309]
[-36.08958054 898.32385254]
[-50.49222565 894.12390137]
[-64.69194031 889.28198242]
[-78.66012573 883.80786133]
[-92.36864471 877.71258545]
[-105.78990173 871.00836182]
[-118.89685822 863.70880127]
[-131.66311646 855.82855225]
[-144.06298828 847.38348389]
[-156.07147217 838.39056396]
[-167.66441345 828.86798096]
[-178.81843567 818.83483887]
[-189.51110840 808.31140137]
[-199.72087097 797.31878662]
[-209.42716980 785.87921143]
[-218.61045837 774.01568604]
[-227.25224304 761.75213623]
[-235.33512878 749.11315918]
[-242.84283447 736.12432861]
[-249.76022339 722.81170654]
[-256.07339478 709.20214844]
[-261.76959229 695.32305908]
[-266.83740234 681.20239258]
[-271.26657104 666.86853027]
[-275.04818726 652.35046387]
[-278.17465210 637.67730713]
[-280.63964844 622.87866211]
[-282.43826294 607.98431396]
[-283.56680298 593.02429199]
[-284.02301025 578.02868652]
[-283.80599976 563.02770996]
[-282.91619873 548.05163574]
[-281.35537720 533.13049316]
[-279.12670898 518.29443359]
[-276.23464966 503.57327271]
[-272.68505859 488.99670410]
[-268.48504639 474.59405518]
[-263.64309692 460.39434814]
[-258.16894531 446.42617798]
[-252.07363892 432.71768188]
[-245.36944580 419.29641724]
[-238.06983948 406.18948364]
[-230.18955994 393.42324829]
[-221.74444580 381.02337646]
[-212.75152588 369.01492310]
[-203.22891235 357.42199707]
[-193.19575500 346.26797485]
[-182.67228699 335.57534790]
[-171.67968750 325.36560059]
[-160.24009705 315.65933228]
[-148.37655640 306.47604370]
[-136.11296082 297.83428955]
[-123.47399139 289.75143433]
[-110.48511505 282.24374390]
[-97.17249298 275.32638550]
[-83.56291962 269.01324463]
[-69.68381500 263.31704712]
[-55.56312943 258.24929810]
[-41.22929764 253.82014465]
[-26.71118546 250.03854370]
[-12.03803062 246.91210938]
[2.76061559 244.44712830]
[17.65495110 242.64857483]
[32.61498260 241.52006531]
[47.61058044 241.06387329]
[62.61154556 241.28091431]
[77.58766937 242.17074585]
[79.14819336 227.25213623]
[80.70871735 212.33354187]
[82.26923370 197.41493225]
[83.82975769 182.49632263]
[85.39028168 167.57772827]
[79.01905060 154.11456299]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.26956940 42.30506516]
[99.38521576 27.34661102]
[84.74266815 23.95600510]
[70.78933716 18.36985779]
[57.85231781 10.71911430]
[46.23485947 1.18311989]
[36.20930481 -10.01458740]
[28.01065826 -22.61151695]
[21.83111382 -36.31238174]
[17.81552505 -50.79600906]
[16.05802345 -65.72288513]
[16.59980774 -80.74310303]
[19.42817879 -95.50456238]
[24.47683525 -109.66123962]
[31.62742996 -122.88127899]
[40.71234131 -134.85478210]
[51.51860428 -145.30108643]
[63.79290771 -153.97529602]
[77.24752808 -160.67407227]
[91.56705475 -165.24041748]
[106.41583252 -167.56724548]
[121.44578552 -167.60005188]
[136.30458069 -165.33805847]
[150.64390564 -160.83427429]
[164.12763977 -154.19427490]
[176.43969727 -145.57373047]
[187.29145813 -135.17471313]
[196.42854309 -123.24098206]
[203.63677979 -110.05227661]
[208.74717712 -95.91777802]
[211.63996887 -81.16880035]
[212.24731445 -66.15109253]
[210.55499268 -51.21668625]
[206.60266113 -36.71566772]
[200.48298645 -22.98796082]
[192.33940125 -10.35536098]
[182.36282349 0.88600332]
[170.78710938 10.47261906]
[157.88360596 18.17976379]
[143.95478821 23.82676697]
[129.32717896 27.28125954]
[114.34366608 28.46226120]
[113.22801971 43.42071533]
[115.61044312 47.55992889]
[115.41792297 53.23971558]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[109.32828522 157.28498840]
[100.30889130 169.13824463]
[98.74836731 184.05685425]
[97.18784332 198.97546387]
[95.62731934 213.89405823]
[94.06679535 228.81266785]
[92.50627136 243.73127747]
[107.34236145 245.95986938]
[122.06352234 248.85183716]
[136.64010620 252.40135193]
[151.04277039 256.60128784]
[165.24250793 261.44314575]
[179.21070862 266.91720581]
[192.91925049 273.01242065]
[206.34053040 279.71655273]
[219.44752502 287.01608276]
[232.21382141 294.89630127]
[244.61370850 303.34133911]
[256.62222290 312.33416748]
[268.21520996 321.85675049]
[279.36926270 331.88983154]
[290.06198120 342.41323853]
[300.27178955 353.40579224]
[309.97811890 364.84530640]
[319.16146851 376.70880127]
[327.80328369 388.97235107]
[335.88623047 401.61126709]
[343.39398193 414.60009766]
[350.31143188 427.91268921]
[356.62463379 441.52221680]
[362.32089233 455.40130615]
[367.38876343 469.52194214]
[371.81799316 483.85577393]
[375.59967041 498.37384033]
[378.72616577 513.04699707]
[381.19122314 527.84564209]
[382.98986816 542.73992920]
[384.11846924 557.69995117]
[384.57476807 572.69555664]
[384.35778809 587.69653320]
[383.46804810 602.67266846]
[381.90728760 617.59381104]
[379.67868042 632.42987061]
[376.78668213 647.15100098]
[373.23712158 661.72760010]
[369.03717041 676.13024902]
[364.19528198 690.33001709]
[358.72119141 704.29815674]
[352.62594604 718.00671387]
[345.92178345 731.42797852]
[338.62225342 744.53497314]
[330.74200439 757.30120850]
[322.29693604 769.70111084]
[313.30407715 781.70959473]
[303.78149414 793.30255127]
[293.74838257 804.45660400]
[283.22494507 815.14929199]
[272.23239136 825.35906982]
[260.79284668 835.06542969]
[248.92933655 844.24871826]
[236.66575623 852.89056396]
[224.02682495 860.97344971]
[211.03797913 868.48120117]
[197.72538757 875.39862061]
[184.11582947 881.71179199]
[170.23675537 887.40802002]
[156.11608887 892.47583008]
[141.78227234 896.90502930]
[127.26417542 900.68670654]
[112.59103394 903.81317139]
[97.79239655 906.27819824]
[82.89806366 908.07684326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[80 138]
[81 137]
[82 136]
[84 134]
[85 133]
[86 132]
[87 129]
[88 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
