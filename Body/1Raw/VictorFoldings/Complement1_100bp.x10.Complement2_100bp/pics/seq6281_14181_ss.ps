%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[104.13607788 634.69354248]
[93.38665009 624.20507812]
[83.97986603 612.49743652]
[76.05290985 599.74121094]
[69.72138214 586.12249756]
[65.07760620 571.83990479]
[62.18931580 557.10168457]
[61.09862137 542.12280273]
[61.82143021 527.12158203]
[64.34719849 512.31695557]
[68.63909912 497.92471313]
[74.63454437 484.15472412]
[82.24609375 471.20785522]
[91.36276245 459.27288818]
[101.85158539 448.52383423]
[113.55962372 439.11749268]
[126.31611633 431.19100952]
[139.93505859 424.85998535]
[154.21783447 420.21676636]
[151.33256531 405.49685669]
[148.44729614 390.77697754]
[145.56202698 376.05706787]
[142.67674255 361.33718872]
[139.79147339 346.61730957]
[124.81236267 346.59738159]
[110.12028503 343.65451050]
[96.28026581 337.89987183]
[83.82495880 329.55294800]
[73.23410034 318.93298340]
[64.91607666 306.44683838]
[59.19211960 292.57333374]
[56.28396606 277.84497070]
[56.30522537 262.82748413]
[59.25694656 248.09799194]
[65.02752686 234.22302246]
[73.39690399 221.73654175]
[84.04497528 211.11949158]
[96.56381226 202.78126526]
[110.47331238 197.04386902]
[107.58804321 182.32397461]
[104.70276642 167.60408020]
[100.33136749 161.64483643]
[101.88583374 152.64364624]
[99.22003937 137.88243103]
[89.34401703 126.73283386]
[94.50558472 111.77726746]
[91.40148163 97.10196686]
[80.62615204 85.51737213]
[85.14157867 71.32369995]
[81.60190582 56.74732590]
[78.06223297 42.17095184]
[74.52256012 27.59457779]
[59.50194168 28.38015556]
[44.59669495 26.39272881]
[30.31425858 21.70143127]
[17.14058685 14.46742916]
[5.52362967 4.93837452]
[-4.14190340 -6.56006908]
[-11.52795696 -19.63535690]
[-16.38426018 -33.84146500]
[-18.54680824 -48.69410324]
[-17.94340515 -63.68722153]
[-14.59606171 -78.31026459]
[-8.62020874 -92.06554413]
[-0.22071005 -104.48517609]
[10.31515980 -115.14701080]
[22.62754059 -123.68896484]
[36.29627228 -129.82133484]
[25.52094650 -141.40592957]
[30.03637505 -155.59960938]
[26.49670219 -170.17597961]
[22.95702934 -184.75234985]
[10.24957657 -185.73039246]
[-1.65424538 -190.23361206]
[-11.79865646 -197.88970947]
[-19.37216949 -208.07362366]
[-23.77249718 -219.95863342]
[-24.65444565 -232.58341980]
[-21.95697021 -244.92982483]
[-15.90729332 -256.00500488]
[-7.00178766 -264.92123413]
[4.03472614 -270.96701050]
[1.14945376 -285.68692017]
[-1.73581886 -300.40679932]
[-4.62109137 -315.12667847]
[-7.50636435 -329.84658813]
[-22.56483650 -330.42892456]
[-37.08295059 -334.46884155]
[-50.27776337 -341.74853516]
[-61.43769073 -351.87536621]
[-69.96089935 -364.30322266]
[-75.38773346 -378.36187744]
[-77.42553711 -393.29318237]
[-75.96441650 -408.29193115]
[-71.08316040 -422.54919434]
[-63.04501724 -435.29617310]
[-52.28347015 -445.84536743]
[-39.37887192 -453.62792969]
[-25.02715683 -458.22412109]
[-10.00229263 -459.38607788]
[4.88544893 -457.05114746]
[18.83319092 -451.34524536]
[31.08874702 -442.57611084]
[40.99119186 -431.21661377]
[48.00650024 -417.87936401]
[51.75634384 -403.28363037]
[52.03850174 -388.21655273]
[48.83774948 -373.49063110]
[42.32670975 -359.90008545]
[32.85650635 -348.17779541]
[20.93786049 -338.95596313]
[7.21352720 -332.73187256]
[10.09879971 -318.01196289]
[12.98407269 -303.29208374]
[15.86934471 -288.57217407]
[18.75461769 -273.85229492]
[35.87320328 -270.93905640]
[50.59014893 -261.65625000]
[60.63396072 -247.40458679]
[64.44213867 -230.35417175]
[61.40421295 -213.11401367]
[51.95941544 -198.33279419]
[37.53340530 -188.29202271]
[41.07307816 -173.71565247]
[44.61275101 -159.13928223]
[55.13489532 -148.59727478]
[50.87264633 -133.36100769]
[65.83155060 -134.18046570]
[80.69025421 -132.23663330]
[94.94254303 -127.59426117]
[108.10256195 -120.41006470]
[119.72142792 -110.92742157]
[129.40249634 -99.46814728]
[136.81495667 -86.42156982]
[141.70507812 -72.23129272]
[143.90495300 -57.38010025]
[143.33818054 -42.37358093]
[140.02261353 -27.72285461]
[134.06973267 -13.92720795]
[125.68094635 -1.45705819]
[115.14071655 9.26208115]
[102.80698395 17.86412239]
[89.09893799 24.05490494]
[92.63861084 38.63127899]
[96.17828369 53.20765686]
[99.71795654 67.78402710]
[110.24009705 78.32602692]
[105.97785187 93.56229401]
[108.43695831 95.36293030]
[110.29524231 98.09813690]
[111.20528412 101.54708862]
[110.90612030 105.36373138]
[109.26680756 109.11147308]
[119.33349609 121.31689453]
[113.98125458 135.21662903]
[116.64704895 149.97784424]
[119.42266083 164.71881104]
[122.30793762 179.43870544]
[125.19320679 194.15859985]
[140.23941040 194.22032166]
[154.97970581 197.21543884]
[168.84797668 203.02699280]
[181.31193542 211.42990112]
[191.89355469 222.09963989]
[200.18751526 234.62483215]
[205.87660217 248.52305603]
[208.74388123 263.25942993]
[208.68099976 278.26721191]
[205.69226074 292.96963501]
[199.89434814 306.80197144]
[191.51182556 319.23336792]
[180.86842346 329.78701782]
[168.37454224 338.05868530]
[154.51136780 343.73202515]
[157.39663696 358.45190430]
[160.28190613 373.17181396]
[163.16719055 387.89169312]
[166.05245972 402.61160278]
[168.93772888 417.33148193]
[183.91651917 416.23910522]
[198.91775513 416.96023560]
[213.72270203 419.48434448]
[228.11543274 423.77462769]
[241.88607788 429.76852417]
[254.83380127 437.37863159]
[266.76980591 446.49395752]
[277.52001953 456.98156738]
[286.92767334 468.68853760]
[294.85559082 481.44415283]
[301.18814087 495.06237793]
[305.83297729 509.34463501]
[308.72238159 524.08264160]
[309.81417847 539.06146240]
[309.09249878 554.06268311]
[306.56784058 568.86755371]
[302.27700806 583.26013184]
[296.28259277 597.03051758]
[288.67202759 609.97796631]
[279.55624390 621.91363525]
[269.06823730 632.66345215]
[257.36090088 642.07067871]
[244.60499573 649.99810791]
[230.98652649 656.33013916]
[216.70408630 660.97448730]
[201.96597290 663.86328125]
[186.98710632 664.95458984]
[171.98591614 664.23229980]
[157.18116760 661.70709229]
[142.78875732 657.41571045]
[129.01856995 651.42083740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[39 159]
[40 158]
[41 157]
[43 156]
[44 155]
[46 153]
[47 148]
[49 146]
[50 145]
[51 144]
[52 143]
[68 127]
[70 125]
[71 124]
[72 123]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
