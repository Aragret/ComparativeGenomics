%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[42.20080566 568.48248291]
[33.75080872 580.91406250]
[23.46002769 591.87060547]
[11.58188438 601.08233643]
[-1.59111309 608.32238770]
[-15.73456764 613.41253662]
[-30.50018501 616.22729492]
[-45.52434540 616.69744873]
[-60.43706894 614.81140137]
[-74.87111664 610.61560059]
[-88.47103119 604.21337891]
[-100.90190887 595.76232910]
[-111.85762787 585.47064209]
[-121.06838989 573.59179688]
[-128.30737305 560.41815186]
[-133.39631653 546.27429199]
[-136.20988464 531.50842285]
[-136.67880249 516.48425293]
[-134.79153442 501.57168579]
[-130.59452820 487.13796997]
[-124.19116211 473.53860474]
[-115.73912048 461.10839844]
[-105.44653320 450.15353394]
[-93.56686401 440.94375610]
[-80.39267731 433.70587158]
[-66.24838257 428.61810303]
[-51.48229980 425.80572510]
[-36.45805740 425.33804321]
[-21.54564667 427.22656250]
[-17.35863495 412.82278442]
[-13.17162418 398.41900635]
[-8.98461342 384.01522827]
[-4.79760218 369.61141968]
[-0.61059088 355.20764160]
[3.57642031 340.80386353]
[-9.05777264 348.88949585]
[-24.03801537 348.11984253]
[-35.77704620 338.78201294]
[-39.89649963 324.35876465]
[-34.85992050 310.22961426]
[-22.54582596 301.66439819]
[-7.54707193 301.85769653]
[4.54217863 310.73745728]
[9.21294212 324.99288940]
[15.08190250 311.18872070]
[20.95086288 297.38455200]
[18.81011581 282.64456177]
[31.33009911 272.97189331]
[37.19905853 259.16772461]
[42.65441513 245.19493103]
[47.69133377 231.06590271]
[52.72824860 216.93687439]
[57.76516342 202.80783081]
[62.69675827 188.64170837]
[67.52275848 174.43925476]
[72.34875488 160.23678589]
[77.17475128 146.03433228]
[81.89488220 131.79634094]
[86.50889587 117.52361298]
[91.12290192 103.25087738]
[89.85386658 98.16133118]
[91.52674866 92.72306061]
[96.09260559 88.62551880]
[101.12952423 74.49649048]
[106.16643524 60.36745834]
[111.20335388 46.23843002]
[104.67983246 32.09341431]
[109.98925781 17.83632278]
[123.51456451 11.70431232]
[128.55148315 -2.42471743]
[133.58839417 -16.55374718]
[121.18589783 -8.11704063]
[106.23427582 -6.91334343]
[92.64183807 -13.25729847]
[83.96163177 -25.49061012]
[82.46262360 -40.41552353]
[88.53666687 -54.13069916]
[100.59601593 -63.05102158]
[115.48838043 -64.84474182]
[129.32093811 -59.04298782]
[138.47789001 -47.16232300]
[140.56573486 -32.30920410]
[147.54418945 -45.58704758]
[154.42359924 -58.91647720]
[161.30300903 -72.24591064]
[168.18241882 -85.57534027]
[167.63597107 -101.38710022]
[180.34863281 -109.14838409]
[187.22805786 -122.47781372]
[182.65280151 -137.36756897]
[189.81938171 -150.78750610]
[204.04267883 -155.05755615]
[210.92210388 -168.38697815]
[217.80151367 -181.71640015]
[224.68092346 -195.04583740]
[231.56033325 -208.37525940]
[238.43974304 -221.70469666]
[245.31915283 -235.03411865]
[252.19857788 -248.36355591]
[239.90969849 -257.00631714]
[228.91220093 -267.24197388]
[219.41093445 -278.87982178]
[211.58290100 -291.70309448]
[205.57395935 -305.47283936]
[201.49603271 -319.93258667]
[199.42509460 -334.81295776]
[199.39971924 -349.83670044]
[201.42037964 -364.72396851]
[205.44944763 -379.19738770]
[211.41183472 -392.98736572]
[219.19650269 -405.83700562]
[228.65840149 -417.50689697]
[239.62127686 -427.77963257]
[251.88087463 -436.46386719]
[265.20883179 -443.39779663]
[279.35684204 -448.45223999]
[294.06134033 -451.53308105]
[309.04840088 -452.58285522]
[324.03878784 -451.58209229]
[338.75329590 -448.54934692]
[352.91775513 -443.54116821]
[366.26831055 -436.65087891]
[378.55624390 -428.00677490]
[389.55264282 -417.76992798]
[399.05264282 -406.13104248]
[406.87927246 -393.30694580]
[412.88671875 -379.53652954]
[416.96310425 -365.07635498]
[419.03244019 -350.19577026]
[419.05618286 -335.17199707]
[417.03390503 -320.28497314]
[413.00326538 -305.81195068]
[407.03936768 -292.02261353]
[399.25332642 -279.17385864]
[389.79016113 -267.50497437]
[378.82617188 -257.23342896]
[366.56564331 -248.55052185]
[353.23693848 -241.61804199]
[339.08837891 -236.56510925]
[324.38354492 -233.48588562]
[309.39639282 -232.43769836]
[294.40609741 -233.44010925]
[279.69192505 -236.47444153]
[265.52801514 -241.48414612]
[258.64859009 -228.15470886]
[251.76918030 -214.82528687]
[244.88977051 -201.49584961]
[238.01034546 -188.16642761]
[231.13093567 -174.83699036]
[224.25152588 -161.50756836]
[217.37211609 -148.17813110]
[222.13146973 -134.11100769]
[215.34465027 -120.49507141]
[200.55747986 -115.59839630]
[193.67807007 -102.26896667]
[194.71658325 -87.41061401]
[181.51185608 -78.69592285]
[174.63244629 -65.36649323]
[167.75302124 -52.03706741]
[160.87361145 -38.70763779]
[160.59934998 -31.32207108]
[153.79125977 -25.23209763]
[147.71742249 -11.51683044]
[142.68051147 2.61219859]
[137.64360046 16.74122810]
[144.23966980 30.04639435]
[139.33279419 44.44699097]
[125.33238220 51.27534485]
[120.29547119 65.40437317]
[115.25855255 79.53340149]
[110.22163391 93.66243744]
[105.39563751 107.86489105]
[100.78163147 122.13761902]
[96.16761780 136.41035461]
[96.50558472 145.53852844]
[91.37720490 150.86033630]
[86.55120850 165.06278992]
[81.72521210 179.26524353]
[76.89921570 193.46769714]
[77.10123444 202.59989929]
[71.89419556 207.84475708]
[66.85727692 221.97378540]
[61.82036209 236.10281372]
[56.78344727 250.23184204]
[57.71730423 254.47235107]
[57.29560852 258.39492798]
[55.78475952 261.61248779]
[53.54950333 263.86422729]
[51.00323486 265.03668213]
[45.13427734 278.84085083]
[46.85523605 294.56817627]
[34.75503922 303.25350952]
[28.88607979 317.05767822]
[23.01711845 330.86184692]
[17.98020172 344.99087524]
[13.79319096 359.39465332]
[9.60618019 373.79843140]
[5.41916895 388.20223999]
[1.23215747 402.60601807]
[-2.95485377 417.00979614]
[-7.14186478 431.41357422]
[6.45910835 437.81356812]
[18.89138031 446.26254272]
[29.84879494 456.55242920]
[39.06151962 468.42980957]
[46.30267715 481.60220337]
[51.39394760 495.74523926]
[54.20995712 510.51062012]
[54.68136215 525.53472900]
[52.79654694 540.44763184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[34 196]
[35 195]
[44 194]
[45 193]
[46 192]
[48 190]
[49 189]
[50 184]
[51 183]
[52 182]
[53 181]
[54 179]
[55 178]
[56 177]
[57 176]
[58 174]
[59 173]
[60 172]
[63 171]
[64 170]
[65 169]
[66 168]
[69 165]
[70 164]
[71 163]
[82 162]
[83 160]
[84 159]
[85 158]
[86 157]
[88 155]
[89 154]
[92 151]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
[99 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
