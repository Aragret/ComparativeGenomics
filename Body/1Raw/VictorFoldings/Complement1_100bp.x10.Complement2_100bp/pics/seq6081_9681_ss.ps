%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[51.08620453 508.00900269]
[53.80575180 522.78942871]
[54.29191208 537.81018066]
[52.53381729 552.73553467]
[48.57075500 567.23211670]
[42.49125290 580.97613525]
[34.43112946 593.66046143]
[24.57045746 605.00177002]
[13.12952328 614.74664307]
[0.36392105 622.67736816]
[-13.44115925 628.61688232]
[-27.97730827 632.43237305]
[-42.91978073 634.03863525]
[-57.93476105 633.39984131]
[-72.68679810 630.53021240]
[-86.84634399 625.49383545]
[-100.09705353 618.40325928]
[-112.14290619 609.41687012]
[-122.71479797 598.73541260]
[-131.57653809 586.59759521]
[-138.53016663 573.27447510]
[-143.42031860 559.06378174]
[-146.13775635 544.28295898]
[-146.62178040 529.26220703]
[-144.86155701 514.33703613]
[-140.89642334 499.84100342]
[-134.81497192 486.09790039]
[-126.75304413 473.41470337]
[-116.89075470 462.07482910]
[-105.44843292 452.33157349]
[-92.68170166 444.40261841]
[-78.87577057 438.46511841]
[-64.33908081 434.65167236]
[-49.39638138 433.04751587]
[-34.38149261 433.68847656]
[-19.62985992 436.56024170]
[-5.47103596 441.59863281]
[1.60606933 428.37310791]
[8.68317509 415.14758301]
[15.76028061 401.92205811]
[22.83738518 388.69653320]
[29.91449165 375.47097778]
[28.40414047 357.98712158]
[44.12631226 348.40093994]
[51.00572586 335.07150269]
[57.88513565 321.74209595]
[56.84662628 306.88372803]
[70.05135345 298.16903687]
[74.55898285 283.86236572]
[76.56299591 268.99682617]
[78.56700897 254.13130188]
[80.57102203 239.26576233]
[82.57503510 224.40023804]
[84.57904816 209.53471375]
[86.58306122 194.66917419]
[88.47635651 179.78915405]
[89.70333099 164.83941650]
[90.37311554 149.85437012]
[91.04290009 134.86933899]
[91.71268463 119.88430023]
[92.38246918 104.89926147]
[90.20961761 101.71318054]
[89.45169067 97.58481598]
[90.49803162 93.16755676]
[93.43158722 89.26446533]
[86.95632935 74.82903290]
[95.79824829 62.84280396]
[97.13648224 47.90261841]
[98.47471619 32.96243286]
[86.95640564 22.73332405]
[83.70788574 7.85715055]
[89.77019501 -5.91646338]
[102.62660980 -13.38977814]
[103.96484375 -28.32996368]
[105.30307770 -43.27014923]
[105.52640533 -58.26848602]
[104.63359070 -73.24188995]
[103.74077606 -88.21529388]
[102.84796143 -103.18870544]
[101.95514679 -118.16210938]
[101.06233215 -133.13551331]
[92.51734924 -146.45068359]
[99.48339081 -159.61592102]
[90.93840790 -172.93110657]
[97.90444946 -186.09634399]
[97.01162720 -201.06974792]
[96.11881256 -216.04315186]
[95.22599792 -231.01655579]
[94.33318329 -245.98995972]
[91.01728821 -251.70979309]
[91.07858276 -257.39251709]
[93.64345551 -261.42120361]
[93.19684601 -276.41455078]
[92.75024414 -291.40789795]
[78.13283539 -295.21685791]
[65.18135071 -302.99090576]
[54.94571304 -314.09982300]
[48.25566864 -327.64309692]
[45.65356064 -342.52279663]
[47.35032272 -357.53271484]
[53.20840836 -371.45608521]
[62.75292969 -383.16412354]
[75.21015167 -391.70779419]
[89.57022858 -396.39447021]
[104.66905212 -396.84423828]
[119.28262329 -393.02059937]
[132.22628784 -385.23355103]
[142.45075989 -374.11431885]
[149.12719727 -360.56436157]
[151.71435547 -345.68203735]
[150.00251770 -330.67382812]
[144.13044739 -316.75637817]
[134.57417297 -305.05789185]
[122.10836792 -296.52676392]
[107.74359131 -291.85452271]
[108.19020081 -276.86117554]
[108.63680267 -261.86782837]
[109.30658722 -246.88278198]
[110.19940186 -231.90937805]
[111.09221649 -216.93595886]
[111.98503876 -201.96255493]
[112.87785339 -186.98915100]
[121.35897827 -174.74497986]
[114.45679474 -160.50874329]
[122.93791962 -148.26457214]
[116.03573608 -134.02833557]
[116.92855072 -119.05492401]
[117.82136536 -104.08152008]
[118.71417999 -89.10811615]
[119.60699463 -74.13470459]
[120.49981689 -59.16130066]
[128.61259460 -71.77807617]
[141.90127563 -78.73583984]
[156.89227295 -78.21586609]
[169.66693115 -70.35407257]
[176.88601685 -57.20550156]
[176.66246033 -42.20716476]
[169.05470276 -29.27959633]
[156.05140686 -21.80202484]
[141.05157471 -21.72907066]
[127.97615814 -29.07980728]
[120.24326324 -41.93191528]
[118.90502930 -26.99172974]
[117.56679535 -12.05154419]
[128.89041138 -2.41235638]
[132.40835571 12.21938896]
[126.56777191 26.28142357]
[113.41490173 34.30066681]
[112.07666779 49.24085236]
[110.73843384 64.18103790]
[117.30941010 77.54784393]
[108.37177277 90.60269928]
[107.36750793 105.56904602]
[106.69772339 120.55408478]
[106.02793884 135.53912354]
[105.35815430 150.52415466]
[104.68836975 165.50920105]
[117.35073853 157.46777344]
[131.58164978 162.20919800]
[136.89060974 176.23828125]
[129.36404419 189.21328735]
[114.55026245 191.56953430]
[103.37007141 181.57160950]
[105.45754242 190.46432495]
[101.44859314 196.67320251]
[99.44458008 211.53872681]
[97.44056702 226.40425110]
[95.43654633 241.26977539]
[93.43253326 256.13531494]
[91.42852020 271.00082397]
[89.42450714 285.86636353]
[97.84123993 273.45028687]
[109.04738617 263.47921753]
[122.35768890 256.56289673]
[136.95822144 253.12420654]
[151.95614624 253.37347412]
[166.43435669 257.29544067]
[179.50747681 264.65026855]
[190.37608337 274.98822021]
[198.37557983 287.67712402]
[203.01676941 301.94104004]
[204.01585388 316.90771484]
[201.31173706 331.66195679]
[195.06977844 345.30154419]
[185.67167664 356.99237061]
[173.69212341 366.01956177]
[159.86367798 371.83111572]
[145.03195190 374.07162476]
[130.10391235 372.60409546]
[115.99240875 367.51828003]
[103.56037903 359.12515259]
[93.56803894 347.93795776]
[86.62641907 334.64083862]
[83.16001129 320.04684448]
[83.38078308 305.04846191]
[83.92723083 320.86022949]
[71.21456909 328.62149048]
[64.33515167 341.95092773]
[57.45574188 355.28036499]
[60.62684631 367.78262329]
[54.62255478 378.74310303]
[43.14001846 382.54809570]
[36.06291199 395.77362061]
[28.98580742 408.99914551]
[21.90870285 422.22467041]
[14.83159733 435.45019531]
[7.75449133 448.67575073]
[19.80162430 457.66040039]
[30.37503433 468.34033203]
[39.23850632 480.47689819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[44 199]
[45 198]
[46 197]
[48 195]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[56 163]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[65 152]
[67 150]
[68 149]
[69 148]
[73 144]
[74 143]
[75 142]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[83 124]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
