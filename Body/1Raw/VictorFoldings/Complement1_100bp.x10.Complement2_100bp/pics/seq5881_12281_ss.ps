%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[39.42687607 900.63287354]
[24.43690872 901.26623535]
[9.43421173 901.12707520]
[-5.54142904 900.21575928]
[-20.45030022 898.53479004]
[-35.25286865 896.08850098]
[-49.90987778 892.88342285]
[-64.38246155 888.92810059]
[-78.63224030 884.23303223]
[-92.62142181 878.81054688]
[-106.31291962 872.67517090]
[-119.67041779 865.84307861]
[-132.65849304 858.33239746]
[-145.24272156 850.16308594]
[-157.38969421 841.35675049]
[-169.06724548 831.93682861]
[-180.24436951 821.92822266]
[-190.89144897 811.35754395]
[-200.98023987 800.25274658]
[-210.48399353 788.64331055]
[-219.37750244 776.55999756]
[-227.63719177 764.03491211]
[-235.24114990 751.10125732]
[-242.16921997 737.79327393]
[-248.40301514 724.14630127]
[-253.92602539 710.19653320]
[-258.72360229 695.98089600]
[-262.78298950 681.53717041]
[-266.09344482 666.90362549]
[-268.64620972 652.11901855]
[-270.43447876 637.22265625]
[-271.45355225 622.25396729]
[-271.70068359 607.25262451]
[-271.17526245 592.25848389]
[-269.87863159 577.31127930]
[-267.81427002 562.45062256]
[-264.98764038 547.71600342]
[-261.40621948 533.14636230]
[-257.07952881 518.78045654]
[-252.01902771 504.65628052]
[-246.23814392 490.81137085]
[-239.75219727 477.28240967]
[-232.57839966 464.10528564]
[-224.73577881 451.31491089]
[-216.24511719 438.94522095]
[-207.12893677 427.02905273]
[-197.41140747 415.59793091]
[-187.11831665 404.68225098]
[-176.27693176 394.31091309]
[-164.91603088 384.51141357]
[-153.06571960 375.30975342]
[-140.75741577 366.73034668]
[-128.02378845 358.79592896]
[-114.89859772 351.52755737]
[-101.41663361 344.94448853]
[-87.61365509 339.06417847]
[-73.52626801 333.90222168]
[-59.19182587 329.47232056]
[-44.64834595 325.78619385]
[-29.93439102 322.85363770]
[-15.08898258 320.68246460]
[-0.15148734 319.27835083]
[14.83848381 318.64508057]
[29.84117889 318.78433228]
[44.81681442 319.69570923]
[59.72567749 321.37680054]
[62.17140579 306.57751465]
[64.61713409 291.77825928]
[67.06285858 276.97897339]
[69.50858307 262.17971802]
[71.62320709 247.32951355]
[73.40567780 232.43579102]
[75.18814087 217.54208374]
[76.97061157 202.64836121]
[66.65087128 196.97500610]
[58.82562637 188.12820435]
[54.42893982 177.12875366]
[53.99747467 165.25636292]
[57.60508728 153.90080261]
[64.85145569 144.39924622]
[74.90635681 137.87878418]
[86.60474396 135.12272644]
[89.05047607 120.32345581]
[91.49620056 105.52418518]
[89.59895325 97.69009399]
[94.09008789 90.52346039]
[96.75588226 75.76224518]
[99.42167664 61.00102997]
[102.08747101 46.23981094]
[104.75327301 31.47859383]
[99.59169769 16.52303505]
[109.46772003 5.37343645]
[112.13351440 -9.38778019]
[113.80505371 -24.29435539]
[114.47483826 -39.27939224]
[115.14462280 -54.26443100]
[115.47959900 -69.26068878]
[115.47959900 -84.26068878]
[115.47959900 -99.26068878]
[115.47959900 -114.26068878]
[102.13847351 -121.87054443]
[94.40350342 -135.13952637]
[94.35536194 -150.49833679]
[102.00699615 -163.81555176]
[115.30015564 -171.50889587]
[130.65904236 -171.50889587]
[143.95220947 -163.81555176]
[151.60383606 -150.49833679]
[151.55569458 -135.13952637]
[143.82072449 -121.87054443]
[130.47959900 -114.26068878]
[130.47959900 -99.26068878]
[130.47959900 -84.26068878]
[130.47959900 -69.26068878]
[132.70086670 -66.52238464]
[133.70617676 -62.57214355]
[132.94033813 -57.99319077]
[130.12966919 -53.59464645]
[129.45988464 -38.60960770]
[128.79010010 -23.62456894]
[138.62210083 -34.95292282]
[152.98760986 -39.26942825]
[167.43530273 -35.23656082]
[177.48841858 -24.10395622]
[180.03187561 -9.32116890]
[174.27757263 4.53119278]
[162.00852966 13.16082382]
[147.02644348 13.89373779]
[133.97367859 6.50283575]
[126.89472961 -6.72198486]
[124.22893524 8.03923225]
[129.58117676 21.93897057]
[119.51448822 34.14439011]
[116.84869385 48.90560532]
[114.18289948 63.66682434]
[111.51709747 78.42803955]
[108.85130310 93.18926239]
[106.29547119 107.96990967]
[103.84974670 122.76918030]
[101.40401459 137.56845093]
[116.06352997 148.79011536]
[122.96536255 165.82113647]
[120.27880859 183.91401672]
[108.83314514 198.07240295]
[91.86432648 204.43083191]
[90.08186340 219.32455444]
[88.29939270 234.21826172]
[86.51692963 249.11198425]
[88.57281494 253.90994263]
[88.58180237 258.55249023]
[86.94587708 262.28594971]
[84.30785370 264.62542725]
[81.86212921 279.42471313]
[79.41640472 294.22396851]
[76.97067261 309.02325439]
[74.52494812 323.82250977]
[89.18197632 327.02749634]
[103.65457916 330.98272705]
[117.90438843 335.67776489]
[131.89360046 341.10012817]
[145.58512878 347.23544312]
[158.94267273 354.06747437]
[171.93078613 361.57806396]
[184.51506042 369.74731445]
[196.66209412 378.55352783]
[208.33969116 387.97341919]
[219.51687622 397.98193359]
[230.16401672 408.55261230]
[240.25286865 419.65734863]
[249.75669861 431.26672363]
[258.65026855 443.34994507]
[266.91003418 455.87500000]
[274.51406860 468.80862427]
[281.44219971 482.11654663]
[287.67608643 495.76348877]
[293.19915771 509.71325684]
[297.99682617 523.92883301]
[302.05630493 538.37255859]
[305.36685181 553.00610352]
[307.91967773 567.79064941]
[309.70806885 582.68701172]
[310.72720337 597.65570068]
[310.97442627 612.65704346]
[310.44906616 627.65118408]
[309.15255737 642.59838867]
[307.08825684 657.45904541]
[304.26171875 672.19372559]
[300.68038940 686.76336670]
[296.35375977 701.12933350]
[291.29333496 715.25347900]
[285.51254272 729.09844971]
[279.02667236 742.62744141]
[271.85296631 755.80462646]
[264.01040649 768.59503174]
[255.51982117 780.96478271]
[246.40370178 792.88098145]
[236.68624878 804.31213379]
[226.39320374 815.22790527]
[215.55189514 825.59930420]
[204.19104004 835.39886475]
[192.34077454 844.60058594]
[180.03253174 853.18005371]
[167.29895020 861.11456299]
[154.17379761 868.38299561]
[140.69187927 874.96618652]
[126.88893127 880.84655762]
[112.80156708 886.00860596]
[98.46715546 890.43859863]
[83.92369843 894.12475586]
[69.20976257 897.05737305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 156]
[67 155]
[68 154]
[69 153]
[70 152]
[71 148]
[72 147]
[73 146]
[74 145]
[82 140]
[83 139]
[84 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[92 131]
[93 130]
[94 120]
[95 119]
[96 118]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
