%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[100.13642883 287.15405273]
[99.18762207 272.17626953]
[99.41688538 257.17022705]
[100.82281494 242.22840881]
[103.39674377 227.44297791]
[107.12278748 212.90507507]
[111.97798920 198.70433044]
[117.93240356 184.92829895]
[124.94932556 171.66192627]
[132.98548889 158.98698425]
[141.99136353 146.98162842]
[130.73526001 137.06697083]
[119.47916412 127.15232086]
[108.22306824 117.23767090]
[93.75629425 118.04916382]
[82.88326263 108.47193146]
[81.86227417 94.01842499]
[70.60617828 84.10377502]
[59.35008621 74.18911743]
[48.09399033 64.27446747]
[29.96207237 61.06275940]
[25.01027679 44.22688293]
[13.60781479 34.48091888]
[2.20535207 24.73495293]
[-8.20196724 35.54331207]
[-19.23130417 45.71615601]
[-30.84391785 55.21774292]
[-42.99901581 64.01470184]
[-55.65390778 72.07613373]
[-68.76413727 79.37372589]
[-82.28366089 85.88183594]
[-96.16498566 91.57760620]
[-110.35935211 96.44104004]
[-124.81690216 100.45503998]
[-139.48684692 103.60552216]
[-154.31767273 105.88140106]
[-169.25727844 107.27470398]
[-184.25317383 107.78051758]
[-199.25270081 107.39707947]
[-214.20318604 106.12572479]
[-229.05207825 103.97092438]
[-243.74725342 100.94025421]
[-258.23706055 97.04434967]
[-272.47064209 92.29690552]
[-286.39797974 86.71458435]
[-299.97015381 80.31700134]
[-313.13949585 73.12662506]
[-325.85974121 65.16871643]
[-338.08621216 56.47123337]
[-349.77597046 47.06471252]
[-360.88793945 36.98220444]
[-371.38311768 26.25912094]
[-381.22460938 14.93312931]
[-390.37783813 3.04401064]
[-398.81066895 -9.36647224]
[-406.49349976 -22.25472641]
[-413.39932251 -35.57548523]
[-419.50390625 -49.28195190]
[-424.78576660 -63.32598495]
[-429.22634888 -77.65825653]
[-432.81011963 -92.22842407]
[-435.52441406 -106.98529816]
[-437.35974121 -121.87705994]
[-438.30966187 -136.85139465]
[-438.37081909 -151.85569763]
[-437.54299927 -166.83728027]
[-435.82910156 -181.74349976]
[-433.23516846 -196.52201843]
[-429.77029419 -211.12091064]
[-425.44665527 -225.48889160]
[-420.27941895 -239.57551575]
[-414.28677368 -253.33128357]
[-407.48974609 -266.70788574]
[-399.91223145 -279.65832520]
[-391.58084106 -292.13714600]
[-382.52478027 -304.10046387]
[-372.77593994 -315.50628662]
[-362.36853027 -326.31457520]
[-351.33911133 -336.48730469]
[-339.72640991 -345.98880005]
[-327.57122803 -354.78564453]
[-314.91625977 -362.84698486]
[-301.80596924 -370.14443970]
[-288.28640747 -376.65243530]
[-274.40502930 -382.34808350]
[-260.21063232 -387.21139526]
[-245.75303650 -391.22528076]
[-231.08305359 -394.37561035]
[-216.25221252 -396.65136719]
[-201.31260681 -398.04455566]
[-186.31669617 -398.55023193]
[-171.31716919 -398.16665649]
[-156.36669922 -396.89517212]
[-141.51782227 -394.74023438]
[-126.82267761 -391.70944214]
[-112.33289337 -387.81341553]
[-98.09935760 -383.06585693]
[-84.17207336 -377.48339844]
[-70.59995270 -371.08569336]
[-57.43067932 -363.89520264]
[-44.71050262 -355.93719482]
[-32.48410416 -347.23959351]
[-20.79443169 -337.83297729]
[-9.68254471 -327.75036621]
[0.81252491 -317.02719116]
[10.65391254 -305.70111084]
[19.80705070 -293.81192017]
[28.23978615 -281.40136719]
[35.92250061 -268.51303101]
[42.82820892 -255.19223022]
[48.93265533 -241.48570251]
[54.21438980 -227.44161987]
[58.65486908 -213.10931396]
[62.23849106 -198.53910828]
[64.95266724 -183.78221130]
[66.78787231 -168.89044189]
[67.73764801 -153.91609192]
[67.79866791 -138.91178894]
[66.97071075 -123.93021393]
[65.25669098 -109.02400970]
[62.66262054 -94.24551392]
[59.19762039 -79.64665985]
[54.87385559 -65.27870178]
[49.70651627 -51.19213104]
[43.71375275 -37.43641281]
[36.91661453 -24.05987167]
[29.33897591 -11.10949135]
[21.00745583 1.36924052]
[11.95131779 13.33248997]
[23.35378075 23.07845497]
[34.75624466 32.82442093]
[46.83629227 32.19274902]
[56.41563034 40.21895599]
[58.00864029 53.01837540]
[69.26473999 62.93302536]
[80.52083588 72.84767914]
[91.77693176 82.76232910]
[106.24370575 81.95083618]
[117.11673737 91.52806854]
[118.13772583 105.98157501]
[129.39381409 115.89622498]
[140.64991760 125.81088257]
[151.90600586 135.72552490]
[162.67863464 125.27638245]
[174.23788452 115.70465851]
[186.51249695 107.06938171]
[199.42678833 99.42378235]
[212.90113831 92.81500244]
[226.85246277 87.28379059]
[241.19477844 82.86424255]
[255.83961487 79.58361053]
[270.69671631 77.46212006]
[285.67446899 76.51285553]
[300.68051147 76.74166107]
[315.62237549 78.14713287]
[330.40786743 80.72060394]
[344.94589233 84.44620514]
[359.14678955 89.30096436]
[372.92300415 95.25495911]
[386.18960571 102.27147675]
[398.86477661 110.30725861]
[410.87042236 119.31275177]
[422.13247681 129.23245239]
[432.58151245 140.00517273]
[442.15310669 151.56452942]
[450.78826904 163.83921814]
[458.43371582 176.75358582]
[465.04235840 190.22801208]
[470.57345581 204.17939758]
[474.99285889 218.52174377]
[478.27331543 233.16662598]
[480.39465332 248.02374268]
[481.34378052 263.00149536]
[481.11480713 278.00756836]
[479.70919800 292.94940186]
[477.13555908 307.73489380]
[473.40982056 322.27285767]
[468.55490112 336.47369385]
[462.60076904 350.24984741]
[455.58413696 363.51638794]
[447.54821777 376.19149780]
[438.54260254 388.19702148]
[428.62280273 399.45898438]
[417.84994507 409.90789795]
[406.29049683 419.47937012]
[394.01571655 428.11441040]
[381.10128784 435.75973511]
[367.62680054 442.36825562]
[353.67535400 447.89916992]
[339.33294678 452.31845093]
[324.68804932 455.59875488]
[309.83090210 457.71994019]
[294.85311890 458.66891479]
[279.84707642 458.43978882]
[264.90524292 457.03402710]
[250.11979675 454.46026611]
[235.58184814 450.73434448]
[221.38105774 445.87930298]
[207.60496521 439.92501831]
[194.33851624 432.90823364]
[181.66349792 424.87219238]
[169.65805054 415.86645508]
[158.39619446 405.94653320]
[147.94738770 395.17358398]
[138.37602234 383.61404419]
[129.74111938 371.33917236]
[122.09590912 358.42465210]
[115.48754120 344.95010376]
[109.95675659 330.99859619]
[105.53765106 316.65615845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 143]
[12 142]
[13 141]
[14 140]
[17 137]
[18 136]
[19 135]
[20 134]
[22 131]
[23 130]
[24 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
