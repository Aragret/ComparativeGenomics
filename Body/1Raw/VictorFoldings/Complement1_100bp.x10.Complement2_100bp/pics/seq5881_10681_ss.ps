%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[132.25273132 465.78625488]
[126.84774780 451.78411865]
[122.64971161 437.37405396]
[119.68886566 422.65985107]
[117.98654938 407.74758911]
[117.55503082 392.74465942]
[118.39740753 377.75918579]
[120.50762177 362.89916992]
[123.87046051 348.27160645]
[128.46170044 333.98193359]
[134.24824524 320.13314819]
[141.18843079 306.82495117]
[149.23222351 294.15328979]
[158.32168579 282.20944214]
[168.39132690 271.07946777]
[179.36857605 260.84356689]
[191.17434692 251.57546997]
[182.94554138 239.03407288]
[174.71673584 226.49266052]
[158.64051819 219.45545959]
[157.74310303 201.06317139]
[149.32847595 188.64567566]
[142.97393799 184.87188721]
[140.88262939 175.98007202]
[132.65382385 163.43867493]
[124.42501831 150.89727783]
[116.19620514 138.35588074]
[102.74508667 131.95927429]
[101.64359283 116.17645264]
[90.40368652 113.12592316]
[84.08722687 103.34105682]
[85.93490601 91.84204102]
[77.89373779 79.17951965]
[69.85256195 66.51699066]
[61.81138992 53.85446548]
[53.77021790 41.19194031]
[41.37492371 37.62550354]
[34.93809509 26.91331100]
[37.44291687 15.07893658]
[29.59116173 2.29809427]
[21.73940659 -10.48274803]
[13.88765144 -23.26359177]
[6.03589630 -36.04443359]
[-11.51514721 -35.15334320]
[-27.02096176 -43.23296738]
[-36.25155640 -57.97746658]
[-36.74046707 -75.27700806]
[-28.44317245 -90.36320496]
[-36.67198181 -102.90460205]
[-44.90078735 -115.44600677]
[-58.94049072 -122.73965454]
[-59.45340347 -137.62542725]
[-71.90042114 -141.00692749]
[-78.49602509 -151.62208557]
[-76.16767883 -163.49244690]
[-84.20885468 -176.15496826]
[-92.25002289 -188.81748962]
[-100.29119873 -201.48002625]
[-113.76192474 -194.84776306]
[-127.87076569 -189.71086121]
[-142.45230103 -186.12951660]
[-157.33557129 -184.14575195]
[-172.34608459 -183.78279114]
[-187.30784607 -185.04492188]
[-202.04544067 -187.91732788]
[-216.38606262 -192.36633301]
[-230.16159058 -198.33978271]
[-243.21051025 -205.76763916]
[-255.37982178 -214.56280518]
[-266.52685547 -224.62216187]
[-276.52093506 -235.82778931]
[-285.24484253 -248.04829407]
[-292.59631348 -261.14038086]
[-298.48916626 -274.95059204]
[-302.85430908 -289.31695557]
[-305.64056396 -304.07107544]
[-306.81524658 -319.03994751]
[-306.36459351 -334.04809570]
[-304.29388428 -348.91952515]
[-300.62741089 -363.47988892]
[-295.40814209 -377.55847168]
[-288.69729614 -390.99020386]
[-280.57351685 -403.61764526]
[-271.13211060 -415.29269409]
[-260.48370361 -425.87847900]
[-248.75318909 -435.25088501]
[-236.07809448 -443.30004883]
[-222.60700989 -449.93157959]
[-208.49789429 -455.06771851]
[-193.91615295 -458.64828491]
[-179.03277588 -460.63125610]
[-164.02224731 -460.99340820]
[-149.06054688 -459.73046875]
[-134.32312012 -456.85726929]
[-119.98272705 -452.40747070]
[-106.20752716 -446.43328857]
[-93.15900421 -439.00473022]
[-80.99016571 -430.20892334]
[-69.84366608 -420.14895630]
[-59.85020828 -408.94277954]
[-51.12695312 -396.72183228]
[-43.77618027 -383.62933350]
[-37.88406754 -369.81881714]
[-33.51970291 -355.45220947]
[-30.73425102 -340.69793701]
[-29.56037331 -325.72900391]
[-30.01183128 -310.72088623]
[-32.08333588 -295.84957886]
[-35.75059509 -281.28939819]
[-40.97061157 -267.21109009]
[-47.68218613 -253.77970886]
[-55.80662918 -241.15274048]
[-65.24868774 -229.47819519]
[-75.89765167 -218.89297485]
[-87.62866974 -209.52119446]
[-79.58750153 -196.85867310]
[-71.54632568 -184.19615173]
[-63.50515366 -171.53361511]
[-47.53549576 -164.25784302]
[-46.91200638 -145.85423279]
[-33.46088028 -139.45762634]
[-32.35939026 -123.67481232]
[-24.13058090 -111.13341522]
[-15.90177345 -98.59201050]
[-3.43914771 -100.66593933]
[8.92770290 -97.86203766]
[19.35377312 -90.56238556]
[26.26992798 -79.82246399]
[28.61901474 -67.21862030]
[26.01731873 -54.61678696]
[18.81673813 -43.89619064]
[26.66849327 -31.11534691]
[34.52024841 -18.33450317]
[42.37200546 -5.55366135]
[50.22376251 7.22718143]
[66.08332062 14.73991776]
[66.43273926 33.15076828]
[74.47391510 45.81329346]
[82.51509094 58.47581863]
[90.55625916 71.13834381]
[98.59743500 83.80086517]
[113.66068268 91.18157196]
[114.18498993 107.94764709]
[128.22470093 115.24129486]
[128.73760986 130.12705994]
[136.96641541 142.66847229]
[145.19522095 155.20986938]
[153.42402649 167.75126648]
[161.74597168 180.23106384]
[170.16059875 192.64855957]
[182.65658569 195.84436035]
[189.40950012 206.36015320]
[187.25813293 218.26385498]
[195.48693848 230.80526733]
[203.71575928 243.34666443]
[216.91766357 236.20640564]
[230.67756653 230.21148682]
[244.89630127 225.40510559]
[259.47143555 221.82186890]
[274.29794312 219.48760986]
[289.26898193 218.41915894]
[304.27670288 218.62419128]
[319.21298218 220.10122681]
[333.97018433 222.83964539]
[348.44195557 226.81971741]
[362.52410889 232.01274109]
[376.11508179 238.38131714]
[389.11700439 245.87956238]
[401.43621826 254.45344543]
[412.98388672 264.04119873]
[423.67687988 274.57369995]
[433.43811035 285.97512817]
[442.19726562 298.16326904]
[449.89123535 311.05035400]
[456.46456909 324.54348755]
[461.86990356 338.54550171]
[466.06829834 352.95547485]
[469.02954102 367.66958618]
[470.73223877 382.58181763]
[471.16415405 397.58471680]
[470.32214355 412.57022095]
[468.21231079 427.43029785]
[464.84985352 442.05795288]
[460.25900269 456.34771729]
[454.47280884 470.19668579]
[447.53295898 483.50503540]
[439.48950195 496.17691040]
[430.40032959 508.12100220]
[420.33099365 519.25122070]
[409.35400391 529.48742676]
[397.54846191 538.75579834]
[384.99945068 546.98962402]
[371.79733276 554.12951660]
[358.03729248 560.12408447]
[343.81842041 564.93011475]
[329.24319458 568.51300049]
[314.41665649 570.84686279]
[299.44555664 571.91491699]
[284.43783569 571.70953369]
[269.50161743 570.23205566]
[254.74449158 567.49328613]
[240.27279663 563.51281738]
[226.19079590 558.31945801]
[212.59997559 551.95050049]
[199.59823608 544.45196533]
[187.27926636 535.87774658]
[175.73182678 526.28973389]
[165.03912354 515.75689697]
[155.27818298 504.35525513]
[146.51934814 492.16687012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 155]
[18 154]
[19 153]
[21 150]
[22 149]
[24 148]
[25 147]
[26 146]
[27 145]
[29 143]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[39 135]
[40 134]
[41 133]
[42 132]
[43 131]
[48 124]
[49 123]
[50 122]
[52 120]
[55 118]
[56 117]
[57 116]
[58 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
