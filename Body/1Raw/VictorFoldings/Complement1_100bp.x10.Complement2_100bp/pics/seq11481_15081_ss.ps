%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[46.91313553 571.26562500]
[41.71577835 557.16284180]
[38.73221970 542.43194580]
[38.03239822 527.41827393]
[39.63271713 512.47375488]
[43.49566269 497.94866943]
[49.53068542 484.18353271]
[57.59630966 471.50100708]
[67.50347137 460.19842529]
[79.01992798 450.54071045]
[91.87572479 442.75424194]
[105.76949310 437.02154541]
[102.22982025 422.44519043]
[98.69014740 407.86880493]
[95.15047455 393.29241943]
[91.61080170 378.71606445]
[88.07112885 364.13967896]
[84.53145599 349.56329346]
[80.99178314 334.98693848]
[77.50441742 349.57589722]
[70.09815979 362.61996460]
[59.35711288 373.09039307]
[46.12834930 380.16143799]
[31.45514870 383.27548218]
[16.49470139 382.18688965]
[2.42684889 376.98156738]
[-9.63895702 368.06997681]
[-18.75115776 356.15493774]
[-24.19112778 342.17614746]
[-25.52984810 327.23602295]
[-22.66173935 312.51275635]
[-15.81299591 299.16754150]
[-5.52373600 288.25283813]
[7.39458513 280.62939453]
[21.92317581 276.89843750]
[36.91624832 277.35418701]
[51.19139099 281.96075439]
[63.62280273 290.35479736]
[73.23009491 301.87432861]
[79.25652313 315.61425781]
[80.14933777 300.64083862]
[81.04215240 285.66744995]
[81.93496704 270.69403076]
[74.96892548 257.52880859]
[83.51390839 244.21362305]
[84.40672302 229.24021912]
[85.29954529 214.26681519]
[86.19235992 199.29341125]
[87.08517456 184.32000732]
[87.97798920 169.34660339]
[88.87080383 154.37318420]
[89.76361847 139.39978027]
[90.65644073 124.42637634]
[91.54925537 109.45297241]
[84.04318237 122.43984985]
[73.46926117 133.07902527]
[60.52880478 140.66484070]
[46.08011627 144.69416809]
[31.08152580 144.89974976]
[16.52783394 141.26792908]
[3.38433409 134.03962708]
[-7.47721195 123.69425201]
[-15.33639717 110.91797638]
[-19.67194939 96.55820465]
[-20.19630623 81.56737518]
[-16.87469101 66.93976593]
[-9.92741489 53.64558411]
[0.18473706 42.56657791]
[12.79106045 34.43758011]
[27.05542374 29.79775620]
[42.03172302 28.95485115]
[56.72663116 31.96477318]
[70.16548920 38.62788010]
[81.45695496 48.50223923]
[89.85208893 60.93291092]
[94.79409027 75.09542084]
[95.95489502 90.05554199]
[101.61767578 76.16551971]
[107.28046417 62.27548981]
[112.83969116 48.34368896]
[118.29505157 34.37089157]
[123.75040436 20.39809418]
[112.56710052 8.57998562]
[107.67468262 -6.87665939]
[110.00421906 -22.86207390]
[119.03913116 -36.18326187]
[132.92858887 -44.20177841]
[148.86653137 -45.35624313]
[154.11325073 -59.40871429]
[159.35995483 -73.46118164]
[164.60667419 -87.51365662]
[169.53826904 -101.67979431]
[174.15228271 -115.95252228]
[178.76629639 -130.22526550]
[183.38029480 -144.49798584]
[187.99430847 -158.77072144]
[192.60832214 -173.04345703]
[179.22987366 -179.90010071]
[167.12464905 -188.81410217]
[156.60618591 -199.55459595]
[147.94694519 -211.84335327]
[141.37121582 -225.36207581]
[137.04931641 -239.76060486]
[135.09321594 -254.66596985]
[135.55357361 -269.69207764]
[138.41847229 -284.44973755]
[143.61367798 -298.55670166]
[151.00465393 -311.64752197]
[160.39993286 -323.38314819]
[171.55616760 -333.45959473]
[184.18437195 -341.61584473]
[197.95747375 -347.64062500]
[212.51867676 -351.37789917]
[227.49084473 -352.73086548]
[242.48614502 -351.66448975]
[257.11614990 -348.20635986]
[271.00195312 -342.44604492]
[283.78384399 -334.53280640]
[295.13073730 -324.67153931]
[304.74871826 -313.11773682]
[312.38870239 -300.17065430]
[317.85272217 -286.16564941]
[320.99932861 -271.46548462]
[321.74694824 -256.45089722]
[320.07626343 -241.51086426]
[316.03051758 -227.03231812]
[309.71450806 -213.39031982]
[301.29187012 -200.93820190]
[290.98071289 -189.99851990]
[279.04818726 -180.85464478]
[265.80331421 -173.74340820]
[251.58920288 -168.84901428]
[236.77401733 -166.29824829]
[221.74150085 -166.15718079]
[206.88105774 -168.42944336]
[202.26704407 -154.15672302]
[197.65303040 -139.88398743]
[193.03903198 -125.61125183]
[188.42501831 -111.33851624]
[183.81100464 -97.06578064]
[185.08227539 -93.77697754]
[184.82373047 -89.70903015]
[182.68653870 -85.58766174]
[178.65914917 -82.26693726]
[173.41242981 -68.21446991]
[168.16571045 -54.16199493]
[162.91899109 -40.10952377]
[173.00415039 -30.58282852]
[178.71458435 -17.89177322]
[179.15802002 -3.93889785]
[174.23454285 9.17025185]
[164.65653992 19.44485855]
[151.84597778 25.31116104]
[137.72320557 25.85345268]
[132.26785278 39.82624817]
[126.81249237 53.79904938]
[127.30806732 61.17306900]
[121.17049408 67.93827820]
[115.50770569 81.82830048]
[109.84491730 95.71833038]
[106.52265930 110.34578705]
[105.62984467 125.31919861]
[104.73703003 140.29260254]
[103.84421539 155.26600647]
[102.95139313 170.23941040]
[102.05857849 185.21281433]
[101.16576385 200.18621826]
[100.27294922 215.15963745]
[99.38013458 230.13304138]
[98.48731995 245.10644531]
[105.38949585 259.34268188]
[96.90837860 271.58685303]
[96.01555634 286.56027222]
[95.12274170 301.53366089]
[94.22992706 316.50708008]
[95.56816101 331.44726562]
[99.10783386 346.02362061]
[102.64750671 360.60000610]
[106.18717957 375.17639160]
[109.72685242 389.75274658]
[113.26652527 404.32913208]
[116.80619812 418.90551758]
[120.34587097 433.48187256]
[135.32142639 432.20404053]
[150.31654358 433.22729492]
[164.97969055 436.52764893]
[178.96716309 442.02777100]
[191.95106506 449.59869385]
[203.62701416 459.06295776]
[213.72134399 470.19873047]
[221.99742126 482.74490356]
[228.26123047 496.40747070]
[232.36593628 510.86608887]
[234.21533203 525.78186035]
[233.76605225 540.80511475]
[231.02865601 555.58374023]
[226.06727600 569.77124023]
[218.99822998 583.03503418]
[209.98722839 595.06427002]
[199.24549866 605.57690430]
[187.02485657 614.32653809]
[173.61175537 621.10809326]
[159.32060242 625.76251221]
[144.48643494 628.18078613]
[129.45698547 628.30615234]
[114.58453369 626.13568115]
[100.21774292 621.72027588]
[86.69337463 615.16345215]
[74.32846832 606.61889648]
[63.41286850 596.28692627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[40 175]
[41 174]
[42 173]
[43 172]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[77 160]
[78 159]
[79 158]
[80 156]
[81 155]
[82 154]
[88 147]
[89 146]
[90 145]
[91 144]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
