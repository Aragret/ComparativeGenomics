%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[3.44807220 616.31951904]
[-6.40110016 627.64648438]
[-17.22597313 638.04498291]
[-28.93938828 647.43127441]
[-41.44703293 655.72973633]
[-54.64820862 662.87365723]
[-68.43661499 668.80541992]
[-82.70124054 673.47735596]
[-97.32722473 676.85174561]
[-112.19682312 678.90148926]
[-127.19029236 679.61010742]
[-142.18692017 678.97180176]
[-157.06596375 676.99182129]
[-171.70761108 673.68603516]
[-185.99398804 669.08105469]
[-199.81005859 663.21398926]
[-213.04457092 656.13208008]
[-225.59100342 647.89233398]
[-237.34829712 638.56103516]
[-248.22180176 628.21343994]
[-258.12399292 616.93280029]
[-266.97509766 604.80993652]
[-274.70388794 591.94244385]
[-281.24810791 578.43395996]
[-286.55508423 564.39318848]
[-290.58209229 549.93328857]
[-293.29666138 535.17059326]
[-294.67700195 520.22399902]
[-294.71197510 505.21383667]
[-293.40127563 490.26095581]
[-290.75549316 475.48577881]
[-286.79589844 461.00723267]
[-281.55438232 446.94192505]
[-275.07315063 433.40310669]
[-267.40438843 420.49975586]
[-258.60986328 408.33578491]
[-248.76034546 397.00912476]
[-237.93515015 386.61096191]
[-226.22145081 377.22506714]
[-213.71354675 368.92694092]
[-200.51216125 361.78344727]
[-186.72357178 355.85208130]
[-172.45880127 351.18060303]
[-157.83270264 347.80664062]
[-142.96305847 345.75732422]
[-127.96956635 345.04919434]
[-112.97295380 345.68792725]
[-98.09397888 347.66839600]
[-83.45243073 350.97463989]
[-69.16619110 355.58004761]
[-55.35030365 361.44754028]
[-48.27319717 348.22201538]
[-41.19609070 334.99649048]
[-42.01326752 320.12432861]
[-28.68025780 311.60717773]
[-21.60315132 298.38165283]
[-22.42032623 283.50949097]
[-9.08731651 274.99237061]
[-15.94140339 264.97253418]
[-17.89653397 252.91807556]
[-14.52110100 241.10675049]
[-6.39666843 231.79690552]
[4.98120308 226.79565430]
[17.47800636 227.10827637]
[24.94574738 214.09931946]
[32.41349030 201.09036255]
[39.88122940 188.08142090]
[47.34897232 175.07246399]
[38.95209122 164.02888489]
[35.38733292 150.57658386]
[37.22481537 136.73811340]
[44.21984863 124.60716248]
[55.34492874 116.03172302]
[68.94055939 112.33267212]
[82.96276093 114.10033417]
[90.62335968 101.20401001]
[90.51309204 95.95979309]
[93.34891510 91.02709961]
[98.70891571 88.04258728]
[106.75009155 75.38006592]
[114.79125977 62.71754074]
[115.45108795 56.13907623]
[118.82729340 51.56761551]
[123.26509857 49.80269241]
[131.67971802 37.38519669]
[140.09432983 24.96770287]
[148.50895691 12.55020618]
[156.92356873 0.13271114]
[165.33819580 -12.28478432]
[173.47340393 -24.88709641]
[181.32516479 -37.66793823]
[189.17692566 -50.44878006]
[189.80801392 -66.25739288]
[203.06271362 -73.05165100]
[210.91447449 -85.83249664]
[218.67086792 -98.67144012]
[226.33146667 -111.56776428]
[233.99206543 -124.46408844]
[222.09777832 -133.63378906]
[211.39553833 -144.17036438]
[202.04141235 -155.92016602]
[194.17179871 -168.71182251]
[187.90147400 -182.35881042]
[183.32186890 -196.66212463]
[180.49977112 -211.41316223]
[179.47631836 -226.39682007]
[180.26646423 -241.39457703]
[182.85867310 -256.18774414]
[187.21514893 -270.56057739]
[193.27233887 -284.30349731]
[200.94194031 -297.21609497]
[210.11209106 -309.11001587]
[220.64906311 -319.81185913]
[232.39920044 -329.16555786]
[245.19116211 -337.03469849]
[258.83837891 -343.30450439]
[273.14187622 -347.88357544]
[287.89300537 -350.70513916]
[302.87670898 -351.72799683]
[317.87445068 -350.93728638]
[332.66751099 -348.34454346]
[347.04019165 -343.98754883]
[360.78286743 -337.92980957]
[373.69515991 -330.25973511]
[385.58874512 -321.08914185]
[396.29022217 -310.55175781]
[405.64346313 -298.80126953]
[413.51211548 -286.00903320]
[419.78143311 -272.36157227]
[424.35995483 -258.05792236]
[427.18096924 -243.30667114]
[428.20327759 -228.32293701]
[427.41201782 -213.32524109]
[424.81869507 -198.53225708]
[420.46115112 -184.15974426]
[414.40292358 -170.41728210]
[406.73236084 -157.50527954]
[397.56134033 -145.61203003]
[387.02355957 -134.91098022]
[375.27270508 -125.55815887]
[362.48016357 -117.68998718]
[348.83248901 -111.42118835]
[334.52865601 -106.84318542]
[319.77731323 -104.02274323]
[304.79351807 -103.00097656]
[289.79583740 -103.79280853]
[275.00296021 -106.38667297]
[260.63061523 -110.74475098]
[246.88838196 -116.80348969]
[239.22778320 -103.90716553]
[231.56719971 -91.01084137]
[230.85382080 -83.65469360]
[223.69531250 -77.98074341]
[215.84356689 -65.19989777]
[215.77407837 -50.30545425]
[201.95776367 -42.59702682]
[194.10600281 -29.81618309]
[186.25425720 -17.03534126]
[186.71353149 -13.53942871]
[185.50234985 -9.64737415]
[182.45295715 -6.14672565]
[177.75569153 -3.87016582]
[169.34106445 8.54732990]
[160.92645264 20.96482468]
[152.51182556 33.38232040]
[144.09721375 45.79981613]
[135.68258667 58.21731186]
[127.45378876 70.75871277]
[119.41261292 83.42123413]
[111.37143707 96.08376312]
[103.51968384 108.86460114]
[95.85908508 121.76093292]
[104.96581268 135.24430847]
[107.27258301 151.29182434]
[102.36781311 166.68348694]
[91.28181458 178.35328674]
[76.27081299 183.99984741]
[60.35792160 182.54020691]
[52.89018250 195.54914856]
[45.42243958 208.55810547]
[37.95470047 221.56706238]
[30.48695946 234.57601929]
[38.39289856 250.89329529]
[34.95146179 268.53518677]
[21.72587776 280.47396851]
[4.13821077 282.06945801]
[4.44918394 297.88763428]
[-8.37762451 305.45877075]
[-15.45472908 318.68429565]
[-15.14375591 334.50244141]
[-27.97056389 342.07360840]
[-35.04766846 355.29913330]
[-42.12477493 368.52465820]
[-29.57810211 376.76400757]
[-17.82051849 386.09490967]
[-6.94669104 396.44216919]
[2.95582962 407.72253418]
[11.80731201 419.84512329]
[19.53648758 432.71237183]
[26.08112526 446.22067261]
[31.38852882 460.26126099]
[35.41596603 474.72106934]
[38.13101196 489.48367310]
[39.51180649 504.43023682]
[39.54722595 519.44036865]
[38.23698807 534.39331055]
[35.59164810 549.16857910]
[31.63249779 563.64721680]
[26.39141655 577.71270752]
[19.91060448 591.25170898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 193]
[52 192]
[53 191]
[55 189]
[56 188]
[58 186]
[64 182]
[65 181]
[66 180]
[67 179]
[68 178]
[75 172]
[76 171]
[79 170]
[80 169]
[81 168]
[84 167]
[85 166]
[86 165]
[87 164]
[88 163]
[89 162]
[90 158]
[91 157]
[92 156]
[94 154]
[95 153]
[96 151]
[97 150]
[98 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
