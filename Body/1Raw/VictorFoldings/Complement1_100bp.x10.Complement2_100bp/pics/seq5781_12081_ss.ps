%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[99.85920715 521.62976074]
[85.90685272 527.16265869]
[71.53050232 531.47564697]
[56.83660126 534.53680420]
[41.93394089 536.32348633]
[26.93285942 536.82244873]
[11.94441605 536.02996826]
[-2.92041469 533.95190430]
[-17.55157852 530.60369873]
[-31.84074783 526.01013184]
[-45.68212891 520.20513916]
[-58.97324753 513.23181152]
[-71.61569214 505.14169312]
[-83.51586914 495.99472046]
[-94.58566284 485.85858154]
[-104.74311829 474.80834961]
[-113.91304016 462.92584229]
[-122.02752686 450.29901123]
[-129.02650452 437.02139282]
[-134.85815430 423.19122314]
[-139.47929382 408.91094971]
[-142.85571289 394.28625488]
[-144.96241760 379.42547607]
[-145.78381348 364.43856812]
[-145.31381226 349.43655396]
[-143.55587769 334.53048706]
[-140.52305603 319.83071899]
[-136.23779297 305.44607544]
[-130.73179626 291.48306274]
[-124.04585266 278.04507446]
[-116.22945404 265.23159790]
[-107.34047699 253.13748169]
[-97.44472504 241.85229492]
[-86.61547089 231.45956421]
[-74.93288422 222.03625488]
[-62.48347092 213.65214539]
[-49.35939789 206.36927795]
[-35.65783310 200.24159241]
[-21.48021889 195.31445312]
[-6.93152428 191.62432861]
[7.88053513 189.19856262]
[22.84629440 188.05509949]
[37.85494995 188.20240784]
[52.79537964 189.63940430]
[67.55697632 192.35543823]
[71.52906799 177.89091492]
[75.50116730 163.42639160]
[79.47325897 148.96186829]
[83.33757019 134.46818542]
[87.09386444 119.94612122]
[90.85016632 105.42405701]
[93.51596069 90.66284180]
[95.07648468 75.74423981]
[96.63700867 60.82563400]
[98.19753265 45.90702820]
[99.75805664 30.98842239]
[101.31858063 16.06981850]
[91.68898010 6.65252590]
[89.27662659 -6.40086460]
[94.74187469 -18.28417587]
[105.88589478 -24.75259590]
[107.66835785 -39.64631271]
[109.45082092 -54.54003143]
[111.23329163 -69.43374634]
[113.01575470 -84.32746124]
[105.67190552 -94.93079376]
[107.46314240 -107.29911041]
[116.88942719 -114.88011169]
[118.89344025 -129.74563599]
[104.21491241 -132.86943054]
[89.81466675 -137.09439087]
[75.77519226 -142.39633179]
[62.17690659 -148.74487305]
[49.09770203 -156.10366821]
[36.61249924 -164.43055725]
[24.79280853 -173.67784119]
[13.70633221 -183.79255676]
[3.41657686 -194.71676636]
[-6.01752043 -206.38789368]
[-14.54192066 -218.73907471]
[-22.10779572 -231.69960022]
[-28.67181015 -245.19519043]
[-34.19636536 -259.14855957]
[-38.64981461 -273.47979736]
[-42.00664902 -288.10678101]
[-44.24764252 -302.94577026]
[-45.35995865 -317.91174316]
[-45.33722305 -332.91897583]
[-44.17956924 -347.88150024]
[-41.89363098 -362.71362305]
[-38.49249268 -377.33038330]
[-33.99564362 -391.64804077]
[-28.42884064 -405.58462524]
[-21.82396889 -419.06027222]
[-14.21886063 -431.99780273]
[-5.65707874 -444.32312012]
[3.81233573 -455.96560669]
[14.13514233 -466.85858154]
[25.25221062 -476.93966675]
[37.09986496 -486.15109253]
[49.61024094 -494.44012451]
[62.71167755 -501.75924683]
[76.32913208 -508.06655884]
[90.38460541 -513.32592773]
[104.79758453 -517.50726318]
[119.48551941 -520.58654785]
[134.36427307 -522.54620361]
[149.34861755 -523.37493896]
[164.35272217 -523.06811523]
[179.29064941 -521.62738037]
[194.07682800 -519.06097412]
[208.62657166 -515.38372803]
[222.85653687 -510.61660767]
[236.68521118 -504.78692627]
[250.03338623 -497.92810059]
[262.82461548 -490.07940674]
[274.98562622 -481.28579712]
[286.44671631 -471.59765625]
[297.14230347 -461.07046509]
[307.01110840 -449.76449585]
[315.99655151 -437.74456787]
[324.04724121 -425.07949829]
[331.11700439 -411.84182739]
[337.16537476 -398.10739136]
[342.15768433 -383.95486450]
[346.06536865 -369.46530151]
[348.86602783 -354.72171021]
[350.54360962 -339.80853271]
[351.08850098 -324.81118774]
[350.49761963 -309.81558228]
[348.77432251 -294.90759277]
[345.92846680 -280.17266846]
[341.97637939 -265.69512939]
[336.94067383 -251.55798340]
[330.85025024 -237.84216309]
[323.73989868 -224.62623596]
[315.65045166 -211.98591614]
[306.62817383 -199.99359131]
[296.72476196 -188.71795654]
[285.99694824 -178.22360229]
[274.50616455 -168.57064819]
[262.31826782 -159.81436157]
[249.50303650 -152.00492859]
[236.13389587 -145.18705750]
[222.28739929 -139.39982605]
[208.04289246 -134.67636108]
[193.48193359 -131.04371643]
[178.68795776 -128.52270508]
[163.74568176 -127.12778473]
[148.74070740 -126.86692810]
[133.75897217 -127.74163055]
[131.75495911 -112.87609863]
[139.28543091 -97.02495575]
[127.90947723 -82.54499817]
[126.12700653 -67.65128326]
[124.34454346 -52.75756454]
[122.56207275 -37.86384583]
[120.77960968 -22.97012901]
[131.72961426 -10.20548630]
[130.02609253 6.86533308]
[116.23718262 17.63034248]
[114.67665863 32.54894638]
[113.11613464 47.46755219]
[111.55561829 62.38615417]
[109.99509430 77.30476379]
[108.43457031 92.22336578]
[118.49592590 81.09820557]
[132.74124146 76.40024567]
[147.44683838 79.35752106]
[158.76870728 89.19700623]
[163.74732971 103.34667969]
[161.08129883 118.10785675]
[151.46752930 129.62199402]
[137.41903687 134.87933350]
[122.60803986 132.50561523]
[110.90612030 123.12131500]
[105.37223053 109.18035889]
[101.61592865 123.70242310]
[97.85962677 138.22447205]
[98.74031067 147.31636047]
[93.93778229 152.93395996]
[89.96569061 167.39849854]
[85.99359131 181.86302185]
[82.02149963 196.32754517]
[96.09994507 201.53125000]
[109.67893982 207.92596436]
[122.65794373 215.46434021]
[134.94085693 224.09054565]
[146.43675232 233.74072266]
[157.06050110 244.34342957]
[166.73344421 255.82015991]
[175.38398743 268.08593750]
[182.94807434 281.04998779]
[189.36968994 294.61627197]
[194.60131836 308.68438721]
[198.60418701 323.15014648]
[201.34869385 337.90646362]
[202.81449890 352.84411621]
[202.99075317 367.85244751]
[201.87615967 382.82037354]
[199.47897339 397.63708496]
[195.81692505 412.19287109]
[190.91714478 426.37997437]
[184.81588745 440.09332275]
[177.55834961 453.23141479]
[169.19825745 465.69699097]
[159.79750061 477.39773560]
[149.42568970 488.24700928]
[138.15960693 498.16448975]
[126.08266449 507.07678223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 184]
[46 183]
[47 182]
[48 181]
[49 179]
[50 178]
[51 177]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[68 152]
[69 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
