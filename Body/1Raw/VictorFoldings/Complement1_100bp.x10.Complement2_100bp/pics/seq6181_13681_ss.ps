%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[105.60219574 758.54278564]
[90.75215149 756.39208984]
[76.06645203 753.31317139]
[61.60306168 749.31817627]
[47.41905594 744.42291260]
[33.57041931 738.64672852]
[20.11180115 732.01232910]
[7.09631777 724.54595947]
[-5.42466307 716.27709961]
[-17.40172577 707.23828125]
[-28.78760529 697.46533203]
[-39.53736115 686.99670410]
[-49.60857391 675.87371826]
[-58.96149445 664.14038086]
[-67.55921173 651.84283447]
[-75.36779785 639.02972412]
[-82.35642242 625.75164795]
[-88.49752045 612.06085205]
[-93.76684570 598.01153564]
[-98.14360809 583.65905762]
[-101.61052704 569.06011963]
[-104.15393066 554.27227783]
[-105.76377106 539.35388184]
[-106.43370056 524.36383057]
[-106.16107178 509.36135864]
[-104.94696808 494.40557861]
[-102.79617310 479.55554199]
[-99.71717072 464.86984253]
[-95.72212982 450.40649414]
[-90.82680511 436.22250366]
[-85.05051422 422.37390137]
[-78.41605377 408.91531372]
[-70.94961548 395.89987183]
[-62.68066406 383.37893677]
[-53.64183044 371.40191650]
[-43.86878204 360.01608276]
[-33.40010071 349.26638794]
[-22.27709007 339.19522095]
[-10.54365540 329.84237671]
[1.75389850 321.24472046]
[14.56703949 313.43618774]
[27.84519768 306.44763184]
[41.53597260 300.30661011]
[55.58533096 295.03735352]
[69.93782806 290.66067505]
[84.53681183 287.19384766]
[99.32467651 284.65051270]
[114.24306488 283.04074097]
[113.57327271 268.05569458]
[112.90348816 253.07066345]
[112.23370361 238.08563232]
[111.56391907 223.10058594]
[110.89413452 208.11555481]
[109.22259521 193.20898438]
[106.55680084 178.44776917]
[103.89100647 163.68653870]
[94.01498413 152.53694153]
[99.17655182 137.58139038]
[96.51075745 122.82016754]
[93.84496307 108.05895233]
[89.42723083 101.31683350]
[91.25107574 93.05822754]
[88.80535126 78.25895691]
[73.78393555 77.05786896]
[59.49517441 72.29932404]
[46.76829529 64.26405334]
[36.34076309 53.42279434]
[28.81558990 40.40875626]
[24.62644577 25.98059654]
[24.01266479 10.97821140]
[27.00559235 -3.72615457]
[33.42699432 -17.27862358]
[42.89968491 -28.89327049]
[54.86966324 -37.89769363]
[68.63851929 -43.77195358]
[66.19279480 -58.57122421]
[63.74706650 -73.37049866]
[59.26031113 -81.32705688]
[61.37680817 -88.40817261]
[59.15169144 -103.24221802]
[56.92657089 -118.07626343]
[45.24551773 -124.78205109]
[39.64119720 -136.81541443]
[41.95649338 -149.68870544]
[51.12561035 -158.74171448]
[49.12159348 -173.60723877]
[47.11758041 -188.47276306]
[45.11356735 -203.33828735]
[43.10955429 -218.20382690]
[41.10554123 -233.06935120]
[26.15340614 -235.15171814]
[12.31801224 -241.19195557]
[0.62603807 -250.74183655]
[-8.05489349 -263.09271240]
[-13.08060169 -277.32803345]
[-14.07814312 -292.39147949]
[-10.97349548 -307.16525269]
[-3.99704361 -320.55297852]
[6.33351326 -331.56127930]
[19.25157928 -339.37319946]
[33.79854965 -343.40905762]
[48.89493942 -343.36938477]
[63.42049789 -339.25714111]
[76.29733276 -331.37744141]
[86.56990051 -320.31500244]
[93.47589874 -306.89080811]
[96.50286865 -292.10092163]
[95.42617798 -277.04293823]
[90.32572937 -262.83419800]
[81.58000946 -250.52912903]
[69.83801270 -241.04081726]
[55.97106934 -235.07336426]
[57.97508240 -220.20783997]
[59.97909546 -205.34231567]
[61.98310852 -190.47677612]
[63.98712158 -175.61125183]
[65.99113464 -160.74572754]
[79.78877258 -151.12989807]
[82.41439819 -134.17640686]
[71.76062012 -120.30137634]
[73.98573303 -105.46733856]
[76.21085358 -90.63329315]
[78.54634094 -75.81622314]
[80.99206543 -61.01695251]
[83.43778992 -46.21768188]
[98.36450958 -45.08565140]
[112.59506989 -40.41112900]
[125.30091858 -32.46170807]
[135.74118042 -21.69579697]
[143.30584717 -8.73618031]
[147.55146790 5.66600704]
[148.22708130 20.67481422]
[145.28906250 35.41799927]
[138.90396118 49.03771210]
[129.43896484 60.74041367]
[117.44092560 69.84311676]
[103.60462189 75.81323242]
[106.05034637 90.61250305]
[108.60617828 105.39315796]
[111.27197266 120.15437317]
[113.93777466 134.91558838]
[124.00446320 147.12101746]
[118.65222168 161.02075195]
[121.31801605 175.78196716]
[123.98381042 190.54318237]
[131.06257629 177.31854248]
[144.11528015 169.92752075]
[159.09736633 170.66029358]
[171.36648560 179.28981018]
[177.12094116 193.14210510]
[174.57762146 207.92492676]
[164.52461243 219.05763245]
[150.07695007 223.09062195]
[135.71139526 218.77426147]
[125.87917328 207.44577026]
[126.54895782 222.43080139]
[127.21874237 237.41584778]
[127.88852692 252.40087891]
[128.55831909 267.38592529]
[129.22810364 282.37097168]
[144.23060608 282.64334106]
[159.18641663 283.85723877]
[174.03648376 286.00778198]
[188.72221375 289.08654785]
[203.18563843 293.08139038]
[217.36970520 297.97647095]
[231.21839905 303.75256348]
[244.67707825 310.38681030]
[257.69265747 317.85302734]
[270.21371460 326.12179565]
[282.19085693 335.16043091]
[293.57684326 344.93331909]
[304.32672119 355.40182495]
[314.39804077 366.52468872]
[323.75109863 378.25796509]
[332.34893799 390.55538940]
[340.15765381 403.36840820]
[347.14642334 416.64645386]
[353.28765869 430.33712769]
[358.55712891 444.38641357]
[362.93405151 458.73883057]
[366.40112305 473.33776855]
[368.94467163 488.12557983]
[370.55465698 503.04394531]
[371.22476196 518.03393555]
[370.95227051 533.03643799]
[369.73834229 547.99224854]
[367.58767700 562.84234619]
[364.50885010 577.52801514]
[360.51394653 591.99145508]
[355.61877441 606.17547607]
[349.84262085 620.02416992]
[343.20831299 633.48278809]
[335.74200439 646.49829102]
[327.47317505 659.01934814]
[318.43447876 670.99645996]
[308.66156006 682.38238525]
[298.19296265 693.13220215]
[287.07006836 703.20349121]
[275.33673096 712.55645752]
[263.03927612 721.15423584]
[250.22621155 728.96289062]
[236.94812012 735.95159912]
[223.25741577 742.09277344]
[209.20811462 747.36212158]
[194.85566711 751.73895264]
[180.25671387 755.20599365]
[165.46887207 757.74945068]
[150.55050659 759.35937500]
[135.56048584 760.02935791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 145]
[55 144]
[56 143]
[58 141]
[59 140]
[60 139]
[62 138]
[63 137]
[75 125]
[76 124]
[77 123]
[79 122]
[80 121]
[81 120]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
