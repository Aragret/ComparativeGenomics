%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[93.02030182 501.17132568]
[85.12360382 488.36968994]
[79.63981628 474.36367798]
[76.74523926 459.60357666]
[76.53291321 444.56378174]
[79.00965881 429.72784424]
[84.09586334 415.57263184]
[91.62802887 402.55316162]
[101.36402130 391.08798218]
[112.99087524 381.54565430]
[126.13483429 374.23291016]
[140.37336731 369.38485718]
[138.14825439 354.55081177]
[135.92314148 339.71676636]
[126.38346100 328.27807617]
[131.98802185 313.48281860]
[122.44834900 302.04409790]
[128.05291748 287.24887085]
[125.82779694 272.41482544]
[116.28812408 260.97610474]
[121.89268494 246.18086243]
[119.66757202 231.34681702]
[117.44245148 216.51277161]
[115.21733856 201.67872620]
[112.33206177 186.95884705]
[108.79238892 172.38246155]
[105.25271606 157.80609131]
[101.71304321 143.22972107]
[98.17291260 140.02401733]
[96.60898590 134.56039429]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.92872620 60.26211548]
[80.00853729 74.74079132]
[72.21719360 87.55855560]
[61.16916275 97.70453644]
[47.73573303 104.37858582]
[32.97632217 107.05435944]
[18.05491829 105.52083588]
[4.14828491 99.89895630]
[-7.64684105 90.63208008]
[-16.40024757 78.45103455]
[-21.42160416 64.31646729]
[-22.31490707 49.34309006]
[-19.00970459 34.71176529]
[-11.76666069 21.57638168]
[-1.15699041 10.97284889]
[11.98258209 3.73740649]
[26.61581612 0.44067124]
[41.58867264 1.34263754]
[55.72033310 6.37217236]
[67.89630890 15.13262653]
[77.15636444 26.93311310]
[82.77102661 40.84636307]
[84.10926056 25.90617943]
[85.44749451 10.96599388]
[86.56314850 -3.99245954]
[87.45596313 -18.96586609]
[88.34877777 -33.93927002]
[89.24159241 -48.91267776]
[90.13440704 -63.88608170]
[78.28524780 -76.75529480]
[79.38788605 -93.87542725]
[92.27261353 -104.68387604]
[92.94239807 -119.66891479]
[93.61218262 -134.65396118]
[94.28197479 -149.63899231]
[94.95175934 -164.62403870]
[95.62154388 -179.60906982]
[96.29132843 -194.59411621]
[96.96111298 -209.57914734]
[97.63089752 -224.56419373]
[83.39194489 -227.95606995]
[70.02591705 -233.91268921]
[57.99023438 -242.22856140]
[47.69645691 -252.61743164]
[39.49625397 -264.72225952]
[33.66937256 -278.12734985]
[30.41408920 -292.37277222]
[29.84047508 -306.97003174]
[31.96666908 -321.41879272]
[36.71830368 -335.22421265]
[43.93111801 -347.91366577]
[53.35661697 -359.05310059]
[64.67065430 -368.26174927]
[77.48455811 -375.22521973]
[91.35849762 -379.70623779]
[105.81658173 -381.55270386]
[106.70939636 -396.52609253]
[107.60221863 -411.49951172]
[108.49503326 -426.47290039]
[109.38784790 -441.44631958]
[102.48566437 -455.68255615]
[110.96678925 -467.92672729]
[111.85960388 -482.90014648]
[97.76916504 -488.40600586]
[86.07106018 -497.99816895]
[77.91133881 -510.73684692]
[74.08942413 -525.37408447]
[74.97973633 -540.47583008]
[80.49505615 -554.56256104]
[90.09504700 -566.25421143]
[102.83920288 -574.40539551]
[117.47898102 -578.21752930]
[132.58012390 -577.31707764]
[146.66316223 -571.79235840]
[158.34840393 -562.18450928]
[166.49104309 -549.43487549]
[170.29335022 -534.79254150]
[169.38279724 -519.69201660]
[163.84860229 -505.61270142]
[154.23294067 -493.93389893]
[141.47787476 -485.79980469]
[126.83300781 -482.00732422]
[125.94019318 -467.03390503]
[132.90623474 -453.86868286]
[124.36125183 -440.55349731]
[123.46843719 -425.58007812]
[122.57562256 -410.60668945]
[121.68280792 -395.63327026]
[120.78998566 -380.65988159]
[135.69532776 -376.83312988]
[149.57586670 -370.17828369]
[161.90060425 -360.94790649]
[172.19767761 -349.49310303]
[180.07243347 -336.25024414]
[185.22251892 -321.72421265]
[187.44949341 -306.46932983]
[186.66653442 -291.06796265]
[182.90171814 -276.10855103]
[176.29710388 -262.16290283]
[167.10334778 -249.76454163]
[155.67018127 -239.38809204]
[142.43310547 -231.43124390]
[127.89680481 -226.19950867]
[112.61593628 -223.89439392]
[111.94615173 -208.90936279]
[111.27636719 -193.92431641]
[110.60658264 -178.93928528]
[109.93679810 -163.95423889]
[109.26701355 -148.96920776]
[108.59722137 -133.98416138]
[107.92743683 -118.99913025]
[107.25765228 -104.01409149]
[117.19787598 -95.81521606]
[120.65243530 -83.19982910]
[116.14402771 -70.71444702]
[105.10781860 -62.99326706]
[104.21499634 -48.01985931]
[103.32218170 -33.04645538]
[102.42936707 -18.07304955]
[101.53655243 -3.09964371]
[103.98033905 1.00364316]
[103.87240601 6.68566513]
[100.38768005 12.30422783]
[99.04944611 27.24441338]
[97.71121216 42.18459702]
[98.60402679 57.15800476]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.28942108 139.69004822]
[119.82909393 154.26641846]
[123.36876678 168.84278870]
[126.90843964 183.41917419]
[135.61717224 171.20614624]
[150.38768005 168.59234619]
[162.75875854 177.07505798]
[165.64367676 191.79502869]
[157.38983154 204.31996155]
[142.72540283 207.47502136]
[130.05137634 199.45361328]
[132.27648926 214.28765869]
[134.50161743 229.12170410]
[136.72673035 243.95574951]
[146.42556763 256.45547485]
[140.66184998 270.18969727]
[142.88696289 285.02374268]
[152.58578491 297.52346802]
[146.82206726 311.25769043]
[156.52090454 323.75741577]
[150.75718689 337.49163818]
[152.98229980 352.32568359]
[155.20741272 367.15972900]
[170.24174500 367.61685181]
[184.95278931 370.75131226]
[198.86766052 376.46237183]
[211.53904724 384.56643677]
[222.55963135 394.80294800]
[231.57513428 406.84292603]
[238.29574585 420.29925537]
[242.50543213 434.73941040]
[244.06884766 449.69921875]
[242.93577576 464.69775391]
[239.14260864 479.25286865]
[232.81127930 492.89669800]
[224.14532471 505.19064331]
[213.42332458 515.73950195]
[200.98994446 524.20416260]
[187.24485779 530.31256104]
[172.62991333 533.86828613]
[157.61492920 534.75708008]
[142.68257141 532.95031738]
[128.31283569 528.50616455]
[114.96768188 521.56738281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 189]
[13 188]
[14 187]
[16 185]
[18 183]
[19 182]
[21 180]
[22 179]
[23 178]
[24 177]
[25 170]
[26 169]
[27 168]
[28 167]
[31 166]
[32 165]
[34 163]
[35 162]
[36 161]
[57 160]
[58 159]
[59 158]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
