%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[129.91407776 765.65368652]
[115.28234100 762.33740234]
[100.82496643 758.32867432]
[86.57472229 753.63653564]
[72.56387329 748.27166748]
[58.82416534 742.24621582]
[45.38672256 735.57385254]
[32.28198624 728.26959229]
[19.53964233 720.35015869]
[7.18855429 711.83331299]
[-4.74329567 702.73846436]
[-16.22887993 693.08612061]
[-27.24217796 682.89825439]
[-37.75824356 672.19787598]
[-47.75325394 661.00927734]
[-57.20456314 649.35772705]
[-66.09076691 637.26965332]
[-74.39173126 624.77252197]
[-82.08864594 611.89447021]
[-89.16409302 598.66485596]
[-95.60202789 585.11352539]
[-101.38787079 571.27117920]
[-106.50851440 557.16925049]
[-110.95236206 542.83966064]
[-114.70934296 528.31481934]
[-117.77095032 513.62768555]
[-120.13024902 498.81149292]
[-121.78188324 483.89984131]
[-122.72212982 468.92645264]
[-122.94884491 453.92532349]
[-122.46151733 438.93038940]
[-121.26125336 423.97561646]
[-119.35077667 409.09490967]
[-116.73440552 394.32196045]
[-113.41806793 379.69021606]
[-109.40928650 365.23287964]
[-104.71713257 350.98263550]
[-99.35224152 336.97180176]
[-93.32675934 323.23208618]
[-86.65434265 309.79467773]
[-79.35010529 296.68994141]
[-71.43059540 283.94763184]
[-62.91374207 271.59655762]
[-53.81885147 259.66473389]
[-44.16652298 248.17916870]
[-33.97862244 237.16589355]
[-23.27822495 226.64985657]
[-12.08957481 216.65486145]
[-0.43801606 207.20358276]
[11.65005589 198.31741333]
[24.14725876 190.01647949]
[37.02528000 182.31958008]
[50.25494766 175.24417114]
[63.80629730 168.80625916]
[77.64862061 163.02044678]
[91.75057220 157.89984131]
[106.08019257 153.45602417]
[102.32389069 138.93395996]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[73.57681274 68.29940033]
[78.67259979 51.50654984]
[74.48558807 37.10276794]
[70.29857635 22.69898415]
[66.11156464 8.29520226]
[61.92455292 -6.10857964]
[57.73754120 -20.51236153]
[42.93416977 -17.99086571]
[27.93985939 -17.17329788]
[12.95009232 -18.07031441]
[-1.83970940 -20.67022324]
[-16.23673058 -24.93912888]
[-30.05327606 -30.82137871]
[-43.10921860 -38.24028015]
[-55.23434830 -47.09912109]
[-66.27058411 -57.28239822]
[-76.07405853 -68.65736389]
[-84.51694489 -81.07570648]
[-91.48918915 -94.37554169]
[-96.89988708 -108.38347626]
[-100.67849731 -122.91687775]
[-102.77576447 -137.78628540]
[-103.16433716 -152.79783630]
[-101.83915710 -167.75584412]
[-98.81749725 -182.46527100]
[-94.13874817 -196.73435974]
[-87.86391449 -210.37710571]
[-80.07479858 -223.21560669]
[-70.87294769 -235.08251953]
[-60.37832260 -245.82313538]
[-48.72774506 -255.29740906]
[-36.07310486 -263.38183594]
[-22.57938385 -269.97100830]
[-8.42249680 -274.97903442]
[6.21299124 -278.34060669]
[21.13627815 -280.01193237]
[36.15280533 -279.97119141]
[51.06680298 -278.21893311]
[65.68383789 -274.77798462]
[79.81334686 -269.69323730]
[93.27111816 -263.03094482]
[105.88170624 -254.87797546]
[117.48070526 -245.34062195]
[127.91690063 -234.54324341]
[137.05422974 -222.62657166]
[144.77357483 -209.74598694]
[150.97430420 -196.06941223]
[155.57556152 -181.77513123]
[158.51736450 -167.04953003]
[159.76136780 -152.08456421]
[159.29135132 -137.07533264]
[157.11344910 -122.21752930]
[153.25602722 -107.70484161]
[147.76940918 -93.72647095]
[140.72511292 -80.46466064]
[132.21496582 -68.09230804]
[122.34992981 -56.77070236]
[111.25859833 -46.64744949]
[99.08558655 -37.85452652]
[85.98957825 -30.50657082]
[72.14132690 -24.69937325]
[76.32833862 -10.29559135]
[80.51535034 4.10819101]
[84.70235443 18.51197243]
[88.88936615 32.91575623]
[93.07637787 47.31953812]
[103.52295685 53.41835785]
[107.12910461 65.38412476]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[116.84594727 135.17765808]
[120.60224915 149.69972229]
[135.28936768 146.63801575]
[150.10554504 144.27862549]
[165.01719666 142.62687683]
[179.99053955 141.68653870]
[194.99168396 141.45971680]
[209.98661804 141.94694519]
[224.94139099 143.14710999]
[239.82212830 145.05747986]
[254.59509277 147.67375183]
[269.22683716 150.98999023]
[283.68423462 154.99867249]
[297.93450928 159.69073486]
[311.94537354 165.05552673]
[325.68511963 171.08091736]
[339.12258911 177.75323486]
[352.22735596 185.05738831]
[364.96972656 192.97682190]
[377.32086182 201.49357605]
[389.25274658 210.58839417]
[400.73837280 220.24064636]
[411.75173950 230.42846680]
[422.26785278 241.12879944]
[432.26290894 252.31738281]
[441.71426392 263.96887207]
[450.60052490 276.05688477]
[458.90155029 288.55401611]
[466.59851074 301.43200684]
[473.67401123 314.66162109]
[480.11203003 328.21292114]
[485.89791870 342.05520630]
[491.01861572 356.15713501]
[495.46255493 370.48672485]
[499.21960449 385.01153564]
[502.28125000 399.69866943]
[504.64062500 414.51483154]
[506.29232788 429.42648315]
[507.23263550 444.39984131]
[507.45941162 459.40097046]
[506.97216797 474.39590454]
[505.77197266 489.35067749]
[503.86157227 504.23141479]
[501.24526978 519.00439453]
[497.92898560 533.63610840]
[493.92025757 548.09350586]
[489.22817993 562.34375000]
[483.86334229 576.35461426]
[477.83795166 590.09436035]
[471.16558838 603.53179932]
[463.86138916 616.63653564]
[455.94195557 629.37890625]
[447.42514038 641.73004150]
[438.33032227 653.66186523]
[428.67803955 665.14752197]
[418.49017334 676.16082764]
[407.78982544 686.67687988]
[396.60122681 696.67193604]
[384.94970703 706.12329102]
[372.86169434 715.00952148]
[360.36453247 723.31048584]
[347.48654175 731.00744629]
[334.25689697 738.08294678]
[320.70556641 744.52087402]
[306.86328125 750.30676270]
[292.76135254 755.42742920]
[278.43176270 759.87133789]
[263.90692139 763.62835693]
[249.21978760 766.69000244]
[234.40361023 769.04931641]
[219.49195862 770.70098877]
[204.51860046 771.64123535]
[189.51745605 771.86798096]
[174.52252197 771.38073730]
[159.56774902 770.18048096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 137]
[58 136]
[59 135]
[60 134]
[61 132]
[62 131]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[69 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
