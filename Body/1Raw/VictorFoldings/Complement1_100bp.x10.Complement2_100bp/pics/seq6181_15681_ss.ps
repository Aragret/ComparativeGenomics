%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[19.76130486 588.56365967]
[21.41267967 603.54266357]
[19.56455231 618.49865723]
[14.31659126 632.62506104]
[5.95181179 645.16009521]
[-5.07868433 655.42773438]
[-18.18003654 662.87432861]
[-32.64570236 667.09820557]
[-47.69557190 667.87158203]
[-62.51802063 665.15283203]
[-76.31369781 659.08850098]
[-88.33860779 650.00567627]
[-97.94428253 638.39410400]
[-104.61267853 624.88006592]
[-107.98419189 610.19232178]
[-107.87699127 595.12298584]
[-104.29686737 580.48474121]
[-97.43688965 567.06689453]
[-87.66699982 555.59320068]
[-75.51408386 546.68237305]
[-61.63353348 540.81488037]
[-46.77390671 538.30725098]
[-31.73656464 539.29467773]
[-27.33556557 524.95483398]
[-22.93456841 510.61502075]
[-18.53356934 496.27517700]
[-14.13257217 481.93530273]
[-9.83844852 467.56311035]
[-5.65143728 453.15933228]
[-1.46442592 438.75555420]
[2.72258544 424.35174561]
[6.90959644 409.94796753]
[11.09660816 395.54418945]
[7.21946383 381.16305542]
[18.50132179 370.07116699]
[17.02704430 365.52853394]
[18.39077187 360.01153564]
[23.03336906 355.30432129]
[27.64737701 341.03158569]
[32.26138687 326.75885010]
[36.87539673 312.48611450]
[41.48940659 298.21337891]
[34.50011444 285.11050415]
[38.97605515 270.57019043]
[52.76694870 263.32803345]
[57.38095856 249.05528259]
[61.99496841 234.78256226]
[53.70473862 220.15002441]
[58.66005325 203.72566223]
[74.26213074 195.81399536]
[78.66313171 181.47415161]
[83.06412506 167.13430786]
[86.16823578 152.45899963]
[87.95069885 137.56527710]
[81.78061676 124.00875854]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[91.52564240 42.58247757]
[100.72051239 30.86481667]
[94.67792511 16.24299431]
[103.87279510 4.52533388]
[104.20777130 -10.47092533]
[103.09212494 -25.42937851]
[94.34984589 -38.61585236]
[101.11910248 -51.88334656]
[100.00345612 -66.84180450]
[98.88780975 -81.80025482]
[95.12879181 -90.12537384]
[97.86859131 -96.98943329]
[96.97577667 -111.96283722]
[96.08296204 -126.93624115]
[95.19014740 -141.90965271]
[94.29733276 -156.88305664]
[93.40451050 -171.85646057]
[92.51169586 -186.82986450]
[89.63584900 -191.18608093]
[88.80192566 -195.75311279]
[89.74830627 -199.71789551]
[91.92855835 -202.48896790]
[91.70523071 -217.48730469]
[77.41686249 -220.38508606]
[64.05196381 -226.19515991]
[52.19669342 -234.65998840]
[42.37041092 -245.40559387]
[35.00295258 -257.95819092]
[30.41581345 -271.76501465]
[28.80811691 -286.21871948]
[30.24798012 -300.68399048]
[34.66962814 -314.52557373]
[41.87638855 -327.13616943]
[51.54945374 -337.96301270]
[63.26196671 -346.53207397]
[76.49786377 -352.46899414]
[90.67462158 -355.51519775]
[90.67462158 -370.51519775]
[90.67462158 -385.51519775]
[76.90074921 -392.09115601]
[67.35082245 -403.99752808]
[63.92098618 -418.87030029]
[67.29222870 -433.75643921]
[76.79519653 -445.70034790]
[90.54306030 -452.33047485]
[105.80617523 -452.33047485]
[119.55404663 -445.70034790]
[129.05700684 -433.75643921]
[132.42825317 -418.87030029]
[128.99841309 -403.99752808]
[119.44848633 -392.09115601]
[105.67462158 -385.51519775]
[105.67462158 -370.51519775]
[105.67462158 -355.51519775]
[120.76090240 -352.16430664]
[134.73323059 -345.54507446]
[146.89303589 -335.98504639]
[156.63166809 -323.95883179]
[163.46073914 -310.06457520]
[167.03671265 -294.99426270]
[167.17814636 -279.49914551]
[163.87486267 -264.35244751]
[157.28869629 -250.31063843]
[147.74549866 -238.07569885]
[135.71902466 -228.26007080]
[121.80744171 -221.35595703]
[106.70356750 -217.71063232]
[106.92689514 -202.71229553]
[107.48510742 -187.72268677]
[108.37792206 -172.74928284]
[109.27073669 -157.77586365]
[110.16355133 -142.80245972]
[111.05636597 -127.82905579]
[111.94918060 -112.85565186]
[112.84200287 -97.88224792]
[113.84626007 -82.91590118]
[114.96190643 -67.95745087]
[116.07756042 -52.99899673]
[124.74003601 -40.88245010]
[118.05057526 -26.54502678]
[119.16622925 -11.58657455]
[126.04624176 -24.91568947]
[137.70178223 -34.35753632]
[152.16867065 -38.32099152]
[167.00900269 -36.13814926]
[179.72189331 -28.17685509]
[188.16502380 -15.77872658]
[190.91555786 -1.03306508]
[187.51000977 13.57522583]
[178.52223206 25.58439064]
[165.46685791 32.97067642]
[150.54394531 34.48936462]
[136.26824951 29.88452721]
[125.04548645 19.93216133]
[118.76651764 6.30779982]
[124.93659973 19.86432457]
[115.61422729 32.64728165]
[121.78430939 46.20380783]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[112.03929138 127.63008881]
[102.84442139 139.34774780]
[101.06195068 154.24147034]
[110.63143921 142.69049072]
[124.22870636 136.35690308]
[139.22831726 136.46359253]
[152.73411560 142.98997498]
[162.13830566 154.67591858]
[165.62510681 169.26502991]
[162.52127075 183.94038391]
[153.42610168 195.86840820]
[140.09571838 202.74598694]
[125.10403442 203.24516296]
[111.34568787 197.26956177]
[101.47720337 185.97296143]
[97.40397644 171.53529358]
[93.00297546 185.87515259]
[88.60197449 200.21499634]
[96.24032593 211.30870056]
[96.09679413 224.58235168]
[88.44782257 235.19250488]
[76.26770020 239.39656067]
[71.65369415 253.66929626]
[67.03968048 267.94201660]
[73.98146057 281.88653564]
[69.09887695 296.29541016]
[55.76213837 302.82739258]
[51.14812851 317.10012817]
[46.53411865 331.37286377]
[41.92011261 345.64559937]
[37.30610275 359.91833496]
[32.90510178 374.25817871]
[36.48276520 389.66955566]
[25.50038910 399.73120117]
[21.31337929 414.13497925]
[17.12636757 428.53875732]
[12.93935585 442.94253540]
[8.75234509 457.34634399]
[4.56533384 471.75012207]
[5.17492580 480.86416626]
[0.20727517 486.33630371]
[-4.19372272 500.67614746]
[-8.59472084 515.01599121]
[-12.99571896 529.35583496]
[-17.39671707 543.69567871]
[-4.39438009 551.31384277]
[6.50019693 561.72558594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[35 195]
[38 194]
[39 193]
[40 192]
[41 191]
[42 190]
[45 187]
[46 186]
[47 185]
[50 181]
[51 180]
[52 179]
[53 166]
[54 165]
[56 163]
[58 161]
[59 160]
[60 159]
[62 157]
[64 155]
[65 141]
[66 140]
[68 138]
[69 137]
[70 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[82 128]
[83 127]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
