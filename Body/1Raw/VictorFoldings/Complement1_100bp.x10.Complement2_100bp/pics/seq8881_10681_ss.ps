%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[139.28210449 378.41079712]
[132.56419373 364.99429321]
[126.65287018 351.20336914]
[121.56892395 337.08648682]
[117.33020020 322.69323730]
[113.95159149 308.07412720]
[111.44495392 293.28054810]
[109.81911469 278.36447144]
[109.07976532 263.37826538]
[109.22950745 248.37458801]
[110.26781464 233.40612793]
[112.19104767 218.52545166]
[114.99244690 203.78486633]
[118.66216278 189.23611450]
[123.18731689 174.93031311]
[128.55201721 160.91770935]
[134.73739624 147.24752808]
[141.72175598 133.96777344]
[128.88282776 126.21138763]
[116.04387665 118.45499420]
[103.20494080 110.69860840]
[90.30860901 103.03800964]
[77.35561371 95.47363281]
[64.40261841 87.90924835]
[51.44961548 80.34487152]
[38.49661636 72.78049469]
[30.04381561 85.17948151]
[20.74669075 96.95861816]
[10.65053844 108.06053162]
[-0.19545355 118.43112183]
[-11.73844433 128.01986694]
[-23.92219734 136.78005981]
[-36.68735504 144.66900635]
[-49.97172165 151.64828491]
[-63.71058273 157.68388367]
[-77.83699799 162.74639893]
[-92.28215027 166.81117249]
[-106.97565460 169.85839844]
[-121.84593201 171.87322998]
[-136.82054138 172.84584045]
[-151.82650757 172.77151489]
[-166.79074097 171.65058899]
[-181.64033508 169.48854065]
[-196.30293274 166.29589844]
[-210.70710754 162.08822632]
[-224.78266907 156.88601685]
[-238.46105957 150.71459961]
[-251.67564392 143.60406494]
[-264.36199951 135.58903503]
[-276.45837402 126.70858002]
[-287.90582275 117.00595093]
[-298.64852905 106.52841949]
[-308.63421631 95.32702637]
[-317.81417847 83.45635986]
[-326.14373779 70.97424316]
[-333.58227539 57.94148636]
[-340.09359741 44.42159271]
[-345.64593506 30.48042107]
[-350.21224976 16.18589783]
[-353.77032471 1.60766208]
[-356.30279541 -13.18325901]
[-357.79730225 -28.11480713]
[-358.24661255 -43.11423492]
[-357.64852905 -58.10846710]
[-356.00592041 -73.02445221]
[-353.32684326 -87.78952026]
[-349.62432861 -102.33174133]
[-344.91641235 -116.58025360]
[-339.22604370 -130.46565247]
[-332.58090210 -143.92028809]
[-325.01342773 -156.87860107]
[-316.56045532 -169.27746582]
[-307.26315308 -181.05647278]
[-297.16683960 -192.15824890]
[-286.32070923 -202.52868652]
[-274.77758789 -212.11726379]
[-262.59368896 -220.87727356]
[-249.82843018 -228.76603699]
[-236.54396057 -235.74513245]
[-222.80502319 -241.78053284]
[-208.67852783 -246.84284973]
[-194.23332214 -250.90740967]
[-179.53976440 -253.95442200]
[-164.66946411 -255.96903992]
[-149.69483948 -256.94143677]
[-134.68887329 -256.86688232]
[-119.72465515 -255.74575806]
[-104.87509918 -253.58349609]
[-90.21254730 -250.39065552]
[-75.80843353 -246.18276978]
[-61.73293686 -240.98034668]
[-48.05463409 -234.80874634]
[-34.84016037 -227.69801331]
[-22.15390015 -219.68281555]
[-10.05765820 -210.80216980]
[1.38963330 -201.09938049]
[12.13220406 -190.62168884]
[22.11771584 -179.42016602]
[31.29752159 -167.54936218]
[39.62689590 -155.06712341]
[47.06525803 -142.03427124]
[53.57637405 -128.51428223]
[59.12851334 -114.57302856]
[63.69463348 -100.27843475]
[67.25248718 -85.70014954]
[69.78473663 -70.90919495]
[71.27904510 -55.97762680]
[71.72814178 -40.97819138]
[71.12982941 -25.98396683]
[69.48703003 -11.06800461]
[66.80773163 3.69702578]
[63.10500717 18.23918915]
[58.39688873 32.48764038]
[52.70631027 46.37295914]
[46.06099701 59.82749557]
[59.01399612 67.39187622]
[71.96699524 74.95625305]
[84.91999054 82.52062988]
[97.87299347 90.08500671]
[105.86844635 91.10737610]
[110.96133423 97.85966492]
[123.80027008 105.61605835]
[136.63920593 113.37245178]
[149.47814941 121.12883759]
[157.98391724 108.76821899]
[167.20698547 96.93318939]
[177.11499023 85.66533661]
[187.67309570 75.00422668]
[198.84423828 64.98731232]
[210.58917236 55.64977264]
[222.86663818 47.02441406]
[235.63351440 39.14153290]
[248.84495544 32.02881622]
[262.45455933 25.71124458]
[276.41452026 20.21101379]
[290.67578125 15.54744244]
[305.18829346 11.73691082]
[319.90106201 8.79280376]
[334.76239014 6.72546196]
[349.72006226 5.54214859]
[364.72161865 5.24701929]
[379.71426392 5.84111071]
[394.64541626 7.32233620]
[409.46258545 9.68549252]
[424.11373901 12.92227936]
[438.54739380 17.02132797]
[452.71289062 21.96823883]
[466.56042480 27.74563599]
[480.04141235 34.33322525]
[493.10845947 41.70787048]
[505.71566772 49.84366608]
[517.81878662 58.71203232]
[529.37524414 68.28182220]
[540.34448242 78.51941681]
[550.68798828 89.38886261]
[560.36944580 100.85197449]
[569.35473633 112.86848450]
[577.61242676 125.39619446]
[585.11346436 138.39109802]
[591.83154297 151.80754089]
[597.74298096 165.59840393]
[602.82702637 179.71524048]
[607.06591797 194.10847473]
[610.44464111 208.72753906]
[612.95141602 223.52108765]
[614.57739258 238.43716431]
[615.31683350 253.42335510]
[615.16723633 268.42703247]
[614.12902832 283.39550781]
[612.20593262 298.27618408]
[609.40466309 313.01681519]
[605.73510742 327.56558228]
[601.21008301 341.87142944]
[595.84552002 355.88409424]
[589.66021729 369.55432129]
[582.67596436 382.83413696]
[574.91729736 395.67684937]
[566.41143799 408.03741455]
[557.18823242 419.87234497]
[547.28015137 431.14013672]
[536.72192383 441.80114746]
[525.55072021 451.81796265]
[513.80572510 461.15539551]
[501.52816772 469.78063965]
[488.76123047 477.66342163]
[475.54971313 484.77603149]
[461.94006348 491.09347534]
[447.98004150 496.59356689]
[433.71875000 501.25701904]
[419.20620728 505.06744385]
[404.49340820 508.01141357]
[389.63208008 510.07861328]
[374.67434692 511.26181030]
[359.67282104 511.55679321]
[344.68017578 510.96258545]
[329.74905396 509.48123169]
[314.93188477 507.11791992]
[300.28076172 503.88101196]
[285.84713745 499.78186035]
[271.68170166 494.83480835]
[257.83419800 489.05728149]
[244.35328674 482.46957397]
[231.28630066 475.09481812]
[218.67916870 466.95892334]
[206.57614136 458.09045410]
[195.01976013 448.52056885]
[184.05058289 438.28286743]
[173.70716858 427.41333008]
[164.02584839 415.95013428]
[155.04061890 403.93353271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 124]
[19 123]
[20 122]
[21 121]
[22 119]
[23 118]
[24 117]
[25 116]
[26 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
