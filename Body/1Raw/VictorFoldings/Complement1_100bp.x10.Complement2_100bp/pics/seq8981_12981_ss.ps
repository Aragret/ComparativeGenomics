%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[89.18218994 523.37280273]
[80.99568939 510.74087524]
[75.51988220 496.71945190]
[72.97899628 481.88272095]
[73.47708130 466.83822632]
[76.99374390 452.20202637]
[83.38497162 438.57348633]
[92.38905334 426.51068115]
[103.63728333 416.50756836]
[116.66903687 408.97375488]
[130.95068359 404.21777344]
[129.16822815 389.32406616]
[127.38575745 374.43035889]
[125.60329437 359.53662109]
[116.29091644 351.81613159]
[114.68402100 339.42251587]
[122.18492889 328.92968750]
[120.62440491 314.01107788]
[119.06388092 299.09249878]
[108.00555420 285.46603394]
[115.64328766 268.71054077]
[113.86082458 253.81681824]
[112.07835388 238.92309570]
[110.29589081 224.02937317]
[95.25005341 213.60160828]
[92.55825806 195.17155457]
[104.39206696 180.37712097]
[94.85239410 168.93841553]
[100.45695496 154.14317322]
[98.23184204 139.30912781]
[96.00672150 124.47508240]
[93.78160858 109.64103699]
[86.82679749 122.93128204]
[74.21183014 131.04685974]
[59.23423767 131.86639404]
[45.80911636 125.17564392]
[37.44576645 112.72356415]
[36.33034134 97.76509094]
[42.75441742 84.21034241]
[55.03875351 75.60249329]
[69.97225189 74.19161224]
[83.65133667 80.34650421]
[92.50000000 92.45746613]
[92.50000000 77.45746613]
[92.50000000 62.45746613]
[76.95342255 59.44519043]
[62.28999329 53.47766495]
[49.06550980 44.78295898]
[37.78084946 33.69247818]
[28.86301041 20.62832451]
[22.64896584 6.08723879]
[19.37292099 -9.37829304]
[19.15748405 -25.18102837]
[22.00908470 -40.72126389]
[27.81779671 -55.40959930]
[36.36156845 -68.68928528]
[47.31471252 -80.05733490]
[60.26033020 -89.08356476]
[74.70616150 -95.42688751]
[90.10331726 -98.84818268]
[89.65670776 -113.84153748]
[89.21010590 -128.83488464]
[88.76349640 -143.82823181]
[88.31689453 -158.82157898]
[87.87028503 -173.81494141]
[87.42368317 -188.80828857]
[86.97707367 -203.80163574]
[86.53047180 -218.79498291]
[86.08386230 -233.78833008]
[82.93974304 -239.60435486]
[83.17020416 -245.28273010]
[85.85388184 -249.23327637]
[85.85388184 -264.23327637]
[85.18409729 -279.21832275]
[83.84586334 -294.15850830]
[82.50762939 -309.09869385]
[71.24642181 -316.48785400]
[66.36827850 -328.83346558]
[69.44570160 -341.54611206]
[79.13740540 -350.03732300]
[78.02175140 -364.99575806]
[74.26274109 -373.32089233]
[77.00254059 -380.18493652]
[76.10972595 -395.15835571]
[61.14940643 -396.61959839]
[46.60189056 -400.40328979]
[32.82543182 -406.41625977]
[20.15928459 -414.51040649]
[8.91536522 -424.48641968]
[-0.62943643 -436.09863281]
[-8.24007034 -449.06106567]
[-13.72911644 -463.05450439]
[-16.96140480 -477.73440552]
[-17.85733414 -492.73919678]
[-16.39484215 -507.69937134]
[-12.60994720 -522.24658203]
[-6.59585190 -536.02252197]
[1.49933934 -548.68804932]
[11.47627544 -559.93115234]
[23.08926582 -569.47497559]
[36.05233002 -577.08453369]
[50.04624176 -582.57244873]
[64.72638702 -585.80352783]
[79.73125458 -586.69818115]
[94.69132996 -585.23449707]
[109.23822021 -581.44836426]
[123.01368713 -575.43316650]
[135.67849731 -567.33691406]
[146.92077637 -557.35906982]
[156.46365356 -545.74523926]
[164.07215881 -532.78155518]
[169.55888367 -518.78723145]
[172.78875732 -504.10678101]
[173.68220520 -489.10186768]
[172.21725464 -474.14190674]
[168.42994690 -459.59530640]
[162.41358948 -445.82034302]
[154.31629944 -433.15621948]
[144.33750916 -421.91476440]
[132.72294617 -412.37283325]
[119.75862885 -404.76541138]
[105.76380920 -399.27981567]
[91.08312988 -396.05117798]
[91.97594452 -381.07775879]
[92.98020935 -366.11141968]
[94.09585571 -351.15295410]
[107.29668427 -340.73294067]
[108.90856171 -323.65322876]
[97.44781494 -310.43692017]
[98.78604889 -295.49673462]
[100.12428284 -280.55654907]
[110.54836273 -291.34259033]
[125.54319000 -291.73638916]
[136.51905823 -281.51239014]
[137.18847656 -266.52734375]
[127.16799164 -255.36535645]
[112.19777679 -254.42054749]
[100.85388184 -264.23327637]
[100.85388184 -249.23327637]
[101.07720947 -234.23493958]
[101.52381897 -219.24159241]
[101.97042847 -204.24824524]
[102.41703033 -189.25489807]
[102.86363983 -174.26153564]
[103.31024170 -159.26818848]
[103.75685120 -144.27484131]
[104.20345306 -129.28149414]
[104.65006256 -114.28813934]
[105.09666443 -99.29479218]
[119.14276123 -97.18059540]
[132.60661316 -92.64311218]
[145.07347107 -85.82082367]
[156.15901184 -76.92259979]
[165.52127075 -66.22132874]
[172.87118530 -54.04553223]
[177.98144531 -40.76931381]
[180.69363403 -26.80082512]
[180.92301941 -12.56973743]
[178.66133118 1.48597324]
[173.97689819 14.93351364]
[167.01274109 27.35859489]
[157.98210144 38.37819672]
[147.16195679 47.65237045]
[134.88449097 54.89473343]
[121.52695465 59.88131332]
[107.50000000 62.45746613]
[107.50000000 77.45746613]
[107.50000000 92.45746613]
[108.61564636 107.41591644]
[110.84076691 122.24996185]
[113.06587982 137.08399963]
[115.29100037 151.91804504]
[124.98983002 164.41778564]
[119.22611237 178.15199280]
[129.97915649 183.22238159]
[136.87881470 192.75630188]
[138.30474854 204.31747437]
[134.01751709 215.01959229]
[125.18960571 222.24691772]
[126.97207642 237.14062500]
[128.75454712 252.03434753]
[130.53700256 266.92807007]
[140.17561340 275.49896240]
[141.35360718 287.94067383]
[133.98248291 297.53195190]
[135.54301453 312.45056152]
[137.10353088 327.36917114]
[148.26264954 342.01687622]
[140.49700928 357.75415039]
[142.27947998 372.64788818]
[144.06193542 387.54159546]
[145.84440613 402.43530273]
[160.84503174 403.68682861]
[175.28656006 407.93264771]
[188.57763672 414.99893188]
[200.17398071 424.59628296]
[209.60075378 436.33175659]
[216.47192383 449.72473145]
[220.50611877 464.22680664]
[221.53813171 479.24411011]
[219.52571106 494.16174316]
[214.55128479 508.36877441]
[206.81851196 521.28344727]
[196.64407349 532.37695312]
[184.44461060 541.19500732]
[170.71966553 547.37646484]
[156.03126526 550.66827393]
[140.98089600 550.93560791]
[126.18487549 548.16748047]
[112.24906921 542.47729492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 192]
[12 191]
[13 190]
[14 189]
[17 187]
[18 186]
[19 185]
[21 182]
[22 181]
[23 180]
[24 179]
[27 174]
[29 172]
[30 171]
[31 170]
[32 169]
[43 168]
[44 167]
[45 166]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[72 139]
[73 138]
[74 131]
[75 130]
[76 129]
[80 126]
[81 125]
[83 124]
[84 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
