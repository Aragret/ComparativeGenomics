%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[106.90563965 482.65478516]
[92.72093964 487.62878418]
[77.93274689 490.32244873]
[62.90523148 490.66943359]
[48.00846863 488.66122437]
[33.60930252 484.34722900]
[20.06232262 477.83374023]
[7.70113707 469.28109741]
[-3.16984963 458.89993286]
[-12.28292942 446.94595337]
[-19.41368294 433.71343994]
[-24.38651276 419.52832031]
[-27.07895279 404.73992920]
[-27.42470551 389.71237183]
[-25.41525078 374.81579590]
[-21.10007858 360.41696167]
[-14.58544922 346.87051392]
[-6.03179359 334.51004028]
[4.35024691 323.63992310]
[16.30500603 314.52783203]
[29.53808594 307.39816284]
[43.72360992 302.42651367]
[58.51224899 299.73529053]
[73.53981781 299.39077759]
[75.54383087 284.52523804]
[77.54784393 269.65972900]
[79.55185699 254.79418945]
[73.58429718 241.14730835]
[83.09594727 228.50456238]
[84.65647125 213.58595276]
[77.88721466 200.31845093]
[86.62949371 187.13198853]
[87.74514008 172.17352295]
[88.86078644 157.21507263]
[80.40018463 141.84025574]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[95.02529144 57.42491913]
[95.91811371 42.45151138]
[96.81092834 27.47810555]
[97.70374298 12.50469971]
[98.59655762 -2.46870565]
[99.48937225 -17.44211197]
[100.38218689 -32.41551590]
[101.27500153 -47.38892365]
[102.16782379 -62.36232758]
[91.00716400 -52.34036636]
[76.02035522 -51.71136093]
[64.05916595 -60.76287842]
[60.59209442 -75.35668945]
[67.20423126 -88.82070923]
[80.87260437 -94.99935150]
[95.34820557 -91.06784058]
[104.01349640 -78.82181549]
[106.45922089 -93.62108612]
[99.59616089 -104.54176331]
[101.93788147 -116.81775665]
[111.69328308 -123.97029114]
[114.35907745 -138.73150635]
[117.02487183 -153.49272156]
[106.46508789 -164.70866394]
[104.55670929 -179.81532288]
[111.82366180 -192.99316406]
[125.29555511 -199.28968811]
[127.96134949 -214.05090332]
[130.62715149 -228.81211853]
[133.29293823 -243.57333374]
[135.95874023 -258.33456421]
[126.70833588 -246.52650452]
[114.29698944 -238.10281372]
[99.90766144 -233.86639404]
[84.91185760 -234.22102356]
[70.73887634 -239.13290405]
[58.73959351 -248.13386536]
[50.05771255 -260.36599731]
[45.52072906 -274.66339111]
[45.56108093 -289.66333008]
[50.17492294 -303.93612671]
[58.92249298 -316.12136841]
[70.97003174 -325.05764771]
[85.16923523 -329.89318848]
[100.16673279 -330.16711426]
[114.53305817 -325.85336304]
[126.89890289 -317.36300659]
[136.08563232 -305.50534058]
[141.21763611 -291.41058350]
[141.80561829 -276.42098999]
[148.28511047 -289.94934082]
[154.76460266 -303.47769165]
[153.74763489 -319.26617432]
[166.22357178 -327.40249634]
[172.70306396 -340.93084717]
[179.18257141 -354.45919800]
[185.66206360 -367.98754883]
[192.14155579 -381.51589966]
[198.62104797 -395.04425049]
[186.12992859 -403.39605713]
[174.95460510 -413.44058228]
[165.32255554 -424.97332764]
[157.42991638 -437.75955200]
[151.43736267 -451.53887939]
[147.46688843 -466.03082275]
[145.59931946 -480.94030762]
[145.87269592 -495.96380615]
[148.28143311 -510.79550171]
[152.77650452 -525.13336182]
[159.26638794 -538.68560791]
[167.61897278 -551.17620850]
[177.66419983 -562.35089111]
[189.19755554 -571.98223877]
[201.98425293 -579.87408447]
[215.76394653 -585.86578369]
[230.25613403 -589.83538818]
[245.16574097 -591.70202637]
[260.18923950 -591.42767334]
[275.02078247 -589.01806641]
[289.35836792 -584.52209473]
[302.91018677 -578.03137207]
[315.40026855 -569.67797852]
[326.57434082 -559.63208008]
[336.20495605 -548.09814453]
[344.09600830 -535.31097412]
[350.08688354 -521.53088379]
[354.05557251 -507.03845215]
[355.92126465 -492.12872314]
[355.64605713 -477.10525513]
[353.23547363 -462.27386475]
[348.73861694 -447.93652344]
[342.24707031 -434.38513184]
[333.89294434 -421.89556885]
[323.84631348 -410.72210693]
[312.31176758 -401.09219360]
[299.52410889 -393.20193481]
[285.74365234 -387.21194458]
[271.25097656 -383.24414062]
[256.34115601 -381.37936401]
[241.31768799 -381.65551758]
[226.48645020 -384.06701660]
[212.14939880 -388.56472778]
[205.66990662 -375.03640747]
[199.19039917 -361.50805664]
[192.71090698 -347.97970581]
[186.23141479 -334.45135498]
[179.75192261 -320.92300415]
[181.23236084 -306.10217285]
[168.29295349 -296.99819946]
[161.81346130 -283.46984863]
[155.33396912 -269.94149780]
[150.71995544 -255.66876221]
[148.05415344 -240.90754700]
[145.38836670 -226.14633179]
[142.72256470 -211.38510132]
[140.05677795 -196.62388611]
[150.47525024 -186.01289368]
[152.67381287 -171.12564087]
[145.60194397 -157.64074707]
[131.78608704 -150.82693481]
[129.12030029 -136.06571960]
[126.45449829 -121.30449677]
[133.26966858 -105.13290405]
[121.25849152 -91.17535400]
[118.81276703 -76.37608337]
[117.14122772 -61.46951294]
[116.24841309 -46.49610519]
[115.35559845 -31.52270126]
[114.46277618 -16.54929543]
[113.56996155 -1.57588971]
[112.67714691 13.39751625]
[111.78433228 28.37092209]
[110.89151764 43.34432602]
[109.99870300 58.31773376]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[113.82947540 137.74909973]
[112.77758789 150.20210266]
[103.81924438 158.33071899]
[102.70359039 173.28916931]
[101.58794403 188.24763489]
[108.27740479 202.58505249]
[99.61492157 214.70159912]
[101.63835907 218.54342651]
[102.27044678 222.43765259]
[101.66555786 225.94044495]
[100.10636902 228.70368958]
[97.96147919 230.50857544]
[103.78569794 245.21873474]
[94.41738129 256.79818726]
[92.41336823 271.66372681]
[90.40935516 286.52926636]
[88.40534210 301.39477539]
[102.80522156 305.70639038]
[116.35327911 312.21768188]
[128.71588135 320.76828003]
[139.58857727 331.14761353]
[148.70362854 343.10012817]
[155.83656311 356.33142090]
[160.81173706 370.51571655]
[163.50662231 385.30371094]
[163.85484314 400.33117676]
[161.84785461 415.22811890]
[157.53504944 429.62762451]
[151.02265930 443.17514038]
[142.47103882 455.53704834]
[132.09080505 466.40887451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 196]
[25 195]
[26 194]
[27 193]
[29 191]
[30 186]
[32 184]
[33 183]
[34 182]
[36 179]
[37 178]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[57 165]
[58 164]
[61 162]
[62 161]
[63 160]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[90 151]
[91 150]
[92 149]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
