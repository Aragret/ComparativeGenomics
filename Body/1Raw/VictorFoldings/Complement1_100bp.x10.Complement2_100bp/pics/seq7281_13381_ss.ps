%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[86.12382507 651.72271729]
[71.38818359 648.86639404]
[56.96265411 644.71893311]
[42.96012878 639.31274414]
[29.49020767 632.69012451]
[16.65830803 624.90295410]
[4.56486034 616.01220703]
[-6.69548655 606.08734131]
[-17.03460312 595.20617676]
[-26.37157249 583.45379639]
[-34.63331604 570.92218018]
[-41.75517273 557.70941162]
[-47.68140411 543.91894531]
[-52.36563110 529.65863037]
[-55.77119064 515.04016113]
[-57.87142944 500.17791748]
[-58.64990616 485.18820190]
[-58.10053635 470.18835449]
[-56.22761154 455.29574585]
[-53.04579544 440.62692261]
[-48.57998657 426.29675293]
[-42.86513901 412.41732788]
[-35.94598007 399.09732056]
[-27.87666130 386.44094849]
[-18.72033882 374.54727173]
[-8.54867363 363.50939941]
[2.55872536 353.41369629]
[14.51492691 344.33917236]
[27.22635460 336.35687256]
[40.59352112 329.52923584]
[54.51181412 323.90972900]
[68.87229919 319.54232788]
[83.56257629 316.46121216]
[98.46768188 314.69049072]
[98.02108002 299.69714355]
[97.57447052 284.70379639]
[86.59114075 274.70870972]
[85.92462921 259.50967407]
[96.48287964 248.05711365]
[96.03627014 233.06376648]
[95.58966827 218.07041931]
[95.14305878 203.07707214]
[94.69645691 188.08372498]
[94.24984741 173.09036255]
[93.80324554 158.09701538]
[93.35663605 143.10366821]
[84.77018738 134.58314514]
[84.27540588 122.09558868]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[91.42582703 27.91616821]
[91.20249939 12.91783047]
[90.97917175 -2.08050728]
[84.05672455 11.22662163]
[73.23403168 21.61263657]
[59.65324020 27.98147774]
[44.74756622 29.66102791]
[30.09003830 26.47403526]
[17.22750282 18.75683594]
[7.51737213 7.32384157]
[1.98438013 -6.61839676]
[1.21243608 -21.59852028]
[5.28300524 -36.03564072]
[13.76651096 -48.40617752]
[25.76766777 -57.40463257]
[40.01996613 -62.08138275]
[55.01932907 -61.94287491]
[69.18283081 -57.00373077]
[81.01576996 -47.78519058]
[89.26938629 -35.26010132]
[93.07267761 -20.75008202]
[96.61235046 -35.32645798]
[100.15202332 -49.90283203]
[103.69169617 -64.47920990]
[89.71900177 -59.02357483]
[76.66585541 -66.41380310]
[74.15455627 -81.20208740]
[84.03632355 -92.48705292]
[99.02670288 -91.94985199]
[108.07500458 -79.98809814]
[112.68901062 -94.26083374]
[117.30301666 -108.53356171]
[121.91703033 -122.80629730]
[126.53103638 -137.07902527]
[131.14505005 -151.35176086]
[117.47583008 -157.56869507]
[104.60440826 -165.30331421]
[92.69859314 -174.45477295]
[81.91358948 -184.90377808]
[72.39000702 -196.51406860]
[64.25200653 -209.13432312]
[57.60568237 -222.59999084]
[52.53768158 -236.73551941]
[49.11407852 -251.35662842]
[47.37950897 -266.27267456]
[47.35658264 -281.28924561]
[49.04559708 -296.21054077]
[52.42453766 -310.84204102]
[57.44934845 -324.99298096]
[64.05451965 -338.47888184]
[72.15394592 -351.12390137]
[81.64203644 -362.76324463]
[92.39508057 -373.24511719]
[104.27289581 -382.43289185]
[117.12064362 -390.20678711]
[130.77081299 -396.46542358]
[145.04544067 -401.12725830]
[159.75845337 -404.13146973]
[174.71800232 -405.43890381]
[189.72909546 -405.03253174]
[204.59599304 -402.91763306]
[219.12490845 -399.12176514]
[233.12641907 -393.69445801]
[246.41796875 -386.70645142]
[258.82629395 -378.24884033]
[270.18963623 -368.43188477]
[280.35980225 -357.38357544]
[289.20425415 -345.24795532]
[296.60766602 -332.18322754]
[302.47354126 -318.35971069]
[306.72534180 -303.95764160]
[309.30770874 -289.16476440]
[310.18695068 -274.17395020]
[309.35159302 -259.18060303]
[306.81256104 -244.38023376]
[302.60290527 -229.96577454]
[296.77752686 -216.12515259]
[289.41241455 -203.03880310]
[280.60351562 -190.87733459]
[270.46572876 -179.79930115]
[259.13116455 -169.94912720]
[246.74766541 -161.45523071]
[233.47662354 -154.42834473]
[219.49105835 -148.96006775]
[204.97332764 -145.12170410]
[190.11267090 -142.96330261]
[175.10284424 -142.51298523]
[160.13951111 -143.77662659]
[145.41778564 -146.73776245]
[140.80377197 -132.46502686]
[136.18975830 -118.19229126]
[131.57575989 -103.91955566]
[126.96174622 -89.64682007]
[122.34773254 -75.37408447]
[118.26806641 -60.93953705]
[114.72839355 -46.36315918]
[111.18872070 -31.78678513]
[107.64904785 -17.21040916]
[105.97750854 -2.30383492]
[106.20083618 12.69450283]
[106.42416382 27.69284058]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[117.48867035 127.67536163]
[108.34998322 142.65705872]
[108.79659271 157.65040588]
[109.24319458 172.64376831]
[109.68980408 187.63711548]
[110.13641357 202.63046265]
[110.58301544 217.62380981]
[111.02962494 232.61715698]
[111.47622681 247.61050415]
[122.69742584 258.41433716]
[122.93675995 273.62606812]
[112.56781769 284.25720215]
[113.01442719 299.25054932]
[113.46102905 314.24389648]
[128.44511414 315.12429810]
[143.29273987 317.32559204]
[157.88771057 320.83047485]
[172.11579895 325.61160278]
[185.86566162 331.63146973]
[199.02966309 338.84304810]
[211.50479126 347.18981934]
[223.19340515 356.60650635]
[234.00402832 367.01937866]
[243.85203552 378.34698486]
[252.66036987 390.50061035]
[260.36007690 403.38519287]
[266.89089966 416.89984131]
[272.20175171 430.93881226]
[276.25103760 445.39221191]
[279.00704956 460.14694214]
[280.44827271 475.08749390]
[280.56335449 490.09698486]
[279.35147095 505.05789185]
[276.82205200 519.85314941]
[272.99493408 534.36694336]
[267.90002441 548.48571777]
[261.57723999 562.09893799]
[254.07601929 575.10009766]
[245.45512390 587.38739014]
[235.78199768 598.86468506]
[225.13235474 609.44213867]
[213.58953857 619.03698730]
[201.24388123 627.57409668]
[188.19203186 634.98669434]
[174.53611755 641.21679688]
[160.38302612 646.21551514]
[145.84352112 649.94384766]
[131.03140259 652.37261963]
[116.06259155 653.48272705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 175]
[35 174]
[36 173]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[46 163]
[49 161]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[75 152]
[76 151]
[77 150]
[78 149]
[84 148]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
