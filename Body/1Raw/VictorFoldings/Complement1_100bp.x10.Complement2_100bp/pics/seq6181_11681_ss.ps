%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[178.62818909 940.34167480]
[163.85386658 937.73730469]
[149.19891357 934.52856445]
[134.68804932 930.72088623]
[120.34574890 926.32061768]
[106.19618988 921.33526611]
[92.26323700 915.77325439]
[78.57038116 909.64385986]
[65.14070892 902.95745850]
[51.99687576 895.72540283]
[39.16103363 887.95977783]
[26.65483284 879.67370605]
[14.49936104 870.88122559]
[2.71511412 861.59710693]
[-8.67803669 851.83697510]
[-19.66087914 841.61730957]
[-30.21489525 830.95544434]
[-40.32228851 819.86920166]
[-49.96601105 808.37738037]
[-59.12980652 796.49932861]
[-67.79822540 784.25500488]
[-75.95664215 771.66522217]
[-83.59130096 758.75103760]
[-90.68933105 745.53430176]
[-97.23876953 732.03735352]
[-103.22856140 718.28283691]
[-108.64861298 704.29406738]
[-113.48978424 690.09448242]
[-117.74391174 675.70819092]
[-121.40382385 661.15936279]
[-124.46334076 646.47253418]
[-126.91731262 631.67248535]
[-128.76159668 616.78411865]
[-129.99308777 601.83264160]
[-130.60971069 586.84320068]
[-130.61041260 571.84106445]
[-129.99520874 556.85156250]
[-128.76512146 541.89996338]
[-126.92222595 527.01147461]
[-124.46964264 512.21118164]
[-121.41150665 497.52407837]
[-117.75296021 482.97488403]
[-113.50018311 468.58816528]
[-108.66034698 454.38818359]
[-103.24160767 440.39886475]
[-97.25310516 426.64382935]
[-90.70493317 413.14624023]
[-83.60813904 399.92883301]
[-75.97469330 387.01397705]
[-67.81745148 374.42337036]
[-59.15018845 362.17828369]
[-49.98750687 350.29934692]
[-40.34486389 338.80661011]
[-30.23851204 327.71945190]
[-19.68549728 317.05654907]
[-8.70361328 306.83587646]
[2.68862104 297.07470703]
[14.47199631 287.78945923]
[26.62664413 278.99581909]
[39.13206482 270.70858765]
[51.96717834 262.94177246]
[65.11033630 255.70843506]
[78.53937531 249.02079773]
[92.23165894 242.89013672]
[106.16408539 237.32676697]
[120.31317902 232.34010315]
[115.91217804 218.00025940]
[111.51118469 203.66040039]
[107.11018372 189.32055664]
[102.20381165 203.49545288]
[90.93228912 213.39256287]
[76.24197388 216.42481995]
[61.97287369 211.79959106]
[51.85489655 200.72590637]
[48.53285599 186.09838867]
[52.87512970 171.74066162]
[63.74665833 161.40576172]
[78.30564117 157.79524231]
[92.74640656 161.85287476]
[103.29373169 172.51721191]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[81.07386780 76.54434204]
[86.83758545 62.81012344]
[84.61246490 47.97608185]
[69.61885834 46.28668976]
[55.57374191 40.77332687]
[43.43474197 31.81190300]
[34.02951813 20.01342201]
[27.99932861 6.18232632]
[25.75532341 -8.73835945]
[27.45050430 -23.73131752]
[32.96928787 -37.77429962]
[41.93539810 -49.90983963]
[53.73751068 -59.31050873]
[67.57093048 -65.33535767]
[82.49248505 -67.57360077]
[97.48478699 -65.87263489]
[111.52564240 -60.34842682]
[123.65771484 -51.37762833]
[133.05383301 -39.57189178]
[139.07333374 -25.73614120]
[141.30581665 -10.81372738]
[139.59906006 4.17791653]
[134.06942749 18.21663475]
[125.09394836 30.34524536]
[113.28458405 39.73679733]
[99.44651031 45.75096512]
[101.67163086 60.58500671]
[111.21130371 72.02370453]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.12776947 170.29209900]
[121.45002747 184.91955566]
[125.85102844 199.25939941]
[130.25202942 213.59925842]
[134.65303040 227.93910217]
[149.16351318 224.12995911]
[163.81814575 220.91975403]
[178.59220886 218.31390381]
[193.46081543 216.31680298]
[208.39886475 214.93180847]
[223.38117981 214.16127014]
[238.38250732 214.00648499]
[253.37753296 214.46769714]
[268.34097290 215.54415894]
[283.24761963 217.23403931]
[298.07232666 219.53446960]
[312.79006958 222.44160461]
[327.37606812 225.95053101]
[341.80569458 230.05531311]
[356.05465698 234.74905396]
[370.09887695 240.02381897]
[383.91470337 245.87074280]
[397.47885132 252.27992249]
[410.76843262 259.24060059]
[423.76101685 266.74099731]
[436.43475342 274.76849365]
[448.76821899 283.30950928]
[460.74060059 292.34970093]
[472.33178711 301.87380981]
[483.52215576 311.86575317]
[494.29290771 322.30868530]
[504.62582397 333.18502808]
[514.50347900 344.47640991]
[523.90924072 356.16378784]
[532.82727051 368.22747803]
[541.24249268 380.64712524]
[549.14074707 393.40179443]
[556.50866699 406.46997070]
[563.33392334 419.82962036]
[569.60485840 433.45819092]
[575.31103516 447.33276367]
[580.44274902 461.42987061]
[584.99145508 475.72579956]
[588.94934082 490.19641113]
[592.30981445 504.81732178]
[595.06713867 519.56384277]
[597.21679688 534.41119385]
[598.75506592 549.33422852]
[599.67932129 564.30786133]
[599.98809814 579.30682373]
[599.68084717 594.30578613]
[598.75799561 609.27947998]
[597.22125244 624.20269775]
[595.07312012 639.05023193]
[592.31719971 653.79705811]
[588.95819092 668.41827393]
[585.00177002 682.88928223]
[580.45452881 697.18566895]
[575.32421875 711.28332520]
[569.61938477 725.15844727]
[563.34979248 738.78765869]
[556.52593994 752.14794922]
[549.15930176 765.21685791]
[541.26232910 777.97235107]
[532.84832764 790.39282227]
[523.93151855 802.45739746]
[514.52691650 814.14569092]
[504.65032959 825.43804932]
[494.31851196 836.31542969]
[483.54882812 846.75946045]
[472.35943604 856.75250244]
[460.76922607 866.27777100]
[448.79769897 875.31915283]
[436.46508789 883.86138916]
[423.79217529 891.89019775]
[410.80032349 899.39184570]
[397.51144409 906.35388184]
[383.94793701 912.76440430]
[370.13269043 918.61267090]
[356.08898926 923.88885498]
[341.84051514 928.58404541]
[327.41128540 932.69024658]
[312.82565308 936.20062256]
[298.10818481 939.10919189]
[283.28372192 941.41113281]
[268.37725830 943.10247803]
[253.41389465 944.18041992]
[238.41891479 944.64312744]
[223.41757202 944.48986816]
[208.43518066 943.72082520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 125]
[67 124]
[68 123]
[69 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[86 115]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
