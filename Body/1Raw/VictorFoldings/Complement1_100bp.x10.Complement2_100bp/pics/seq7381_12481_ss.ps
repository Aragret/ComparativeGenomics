%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[311.30444336 267.70510864]
[301.65771484 279.18911743]
[291.38769531 290.11923218]
[280.52609253 300.46173096]
[269.10647583 310.18460083]
[257.16418457 319.25781250]
[244.73611450 327.65332031]
[231.86065674 335.34515381]
[218.57763672 342.30953979]
[204.92810059 348.52499390]
[190.95423889 353.97222900]
[176.69923401 358.63449097]
[162.20716858 362.49731445]
[147.52282715 365.54876709]
[132.69158936 367.77944946]
[117.75930023 369.18243408]
[102.77211761 369.75338745]
[87.77636719 369.49053955]
[72.81840515 368.39474487]
[57.94445801 366.46932983]
[43.20050049 363.72027588]
[28.63210678 360.15609741]
[14.28430653 355.78778076]
[0.20144804 350.62884521]
[-13.57293987 344.69525146]
[-26.99628067 338.00527954]
[-40.02708435 330.57968140]
[-52.62507248 322.44137573]
[-64.75130463 313.61550903]
[-76.36830902 304.12936401]
[-87.44016266 294.01226807]
[-97.93265533 283.29550171]
[-107.81334686 272.01217651]
[-117.05170441 260.19717407]
[-125.61916351 247.88700867]
[-133.48925781 235.11973572]
[-140.63763428 221.93481445]
[-147.04223633 208.37300110]
[-152.68324280 194.47622681]
[-157.54321289 180.28741455]
[-161.60713196 165.85044861]
[-164.86244202 151.20994568]
[-167.29908752 136.41114807]
[-168.90953064 121.49980927]
[-169.68878174 106.52201080]
[-169.63444519 91.52406311]
[-168.74668884 76.55230713]
[-167.02824402 61.65303040]
[-164.48443604 46.87228012]
[-161.12312317 32.25574493]
[-156.95471191 17.84860229]
[-151.99205017 3.69538403]
[-146.25050354 -10.16016293]
[-139.74781799 -23.67521095]
[-132.50407410 -36.80798721]
[-124.54169464 -49.51789856]
[-115.88525391 -61.76566315]
[-106.56153870 -73.51341248]
[-96.59934235 -84.72485352]
[-86.02947998 -95.36531830]
[-74.88460541 -105.40191650]
[-63.19918060 -114.80363464]
[-51.00931549 -123.54140472]
[-38.35268784 -131.58822632]
[-25.26842308 -138.91921997]
[-11.79695988 -145.51173401]
[2.02005911 -151.34538269]
[16.13992882 -156.40214539]
[30.51900291 -160.66638184]
[45.11283875 -164.12492371]
[59.87632751 -166.76705933]
[74.76383972 -168.58464050]
[89.72934723 -169.57205200]
[104.72660828 -169.72621155]
[119.70925903 -169.04669189]
[134.63098145 -167.53555298]
[149.44566345 -165.19747925]
[164.10752869 -162.03968811]
[178.57122803 -158.07196045]
[192.79206848 -153.30654907]
[206.72608948 -147.75817871]
[220.33023071 -141.44400024]
[233.56245422 -134.38354492]
[246.38182068 -126.59861755]
[258.74874878 -118.11328888]
[270.62500000 -108.95378876]
[281.97384644 -99.14842987]
[292.76022339 -88.72750854]
[302.95077515 -77.72324371]
[312.51403809 -66.16965485]
[321.42044067 -54.10243607]
[329.64242554 -41.55890274]
[337.15463257 -28.57781792]
[350.53491211 -35.35781097]
[363.91516113 -42.13780212]
[377.29544067 -48.91779327]
[390.67572021 -55.69778442]
[404.05599976 -62.47777557]
[398.22329712 -76.30399323]
[393.36926270 -90.50340271]
[389.51757812 -105.00682068]
[386.68698120 -119.74359894]
[384.89126587 -134.64192200]
[384.13919067 -149.62922668]
[384.43441772 -164.63247681]
[385.77551270 -179.57858276]
[388.15591431 -194.39472961]
[391.56402588 -209.00874329]
[395.98330688 -223.34942627]
[401.39215088 -237.34689331]
[407.76425171 -250.93295288]
[415.06854248 -264.04141235]
[423.26943970 -276.60842896]
[432.32699585 -288.57278442]
[442.19711304 -299.87612915]
[452.83163452 -310.46343994]
[464.17880249 -320.28314209]
[476.18331909 -329.28738403]
[488.78671265 -337.43231201]
[501.92755127 -344.67819214]
[515.54180908 -350.98977661]
[529.56323242 -356.33630371]
[543.92340088 -360.69171143]
[558.55242920 -364.03479004]
[573.37902832 -366.34924316]
[588.33099365 -367.62380981]
[603.33538818 -367.85226440]
[618.31921387 -367.03350830]
[633.20941162 -365.17150879]
[647.93341064 -362.27539062]
[662.41955566 -358.35919189]
[676.59722900 -353.44204712]
[690.39733887 -347.54788208]
[703.75268555 -340.70541382]
[716.59820557 -332.94799805]
[728.87133789 -324.31341553]
[740.51220703 -314.84375000]
[751.46411133 -304.58508301]
[761.67376709 -293.58746338]
[771.09136963 -281.90444946]
[779.67108154 -269.59292603]
[787.37109375 -256.71292114]
[794.15386963 -243.32716370]
[799.98638916 -229.50085449]
[804.84020996 -215.30137634]
[808.69171143 -200.79789734]
[811.52209473 -186.06108093]
[813.31756592 -171.16273499]
[814.06945801 -156.17543030]
[813.77398682 -141.17218018]
[812.43267822 -126.22608948]
[810.05206299 -111.40996552]
[806.64373779 -96.79600525]
[802.22424316 -82.45539856]
[796.81524658 -68.45800781]
[790.44293213 -54.87203598]
[783.13842773 -41.76366806]
[774.93737793 -29.19676971]
[765.87963867 -17.23256683]
[756.00939941 -5.92934513]
[745.37469482 4.65782404]
[734.02740479 14.47736168]
[722.02270508 23.48142815]
[709.41925049 31.62615395]
[696.27825928 38.87186050]
[682.66394043 45.18324661]
[668.64245605 50.52956390]
[654.28216553 54.88476562]
[639.65313721 58.22763062]
[624.82647705 60.54187393]
[609.87451172 61.81622314]
[594.87011719 62.04447174]
[579.88629150 61.22549820]
[564.99615479 59.36330414]
[550.27215576 56.46695328]
[535.78607178 52.55055618]
[521.60845947 47.63320160]
[507.80844116 41.73884201]
[494.45318604 34.89619064]
[481.60778809 27.13858986]
[469.33480835 18.50383186]
[457.69409180 9.03398514]
[446.74227905 -1.22481358]
[436.53280640 -12.22258377]
[427.11532593 -23.90574646]
[418.53579712 -36.21738052]
[410.83599854 -49.09750366]
[397.45571899 -42.31751251]
[384.07543945 -35.53751755]
[370.69515991 -28.75752831]
[357.31488037 -21.97753716]
[343.93463135 -15.19754505]
[349.95968628 -1.46291792]
[355.21215820 12.58532429]
[359.67578125 26.90376091]
[363.33676147 41.44813156]
[366.18377686 56.17348099]
[368.20806885 71.03430176]
[369.40332031 85.98464966]
[369.76586914 100.97831726]
[369.29455566 115.96895599]
[367.99090576 130.91024780]
[365.85891724 145.75598145]
[362.90515137 160.46029663]
[359.13879395 174.97773743]
[354.57144165 189.26342773]
[349.21722412 203.27319336]
[343.09268188 216.96376038]
[336.21676636 230.29280090]
[328.61071777 243.21911621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[93 192]
[94 191]
[95 190]
[96 189]
[97 188]
[98 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
