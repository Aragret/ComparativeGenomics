%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[106.90679932 495.82363892]
[96.26878357 485.24237061]
[86.27009583 474.05502319]
[76.94520569 462.30017090]
[68.32624817 450.01831055]
[60.44294357 437.25180054]
[53.32246780 424.04461670]
[46.98936081 410.44235229]
[41.46545792 396.49182129]
[36.76980209 382.24114990]
[32.91857910 367.73947144]
[29.92506599 353.03677368]
[27.79958153 338.18374634]
[26.54945183 323.23156738]
[26.17898560 308.23178101]
[26.68946266 293.23614502]
[28.07912254 278.29626465]
[30.34317398 263.46371460]
[33.47381210 248.78961182]
[37.46024323 234.32452393]
[42.28873062 220.11831665]
[47.94262314 206.21997070]
[54.40243530 192.67739868]
[61.64589691 179.53727722]
[69.64803314 166.84490967]
[78.38127136 154.64404297]
[87.81549072 142.97674561]
[97.91818237 131.88322449]
[108.65451813 121.40173340]
[98.82393646 110.07214355]
[91.58252716 106.53173065]
[88.93286133 98.49990845]
[79.27204895 87.02520752]
[69.61124420 75.55050659]
[59.95043182 64.07581329]
[50.28961945 52.60110855]
[40.62881088 41.12641144]
[28.51019859 49.97626495]
[15.80989742 57.96894836]
[2.58843184 65.06637573]
[-11.09119320 71.23472595]
[-25.16378593 76.44460297]
[-39.56228256 80.67118073]
[-54.21807098 83.89431000]
[-69.06130981 86.09863281]
[-84.02125549 87.27365112]
[-99.02661896 87.41375732]
[-114.00589752 86.51828766]
[-128.88771057 84.59151459]
[-143.60112000 81.64260864]
[-158.07603455 77.68563080]
[-172.24345398 72.73944092]
[-186.03587341 66.82759857]
[-199.38755798 59.97829056]
[-212.23489380 52.22414780]
[-224.51664734 43.60212708]
[-236.17428589 34.15331268]
[-247.15226746 23.92273331]
[-257.39825439 12.95914650]
[-266.86343384 1.31479704]
[-275.50271606 -10.95482445]
[-283.27490234 -23.79124641]
[-290.14297485 -37.13329697]
[-296.07418823 -50.91739273]
[-301.04028320 -65.07785034]
[-305.01760864 -79.54718781]
[-307.98718262 -94.25644684]
[-309.93487549 -109.13552856]
[-310.85137939 -124.11353302]
[-310.73236084 -139.11907959]
[-309.57836914 -154.08067322]
[-307.39492798 -168.92698669]
[-304.19238281 -183.58729553]
[-299.98605347 -197.99171448]
[-294.79595947 -212.07160950]
[-288.64685059 -225.75988770]
[-281.56799316 -238.99131775]
[-273.59317017 -251.70283508]
[-264.76034546 -263.83389282]
[-255.11164856 -275.32662964]
[-244.69303894 -286.12631226]
[-233.55415344 -296.18145752]
[-221.74810791 -305.44415283]
[-209.33113098 -313.87026978]
[-196.36241150 -321.41964722]
[-182.90376282 -328.05630493]
[-169.01930237 -333.74862671]
[-154.77519226 -338.46945190]
[-140.23934937 -342.19635010]
[-125.48100281 -344.91146851]
[-110.57050323 -346.60195923]
[-95.57890320 -347.25970459]
[-80.57764435 -346.88159180]
[-65.63822174 -345.46942139]
[-50.83181763 -343.02990723]
[-36.22900391 -339.57470703]
[-21.89936066 -335.12026978]
[-7.91117907 -329.68783569]
[5.66887856 -323.30325317]
[18.77609825 -315.99700928]
[31.34801674 -307.80386353]
[43.32472229 -298.76287842]
[54.64914322 -288.91717529]
[65.26731110 -278.31362915]
[75.12862396 -267.00277710]
[84.18608093 -255.03854370]
[92.39653015 -242.47792053]
[99.72084808 -229.38078308]
[106.12411499 -215.80952454]
[111.57582855 -201.82884216]
[116.05000305 -187.50535583]
[119.52531433 -172.90730286]
[121.98520660 -158.10427856]
[123.41796112 -143.16680908]
[123.81673431 -128.16609192]
[123.17964172 -113.17360687]
[121.50971985 -98.26078796]
[118.81491089 -83.49871826]
[115.10807037 -68.95774841]
[110.40685272 -54.70715714]
[104.73368073 -40.81486511]
[98.11557007 -27.34708023]
[90.58406067 -14.36797619]
[82.17505646 -1.93940830]
[72.92862701 9.87939644]
[62.88882828 21.03211594]
[52.10351181 31.46559906]
[61.76432037 42.94029999]
[71.42513275 54.41500092]
[81.08594513 65.88970184]
[90.74674988 77.36440277]
[100.40756226 88.83909607]
[110.15352631 100.24156189]
[119.98410797 111.57115173]
[131.87448120 102.41967010]
[144.28143311 93.98178864]
[157.16220093 86.28657532]
[170.47238159 79.36057281]
[184.16609192 73.22765350]
[198.19613647 67.90896606]
[212.51412964 63.42282867]
[227.07073975 59.78471756]
[241.81576538 57.00717163]
[256.69836426 55.09976578]
[271.66729736 54.06907272]
[286.67086792 53.91865158]
[301.65744019 54.64901733]
[316.57531738 56.25764847]
[331.37304688 58.73900604]
[345.99966431 62.08453369]
[360.40472412 66.28269958]
[374.53860474 71.31903076]
[388.35250854 77.17616272]
[401.79888916 83.83390808]
[414.83135986 91.26931763]
[427.40499878 99.45675659]
[439.47644043 108.36800385]
[451.00411987 117.97233582]
[461.94827271 128.23664856]
[472.27114868 139.12556458]
[481.93722534 150.60153198]
[490.91311646 162.62500000]
[499.16790771 175.15451050]
[506.67315674 188.14689636]
[513.40295410 201.55734253]
[519.33410645 215.33964539]
[524.44622803 229.44627380]
[528.72161865 243.82859802]
[532.14562988 258.43704224]
[534.70635986 273.22128296]
[536.39501953 288.13027954]
[537.20574951 303.11273193]
[537.13586426 318.11691284]
[536.18548584 333.09112549]
[534.35797119 347.98376465]
[531.65960693 362.74346924]
[528.09967041 377.31939697]
[523.69042969 391.66125488]
[518.44708252 405.71963501]
[512.38775635 419.44607544]
[505.53326416 432.79321289]
[497.90728760 445.71508789]
[489.53610229 458.16714478]
[480.44854736 470.10644531]
[470.67599487 481.49185181]
[460.25207520 492.28408813]
[449.21276855 502.44598389]
[437.59609985 511.94247437]
[425.44210815 520.74084473]
[412.79272461 528.81079102]
[399.69155884 536.12445068]
[386.18371582 542.65661621]
[372.31582642 548.38476562]
[358.13565063 553.28912354]
[343.69207764 557.35290527]
[329.03494263 560.56201172]
[314.21469116 562.90533447]
[299.28250122 564.37487793]
[284.28976440 564.96557617]
[269.28823853 564.67535400]
[254.32958984 563.50524902]
[239.46539307 561.45922852]
[224.74688721 558.54443359]
[210.22482300 554.77081299]
[195.94924927 550.15142822]
[181.96937561 544.70227051]
[168.33340454 538.44201660]
[155.08833313 531.39227295]
[142.27983093 523.57739258]
[129.95204163 515.02423096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 134]
[30 133]
[32 132]
[33 131]
[34 130]
[35 129]
[36 128]
[37 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
