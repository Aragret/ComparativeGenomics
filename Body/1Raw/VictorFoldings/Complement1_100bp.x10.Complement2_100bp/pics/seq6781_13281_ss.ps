%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[207.66581726 521.65618896]
[209.29673767 506.72573853]
[212.75013733 492.10882568]
[217.97363281 478.02709961]
[224.88807678 464.69406128]
[233.38861084 452.31179810]
[243.34638977 441.06802368]
[254.61045837 431.13320923]
[267.01004028 422.65795898]
[260.13061523 409.32855225]
[253.25120544 395.99911499]
[237.99435425 387.32760620]
[239.01522827 368.94174194]
[231.93812561 355.71621704]
[224.86102295 342.49069214]
[217.78392029 329.26516724]
[210.70681763 316.03964233]
[203.62969971 302.81411743]
[196.55259705 289.58859253]
[189.47549438 276.36306763]
[182.39839172 263.13754272]
[175.32128906 249.91200256]
[168.24417114 236.68647766]
[161.16706848 223.46095276]
[154.08996582 210.23542786]
[146.81674194 197.11672974]
[139.34899902 184.10777283]
[126.30245209 176.92189026]
[126.14232635 161.10150146]
[118.67458344 148.09254456]
[111.20684052 135.08358765]
[98.16030121 127.89769745]
[98.00016785 112.07730865]
[98.52882385 127.06798553]
[94.45970154 141.50550842]
[86.18063354 154.01379395]
[74.48074341 163.40061951]
[60.47517776 168.77130127]
[45.49886322 169.61393738]
[30.97924805 165.84820557]
[18.30024529 157.83303833]
[8.67033958 146.33238220]
[3.00739074 132.44242859]
[1.85115540 117.48705292]
[5.31183863 102.89172363]
[13.05959034 90.04756927]
[24.35594368 80.17881012]
[38.12420273 74.22607422]
[53.05206299 72.75674438]
[67.71669769 75.91085815]
[80.72037506 83.38779449]
[90.82427216 94.47583771]
[87.06797791 79.95378113]
[83.31167603 65.43171692]
[80.15978241 62.44515991]
[78.30840302 58.96135330]
[77.75415802 55.45019531]
[78.34142303 52.33222580]
[79.79158020 49.93323135]
[76.90631104 35.21334076]
[74.02103424 20.49344826]
[71.13576508 5.77355671]
[63.61694336 18.75305367]
[49.95209503 24.93948364]
[35.23786926 22.02546120]
[24.96230698 11.09784412]
[22.95794106 -3.76763606]
[29.97234726 -17.02652359]
[43.38932800 -23.73357964]
[58.20468140 -21.38723946]
[68.89318848 -10.86159515]
[67.77754211 -25.82004929]
[66.66188812 -40.77850342]
[65.54624176 -55.73695374]
[64.43059540 -70.69541168]
[55.68831635 -83.88188171]
[62.45757294 -97.14937592]
[51.87406540 -86.51972961]
[36.87503433 -86.34921265]
[26.05260658 -96.73550415]
[25.60636139 -111.72886658]
[35.79192734 -122.74041748]
[50.77454758 -123.46224213]
[61.97108459 -113.48170471]
[62.19441223 -128.48004150]
[62.41773987 -143.47837830]
[62.64106750 -158.47671509]
[62.86439514 -173.47505188]
[63.08772278 -188.47338867]
[63.31105042 -203.47172546]
[63.53437805 -218.47006226]
[60.65309143 -224.42066956]
[61.13687515 -230.08308411]
[63.99428177 -233.90986633]
[64.66407013 -248.89491272]
[65.33385468 -263.87994385]
[66.00363922 -278.86499023]
[66.67342377 -293.85003662]
[52.57796478 -299.38146973]
[41.04391098 -309.19189453]
[33.32238388 -322.21713257]
[30.25096130 -337.04428101]
[32.16280746 -352.06506348]
[38.85053635 -365.65008545]
[49.58871841 -376.32577515]
[63.21255112 -382.93408203]
[78.24422455 -384.75823975]
[93.05322266 -381.60031128]
[106.03316498 -373.80288696]
[115.77608490 -362.21176147]
[121.22515106 -348.08425903]
[121.78928375 -332.95281982]
[117.40729523 -318.45877075]
[108.55450439 -306.17437744]
[96.19120026 -297.43209839]
[81.65846252 -293.18023682]
[80.98867798 -278.19519043]
[80.31889343 -263.21017456]
[79.64910889 -248.22512817]
[78.97932434 -233.24008179]
[78.53271484 -218.24673462]
[78.30938721 -203.24839783]
[78.08605957 -188.25006104]
[77.86273193 -173.25172424]
[77.63940430 -158.25338745]
[77.41607666 -143.25505066]
[77.19274902 -128.25671387]
[76.96942139 -113.25837708]
[77.41603088 -98.26502991]
[86.07850647 -86.14848328]
[79.38904572 -71.81105804]
[80.50469971 -56.85260391]
[81.62034607 -41.89414978]
[82.73599243 -26.93569756]
[83.85163879 -11.97724438]
[85.85565948 2.88828421]
[88.74092865 17.60817528]
[91.62619781 32.32806778]
[94.51147461 47.04795837]
[97.83373260 61.67541885]
[101.59003448 76.19747925]
[105.34633636 90.71953583]
[111.00912476 104.60956573]
[124.58980560 112.72593689]
[124.21579742 127.61584473]
[131.68353271 140.62480164]
[139.15127563 153.63375854]
[152.73196411 161.75012207]
[152.35795593 176.64002991]
[159.82568359 189.64898682]
[165.34190369 193.29356384]
[167.81781006 198.40892029]
[167.31549072 203.15832520]
[174.39259338 216.38385010]
[181.46971130 229.60937500]
[188.54681396 242.83489990]
[195.62391663 256.06042480]
[202.70101929 269.28594971]
[209.77812195 282.51147461]
[216.85523987 295.73699951]
[223.93234253 308.96252441]
[231.00944519 322.18807983]
[238.08654785 335.41360474]
[245.16365051 348.63912964]
[252.24075317 361.86465454]
[264.33645630 366.34313965]
[269.95870972 377.50439453]
[266.58062744 389.11968994]
[273.46005249 402.44912720]
[280.33947754 415.77856445]
[294.43096924 410.58157349]
[309.05435181 407.15570068]
[323.98788452 405.55285645]
[339.00521851 405.79739380]
[353.87866211 407.88558960]
[368.38272095 411.78573608]
[382.29757690 417.43878174]
[395.41223145 424.75897217]
[407.52789307 433.63534546]
[418.46090698 443.93338013]
[428.04550171 455.49691772]
[436.13638306 468.15063477]
[442.61090088 481.70278931]
[447.37088013 495.94784546]
[450.34420776 510.66989136]
[451.48580933 525.64575195]
[450.77832031 540.64837646]
[448.23251343 555.45037842]
[443.88693237 569.82727051]
[437.80752563 583.56121826]
[430.08642578 596.44390869]
[420.84066772 608.28009033]
[410.21041870 618.89038086]
[398.35684204 628.11383057]
[385.45962524 635.81066895]
[371.71429443 641.86425781]
[357.32922363 646.18273926]
[342.52249146 648.70068359]
[327.51855469 649.37994385]
[312.54486084 648.21014404]
[297.82843018 645.20910645]
[283.59234619 640.42230225]
[270.05242920 633.92230225]
[257.41394043 625.80761719]
[245.86845398 616.20129395]
[235.59103394 605.24890137]
[226.73745728 593.11657715]
[219.44197083 579.98815918]
[213.81513977 566.06268311]
[209.94227600 551.55133057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 170]
[10 169]
[11 168]
[13 165]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 150]
[27 149]
[29 147]
[30 146]
[31 145]
[33 143]
[52 142]
[53 141]
[54 140]
[59 139]
[60 138]
[61 137]
[62 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[77 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
