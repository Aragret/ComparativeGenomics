%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[89.22424316 621.71936035]
[79.33002472 633.06829834]
[67.29221344 642.11175537]
[53.63704300 648.45446777]
[38.96145630 651.81915283]
[23.90701103 652.05865479]
[9.13182259 649.16253662]
[-4.71820354 643.25738525]
[-17.03760147 634.60144043]
[-27.28782272 623.57299805]
[-35.02076721 610.65417480]
[-39.89838791 596.40979004]
[-41.70745468 581.46252441]
[-40.36888123 566.46582031]
[-35.94118881 552.07519531]
[-28.61793327 538.91986084]
[-18.71925545 527.57482910]
[-6.67788601 518.53607178]
[6.97978020 512.19873047]
[21.65668869 508.83984375]
[36.71122742 508.60626221]
[39.59650040 493.88635254]
[42.48177338 479.16647339]
[35.99573517 468.95578003]
[38.27903366 456.66879272]
[48.64385986 448.99200439]
[51.74797058 434.31671143]
[54.41376495 419.55548096]
[56.63888550 404.72143555]
[58.86400223 389.88739014]
[61.08911896 375.05334473]
[55.32539749 361.31912231]
[65.02423096 348.81939697]
[62.95626831 344.51443481]
[63.57069397 338.86471558]
[67.54278564 333.57943726]
[70.20858002 318.81823730]
[72.87437439 304.05700684]
[75.54016876 289.29580688]
[68.72499847 273.12420654]
[80.73617554 259.16665649]
[83.18190002 244.36738586]
[85.62763214 229.56811523]
[88.07335663 214.76884460]
[89.52277374 199.83903503]
[89.96938324 184.84568787]
[90.41598511 169.85234070]
[90.86259460 154.85899353]
[91.30919647 139.86563110]
[91.75580597 124.87228394]
[92.20240784 109.87893677]
[92.31407928 94.87935638]
[92.09075165 79.88101196]
[78.78251648 72.34190369]
[71.08555603 59.24023819]
[70.98064423 44.14535904]
[78.39581299 31.11189270]
[91.25257874 23.59064865]
[91.02925110 8.59230995]
[90.80592346 -6.40602732]
[90.58259583 -21.40436363]
[80.77478790 -36.98924255]
[89.91346741 -51.97094345]
[89.46686554 -66.96429443]
[81.32211304 -80.52797699]
[88.67704010 -93.47998047]
[88.23043823 -108.47332764]
[87.78382874 -123.46667480]
[87.33722687 -138.46002197]
[86.89061737 -153.45338440]
[86.44400787 -168.44673157]
[85.99740601 -183.44007874]
[85.32762146 -198.42510986]
[84.43480682 -213.39851379]
[83.54199219 -228.37193298]
[82.53772736 -243.33827209]
[81.42208099 -258.29672241]
[80.30643463 -273.25518799]
[79.19078064 -288.21362305]
[78.07513428 -303.17208862]
[76.95948792 -318.13052368]
[64.06072235 -323.54208374]
[54.79614639 -333.93359375]
[50.93120956 -347.23925781]
[53.16540909 -360.84652710]
[61.00648499 -372.10913086]
[72.87744141 -378.86172485]
[71.98462677 -393.83511353]
[71.09181213 -408.80853271]
[70.19898987 -423.78192139]
[69.30617523 -438.75534058]
[68.41336060 -453.72872925]
[53.63026047 -456.74905396]
[40.13302994 -463.49346924]
[28.84193611 -473.50216675]
[20.52682495 -486.09268188]
[15.75463104 -500.40661621]
[14.85073280 -515.46801758]
[17.87675858 -530.24993896]
[24.62639046 -543.74456787]
[34.63942719 -555.03179932]
[47.23316193 -563.34204102]
[61.54893112 -568.10870361]
[76.61066437 -569.00677490]
[91.39143372 -565.97503662]
[104.88344574 -559.22021484]
[116.16680908 -549.20281982]
[124.47219849 -536.60589600]
[129.23333740 -522.28826904]
[130.12561035 -507.22619629]
[127.08816528 -492.44659424]
[120.32810974 -478.95718384]
[110.30636597 -467.67770386]
[97.70621490 -459.37716675]
[83.38676453 -454.62155151]
[84.27958679 -439.64816284]
[85.17240143 -424.67474365]
[86.06521606 -409.70132446]
[86.95803070 -394.72793579]
[87.85084534 -379.75451660]
[102.47349548 -372.87771606]
[111.68587494 -359.48785400]
[112.89556122 -343.18591309]
[105.67796326 -328.41424561]
[91.91793823 -319.24618530]
[93.03358459 -304.28771973]
[94.14923859 -289.32928467]
[95.26488495 -274.37081909]
[96.38053131 -259.41238403]
[97.49618530 -244.45391846]
[101.12846375 -238.01744080]
[98.51539612 -229.26473999]
[99.40821075 -214.29133606]
[100.30102539 -199.31793213]
[103.21509552 -195.53411865]
[103.78312683 -189.87953186]
[100.99075317 -183.88668823]
[101.43736267 -168.89332581]
[101.88396454 -153.89997864]
[102.33057404 -138.90663147]
[102.77717590 -123.91328430]
[103.22378540 -108.91992950]
[103.67038727 -93.92658234]
[111.78320312 -81.43532562]
[104.46021271 -67.41089630]
[104.90681458 -52.41754913]
[113.49327087 -43.89701843]
[113.98805237 -31.40946770]
[105.58093262 -21.62769127]
[105.80426025 -6.62935495]
[106.02758789 8.36898232]
[106.25091553 23.36731911]
[119.32592010 30.50243759]
[127.12585449 43.30934906]
[127.47041321 58.40065765]
[120.16695404 71.72567749]
[107.08908844 79.65768433]
[107.31241608 94.65602112]
[109.67105103 97.70712280]
[110.67336273 101.78305817]
[109.89179993 106.25476837]
[107.19576263 110.32554626]
[106.74915314 125.31889343]
[106.30255127 140.31224060]
[105.85594177 155.30558777]
[105.40933990 170.29895020]
[104.96273041 185.29229736]
[104.51612091 200.28564453]
[114.17838287 188.81216431]
[128.47802734 184.28225708]
[142.98417664 188.09956360]
[153.20191956 199.08126831]
[155.96519470 213.82453918]
[150.41775513 227.76104736]
[138.27854919 236.57238770]
[123.30904388 237.52827454]
[110.14768982 230.33253479]
[102.87262726 217.21456909]
[100.42690277 232.01383972]
[97.98117065 246.81311035]
[95.53544617 261.61239624]
[102.39851379 272.53305054]
[100.05678558 284.80905151]
[90.30138397 291.96157837]
[87.63558960 306.72280884]
[84.96979523 321.48403931]
[82.30400085 336.24523926]
[79.85827637 351.04452515]
[85.46283722 365.83975220]
[75.92316437 377.27847290]
[73.69804382 392.11251831]
[71.47293091 406.94656372]
[69.24781036 421.78060913]
[70.97989655 425.76229858]
[71.32059479 429.69274902]
[70.45685577 433.14083862]
[68.69646454 435.78045654]
[66.42327118 437.42080688]
[63.31916428 452.09609985]
[69.43158722 469.46618652]
[57.20166397 482.05172729]
[54.31639099 496.77163696]
[51.43111801 511.49151611]
[65.28346252 517.39117432]
[77.60626984 526.04235840]
[87.86082458 537.06677246]
[95.59885406 549.98248291]
[100.48207855 564.22497559]
[102.29702759 579.17150879]
[100.96435547 594.16876221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 203]
[22 202]
[23 201]
[26 199]
[27 198]
[28 193]
[29 192]
[30 191]
[31 190]
[33 188]
[36 187]
[37 186]
[38 185]
[39 184]
[41 181]
[42 180]
[43 179]
[44 178]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[52 158]
[53 157]
[58 152]
[59 151]
[60 150]
[61 149]
[63 146]
[64 145]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 134]
[74 133]
[75 132]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
