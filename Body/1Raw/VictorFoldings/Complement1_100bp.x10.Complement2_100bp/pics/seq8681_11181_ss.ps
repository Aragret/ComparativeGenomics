%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[94.29917145 715.53930664]
[80.42459106 709.82104492]
[67.00444031 703.10528564]
[54.11030960 695.42779541]
[41.81100082 686.82958984]
[30.17214012 677.35650635]
[19.25582123 667.05908203]
[9.12029076 655.99230957]
[-0.18037421 644.21520996]
[-8.59654999 631.79064941]
[-16.08333206 618.78485107]
[-22.60077477 605.26727295]
[-28.11410522 591.30999756]
[-32.59390640 576.98748779]
[-36.01627350 562.37615967]
[-38.36295319 547.55407715]
[-39.62141800 532.60015869]
[-39.78495789 517.59429932]
[-38.85269547 502.61654663]
[-36.82961273 487.74679565]
[-33.72649765 473.06439209]
[-29.55990601 458.64767456]
[-24.35207367 444.57354736]
[-18.13078308 430.91711426]
[-10.92922974 417.75125122]
[-2.78583646 405.14620972]
[6.25594759 393.16918945]
[16.14788055 381.88415527]
[26.83718300 371.35128784]
[38.26682281 361.62680054]
[50.37581635 352.76257324]
[63.09955978 344.80587769]
[76.37016296 337.79922485]
[90.11681366 331.77993774]
[104.26618195 326.78015137]
[118.74276733 322.82653809]
[115.85749054 308.10665894]
[112.97222137 293.38674927]
[110.08694458 278.66687012]
[106.69348145 275.30627441]
[105.37508392 269.77828979]
[107.34177399 263.46609497]
[104.89604187 248.66682434]
[102.45031738 233.86755371]
[100.00459290 219.06828308]
[97.55886078 204.26901245]
[95.11313629 189.46974182]
[88.35697174 202.86206055]
[75.86423492 211.16456604]
[60.90049744 212.20700073]
[47.37725067 205.71687317]
[38.82943344 193.39068604]
[37.49142456 178.45048523]
[43.71297836 164.80158997]
[55.86779404 156.01179504]
[70.77863312 154.37873840]
[84.54783630 160.32928467]
[93.57583618 172.30715942]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[77.52342987 85.17476654]
[63.55006027 79.60768127]
[50.93538666 71.42398071]
[40.16321564 60.93975067]
[31.64625168 48.55928802]
[25.71029663 34.75948334]
[22.58176613 20.07145119]
[22.37907028 5.06009579]
[25.10812759 -9.69761372]
[30.66220665 -23.63482666]
[38.82610703 -36.21657562]
[49.28448486 -46.96032333]
[61.63404846 -55.45444489]
[75.39909363 -61.37403107]
[90.04983521 -64.49328613]
[89.82650757 -79.49162292]
[89.60317993 -94.48995972]
[89.26820374 -109.48622131]
[88.82160187 -124.47956848]
[88.37499237 -139.47291565]
[87.92839050 -154.46627808]
[73.01820374 -156.37229919]
[58.58979797 -160.58746338]
[44.99847412 -167.00791931]
[32.57893372 -175.47560120]
[21.63702202 -185.78196716]
[12.44219017 -197.67320251]
[5.22087049 -210.85649109]
[0.15089491 -225.00717163]
[-2.64288473 -239.77677917]
[-3.09166861 -254.80158997]
[-1.18440545 -269.71160889]
[3.03193712 -284.13967896]
[9.45352745 -297.73046875]
[17.92222786 -310.14932251]
[28.22949028 -321.09036255]
[40.12148666 -330.28421021]
[53.30537033 -337.50445557]
[67.45647430 -342.57327271]
[82.22631073 -345.36581421]
[97.25115967 -345.81335449]
[112.16102600 -343.90487671]
[126.58874512 -339.68734741]
[140.17900085 -333.26461792]
[152.59715271 -324.79489136]
[163.53735352 -314.48672485]
[172.73022461 -302.59399414]
[179.94937134 -289.40951538]
[185.01701355 -275.25799561]
[187.80834961 -260.48791504]
[188.25465393 -245.46302795]
[186.34494019 -230.55331421]
[182.12620544 -216.12596130]
[175.70237732 -202.53622437]
[167.23162842 -190.11877441]
[156.92256165 -179.17941284]
[145.02905273 -169.98753357]
[131.84397888 -162.76947021]
[117.69203186 -157.70300293]
[102.92173767 -154.91287231]
[103.36833954 -139.91952515]
[103.81494904 -124.92617798]
[104.26155853 -109.93283081]
[107.60281372 -103.34057617]
[104.60151672 -94.71328735]
[104.82484436 -79.71495056]
[105.04817200 -64.71661377]
[119.78529358 -62.03495026]
[133.72048950 -56.52782440]
[146.31747437 -48.40515900]
[157.09109497 -37.97756195]
[165.62597656 -25.64445877]
[171.59255981 -11.87879181]
[174.75979614 2.79112172]
[175.00413513 17.80185699]
[172.31431580 32.57652664]
[166.79187012 46.54694748]
[158.64729309 59.17550278]
[148.19204712 69.97580719]
[135.82662964 78.53147125]
[122.02519989 84.51212311]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[108.57417297 172.08383179]
[109.91240692 187.02401733]
[112.35813141 201.82328796]
[114.80386353 216.62255859]
[117.24958801 231.42182922]
[119.69531250 246.22109985]
[122.14104462 261.02038574]
[124.80683899 275.78158569]
[127.69210815 290.50149536]
[130.57737732 305.22137451]
[133.46266174 319.94125366]
[148.36056519 318.13711548]
[163.35041809 317.42526245]
[178.35223389 317.80950928]
[193.28599548 319.28781128]
[208.07200623 321.85226440]
[222.63136292 325.48916626]
[236.88641357 330.17916870]
[250.76109314 335.89721680]
[264.18136597 342.61276245]
[277.07559204 350.29003906]
[289.37506104 358.88806152]
[301.01406860 368.36096191]
[311.93057251 378.65817261]
[322.06628418 389.72479248]
[331.36712646 401.50173950]
[339.78350830 413.92617798]
[347.27050781 426.93185425]
[353.78817749 440.44934082]
[359.30172729 454.40652466]
[363.78176880 468.72894287]
[367.20437622 483.34017944]
[369.55130005 498.16226196]
[370.80999756 513.11614990]
[370.97378540 528.12200928]
[370.04177856 543.09973145]
[368.01895142 557.96954346]
[364.91607666 572.65197754]
[360.74972534 587.06878662]
[355.54211426 601.14300537]
[349.32104492 614.79949951]
[342.11972046 627.96551514]
[333.97653198 640.57067871]
[324.93493652 652.54785156]
[315.04318237 663.83306885]
[304.35406494 674.36608887]
[292.92456055 684.09075928]
[280.81573486 692.95520020]
[268.09210205 700.91210938]
[254.82162476 707.91900635]
[241.07507324 713.93853760]
[226.92578125 718.93853760]
[212.44926453 722.89239502]
[197.72276306 725.77893066]
[182.82482910 727.58282471]
[167.83496094 728.29443359]
[152.83314514 727.90997314]
[137.89941406 726.43139648]
[123.11344910 723.86669922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 162]
[37 161]
[38 160]
[39 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[64 146]
[79 131]
[80 130]
[81 129]
[82 127]
[83 126]
[84 125]
[85 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
