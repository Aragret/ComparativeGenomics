%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[139.82382202 414.91290283]
[139.50616455 399.90441895]
[140.63854980 384.93533325]
[143.21037292 370.14544678]
[147.19764709 355.67279053]
[152.56312561 341.65255737]
[159.25672913 328.21563721]
[167.21594238 315.48745728]
[176.36647034 303.58688354]
[186.62284851 292.62503052]
[197.88934326 282.70428467]
[189.10873413 270.54281616]
[175.38540649 264.75320435]
[173.58027649 249.03532410]
[164.79966736 236.87387085]
[156.01907349 224.71241760]
[147.14817810 212.61666870]
[138.18746948 200.58728027]
[129.22677612 188.55790710]
[120.26608276 176.52853394]
[122.88834381 191.29754639]
[121.65170288 206.24647522]
[116.63819122 220.38383484]
[108.18033600 232.77191162]
[96.83911896 242.58908081]
[83.36675262 249.18418884]
[68.65681458 252.11979675]
[53.68497086 251.20121765]
[39.44424057 246.48936462]
[26.87916183 238.29675293]
[16.82313347 227.16677856]
[9.94313335 213.83766174]
[6.69548798 199.19345093]
[7.29560328 184.20545959]
[11.70367432 169.86778259]
[19.62733078 157.13139343]
[30.54102325 146.84104919]
[43.72088623 139.67926025]
[58.29274750 136.12104797]
[73.29010773 136.40242004]
[87.71824646 140.50471497]
[100.62020111 148.15583801]
[111.14331818 158.85241699]
[106.52930450 144.57968140]
[101.91529846 130.30694580]
[97.30129242 116.03421021]
[84.56626892 105.11654663]
[88.25723267 88.75337982]
[83.43123627 74.55092621]
[71.66535187 63.97385025]
[74.89647675 49.43393707]
[70.07048035 35.23147964]
[65.24447632 21.02902412]
[60.41847992 6.82656860]
[48.65259552 -3.75050759]
[51.88372421 -18.29042244]
[36.05300140 -25.73404884]
[30.61087036 -42.00359344]
[38.46175766 -56.87646484]
[33.42484283 -71.00549316]
[28.38792610 -85.13452148]
[23.35100937 -99.26355743]
[18.31409264 -113.39258575]
[13.27717686 -127.52161407]
[-1.30778575 -123.96031189]
[-16.18162727 -121.91754150]
[-31.18667412 -121.41497040]
[-46.16386795 -122.45791626]
[-60.95443726 -125.03533173]
[-75.40159607 -129.11988831]
[-89.35219574 -134.66828918]
[-102.65835571 -141.62170410]
[-115.17902374 -149.90644836]
[-126.78147125 -159.43469238]
[-137.34269714 -170.10542297]
[-146.75076294 -181.80552673]
[-154.90591431 -194.41098022]
[-161.72174072 -207.78814697]
[-167.12594604 -221.79522705]
[-171.06127930 -236.28375244]
[-173.48599243 -251.10012817]
[-174.37440491 -266.08728027]
[-173.71710205 -281.08633423]
[-171.52102661 -295.93832397]
[-167.80947876 -310.48577881]
[-162.62179565 -324.57449341]
[-156.01298523 -338.05514526]
[-148.05307007 -350.78479004]
[-138.82646179 -362.62850952]
[-128.43095398 -373.46072388]
[-116.97675323 -383.16668701]
[-104.58526611 -391.64340210]
[-91.38785553 -398.80111694]
[-77.52442932 -404.56387329]
[-63.14194107 -408.87060547]
[-48.39285278 -411.67568970]
[-33.43351746 -412.94934082]
[-18.42250443 -412.67810059]
[-3.51894546 -410.86483765]
[11.11917591 -407.52874756]
[25.33668518 -402.70523071]
[38.98287201 -396.44537354]
[51.91307831 -388.81558228]
[63.99023438 -379.89669800]
[75.08631897 -369.78329468]
[85.08370209 -358.58258057]
[93.87641144 -346.41326904]
[101.37123108 -333.40435791]
[107.48872375 -319.69375610]
[112.16403961 -305.42681885]
[115.34760284 -290.75476074]
[117.00568390 -275.83316040]
[117.12069702 -260.82012939]
[115.69142151 -245.87486267]
[112.73300934 -231.15576172]
[108.27682495 -216.81886292]
[102.37010193 -203.01615906]
[95.07546234 -189.89395142]
[86.47022247 -177.59135437]
[76.64561462 -166.23878479]
[65.70578003 -155.95655823]
[53.76668167 -146.85369873]
[40.95488739 -139.02670288]
[27.40620613 -132.55853271]
[32.44312286 -118.42949677]
[37.48003769 -104.30046844]
[42.51695633 -90.17144012]
[47.55387115 -76.04241180]
[52.59078598 -61.91337967]
[64.89067841 -58.07383347]
[72.85216522 -47.69612122]
[73.39083862 -34.43262482]
[66.08618164 -23.11641884]
[77.50687408 -13.55519772]
[74.62093353 2.00057077]
[79.44693756 16.20302582]
[84.27293396 30.40548134]
[89.09893036 44.60793686]
[100.51963043 54.16915894]
[97.63368988 69.72492981]
[102.45968628 83.92738342]
[112.57754517 89.69541931]
[116.24241638 100.75027466]
[111.57402039 111.42020416]
[116.18803406 125.69293976]
[120.80204010 139.96566772]
[125.41604614 154.23840332]
[132.29545593 167.56784058]
[141.25616455 179.59721375]
[150.21685791 191.62658691]
[159.17755127 203.65596008]
[166.81370544 208.66864014]
[168.18052673 215.93180847]
[176.96112061 228.09326172]
[185.74172974 240.25473022]
[200.09310913 246.91418457]
[201.27018738 261.76220703]
[210.05079651 273.92367554]
[223.01287842 266.35134888]
[236.64529419 260.06542969]
[250.82073975 255.12457275]
[265.40689087 251.57493591]
[280.26751709 249.44964600]
[295.26391602 248.76856995]
[310.25604248 249.53804016]
[325.10388184 251.75088501]
[339.66885376 255.38642883]
[353.81494141 260.41076660]
[367.41006470 266.77691650]
[380.32727051 274.42553711]
[392.44598389 283.28512573]
[403.65304565 293.27297974]
[413.84378052 304.29586792]
[422.92309570 316.25085449]
[430.80618286 329.02633667]
[437.41943359 342.50299072]
[442.70111084 356.55502319]
[446.60189819 371.05120850]
[449.08535767 385.85620117]
[450.12832642 400.83175659]
[449.72106934 415.83807373]
[447.86737061 430.73504639]
[444.58456421 445.38354492]
[439.90325928 459.64682007]
[433.86718750 473.39169312]
[426.53271484 486.48980713]
[417.96829224 498.81890869]
[408.25393677 510.26385498]
[397.48031616 520.71777344]
[385.74804688 530.08306885]
[373.16662598 538.27233887]
[359.85357666 545.20904541]
[345.93316650 550.82849121]
[331.53540039 555.07812500]
[316.79467773 557.91833496]
[301.84866333 559.32257080]
[286.83688354 559.27777100]
[271.89950562 557.78430176]
[257.17602539 554.85614014]
[242.80386353 550.52056885]
[228.91726685 544.81811523]
[215.64585876 537.80206299]
[203.11358643 529.53784180]
[191.43742371 520.10266113]
[180.72640991 509.58456421]
[171.08056641 498.08184814]
[162.58992004 485.70181274]
[155.33378601 472.56015015]
[149.37989807 458.77947998]
[144.78384399 444.48849487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 158]
[12 157]
[14 155]
[15 154]
[16 153]
[17 151]
[18 150]
[19 149]
[20 148]
[43 147]
[44 146]
[45 145]
[46 144]
[48 141]
[49 140]
[51 138]
[52 137]
[53 136]
[54 135]
[56 133]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
