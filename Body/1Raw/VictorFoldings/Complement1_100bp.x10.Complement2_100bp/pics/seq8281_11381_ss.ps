%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[-1.32210040 388.90429688]
[-8.38592529 402.48226929]
[-20.95724106 411.21270752]
[-36.14725494 413.08944702]
[-50.46540833 407.68118286]
[-60.62149811 396.23077393]
[-64.28172302 381.36935425]
[-60.60499954 366.51202393]
[-50.43620682 355.07287598]
[-36.11205673 349.68054199]
[-34.32959366 334.78680420]
[-32.54712677 319.89309692]
[-30.76465988 304.99938965]
[-38.97053528 317.55578613]
[-49.90925598 327.81954956]
[-62.96219254 335.21014404]
[-77.39112854 339.30960083]
[-92.38004303 339.88613892]
[-107.08124542 336.90707397]
[-120.66329956 330.54092407]
[-132.35809326 321.14773560]
[-141.50419617 309.25872803]
[-147.58438110 295.54629517]
[-150.25479126 280.78588867]
[-149.36436462 265.81234741]
[-144.96348572 251.47247314]
[-137.30104065 238.57723999]
[-126.81038666 227.85594177]
[-114.08480835 219.91494751]
[-99.84399414 215.20332336]
[-84.89334869 213.98754883]
[-70.07839203 216.33638000]
[-56.23698044 222.11698914]
[-44.15192032 231.00244141]
[-34.50667572 242.49023438]
[-27.84673500 255.93066406]
[-24.54874611 270.56362915]
[-24.79937363 285.56259155]
[-17.91996193 272.23315430]
[-11.04054928 258.90371704]
[-4.16113615 245.57429504]
[-4.88401413 242.86587524]
[-4.57760239 239.70790100]
[-3.06530809 236.49101257]
[-0.31506741 233.66247559]
[3.54519558 231.67442322]
[11.20579338 218.77809143]
[18.86639023 205.88175964]
[26.52698708 192.98544312]
[11.56855679 194.10137939]
[1.25817466 183.20661926]
[3.19627237 168.33235168]
[15.95415592 160.44334412]
[30.12718773 165.35507202]
[35.26769257 179.44515991]
[43.86625671 167.15432739]
[52.46482086 154.86347961]
[61.06338501 142.57264709]
[69.66194916 130.28181458]
[78.26051331 117.99097443]
[86.85907745 105.70013428]
[88.26311493 91.78897858]
[100.85008240 85.70130157]
[109.44864655 73.41046143]
[117.86326599 60.99296951]
[126.09207916 48.45156860]
[134.32087708 35.91016769]
[142.54969788 23.36876869]
[150.77850342 10.82736778]
[136.53991699 15.54570866]
[121.98463440 11.92028618]
[111.62275696 1.07447612]
[108.66503906 -13.63102913]
[114.02794647 -27.63956833]
[126.04973602 -36.61044312]
[141.00532532 -37.76393127]
[154.26054382 -30.74261093]
[161.70814514 -17.72211647]
[161.04031372 -2.73674202]
[170.87088013 -14.06633472]
[180.70146179 -25.39592743]
[175.14331055 -40.96829987]
[178.17938232 -57.12620544]
[188.88796997 -69.47704315]
[204.27473450 -74.71185303]
[220.10955811 -71.49150848]
[229.77037048 -82.96620941]
[232.73954773 -98.50630188]
[246.85548401 -103.25917053]
[256.51629639 -114.73387146]
[266.17709351 -126.20857239]
[275.83792114 -137.68327332]
[285.49871826 -149.15797424]
[295.15954590 -160.63267517]
[284.57626343 -171.27655029]
[274.97512817 -182.81413269]
[266.43127441 -195.15512085]
[259.01153564 -208.20292664]
[252.77403259 -221.85543823]
[247.76754761 -236.00579834]
[244.03128052 -250.54327393]
[241.59446716 -265.35406494]
[240.47618103 -280.32226562]
[240.68518066 -295.33071899]
[242.21983337 -310.26199341]
[245.06809998 -324.99917603]
[249.20771790 -339.42697144]
[254.60627747 -353.43243408]
[261.22152710 -366.90597534]
[269.00167847 -379.74212646]
[277.88586426 -391.84042358]
[287.80456543 -403.10617065]
[298.68011475 -413.45123291]
[310.42739868 -422.79461670]
[322.95449829 -431.06320190]
[336.16336060 -438.19226074]
[349.95059204 -444.12600708]
[364.20831299 -448.81802368]
[378.82495117 -452.23156738]
[393.68603516 -454.33990479]
[408.67532349 -455.12655640]
[423.67550659 -454.58538818]
[438.56912231 -452.72058105]
[453.23965454 -449.54678345]
[467.57226562 -445.08877563]
[481.45480347 -439.38150024]
[494.77859497 -432.46963501]
[507.43936157 -424.40722656]
[519.33801270 -415.25738525]
[530.38146973 -405.09173584]
[540.48321533 -393.98986816]
[549.56427002 -382.03860474]
[557.55352783 -369.33154297]
[564.38842773 -355.96810913]
[570.01550293 -342.05288696]
[574.39074707 -327.69476318]
[577.47991943 -313.00616455]
[579.25872803 -298.10205078]
[579.71337891 -283.09899902]
[578.84027100 -268.11450195]
[576.64624023 -253.26580811]
[573.14843750 -238.66912842]
[568.37426758 -224.43870544]
[562.36108398 -210.68592834]
[555.15594482 -197.51840210]
[546.81524658 -185.03921509]
[537.40423584 -173.34600830]
[526.99664307 -162.53031921]
[515.67382812 -152.67678833]
[503.52450562 -143.86254883]
[490.64367676 -136.15655518]
[477.13220215 -129.61914062]
[463.09582520 -124.30146027]
[448.64440918 -120.24514008]
[433.89102173 -117.48192596]
[418.95114136 -116.03343964]
[403.94174194 -115.91102600]
[388.98022461 -117.11563110]
[374.18374634 -119.63784027]
[359.66806030 -123.45790100]
[345.54681396 -128.54592896]
[331.93051147 -134.86209106]
[318.92572021 -142.35694885]
[306.63424683 -150.97186279]
[296.97341919 -139.49716187]
[287.31262207 -128.02246094]
[277.65179443 -116.54776001]
[267.99099731 -105.07305908]
[258.33016968 -93.59836578]
[256.05200195 -78.87901306]
[241.24507141 -73.30539703]
[231.58425903 -61.83069611]
[237.07041931 -49.32392883]
[236.63058472 -35.60768890]
[230.29362488 -23.36056709]
[219.24557495 -14.99881840]
[205.60807800 -12.19971371]
[192.03106689 -15.56534767]
[182.20048523 -4.23575401]
[172.36990356 7.09383869]
[163.31990051 19.05617523]
[155.09109497 31.59757614]
[146.86228943 44.13897705]
[138.63348389 56.68037796]
[130.40466309 69.22177887]
[130.48124695 73.99704742]
[127.55886078 78.87112427]
[121.73948669 82.00902557]
[113.14092255 94.29986572]
[111.73688507 108.21102142]
[99.14991760 114.29869843]
[90.55135345 126.58953857]
[81.95278931 138.88037109]
[73.35422516 151.17121887]
[64.75566101 163.46205139]
[56.15709305 175.75288391]
[47.55852890 188.04373169]
[39.42331314 200.64604187]
[31.76271629 213.54235840]
[24.10211945 226.43869019]
[16.44152260 239.33502197]
[9.16829300 252.45370483]
[2.28888035 265.78314209]
[-4.59053230 279.11257935]
[-11.46994495 292.44198608]
[-15.87094307 306.78186035]
[-17.65340805 321.67556763]
[-19.43587494 336.56927490]
[-21.21833992 351.46301270]
[-8.57120323 360.08325195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[38 205]
[39 204]
[40 203]
[41 202]
[46 201]
[47 200]
[48 199]
[49 198]
[55 197]
[56 196]
[57 195]
[58 194]
[59 193]
[60 192]
[61 191]
[63 189]
[64 188]
[65 185]
[66 184]
[67 183]
[68 182]
[69 181]
[79 180]
[80 179]
[81 178]
[86 172]
[87 171]
[89 169]
[90 168]
[91 167]
[92 166]
[93 165]
[94 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
