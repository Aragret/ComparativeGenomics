%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[-5.93894815 481.70037842]
[-7.91286898 496.58605957]
[-11.54107666 511.15713501]
[-16.77794456 525.23034668]
[-23.55761147 538.62872314]
[-31.79481697 551.18371582]
[-41.38596725 562.73748779]
[-52.21044922 573.14471436]
[-64.13212585 582.27453613]
[-77.00107574 590.01214600]
[-90.65545654 596.26019287]
[-104.92354584 600.94006348]
[-119.62591553 603.99304199]
[-134.57766724 605.38055420]
[-149.59074402 605.08532715]
[-164.47637939 603.11096191]
[-179.04733276 599.48229980]
[-193.12039185 594.24499512]
[-206.51855469 587.46496582]
[-219.07331848 579.22735596]
[-230.62681580 569.63586426]
[-241.03373718 558.81109619]
[-250.16319275 546.88916016]
[-257.90039062 534.01995850]
[-264.14801025 520.36535645]
[-268.82751465 506.09716797]
[-271.88000488 491.39468384]
[-273.26712036 476.44290161]
[-272.97140503 461.42984009]
[-270.99658203 446.54425049]
[-267.36752319 431.97341919]
[-262.12979126 417.90051270]
[-255.34933472 404.50256348]
[-247.11137390 391.94802856]
[-237.51953125 380.39483643]
[-226.69442749 369.98822021]
[-214.77221680 360.85913086]
[-201.90280151 353.12231445]
[-188.24804688 346.87509155]
[-173.97967529 342.19604492]
[-159.27713013 339.14398193]
[-144.32530212 337.75732422]
[-129.31222534 338.05346680]
[-114.42671204 340.02871704]
[-99.85597229 343.65823364]
[-85.78322601 348.89636230]
[-72.38547516 355.67724609]
[-64.15666962 343.13583374]
[-55.92786026 330.59445190]
[-59.19791794 316.10852051]
[-51.03139114 303.27252197]
[-35.81504059 299.94079590]
[-27.58623123 287.39941406]
[-19.35742378 274.85800171]
[-11.12861633 262.31658936]
[-2.89980841 249.77519226]
[-2.38689542 234.88943481]
[11.65280724 227.59577942]
[19.88161469 215.05438232]
[28.11042404 202.51298523]
[36.33922958 189.97157288]
[44.56803894 177.43017578]
[45.08095169 162.54440308]
[59.12065506 155.25076294]
[66.97241211 142.46990967]
[74.44015503 129.46096802]
[81.90789032 116.45201111]
[89.37563324 103.44306183]
[96.74632263 90.37887573]
[104.01955414 77.26017761]
[111.29278564 64.14148712]
[118.56600952 51.02279282]
[125.83924103 37.90409851]
[133.11247253 24.78540230]
[140.38569641 11.66670895]
[140.31027222 -4.15431738]
[153.24838257 -11.53365231]
[157.64938354 -25.87349892]
[151.17411804 -40.30892944]
[160.01603699 -52.29516220]
[161.35427856 -67.23534393]
[162.69250488 -82.17552948]
[163.91947937 -97.12526703]
[165.03512573 -112.08371735]
[150.32139587 -115.10600281]
[136.11495972 -119.98507690]
[122.64909363 -126.64082336]
[110.14493561 -134.96394348]
[98.80780792 -144.81777954]
[88.82388306 -156.04049683]
[80.35710144 -168.44783020]
[73.54649353 -181.83602905]
[68.50389862 -195.98526001]
[65.31211853 -210.66316223]
[64.02356720 -225.62872314]
[64.65940094 -240.63618469]
[67.20918274 -255.43913269]
[71.63104248 -269.79446411]
[77.85236359 -283.46646118]
[85.77099609 -296.23059082]
[95.25689697 -307.87731934]
[106.15431213 -318.21533203]
[118.28427887 -327.07492065]
[131.44763184 -334.31057739]
[145.42820740 -339.80346680]
[159.99642944 -343.46340942]
[174.91307068 -345.23031616]
[189.93319702 -345.07516479]
[204.81016541 -343.00048828]
[219.29966736 -339.04040527]
[233.16380310 -333.25985718]
[246.17486572 -325.75384521]
[258.11923218 -316.64559937]
[268.80078125 -306.08465576]
[278.04406738 -294.24447632]
[285.69732666 -281.31945801]
[291.63488770 -267.52188110]
[295.75927734 -253.07826233]
[298.00271606 -238.22581482]
[298.32839966 -223.20841980]
[296.73098755 -208.27267456]
[293.23666382 -193.66383362]
[287.90286255 -179.62179565]
[280.81716919 -166.37713623]
[272.09588623 -154.14735413]
[261.88226318 -143.13325500]
[250.34399414 -133.51573181]
[237.67056274 -125.45268250]
[224.07009888 -119.07652283]
[209.76589966 -114.49195862]
[194.99285889 -111.77426147]
[179.99359131 -110.96807098]
[178.87792969 -96.00961304]
[181.51524353 -89.10552979]
[177.63269043 -80.83729553]
[176.29446411 -65.89710999]
[174.95622253 -50.95692825]
[181.52720642 -37.59011841]
[172.58956909 -24.53526497]
[180.39613342 -37.34376144]
[190.66381836 -48.27877045]
[202.95605469 -56.87533188]
[216.75016785 -62.76791763]
[231.45960999 -65.70597076]
[246.45895386 -65.56455994]
[261.11038208 -62.34969711]
[274.79095459 -56.19808960]
[286.91891479 -47.37129593]
[296.97863770 -36.24464417]
[304.54229736 -23.29124069]
[309.28836060 -9.06187248]
[311.01498413 5.83842134]
[309.64877319 20.77607346]
[305.24780273 35.11592484]
[297.99917603 48.24824142]
[288.21118164 59.61462784]
[276.29992676 68.73178101]
[262.77194214 75.21202850]
[248.20243835 78.77983856]
[233.21089172 79.28350067]
[218.43476868 76.70159149]
[204.50236511 71.14390564]
[192.00607300 62.84675980]
[181.47724915 52.16294098]
[173.36358643 39.54674149]
[168.01008606 25.53460312]
[165.64437866 10.72233009]
[166.36708069 -4.26042318]
[166.96273804 10.62226677]
[153.50439453 18.93993950]
[146.23117065 32.05863190]
[138.95793152 45.17732620]
[131.68470764 58.29602051]
[124.41147614 71.41471100]
[117.13824463 84.53340912]
[109.86502075 97.65209961]
[109.02146149 105.66839600]
[102.38459015 110.91079712]
[94.91684723 123.91975403]
[87.44910431 136.92871094]
[79.98136139 149.93765259]
[80.14673615 154.27662659]
[79.03462982 158.06182861]
[76.97600555 160.95965576]
[74.37615967 162.77828979]
[71.66205597 163.47956848]
[70.56056213 179.26237488]
[57.10943985 185.65898132]
[48.88063049 198.20039368]
[40.65182495 210.74179077]
[32.42301559 223.28318787]
[24.19420815 235.82458496]
[23.09271622 251.60740662]
[9.64159203 258.00399780]
[1.41278398 270.54541016]
[-6.81602383 283.08682251]
[-15.04483128 295.62820435]
[-23.27363968 308.16961670]
[-20.27226639 323.45455933]
[-28.79610443 336.05609131]
[-43.38645935 338.82324219]
[-51.61526489 351.36465454]
[-59.84407425 363.90603638]
[-48.29000854 373.49685669]
[-37.88244629 384.32101440]
[-28.75226974 396.24243164]
[-21.01430321 409.11114502]
[-14.76586246 422.76535034]
[-10.08552361 437.03329468]
[-7.03214979 451.73556519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 203]
[48 202]
[49 201]
[52 198]
[53 197]
[54 196]
[55 195]
[56 194]
[58 192]
[59 191]
[60 190]
[61 189]
[62 188]
[64 186]
[65 181]
[66 180]
[67 179]
[68 178]
[69 176]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[75 170]
[77 168]
[78 139]
[80 137]
[81 136]
[82 135]
[83 133]
[84 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
