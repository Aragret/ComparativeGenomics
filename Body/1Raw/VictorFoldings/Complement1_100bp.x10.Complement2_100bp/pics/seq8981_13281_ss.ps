%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[182.77435303 434.85250854]
[191.75653076 422.77746582]
[202.92205811 412.68701172]
[215.84173584 404.96896362]
[210.80482483 390.83993530]
[205.76791382 376.71090698]
[200.73098755 362.58187866]
[195.69407654 348.45285034]
[190.65716553 334.32382202]
[179.86610413 328.85760498]
[175.55412292 317.12768555]
[180.54475403 305.23416138]
[175.71875000 291.03170776]
[170.89276123 276.82925415]
[166.06675720 262.62680054]
[160.09519958 248.86668396]
[153.01809692 235.64115906]
[145.94097900 222.41563416]
[138.86387634 209.19009399]
[126.03707123 201.61895752]
[126.34804535 185.80079651]
[119.27093506 172.57527161]
[117.18274689 187.42921448]
[108.02543640 199.30960083]
[94.19270325 205.11094666]
[79.30039215 203.31677246]
[67.24131775 194.39607239]
[61.16769028 180.68072510]
[62.66714478 165.75585938]
[71.34772491 153.52279663]
[84.94035339 147.17926025]
[99.89193726 148.38340759]
[112.29360199 156.81982422]
[107.25668335 142.69079590]
[102.21977234 128.56176758]
[87.67341614 125.86033630]
[76.41475677 116.26155090]
[71.44665527 102.32555389]
[74.09418488 87.76929474]
[83.65119934 76.47515869]
[78.61428070 62.34612656]
[73.57736969 48.21709442]
[68.54045105 34.08806610]
[63.50353622 19.95903778]
[58.46661758 5.83000755]
[43.44039917 2.97344589]
[31.93744278 -6.95524025]
[26.98158073 -21.21377563]
[29.80919075 -35.93996048]
[39.56253433 -47.19775391]
[34.52561569 -61.32678223]
[29.48870087 -75.45581055]
[14.46247959 -78.31237793]
[2.95952392 -88.24105835]
[-1.99633765 -102.49959564]
[0.83127117 -117.22578430]
[10.58461380 -128.48358154]
[5.54769802 -142.61260986]
[-1.84319711 -129.55984497]
[-16.26163292 -125.42356873]
[-29.44807434 -132.57324219]
[-33.84872818 -146.91319275]
[-26.94270134 -160.22885132]
[-12.68607903 -164.89241028]
[0.75367022 -158.23306274]
[-3.00263047 -172.75512695]
[-6.75893116 -187.27719116]
[-10.51523209 -201.79924011]
[-14.27153206 -216.32130432]
[-30.09209251 -222.30511475]
[-39.13883972 -236.39970398]
[-38.01316071 -252.94342041]
[-27.35631752 -265.42977905]
[-31.32841492 -279.89431763]
[-35.30051041 -294.35882568]
[-39.27260590 -308.82336426]
[-43.24470139 -323.28787231]
[-58.18357849 -321.62161255]
[-73.19918823 -322.31292725]
[-87.92176056 -325.34481812]
[-101.98873901 -330.64260864]
[-115.05371094 -338.07586670]
[-126.79493713 -347.46148682]
[-136.92327881 -358.56838989]
[-145.18933105 -371.12301636]
[-151.38951111 -384.81625366]
[-155.37115479 -399.31082153]
[-157.03619385 -414.24984741]
[-156.34362793 -429.26538086]
[-153.31053162 -443.98770142]
[-148.01156616 -458.05426025]
[-140.57725525 -471.11862183]
[-131.19065857 -482.85906982]
[-120.08292389 -492.98648071]
[-107.52760315 -501.25149536]
[-93.83386993 -507.45056152]
[-79.33895874 -511.43099976]
[-64.39980316 -513.09478760]
[-49.38430786 -512.40100098]
[-34.66223526 -509.36669922]
[-20.59613228 -504.06655884]
[-7.53238869 -496.63116455]
[4.20728922 -487.24362183]
[14.33380127 -476.13504028]
[22.59777260 -463.57904053]
[28.79569626 -449.88479614]
[32.77494431 -435.38955688]
[34.43751907 -420.45025635]
[33.74248123 -405.43481445]
[30.70694923 -390.71301270]
[25.40567207 -376.64733887]
[17.96920013 -363.58419800]
[8.58066177 -351.84530640]
[-2.52873993 -341.71969604]
[-15.08542633 -333.45678711]
[-28.78017998 -327.25997925]
[-24.80808258 -312.79547119]
[-20.83598709 -298.33093262]
[-16.86388969 -283.86639404]
[-12.89179420 -269.40188599]
[-0.01549799 -265.87438965]
[9.51278687 -256.36883545]
[13.12870789 -243.29234314]
[9.78470516 -230.03201294]
[0.25052682 -220.07760620]
[4.00682735 -205.55554199]
[7.76312828 -191.03349304]
[11.51942921 -176.51142883]
[15.27572918 -161.98936462]
[19.67672729 -147.64952087]
[24.71364403 -133.52049255]
[39.38905716 -130.97140503]
[50.89468384 -121.35493469]
[56.07629776 -107.17687988]
[53.44826126 -92.21057892]
[43.61772919 -80.49272919]
[48.65464783 -66.36370087]
[53.69156265 -52.23467255]
[68.36697388 -49.68558884]
[79.87260437 -40.06911469]
[85.05421448 -25.89105797]
[82.42617798 -10.92475605]
[72.59564972 0.79309112]
[77.63256836 14.92212105]
[82.66947937 29.05114937]
[87.70639801 43.18017960]
[92.74331665 57.30920792]
[97.78022766 71.43824005]
[112.32658386 74.13966370]
[123.58524323 83.73844910]
[128.55334473 97.67444611]
[125.90581512 112.23070526]
[116.34880066 123.52484131]
[121.38571930 137.65386963]
[126.42263031 151.78289795]
[132.49645996 165.49816895]
[139.57357788 178.72369385]
[152.90658569 187.24082947]
[152.08940125 202.11299133]
[159.16651917 215.33851624]
[166.24362183 228.56405640]
[173.32072449 241.78958130]
[174.93331909 226.87651062]
[183.21484375 214.36985779]
[196.31520081 207.06364441]
[211.30772400 206.59008789]
[224.84304810 213.05499268]
[233.89733887 225.01406860]
[236.44787598 239.79563904]
[231.92481995 254.09745789]
[221.33866882 264.72445679]
[207.05436707 269.30255127]
[192.26309204 266.80899048]
[180.26921082 257.80078125]
[185.09521484 272.00323486]
[189.92120361 286.20568848]
[194.74720764 300.40814209]
[208.87341309 312.22052002]
[204.78619385 329.28689575]
[209.82310486 343.41592407]
[214.86001587 357.54495239]
[219.89694214 371.67398071]
[224.93385315 385.80303955]
[229.97076416 399.93206787]
[244.85923767 397.73663330]
[259.88992310 398.48831177]
[274.48504639 402.15817261]
[288.08367920 408.60516357]
[300.16308594 417.58148193]
[310.25897217 428.74209595]
[317.98327637 441.65805054]
[323.03909302 455.83282471]
[325.23208618 470.72164917]
[324.47799683 485.75219727]
[320.80575562 500.34677124]
[314.35656738 513.94433594]
[305.37829590 526.02227783]
[294.21603394 536.11633301]
[281.29885864 543.83856201]
[267.12322998 548.89208984]
[252.23405457 551.08270264]
[237.20362854 550.32617188]
[222.60966492 546.65155029]
[209.01313782 540.20019531]
[196.93664551 531.21997070]
[186.84437561 520.05609131]
[179.12425232 507.13763428]
[174.07302856 492.96118164]
[171.88484192 478.07165527]
[172.64381409 463.04135132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[12 177]
[13 176]
[14 175]
[15 174]
[16 162]
[17 161]
[18 160]
[19 159]
[21 157]
[22 156]
[33 155]
[34 154]
[35 153]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[45 143]
[50 138]
[51 137]
[52 136]
[57 131]
[58 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
