%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[178.71199036 511.65115356]
[184.33656311 497.71160889]
[192.07260132 484.82360840]
[201.72961426 473.30456543]
[213.06980896 463.43811035]
[225.81388855 455.46725464]
[213.71368408 446.78195190]
[215.43464661 431.05462646]
[209.56568909 417.25042725]
[203.69673157 403.44625854]
[192.59944153 398.63201904]
[187.59693909 387.17956543]
[191.87080383 375.01007080]
[186.20800781 361.12002563]
[180.54522705 347.23001099]
[177.45457458 345.53289795]
[175.03236389 342.25448608]
[174.01289368 337.72525024]
[174.95504761 332.59112549]
[169.91812134 318.46209717]
[164.88121033 304.33306885]
[159.84428406 290.20404053]
[154.80737305 276.07501221]
[149.77046204 261.94598389]
[136.24514771 255.81396484]
[130.93572998 241.55686951]
[137.45924377 227.41184998]
[132.42233276 213.28282166]
[127.38541412 199.15379333]
[113.86010742 193.02178955]
[108.55068207 178.76469421]
[115.07420349 164.61967468]
[103.51242065 155.22955322]
[106.16643524 139.63253784]
[101.12952423 125.50350952]
[96.09260559 111.37448120]
[90.84588623 97.32201385]
[85.39053345 83.34921265]
[79.93517303 69.37641907]
[74.47982025 55.40361786]
[69.02445984 41.43082047]
[63.56910324 27.45802116]
[58.11374664 13.48522377]
[55.44727707 28.24632072]
[47.07493973 40.69235992]
[34.40761566 48.72597122]
[19.57997131 50.99334335]
[5.09072685 47.11239243]
[-6.61842585 37.73711777]
[-13.57428837 24.44742393]
[-14.60467720 9.48285580]
[-9.53595257 -4.63479424]
[0.77771658 -15.52645302]
[14.59829521 -21.35668564]
[29.59677315 -21.14299583]
[43.24564362 -14.92139244]
[53.24565887 -3.73889017]
[50.57986450 -18.50010681]
[47.91407013 -33.26132584]
[45.24827194 -48.02254105]
[29.53327942 -52.23833084]
[17.27387238 -62.84732056]
[10.89120102 -77.68719482]
[11.61646843 -93.76691437]
[19.25377464 -107.86958313]
[32.22948837 -117.19597626]
[29.34421349 -131.91586304]
[26.45894241 -146.63575745]
[23.24566841 -161.28753662]
[19.70599556 -175.86392212]
[16.16632271 -190.44029236]
[5.57752371 -197.80508423]
[2.92940712 -210.01864624]
[9.10855961 -220.41790771]
[5.78629971 -235.04537964]
[2.46404028 -249.67283630]
[-8.13761330 -261.41656494]
[-3.41136336 -275.54144287]
[-6.73362303 -290.16891479]
[-10.16468430 -304.77124023]
[-13.70435619 -319.34759521]
[-17.24402809 -333.92398071]
[-32.28010178 -333.28939819]
[-47.15101624 -335.60070801]
[-61.28517532 -340.76904297]
[-74.13929749 -348.59579468]
[-85.21929932 -358.78009033]
[-94.09929657 -370.93045044]
[-100.43798065 -384.57989502]
[-103.99169159 -399.20376587]
[-104.62384033 -414.23995972]
[-102.31012726 -429.11047363]
[-97.13948822 -443.24380493]
[-89.31066895 -456.09664917]
[-79.12458801 -467.17501831]
[-66.97276306 -476.05303955]
[-53.32229233 -482.38952637]
[-38.69785690 -485.94085693]
[-23.66157722 -486.57058716]
[-8.79141045 -484.25445557]
[5.34107208 -479.08154297]
[18.19265747 -471.25064087]
[29.26936340 -461.06274414]
[38.14543152 -448.90951538]
[44.47969055 -435.25799561]
[48.02866745 -420.63299561]
[48.65594864 -405.59661865]
[46.33742523 -390.72680664]
[41.16221237 -376.59518433]
[33.32923126 -363.74484253]
[23.13956261 -352.66979980]
[10.98486996 -343.79568481]
[-2.66765332 -337.46365356]
[0.87201911 -322.88726807]
[4.41169167 -308.31091309]
[9.04482746 -302.55279541]
[7.89383745 -293.49114990]
[11.21609688 -278.86370850]
[21.58012009 -268.16622925]
[17.09150124 -252.99510193]
[20.41375923 -238.36763000]
[23.73601913 -223.74017334]
[36.33523941 -211.52433777]
[30.74269867 -193.97996521]
[34.28237152 -179.40359497]
[37.82204437 -164.82720947]
[40.62675858 -162.69041443]
[42.53583908 -159.08895874]
[42.87216568 -154.45860291]
[41.17883301 -149.52102661]
[44.06410599 -134.80113220]
[46.94937897 -120.08124542]
[60.52924728 -117.24304199]
[72.03799438 -109.41867828]
[79.71947479 -97.76216888]
[82.38636780 -84.01522827]
[79.60363007 -70.24708557]
[71.75901794 -58.54296875]
[60.00949097 -50.68833923]
[62.67528534 -35.92712021]
[65.34107971 -21.16590309]
[68.00687408 -6.40468597]
[72.08654022 8.02986717]
[77.54190063 22.00266457]
[82.99726105 35.97546387]
[88.45261383 49.94826126]
[93.90797424 63.92105865]
[99.36332703 77.89385986]
[104.81868744 91.86665344]
[109.02114868 95.00564575]
[111.16574097 100.27574921]
[110.22163391 106.33756256]
[115.25855255 120.46659851]
[120.29547119 134.59562683]
[132.21752930 144.99635315]
[129.20323181 159.58276367]
[143.20364380 166.41111755]
[148.11051941 180.81170654]
[141.51445007 194.11688232]
[146.55136108 208.24591064]
[151.58827209 222.37493896]
[165.58868408 229.20329285]
[170.49555969 243.60388184]
[163.89949036 256.90905762]
[168.93640137 271.03808594]
[173.97332764 285.16711426]
[179.01023865 299.29614258]
[184.04714966 313.42517090]
[189.08407593 327.55419922]
[194.43525696 341.56723022]
[200.09803772 355.45724487]
[205.76083374 369.34729004]
[220.56506348 380.29788208]
[217.50090027 397.57730103]
[223.36987305 411.38146973]
[229.23883057 425.18563843]
[241.75880432 434.85833740]
[239.61805725 449.59829712]
[254.20039368 445.95111084]
[269.17376709 444.63012695]
[284.16940308 445.66787720]
[298.81808472 449.03881836]
[312.75900269 454.65994263]
[325.64889526 462.39279175]
[337.17034912 472.04696655]
[347.03958130 483.38470459]
[355.01361084 496.12680054]
[360.89605713 509.95950317]
[364.54202271 524.54211426]
[365.86178589 539.51562500]
[364.82278442 554.51116943]
[361.45062256 569.15954590]
[355.82836914 583.10003662]
[348.09445190 595.98931885]
[338.43933105 607.50994873]
[327.10076904 617.37823486]
[314.35800171 625.35119629]
[300.52484131 631.23254395]
[285.94189453 634.87731934]
[270.96832275 636.19580078]
[255.97283936 635.15557861]
[241.32472229 631.78222656]
[227.38471985 626.15881348]
[214.49610901 618.42382812]
[202.97625732 608.76776123]
[193.10887146 597.42840576]
[185.13694763 584.68493652]
[179.25680542 570.85125732]
[175.61323547 556.26806641]
[174.29595947 541.29437256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 178]
[8 176]
[9 175]
[10 174]
[13 172]
[14 171]
[15 170]
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[24 164]
[27 161]
[28 160]
[29 159]
[32 156]
[34 154]
[35 153]
[36 152]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[57 142]
[58 141]
[59 140]
[60 139]
[66 132]
[67 131]
[68 130]
[69 126]
[70 125]
[71 124]
[74 122]
[75 121]
[76 120]
[78 118]
[79 117]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
