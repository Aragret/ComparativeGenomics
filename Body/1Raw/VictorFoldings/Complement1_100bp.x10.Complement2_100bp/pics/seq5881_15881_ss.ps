%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[84.83691406 556.12158203]
[71.85241699 548.59912109]
[59.42428970 540.18920898]
[47.61308670 530.93286133]
[36.47634888 520.87512207]
[26.06833649 510.06503296]
[16.43975449 498.55523682]
[7.63751173 486.40185547]
[-0.29550600 473.66403198]
[-7.32065010 460.40386963]
[-13.40369415 446.68594360]
[-18.51500130 432.57711792]
[-22.62967110 418.14608765]
[-25.72765732 403.46319580]
[-27.79386330 388.59997559]
[-28.81822777 373.62881470]
[-28.79575539 358.62268066]
[-27.72655869 343.65466309]
[-25.61584473 328.79769897]
[-22.47389793 314.12414551]
[-18.31602669 299.70553589]
[-13.16248512 285.61206055]
[-7.03838348 271.91241455]
[0.02644329 258.67333984]
[7.99757528 245.95935059]
[16.83617783 233.83236694]
[26.49918938 222.35147095]
[36.93953323 211.57260132]
[48.10634232 201.54827881]
[59.94521332 192.32733154]
[72.39846802 183.95468140]
[85.40544128 176.47114563]
[98.90275574 169.91314697]
[112.82465363 164.31266785]
[101.54757690 154.58245850]
[104.66479492 139.07138062]
[100.05078125 124.79865265]
[95.43677521 110.52591705]
[90.74198914 124.77228546]
[79.61907196 134.83612061]
[64.97553253 138.08676147]
[50.63914490 133.67448425]
[40.35741806 122.75267029]
[36.81796646 108.17623901]
[40.94599533 93.75544739]
[51.66244507 83.25984192]
[66.16606140 79.43295288]
[80.66564178 83.27513123]
[91.37056732 93.78126526]
[88.92483521 78.98199463]
[86.47911072 64.18272400]
[84.03338623 49.38344955]
[81.58765411 34.58417892]
[77.08002472 20.27749252]
[70.60053253 6.74914646]
[64.12103271 -6.77919912]
[57.64154053 -20.30754471]
[51.16204453 -33.83589172]
[44.68254852 -47.36423492]
[38.20305252 -60.89258194]
[31.72355652 -74.42092896]
[25.24406052 -87.94927216]
[18.76456451 -101.47761536]
[12.28506851 -115.00596619]
[5.80557299 -128.53430176]
[5.57969332 -113.53601074]
[1.68030918 -99.05171204]
[-5.65413094 -85.96714783]
[-15.97512245 -75.08242798]
[-28.65153313 -67.06316376]
[-42.90819550 -62.39973450]
[-57.87331009 -61.37731171]
[-72.63175201 -64.05841827]
[-86.28104401 -70.27910614]
[-97.98651886 -79.65897369]
[-107.03237915 -91.62443542]
[-112.86547852 -105.44380951]
[-115.12911224 -120.27201843]
[-113.68486023 -135.20233154]
[-108.62104034 -149.32174683]
[-100.24730682 -161.76684570]
[-89.07571411 -171.77661133]
[-75.78941345 -178.73895264]
[-61.20086670 -182.22811890]
[-46.20216751 -182.03073120]
[-31.71048927 -178.15887451]
[-18.61200714 -170.84930420]
[-7.70769835 -160.54901123]
[0.33564696 -147.88783264]
[-1.22487605 -162.80644226]
[-2.78539896 -177.72505188]
[-17.66890526 -180.25166321]
[-31.31832504 -186.70115662]
[-42.72077942 -196.59492493]
[-51.03013229 -209.19877625]
[-55.62977219 -223.57743835]
[-56.17837524 -238.66390991]
[-52.63523483 -253.33868408]
[-45.26327515 -266.51275635]
[-34.60953903 -277.20858765]
[-21.46460915 -284.63241577]
[-6.80392647 -288.23339844]
[8.28458977 -287.74426270]
[22.68127251 -283.20135498]
[35.31779099 -274.94174194]
[45.25643158 -263.57839966]
[51.75968170 -249.95449829]
[54.34495544 -235.08106995]
[52.82041168 -220.06179810]
[47.29917908 -206.01123047]
[38.19097137 -193.97200012]
[26.17167664 -184.83749390]
[12.13320541 -179.28556824]
[13.69372845 -164.36695862]
[15.25425148 -149.44836426]
[19.33391762 -135.01380920]
[25.81341362 -121.48545837]
[32.29291153 -107.95711517]
[38.77240753 -94.42877197]
[45.25190353 -80.90042114]
[51.73139954 -67.37207794]
[58.21089172 -53.84373093]
[64.69039154 -40.31538773]
[71.16988373 -26.78704071]
[77.64938354 -13.25869560]
[84.12887573 0.26965043]
[90.60837555 13.79799557]
[91.08881378 -1.19430804]
[95.91014862 -15.39834690]
[104.65528870 -27.58532906]
[116.56768799 -36.70095825]
[130.61680603 -41.95664215]
[145.58726501 -42.89771271]
[160.18394470 -39.44275284]
[173.14410400 -31.89065933]
[183.34657288 -20.89475632]
[189.90870667 -7.40630293]
[192.26283264 7.40781546]
[190.20527649 22.26602936]
[183.91407776 35.88295364]
[173.93344116 47.08058929]
[161.12681580 54.89023209]
[146.60211182 58.63626099]
[131.61584473 57.99461365]
[117.46447754 53.02080154]
[105.37224579 44.14510345]
[96.38692474 32.13845062]
[98.83265686 46.93772125]
[101.27838135 61.73699188]
[103.72410583 76.53626251]
[106.16983795 91.33553314]
[109.70951080 105.91191101]
[114.32351685 120.18464661]
[118.93753052 134.45738220]
[130.54463196 145.20845032]
[127.09738922 159.69865417]
[141.66313171 156.08981323]
[156.44514465 153.50582886]
[171.37138367 151.95927429]
[186.36915588 151.45770264]
[201.36538696 152.00355530]
[216.28700256 153.59414673]
[231.06132507 156.22177124]
[245.61634827 159.87358093]
[259.88119507 164.53182983]
[273.78631592 170.17378235]
[287.26403809 176.77197266]
[300.24865723 184.29426575]
[312.67687988 192.70397949]
[324.48822021 201.96017456]
[335.62509155 212.01774597]
[346.03326416 222.82768250]
[355.66201782 234.33732605]
[364.46444702 246.49060059]
[372.39764404 259.22830200]
[379.42297363 272.48837280]
[385.50622559 286.20620728]
[390.61770630 300.31497192]
[394.73260498 314.74594116]
[397.83078003 329.42877197]
[399.89721680 344.29196167]
[400.92178345 359.26312256]
[400.89953613 374.26925659]
[399.83056641 389.23727417]
[397.72006226 404.09426880]
[394.57830811 418.76788330]
[390.42065430 433.18655396]
[385.26730347 447.28009033]
[379.14340210 460.97982788]
[372.07876587 474.21899414]
[364.10781860 486.93310547]
[355.26937866 499.06021118]
[345.60653687 510.54125977]
[335.16635132 521.32025146]
[323.99969482 531.34472656]
[312.16094971 540.56585693]
[299.70782471 548.93865967]
[286.70095825 556.42242432]
[273.20373535 562.98059082]
[259.28192139 568.58129883]
[245.00332642 573.19720459]
[230.43751526 576.80584717]
[215.65547180 579.38958740]
[200.72920227 580.93591309]
[185.73143005 581.43731689]
[170.73521423 580.89123535]
[155.81361389 579.30041504]
[141.03933716 576.67260742]
[126.48435974 573.02056885]
[112.21958923 568.36212158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 156]
[36 154]
[37 153]
[38 152]
[49 151]
[50 150]
[51 149]
[52 148]
[53 147]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
