%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[100.34364319 503.86181641]
[86.85021973 510.44662476]
[72.73329926 515.55981445]
[58.15285492 519.14349365]
[43.27408600 521.15704346]
[28.26558304 521.57763672]
[13.29740047 520.40045166]
[-1.46085799 517.63897705]
[-15.84197044 513.32440186]
[-29.68298721 507.50558472]
[-42.82707977 500.24853516]
[-55.12531662 491.63543701]
[-66.43834686 481.76388550]
[-76.63798523 470.74575806]
[-85.60866547 458.70587158]
[-93.24874115 445.78063965]
[-99.47164154 432.11654663]
[-104.20686340 417.86837769]
[-107.40074158 403.19763184]
[-109.01709747 388.27047729]
[-109.03761292 373.25610352]
[-107.46205139 358.32461548]
[-104.30827332 343.64517212]
[-99.61200714 329.38412476]
[-93.42646790 315.70309448]
[-85.82174683 302.75701904]
[-76.88399506 290.69265747]
[-66.71450043 279.64669800]
[-55.42848969 269.74426270]
[-43.15383530 261.09759521]
[-30.02962303 253.80464172]
[-16.20455742 247.94805908]
[-1.83528805 243.59417725]
[12.91536903 240.79235840]
[27.88027763 239.57434082]
[42.88987732 239.95390320]
[57.77408981 241.92678833]
[61.31376266 227.35040283]
[56.79833603 213.15673828]
[67.57366180 201.57214355]
[71.11333466 186.99575806]
[74.65300751 172.41938782]
[78.19268036 157.84301758]
[73.67725372 143.64935303]
[84.45257568 132.06474304]
[79.93714905 117.87107849]
[90.71247101 106.28648376]
[77.94837952 114.16543579]
[63.08835983 112.12097931]
[52.92621613 101.08781433]
[52.10794067 86.11014557]
[61.00764084 74.03557587]
[75.55649567 70.38442230]
[89.10295868 76.82595062]
[95.45394135 90.41703033]
[100.49085999 76.28799438]
[105.52777863 62.15896606]
[110.56468964 48.02993774]
[115.60160828 33.90090942]
[120.63852692 19.77187920]
[117.98451233 4.17486763]
[129.54629517 -5.21525717]
[134.58320618 -19.34428596]
[137.90547180 -33.97174835]
[139.46598816 -48.89035034]
[141.02651978 -63.80895615]
[142.58703613 -78.72756195]
[144.14755249 -93.64616394]
[145.70808411 -108.56477356]
[146.60090637 -123.53817749]
[146.82423401 -138.53651428]
[147.04756165 -153.53485107]
[147.27088928 -168.53318787]
[132.34822083 -170.16070557]
[117.64354706 -173.17846680]
[103.28607178 -177.55995178]
[89.40197754 -183.26664734]
[76.11328888 -190.24841309]
[63.53677368 -198.44389343]
[51.78296661 -207.78105164]
[40.95516586 -218.17784119]
[31.14852524 -229.54289246]
[22.44922638 -241.77630615]
[14.93372154 -254.77059937]
[8.66806030 -268.41156006]
[3.70730495 -282.57931519]
[0.09505244 -297.14938354]
[-2.13695192 -311.99365234]
[-2.96909261 -326.98171997]
[-2.39405704 -341.98184204]
[-0.41689831 -356.86221313]
[2.94500756 -371.49203491]
[7.66211557 -385.74276733]
[13.69297028 -399.48916626]
[20.98457146 -412.61041260]
[29.47283936 -424.99118042]
[39.08317566 -436.52270508]
[49.73112488 -447.10360718]
[61.32310867 -456.64093018]
[73.75725555 -465.05084229]
[86.92428589 -472.25942993]
[100.70849609 -478.20333862]
[114.98873138 -482.83035278]
[129.63951111 -486.09979248]
[144.53205872 -487.98294067]
[159.53552246 -488.46322632]
[174.51803589 -487.53643799]
[189.34791565 -485.21072388]
[203.89485168 -481.50653076]
[218.03100586 -476.45639038]
[231.63212585 -470.10470581]
[244.57868958 -462.50729370]
[256.75692749 -453.73089600]
[268.05981445 -443.85266113]
[278.38800049 -432.95941162]
[287.65075684 -421.14688110]
[295.76663208 -408.51885986]
[302.66433716 -395.18634033]
[308.28323364 -381.26647949]
[312.57394409 -366.88162231]
[315.49877930 -352.15817261]
[317.03201294 -337.22552490]
[317.16018677 -322.21493530]
[315.88217163 -307.25830078]
[313.20919800 -292.48706055]
[309.16473389 -278.03100586]
[303.78433228 -264.01724243]
[297.11532593 -250.56887817]
[289.21624756 -237.80410767]
[280.15658569 -225.83511353]
[270.01589966 -214.76708984]
[258.88336182 -204.69729614]
[246.85676575 -195.71423340]
[234.04180908 -187.89683533]
[220.55113220 -181.31381226]
[206.50329590 -176.02302551]
[192.02172852 -172.07096863]
[177.23371887 -169.49235535]
[162.26922607 -168.30986023]
[162.04589844 -153.31152344]
[161.82257080 -138.31318665]
[161.59924316 -123.31484985]
[173.08886719 -132.95788574]
[188.04330444 -131.78958130]
[197.89595032 -120.47917938]
[197.00277710 -105.50579071]
[185.87542725 -95.44686127]
[170.88815308 -96.06459808]
[160.62669373 -107.00424957]
[159.06616211 -92.08563995]
[157.50564575 -77.16703796]
[155.94511414 -62.24843216]
[154.38459778 -47.32983017]
[152.82406616 -32.41122437]
[161.40837097 -44.71203232]
[173.64218140 -53.39153671]
[188.08828735 -57.43008423]
[203.04959106 -56.35322952]
[216.76843262 -50.28747559]
[227.63314819 -39.94542694]
[234.36735535 -26.54205132]
[236.17993164 -11.65196800]
[232.85792542 2.97555184]
[224.79162598 15.62208176]
[212.92863464 24.80191994]
[198.66261292 29.43662834]
[183.66950989 28.98172760]
[169.71070862 23.49065590]
[158.42607117 13.60850143]
[151.14131165 0.49620917]
[148.71223450 -14.30737019]
[143.67532349 -0.17834081]
[146.68960571 14.40806770]
[134.76754761 24.80879593]
[129.73063660 38.93782425]
[124.69371796 53.06685257]
[119.65680695 67.19588470]
[114.61988831 81.32491302]
[109.58296967 95.45394135]
[105.28884888 109.82615662]
[109.55109406 125.06242371]
[99.02895355 135.60441589]
[103.29119873 150.84068298]
[92.76905060 161.38269043]
[89.22938538 175.95906067]
[85.68971252 190.53543091]
[82.15003967 205.11181641]
[86.41228485 220.34808350]
[75.89013672 230.89007568]
[72.35046387 245.46646118]
[86.48181915 250.53961182]
[99.99385834 257.08612061]
[112.73348999 265.03182983]
[124.55635071 274.28665161]
[135.32849121 284.74578857]
[144.92784119 296.29067993]
[153.24565125 308.79052734]
[160.18765259 322.10369873]
[165.67520142 336.07934570]
[169.64611816 350.55911255]
[172.05540466 365.37893677]
[172.87577820 380.37091064]
[172.09791565 395.36514282]
[169.73065186 410.19174194]
[165.80079651 424.68273926]
[160.35287476 438.67388916]
[153.44863892 452.00668335]
[145.16630554 464.53005981]
[135.59971619 476.10211182]
[124.85727692 486.59173584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 190]
[38 189]
[40 187]
[41 186]
[42 185]
[43 184]
[45 182]
[47 180]
[55 179]
[56 178]
[57 177]
[58 176]
[59 175]
[60 174]
[62 172]
[63 171]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 142]
[71 141]
[72 140]
[73 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
