%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[75.29614258 283.76046753]
[61.08883286 276.30847168]
[58.19851303 260.52795410]
[68.84239197 248.52430725]
[69.28900146 233.53094482]
[61.93406677 220.57894897]
[70.07881927 207.01527405]
[70.52542877 192.02191162]
[70.97203064 177.02856445]
[71.41864014 162.03521729]
[64.33928680 175.25953674]
[54.23128128 186.34233093]
[41.71274567 194.60588074]
[27.54918480 199.54486084]
[12.60670853 200.85726929]
[-2.20094657 198.46281433]
[-15.96828556 192.50796509]
[-27.85343170 183.35682678]
[-37.12960052 171.56900024]
[-43.22955704 157.86532593]
[-45.78027725 143.08380127]
[-44.62579346 128.12829590]
[-39.83669662 113.91335297]
[-31.70584297 101.30821991]
[-20.73043823 91.08371735]
[-7.58163166 83.86506653]
[6.93652105 80.09369659]
[21.93622971 80.00022125]
[36.50025558 83.59037018]
[49.73800659 90.64458466]
[60.83998489 100.73151398]
[69.12730408 113.23432922]
[74.09318542 127.38848114]
[75.43396759 142.32846069]
[80.88932037 128.35566711]
[78.31066132 113.68597412]
[90.53710175 103.64482117]
[90.30211639 95.58769226]
[96.17910004 89.50559998]
[101.84188843 75.61557007]
[107.50466919 61.72554398]
[113.16745758 47.83551407]
[111.21253204 32.13555145]
[123.18207550 23.27105522]
[128.84486389 9.38102722]
[126.88993835 -6.31893539]
[138.85948181 -15.18343353]
[136.90455627 -30.88339615]
[148.87409973 -39.74789429]
[154.53688049 -53.63792038]
[160.19966125 -67.52794647]
[163.73933411 -82.10432434]
[165.07757568 -97.04450989]
[166.41580200 -111.98469543]
[167.75404358 -126.92488098]
[169.09228516 -141.86506653]
[170.43051147 -156.80525208]
[171.76875305 -171.74543762]
[173.10697937 -186.68562317]
[174.44522095 -201.62580872]
[159.61631775 -203.91914368]
[144.96481323 -207.15786743]
[130.55093384 -211.32865906]
[116.43388367 -216.41438293]
[102.67168427 -222.39414978]
[89.32089233 -229.24337769]
[76.43635559 -236.93392944]
[64.07103729 -245.43418884]
[52.27573776 -254.70924377]
[41.09892654 -264.72094727]
[30.58653831 -275.42822266]
[20.78176689 -286.78701782]
[11.72490406 -298.75067139]
[3.45316577 -311.26998901]
[-3.99945736 -324.29360962]
[-10.60234070 -337.76794434]
[-16.32835007 -351.63763428]
[-21.15395927 -365.84570312]
[-25.05933380 -380.33374023]
[-28.02843094 -395.04226685]
[-30.04904556 -409.91076660]
[-31.11287689 -424.87820435]
[-31.21555138 -439.88302612]
[-30.35664940 -454.86361694]
[-28.53969765 -469.75839233]
[-25.77216530 -484.50616455]
[-22.06542397 -499.04629517]
[-17.43470573 -513.31909180]
[-11.89903736 -527.26580811]
[-5.48116875 -540.82928467]
[1.79252887 -553.95361328]
[9.89216614 -566.58502197]
[18.78445816 -578.67144775]
[28.43286705 -590.16339111]
[38.79774475 -601.01348877]
[49.83649445 -611.17724609]
[61.50376129 -620.61285400]
[73.75160217 -629.28149414]
[86.52967834 -637.14770508]
[99.78549194 -644.17895508]
[113.46456909 -650.34649658]
[127.51069641 -655.62493896]
[141.86616516 -659.99261475]
[156.47195435 -663.43151855]
[171.26808167 -665.92761230]
[186.19374084 -667.47052002]
[201.18757629 -668.05401611]
[216.18798828 -667.67559814]
[231.13334656 -666.33691406]
[245.96221924 -664.04339600]
[260.61367798 -660.80450439]
[275.02752686 -656.63354492]
[289.14450073 -651.54766846]
[302.90664673 -645.56774902]
[316.25735474 -638.71838379]
[329.14181519 -631.02770996]
[341.50704956 -622.52728271]
[353.30224609 -613.25213623]
[364.47894287 -603.24023438]
[374.99121094 -592.53289795]
[384.79583740 -581.17401123]
[393.85256958 -569.21026611]
[402.12417603 -556.69079590]
[409.57666016 -543.66711426]
[416.17938232 -530.19274902]
[421.90524292 -516.32293701]
[426.73071289 -502.11483765]
[430.63592529 -487.62673950]
[433.60485840 -472.91821289]
[435.62530518 -458.04965210]
[436.68896484 -443.08221436]
[436.79147339 -428.07739258]
[435.93240356 -413.09680176]
[434.11529541 -398.20205688]
[431.34759521 -383.45431519]
[427.64068604 -368.91421509]
[423.00979614 -354.64151001]
[417.47399902 -340.69479370]
[411.05596924 -327.13143921]
[403.78213501 -314.00717163]
[395.68234253 -301.37588501]
[386.78991699 -289.28948975]
[377.14138794 -277.79769897]
[366.77639771 -266.94769287]
[355.73751831 -256.78408813]
[344.07015991 -247.34861755]
[331.82220459 -238.68006897]
[319.04406738 -230.81405640]
[305.78814697 -223.78291321]
[292.10900879 -217.61552429]
[278.06283569 -212.33723450]
[263.70730591 -207.96974182]
[249.10148621 -204.53097534]
[234.30532837 -202.03507996]
[219.37965393 -200.49230957]
[204.38581848 -199.90901184]
[189.38540649 -200.28756714]
[188.04716492 -185.34738159]
[186.70893860 -170.40719604]
[185.37069702 -155.46701050]
[184.03245544 -140.52682495]
[182.69422913 -125.58664703]
[181.35598755 -110.64646149]
[180.01776123 -95.70627594]
[178.67951965 -80.76609039]
[186.67523193 -93.45737457]
[197.88439941 -103.42504120]
[211.42303467 -109.88301086]
[226.22343445 -112.32196808]
[241.11834717 -110.54957581]
[254.93312073 -104.70560455]
[266.57824707 -95.25093079]
[275.13537598 -82.93120575]
[279.92962646 -68.71800232]
[280.58291626 -53.73223495]
[277.04373169 -39.15574265]
[269.59115601 -26.13809395]
[258.81295776 -15.70590878]
[245.55914307 -8.68191528]
[230.87496948 -5.62005520]
[215.91848755 -6.76179886]
[201.86921692 -12.01710415]
[189.83515930 -20.97151566]
[180.76536560 -32.91884995]
[175.37512207 -46.91689301]
[174.08969116 -61.86516190]
[168.42691040 -47.97513580]
[162.76412964 -34.08510971]
[165.12408447 -19.37865257]
[152.74951172 -9.52064705]
[155.10946655 5.18580866]
[142.73489380 15.04381371]
[137.07209778 28.93384171]
[139.43206787 43.64029694]
[127.05748749 53.49830246]
[121.39469910 67.38832855]
[115.73191071 81.27835846]
[110.06912231 95.16838074]
[104.50989532 109.10018158]
[106.69835663 124.76929474]
[94.86212158 133.81101990]
[89.40676117 147.78381348]
[86.41198730 162.48182678]
[85.96538544 177.47517395]
[85.51877594 192.46852112]
[85.07217407 207.46186829]
[92.39515686 221.48629761]
[84.28234863 233.97755432]
[83.83574677 248.97090149]
[93.74628448 261.58679199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[7 206]
[8 205]
[9 204]
[10 203]
[34 202]
[35 201]
[37 199]
[39 198]
[40 197]
[41 196]
[42 195]
[44 193]
[45 192]
[47 190]
[49 188]
[50 187]
[51 186]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
