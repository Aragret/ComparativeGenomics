%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[9.81913853 530.31854248]
[7.83501005 545.21179199]
[3.79737520 559.68395996]
[-2.21517301 573.45336914]
[-10.08559799 586.25189209]
[-19.66070175 597.83044434]
[-30.75409889 607.96368408]
[-43.14985275 616.45434570]
[-56.60668182 623.13720703]
[-70.86264038 627.88208008]
[-85.64023590 630.59661865]
[-100.65180969 631.22802734]
[-115.60516357 629.76403809]
[-130.20922852 626.23315430]
[-144.17973328 620.70397949]
[-157.24472046 613.28430176]
[-169.14990234 604.11840820]
[-179.66351318 593.38482666]
[-188.58093262 581.29248047]
[-195.72856140 568.07666016]
[-200.96726990 553.99468994]
[-204.19508362 539.32061768]
[-205.34918213 524.34014893]
[-204.40708923 509.34487915]
[-201.38716125 494.62664795]
[-196.34815979 480.47198486]
[-189.38816833 467.15640259]
[-180.64270020 454.93908691]
[-170.28195190 444.05786133]
[-158.50761414 434.72454834]
[-145.54887390 427.12075806]
[-131.65797424 421.39459229]
[-117.10532379 417.65744019]
[-102.17417145 415.98208618]
[-87.15516663 416.40112305]
[-72.34065247 418.90640259]
[-58.01900864 423.44915771]
[-51.53951263 409.92080688]
[-45.06001663 396.39245605]
[-38.58052063 382.86410522]
[-32.10102463 369.33575439]
[-33.58146286 354.51492310]
[-20.64205933 345.41091919]
[-14.16256332 331.88259888]
[-7.68306780 318.35424805]
[-1.20357215 304.82589722]
[-12.14325905 291.95022583]
[-16.36812210 275.53424072]
[-12.98129940 258.86862183]
[-2.61675882 245.31591797]
[12.67871952 237.63217163]
[29.84959030 237.40650940]
[35.92342377 223.69125366]
[41.99725723 209.97598267]
[48.07109070 196.26071167]
[46.15003967 181.49050903]
[58.81264496 172.00532532]
[54.74919510 160.61167908]
[59.69715881 149.13555908]
[71.50485229 143.94506836]
[77.78221130 130.32174683]
[84.05957031 116.69843292]
[90.33693695 103.07511902]
[90.58193207 95.01828766]
[96.81050873 89.29677582]
[103.29000854 75.76843262]
[109.76950073 62.24008560]
[104.75295258 47.49315643]
[111.51679993 33.86579132]
[125.60665894 29.17416000]
[132.08615112 15.64581394]
[138.56565857 2.11746836]
[126.53610229 -6.92033052]
[116.50420380 -18.12785149]
[108.85413361 -31.07310104]
[103.87828827 -45.25758743]
[101.76615143 -60.13553619]
[102.59703827 -75.13486481]
[106.33714294 -89.67919922]
[112.84090424 -103.21000671]
[121.85668182 -115.20806885]
[133.03646851 -125.21338654]
[145.94931030 -132.84280396]
[160.09799194 -137.80470276]
[174.93811035 -139.91015625]
[189.89901733 -139.08009338]
[204.40583801 -135.34828186]
[203.38885498 -151.13677979]
[215.86480713 -159.27311707]
[222.34429932 -172.80146790]
[228.82379150 -186.32980347]
[235.30328369 -199.85815430]
[241.78279114 -213.38650513]
[248.16139221 -226.96270752]
[254.43875122 -240.58602905]
[260.61453247 -254.25569153]
[266.68835449 -267.97094727]
[253.90684509 -275.86694336]
[242.31959534 -285.42987061]
[232.14248657 -296.48156738]
[223.56507874 -308.81616211]
[216.74719238 -322.20385742]
[211.81584167 -336.39523315]
[208.86286926 -351.12594604]
[207.94331360 -366.12155151]
[209.07429504 -381.10269165]
[212.23474121 -395.79028320]
[217.36576843 -409.91070557]
[224.37181091 -423.20089722]
[233.12232971 -435.41326904]
[243.45431519 -446.32031250]
[255.17529297 -455.71887207]
[268.06689453 -463.43380737]
[281.88897705 -469.32141113]
[296.38403320 -473.27197266]
[311.28204346 -475.21197510]
[326.30541992 -475.10519409]
[341.17434692 -472.95367432]
[355.61178589 -468.79745483]
[369.34878540 -462.71398926]
[382.12942505 -454.81661987]
[393.71563721 -445.25244141]
[403.89157104 -434.19964600]
[412.46762085 -421.86413574]
[419.28405762 -408.47570801]
[424.21389771 -394.28378296]
[427.16525269 -379.55276489]
[428.08319092 -364.55703735]
[426.95059204 -349.57601929]
[423.78857422 -334.88879395]
[418.65600586 -320.76892090]
[411.64852905 -307.47949219]
[402.89669800 -295.26806641]
[392.56350708 -284.36212158]
[380.84152222 -274.96484375]
[367.94906616 -267.25131226]
[354.12637329 -261.36520386]
[339.63088989 -257.41619873]
[324.73266602 -255.47781372]
[309.70928955 -255.58621216]
[294.84060669 -257.73934937]
[280.40362549 -261.89712524]
[274.32977295 -248.18185425]
[274.49560547 -240.79306030]
[268.06207275 -234.30865479]
[261.78469849 -220.68534851]
[261.84048462 -213.29490662]
[255.31112671 -206.90699768]
[248.83163452 -193.37866211]
[242.35214233 -179.85031128]
[235.87265015 -166.32196045]
[229.39314270 -152.79362488]
[230.87358093 -137.97277832]
[217.93418884 -128.86878967]
[229.93492126 -119.90461731]
[239.95933533 -108.76778412]
[247.62075806 -95.88506317]
[252.62310791 -81.75063324]
[254.77239990 -66.90710449]
[253.98413086 -51.92470551]
[250.28675842 -37.37935638]
[243.82055664 -23.83055496]
[234.83235168 -11.79983425]
[223.66609192 -1.75070262]
[210.74971008 5.92922306]
[196.57864380 10.94316578]
[181.69691467 13.09665489]
[166.67623901 12.30506992]
[152.09399414 8.59696388]
[145.61450195 22.12530899]
[139.13500977 35.65365601]
[144.31108093 49.57284546]
[137.93266296 63.38481140]
[123.29784393 68.71958160]
[116.81835175 82.24792480]
[110.33885956 95.77627563]
[103.96025085 109.35247803]
[97.68289185 122.97579956]
[91.40553284 136.59910583]
[85.12816620 150.22242737]
[87.24158478 168.51490784]
[72.52790833 178.07914734]
[74.01452637 193.83035278]
[61.78635788 202.33454895]
[55.71252441 216.04981995]
[49.63869095 229.76509094]
[43.56485748 243.48034668]
[52.82761383 252.90388489]
[58.32341766 264.88531494]
[59.41785431 277.98950195]
[56.00228500 290.65490723]
[48.50421143 301.37969971]
[37.83387375 308.89974976]
[25.27383041 312.33773804]
[12.32477379 311.30538940]
[5.84527779 324.83374023]
[-0.63421822 338.36209106]
[-7.11371422 351.89044189]
[-6.09673309 367.67892456]
[-18.57267761 375.81524658]
[-25.05217361 389.34359741]
[-31.53166962 402.87194824]
[-38.01116562 416.40029907]
[-44.49066162 429.92864990]
[-31.97412491 438.24023438]
[-20.73620033 448.21295166]
[-10.99563408 459.65267944]
[-2.94203186 472.33676147]
[3.26784205 486.01824951]
[7.51311016 500.43087769]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 204]
[38 203]
[39 202]
[40 201]
[41 200]
[43 198]
[44 197]
[45 196]
[46 195]
[52 187]
[53 186]
[54 185]
[55 184]
[57 182]
[60 180]
[61 179]
[62 178]
[63 177]
[65 176]
[66 175]
[67 174]
[70 171]
[71 170]
[72 169]
[87 154]
[89 152]
[90 151]
[91 150]
[92 149]
[93 148]
[94 146]
[95 145]
[96 143]
[97 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
