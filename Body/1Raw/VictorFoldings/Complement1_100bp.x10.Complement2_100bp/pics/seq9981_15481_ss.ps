%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[91.25662231 498.58724976]
[76.26995850 497.97628784]
[61.31688309 496.80203247]
[46.41856003 495.06616211]
[31.59607697 492.77111816]
[16.87041092 489.92013550]
[2.26240420 486.51727295]
[-12.20726490 482.56735229]
[-26.51811790 478.07592773]
[-40.64989853 473.04937744]
[-54.58260345 467.49484253]
[-68.29651642 461.42013550]
[-81.77222443 454.83389282]
[-94.99065399 447.74542236]
[-107.93309784 440.16476440]
[-120.58123016 432.10263062]
[-132.91716003 423.57046509]
[-144.92341614 414.58029175]
[-156.58302307 405.14486694]
[-167.87945557 395.27755737]
[-178.79673767 384.99230957]
[-189.31941223 374.30371094]
[-199.43258667 363.22683716]
[-209.12194824 351.77740479]
[-218.37379456 339.97158813]
[-227.17500305 327.82614136]
[-235.51313782 315.35824585]
[-243.37638855 302.58551025]
[-250.75363159 289.52606201]
[-257.63442993 276.19833374]
[-264.00903320 262.62124634]
[-269.86840820 248.81396484]
[-275.20428467 234.79605103]
[-280.00912476 220.58735657]
[-284.27609253 206.20797729]
[-287.99914551 191.67828369]
[-291.17303467 177.01882935]
[-293.79327393 162.25036621]
[-295.85610962 147.39378357]
[-297.35870361 132.47012329]
[-298.29885864 117.50050354]
[-298.67526245 102.50611877]
[-298.48739624 87.50818634]
[-297.73550415 72.52793121]
[-296.42065430 57.58656693]
[-294.54473877 42.70522690]
[-292.11038208 27.90498543]
[-289.12103271 13.20678425]
[-285.58093262 -1.36857045]
[-281.49508667 -15.80044937]
[-276.86926270 -30.06842613]
[-271.71005249 -44.15230560]
[-266.02468872 -58.03215408]
[-259.82128906 -71.68832397]
[-253.10859680 -85.10149384]
[-245.89611816 -98.25267029]
[-238.19406128 -111.12323761]
[-230.01332092 -123.69499207]
[-221.36549377 -135.95011902]
[-212.26280212 -147.87129211]
[-202.71813965 -159.44163513]
[-192.74502563 -170.64477539]
[-182.35755920 -181.46482849]
[-171.57043457 -191.88652039]
[-160.39894104 -201.89506531]
[-148.85888672 -211.47631836]
[-136.96659851 -220.61669922]
[-124.73890686 -229.30329895]
[-112.19313049 -237.52380371]
[-99.34700775 -245.26657104]
[-86.21874237 -252.52066040]
[-72.82689667 -259.27581787]
[-59.19044113 -265.52243042]
[-45.32866287 -271.25167847]
[-31.26119423 -276.45550537]
[-17.00793648 -281.12646484]
[-2.58906841 -285.25799561]
[11.97500324 -288.84423828]
[26.66366386 -291.88009644]
[41.45612335 -294.36132812]
[56.33144760 -296.28436279]
[71.26857758 -297.64651489]
[86.24637604 -298.44583130]
[101.24363708 -298.68118286]
[116.23914337 -298.35226440]
[117.13195801 -313.32568359]
[118.02477264 -328.29907227]
[118.91758728 -343.27249146]
[119.81040192 -358.24588013]
[120.70321655 -373.21929932]
[106.07366180 -376.70455933]
[92.27163696 -382.67745972]
[79.71659088 -390.95645142]
[68.79003906 -401.28997803]
[59.82404327 -413.36398315]
[53.09105682 -426.81158447]
[48.79569626 -441.22412109]
[47.06848907 -456.16360474]
[47.96192169 -471.17602539]
[51.44884872 -485.80517578]
[57.42330170 -499.60653687]
[65.70372009 -512.16064453]
[76.03848267 -523.08599854]
[88.11352539 -532.05065918]
[101.56188965 -538.78210449]
[115.97490692 -543.07580566]
[130.91458130 -544.80133057]
[145.92689514 -543.90618896]
[160.55566406 -540.41760254]
[174.35633850 -534.44158936]
[186.90950012 -526.15979004]
[197.83370972 -515.82379150]
[206.79696655 -503.74771118]
[213.52690125 -490.29858398]
[217.81900024 -475.88507080]
[219.54281616 -460.94522095]
[218.64598083 -445.93298340]
[215.15573120 -431.30462646]
[209.17814636 -417.50463867]
[200.89488220 -404.95239258]
[190.55763245 -394.02935791]
[178.48057556 -385.06747437]
[165.03067017 -378.33905029]
[150.61668396 -374.04861450]
[135.67662048 -372.32647705]
[134.78381348 -357.35308838]
[133.89099121 -342.37966919]
[132.99818420 -327.40625000]
[132.10536194 -312.43286133]
[131.21253967 -297.45944214]
[146.14088440 -296.00411987]
[161.00392151 -293.98828125]
[175.78060913 -291.41479492]
[190.45002747 -288.28729248]
[204.99143982 -284.61022949]
[219.38424683 -280.38879395]
[233.60806274 -275.62896729]
[247.64279175 -270.33746338]
[261.46853638 -264.52182007]
[275.06573486 -258.19021606]
[288.41516113 -251.35162354]
[301.49792480 -244.01574707]
[314.29547119 -236.19294739]
[326.78970337 -227.89430237]
[338.96292114 -219.13157654]
[350.79794312 -209.91714478]
[362.27798462 -200.26405334]
[373.38677979 -190.18597412]
[384.10864258 -179.69717407]
[394.42840576 -168.81250000]
[404.33142090 -157.54734802]
[413.80368042 -145.91766357]
[422.83178711 -133.93991089]
[431.40295410 -121.63104248]
[439.50506592 -109.00848389]
[447.12664795 -96.09009552]
[454.25692749 -82.89416504]
[460.88577271 -69.43936157]
[467.00384521 -55.74474335]
[472.60244751 -41.82968521]
[477.67367554 -27.71388054]
[482.21035767 -13.41731262]
[486.20605469 1.03978527]
[489.65512085 15.63694954]
[492.55267334 30.35352135]
[494.89462280 45.16866684]
[496.67764282 60.06142426]
[497.89920044 75.01070404]
[498.55758667 89.99536133]
[498.65185547 104.99417114]
[498.18188477 119.98591614]
[497.14831543 134.94937134]
[495.55264282 149.86337280]
[493.39709473 164.70678711]
[490.68475342 179.45861816]
[487.41943359 194.09797668]
[483.60574341 208.60415649]
[479.24914551 222.95661926]
[474.35574341 237.13505554]
[468.93246460 251.11938477]
[462.98703003 264.88983154]
[456.52783203 278.42687988]
[449.56399536 291.71139526]
[442.10537720 304.72454834]
[434.16256714 317.44796753]
[425.74679565 329.86358643]
[416.86993408 341.95388794]
[407.54461670 353.70169067]
[397.78396606 365.09045410]
[387.60186768 376.10397339]
[377.01269531 386.72671509]
[366.03143311 396.94363403]
[354.67364502 406.74023438]
[342.95538330 416.10272217]
[330.89324951 425.01776123]
[318.50430298 433.47280884]
[305.80609131 441.45584106]
[292.81658936 448.95556641]
[279.55419922 455.96142578]
[266.03762817 462.46343994]
[252.28608704 468.45242310]
[238.31898499 473.91992188]
[224.15611267 478.85815430]
[209.81750488 483.26016235]
[195.32347107 487.11972046]
[180.69450378 490.43133545]
[165.95133972 493.19036865]
[151.11482239 495.39285278]
[136.20594788 497.03573608]
[121.24584198 498.11663818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
