%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[41.05720520 654.52502441]
[27.60653305 647.71746826]
[16.17632866 637.88824463]
[7.43112755 625.60876465]
[1.87936485 611.59301758]
[-0.15618767 596.65582275]
[1.44281447 581.66558838]
[6.58340740 567.49389648]
[14.96672344 554.96459961]
[26.10536766 544.80615234]
[39.35175705 537.60913086]
[53.93575668 533.79205322]
[53.71242905 518.79370117]
[53.48910141 503.79534912]
[53.26577377 488.79702759]
[53.04244614 473.79867554]
[52.81911850 458.80035400]
[52.59579086 443.80200195]
[42.88994980 455.23864746]
[28.34317970 458.89807129]
[14.38106537 453.41543579]
[6.21113062 440.83560181]
[6.88055944 425.85055542]
[16.13967133 414.04931641]
[30.53504562 409.83349609]
[44.69756317 414.77548218]
[53.34530640 427.03311157]
[54.90583038 412.11450195]
[56.46635437 397.19592285]
[58.02687836 382.27731323]
[51.65564346 368.81414795]
[60.78665543 355.89379883]
[54.41542053 342.43066406]
[63.54643631 329.51031494]
[65.10695648 314.59170532]
[66.55637360 299.66189575]
[67.89461517 284.72171021]
[69.23284912 269.78152466]
[70.57108307 254.84133911]
[71.90931702 239.90115356]
[70.21744537 237.66604614]
[69.30899048 234.62609863]
[69.49494171 231.07632446]
[70.97383881 227.41882324]
[73.79792023 224.12055969]
[76.02304077 209.28651428]
[78.24815369 194.45246887]
[80.47327423 179.61842346]
[74.70955658 165.88420105]
[84.40838623 153.38447571]
[86.63349915 138.55043030]
[88.85861969 123.71638489]
[91.08373260 108.88234711]
[92.97702789 94.00231171]
[94.53755188 79.08370209]
[96.09807587 64.16510010]
[97.65859985 49.24649429]
[99.21911621 34.32788849]
[100.66854095 19.39808083]
[102.00677490 4.45789576]
[103.34500885 -10.48228931]
[96.86975098 -24.91771889]
[105.71166992 -36.90394974]
[107.04990387 -51.84413528]
[108.38813782 -66.78432465]
[109.72637177 -81.72450256]
[99.86850739 -93.78520203]
[101.43849945 -108.91761017]
[112.99727631 -118.24124908]
[114.33551025 -133.18142700]
[105.37426758 -121.15245819]
[92.33522797 -113.73738098]
[77.41569519 -112.18576813]
[63.12987137 -116.75909424]
[51.88517380 -126.68666840]
[45.57652664 -140.29553223]
[45.26705551 -155.29232788]
[51.00890350 -169.14987183]
[61.83446884 -179.53288269]
[75.91946411 -184.69166565]
[90.89030457 -183.75686646]
[104.22415161 -176.88603210]
[113.67401123 -165.23698425]
[117.64752960 -150.77116394]
[121.83454132 -165.17495728]
[126.02154541 -179.57873535]
[130.20855713 -193.98251343]
[126.63089752 -209.39390564]
[137.61328125 -219.45555115]
[141.80027771 -233.85932922]
[145.98728943 -248.26312256]
[150.17430115 -262.66690063]
[154.36131287 -277.07067871]
[158.54832458 -291.47445679]
[162.73533630 -305.87823486]
[166.92234802 -320.28201294]
[171.10935974 -334.68582153]
[175.29637146 -349.08959961]
[179.37603760 -363.52413940]
[183.34814453 -377.98867798]
[169.97296143 -384.90228271]
[158.32772827 -394.44598389]
[148.92152405 -406.20257568]
[142.16555786 -419.65808105]
[138.35516357 -434.22430420]
[137.65692139 -449.26443481]
[140.10134888 -464.12103271]
[145.58158875 -478.14462280]
[153.85806274 -490.72213745]
[164.56896973 -501.30371094]
[177.24606323 -509.42684937]
[191.33515930 -514.73632812]
[206.22035217 -517.00018311]
[221.25091553 -516.11932373]
[235.76977539 -512.13226318]
[249.14222717 -505.21340942]
[260.78372192 -495.66513062]
[270.18527222 -483.90484619]
[276.93594360 -470.44668579]
[280.74060059 -455.87896729]
[281.43295288 -440.83853149]
[278.98266602 -425.98291016]
[273.49691772 -411.96148682]
[265.21548462 -399.38723755]
[254.50042725 -388.80984497]
[241.82014465 -380.69174194]
[227.72895813 -375.38775635]
[212.84288025 -373.12979126]
[197.81266785 -374.01657104]
[193.84056091 -359.55203247]
[195.10060120 -352.26959229]
[189.70014954 -344.90258789]
[185.51315308 -330.49880981]
[181.32614136 -316.09500122]
[177.13912964 -301.69122314]
[172.95211792 -287.28744507]
[168.76510620 -272.88366699]
[164.57809448 -258.47988892]
[160.39108276 -244.07611084]
[156.20407104 -229.67231750]
[152.01705933 -215.26853943]
[155.89419556 -200.88740540]
[144.61233521 -189.79550171]
[140.42532349 -175.39172363]
[136.23832703 -160.98794556]
[132.05131531 -146.58415222]
[129.27569580 -131.84320068]
[127.93746185 -116.90301514]
[137.65524292 -105.67357635]
[136.51091003 -90.50303650]
[124.66655731 -80.38626862]
[123.32832336 -65.44608307]
[121.99008942 -50.50590134]
[120.65185547 -35.56571579]
[127.22283173 -22.19890976]
[118.28519440 -9.14405537]
[116.94696045 5.79613018]
[115.60872650 20.73631477]
[118.14294434 27.67890358]
[114.13772583 35.88841248]
[112.57720184 50.80701828]
[111.01667786 65.72562408]
[109.45615387 80.64422607]
[107.89562988 95.56282806]
[109.87499237 98.87258911]
[110.38585663 103.03874969]
[109.07845306 107.38590240]
[105.91777802 111.10746002]
[103.69266510 125.94150543]
[101.46754456 140.77554321]
[99.24243164 155.60958862]
[104.84699249 170.40484619]
[95.30731964 181.84353638]
[93.08219910 196.67758179]
[90.85707855 211.51162720]
[88.63196564 226.34567261]
[86.84950256 241.23939514]
[85.51126862 256.17956543]
[84.17302704 271.11975098]
[82.83479309 286.05993652]
[81.49655914 301.00012207]
[83.84787750 309.82675171]
[80.02556610 316.15222168]
[78.46504211 331.07083130]
[84.72465515 345.60107422]
[75.70526123 357.45434570]
[81.96487427 371.98455811]
[72.94548035 383.83782959]
[71.38495636 398.75643921]
[69.82443237 413.67504883]
[68.26391602 428.59362793]
[67.59413147 443.57867432]
[67.81745911 458.57702637]
[68.04078674 473.57534790]
[68.26411438 488.57369995]
[68.48744202 503.57202148]
[68.71076965 518.57037354]
[68.93409729 533.56872559]
[83.62528229 536.94989014]
[97.08007812 543.74932861]
[108.51623535 553.57159424]
[117.26888275 565.84576416]
[122.82913971 579.85815430]
[124.87374878 594.79412842]
[123.28383636 609.78527832]
[118.15183258 623.96014404]
[109.77611542 636.49450684]
[98.64363098 646.65972900]
[85.40161133 653.86474609]
[70.81992340 657.69067383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[27 191]
[28 190]
[29 189]
[30 188]
[32 186]
[34 184]
[35 183]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[45 176]
[46 175]
[47 174]
[48 173]
[50 171]
[51 170]
[52 169]
[53 168]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 158]
[60 157]
[61 156]
[63 154]
[64 153]
[65 152]
[66 151]
[69 148]
[70 147]
[84 146]
[85 145]
[86 144]
[87 143]
[89 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[98 132]
[99 130]
[100 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
