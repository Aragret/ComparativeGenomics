%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[173.56750488 522.18676758]
[167.09948730 508.64508057]
[161.66152954 494.65789795]
[157.28405762 480.30346680]
[153.99153137 465.66204834]
[151.80236816 450.81549072]
[150.72882080 435.84686279]
[150.77688599 420.83987427]
[151.94630432 405.87844849]
[154.23052979 391.04623413]
[157.61677551 376.42617798]
[162.08613586 362.10009766]
[167.61357117 348.14804077]
[174.16821289 334.64807129]
[181.71337891 321.67568970]
[190.20687866 309.30343628]
[199.60121155 297.60049438]
[209.84384155 286.63235474]
[220.87748718 276.46026611]
[211.56260681 264.70303345]
[202.24772644 252.94577026]
[192.93284607 241.18852234]
[176.29290771 235.61363220]
[173.75817871 217.37475586]
[169.67880249 231.80938721]
[155.90977478 237.76036072]
[142.60112000 230.84083557]
[139.56349182 216.15162659]
[149.03610229 204.52107239]
[164.03460693 204.52207947]
[155.43603516 192.23124695]
[146.83747864 179.94039917]
[138.23890686 167.64956665]
[129.64035034 155.35873413]
[121.04178619 143.06788635]
[107.40617371 137.07461548]
[105.83525848 121.33158875]
[97.23669434 109.04074860]
[92.41217804 106.98210144]
[89.08452606 102.36690521]
[88.57151031 96.25350189]
[80.34270477 83.71209717]
[72.11389923 71.17070007]
[63.88508987 58.62929916]
[58.16172791 55.31951904]
[55.38574600 50.36059189]
[55.60447311 45.58972168]
[47.75271988 32.80887985]
[39.90096283 20.02803612]
[40.58813477 35.01228714]
[36.17504120 49.34841919]
[27.18012810 61.35223007]
[14.66010857 69.61353302]
[0.08582072 73.16178894]
[-14.83056164 71.58016205]
[-28.33667564 65.05445099]
[-38.84584045 54.35129929]
[-45.12344360 40.72809601]
[-46.43200302 25.78528404]
[-42.61779022 11.27832699]
[-34.12889481 -1.08850920]
[-21.96258163 -9.86238194]
[-7.54814005 -14.01254559]
[7.42103767 -13.05144310]
[21.18638802 -7.09198332]
[32.13171005 3.16697407]
[27.51770210 -11.10575962]
[22.90369415 -25.37849236]
[18.28968430 -39.65122604]
[13.46368599 -53.85368347]
[8.42677021 -67.98271179]
[-6.26951551 -64.86780548]
[-21.24985504 -63.73958206]
[-36.24690628 -64.61817169]
[-50.99302673 -67.48789978]
[-65.22505951 -72.29755402]
[-78.68901062 -78.96128845]
[-91.14460754 -87.36019135]
[-102.36956024 -97.34437561]
[-112.16355133 -108.73564911]
[-120.35179138 -121.33073425]
[-126.78814697 -134.90486145]
[-131.35775757 -149.21575928]
[-133.97908020 -164.00805664]
[-134.60533142 -179.01776123]
[-133.22532654 -193.97702026]
[-129.86370850 -208.61883545]
[-124.58045197 -222.68193054]
[-117.46985626 -235.91532898]
[-108.65880585 -248.08285522]
[-98.30455780 -258.96737671]
[-86.59188843 -268.37466431]
[-73.72982025 -276.13681030]
[-59.94790268 -282.11526489]
[-45.49208069 -286.20339966]
[-30.62034225 -288.32818604]
[-15.59808540 -288.45175171]
[-0.69340366 -286.57189941]
[13.82771301 -282.72213745]
[27.70611763 -276.97119141]
[40.69413376 -269.42169189]
[52.55997467 -260.20837402]
[63.09188461 -249.49566650]
[72.10189819 -237.47473145]
[79.42923737 -224.36009216]
[84.94312286 -210.38581848]
[88.54515839 -195.80126953]
[90.17106628 -180.86676025]
[89.79182434 -165.84878540]
[87.41419983 -151.01536560]
[83.08062744 -136.63121033]
[76.86843872 -122.95304871]
[68.88850403 -110.22496796]
[59.28323746 -98.67411041]
[48.22405243 -88.50662231]
[35.90830994 -79.90395355]
[22.55579948 -73.01963043]
[27.59271622 -58.89059830]
[31.44714546 -56.07059479]
[33.57099152 -50.79932404]
[32.56241608 -44.26523590]
[37.17642593 -29.99250221]
[41.79043579 -15.71976852]
[46.40444565 -1.44703519]
[52.68180466 12.17628098]
[60.53356171 24.95712280]
[68.38531494 37.73796463]
[76.42649078 50.40048981]
[84.65529633 62.94189072]
[92.88410187 75.48329163]
[101.11291504 88.02468872]
[109.52753448 100.44218445]
[118.12609863 112.73302460]
[132.37673950 119.60542297]
[133.33262634 134.46932983]
[141.93118286 146.76016235]
[150.52975464 159.05099487]
[159.12831116 171.34184265]
[167.72688293 183.63267517]
[176.32543945 195.92352295]
[185.37544250 207.88584900]
[198.10671997 209.95407104]
[205.77087402 219.82546997]
[204.69009399 231.87364197]
[214.00497437 243.63088989]
[223.31985474 255.38815308]
[232.63473511 267.14538574]
[245.06092834 258.73098755]
[258.08117676 251.26875305]
[271.62268066 244.80036926]
[285.60971069 239.36204529]
[299.96401978 234.98419189]
[314.60537720 231.69128418]
[329.45187378 229.50172424]
[344.42047119 228.42779541]
[359.42745972 228.47546387]
[374.38891602 229.64448547]
[389.22119141 231.92831421]
[403.84133911 235.31417847]
[418.16754150 239.78314209]
[432.11972046 245.31022644]
[445.61987305 251.86450195]
[458.59243774 259.40933228]
[470.96493530 267.90249634]
[482.66812134 277.29650879]
[493.63656616 287.53884888]
[503.80889893 298.57223511]
[513.12829590 310.33496094]
[521.54254150 322.76123047]
[529.00469971 335.78152466]
[535.47296143 349.32308960]
[540.91113281 363.31018066]
[545.28887939 377.66452026]
[548.58166504 392.30590820]
[550.77111816 407.15240479]
[551.84490967 422.12100220]
[551.79711914 437.12802124]
[550.62792969 452.08947754]
[548.34399414 466.92172241]
[544.95800781 481.54180908]
[540.48889160 495.86801147]
[534.96173096 509.82012939]
[528.40728760 523.32019043]
[520.86236572 536.29272461]
[512.36907959 548.66516113]
[502.97494507 560.36822510]
[492.73251343 571.33660889]
[481.69906616 581.50885010]
[469.93624878 590.82812500]
[457.50991821 599.24230957]
[444.48953247 606.70428467]
[430.94790649 613.17242432]
[416.96078491 618.61053467]
[402.60638428 622.98815918]
[387.96499634 626.28076172]
[373.11846924 628.47009277]
[358.14987183 629.54376221]
[343.14285278 629.49578857]
[328.18139648 628.32653809]
[313.34918213 626.04241943]
[298.72909546 622.65631104]
[284.40298462 618.18707275]
[270.45086670 612.65979004]
[256.95086670 606.10528564]
[243.97840881 598.56018066]
[231.60607910 590.06683350]
[219.90306091 580.67260742]
[208.93479919 570.43005371]
[198.76264954 559.39648438]
[189.44348145 547.63360596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 147]
[20 146]
[21 145]
[22 144]
[24 141]
[30 140]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[37 133]
[38 132]
[41 131]
[42 130]
[43 129]
[44 128]
[47 127]
[48 126]
[49 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 118]
[71 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
