%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[120.61440277 382.06613159]
[110.08081055 392.78530884]
[98.06719971 401.81475830]
[84.84194946 408.95272827]
[70.70052338 414.03973389]
[55.95884705 416.96215820]
[40.94625092 417.65472412]
[25.99812317 416.10192871]
[11.44841290 412.33847046]
[-2.37783551 406.44842529]
[-15.17173958 398.56338501]
[-26.64747620 388.85952759]
[-36.54867554 377.55361938]
[-44.65414047 364.89819336]
[-50.78279495 351.17605591]
[-54.79771423 336.69372559]
[-56.60921097 321.77474976]
[-56.17681503 306.75241089]
[-53.51018524 291.96231079]
[-48.66889191 277.73489380]
[-41.76109314 264.38796997]
[-32.94111633 252.21975708]
[-22.40599632 241.50205994]
[-10.39109612 232.47433472]
[2.83516860 225.33827209]
[16.97731781 220.25326538]
[31.71941185 217.33293152]
[46.73210526 216.64251709]
[61.68001175 218.19744873]
[65.43630981 203.67538452]
[69.19261169 189.15332031]
[72.94891357 174.63127136]
[68.64530945 160.37194824]
[79.59191895 148.94905090]
[83.34822083 134.42700195]
[87.10452271 119.90493774]
[90.86081696 105.38288116]
[93.85559082 90.68487549]
[96.08071136 75.85083008]
[90.47615051 61.05558014]
[100.01582336 49.61688232]
[102.24093628 34.78283691]
[104.46605682 19.94879341]
[106.69117737 5.11474943]
[91.97500610 2.19629693]
[77.41180420 -1.40872908]
[63.03358459 -5.69240379]
[48.87195206 -10.64531136]
[34.95804214 -16.25656319]
[21.32243729 -22.51382446]
[7.99511242 -29.40334129]
[-4.99463701 -36.90996933]
[-17.61825562 -45.01720428]
[-29.84799576 -53.70722961]
[-41.65697098 -62.96093750]
[-53.01922607 -72.75798798]
[-63.90977859 -83.07685089]
[-74.30469513 -93.89483643]
[-84.18112183 -105.18816376]
[-93.51734924 -116.93200684]
[-102.29285431 -129.10055542]
[-110.48834229 -141.66705322]
[-118.08580780 -154.60389709]
[-125.06853485 -167.88261414]
[-131.42118835 -181.47404480]
[-137.12979126 -195.34829712]
[-142.18180847 -209.47486877]
[-146.56613159 -223.82272339]
[-150.27310181 -238.36030579]
[-153.29460144 -253.05566406]
[-155.62397766 -267.87649536]
[-157.25610352 -282.79022217]
[-158.18737793 -297.76406860]
[-158.41578674 -312.76507568]
[-157.94081116 -327.76034546]
[-156.76348877 -342.71682739]
[-154.88641357 -357.60171509]
[-152.31372070 -372.38226318]
[-149.05105591 -387.02597046]
[-145.10559082 -401.50064087]
[-140.48599243 -415.77447510]
[-135.20243835 -429.81610107]
[-129.26652527 -443.59463501]
[-122.69129181 -457.07977295]
[-115.49121094 -470.24191284]
[-107.68210602 -483.05209351]
[-99.28114319 -495.48217773]
[-90.30678558 -507.50482178]
[-80.77875519 -519.09362793]
[-70.71801758 -530.22302246]
[-60.14666367 -540.86871338]
[-49.08794785 -551.00714111]
[-37.56617355 -560.61608887]
[-25.60667038 -569.67437744]
[-13.23572636 -578.16217041]
[-0.48053607 -586.06079102]
[12.63086128 -593.35290527]
[26.06964302 -600.02239990]
[39.80627060 -606.05462646]
[53.81054306 -611.43640137]
[68.05168152 -616.15582275]
[82.49837494 -620.20257568]
[97.11887360 -623.56768799]
[111.88103485 -626.24383545]
[126.75240326 -628.22509766]
[141.70030212 -629.50714111]
[156.69184875 -630.08709717]
[171.69410706 -629.96374512]
[186.67410278 -629.13732910]
[201.59889221 -627.60968018]
[216.43566895 -625.38415527]
[231.15182495 -622.46563721]
[245.71501160 -618.86053467]
[260.09323120 -614.57678223]
[274.25482178 -609.62384033]
[288.16870117 -604.01251221]
[301.80429077 -597.75518799]
[315.13159180 -590.86560059]
[328.12130737 -583.35894775]
[340.74487305 -575.25164795]
[352.97457886 -566.56158447]
[364.78353882 -557.30780029]
[376.14572144 -547.51074219]
[387.03625488 -537.19183350]
[397.43112183 -526.37377930]
[407.30749512 -515.08038330]
[416.64367676 -503.33651733]
[425.41912842 -491.16793823]
[433.61456299 -478.60140991]
[441.21197510 -465.66452026]
[448.19464111 -452.38577271]
[454.54724121 -438.79431152]
[460.25576782 -424.92004395]
[465.30773926 -410.79345703]
[469.69198608 -396.44558716]
[473.39889526 -381.90798950]
[476.42034912 -367.21261597]
[478.74963379 -352.39175415]
[480.38168335 -337.47802734]
[481.31292725 -322.50418091]
[481.54125977 -307.50317383]
[481.06622314 -292.50790405]
[479.88882446 -277.55142212]
[478.01168823 -262.66653442]
[475.43893433 -247.88601685]
[472.17620850 -233.24234009]
[468.23068237 -218.76766968]
[463.61102295 -204.49385071]
[458.32739258 -190.45225525]
[452.39141846 -176.67375183]
[445.81613159 -163.18862915]
[438.61599731 -150.02651978]
[430.80685425 -137.21636963]
[422.40582275 -124.78632355]
[413.43142700 -112.76371765]
[403.90335083 -101.17498016]
[393.84255981 -90.04558563]
[383.27114868 -79.39999390]
[372.21240234 -69.26160431]
[360.69058228 -59.65271378]
[348.73101807 -50.59443665]
[336.36004639 -42.10668564]
[323.60482788 -34.20812225]
[310.49340820 -26.91610718]
[297.05459595 -20.24666977]
[283.31793213 -14.21447086]
[269.31362915 -8.83277130]
[255.07247925 -4.11340046]
[240.62576294 -0.06673313]
[226.00524902 3.29833531]
[211.24308777 5.97440767]
[196.37170410 7.95560122]
[181.42379761 9.23756123]
[166.43225098 9.81746960]
[151.42999268 9.69405174]
[136.44999695 8.86757851]
[121.52521515 7.33986664]
[119.30010223 22.17391014]
[117.07498169 37.00795364]
[114.84986877 51.84199905]
[120.61358643 65.57621765]
[110.91475677 78.07595062]
[108.68963623 92.90999603]
[120.69990540 83.92369843]
[135.68307495 84.63426208]
[146.78901672 94.71680450]
[148.94027710 109.56174469]
[141.15330505 122.38216400]
[126.98820496 127.31673431]
[112.92107391 122.10945129]
[105.38288116 109.13918304]
[101.62657928 123.66123962]
[97.87027740 138.18330383]
[94.11397552 152.70535278]
[98.14890289 168.00338745]
[87.47097015 178.38757324]
[83.71467590 192.90962219]
[79.95837402 207.43168640]
[76.20207214 221.95375061]
[90.02915955 227.84181213]
[102.82418823 235.72502136]
[114.30130768 245.42724609]
[124.20411682 256.73175049]
[132.31138611 269.38601685]
[138.44198608 283.10726929]
[142.45896912 297.58905029]
[144.27259827 312.50778198]
[143.84233093 327.53018188]
[141.17781067 342.32064819]
[136.33854675 356.54876709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 199]
[30 198]
[31 197]
[32 196]
[34 194]
[35 193]
[36 192]
[37 191]
[38 183]
[39 182]
[41 180]
[42 179]
[43 178]
[44 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
