%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[67.33245850 494.30740356]
[55.23354340 485.42138672]
[44.03409195 475.42553711]
[33.83552933 464.41036987]
[24.73022079 452.47561646]
[16.80062294 439.72940063]
[10.11855316 426.28713989]
[4.74452448 412.27053833]
[0.72720677 397.80661011]
[-1.89701796 383.02627563]
[-3.10438371 368.06341553]
[-2.88395596 353.05355835]
[-1.23773122 338.13259888]
[1.81938183 323.43569946]
[6.25969696 309.09594727]
[12.04300117 295.24322510]
[19.11691856 282.00296021]
[27.41738510 269.49508667]
[36.86922836 257.83285522]
[47.38684845 247.12191772]
[58.87499619 237.45924377]
[71.22962952 228.93235779]
[84.33885956 221.61848450]
[98.08396912 215.58384705]
[112.34046936 210.88310242]
[109.01820374 196.25564575]
[105.69594574 181.62818909]
[102.37368774 167.00071716]
[99.05142975 152.37326050]
[91.92239380 165.57087708]
[78.44779205 172.16140747]
[63.65332794 169.68678284]
[53.05696487 159.06994629]
[50.61088562 144.27073669]
[57.22741699 130.80888367]
[70.43875885 123.70532227]
[85.31739807 125.60951233]
[96.31455994 135.81225586]
[94.75403595 120.89365387]
[93.19351196 105.97504425]
[90.57206726 103.14654541]
[89.21012115 99.17628479]
[89.58962250 94.65267944]
[91.91173553 90.35760498]
[91.01892090 75.38420105]
[88.50035095 71.84713745]
[87.35366058 68.07227325]
[87.48514557 64.52007294]
[88.66118622 61.57329178]
[90.54571533 59.49803543]
[90.54571533 44.49803543]
[90.54571533 29.49803543]
[90.54571533 14.49803448]
[90.54571533 -0.50196552]
[90.54571533 -15.50196552]
[90.54571533 -30.50196457]
[90.54571533 -45.50196457]
[75.57135010 -46.46318817]
[60.68933487 -48.38185120]
[45.96082306 -51.25006866]
[31.44634438 -55.05605698]
[17.20553780 -59.78417206]
[3.29692197 -65.41498566]
[-10.22234726 -71.92536926]
[-23.29671669 -79.28855896]
[-35.87245941 -87.47429657]
[-47.89790344 -96.44895172]
[-59.32362366 -106.17564392]
[-70.10267639 -116.61439514]
[-80.19077301 -127.72232819]
[-89.54644775 -139.45378113]
[-98.13125610 -151.76055908]
[-105.90993500 -164.59207153]
[-112.85050201 -177.89561462]
[-118.92444611 -191.61650085]
[-124.10681152 -205.69836426]
[-128.37629700 -220.08332825]
[-131.71536255 -234.71228027]
[-134.11027527 -249.52511597]
[-135.55120850 -264.46096802]
[-136.03222656 -279.45843506]
[-135.55137634 -294.45590210]
[-134.11061096 -309.39178467]
[-131.71585083 -324.20462036]
[-128.37695312 -338.83361816]
[-124.10762787 -353.21862793]
[-118.92542267 -367.30056763]
[-112.85163116 -381.02151489]
[-105.91120911 -394.32513428]
[-98.13267517 -407.15673828]
[-89.54799652 -419.46359253]
[-80.19245148 -431.19515991]
[-70.10448456 -442.30319214]
[-59.32554626 -452.74206543]
[-47.89992905 -462.46890259]
[-35.87458801 -471.44369507]
[-23.29893684 -479.62957764]
[-10.22464848 -486.99288940]
[3.29454851 -493.50341797]
[17.20310211 -499.13439941]
[31.44385529 -503.86267090]
[45.95829391 -507.66882324]
[60.68677139 -510.53720093]
[75.56876373 -512.45605469]
[90.54312134 -513.41741943]
[105.54830933 -513.41741943]
[120.52266693 -512.45605469]
[135.40466309 -510.53720093]
[150.13314819 -507.66882324]
[164.64758301 -503.86267090]
[178.88833618 -499.13439941]
[192.79689026 -493.50341797]
[206.31608582 -486.99288940]
[219.39036560 -479.62957764]
[231.96601868 -471.44369507]
[243.99136353 -462.46890259]
[255.41697693 -452.74206543]
[266.19592285 -442.30319214]
[276.28390503 -431.19515991]
[285.63943481 -419.46359253]
[294.22412109 -407.15673828]
[302.00265503 -394.32513428]
[308.94305420 -381.02151489]
[315.01684570 -367.30056763]
[320.19906616 -353.21862793]
[324.46838379 -338.83361816]
[327.80728149 -324.20462036]
[330.20205688 -309.39178467]
[331.64282227 -294.45590210]
[332.12365723 -279.45843506]
[331.64263916 -264.46096802]
[330.20172119 -249.52511597]
[327.80679321 -234.71228027]
[324.46774292 -220.08332825]
[320.19824219 -205.69836426]
[315.01589966 -191.61650085]
[308.94192505 -177.89561462]
[302.00137329 -164.59207153]
[294.22268677 -151.76055908]
[285.63787842 -139.45378113]
[276.28219604 -127.72232819]
[266.19412231 -116.61439514]
[255.41505432 -106.17564392]
[243.98933411 -96.44895172]
[231.96389771 -87.47429657]
[219.38815308 -79.28855896]
[206.31378174 -71.92536926]
[192.79450989 -65.41498566]
[178.88589478 -59.78417206]
[164.64509583 -55.05605698]
[150.13061523 -51.25006866]
[135.40209961 -48.38185120]
[120.52008820 -46.46318817]
[105.54571533 -45.50196457]
[105.54571533 -30.50196457]
[105.54571533 -15.50196552]
[105.54571533 -0.50196552]
[105.54571533 14.49803448]
[105.54571533 29.49803543]
[105.54571533 44.49803543]
[105.54571533 59.49803543]
[105.99232483 74.49138641]
[106.88513947 89.46479034]
[108.11211395 104.41452026]
[109.67263794 119.33312988]
[111.23316193 134.25173950]
[113.67888641 149.05101013]
[117.00115204 163.67846680]
[120.32341003 178.30592346]
[123.64566803 192.93338013]
[126.96792603 207.56085205]
[141.85627747 205.64205933]
[156.85960388 205.14721680]
[171.84204102 206.08078003]
[186.66787720 208.43431091]
[201.20288086 212.18647766]
[215.31538391 217.30331421]
[228.87757874 223.73846436]
[241.76667786 231.43367004]
[253.86592102 240.31922913]
[265.06573486 250.31466675]
[275.26467896 261.32946777]
[284.37045288 273.26388550]
[292.30050659 286.00982666]
[298.98306274 299.45184326]
[304.35760498 313.46823120]
[308.37545776 327.93203735]
[311.00021362 342.71228027]
[312.20812988 357.67507935]
[311.98825073 372.68496704]
[310.34255981 387.60598755]
[307.28598022 402.30297852]
[302.84619141 416.64288330]
[297.06338501 430.49584961]
[289.98995972 443.73635864]
[281.68994141 456.24453735]
[272.23852539 467.90710449]
[261.72128296 478.61843872]
[250.23350525 488.28152466]
[237.87918091 496.80886841]
[224.77021790 504.12322998]
[211.02532959 510.15835571]
[196.76899719 514.85961914]
[182.13034058 518.18438721]
[167.24191284 520.10266113]
[152.23857117 520.59692383]
[137.25616455 519.66284180]
[122.43041229 517.30877686]
[107.89556122 513.55609131]
[93.78324127 508.43872070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[38 166]
[39 165]
[40 164]
[44 163]
[45 162]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
