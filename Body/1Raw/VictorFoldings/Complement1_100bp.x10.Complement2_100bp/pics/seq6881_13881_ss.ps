%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[11.01579857 323.51345825]
[11.14410591 338.52340698]
[9.90693951 353.48284912]
[7.31455088 368.26779175]
[3.38842249 382.75573730]
[-1.83891249 396.82662964]
[-8.32413769 410.36389160]
[-16.01351357 423.25531006]
[-24.84332085 435.39407349]
[-34.74039459 446.67962646]
[-45.62271881 457.01840210]
[-57.40011978 466.32473755]
[-69.97500610 474.52154541]
[-83.24317169 481.54086304]
[-97.09467316 487.32455444]
[-111.41472626 491.82470703]
[-126.08467865 495.00399780]
[-140.98295593 496.83605957]
[-155.98611450 497.30578613]
[-170.96981812 496.40924072]
[-185.80990601 494.15383911]
[-200.38342285 490.55828857]
[-214.56959534 485.65237427]
[-228.25085449 479.47677612]
[-241.31385803 472.08264160]
[-253.65034485 463.53125000]
[-265.15808105 453.89343262]
[-275.74172974 443.24911499]
[-285.31356812 431.68646240]
[-293.79431152 419.30126953]
[-301.11361694 406.19622803]
[-307.21090698 392.47985840]
[-312.03564453 378.26589966]
[-315.54779053 363.67205811]
[-317.71832275 348.81930542]
[-318.52920532 333.83071899]
[-317.97372437 318.83050537]
[-316.05645752 303.94293213]
[-312.79336548 289.29141235]
[-308.21142578 274.99731445]
[-302.34863281 261.17910767]
[-295.25357056 247.95129395]
[-286.98498535 235.42347717]
[-277.61148071 223.69946289]
[-267.21066284 212.87643433]
[-255.86871338 203.04403687]
[-243.67967224 194.28378296]
[-230.74449158 186.66824341]
[-217.17037964 180.26051331]
[-203.06982422 175.11370850]
[-188.55966187 171.27047729]
[-173.76013184 168.76266479]
[-158.79386902 167.61103821]
[-143.78489685 167.82516479]
[-128.85757446 169.40325928]
[-114.13561249 172.33222961]
[-99.74098969 176.58782959]
[-85.79299164 182.13478088]
[-72.40720367 188.92710876]
[-59.69453812 196.90855408]
[-47.76034546 206.01296997]
[-36.70351791 216.16490173]
[-25.59628296 206.08377075]
[-14.48904991 196.00262451]
[-3.38181615 185.92149353]
[0.84244967 171.63845825]
[16.26128578 168.09303284]
[27.36851883 158.01188660]
[38.40039825 147.84834290]
[49.35630417 137.60295105]
[60.31221390 127.35755920]
[71.26812744 117.11216736]
[82.14746094 106.78549957]
[82.52204132 92.30082703]
[92.95658112 82.24763489]
[107.44516754 82.41233826]
[118.24732208 72.00496674]
[129.04948425 61.59759521]
[139.85163879 51.19021988]
[150.65379333 40.78284836]
[161.37817383 30.29534721]
[172.02418518 19.72830009]
[182.67019653 9.16125202]
[187.08863831 -8.71495628]
[204.21826172 -12.52846813]
[214.70576477 -23.25284767]
[218.82254028 -38.52906418]
[233.25286865 -42.21887207]
[243.74037170 -52.94325256]
[254.22787476 -63.66763306]
[264.71536255 -74.39201355]
[275.20288086 -85.11639404]
[276.12933350 -89.35852051]
[278.15390015 -92.74462128]
[280.87261963 -95.03460693]
[283.84503174 -96.14422607]
[286.64828491 -96.14350128]
[297.75552368 -106.22463989]
[308.86273193 -116.30577850]
[299.81130981 -128.27983093]
[291.86968994 -141.01705933]
[285.10180664 -154.41488647]
[279.56216431 -168.36546326]
[275.29534912 -182.75645447]
[272.33569336 -197.47198486]
[270.70709229 -212.39356995]
[270.42260742 -227.40107727]
[271.48452759 -242.37367249]
[273.88433838 -257.19079590]
[277.60269165 -271.73315430]
[282.60968018 -285.88363647]
[288.86492920 -299.52835083]
[296.31811523 -312.55740356]
[304.90924072 -324.86590576]
[314.56909180 -336.35473633]
[325.21994019 -346.93139648]
[336.77597046 -356.51074219]
[349.14419556 -365.01565552]
[362.22503662 -372.37762451]
[375.91311646 -378.53738403]
[390.09823608 -383.44534302]
[404.66622925 -387.06198120]
[419.49975586 -389.35818481]
[434.47940063 -390.31549072]
[449.48455811 -389.92614746]
[464.39440918 -388.19329834]
[479.08889771 -385.13088989]
[493.44970703 -380.76364136]
[507.36123657 -375.12661743]
[520.71142578 -368.26528931]
[533.39288330 -360.23486328]
[545.30340576 -351.09997559]
[556.34710693 -340.93423462]
[566.43511963 -329.81942749]
[575.48614502 -317.84509277]
[583.42736816 -305.10763550]
[590.19488525 -291.70959473]
[595.73406982 -277.75885010]
[600.00048828 -263.36773682]
[602.95965576 -248.65211487]
[604.58782959 -233.73048401]
[604.87182617 -218.72296143]
[603.80944824 -203.75039673]
[601.40917969 -188.93334961]
[597.69036865 -174.39111328]
[592.68298340 -160.24076843]
[586.42730713 -146.59625244]
[578.97375488 -133.56742859]
[570.38226318 -121.25920105]
[560.72204590 -109.77066040]
[550.07086182 -99.19432068]
[538.51452637 -89.61532593]
[526.14605713 -81.11080170]
[513.06500244 -73.74923706]
[499.37673950 -67.58988953]
[485.19143677 -62.68235779]
[470.62335205 -59.06615829]
[455.78976440 -56.77040100]
[440.81008911 -55.81357193]
[425.80493164 -56.20337296]
[410.89514160 -57.93667221]
[396.20074463 -60.99951172]
[381.84005737 -65.36722565]
[367.92871094 -71.00465393]
[354.57870483 -77.86640167]
[341.89752197 -85.89721680]
[329.98727417 -95.03244781]
[318.94387817 -105.19853973]
[307.83663940 -95.11740112]
[296.72940063 -85.03626251]
[285.92724609 -74.62889099]
[275.43975830 -63.90451050]
[264.95227051 -53.18013000]
[254.46475220 -42.45575333]
[243.97724915 -31.73137283]
[240.61061096 -17.22223663]
[225.43014526 -12.76534653]
[214.94264221 -2.04096675]
[214.76412964 10.05426788]
[206.11459351 19.07475662]
[193.23724365 19.80726051]
[182.59123230 30.37430763]
[171.94522095 40.94135666]
[169.41244507 47.88447189]
[161.06117249 51.58500290]
[150.25900269 61.99237823]
[139.45684814 72.39974976]
[128.65469360 82.80712128]
[117.85253906 93.21450043]
[117.47795868 107.69917297]
[107.04341888 117.75236511]
[92.55483246 117.58766174]
[88.54607391 125.79544067]
[81.51351929 128.06808472]
[70.55760956 138.31347656]
[59.60169601 148.55886841]
[48.64578629 158.80426025]
[44.51527405 166.95144653]
[37.44965744 169.11912537]
[26.34242439 179.20027161]
[21.32369423 194.20436096]
[6.69932270 197.02871704]
[-4.40791082 207.10986328]
[-15.51514435 217.19099426]
[-26.62237930 227.27214050]
[-17.58634758 239.25819397]
[-9.67771626 252.01628113]
[-2.96201921 265.44067383]
[2.50509453 279.42016602]
[6.67832136 293.83886719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 205]
[63 204]
[64 203]
[65 202]
[67 200]
[68 199]
[69 197]
[70 196]
[71 195]
[72 194]
[73 192]
[76 189]
[77 188]
[78 187]
[79 186]
[80 185]
[81 183]
[82 182]
[83 181]
[85 178]
[86 177]
[88 175]
[89 174]
[90 173]
[91 172]
[92 171]
[97 170]
[98 169]
[99 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
