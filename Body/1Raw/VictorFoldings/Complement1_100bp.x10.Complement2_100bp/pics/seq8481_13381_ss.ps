%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[29.34836388 209.54188538]
[30.86356926 224.47320557]
[31.18768311 239.47770691]
[30.31865311 254.46052551]
[28.26197624 269.32693481]
[25.03065300 283.98294067]
[20.64511490 298.33590698]
[15.13308811 312.29504395]
[8.52942181 325.77212524]
[0.87586850 338.68191528]
[-7.77918434 350.94284058]
[-17.38101578 362.47735596]
[-27.86891747 373.21252441]
[-39.17658234 383.08050537]
[-51.23252106 392.01885986]
[-63.96050644 399.97113037]
[-77.28006744 406.88702393]
[-91.10699463 412.72277832]
[-105.35386658 417.44152832]
[-119.93061066 421.01345825]
[-134.74507141 423.41595459]
[-149.70356750 424.63381958]
[-164.71154785 424.65939331]
[-179.67411804 423.49249268]
[-194.49667358 421.14047241]
[-209.08551025 417.61822510]
[-223.34837341 412.94805908]
[-237.19509888 407.15942383]
[-250.53814697 400.28897095]
[-263.29315186 392.38009644]
[-275.37948608 383.48287964]
[-286.72070312 373.65347290]
[-297.24511719 362.95410156]
[-306.88616943 351.45236206]
[-315.58294678 339.22100830]
[-323.28045654 326.33734131]
[-329.92999268 312.88284302]
[-335.48953247 298.94256592]
[-339.92395020 284.60464478]
[-343.20520020 269.95971680]
[-345.31250000 255.10040283]
[-346.23257446 240.12063599]
[-345.95959473 225.11511230]
[-344.49526978 210.17872620]
[-341.84884644 195.40588379]
[-338.03710938 180.89001465]
[-333.08410645 166.72286987]
[-327.02117920 152.99403381]
[-319.88662720 139.79029846]
[-311.72561646 127.19515228]
[-302.58969116 115.28821564]
[-292.53665161 104.14477539]
[-281.63003540 93.83528137]
[-269.93878174 84.42491913]
[-257.53683472 75.97318268]
[-244.50259399 68.53350830]
[-230.91847229 62.15293121]
[-216.87036133 56.87179184]
[-202.44705200 52.72348022]
[-187.73976135 49.73422241]
[-172.84147644 47.92292023]
[-157.84635925 47.30102539]
[-142.84924316 47.87246704]
[-127.94493103 49.63363266]
[-113.22766876 52.57339096]
[-98.79048920 56.67315292]
[-84.72468567 61.90699387]
[-71.11917114 68.24183655]
[-58.05997849 75.63761139]
[-45.62966919 84.04757690]
[-33.90682983 93.41854858]
[-22.96557999 103.69128418]
[-12.87509251 114.80083466]
[-3.69916606 126.67697144]
[4.50418663 139.24458313]
[17.67666245 132.06922913]
[30.84913826 124.89385986]
[44.02161407 117.71849060]
[30.59110641 111.03855896]
[27.29073334 96.40614319]
[36.55340576 84.60771942]
[51.55102921 84.34063721]
[61.22790909 95.80178833]
[58.45158768 110.54109955]
[72.12126160 104.36533356]
[85.79093170 98.18956757]
[94.10257721 86.94642639]
[108.03330231 88.14076233]
[121.70297241 81.96499634]
[135.37265015 75.78923035]
[149.04231262 69.61345673]
[162.71199036 63.43769073]
[176.38165283 57.26192474]
[182.91377258 50.87684250]
[190.30113220 51.09765625]
[204.06123352 45.12609482]
[217.82133484 39.15452957]
[231.58143616 33.18296814]
[226.54020691 19.04948616]
[222.45426941 4.61084652]
[219.34184265 -10.06846142]
[217.21684265 -24.92287636]
[216.08874512 -39.88605499]
[215.96261597 -54.89116287]
[216.83900452 -69.87119293]
[218.71398926 -84.75923157]
[221.57919312 -99.48878479]
[225.42184448 -113.99407196]
[230.22474670 -128.21031189]
[235.96649170 -142.07398987]
[242.62138367 -155.52320862]
[250.15974426 -168.49789429]
[258.54788208 -180.94009399]
[267.74835205 -192.79425049]
[277.72003174 -204.00740051]
[288.41839600 -214.52947998]
[299.79568481 -224.31347656]
[311.80105591 -233.31570435]
[324.38092041 -241.49595642]
[337.47906494 -248.81768799]
[351.03698730 -255.24821472]
[364.99417114 -260.75881958]
[379.28823853 -265.32485962]
[393.85537720 -268.92596436]
[408.63049316 -271.54605103]
[423.54763794 -273.17340088]
[438.54016113 -273.80078125]
[453.54110718 -273.42535400]
[468.48348999 -272.04879761]
[483.30053711 -269.67727661]
[497.92608643 -266.32138062]
[512.29486084 -261.99609375]
[526.34265137 -256.72073364]
[540.00665283 -250.51887512]
[553.22595215 -243.41819763]
[565.94146729 -235.45042419]
[578.09637451 -226.65113831]
[589.63641357 -217.05963135]
[600.51000977 -206.71876526]
[610.66864014 -195.67469788]
[620.06695557 -183.97677612]
[628.66290283 -171.67724609]
[636.41815186 -158.83100891]
[643.29803467 -145.49548340]
[649.27185059 -131.73020935]
[654.31292725 -117.59666443]
[658.39868164 -103.15797424]
[661.51092529 -88.47862244]
[663.63574219 -73.62418365]
[664.76361084 -58.66099167]
[664.88958740 -43.65587997]
[664.01300049 -28.67586327]
[662.13781738 -13.78784752]
[659.27246094 0.94167197]
[655.42962646 15.44691086]
[650.62652588 29.66308403]
[644.88458252 43.52669525]
[638.22955322 56.97583389]
[630.69104004 69.95042419]
[622.30273438 82.39251709]
[613.10211182 94.24655151]
[603.13031006 105.45957947]
[592.43176270 115.98152161]
[581.05438232 125.76537323]
[569.04888916 134.76745605]
[556.46893311 142.94755554]
[543.37066650 150.26911926]
[529.81268311 156.69947815]
[515.85540771 162.20989990]
[501.56130981 166.77575684]
[486.99411011 170.37667847]
[472.21896362 172.99658203]
[457.30178833 174.62376404]
[442.30926514 175.25093079]
[427.30834961 174.87532043]
[412.36599731 173.49858093]
[397.54895020 171.12687683]
[382.92343140 167.77079773]
[368.55471802 163.44534302]
[354.50701904 158.16979980]
[340.84304810 151.96775818]
[327.62387085 144.86691284]
[314.90844727 136.89898682]
[302.75366211 128.09953308]
[291.21374512 118.50789642]
[280.34027100 108.16688538]
[270.18176270 97.12269592]
[260.78363037 85.42465210]
[252.18780518 73.12500763]
[244.43272400 60.27868652]
[237.55299377 46.94306946]
[223.79289246 52.91463470]
[210.03279114 58.88619614]
[196.27268982 64.85775757]
[182.55741882 70.93159485]
[168.88775635 77.10736084]
[155.21807861 83.28312683]
[141.54841614 89.45890045]
[127.87873840 95.63466644]
[114.20906830 101.81043243]
[105.89742279 113.05357361]
[91.96669769 111.85923767]
[78.29702759 118.03500366]
[64.62735748 124.21076965]
[51.19697952 130.89096069]
[38.02450562 138.06632996]
[24.85202789 145.24169922]
[11.67955303 152.41706848]
[17.78922081 166.12516785]
[22.79045868 180.27534485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 208]
[76 207]
[77 206]
[78 205]
[84 204]
[85 203]
[86 202]
[88 200]
[89 199]
[90 198]
[91 197]
[92 196]
[93 195]
[95 194]
[96 193]
[97 192]
[98 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
