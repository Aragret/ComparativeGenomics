%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[170.94995117 261.43212891]
[178.48210144 248.44250488]
[187.39750671 236.36033630]
[197.58796692 225.33230591]
[187.75738525 214.00270081]
[177.92680359 202.67311096]
[168.09622192 191.34352112]
[163.48014832 190.11845398]
[159.58462524 185.98057556]
[158.14775085 179.52714539]
[148.65884399 167.90988159]
[138.99803162 156.43518066]
[129.16746521 145.10557556]
[119.33687592 133.77598572]
[109.50629425 122.44639587]
[99.67571259 111.11680603]
[97.53811646 125.96370697]
[85.61138153 135.06057739]
[70.72768402 133.19630432]
[61.41307831 121.43882751]
[63.00340271 106.52336884]
[74.58763885 96.99417877]
[89.52896881 98.30957031]
[80.74836731 86.14811707]
[71.96776581 73.98666382]
[63.18716049 61.82520676]
[65.14312744 76.69713593]
[62.22878265 91.41129303]
[54.75168991 104.41487885]
[43.50092316 114.33557129]
[29.66379929 120.12643433]
[14.70058727 121.17633057]
[0.19038898 117.37447357]
[-12.33549976 109.12207031]
[-21.55519295 97.29002380]
[-26.49571228 83.12699890]
[-26.63567543 68.12765503]
[-21.96030998 53.87490082]
[-12.96301937 41.87287140]
[-0.59330916 33.38816452]
[13.84341621 29.31619072]
[28.82361412 30.08667946]
[42.76639175 35.61831665]
[54.20045090 45.32748413]
[48.74509430 31.35468674]
[43.28973770 17.38188744]
[37.83438110 3.40909052]
[25.60794067 -6.63206148]
[28.18660164 -21.30175018]
[22.73124504 -35.27454758]
[8.39499760 -30.83948708]
[-6.22390366 -27.45046616]
[-21.04924202 -25.12515068]
[-36.00372314 -23.87566566]
[-51.00938416 -23.70852470]
[-65.98799133 -24.62459946]
[-80.86144257 -26.61911392]
[-95.55220795 -29.68167114]
[-109.98368073 -33.79630280]
[-124.08063507 -38.94155502]
[-137.76957703 -45.09060287]
[-150.97912598 -52.21139145]
[-163.64041138 -60.26679611]
[-175.68742371 -69.21481323]
[-187.05737305 -79.00879669]
[-197.69096375 -89.59767914]
[-207.53276062 -100.92626190]
[-216.53146362 -112.93547821]
[-224.64012146 -125.56272125]
[-231.81649780 -138.74215698]
[-238.02317810 -152.40505981]
[-243.22776794 -166.48020935]
[-247.40316772 -180.89422607]
[-250.52758789 -195.57196045]
[-252.58473206 -210.43687439]
[-253.56390381 -225.41148376]
[-253.45999146 -240.41772461]
[-252.27351379 -255.37733459]
[-250.01068115 -270.21234131]
[-246.68327332 -284.84539795]
[-242.30865479 -299.20019531]
[-236.90962219 -313.20190430]
[-230.51431274 -326.77755737]
[-223.15609741 -339.85632324]
[-214.87332153 -352.37005615]
[-205.70916748 -364.25347900]
[-195.71141052 -375.44467163]
[-184.93218994 -385.88528442]
[-173.42768860 -395.52084351]
[-161.25790405 -404.30114746]
[-148.48625183 -412.18041992]
[-135.17935181 -419.11758423]
[-121.40657043 -425.07644653]
[-107.23970795 -430.02597046]
[-92.75263214 -433.94033813]
[-78.02085876 -436.79913330]
[-63.12120819 -438.58746338]
[-48.13135529 -439.29602051]
[-33.12944794 -438.92105103]
[-18.19370651 -437.46456909]
[-3.40199399 -434.93417358]
[11.16856861 -431.34298706]
[25.44201660 -426.70980835]
[39.34393311 -421.05874634]
[52.80184174 -414.41928101]
[65.74558258 -406.82604980]
[78.10765839 -398.31857300]
[89.82363129 -388.94128418]
[100.83241272 -378.74304199]
[111.07661438 -367.77697754]
[120.50281525 -356.10031128]
[129.06188965 -343.77392578]
[136.70918274 -330.86206055]
[143.40486145 -317.43200684]
[149.11399841 -303.55386353]
[153.80682373 -289.29989624]
[157.45887756 -274.74447632]
[160.05113220 -259.96347046]
[161.57003784 -245.03395081]
[162.00772095 -230.03375244]
[161.36186218 -215.04106140]
[159.63584900 -200.13406372]
[156.83866882 -185.39047241]
[152.98490906 -170.88714600]
[148.09466553 -156.69970703]
[142.19343567 -142.90213013]
[135.31198120 -129.56634521]
[127.48617554 -116.76187134]
[118.75682831 -104.55546570]
[109.16944122 -93.01078033]
[98.77400208 -82.18799591]
[87.62471771 -72.14353943]
[75.77970123 -62.92977905]
[63.30071640 -54.59475327]
[50.25282288 -47.18191147]
[36.70404434 -40.72990417]
[42.15940094 -26.75710678]
[53.99563599 -17.71538353]
[51.80717850 -2.04626656]
[57.26253510 11.92653179]
[62.71789169 25.89932823]
[68.17324829 39.87212753]
[75.34861755 53.04460144]
[84.12921906 65.20606232]
[92.90982056 77.36751556]
[101.69042969 89.52896881]
[111.00531006 101.28622437]
[120.83589172 112.61581421]
[130.66647339 123.94540405]
[140.49705505 135.27499390]
[150.32763672 146.60459900]
[156.44187927 149.12005615]
[159.85548401 153.66365051]
[160.27610779 158.42097473]
[169.76501465 170.03823853]
[179.42582703 181.51293945]
[189.25640869 192.84252930]
[199.08699036 204.17211914]
[208.91755676 215.50172424]
[221.27206421 206.96771240]
[234.49041748 199.84460449]
[248.41215515 194.21890259]
[262.86825562 190.15887451]
[277.68328857 187.71380615]
[292.67736816 186.91339111]
[307.66848755 187.76731873]
[322.47470093 190.26525879]
[336.91622925 194.37686157]
[350.81781006 200.05221558]
[364.01062012 207.22245789]
[376.33459473 215.80050659]
[387.64007568 225.68226624]
[397.78985596 236.74775696]
[406.66073608 248.86267090]
[414.14498901 261.87994385]
[420.15176392 275.64154053]
[424.60818481 289.98040771]
[427.46014404 304.72253418]
[428.67297363 319.68890381]
[428.23202515 334.69784546]
[426.14260864 349.56719971]
[422.43008423 364.11642456]
[417.13952637 378.16894531]
[410.33517456 391.55416870]
[402.09960938 404.10958862]
[392.53277588 415.68280029]
[381.75088501 426.13333130]
[369.88473511 435.33428955]
[357.07843018 443.17404175]
[343.48736572 449.55737305]
[329.27661133 454.40679932]
[314.61859131 457.66345215]
[299.69128418 459.28781128]
[284.67587280 459.26016235]
[269.75463867 457.58084106]
[255.10871887 454.27020264]
[240.91589355 449.36846924]
[227.34844971 442.93515015]
[214.57110596 435.04830933]
[202.73892212 425.80368042]
[191.99557495 415.31353760]
[182.47145081 403.70516968]
[174.28216553 391.11950684]
[167.52716064 377.70932007]
[162.28839111 363.63742065]
[158.62947083 349.07458496]
[156.59483337 334.19766235]
[156.20915222 319.18716431]
[157.47711182 304.22537231]
[160.38333130 289.49386597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 159]
[5 158]
[6 157]
[7 156]
[10 155]
[11 154]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[23 146]
[24 145]
[25 144]
[26 143]
[44 142]
[45 141]
[46 140]
[47 139]
[49 137]
[50 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
