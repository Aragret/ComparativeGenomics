%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[76.44608307 732.92407227]
[74.88233185 717.87713623]
[78.04685211 703.08386230]
[85.62961578 689.99353027]
[96.88774109 679.88861084]
[110.71827698 673.75903320]
[109.15775299 658.84045410]
[107.59722900 643.92181396]
[106.03671265 629.00323486]
[95.77437592 639.94323730]
[80.78707123 640.56030273]
[69.66020203 630.50079346]
[68.76774597 615.52740479]
[78.62094116 604.21746826]
[93.57543182 603.04986572]
[105.06416321 612.69262695]
[104.84083557 597.69427490]
[104.39422607 582.70092773]
[103.72444153 567.71588135]
[103.05465698 552.73083496]
[102.38487244 537.74578857]
[101.71508789 522.76080322]
[93.41719818 510.39169312]
[100.53057098 496.25979614]
[99.86078644 481.27474976]
[86.37701416 478.46221924]
[73.95340729 472.49151611]
[63.31822968 463.70733643]
[55.09617996 452.61950684]
[49.77168655 439.87332153]
[47.66037369 426.21197510]
[48.89035797 412.43334961]
[53.39447403 399.34326172]
[60.91394043 387.70840454]
[71.01320648 378.21148682]
[83.10518646 371.41110229]
[96.48539734 367.70886230]
[96.26206970 352.71054077]
[96.03874207 337.71218872]
[95.81541443 322.71386719]
[82.23889160 316.53781128]
[72.65079498 305.03225708]
[68.99401855 290.44497681]
[72.04581451 275.65621948]
[81.25333405 263.61013794]
[94.83287811 256.72845459]
[94.60955048 241.73013306]
[94.38622284 226.73179626]
[94.16289520 211.73345947]
[93.93956757 196.73512268]
[93.71623993 181.73678589]
[93.49291229 166.73844910]
[93.26958466 151.74011230]
[93.04625702 136.74177551]
[85.12032318 124.13110352]
[92.65130615 110.21726227]
[92.09309387 95.22765350]
[91.20027924 80.25424957]
[82.65529633 66.93907928]
[89.62133789 53.77383804]
[85.98668671 45.39367294]
[88.82838440 38.57116699]
[88.15859985 23.58613014]
[87.48880768 8.60109043]
[86.81902313 -6.38394833]
[86.14923859 -21.36898613]
[75.22920990 -29.25362396]
[70.90718842 -41.80474091]
[74.54919434 -54.36730194]
[84.61038208 -62.41727066]
[84.16377258 -77.41062164]
[83.71717072 -92.40396881]
[75.57241821 -105.96765900]
[82.92734528 -118.91965485]
[82.48074341 -133.91300964]
[82.03413391 -148.90635681]
[81.58753204 -163.89970398]
[73.44277954 -177.46339417]
[80.79770660 -190.41539001]
[80.23949432 -205.40499878]
[79.56970978 -220.39004517]
[64.60630035 -221.72410583]
[49.95422745 -225.04077148]
[35.87498093 -230.28082275]
[22.61981583 -237.35076904]
[10.42528820 -246.12442017]
[-0.49097437 -256.44519043]
[-9.93416023 -268.12893677]
[-17.73574448 -280.96710205]
[-23.75649643 -294.73062134]
[-27.88897324 -309.17382812]
[-30.05942154 -324.03897095]
[-30.22911072 -339.06076050]
[-28.39500809 -353.97116089]
[-24.58984947 -368.50402832]
[-18.88154221 -382.40002441]
[-11.37195492 -395.41113281]
[-2.19510674 -407.30520630]
[8.48523045 -417.86996460]
[20.47845459 -426.91683960]
[33.57052994 -434.28439331]
[47.52781677 -439.84115601]
[62.10123062 -443.48794556]
[77.03068542 -445.15969849]
[92.04975891 -444.82656860]
[106.89040375 -442.49447632]
[121.28778839 -438.20510864]
[134.98495483 -432.03494263]
[147.73747253 -424.09411621]
[159.31776428 -414.52435303]
[169.51916504 -403.49642944]
[178.15959167 -391.20715332]
[185.08488464 -377.87582397]
[190.17141724 -363.74038696]
[193.32844543 -349.05310059]
[194.49961853 -334.07604980]
[193.66403198 -319.07656860]
[190.83659363 -304.32226562]
[186.06776428 -290.07650757]
[179.44265747 -276.59350586]
[171.07949829 -264.11389160]
[161.12754822 -252.86035156]
[149.76438904 -243.03373718]
[137.19282532 -234.80941772]
[123.63722229 -228.33416748]
[109.33947754 -223.72354126]
[94.55474854 -221.05982971]
[95.22453308 -206.07478333]
[98.66357422 -199.53300476]
[95.79106140 -190.86199951]
[103.90386963 -178.37072754]
[96.58087921 -164.34631348]
[97.02748871 -149.35296631]
[97.47409058 -134.35961914]
[97.92070007 -119.36626434]
[106.03350830 -106.87500000]
[98.71051788 -92.85057831]
[99.15712738 -77.85723114]
[99.60372925 -62.86388016]
[112.32611084 -51.86479568]
[113.17373657 -34.73014069]
[101.13427734 -22.03877258]
[101.80406189 -7.05373335]
[102.47385406 7.93130541]
[103.14363861 22.91634369]
[103.81342316 37.90138245]
[104.59474182 52.88101959]
[113.07586670 65.12519836]
[106.17368317 79.36143494]
[107.06649780 94.33483887]
[109.55902863 97.27757263]
[110.74234009 101.30468750]
[110.16122437 105.80683136]
[107.64964294 109.99393463]
[115.59155273 123.67738342]
[108.04459381 136.51844788]
[108.26792145 151.51678467]
[108.49124908 166.51512146]
[108.71457672 181.51345825]
[108.93790436 196.51179504]
[109.16123199 211.51013184]
[109.38455963 226.50846863]
[109.60788727 241.50680542]
[109.83122253 256.50512695]
[123.60963440 262.97943115]
[133.17173767 274.74606323]
[136.66249084 289.43737793]
[133.44165039 304.12707520]
[124.20037079 315.91299438]
[110.81375122 322.49053955]
[111.03707886 337.48886108]
[111.26040649 352.48721313]
[111.48373413 367.48553467]
[127.23160553 371.69970703]
[141.14845276 380.16262817]
[152.11651611 392.18539429]
[159.25743103 406.79354858]
[162.00263977 422.80609131]
[160.13858032 438.93087769]
[153.82328796 453.86898804]
[143.57308960 466.41934204]
[130.22033691 475.57519531]
[114.84582520 480.60494995]
[115.51560974 495.58999634]
[123.86140442 509.03091431]
[116.70012665 522.09100342]
[117.36991119 537.07604980]
[118.03969574 552.06109619]
[118.70948029 567.04608154]
[119.37926483 582.03112793]
[122.60962677 587.79968262]
[122.46373749 593.48089600]
[119.83917236 597.47094727]
[120.06250000 612.46929932]
[120.95531464 627.44268799]
[122.51583862 642.36132812]
[124.07636261 657.27990723]
[125.63688660 672.19848633]
[140.43649292 675.33331299]
[153.54203796 682.88970947]
[163.66958618 694.12750244]
[169.82693481 707.94567871]
[171.41085815 722.99047852]
[168.26615906 737.78802490]
[160.70094299 750.88848877]
[149.45637512 761.00848389]
[135.63406372 767.15661621]
[120.58819580 768.73040771]
[105.79280090 765.57580566]
[92.69738770 758.00183105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[16 194]
[17 193]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[24 184]
[25 183]
[37 173]
[38 172]
[39 171]
[40 170]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[56 154]
[57 150]
[58 149]
[60 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[70 139]
[71 138]
[72 137]
[74 135]
[75 134]
[76 133]
[77 132]
[79 130]
[80 128]
[81 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
