%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[132.50627136 424.49819946]
[127.28871918 410.42712402]
[123.15029144 396.00180054]
[120.11469269 381.30474854]
[118.19931030 366.42025757]
[117.41511536 351.43350220]
[117.76660156 336.43038940]
[119.25176239 321.49679565]
[121.86207581 306.71832275]
[125.58260345 292.17956543]
[130.39202881 277.96383667]
[136.26280212 264.15255737]
[143.16128540 250.82484436]
[151.04798889 238.05702209]
[159.87773132 225.92224121]
[169.59991455 214.48997498]
[180.15887451 203.82575989]
[170.32829285 192.49615479]
[160.49771118 181.16656494]
[150.66712952 169.83697510]
[140.83654785 158.50738525]
[126.65142059 153.96520996]
[123.45121002 138.47103882]
[113.62062836 127.14144135]
[103.79004669 115.81185150]
[87.79859161 110.74730682]
[84.79298401 94.24449921]
[74.79481506 83.06253052]
[64.79663849 71.88055420]
[54.79846954 60.69857788]
[44.80029678 49.51660538]
[34.63674927 38.48472595]
[24.31008148 27.60539246]
[13.98341274 16.72605705]
[3.65674424 5.84672356]
[-13.08103466 8.28451157]
[-27.82735062 0.34426898]
[-34.86460495 -14.67035103]
[-31.59876060 -30.75797844]
[-42.08626175 -41.48235703]
[-52.57376480 -52.20673752]
[-64.11336517 -42.61070251]
[-76.38771057 -33.97434235]
[-89.31719971 -26.35367203]
[-102.81797791 -19.79810905]
[-116.80248260 -14.35017490]
[-131.18000793 -10.04519939]
[-145.85733032 -6.91110229]
[-160.73925781 -4.96821022]
[-175.72924805 -4.22912407]
[-190.73011780 -4.69863653]
[-205.64456177 -6.37370300]
[-220.37583923 -9.24345970]
[-234.82844543 -13.28929520]
[-248.90861511 -18.48497009]
[-262.52505493 -24.79678726]
[-275.58941650 -32.18381119]
[-288.01702881 -40.59813690]
[-299.72726440 -49.98519135]
[-310.64419556 -60.28409576]
[-320.69696045 -71.42805481]
[-329.82043457 -83.34479523]
[-337.95541382 -95.95703125]
[-345.04913330 -109.18296814]
[-351.05560303 -122.93682861]
[-355.93585205 -137.12940979]
[-359.65826416 -151.66867065]
[-362.19863892 -166.46031189]
[-363.54055786 -181.40841675]
[-363.67529297 -196.41601562]
[-362.60195923 -211.38578796]
[-360.32754517 -226.22065735]
[-356.86679077 -240.82440186]
[-352.24212646 -255.10232544]
[-346.48355103 -268.96179199]
[-339.62841797 -282.31295776]
[-331.72119141 -295.06921387]
[-322.81314087 -307.14782715]
[-312.96206665 -318.47048950]
[-302.23181152 -328.96371460]
[-290.69198608 -338.55950928]
[-278.41744995 -347.19558716]
[-265.48779297 -354.81597900]
[-251.98687744 -361.37124634]
[-238.00225830 -366.81887817]
[-223.62461853 -371.12353516]
[-208.94723511 -374.25729370]
[-194.06527710 -376.19985962]
[-179.07525635 -376.93862915]
[-164.07440186 -376.46878052]
[-149.16000366 -374.79339600]
[-134.42877197 -371.92330933]
[-119.97627258 -367.87716675]
[-105.89620972 -362.68115234]
[-92.27991486 -356.36904907]
[-79.21569824 -348.98175049]
[-66.78826904 -340.56713867]
[-55.07824707 -331.17984009]
[-44.16156387 -320.88067627]
[-34.10902405 -309.73651123]
[-24.98582077 -297.81954956]
[-16.85112381 -285.20715332]
[-9.75769043 -271.98104858]
[-3.75152564 -258.22705078]
[1.12841856 -244.03436279]
[4.85049343 -229.49502563]
[7.39055920 -214.70332336]
[8.73214245 -199.75520325]
[8.86654282 -184.74758911]
[7.79288769 -169.77783203]
[5.51814127 -154.94302368]
[2.05705571 -140.33934021]
[-2.56792188 -126.06153870]
[-8.32679653 -112.20217896]
[-15.18221855 -98.85117340]
[-23.08972931 -86.09509277]
[-31.99804115 -74.01667023]
[-41.84938431 -62.69424057]
[-31.36188126 -51.96986008]
[-20.87438011 -41.24547958]
[-7.90262318 -44.40390015]
[5.03970098 -40.71061325]
[14.54266834 -31.02747345]
[18.04776192 -17.80881882]
[14.53607845 -4.47994518]
[24.86274719 6.39938927]
[35.18941498 17.27872467]
[45.51608276 28.15805817]
[50.18227005 29.17578506]
[54.25866318 33.13558578]
[55.98227310 39.51843262]
[65.98044586 50.70040512]
[75.97861481 61.88238144]
[85.97678375 73.06435394]
[95.97496033 84.24633026]
[107.54302979 85.59577179]
[115.24110413 94.33538818]
[115.11963654 105.98126984]
[124.95021820 117.31085968]
[134.78080750 128.64045715]
[149.66908264 133.99299622]
[152.16615295 148.67680359]
[161.99671936 160.00639343]
[171.82730103 171.33598328]
[181.65788269 182.66557312]
[191.48846436 193.99517822]
[203.53474426 185.04505920]
[216.22340393 177.03161621]
[229.48178101 170.00076294]
[243.23393250 163.99276733]
[257.40106201 159.04203796]
[271.90203857 155.17694092]
[286.65380859 152.41961670]
[301.57183838 150.78584290]
[316.57073975 150.28498840]
[331.56454468 150.91992188]
[346.46737671 152.68701172]
[361.19390869 155.57612610]
[375.65975952 159.57072449]
[389.78204346 164.64791870]
[403.47991943 170.77864075]
[416.67489624 177.92774963]
[429.29141235 186.05432129]
[441.25720215 195.11178589]
[452.50369263 205.04827881]
[462.96649170 215.80686951]
[472.58563232 227.32594299]
[481.30609131 239.53950500]
[489.07785034 252.37762451]
[495.85641479 265.76675415]
[501.60293579 279.63015747]
[506.28454590 293.88848877]
[509.87442017 308.46005249]
[512.35192871 323.26138306]
[513.70300293 338.20770264]
[513.91973877 353.21337891]
[513.00103760 368.19247437]
[510.95211792 383.05917358]
[507.78469849 397.72836304]
[503.51693726 412.11596680]
[498.17324829 426.13961792]
[491.78430176 439.71896362]
[484.38662720 452.77621460]
[476.02264404 465.23660278]
[466.74026489 477.02874756]
[456.59262085 488.08508301]
[445.63784790 498.34231567]
[433.93872070 507.74166870]
[421.56222534 516.22930908]
[408.57928467 523.75659180]
[395.06423950 530.28045654]
[381.09448242 535.76348877]
[366.75006104 540.17425537]
[352.11315918 543.48760986]
[337.26757812 545.68444824]
[322.29837036 546.75225830]
[307.29125977 546.68487549]
[292.33224487 545.48272705]
[277.50698853 543.15270996]
[262.90042114 539.70812988]
[248.59617615 535.16870117]
[234.67622375 529.56048584]
[221.22027588 522.91558838]
[208.30541992 515.27203369]
[196.00563049 506.67361450]
[184.39135742 497.16961670]
[173.52911377 486.81445312]
[163.48114014 475.66744995]
[154.30499268 463.79244995]
[146.05320740 451.25747681]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 146]
[18 145]
[19 144]
[20 143]
[21 142]
[23 140]
[24 139]
[25 138]
[27 135]
[28 134]
[29 133]
[30 132]
[31 131]
[32 128]
[33 127]
[34 126]
[35 125]
[39 120]
[40 119]
[41 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
