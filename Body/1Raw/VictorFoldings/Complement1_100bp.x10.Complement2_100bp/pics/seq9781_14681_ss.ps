%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[198.97032166 718.06634521]
[191.61842346 704.97711182]
[185.60633850 691.22088623]
[180.99382019 676.93444824]
[177.82672119 662.25970459]
[176.13652039 647.34252930]
[175.94000244 632.33117676]
[177.23912048 617.37487793]
[180.02098083 602.62225342]
[184.25791931 588.21997070]
[189.90782166 574.31103516]
[196.91455078 561.03387451]
[205.20846558 548.52026367]
[214.70712280 536.89471436]
[225.31613159 526.27264404]
[236.93005371 516.75976562]
[249.43345642 508.45050049]
[262.70205688 501.42749023]
[257.03927612 487.53744507]
[251.37648010 473.64743042]
[245.71369934 459.75741577]
[240.05090332 445.86737061]
[234.38812256 431.97735596]
[228.72534180 418.08731079]
[213.22402954 419.80618286]
[197.85139465 417.08947754]
[183.85211182 410.14889526]
[172.36199951 399.53836060]
[164.31584167 386.11004639]
[160.37138367 370.94573975]
[160.85556030 355.26974487]
[165.73735046 340.35015869]
[174.62976074 327.39608765]
[186.82032776 317.45983887]
[174.72012329 308.77453613]
[176.44108582 293.04718018]
[170.57212830 279.24301147]
[164.70317078 265.43884277]
[158.83421326 251.63465881]
[144.26455688 241.85241699]
[146.65008545 223.59342957]
[140.57626343 209.87815857]
[134.50242615 196.16290283]
[128.42858887 182.44763184]
[122.35475922 168.73236084]
[108.41082764 163.62330627]
[102.05571747 149.80059814]
[107.50911713 135.20956421]
[101.43527985 121.49429321]
[95.36145020 107.77902985]
[91.99705505 105.89402008]
[89.47988892 102.53519440]
[88.44952393 98.11418152]
[89.33788300 93.31306458]
[83.88252258 79.34027100]
[78.42716980 65.36746979]
[72.97180939 51.39467239]
[66.93564606 44.53883743]
[67.54095459 37.17301178]
[62.29423523 23.12054062]
[57.04751587 9.06806946]
[54.65268707 23.87566185]
[47.13343048 36.85490417]
[35.47903061 46.29815674]
[21.22282982 50.96299744]
[6.24047327 50.23568344]
[-7.49685192 44.21190643]
[-18.18176460 33.68419647]
[-24.40847969 20.03765869]
[-25.35776711 5.06772709]
[-20.90473175 -9.25604630]
[-11.63524628 -21.04912186]
[1.23112953 -28.75991821]
[16.00160217 -31.37394714]
[30.73286057 -28.54728889]
[43.48675537 -20.65183830]
[52.58637238 -8.72425556]
[50.58235931 -23.58978271]
[41.07070541 -36.23252869]
[47.03826904 -49.87941360]
[45.03425217 -64.74494171]
[29.54118156 -75.64810944]
[26.98152351 -94.09698486]
[38.51857758 -108.31008148]
[36.07284927 -123.10935211]
[33.62712097 -137.90861511]
[31.18139458 -152.70788574]
[28.73566818 -167.50715637]
[13.71113014 -168.81639099]
[-0.51551938 -173.82171631]
[-13.04998112 -182.20849609]
[-23.10432816 -193.44953918]
[-30.04653740 -206.83821106]
[-33.44021225 -221.53288269]
[-33.07202911 -236.60986328]
[-28.96512604 -251.12138367]
[-21.37767029 -264.15524292]
[-10.78661346 -274.89212036]
[2.14227986 -282.65707397]
[16.59628868 -286.96200562]
[31.66682434 -287.53628540]
[46.40653610 -284.34384155]
[59.88887787 -277.58535767]
[71.26633453 -267.68563843]
[79.82370758 -255.26701355]
[85.02308655 -241.11013794]
[86.53761292 -226.10490417]
[84.27210236 -211.19456482]
[78.36895752 -197.31639099]
[69.19924927 -185.34277344]
[57.33940506 -176.02639771]
[43.53493881 -169.95289612]
[45.98066711 -155.15362549]
[48.42639542 -140.35435486]
[50.87211990 -125.55507660]
[53.31784821 -110.75580597]
[63.81226349 -106.27993011]
[70.91640472 -97.19990540]
[72.77426147 -85.70024109]
[68.81009674 -74.61933899]
[59.89978027 -66.74895477]
[61.90379715 -51.88342667]
[71.27210999 -40.30396271]
[65.44788361 -25.59379768]
[67.45189667 -10.72826862]
[71.09999084 3.82135177]
[76.34670258 17.87382317]
[81.59342194 31.92629433]
[86.94461060 45.93931580]
[92.39996338 59.91211319]
[97.85532379 73.88491058]
[103.31068420 87.85771179]
[109.07671356 101.70519257]
[115.15055084 115.42046356]
[121.22438049 129.13572693]
[135.69387817 134.90386963]
[141.65823364 148.89962769]
[136.07002258 162.65852356]
[142.14385986 176.37379456]
[148.21769714 190.08906555]
[154.29151917 203.80433655]
[160.36535645 217.51959229]
[172.09446716 222.88531494]
[176.87101746 234.43382263]
[172.63838196 245.76570129]
[178.50733948 259.56988525]
[184.37631226 273.37405396]
[190.24526978 287.17822266]
[202.76524353 296.85092163]
[200.62449646 311.59088135]
[214.95391846 309.69140625]
[229.27407837 311.56835938]
[242.60751343 317.08728027]
[254.04582214 325.86535645]
[262.81140137 337.29794312]
[268.31048584 350.60018921]
[270.17321777 364.86102295]
[268.27856445 379.10537720]
[262.76220703 392.36108398]
[254.00677490 403.72494507]
[242.61537170 412.42453003]
[248.27815247 426.31457520]
[253.94093323 440.20458984]
[259.60372925 454.09460449]
[265.26651001 467.98464966]
[270.92929077 481.87466431]
[276.59207153 495.76470947]
[290.98883057 491.50888062]
[305.73782349 488.70770264]
[320.69238281 487.38897705]
[335.70397949 487.56582642]
[350.62332153 489.23648071]
[365.30221558 492.38433838]
[379.59472656 496.97814941]
[393.35879517 502.97219849]
[406.45767212 510.30691528]
[418.76110840 518.90948486]
[430.14688110 528.69427490]
[440.50180054 539.56414795]
[449.72296143 551.41107178]
[457.71871948 564.11724854]
[464.40957642 577.55639648]
[469.72909546 591.59497070]
[473.62432861 606.09344482]
[476.05664062 620.90771484]
[477.00180054 635.89050293]
[476.45043945 650.89300537]
[474.40802002 665.76605225]
[470.89489746 680.36181641]
[465.94589233 694.53527832]
[459.61029053 708.14550781]
[451.95098877 721.05725098]
[443.04412842 733.14221191]
[432.97824097 744.28027344]
[421.85336304 754.36077881]
[409.78009033 763.28344727]
[396.87835693 770.95965576]
[383.27642822 777.31311035]
[369.10949707 782.28063965]
[354.51837158 785.81292725]
[339.64801025 787.87481689]
[324.64627075 788.44586182]
[309.66220093 787.52032471]
[294.84475708 785.10742188]
[280.34118652 781.23120117]
[266.29565430 775.93011475]
[252.84774780 769.25683594]
[240.13111877 761.27777100]
[228.27215576 752.07214355]
[217.38871765 741.73144531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 167]
[19 166]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[34 150]
[36 148]
[37 147]
[38 146]
[39 145]
[41 142]
[42 141]
[43 140]
[44 139]
[45 138]
[48 135]
[49 134]
[50 133]
[54 132]
[55 131]
[56 130]
[57 129]
[59 128]
[60 127]
[61 126]
[77 125]
[78 124]
[80 122]
[81 121]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
