%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[6.77331877 505.65310669]
[-6.29160070 513.47790527]
[-21.41041946 515.30578613]
[-35.96371078 510.82009888]
[-47.43002701 500.79794312]
[-53.82276154 486.97576904]
[-54.03433609 471.74832153]
[-48.02808762 457.75384521]
[-36.84464264 447.41699219]
[-22.42159653 442.52868652]
[-21.08336258 427.58850098]
[-27.65433693 414.22171021]
[-18.71669960 401.16683960]
[-17.37846565 386.22665405]
[-16.04023170 371.28646851]
[-14.70199776 356.34628296]
[-13.36376381 341.40609741]
[-12.02552986 326.46591187]
[-19.91493797 339.22354126]
[-30.80094337 349.54318237]
[-43.96151733 356.74035645]
[-58.52376938 360.33770752]
[-73.52182770 360.09661865]
[-87.96093750 356.03311157]
[-100.88339996 348.41668701]
[-111.43210602 337.75250244]
[-118.90740967 324.74789429]
[-122.81349945 310.26541138]
[-122.89128876 295.26559448]
[-119.13562775 280.74337769]
[-111.79561615 267.66192627]
[-101.35808563 256.88891602]
[-88.51531982 249.13885498]
[-74.11913300 244.92579651]
[-59.12437820 244.52915955]
[-44.52560043 247.97526550]
[-31.29108429 255.03555298]
[-20.29862595 265.24172974]
[-12.27731705 277.91683960]
[-7.75918198 292.22021484]
[-7.04431057 307.20825195]
[-0.97047651 293.49298096]
[5.10335732 279.77774048]
[2.29679871 262.45462036]
[17.26243591 251.72563171]
[23.13139725 237.92144775]
[20.99065018 223.18148804]
[33.51063156 213.50881958]
[39.37959290 199.70463562]
[45.24855423 185.90046692]
[51.11751556 172.09628296]
[37.61201859 178.62327576]
[22.82937622 176.07897949]
[12.28314686 165.41233826]
[9.90681171 150.60177612]
[16.58668709 137.17123413]
[29.83134460 130.12998962]
[44.70085144 132.10426331]
[55.64925385 142.35766602]
[58.59293365 157.06712341]
[66.06067657 144.05818176]
[73.52841949 131.04922485]
[80.99615479 118.04026794]
[88.46389771 105.03131866]
[95.63926697 91.85884094]
[102.51867676 78.52941132]
[109.39808655 65.19998169]
[116.17808533 51.81970978]
[122.85827637 38.38933563]
[122.07647705 22.58745766]
[134.67218018 14.63776588]
[141.35237122 1.20738959]
[127.77536011 7.58428478]
[112.89239502 5.71416998]
[101.31512451 -3.82347965]
[96.63088989 -18.07332039]
[100.29115295 -32.61988068]
[111.16173553 -42.95575714]
[125.87428284 -45.87825775]
[139.86994934 -40.48181915]
[148.81201172 -28.43858719]
[149.92962646 -13.48003292]
[158.34425354 -25.89752769]
[166.75886536 -38.31502533]
[165.09588623 -51.10554123]
[172.36007690 -61.27486801]
[184.21340942 -63.68840790]
[192.81198120 -75.97924805]
[201.41053772 -88.27008820]
[210.00909424 -100.56092072]
[207.46414185 -115.92845154]
[216.35940552 -128.27061462]
[231.02568054 -130.60214233]
[232.59658813 -146.34516907]
[246.23220825 -152.33843994]
[254.83076477 -164.62927246]
[263.42932129 -176.92012024]
[272.02789307 -189.21095276]
[280.62646484 -201.50178528]
[289.22503662 -213.79263306]
[278.02343750 -223.79565430]
[268.08358765 -235.05335999]
[259.54501343 -247.40766907]
[252.52758789 -260.68518066]
[247.12983704 -274.69946289]
[243.42752075 -289.25384521]
[241.47261047 -304.14392090]
[241.29257202 -319.16070557]
[242.88992310 -334.09338379]
[246.24223328 -348.73233032]
[251.30244446 -362.87200928]
[257.99951172 -376.31393433]
[266.23944092 -388.86941528]
[275.90652466 -400.36218262]
[286.86508179 -410.63088989]
[298.96127319 -419.53140259]
[312.02523804 -426.93872070]
[325.87362671 -432.74893188]
[340.31204224 -436.88040161]
[355.13772583 -439.27517700]
[370.14260864 -439.89962769]
[385.11602783 -438.74496460]
[399.84777832 -435.82742310]
[414.13104248 -431.18792725]
[427.76528931 -424.89166260]
[440.55917358 -417.02697754]
[452.33303833 -407.70428467]
[462.92160034 -397.05447388]
[472.17623901 -385.22705078]
[479.96701050 -372.38803101]
[486.18457031 -358.71768188]
[490.74157715 -344.40789795]
[493.57412720 -329.65957642]
[494.64242554 -314.67974854]
[493.93145752 -299.67871094]
[491.45123291 -284.86706543]
[487.23654175 -270.45275879]
[481.34658813 -256.63809204]
[473.86404419 -243.61705017]
[464.89392090 -231.57240295]
[454.56219482 -220.67324829]
[443.01385498 -211.07258606]
[430.41107178 -202.90521240]
[416.93072510 -196.28576660]
[402.76211548 -191.30718994]
[388.10409546 -188.03935242]
[373.16244507 -186.52815247]
[358.14694214 -186.79478455]
[343.26837158 -188.83552551]
[328.73562622 -192.62170410]
[314.75268555 -198.10018921]
[301.51586914 -205.19406128]
[292.91729736 -192.90322876]
[284.31872559 -180.61239624]
[275.72018433 -168.32154846]
[267.12161255 -156.03071594]
[258.52304077 -143.73988342]
[257.56713867 -128.87597656]
[243.31651306 -122.00357819]
[246.15382385 -107.42670441]
[237.60874939 -94.83955383]
[222.29994202 -91.96235657]
[213.70137024 -79.67152405]
[205.10281372 -67.38068390]
[196.50424194 -55.08984375]
[195.92626953 -37.55038071]
[179.17636108 -29.90040588]
[170.76174927 -17.48291016]
[162.34712219 -5.06541443]
[154.78274536 7.88758421]
[148.10255432 21.31796074]
[149.36216736 36.15920639]
[136.28865051 45.06953049]
[129.60845947 58.49990463]
[129.44418335 65.88873291]
[122.72751617 72.07939911]
[115.84810638 85.40882874]
[108.96869659 98.73825836]
[109.60877991 102.54123688]
[108.56946564 106.60789490]
[105.77057648 110.18185425]
[101.47285461 112.49906158]
[94.00511169 125.50801086]
[86.53736877 138.51696777]
[79.06962585 151.52592468]
[71.60188293 164.53486633]
[64.92169189 177.96524048]
[59.05273056 191.76942444]
[53.18376923 205.57359314]
[47.31480789 219.37777710]
[49.03577042 235.10510254]
[36.93557358 243.79040527]
[31.06661415 257.59457397]
[35.15881348 269.82638550]
[29.98635674 281.20309448]
[18.81862450 285.85156250]
[12.74479008 299.56683350]
[6.67095613 313.28210449]
[2.91465569 327.80416870]
[1.57642138 342.74435425]
[0.23818724 357.68450928]
[-1.10004699 372.62469482]
[-2.43828106 387.56488037]
[-3.77651525 402.50506592]
[2.69874048 416.94052124]
[-6.14317751 428.92672729]
[-7.48141146 443.86691284]
[5.84328651 451.24069214]
[15.01164341 463.40051270]
[18.43518448 478.23962402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[41 198]
[42 197]
[43 196]
[45 193]
[46 192]
[48 190]
[49 189]
[50 188]
[51 187]
[60 186]
[61 185]
[62 184]
[63 183]
[64 182]
[65 178]
[66 177]
[67 176]
[68 174]
[69 173]
[71 171]
[72 170]
[82 169]
[83 168]
[84 167]
[87 165]
[88 164]
[89 163]
[90 162]
[93 159]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
