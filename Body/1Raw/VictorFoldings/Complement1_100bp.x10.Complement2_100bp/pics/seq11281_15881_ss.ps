%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[111.33314514 688.22515869]
[98.17179108 680.96051025]
[86.34627533 671.67864990]
[76.16291809 660.61993408]
[67.88549805 648.07080078]
[61.72840881 634.35632324]
[57.85113907 619.83178711]
[56.35412216 604.87329102]
[57.27613068 589.86846924]
[60.59328461 575.20581055]
[66.21965790 561.26519775]
[74.00952148 548.40777588]
[83.76109314 536.96649170]
[95.22177887 527.23773193]
[108.09472656 519.47351074]
[122.04650116 513.87487793]
[136.71571350 510.58694458]
[135.82289124 495.61355591]
[134.93006897 480.64013672]
[134.03726196 465.66674805]
[125.55613708 453.42257690]
[132.45831299 439.18634033]
[122.01947784 425.07968140]
[130.39776611 408.68194580]
[129.28210449 393.72348022]
[128.16645813 378.76504517]
[127.05081177 363.80657959]
[125.93516541 348.84811401]
[115.28745270 334.89846802]
[123.42066956 318.37780762]
[122.08243561 303.43762207]
[120.74420166 288.49743652]
[119.40596771 273.55725098]
[117.51267242 258.67721558]
[115.06694794 243.87794495]
[105.35802460 232.58253479]
[110.74169159 217.70549011]
[108.29595947 202.90621948]
[105.85023499 188.10694885]
[96.20240784 180.80995178]
[94.04371643 168.50045776]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[79.01798248 84.79031372]
[70.23817444 75.99353027]
[66.05600739 64.36644745]
[67.20738983 52.13634872]
[73.41272736 41.61842728]
[83.44155884 34.77753448]
[81.65909576 19.88381577]
[79.87663269 4.99009895]
[78.09416199 -9.90361786]
[69.63079834 2.48070478]
[55.54367447 7.63365507]
[41.08693695 3.63330960]
[31.65259361 -8.02830124]
[30.75942230 -23.00168610]
[38.74055099 -35.70214081]
[52.61921692 -41.39271164]
[67.21902466 -37.95095444]
[77.09506226 -26.65949059]
[77.09506226 -41.65948868]
[77.09506226 -56.65948868]
[77.09506226 -71.65949249]
[77.09506226 -86.65949249]
[77.09506226 -101.65949249]
[77.09506226 -116.65949249]
[69.35776520 -130.45965576]
[77.09506226 -143.18693542]
[77.09506226 -158.18693542]
[77.09506226 -173.18693542]
[74.79149628 -176.86763000]
[73.87152100 -180.70405579]
[74.21420288 -184.24212646]
[75.56355286 -187.11369324]
[77.56826782 -189.07310486]
[78.46108246 -204.04650879]
[79.35389709 -219.01991272]
[76.74119568 -225.09324646]
[77.47733307 -230.72840881]
[80.50276947 -234.42378235]
[81.84100342 -249.36396790]
[83.17923737 -264.30413818]
[84.51747131 -279.24432373]
[85.85570526 -294.18450928]
[87.19393921 -309.12469482]
[80.71868134 -323.56015015]
[89.56060028 -335.54635620]
[90.89883423 -350.48654175]
[92.12580872 -365.43627930]
[93.24145508 -380.39474487]
[94.35710907 -395.35321045]
[95.47275543 -410.31164551]
[81.27520752 -415.44314575]
[68.98927307 -424.21572876]
[59.52664948 -435.97845459]
[53.58952713 -449.85839844]
[51.61847687 -464.82562256]
[53.75976944 -479.76940918]
[59.85450363 -493.58090210]
[69.45040894 -505.23513794]
[81.83540344 -513.86730957]
[96.09044647 -518.83685303]
[111.15770721 -519.77502441]
[125.91910553 -516.61212158]
[139.27923584 -509.58297729]
[150.24670410 -499.20907593]
[158.00764465 -486.26031494]
[161.98612976 -471.69757080]
[161.88696289 -456.60144043]
[157.71746826 -442.09219360]
[149.78706360 -429.24655151]
[138.68423462 -419.01766968]
[125.23288727 -412.16464233]
[110.43120575 -409.19601440]
[109.31555939 -394.23754883]
[108.19991302 -379.27908325]
[107.08425903 -364.32064819]
[109.72156525 -357.41656494]
[105.83901978 -349.14831543]
[104.50078583 -334.20812988]
[111.07176208 -320.84133911]
[102.13412476 -307.78646851]
[100.79589081 -292.84628296]
[99.45765686 -277.90609741]
[98.11942291 -262.96591187]
[96.78118134 -248.02574158]
[95.44294739 -233.08555603]
[94.32730103 -218.12709045]
[93.43448639 -203.15368652]
[92.54167175 -188.18028259]
[92.09506226 -173.18693542]
[92.09506226 -158.18693542]
[92.09506226 -143.18693542]
[99.83236694 -130.45965576]
[92.09506226 -116.65949249]
[92.09506226 -101.65949249]
[92.09506226 -86.65949249]
[92.09506226 -71.65949249]
[92.09506226 -56.65948868]
[92.09506226 -41.65948868]
[92.09506226 -26.65949059]
[92.98787689 -11.68608379]
[94.77034760 3.20763302]
[96.55281067 18.10135078]
[98.33528137 32.99506760]
[114.13827515 40.87776947]
[122.11614227 56.80901337]
[118.90572357 74.49440002]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[127.70468903 169.59288025]
[120.64950562 185.66120911]
[123.09523010 200.46047974]
[125.54096222 215.25975037]
[135.42481995 227.61370850]
[129.86622620 241.43222046]
[132.31195068 256.23147583]
[143.03611755 245.74377441]
[157.94017029 247.43760681]
[166.03739929 260.06436157]
[161.35882568 274.31607056]
[147.35331726 279.68688965]
[134.34614563 272.21902466]
[135.68438721 287.15921021]
[137.02262878 302.09939575]
[138.36085510 317.03958130]
[147.74000549 325.89361572]
[148.54704285 338.36489868]
[140.89361572 347.73248291]
[142.00926208 362.69091797]
[143.12492371 377.64938354]
[144.24057007 392.60784912]
[145.35621643 407.56628418]
[154.60249329 416.55902100]
[155.22377014 429.04092407]
[147.43173218 438.29351807]
[155.97671509 451.60867310]
[149.01066589 464.77392578]
[149.90348816 479.74734497]
[150.79629517 494.72073364]
[151.68911743 509.69415283]
[166.64509583 511.21563721]
[181.16329956 515.11663818]
[194.86766052 521.29614258]
[207.40322876 529.59411621]
[218.44528198 539.79553223]
[227.70780945 551.63623047]
[234.95089722 564.80944824]
[239.98692322 578.97399902]
[242.68544006 593.76300049]
[242.97656250 608.79333496]
[240.85273743 623.67572021]
[236.36897278 638.02465820]
[229.64143372 651.46850586]
[220.84434509 663.65893555]
[210.20559692 674.28033447]
[198.00076294 683.05743408]
[184.54595947 689.76300049]
[170.18969727 694.22326660]
[155.30384827 696.32275391]
[140.27400208 696.00701904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 190]
[18 189]
[19 188]
[20 187]
[22 185]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[30 175]
[31 174]
[32 173]
[33 172]
[34 166]
[35 165]
[37 163]
[38 162]
[39 161]
[42 159]
[43 158]
[44 157]
[45 156]
[47 154]
[53 150]
[54 149]
[55 148]
[56 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[73 138]
[74 137]
[75 136]
[80 135]
[81 134]
[82 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[92 125]
[93 124]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
