%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[53.16147614 381.00933838]
[52.96316910 396.03179932]
[50.72107697 410.88732910]
[46.47697449 425.29916382]
[40.30992126 438.99887085]
[32.33481216 451.73114014]
[22.70021439 463.25888062]
[11.58561420 473.36724854]
[-0.80192757 481.86798096]
[-14.23163986 488.60272217]
[-28.45333672 493.44598389]
[-43.20207214 496.30752563]
[-58.20309448 497.13409424]
[-73.17693329 495.91021729]
[-87.84464264 492.65875244]
[-101.93296814 487.44024658]
[-115.17945862 480.35192871]
[-127.33733368 471.52584839]
[-138.18009949 461.12640381]
[-147.50576782 449.34738159]
[-155.14060974 436.40817261]
[-160.94236755 422.54983521]
[-164.80299377 408.03054810]
[-166.65054321 393.12081909]
[-166.45060730 378.09838867]
[-164.20690918 363.24310303]
[-159.96125793 348.83169556]
[-153.79272461 335.13269043]
[-145.81622314 322.40124512]
[-136.18038940 310.87457275]
[-125.06468964 300.76739502]
[-112.67622375 292.26800537]
[-99.24578857 285.53472900]
[-85.02356720 280.69302368]
[-70.27452087 277.83306885]
[-55.27341080 277.00814819]
[-40.29970169 278.23361206]
[-25.63234329 281.48666382]
[-11.54458141 286.70669556]
[-4.46747589 273.48117065]
[2.60962939 260.25564575]
[9.68673515 247.03012085]
[6.48195982 235.36581421]
[12.26977444 224.28948975]
[24.43081284 219.99159241]
[31.70404243 206.87289429]
[38.97727203 193.75421143]
[46.25050354 180.63551331]
[45.65484238 165.75282288]
[59.11318207 157.43515015]
[66.38641357 144.31645203]
[73.65963745 131.19776917]
[80.93286896 118.07907104]
[88.20610046 104.96037292]
[75.85014343 113.46510315]
[61.78501129 118.67778015]
[46.87078857 120.27966309]
[32.01948929 118.17278290]
[18.13927650 112.48598480]
[6.07892847 103.56701660]
[-3.42405987 91.96128082]
[-9.78857708 78.37846375]
[-12.62542915 63.64915848]
[-11.76114273 48.67407990]
[-7.24856949 34.36895370]
[0.63634592 21.60854149]
[11.41143703 11.17314911]
[24.41780472 3.70090580]
[38.86010361 -0.35125896]
[53.85517883 -0.73555350]
[68.48607635 2.57152200]
[81.85811615 9.36773872]
[93.15359497 19.23750496]
[101.68177795 31.57728004]
[106.92117310 45.63248444]
[108.55138397 60.54363632]
[106.47272491 75.39891052]
[100.81229401 89.28992462]
[112.06838989 79.37527466]
[123.17562103 69.29413605]
[134.13153076 59.04874420]
[145.08744812 48.80335236]
[156.04335022 38.55796432]
[166.99926758 28.31257057]
[177.95516968 18.06717873]
[188.91107178 7.82178783]
[190.12229919 -5.01938677]
[199.45841980 -13.32724667]
[211.55192566 -13.05552292]
[222.65914917 -23.13666153]
[233.76638794 -33.21780014]
[244.25389099 -43.94218063]
[254.08447266 -55.27177429]
[263.91503906 -66.60136414]
[273.74563599 -77.93096161]
[263.33544922 -88.74458313]
[253.93652344 -100.44784546]
[245.62451172 -112.94651794]
[238.46635437 -126.13996124]
[232.51966858 -139.92195129]
[227.83233643 -154.18151855]
[224.44212341 -168.80384827]
[222.37628174 -183.67121887]
[221.65148926 -198.66390991]
[222.27355957 -213.66122437]
[224.23748779 -228.54238892]
[227.52745056 -243.18760681]
[232.11697388 -257.47894287]
[237.96910095 -271.30136108]
[245.03671265 -284.54351807]
[253.26290894 -297.09884644]
[262.58142090 -308.86621094]
[272.91729736 -319.75091553]
[284.18722534 -329.66528320]
[296.30053711 -338.52947998]
[309.15963745 -346.27218628]
[322.66107178 -352.83099365]
[336.69604492 -358.15313721]
[351.15161133 -362.19577026]
[365.91137695 -364.92633057]
[380.85647583 -366.32281494]
[395.86657715 -366.37399292]
[410.82086182 -365.07946777]
[425.59890747 -362.44964600]
[440.08169556 -358.50570679]
[454.15267944 -353.27941895]
[467.69848633 -346.81283569]
[480.61013794 -339.15802002]
[492.78359985 -330.37664795]
[504.12091064 -320.53936768]
[514.53076172 -309.72543335]
[523.92932129 -298.02188110]
[532.24096680 -285.52294922]
[539.39868164 -272.32928467]
[545.34497070 -258.54711914]
[550.03186035 -244.28741455]
[553.42163086 -229.66497803]
[555.48699951 -214.79754639]
[556.21136475 -199.80482483]
[555.58880615 -184.80754089]
[553.62445068 -169.92642212]
[550.33404541 -155.28131104]
[545.74407959 -140.99011230]
[539.89154053 -127.16788483]
[532.82348633 -113.92592621]
[524.59692383 -101.37085724]
[515.27807617 -89.60375977]
[504.94186401 -78.71938324]
[493.67163086 -68.80536652]
[481.55804443 -59.94152451]
[468.69869995 -52.19923019]
[455.19708252 -45.64081955]
[441.16192627 -40.31909943]
[426.70623779 -36.27691269]
[411.94641113 -33.54681396]
[397.00125122 -32.15077972]
[381.99114990 -32.10004807]
[367.03689575 -33.39503479]
[352.25894165 -36.02530670]
[337.77627563 -39.96968842]
[323.70544434 -45.19641876]
[310.15982056 -51.66342163]
[297.24844360 -59.31861877]
[285.07522583 -68.10037994]
[275.24462891 -56.77078629]
[265.41406250 -45.44119263]
[255.58348083 -34.11159897]
[270.44186401 -36.16783524]
[283.72515869 -29.19974136]
[290.47900391 -15.80624866]
[288.18438721 -0.98279685]
[277.69714355 9.74183273]
[262.92874146 12.36761761]
[249.38746643 5.91520643]
[242.12384033 -7.20881176]
[243.84751892 -22.11056709]
[232.74029541 -12.02942753]
[221.63305664 -1.94828916]
[217.18472290 15.02755451]
[199.15646362 18.77769661]
[188.20056152 29.02308846]
[177.24464417 39.26848221]
[166.28874207 49.51387024]
[155.33283997 59.75926208]
[144.37692261 70.00465393]
[133.42102051 80.25004578]
[132.36857605 84.90852356]
[128.37854004 88.95532990]
[121.98303986 90.63137054]
[110.72694397 100.54602051]
[101.32479095 112.23360443]
[94.05156708 125.35229492]
[86.77833557 138.47099304]
[79.50510406 151.58969116]
[72.23187256 164.70837402]
[72.30730438 180.52940369]
[59.36919785 187.90873718]
[52.09596634 201.02743530]
[44.82273865 214.14613342]
[37.54950714 227.26483154]
[38.29653931 245.66383362]
[22.91226196 254.10722351]
[15.83515739 267.33276367]
[8.75805187 280.55828857]
[1.68094611 293.78381348]
[13.83977699 302.60858154]
[24.68367004 313.00683594]
[34.01061249 324.78485107]
[41.64684677 337.72323608]
[47.45011902 351.58093262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 205]
[40 204]
[41 203]
[42 202]
[45 200]
[46 199]
[47 198]
[48 197]
[50 195]
[51 194]
[52 193]
[53 192]
[54 191]
[78 190]
[79 189]
[80 186]
[81 185]
[82 184]
[83 183]
[84 182]
[85 181]
[86 180]
[89 178]
[90 177]
[91 176]
[92 167]
[93 166]
[94 165]
[95 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
