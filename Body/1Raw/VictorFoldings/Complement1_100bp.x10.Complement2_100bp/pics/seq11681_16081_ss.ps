%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[165.48847961 570.55883789]
[170.58692932 556.40802002]
[178.13035583 543.39508057]
[187.87626648 531.93829346]
[199.51136780 522.40606689]
[212.66163635 515.10467529]
[207.83564758 500.90222168]
[196.41494751 491.34100342]
[199.30088806 475.78521729]
[194.47488403 461.58276367]
[189.64889526 447.38031006]
[184.82289124 433.17785645]
[181.01087952 430.30078125]
[178.96574402 424.99847412]
[180.07148743 418.48013306]
[175.67048645 404.14028931]
[171.26950073 389.80044556]
[166.86849976 375.46060181]
[152.71485901 375.16390991]
[139.32449341 370.50354004]
[128.01089478 361.92257690]
[119.88822174 350.24948120]
[115.76147461 336.61788940]
[116.04682159 322.35675049]
[120.72959137 308.86059570]
[129.36448669 297.45330811]
[141.11784363 289.25817871]
[136.93083191 274.85440063]
[125.94845581 264.79275513]
[129.52610779 249.38136292]
[125.33910370 234.97758484]
[114.35672760 224.91593933]
[117.93438721 209.50454712]
[113.04875946 203.95906067]
[113.79398346 194.85507202]
[109.82188416 180.39054871]
[107.45508575 178.88841248]
[105.54070282 176.35824585]
[104.47326660 172.96768188]
[104.57941437 169.02391052]
[106.07143402 164.94619751]
[102.96732330 150.27088928]
[99.86321259 135.59558105]
[96.75910187 120.92028046]
[82.72487640 112.23648834]
[79.18950653 96.11604309]
[88.30160522 82.35604095]
[84.97934723 67.72858429]
[81.65708923 53.10112381]
[78.33482361 38.47366333]
[75.01256561 23.84620285]
[64.41091156 12.10245895]
[69.13716125 -2.02240658]
[60.24756241 10.05960464]
[45.43977356 12.45320797]
[33.19636536 3.78723907]
[30.53092575 -10.97404194]
[38.97033310 -23.37470245]
[53.68011475 -26.31108093]
[66.23329926 -18.10186958]
[64.22928619 -32.96739960]
[54.71763229 -45.61014557]
[60.68519592 -59.25703049]
[58.68118286 -74.12255859]
[56.67716980 -88.98808289]
[54.67315292 -103.85361481]
[52.66913986 -118.71913910]
[50.66512680 -133.58467102]
[48.66111374 -148.45019531]
[45.46923065 -152.58044434]
[44.29793549 -157.07281494]
[44.94680786 -161.09700012]
[46.91491699 -164.02255249]
[45.57668304 -178.96273804]
[44.23844910 -193.90292358]
[32.39408875 -204.01968384]
[31.24975967 -219.19021606]
[40.96754074 -230.41966248]
[39.62930679 -245.35984802]
[38.29107285 -260.30001831]
[36.95283890 -275.24020386]
[35.61460495 -290.18038940]
[34.27637100 -305.12057495]
[23.56438637 -309.20318604]
[15.18731689 -316.95336914]
[10.32938290 -327.22335815]
[9.65779400 -338.51306152]
[13.23135185 -349.18923950]
[20.49747849 -357.72161865]
[30.37728119 -362.90237427]
[29.70749664 -377.88739014]
[29.03771210 -392.87243652]
[28.36792755 -407.85748291]
[27.69814110 -422.84252930]
[24.18866348 -431.27587891]
[27.13161850 -438.05529785]
[26.68501282 -453.04864502]
[12.46182346 -458.41235352]
[1.37732852 -468.81439209]
[-4.87816525 -482.66854858]
[-5.35074043 -497.86212158]
[0.03166638 -512.07824707]
[10.44827747 -523.14904785]
[24.31063652 -529.38629150]
[39.50483322 -529.83892822]
[53.71386337 -524.43780518]
[64.77095032 -514.00665283]
[70.98997498 -500.13607788]
[71.42257690 -484.94131470]
[66.00278473 -470.73937988]
[55.55708313 -459.69604492]
[41.67836380 -453.49526978]
[42.12496948 -438.50192261]
[42.68318176 -423.51229858]
[43.35296631 -408.52725220]
[44.02275085 -393.54223633]
[44.69253540 -378.55718994]
[45.36231995 -363.57214355]
[61.52775574 -354.19284058]
[68.83223724 -336.82696533]
[64.15728760 -318.42169189]
[49.21655655 -306.45883179]
[50.55479050 -291.51864624]
[51.89302444 -276.57846069]
[53.23125839 -261.63827515]
[54.56949234 -246.69807434]
[55.90772629 -231.75790405]
[67.46650696 -222.43426514]
[69.03649139 -207.30184937]
[59.17863464 -195.24114990]
[60.51686859 -180.30096436]
[61.85510254 -165.36077881]
[63.52664185 -150.45420837]
[65.53065491 -135.58868408]
[67.53466797 -120.72315216]
[69.53868103 -105.85762787]
[71.54269409 -90.99209595]
[73.54670715 -76.12657166]
[75.55072021 -61.26104355]
[84.91903687 -49.68157959]
[79.09481812 -34.97141266]
[81.09883118 -20.10588264]
[83.76462555 -5.34466600]
[94.12864685 5.35282326]
[89.64002991 20.52394295]
[92.96228790 35.15140152]
[96.28454590 49.77886200]
[99.60680389 64.40632629]
[102.92906189 79.03378296]
[114.38139343 84.46497345]
[120.67839050 95.46503448]
[119.56275177 108.09075928]
[111.43440247 117.81616974]
[114.53851318 132.49147034]
[117.64262390 147.16677856]
[120.74673462 161.84208679]
[124.28640747 176.41845703]
[128.25849915 190.88298035]
[132.33816528 205.31753540]
[143.62002563 216.40943909]
[139.74288940 230.79057312]
[143.92990112 245.19435120]
[155.21176147 256.28625488]
[151.33460999 270.66738892]
[155.52162170 285.07116699]
[171.42443848 286.04089355]
[186.00920105 292.38674927]
[197.51986694 303.32461548]
[204.57736206 317.51873779]
[206.34484863 333.24472046]
[202.62689209 348.59915161]
[193.89086914 361.72991943]
[181.20834351 371.05960083]
[185.60934448 385.39944458]
[190.01034546 399.73928833]
[194.41133118 414.07913208]
[199.02534485 428.35186768]
[203.85134888 442.55432129]
[208.67733765 456.75677490]
[213.50334167 470.95922852]
[225.26922607 481.53631592]
[222.03810120 496.07623291]
[226.86408997 510.27868652]
[241.74032593 508.05664062]
[256.77426147 508.52676392]
[271.48257446 511.67395020]
[285.39251709 517.39703369]
[298.05688477 525.51202393]
[309.06860352 535.75811768]
[318.07369995 547.80584717]
[324.78265381 561.26800537]
[328.97985840 575.71179199]
[330.53033447 590.67291260]
[329.38427734 605.67047119]
[325.57852173 620.22235107]
[319.23541260 633.86065674]
[310.55883789 646.14709473]
[299.82769775 656.68670654]
[287.38702393 665.14062500]
[273.63665771 671.23712158]
[259.01861572 674.78021240]
[244.00288391 675.65600586]
[229.07208252 673.83636475]
[214.70620728 669.37969971]
[201.36706543 662.42938232]
[189.48342896 653.20880127]
[179.43733215 642.01440430]
[171.55169678 629.20593262]
[166.08003235 615.19519043]
[163.19822693 600.43255615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 183]
[7 182]
[9 180]
[10 179]
[11 178]
[12 177]
[15 176]
[16 175]
[17 174]
[18 173]
[27 165]
[28 164]
[30 162]
[31 161]
[33 159]
[35 158]
[36 157]
[41 156]
[42 155]
[43 154]
[44 153]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[53 143]
[60 142]
[61 141]
[63 139]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[73 132]
[74 131]
[75 130]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
