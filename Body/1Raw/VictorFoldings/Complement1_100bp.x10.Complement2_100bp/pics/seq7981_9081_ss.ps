%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[207.65155029 373.73236084]
[218.06626892 362.89352417]
[230.04840088 353.81747437]
[222.97129822 340.59194946]
[215.89419556 327.36642456]
[208.81709290 314.14089966]
[201.73997498 300.91534424]
[186.75213623 304.84356689]
[171.25111389 305.07861328]
[156.13404846 301.60269165]
[142.27685547 294.61291504]
[130.48345947 284.51016235]
[121.43919373 271.87600708]
[115.67090607 257.43930054]
[113.51635742 242.03405762]
[115.10437012 226.55139160]
[120.34718323 211.88783264]
[128.94526672 198.89353943]
[140.40443420 188.32290649]
[133.13121033 175.20420837]
[125.85797119 162.08551025]
[118.58474731 148.96682739]
[111.31151581 135.84812927]
[104.03828430 122.72943115]
[96.76506042 109.61074066]
[90.41305542 104.64842224]
[89.48285675 96.24214172]
[82.40575409 83.01661682]
[75.32864380 69.79108429]
[68.25154114 56.56555939]
[61.17443466 43.34003067]
[45.94422150 46.95040131]
[30.30948257 46.50248337]
[15.33229160 42.03245926]
[2.02856016 33.84954453]
[-8.70086193 22.51459885]
[-16.13119125 8.80167675]
[-19.76266861 -6.35480928]
[-19.35416412 -21.92377853]
[-14.93918991 -36.84761429]
[-6.82322025 -50.11401367]
[4.43742895 -60.82464981]
[-2.83580065 -73.94334412]
[-10.10902977 -87.06204224]
[-17.38225937 -100.18073273]
[-24.65548897 -113.29943085]
[-38.27611923 -107.00015259]
[-52.32023239 -101.71193695]
[-66.71289825 -97.46298218]
[-81.37731934 -94.27596283]
[-96.23526001 -92.16789246]
[-111.20745087 -91.15000916]
[-126.21398926 -91.22774506]
[-141.17483521 -92.40068054]
[-156.01013184 -94.66257477]
[-170.64074707 -98.00134277]
[-184.98863220 -102.39917755]
[-198.97720337 -107.83261108]
[-212.53182983 -114.27265930]
[-225.58021545 -121.68495178]
[-238.05273438 -130.02995300]
[-249.88281250 -139.26312256]
[-261.00735474 -149.33520508]
[-271.36700439 -160.19247437]
[-280.90646362 -171.77697754]
[-289.57489014 -184.02691650]
[-297.32598877 -196.87693787]
[-304.11840820 -210.25846863]
[-309.91589355 -224.10012817]
[-314.68756104 -238.32804871]
[-318.40789795 -252.86631775]
[-321.05709839 -267.63739014]
[-322.62100220 -282.56240845]
[-323.09124756 -297.56179810]
[-322.46536255 -312.55548096]
[-320.74667358 -327.46347046]
[-317.94436646 -342.20626831]
[-314.07336426 -356.70513916]
[-309.15432739 -370.88278198]
[-303.21350098 -384.66354370]
[-296.28262329 -397.97387695]
[-288.39859009 -410.74276733]
[-279.60354614 -422.90209961]
[-269.94436646 -434.38699341]
[-259.47262573 -445.13616943]
[-248.24417114 -455.09228516]
[-236.31892395 -464.20220947]
[-223.76049805 -472.41735840]
[-210.63589478 -479.69384766]
[-197.01516724 -485.99288940]
[-182.97096252 -491.28088379]
[-168.57823181 -495.52960205]
[-153.91375732 -498.71636963]
[-139.05577087 -500.82421875]
[-124.08357239 -501.84185791]
[-109.07703400 -501.76385498]
[-94.11621857 -500.59066772]
[-79.28094482 -498.32855225]
[-64.65038300 -494.98953247]
[-50.30258179 -490.59146118]
[-36.31409836 -485.15780640]
[-22.75956535 -478.71752930]
[-9.71130562 -471.30502319]
[2.76106477 -462.95980835]
[14.59099770 -453.72644043]
[25.71537590 -443.65417480]
[36.07484436 -432.79675293]
[45.61413193 -421.21209717]
[54.28233719 -408.96200562]
[62.03321838 -396.11184692]
[68.82541656 -382.73019409]
[74.62268829 -368.88845825]
[79.39410400 -354.66046143]
[83.11421967 -340.12213135]
[85.76316833 -325.35101318]
[87.32682037 -310.42596436]
[87.79683685 -295.42657471]
[87.17071533 -280.43289185]
[85.45178223 -265.52493286]
[82.64922333 -250.78219604]
[78.77797699 -236.28337097]
[73.85871124 -222.10581970]
[67.91767120 -208.32516479]
[60.98654938 -195.01493835]
[53.10232925 -182.24617004]
[44.30707550 -170.08697510]
[34.64771652 -158.60223389]
[24.17579269 -147.85322571]
[12.94717216 -137.89730835]
[1.02176702 -128.78758240]
[-11.53679466 -120.57265472]
[-4.26356554 -107.45396423]
[3.00966382 -94.33526611]
[10.28289318 -81.21657562]
[17.55612373 -68.09787750]
[31.46460152 -71.82333374]
[45.87006760 -72.10593414]
[59.93240738 -68.92465973]
[72.83044434 -62.46064377]
[83.80986023 -53.08683777]
[92.22734833 -41.34651947]
[97.58825684 -27.92180252]
[99.57571411 -13.59399605]
[98.06930542 0.80185425]
[93.15238190 14.42564011]
[85.10745239 26.48121643]
[74.39996338 36.26292419]
[81.47706604 49.48845291]
[88.55417633 62.71398163]
[95.63127899 75.93950653]
[102.70838165 89.16503906]
[109.88375092 102.33750916]
[117.15698242 115.45620728]
[124.43020630 128.57490540]
[131.70344543 141.69358826]
[138.97666931 154.81228638]
[146.24989319 167.93098450]
[153.52313232 181.04968262]
[167.51841736 177.09303284]
[182.03611755 176.35757446]
[196.34480286 178.87699890]
[209.72434998 184.52108765]
[221.50210571 193.00248718]
[231.08679199 203.89125061]
[237.99815369 216.63670349]
[241.89100647 230.59524536]
[242.57250977 245.06291199]
[240.01167297 259.31079102]
[234.34078979 272.62182617]
[225.84857178 284.32684326]
[214.96551514 293.83825684]
[222.04261780 307.06378174]
[229.11972046 320.28930664]
[236.19682312 333.51483154]
[243.27392578 346.74035645]
[257.47274780 341.80676270]
[272.26852417 339.15518188]
[287.29696655 338.85095215]
[302.18795776 340.90158081]
[316.57479858 345.25650024]
[330.10317993 351.80856323]
[342.43997192 360.39633179]
[353.28137207 370.80838013]
[362.36041260 382.78826904]
[369.45346069 396.04098511]
[374.38589478 410.24020386]
[377.03625488 425.03622437]
[377.33923340 440.06466675]
[375.28741455 454.95550537]
[370.93127441 469.34197998]
[364.37811279 482.86981201]
[355.78930664 495.20590210]
[345.37637329 506.04644775]
[333.39575195 515.12451172]
[320.14242554 522.21643066]
[305.94281006 527.14770508]
[291.14657593 529.79687500]
[276.11810303 530.09857178]
[261.22744751 528.04553223]
[246.84132385 523.68823242]
[233.31402588 517.13391113]
[220.97863770 508.54412842]
[210.13896179 498.13031006]
[201.06192017 486.14889526]
[193.97103882 472.89501953]
[189.04093933 458.69497681]
[186.39303589 443.89852905]
[186.09252930 428.87002563]
[188.14682007 413.97955322]
[192.50532532 399.59378052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[19 158]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[42 135]
[43 134]
[44 133]
[45 132]
[46 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
