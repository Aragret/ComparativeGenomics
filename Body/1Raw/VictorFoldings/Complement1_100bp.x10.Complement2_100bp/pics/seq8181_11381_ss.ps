%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[43.13099289 428.64627075]
[43.05730820 443.68298340]
[40.44329834 458.49090576]
[35.36417770 472.64401245]
[27.96608162 485.73507690]
[18.46186447 497.38748169]
[7.12498522 507.26589966]
[-5.71837234 515.08612061]
[-19.69868088 520.62316895]
[-34.41369629 523.71777344]
[-49.44004059 524.28076172]
[-64.34537506 522.29608154]
[-78.70084381 517.82073975]
[-92.09340668 510.98355103]
[-104.13774109 501.98123169]
[-114.48730469 491.07275391]
[-122.84431458 478.57202148]
[-128.96832275 464.83868408]
[-132.68315125 450.26788330]
[-133.88188171 435.27886963]
[-132.53004456 420.30285645]
[-128.66654968 405.77078247]
[-122.40251923 392.10073853]
[-113.91821289 379.68606567]
[-103.45772552 368.88391113]
[-91.32203674 360.00512695]
[-77.86030579 353.30514526]
[-63.45986176 348.97671509]
[-48.53502274 347.14443970]
[-33.51521683 347.86096191]
[-18.83259201 351.10574341]
[-13.16980457 337.21569824]
[-13.55553722 329.83511353]
[-7.31792116 323.16204834]
[-1.44896019 309.35787964]
[4.42000055 295.55368042]
[10.28896141 281.74951172]
[16.15792274 267.94534302]
[10.36548328 254.27114868]
[16.12079811 240.18815613]
[30.50281334 234.20521545]
[36.37177277 220.40104675]
[42.24073410 206.59686279]
[48.10969543 192.79269409]
[38.19680786 181.64817810]
[34.08877563 167.24562073]
[36.65191269 152.42701721]
[45.43061447 140.14065552]
[58.72725677 132.85461426]
[73.93026733 132.06101990]
[79.79923248 118.25684357]
[67.98367310 127.49765778]
[53.74171066 132.20578003]
[38.74646378 131.82810974]
[24.75956726 126.40899658]
[13.42418575 116.58509064]
[6.07198620 103.51049042]
[3.56670022 88.72119141]
[6.20264530 73.95461273]
[13.67015362 60.94552612]
[25.09194946 51.22222519]
[39.12621307 45.92699432]
[54.12421036 45.68190765]
[68.32398987 50.51576233]
[80.05738831 59.86067963]
[87.94596100 72.61882782]
[91.06297302 87.29139709]
[89.04177094 102.15615845]
[97.91266632 90.06040955]
[106.69326782 77.89894867]
[115.47386932 65.73749542]
[113.15800476 50.33377838]
[122.23602295 38.12541580]
[136.93539429 36.01251221]
[145.71598816 23.85105705]
[154.49659729 11.68960190]
[163.00341797 -0.66490728]
[171.23222351 -13.20630741]
[172.33372498 -28.98912430]
[185.78485107 -35.38572693]
[194.01365662 -47.92712784]
[202.24246216 -60.46852875]
[210.47126770 -73.00992584]
[210.76727295 -78.22140503]
[212.82675171 -82.38214874]
[215.95419312 -84.99638367]
[219.35804749 -85.91622925]
[228.13864136 -98.07769012]
[236.91925049 -110.23914337]
[245.69984436 -122.40059662]
[234.31968689 -132.18659973]
[223.81044006 -142.90245056]
[214.24783325 -154.47096252]
[205.70075989 -166.80876160]
[198.23080444 -179.82696533]
[191.89178467 -193.43177795]
[186.72938538 -207.52516174]
[182.78079224 -222.00556946]
[180.07446289 -236.76869202]
[178.62989807 -251.70812988]
[178.45748901 -266.71627808]
[179.55850220 -281.68496704]
[181.92498779 -296.50634766]
[185.53990173 -311.07363892]
[190.37719727 -325.28189087]
[196.40200806 -339.02874756]
[203.57095337 -352.21508789]
[211.83235168 -364.74597168]
[221.12669373 -376.53109741]
[231.38700867 -387.48553467]
[242.53936768 -397.53036499]
[254.50341797 -406.59323120]
[267.19296265 -414.60879517]
[280.51654053 -421.51934814]
[294.37820435 -427.27505493]
[308.67807007 -431.83447266]
[323.31304932 -435.16476440]
[338.17776489 -437.24188232]
[353.16506958 -438.05090332]
[368.16699219 -437.58599854]
[383.07543945 -435.85049438]
[397.78298950 -432.85690308]
[412.18368530 -428.62680054]
[426.17376709 -423.19067383]
[439.65243530 -416.58767700]
[452.52255249 -408.86538696]
[464.69140625 -400.07943726]
[476.07131958 -390.29312134]
[486.58029175 -379.57699585]
[496.14257812 -368.00823975]
[504.68933105 -355.67022705]
[512.15893555 -342.65182495]
[518.49761963 -329.04687500]
[523.65966797 -314.95333862]
[527.60791016 -300.47283936]
[530.31384277 -285.70965576]
[531.75799561 -270.77017212]
[531.93005371 -255.76202393]
[530.82861328 -240.79336548]
[528.46179199 -225.97203064]
[524.84649658 -211.40483093]
[520.00885010 -197.19670105]
[513.98364258 -183.45002747]
[506.81436157 -170.26383972]
[498.55264282 -157.73316956]
[489.25799561 -145.94828796]
[478.99740601 -134.99411011]
[467.84478760 -124.94956970]
[455.88049316 -115.88702393]
[443.19073486 -107.87177277]
[429.86697388 -100.96157837]
[416.00515747 -95.20622253]
[401.70520020 -90.64717102]
[387.07012939 -87.31727600]
[372.20535278 -85.24053192]
[357.21804810 -84.43190002]
[342.21612549 -84.89720154]
[327.30770874 -86.63308716]
[312.60025024 -89.62705231]
[298.19964600 -93.85752106]
[284.20971680 -99.29402161]
[270.73123169 -105.89736938]
[257.86129761 -113.61999512]
[249.08070374 -101.45854187]
[240.30009460 -89.29708862]
[231.51950073 -77.13562775]
[223.01266479 -64.78112030]
[214.78385925 -52.23971939]
[206.55505371 -39.69831848]
[198.32624817 -27.15691948]
[197.81333923 -12.27114868]
[183.77363586 -4.97749996]
[175.54481506 7.56390047]
[175.89981079 11.07193756]
[174.57328796 14.92620468]
[171.42102051 18.33450890]
[166.65805054 20.47020531]
[157.87744141 32.63166046]
[149.09684753 44.79311752]
[151.71681213 59.41061783]
[142.98527527 71.86914825]
[127.63533020 74.51809692]
[118.85472870 86.67955017]
[110.07411957 98.84101105]
[108.28395844 106.70026398]
[101.07115173 111.11685181]
[93.60340881 124.12580872]
[87.73444366 137.92997742]
[97.71116638 149.42895508]
[101.68972015 164.05967712]
[98.93265533 178.90618896]
[90.03948975 191.03353882]
[76.81732941 198.06802368]
[61.91387177 198.66165161]
[56.04491043 212.46583557]
[50.17594910 226.27000427]
[44.30698776 240.07418823]
[49.97702026 254.58239746]
[43.82841492 268.49819946]
[29.96209908 273.81430054]
[24.09313774 287.61846924]
[18.22417831 301.42263794]
[12.35521698 315.22683716]
[6.48625612 329.03100586]
[0.72022241 342.87847900]
[-4.94256401 356.76852417]
[7.82353544 364.71426392]
[19.06305695 374.70330811]
[28.45261955 386.44827271]
[35.72206116 399.61120605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 206]
[32 205]
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[41 197]
[42 196]
[43 195]
[44 194]
[50 188]
[51 187]
[68 186]
[69 184]
[70 183]
[71 182]
[74 179]
[75 178]
[76 177]
[77 173]
[78 172]
[80 170]
[81 169]
[82 168]
[83 167]
[87 166]
[88 165]
[89 164]
[90 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
