%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[80.81819153 391.19692993]
[76.94532776 405.70834351]
[71.31849670 419.63378906]
[64.02300262 432.76220703]
[55.16942978 444.89456177]
[44.89200974 455.84692383]
[33.34653854 465.45324707]
[20.70804405 473.56793213]
[7.16812325 480.06796265]
[-7.06796169 484.85476685]
[-21.78439713 487.85577393]
[-36.75808334 489.02554321]
[-51.76202393 488.34631348]
[-66.56876373 485.82833862]
[-80.95383453 481.50985718]
[-94.69916534 475.45629883]
[-107.59638214 467.75946045]
[-119.44995880 458.53598022]
[-130.08020020 447.92572021]
[-139.32595825 436.08953857]
[-147.04707336 423.20684814]
[-153.12648010 409.47293091]
[-157.47203064 395.09600830]
[-160.01785278 380.29403687]
[-160.72532654 365.29138184]
[-159.58375549 350.31552124]
[-156.61042786 335.59347534]
[-151.85043335 321.34841919]
[-145.37590027 307.79626465]
[-137.28501892 295.14251709]
[-127.70043182 283.57901001]
[-116.76743317 273.28097534]
[-104.65177155 264.40460205]
[-91.53710938 257.08441162]
[-77.62226105 251.43136597]
[-63.11818695 247.53120422]
[-48.24474716 245.44302368]
[-33.22743225 245.19848633]
[-18.29389191 246.80131531]
[-3.67051983 250.22718811]
[10.42099857 255.42417908]
[17.30041122 242.09475708]
[24.17982292 228.76531982]
[31.05923653 215.43589783]
[37.93864822 202.10646057]
[36.90013885 187.24810791]
[50.10486603 178.53341675]
[56.98427582 165.20399475]
[63.86368942 151.87455750]
[64.13795471 144.48899841]
[70.94604492 138.39901733]
[78.02314758 125.17349243]
[85.10025787 111.94795990]
[81.00118256 98.05034637]
[87.83744049 85.27490997]
[101.67421722 80.97492981]
[108.75132751 67.74940491]
[115.82843018 54.52387619]
[122.90553284 41.29834747]
[129.98263550 28.07282066]
[129.67166138 12.25467110]
[142.49847412 4.68352461]
[149.57557678 -8.54200268]
[149.26460266 -24.36015320]
[162.09141541 -31.93129921]
[149.26882935 -39.72194672]
[136.89082336 -48.20120239]
[124.99433136 -57.34376144]
[113.61486053 -67.12233734]
[102.78636932 -77.50774384]
[92.54117584 -88.46899414]
[82.90985870 -99.97336578]
[73.92116547 -111.98653412]
[65.60190582 -124.47264099]
[57.97692490 -137.39442444]
[51.06896973 -150.71331787]
[44.89866257 -164.38958740]
[39.48440933 -178.38240051]
[34.84237671 -192.64999390]
[30.98641396 -207.14981079]
[27.92803001 -221.83854675]
[25.67635345 -236.67239380]
[24.23810196 -251.60705566]
[23.61756897 -266.59799194]
[23.81660652 -281.60043335]
[24.83461952 -296.56961060]
[26.66857147 -311.46087646]
[29.31298828 -326.22976685]
[32.75997925 -340.83218384]
[36.99925232 -355.22460938]
[42.01816177 -369.36401367]
[47.80172729 -383.20828247]
[54.33268738 -396.71603394]
[61.59155273 -409.84698486]
[69.55665588 -422.56192017]
[78.20423126 -434.82293701]
[87.50846863 -446.59341431]
[97.44159698 -457.83822632]
[107.97397614 -468.52383423]
[119.07417297 -478.61831665]
[130.70906067 -488.09155273]
[142.84390259 -496.91528320]
[155.44250488 -505.06317139]
[168.46726990 -512.51092529]
[181.87930298 -519.23626709]
[195.63858032 -525.21911621]
[209.70405579 -530.44171143]
[224.03375244 -534.88836670]
[238.58488464 -538.54589844]
[253.31404114 -541.40332031]
[268.17724609 -543.45208740]
[283.13018799 -544.68621826]
[298.12817383 -545.10186768]
[313.12649536 -544.69787598]
[328.08038330 -543.47546387]
[342.94519043 -541.43823242]
[357.67657471 -538.59228516]
[372.23056030 -534.94610596]
[386.56369019 -530.51062012]
[400.63323975 -525.29895020]
[414.39718628 -519.32678223]
[427.81445312 -512.61193848]
[440.84500122 -505.17431641]
[453.44995117 -497.03625488]
[465.59167480 -488.22198486]
[477.23391724 -478.75781250]
[488.34197998 -468.67196655]
[498.88269043 -457.99459839]
[508.82458496 -446.75750732]
[518.13800049 -434.99429321]
[526.79510498 -422.74002075]
[534.77008057 -410.03128052]
[542.03918457 -396.90597534]
[548.58068848 -383.40332031]
[554.37500000 -369.56356812]
[559.40496826 -355.42807007]
[563.65545654 -341.03897095]
[567.11376953 -326.43920898]
[569.76971436 -311.67239380]
[571.61529541 -296.78256226]
[572.64495850 -281.81417847]
[572.85565186 -266.81188965]
[572.24682617 -251.82049561]
[570.82019043 -236.88471985]
[568.58007812 -222.04913330]
[565.53314209 -207.35800171]
[561.68847656 -192.85519409]
[557.05755615 -178.58398438]
[551.65417480 -164.58695984]
[545.49456787 -150.90589905]
[538.59698486 -137.58161926]
[530.98205566 -124.65390015]
[522.67254639 -112.16131592]
[513.69317627 -100.14115143]
[504.07083130 -88.62927246]
[493.83419800 -77.66004944]
[483.01379395 -67.26621246]
[471.64193726 -57.47877502]
[459.75256348 -48.32695389]
[447.38116455 -39.83805847]
[434.56466675 -32.03742218]
[421.34127808 -24.94832993]
[407.75051880 -18.59193611]
[393.83288574 -12.98720932]
[379.62997437 -8.15087795]
[365.18414307 -4.09737492]
[350.53851318 -0.83879775]
[335.73678589 1.61512876]
[320.82315063 3.25708103]
[305.84207153 4.08215857]
[290.83831787 4.08789968]
[275.85662842 3.27428651]
[260.94174194 1.64374757]
[246.13813782 -0.79885095]
[231.49000549 -4.04621935]
[217.04109192 -8.08866596]
[202.83447266 -12.91412735]
[188.91258240 -18.50820160]
[175.31694031 -24.85419464]
[176.13412476 -9.98202229]
[162.80110168 -1.46489763]
[155.72399902 11.76062965]
[156.54118347 26.63280106]
[143.20816040 35.14992523]
[136.13105774 48.37545395]
[129.05395508 61.60098267]
[121.97685242 74.82650757]
[114.89974213 88.05204010]
[118.99881744 101.94965363]
[112.16255951 114.72509003]
[98.32578278 119.02507019]
[91.24867249 132.25059509]
[84.17156982 145.47612000]
[77.19311523 158.75396729]
[70.31370544 172.08340454]
[63.43429184 185.41282654]
[63.98073959 201.22459412]
[51.26807785 208.98587036]
[44.38866425 222.31530762]
[37.50925446 235.64472961]
[30.62984085 248.97416687]
[23.75042725 262.30358887]
[36.15001297 270.77883911]
[47.41407394 280.71365356]
[57.37185287 291.95742798]
[65.87239075 304.33969116]
[72.78682709 317.67272949]
[78.01033020 331.75445557]
[81.46372223 346.37133789]
[83.09464264 361.30184937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 202]
[42 201]
[43 200]
[44 199]
[45 198]
[47 196]
[48 195]
[49 194]
[51 193]
[52 192]
[53 191]
[56 188]
[57 187]
[58 186]
[59 185]
[60 184]
[62 182]
[63 181]
[65 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
