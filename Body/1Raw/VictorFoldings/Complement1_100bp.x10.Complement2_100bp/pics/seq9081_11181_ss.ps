%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[135.87962341 978.70574951]
[120.95075989 977.22729492]
[106.09045410 975.17114258]
[91.32104492 972.54028320]
[76.66475677 969.33874512]
[62.14363480 965.57128906]
[47.77951431 961.24359131]
[33.59400558 956.36218262]
[19.60844612 950.93438721]
[5.84386730 944.96838379]
[-7.67902565 938.47314453]
[-20.93989372 931.45843506]
[-33.91879272 923.93481445]
[-46.59619522 915.91357422]
[-58.95304108 907.40679932]
[-70.97073364 898.42730713]
[-82.63121033 888.98858643]
[-93.91693115 879.10473633]
[-104.81090546 868.79077148]
[-115.29676819 858.06213379]
[-125.35872650 846.93499756]
[-134.98167419 835.42608643]
[-144.15110779 823.55261230]
[-152.85325623 811.33258057]
[-161.07501221 798.78430176]
[-168.80403137 785.92669678]
[-176.02867126 772.77899170]
[-182.73806763 759.36108398]
[-188.92214966 745.69305420]
[-194.57157898 731.79559326]
[-199.67790222 717.68945312]
[-204.23339844 703.39599609]
[-208.23123169 688.93658447]
[-211.66539001 674.33300781]
[-214.53071594 659.60729980]
[-216.82287598 644.78155518]
[-218.53845215 629.87811279]
[-219.67485046 614.91931152]
[-220.23036194 599.92773438]
[-220.20413208 584.92584229]
[-219.59623718 569.93627930]
[-218.40756226 554.98156738]
[-216.63992310 540.08416748]
[-214.29594421 525.26654053]
[-211.37916565 510.55090332]
[-207.89398193 495.95947266]
[-203.84564209 481.51412964]
[-199.24020386 467.23663330]
[-194.08462524 453.14846802]
[-188.38664246 439.27078247]
[-182.15484619 425.62448120]
[-175.39859009 412.23010254]
[-168.12803650 399.10775757]
[-160.35412598 386.27722168]
[-152.08854675 373.75775146]
[-143.34375000 361.56817627]
[-134.13287354 349.72689819]
[-124.46976471 338.25164795]
[-114.36897278 327.15972900]
[-103.84568024 316.46780396]
[-92.91571808 306.19198608]
[-81.59552765 296.34768677]
[-69.90213013 286.94973755]
[-57.85312271 278.01229858]
[-45.46662140 269.54876709]
[-32.76126099 261.57189941]
[-19.75614548 254.09367371]
[-6.47084141 247.12535095]
[7.07467127 240.67741394]
[20.86001778 234.75956726]
[34.86446381 229.38069153]
[49.06694794 224.54890442]
[63.44610214 220.27145386]
[77.98030853 216.55476379]
[92.64768982 213.40444946]
[107.42620850 210.82524109]
[105.42219543 195.95971680]
[103.41817474 181.09417725]
[101.41416168 166.22865295]
[99.41014862 151.36312866]
[97.40613556 136.49760437]
[95.40212250 121.63207245]
[93.39810944 106.76654053]
[90.05506134 102.72451019]
[89.21466827 97.09716034]
[91.56256866 91.42933655]
[90.00204468 76.51072693]
[88.44152069 61.59212494]
[79.31050873 48.67178726]
[85.68173981 35.20862579]
[84.12121582 20.29002380]
[69.23770905 17.76340294]
[55.58829498 11.31391239]
[44.18584061 1.42014623]
[35.87648773 -11.18371201]
[31.27684593 -25.56237221]
[30.72824097 -40.64884567]
[34.27138138 -55.32360840]
[41.64334488 -68.49770355]
[52.29708099 -79.19351959]
[65.44200897 -86.61736298]
[80.10269165 -90.21833038]
[95.19120789 -89.72920227]
[109.58789062 -85.18627930]
[122.22441101 -76.92668152]
[132.16305542 -65.56331635]
[138.66630554 -51.93943405]
[141.25157166 -37.06600189]
[139.72703552 -22.04673576]
[134.20579529 -7.99616432]
[125.09758759 4.04306793]
[113.07829285 13.17756939]
[99.03982544 18.72949982]
[100.60034943 33.64810562]
[109.61974335 45.50136566]
[103.36012268 60.03160095]
[104.92064667 74.95020294]
[106.48117065 89.86881256]
[108.26364136 104.76252747]
[110.26765442 119.62805939]
[112.27166748 134.49359131]
[114.27568054 149.35911560]
[116.27969360 164.22463989]
[118.28370667 179.09016418]
[120.28771973 193.95570374]
[122.29173279 208.82122803]
[137.22566223 207.39491272]
[152.20367432 206.54875183]
[167.20323181 206.28401184]
[182.20176697 206.60107422]
[197.17674255 207.49946594]
[212.10560608 208.97785950]
[226.96592712 211.03399658]
[241.73533630 213.66481018]
[256.39163208 216.86633301]
[270.91278076 220.63375854]
[285.27688599 224.96141052]
[299.46240234 229.84277344]
[313.44799805 235.27052307]
[327.21258545 241.23649597]
[340.73550415 247.73168945]
[353.99636841 254.74636841]
[366.97528076 262.26995850]
[379.65270996 270.29116821]
[392.00958252 278.79791260]
[404.02731323 287.77740479]
[415.68780518 297.21612549]
[426.97354126 307.09988403]
[437.86755371 317.41381836]
[448.35342407 328.14242554]
[458.41543579 339.26956177]
[468.03839111 350.77850342]
[477.20785522 362.65188599]
[485.91003418 374.87191772]
[494.13183594 387.42016602]
[501.86087036 400.27780151]
[509.08554077 413.42544556]
[515.79498291 426.84335327]
[521.97906494 440.51135254]
[527.62854004 454.40881348]
[532.73492432 468.51492310]
[537.29040527 482.80841064]
[541.28833008 497.26779175]
[544.72253418 511.87133789]
[547.58789062 526.59704590]
[549.88006592 541.42279053]
[551.59570312 556.32623291]
[552.73211670 571.28503418]
[553.28765869 586.27661133]
[553.26147461 601.27850342]
[552.65362549 616.26806641]
[551.46496582 631.22277832]
[549.69738770 646.12017822]
[547.35339355 660.93786621]
[544.43670654 675.65344238]
[540.95153809 690.24493408]
[536.90319824 704.69024658]
[532.29785156 718.96777344]
[527.14227295 733.05596924]
[521.44433594 746.93365479]
[515.21258545 760.57995605]
[508.45632935 773.97436523]
[501.18582153 787.09674072]
[493.41195679 799.92730713]
[485.14639282 812.44677734]
[476.40164185 824.63635254]
[467.19076538 836.47766113]
[457.52770996 847.95294189]
[447.42694092 859.04486084]
[436.90365601 869.73681641]
[425.97372437 880.01269531]
[414.65356445 889.85699463]
[402.96020508 899.25494385]
[390.91119385 908.19244385]
[378.52471924 916.65600586]
[365.81939697 924.63293457]
[352.81430054 932.11114502]
[339.52899170 939.07952881]
[325.98348999 945.52746582]
[312.19818115 951.44537354]
[298.19372559 956.82427979]
[283.99127197 961.65612793]
[269.61212158 965.93359375]
[255.07792664 969.65032959]
[240.41055298 972.80065918]
[225.63203430 975.37988281]
[210.76463318 977.38415527]
[195.83070374 978.81042480]
[180.85269165 979.65655518]
[165.85313416 979.92126465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[86 118]
[87 117]
[88 116]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
