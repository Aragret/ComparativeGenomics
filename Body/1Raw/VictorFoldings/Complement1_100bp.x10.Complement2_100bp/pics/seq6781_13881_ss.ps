%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[83.62242889 383.72537231]
[78.33354950 369.67971802]
[74.20713043 355.24969482]
[71.27062988 340.53134155]
[69.54359436 325.62261963]
[69.03750610 310.62274170]
[69.75574493 295.63150024]
[71.69352722 280.74871826]
[74.83795929 266.07336426]
[79.16811371 251.70317078]
[84.65517426 237.73374939]
[91.26261902 224.25804138]
[98.94647980 211.36575317]
[107.65562439 199.14268494]
[117.33208466 187.67015076]
[127.91147614 177.02453613]
[139.32339478 167.27665710]
[130.54278564 155.11520386]
[121.76218414 142.95375061]
[112.98158264 130.79229736]
[104.20097351 118.63083649]
[89.91375732 116.21801758]
[81.43197632 104.47043610]
[83.63756561 90.14976501]
[76.07688904 85.02395630]
[74.81835938 77.74124146]
[66.21979523 65.45040131]
[57.62123489 53.15956497]
[49.02267075 40.86872864]
[40.42410660 28.57789040]
[31.82554245 16.28705215]
[23.22697830 3.99621415]
[14.62841415 -8.29462337]
[6.02985001 -20.58546257]
[-2.56871390 -32.87630081]
[-15.37443542 -25.05581284]
[-28.64158440 -18.04658508]
[-42.31883240 -11.87573242]
[-56.35326385 -6.56712818]
[-70.69058228 -2.14131165]
[-85.27531433 1.38459480]
[-100.05104065 3.99695015]
[-114.96059418 5.68564749]
[-129.94628906 6.44415379]
[-144.95016479 6.26953411]
[-159.91415405 5.16246414]
[-174.78036499 3.12722731]
[-189.49128723 0.17169733]
[-203.99002075 -3.69269133]
[-218.22044373 -8.45098782]
[-232.12751770 -14.08478355]
[-245.65745544 -20.57228279]
[-258.75787354 -27.88838387]
[-271.37811279 -36.00478745]
[-283.46936035 -44.89008331]
[-294.98480225 -54.50990677]
[-305.87991333 -64.82703400]
[-316.11254883 -75.80155182]
[-325.64306641 -87.39099884]
[-334.43466187 -99.55053711]
[-342.45330811 -112.23312378]
[-349.66793823 -125.38970184]
[-356.05068970 -138.96936035]
[-361.57684326 -152.91955566]
[-366.22500610 -167.18634033]
[-369.97723389 -181.71449280]
[-372.81900024 -196.44781494]
[-374.73928833 -211.32931519]
[-375.73068237 -226.30142212]
[-375.78933716 -241.30618286]
[-374.91503906 -256.28558350]
[-373.11117554 -271.18164062]
[-370.38470459 -285.93673706]
[-366.74621582 -300.49377441]
[-362.20971680 -314.79647827]
[-356.79281616 -328.78945923]
[-350.51644897 -342.41860962]
[-343.40490723 -355.63119507]
[-335.48568726 -368.37609863]
[-326.78942871 -380.60400391]
[-317.34982300 -392.26760864]
[-307.20330811 -403.32180786]
[-296.38922119 -413.72381592]
[-284.94934082 -423.43338013]
[-272.92794800 -432.41296387]
[-260.37155151 -440.62777710]
[-247.32873535 -448.04611206]
[-233.84994507 -454.63919067]
[-219.98733521 -460.38156128]
[-205.79455566 -465.25097656]
[-191.32649231 -469.22860718]
[-176.63911438 -472.29910278]
[-161.78927612 -474.45050049]
[-146.83439636 -475.67456055]
[-131.83236694 -475.96649170]
[-116.84118652 -475.32516479]
[-101.91888428 -473.75311279]
[-87.12318420 -471.25637817]
[-72.51132202 -467.84460449]
[-58.13983917 -463.53103638]
[-44.06432724 -458.33233643]
[-30.33924675 -452.26861572]
[-17.01769829 -445.36334229]
[-4.15121698 -437.64321899]
[8.21041584 -429.13812256]
[20.01937675 -419.88098145]
[31.22997665 -409.90756226]
[41.79884720 -399.25646973]
[51.68509674 -387.96893311]
[60.85047531 -376.08859253]
[69.25952911 -363.66143799]
[76.87972260 -350.73553467]
[83.68157196 -337.36087036]
[89.63876343 -323.58923340]
[94.72824860 -309.47384644]
[98.93033600 -295.06936646]
[102.22877502 -280.43151855]
[104.61080170 -265.61691284]
[106.06719208 -250.68289185]
[106.59232330 -235.68719482]
[106.18415833 -220.68786621]
[104.84427643 -205.74291992]
[102.57786560 -190.91018677]
[99.39369202 -176.24705505]
[95.30406952 -161.81024170]
[90.32482147 -147.65560913]
[84.47521210 -133.83792114]
[77.77787781 -120.41062927]
[70.25872803 -107.42568207]
[61.94685364 -94.93331146]
[52.87440491 -82.98185730]
[43.07648849 -71.61756134]
[32.59100723 -60.88437653]
[21.45852852 -50.82383728]
[9.72212410 -41.47486496]
[18.32068825 -29.18402481]
[26.91925240 -16.89318848]
[35.51781464 -4.60234976]
[44.11637878 7.68848801]
[52.71494293 19.97932625]
[61.31350708 32.27016449]
[69.91207123 44.56100082]
[78.51063538 56.85184097]
[87.10919952 69.14267731]
[95.79902649 81.36916351]
[110.08624268 83.78198242]
[118.56802368 95.52956390]
[116.36243439 109.85023499]
[125.14303589 122.01168823]
[133.92364502 134.17314148]
[142.70423889 146.33459473]
[151.48484802 158.49606323]
[164.32856750 150.73129272]
[177.76246643 144.03926086]
[191.69712830 138.46449280]
[206.03981018 134.04408264]
[220.69508362 130.80746460]
[235.56541443 128.77615356]
[250.55183411 127.96367645]
[265.55459595 128.37545776]
[280.47390747 130.00872803]
[295.21041870 132.85264587]
[309.66607666 136.88825989]
[323.74472046 142.08874512]
[337.35263062 148.41944885]
[350.39923096 155.83828735]
[362.79769897 164.29585266]
[374.46554565 173.73588562]
[385.32510376 184.09553528]
[395.30413818 195.30589294]
[404.33621216 207.29232788]
[412.36120605 219.97508240]
[419.32571411 233.26974487]
[425.18341064 247.08786011]
[429.89529419 261.33746338]
[433.43005371 275.92370605]
[435.76409912 290.74951172]
[436.88192749 305.71624756]
[436.77609253 320.72430420]
[435.44732666 335.67379761]
[432.90444946 350.46520996]
[429.16436768 365.00018311]
[424.25201416 379.18191528]
[418.20004272 392.91604614]
[411.04873657 406.11117554]
[402.84570312 418.67950439]
[393.64550781 430.53738403]
[383.50939941 441.60589600]
[372.50482178 451.81140137]
[360.70501709 461.08593750]
[348.18850708 469.36782837]
[335.03857422 476.60195923]
[321.34277344 482.74014282]
[307.19219971 487.74157715]
[292.68106079 491.57293701]
[277.90588379 494.20877075]
[262.96505737 495.63150024]
[247.95796204 495.83166504]
[232.98449707 494.80795288]
[218.14428711 492.56716919]
[203.53611755 489.12417603]
[189.25718689 484.50198364]
[175.40252686 478.73126221]
[162.06433105 471.85046387]
[149.33137512 463.90533447]
[137.28839111 454.94882202]
[126.01553345 445.04046631]
[115.58780670 434.24624634]
[106.07461548 422.63796997]
[97.53926849 410.29290771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 152]
[18 151]
[19 150]
[20 149]
[21 148]
[24 145]
[26 144]
[27 143]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
