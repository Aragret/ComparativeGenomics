%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[11.37213135 788.27838135]
[-3.48659205 790.35266113]
[-18.42669487 791.72296143]
[-33.41483688 792.38616943]
[-48.41757965 792.34082031]
[-63.40143967 791.58703613]
[-78.33298492 790.12646484]
[-93.17890167 787.96240234]
[-107.90605927 785.09967041]
[-122.48159027 781.54467773]
[-136.87297058 777.30529785]
[-151.04809570 772.39105225]
[-164.97534180 766.81280518]
[-178.62361145 760.58312988]
[-191.96246338 753.71588135]
[-204.96212769 746.22637939]
[-217.59359741 738.13128662]
[-229.82868958 729.44873047]
[-241.64010620 720.19805908]
[-253.00149536 710.39990234]
[-263.88748169 700.07617188]
[-274.27380371 689.24987793]
[-284.13723755 677.94519043]
[-293.45584106 666.18725586]
[-302.20877075 654.00244141]
[-310.37652588 641.41784668]
[-317.94085693 628.46154785]
[-324.88488770 615.16253662]
[-331.19314575 601.55035400]
[-336.85153198 587.65551758]
[-341.84744263 573.50897217]
[-346.16967773 559.14221191]
[-349.80865479 544.58746338]
[-352.75625610 529.87701416]
[-355.00582886 515.04382324]
[-356.55242920 500.12097168]
[-357.39257812 485.14169312]
[-357.52438354 470.13946533]
[-356.94757080 455.14773560]
[-355.66345215 440.19998169]
[-353.67483521 425.32955933]
[-350.98620605 410.56961060]
[-347.60354614 395.95312500]
[-343.53439331 381.51269531]
[-338.78784180 367.28051758]
[-333.37448120 353.28839111]
[-327.30639648 339.56750488]
[-320.59710693 326.14849854]
[-313.26159668 313.06130981]
[-305.31625366 300.33511353]
[-296.77877808 287.99835205]
[-287.66821289 276.07852173]
[-278.00494385 264.60226440]
[-267.81045532 253.59512329]
[-257.10754395 243.08169556]
[-245.92008972 233.08543396]
[-234.27305603 223.62866211]
[-222.19241333 214.73245239]
[-209.70513916 206.41667175]
[-196.83908081 198.69987488]
[-183.62295532 191.59928894]
[-170.08625793 185.13073730]
[-156.25918579 179.30868530]
[-142.17259216 174.14608765]
[-127.85792542 169.65449524]
[-113.34710693 165.84390259]
[-98.67253113 162.72283936]
[-83.86693573 160.29824829]
[-68.96335602 158.57556152]
[-53.99505234 157.55859375]
[-38.99542618 157.24964905]
[-23.99794197 157.64938354]
[-9.03606796 158.75692749]
[5.85680962 160.56979370]
[20.64745903 163.08395386]
[35.30287552 166.29379272]
[49.79035950 170.19215393]
[64.07758331 174.77030945]
[69.32430267 160.71783447]
[74.57101440 146.66537476]
[79.81773376 132.61289978]
[85.06445312 118.56042480]
[90.31117249 104.50795746]
[93.95925903 89.95833588]
[95.96327209 75.09280396]
[97.96728516 60.22727966]
[99.97129822 45.36174774]
[101.97531128 30.49622154]
[87.50898743 26.43771172]
[73.74831390 20.40530586]
[60.96114349 12.51642513]
[49.39638519 2.92462921]
[39.27915573 -8.18337536]
[30.80638313 -20.59136772]
[24.14299583 -34.05782318]
[19.41869736 -48.32061005]
[16.72544861 -63.10210419]
[16.11567307 -78.11457825]
[17.60124016 -93.06580353]
[21.15323448 -107.66475677]
[26.70251656 -121.62726593]
[34.14106369 -134.68154907]
[43.32408524 -146.57348633]
[54.07283020 -157.07160950]
[66.17807007 -165.97157288]
[79.40417480 -173.10011292]
[93.49369812 -178.31851196]
[108.17237091 -181.52514648]
[123.15447998 -182.65763855]
[138.14839172 -181.69390869]
[152.86224365 -178.65275574]
[167.00962830 -173.59333801]
[180.31515503 -166.61415100]
[192.51985168 -157.85105896]
[203.38610840 -147.47462463]
[212.70245361 -135.68682861]
[220.28750610 -122.71714020]
[225.99365234 -108.81800079]
[229.70979309 -94.25996399]
[231.36361694 -79.32641602]
[230.92291260 -64.30802917]
[228.39627075 -49.49714661]
[223.83285522 -35.18206787]
[217.32151794 -21.64143944]
[208.98899841 -9.13883495]
[198.99748230 2.08238125]
[187.54145813 11.80378342]
[174.84391785 19.83614159]
[161.15203857 26.02310562]
[146.73233032 30.24424171]
[131.86546326 32.41738510]
[116.84084320 32.50023651]
[114.83683014 47.36576462]
[112.83281708 62.23129272]
[110.82880402 77.09681702]
[108.82479095 91.96234894]
[117.92263794 80.03636169]
[130.67608643 72.14018250]
[145.40718079 69.31267548]
[160.17779541 71.92584991]
[173.04461670 79.63591003]
[182.31478882 91.42845154]
[186.76864624 105.75196838]
[185.82022095 120.72195435]
[179.59428406 134.36885071]
[168.90998840 144.89717102]
[155.17300415 150.92173767]
[140.19068909 151.64991760]
[125.93421936 146.98590088]
[114.27927399 137.54331970]
[106.75926971 124.56450653]
[104.36364746 109.75466919]
[99.11692810 123.80714417]
[93.87020874 137.85961914]
[88.62348938 151.91209412]
[83.37677002 165.96455383]
[78.13005066 180.01702881]
[91.92168427 185.92256165]
[105.41903687 192.47280884]
[118.59200287 199.65315247]
[131.41117859 207.44755554]
[143.84797668 215.83866882]
[155.87461853 224.80772400]
[167.46429443 234.33473206]
[178.59112549 244.39842224]
[189.23028564 254.97634888]
[199.35804749 266.04489136]
[208.95179749 277.57937622]
[217.99014282 289.55404663]
[226.45289612 301.94216919]
[234.32118225 314.71615601]
[241.57745361 327.84744263]
[248.20550537 341.30676270]
[254.19056702 355.06405640]
[259.51925659 369.08865356]
[264.17968750 383.34927368]
[268.16149902 397.81402588]
[271.45574951 412.45071411]
[274.05511475 427.22662354]
[275.95379639 442.10879517]
[277.14758301 457.06405640]
[277.63375854 472.05895996]
[277.41125488 487.06011963]
[276.48059082 502.03405762]
[274.84384155 516.94732666]
[272.50463867 531.76666260]
[269.46820068 546.45898438]
[265.74133301 560.99151611]
[261.33230591 575.33184814]
[256.25100708 589.44793701]
[250.50872803 603.30834961]
[244.11831665 616.88208008]
[237.09402466 630.13891602]
[229.45152283 643.04925537]
[221.20785522 655.58422852]
[212.38143921 667.71594238]
[202.99194336 679.41729736]
[193.06034851 690.66223145]
[182.60877991 701.42553711]
[171.66059875 711.68328857]
[160.24020386 721.41259766]
[148.37309265 730.59167480]
[136.08573914 739.20013428]
[123.40557098 747.21868896]
[110.36087799 754.62951660]
[96.98076630 761.41607666]
[83.29508972 767.56311035]
[69.33438873 773.05706787]
[55.12981796 777.88555908]
[40.71307373 782.03784180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 152]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
