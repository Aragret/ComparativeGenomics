%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[162.78182983 568.64355469]
[157.90213013 554.44836426]
[154.33351135 539.86822510]
[152.10552979 525.02398682]
[151.23664856 510.03863525]
[151.73406982 495.03637695]
[153.59367371 480.14151001]
[156.80004883 465.47744751]
[161.32662964 451.16574097]
[167.13591003 437.32495117]
[174.17973328 424.06976318]
[182.39974976 411.51004028]
[191.72782898 399.74984741]
[202.08668518 388.88662720]
[213.39047241 379.01043701]
[225.54553223 370.20306396]
[217.88493347 357.30673218]
[210.22434998 344.41040039]
[202.56375122 331.51406860]
[194.90315247 318.61773682]
[187.24255371 305.72143555]
[179.58195496 292.82510376]
[168.17835999 292.47244263]
[158.25839233 286.59793091]
[152.34544373 276.56146240]
[152.00813293 264.79763794]
[157.44587708 254.22563171]
[150.17265320 241.10693359]
[148.30584717 255.99031067]
[139.32643127 268.00573730]
[125.58160400 274.01235962]
[110.66423035 272.44012451]
[98.47367859 263.69995117]
[92.19651794 250.07655334]
[93.47360229 235.13101196]
[101.97108459 222.77008057]
[115.46775818 216.22486877]
[130.43562317 217.20626831]
[142.96151733 225.45710754]
[137.71479797 211.40463257]
[132.36360168 197.39161682]
[126.90824890 183.41880798]
[121.45289612 169.44601440]
[115.99753571 155.47322083]
[110.23150635 141.62573242]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[82.12706757 78.16336823]
[76.05323029 64.44809723]
[64.34138489 62.40619659]
[55.16339493 55.03969574]
[50.72689056 44.26884079]
[52.02707672 32.81348038]
[58.62600327 23.50647545]
[52.96321869 9.61644936]
[51.84502411 24.57471275]
[47.09043503 38.80123138]
[38.99018860 51.42605209]
[28.03962517 61.67715454]
[14.90837383 68.92768860]
[0.39941525 72.73427582]
[-14.60002232 72.86414337]
[-29.17271805 69.30934906]
[-42.42754364 62.28727341]
[-53.55396652 52.22731781]
[-61.87159348 39.74464798]
[-66.87180328 25.60258675]
[-68.24884033 10.66592693]
[-65.91847992 -4.15194798]
[-60.02323532 -17.94492149]
[-50.92360306 -29.86954498]
[-39.17602539 -39.19662476]
[-25.49887276 -45.35580826]
[-10.72851086 -47.97045898]
[4.23185015 -46.88068390]
[18.46737671 -42.15312958]
[31.10756302 -34.07688522]
[41.37945557 -23.14581871]
[48.65493393 -10.02833939]
[47.98514557 -25.01337814]
[47.31536102 -39.99841690]
[38.96957016 -53.43933487]
[46.13084793 -66.49940491]
[45.46106339 -81.48444366]
[44.79127884 -96.46948242]
[44.00995636 -111.44911957]
[42.78298187 -126.39884949]
[41.22245789 -141.31745911]
[39.66193771 -156.23605347]
[38.10141373 -171.15466309]
[36.54088974 -186.07327271]
[21.78084183 -189.45257568]
[8.91910744 -197.44348145]
[-0.64916795 -209.17918396]
[-5.88608932 -223.38668823]
[-6.22359419 -238.52488708]
[-1.62507367 -252.95167542]
[7.41065979 -265.10217285]
[19.90347862 -273.65835571]
[34.49825287 -277.69210815]
[49.61185074 -276.76589966]
[63.60486603 -270.98022461]
[74.95943451 -260.96261597]
[82.44390106 -247.79972839]
[85.24641418 -232.91937256]
[83.06296539 -217.93568420]
[76.13040161 -204.47393799]
[65.20072174 -193.99440002]
[51.45949554 -187.63378906]
[53.02001572 -172.71519470]
[54.58053970 -157.79658508]
[56.14106369 -142.87797546]
[57.70158768 -127.95937347]
[60.19567871 -125.46701813]
[61.60649109 -121.64279938]
[61.32118225 -117.00901794]
[58.98336411 -112.34193420]
[62.51941681 -105.85208893]
[59.77631760 -97.13926697]
[60.44610214 -82.15422821]
[61.11588669 -67.16918945]
[69.41377258 -54.80009842]
[62.30039978 -40.66820145]
[62.97018433 -25.68316269]
[63.63997269 -10.69812489]
[66.85324860 3.95366240]
[72.51602936 17.84368896]
[89.78610229 23.91496849]
[97.26219940 40.97430420]
[89.76849365 58.37426758]
[95.84233093 72.08953094]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[123.94676971 135.55189514]
[128.16467285 138.62701416]
[130.54338074 142.61387634]
[131.04359436 146.65922546]
[129.97033691 150.01786804]
[135.42568970 163.99066162]
[140.88104248 177.96345520]
[146.33641052 191.93624878]
[152.37257385 198.79209900]
[151.76725769 206.15791321]
[157.01397705 220.21038818]
[163.29135132 233.83370972]
[170.56457520 246.95239258]
[188.96205139 251.47422791]
[198.05610657 267.72879028]
[192.47828674 285.16448975]
[200.13887024 298.06082153]
[207.79946899 310.95715332]
[215.46006775 323.85348511]
[223.12066650 336.74981689]
[230.78126526 349.64614868]
[238.44186401 362.54244995]
[251.99066162 356.08139038]
[266.07086182 350.87915039]
[280.56579590 346.97888184]
[295.35534668 344.41284180]
[310.31695557 343.20236206]
[325.32666016 343.35745239]
[340.26007080 344.87680054]
[354.99343872 347.74783325]
[369.40469360 351.94677734]
[383.37442017 357.43881226]
[396.78680420 364.17843628]
[409.53079224 372.10980225]
[421.50070190 381.16717529]
[432.59738159 391.27554321]
[442.72888184 402.35110474]
[451.81121826 414.30209351]
[459.76916504 427.02947998]
[466.53677368 440.42779541]
[472.05795288 454.38601685]
[476.28695679 468.78848267]
[479.18872070 483.51580811]
[480.73922729 498.44604492]
[480.92562866 513.45538330]
[479.74636841 528.41949463]
[477.21124268 543.21435547]
[473.34121704 557.71740723]
[468.16836548 571.80841064]
[461.73559570 585.37066650]
[454.09616089 598.29174805]
[445.31338501 610.46459961]
[435.46008301 621.78833008]
[424.61785889 632.16918945]
[412.87655640 641.52105713]
[400.33349609 649.76641846]
[387.09259033 656.83703613]
[373.26358032 662.67431641]
[358.96102905 667.22985840]
[344.30349731 670.46588135]
[329.41241455 672.35565186]
[314.41119385 672.88342285]
[299.42413330 672.04486084]
[284.57543945 669.84692383]
[269.98809814 666.30780029]
[255.78306580 661.45678711]
[242.07798767 655.33422852]
[228.98648071 647.99066162]
[216.61698914 639.48706055]
[205.07202148 629.89392090]
[194.44726562 619.29058838]
[184.83074951 607.76507568]
[176.30215454 595.41284180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[27 150]
[28 149]
[39 148]
[40 147]
[41 145]
[42 144]
[43 143]
[44 142]
[45 138]
[46 137]
[47 136]
[49 134]
[50 133]
[51 132]
[56 129]
[57 128]
[81 127]
[82 126]
[83 125]
[85 123]
[86 122]
[87 121]
[88 119]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
