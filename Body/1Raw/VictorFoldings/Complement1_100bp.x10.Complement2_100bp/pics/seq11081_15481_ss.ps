%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[61.16051102 819.71307373]
[46.15970993 819.98333740]
[31.16447830 819.49340820]
[16.21330452 818.24462891]
[1.34457171 816.24017334]
[-13.40355396 813.48522949]
[-27.99321365 809.98681641]
[-42.38695526 805.75390625]
[-56.54783249 800.79742432]
[-70.43949127 795.13012695]
[-84.02627563 788.76641846]
[-97.27330017 781.72277832]
[-110.14656830 774.01715088]
[-122.61302948 765.66943359]
[-134.64068604 756.70104980]
[-146.19866943 747.13494873]
[-157.25729370 736.99572754]
[-167.78817749 726.30938721]
[-177.76429749 715.10339355]
[-187.16003418 703.40655518]
[-195.95127869 691.24877930]
[-204.11544800 678.66131592]
[-211.63160706 665.67657471]
[-218.48043823 652.32775879]
[-224.64437866 638.64923096]
[-230.10760498 624.67602539]
[-234.85607910 610.44403076]
[-238.87762451 595.98980713]
[-242.16189575 581.35046387]
[-244.70050049 566.56359863]
[-246.48689270 551.66705322]
[-247.51649475 536.69921875]
[-247.78666687 521.69842529]
[-247.29670715 506.70318604]
[-246.04789734 491.75201416]
[-244.04341125 476.88327026]
[-241.28840637 462.13516235]
[-237.78994751 447.54550171]
[-233.55703735 433.15176392]
[-228.60052490 418.99090576]
[-222.93313599 405.09927368]
[-216.56942749 391.51251221]
[-209.52571106 378.26550293]
[-201.82009888 365.39224243]
[-193.47235107 352.92581177]
[-184.50390625 340.89816284]
[-174.93777466 329.34024048]
[-164.79852295 318.28161621]
[-154.11216736 307.75076294]
[-142.90615845 297.77468872]
[-131.20924377 288.37896729]
[-119.05146027 279.58776855]
[-106.46401215 271.42361450]
[-93.47921753 263.90750122]
[-80.13039398 257.05871582]
[-66.45182037 250.89480591]
[-52.47861099 245.43162537]
[-38.24662399 240.68318176]
[-23.79240227 236.66168213]
[-9.15304565 233.37744141]
[5.63386631 230.83888245]
[20.53037453 229.05253601]
[35.49824142 228.02296448]
[50.49904633 227.75283813]
[65.49427795 228.24282837]
[80.44544220 229.49169922]
[82.44945526 214.62617493]
[84.45346832 199.76065063]
[86.45748138 184.89511108]
[88.46149445 170.02958679]
[90.46550751 155.16406250]
[92.46952057 140.29852295]
[93.25084686 125.31889343]
[92.80423737 110.32554626]
[92.02291870 95.34590912]
[90.90727234 80.38745117]
[89.79161835 65.42900085]
[88.67597198 50.47054672]
[87.56032562 35.51209259]
[86.44467163 20.55363846]
[77.19839478 11.56091499]
[76.57711792 -0.92098296]
[84.36916351 -10.17358017]
[75.82418060 -23.48875427]
[82.79022217 -36.65399170]
[81.89740753 -51.62739944]
[81.00459290 -66.60080719]
[80.11177063 -81.57421112]
[65.20227814 -83.62193298]
[50.97885513 -88.53929901]
[37.98821640 -96.13729858]
[26.72968674 -106.12387085]
[17.63601303 -118.11517334]
[11.05673122 -131.65028381]
[7.24473381 -146.20895386]
[6.34654284 -161.23159790]
[8.39668179 -176.14076233]
[13.31634903 -190.36338806]
[20.91644669 -203.35279846]
[30.90484619 -214.60971069]
[42.89761734 -223.70143127]
[56.43379593 -230.27853394]
[70.99308777 -234.08816528]
[86.01586151 -234.98393250]
[100.92469788 -232.93138123]
[115.14652252 -228.00941467]
[128.13470459 -220.40721130]
[139.38999939 -210.41699219]
[148.47979736 -198.42274475]
[155.05468750 -184.88549805]
[158.86196899 -170.32559204]
[159.75531006 -155.30267334]
[157.70033264 -140.39418030]
[152.77606201 -126.17314148]
[145.17176819 -113.18619537]
[135.17971802 -101.93251038]
[123.18400574 -92.84465790]
[109.64569855 -86.27195740]
[95.08518219 -82.46702576]
[95.97799683 -67.49362183]
[96.87081146 -52.52021408]
[97.76362610 -37.54681015]
[106.24475098 -25.30263329]
[99.34256744 -11.06639671]
[109.78141022 3.04025030]
[101.40312958 19.43799019]
[102.51877594 34.39644241]
[103.63442230 49.35489655]
[104.75007629 64.31334686]
[105.86572266 79.27180481]
[106.98136902 94.23025513]
[109.51743317 97.13555908]
[110.76057434 101.14460754]
[110.24655151 105.65490723]
[107.79759216 109.87893677]
[108.24419403 124.87228394]
[116.32952118 112.23790741]
[129.31425476 104.72812653]
[144.29756165 104.02063751]
[157.93212891 110.27349854]
[167.17198181 122.08981323]
[169.95289612 136.82977295]
[165.65361023 151.20043945]
[155.23460388 161.99137878]
[141.02349854 166.79185486]
[126.19509888 164.52941895]
[114.06210327 155.70953369]
[107.33505249 142.30255127]
[105.33103943 157.16807556]
[103.32702637 172.03359985]
[101.32301331 186.89912415]
[99.31900024 201.76466370]
[97.31498718 216.63018799]
[95.31096649 231.49571228]
[110.05911255 234.25059509]
[124.64878845 237.74893188]
[139.04255676 241.98171997]
[153.20346069 246.93811035]
[167.09515381 252.60539246]
[180.68196106 258.96899414]
[193.92903137 266.01260376]
[206.80233765 273.71810913]
[219.26884460 282.06576538]
[231.29655457 291.03408813]
[242.85458374 300.60012817]
[253.91326904 310.73928833]
[264.44421387 321.42556763]
[274.42037964 332.63150024]
[283.81619263 344.32833862]
[292.60751343 356.48602295]
[300.77175903 369.07342529]
[308.28796387 382.05816650]
[315.13687134 395.40692139]
[321.30090332 409.08544922]
[326.76419067 423.05862427]
[331.51275635 437.29055786]
[335.53436279 451.74475098]
[338.81872559 466.38406372]
[341.35739136 481.17095947]
[343.14389038 496.06747437]
[344.17355347 511.03530884]
[344.44381714 526.03613281]
[343.95394897 541.03137207]
[342.70520020 555.98254395]
[340.70080566 570.85125732]
[337.94586182 585.59942627]
[334.44750977 600.18908691]
[330.21466064 614.58282471]
[325.25823975 628.74371338]
[319.59091187 642.63537598]
[313.22729492 656.22216797]
[306.18365479 669.46923828]
[298.47808838 682.34252930]
[290.13043213 694.80902100]
[281.16204834 706.83666992]
[271.59597778 718.39471436]
[261.45678711 729.45336914]
[250.77049255 739.98425293]
[239.56452942 749.96038818]
[227.86767578 759.35620117]
[215.70993042 768.14746094]
[203.12252808 776.31164551]
[190.13777161 783.82788086]
[176.78898621 790.67675781]
[163.11045837 796.84069824]
[149.13726807 802.30395508]
[134.90530396 807.05249023]
[120.45111084 811.07403564]
[105.81176758 814.35839844]
[91.02487183 816.89703369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 136]
[74 135]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[83 124]
[85 122]
[86 121]
[87 120]
[88 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
