%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[81.40228271 835.35217285]
[66.42934418 834.33801270]
[51.57598877 832.19439697]
[36.92729187 828.93353271]
[22.56716537 824.57415771]
[8.57786083 819.14123535]
[-4.96048927 812.66583252]
[-17.97033882 805.18511963]
[-30.37716675 796.74194336]
[-42.10990906 787.38458252]
[-53.10135651 777.16668701]
[-63.28855896 766.14672852]
[-72.61315155 754.38793945]
[-81.02173615 741.95764160]
[-88.46614075 728.92694092]
[-94.90372467 715.37060547]
[-100.29761505 701.36621094]
[-104.61692047 686.99395752]
[-107.83689117 672.33624268]
[-109.93908691 657.47692871]
[-110.91146851 642.50122070]
[-110.74846649 627.49487305]
[-109.45101166 612.54382324]
[-107.02653503 597.73370361]
[-103.48892975 583.14941406]
[-98.85845184 568.87438965]
[-93.16162109 554.99047852]
[-86.43108368 541.57714844]
[-78.70538330 528.71124268]
[-70.02877045 516.46649170]
[-60.45095062 504.91302490]
[-50.02677917 494.11700439]
[-38.81596756 484.14028931]
[-26.88273430 475.03997803]
[-14.29542923 466.86825562]
[-1.12615252 459.67190552]
[12.54966164 453.49212646]
[26.65367889 448.36434937]
[41.10511398 444.31796265]
[55.82118607 441.37606812]
[70.71759796 439.55560303]
[85.70903778 438.86691284]
[86.15563965 423.87356567]
[86.60224915 408.88021851]
[86.93722534 393.88397217]
[87.16055298 378.88562012]
[79.61360168 366.04458618]
[87.55550385 352.36111450]
[87.77883148 337.36279297]
[88.00215912 322.36444092]
[88.22548676 307.36611938]
[88.33715820 292.36651611]
[88.33715820 277.36651611]
[88.33715820 262.36651611]
[88.33715820 247.36653137]
[85.65347290 243.41596985]
[85.42301178 237.73759460]
[88.56713104 231.92158508]
[89.01374054 216.92823792]
[89.46034241 201.93489075]
[89.90695190 186.94154358]
[90.35356140 171.94818115]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[84.21115112 56.57798386]
[94.00968933 42.01928711]
[86.47870636 28.10544968]
[94.40464020 15.49478436]
[94.62796783 0.49644712]
[94.85129547 -14.50189018]
[93.62432098 -29.45162392]
[90.95852661 -44.21284103]
[88.29273224 -58.97406006]
[78.22603607 -71.17947388]
[83.57827759 -85.07921600]
[80.91248322 -99.84043121]
[78.24668884 -114.60165405]
[75.58089447 -129.36286926]
[72.91510010 -144.12408447]
[70.24930573 -158.88529968]
[65.64458466 -166.77418518]
[67.65541840 -173.88601685]
[65.20968628 -188.68528748]
[50.18515015 -189.99452209]
[35.95849991 -194.99984741]
[23.42403984 -203.38662720]
[13.36969185 -214.62767029]
[6.42748356 -228.01634216]
[3.03380752 -242.71101379]
[3.40199304 -257.78799438]
[7.50889540 -272.29953003]
[15.09635162 -285.33337402]
[25.68740845 -296.07025146]
[38.61630249 -303.83520508]
[53.07030869 -308.14013672]
[68.14084625 -308.71441650]
[82.88055420 -305.52197266]
[96.36289978 -298.76348877]
[107.74035645 -288.86376953]
[116.29772949 -276.44515991]
[121.49710083 -262.28826904]
[123.01163483 -247.28303528]
[120.74612427 -232.37269592]
[114.84297943 -218.49452209]
[105.67327118 -206.52090454]
[93.81342316 -197.20452881]
[80.00895691 -191.13102722]
[82.45468903 -176.33175659]
[85.01052094 -161.55110168]
[87.67631531 -146.78988647]
[90.34210968 -132.02865601]
[93.00790405 -117.26744843]
[95.67369843 -102.50622559]
[98.33950043 -87.74501038]
[108.21551514 -76.59541321]
[103.05394745 -61.63985443]
[105.71974182 -46.87863541]
[108.38553619 -32.11742020]
[113.84152985 -46.08996964]
[124.45153809 -56.69316101]
[138.42759705 -62.14017487]
[153.41447449 -61.51308823]
[166.88664246 -54.91757584]
[176.57379150 -43.46510315]
[180.84347534 -29.08560944]
[178.97616577 -14.20229244]
[171.28654480 -1.32325101]
[159.07043457 7.38116837]
[144.38648987 10.44411850]
[129.70919800 7.34943914]
[117.51194000 -1.38136292]
[109.84963226 -14.27856255]
[109.62630463 0.71977484]
[109.40297699 15.71811199]
[116.94992828 28.55916977]
[109.00802612 42.24261475]
[117.20545197 51.13805008]
[117.14213562 63.63524246]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[105.34690857 172.39479065]
[104.90029907 187.38813782]
[104.45369720 202.38148499]
[104.00708771 217.37484741]
[103.56048584 232.36819458]
[103.33715820 247.36653137]
[103.33715820 262.36651611]
[103.33715820 277.36651611]
[103.33715820 292.36651611]
[106.46656799 300.94818115]
[103.22382355 307.58944702]
[103.00049591 322.58776855]
[102.77716827 337.58612061]
[102.55384064 352.58444214]
[110.08482361 366.49829102]
[102.15888977 379.10894775]
[101.93556213 394.10729980]
[104.93685913 402.73458862]
[101.59559631 409.32684326]
[101.14899445 424.32019043]
[100.70238495 439.31353760]
[115.62625122 440.89328003]
[130.38789368 443.59719849]
[144.90277100 447.40975952]
[159.08773804 452.30917358]
[172.86154175 458.26733398]
[186.14527893 465.25015259]
[198.86288452 473.21759033]
[210.94148254 482.12405396]
[222.31188965 491.91848755]
[232.90901184 502.54479980]
[242.67210388 513.94213867]
[251.54527283 526.04522705]
[259.47769165 538.78466797]
[266.42388916 552.08758545]
[272.34411621 565.87774658]
[277.20446777 580.07617188]
[280.97705078 594.60144043]
[283.64031982 609.37048340]
[285.17898560 624.29864502]
[285.58425903 639.30041504]
[284.85375977 654.28985596]
[282.99172974 669.18115234]
[280.00881958 683.88897705]
[275.92211914 698.32904053]
[270.75503540 712.41870117]
[264.53713989 726.07727051]
[257.30407715 739.22637939]
[249.09727478 751.79083252]
[239.96372986 763.69866943]
[229.95578003 774.88159180]
[219.13072205 785.27563477]
[207.55058289 794.82116699]
[195.28167725 803.46362305]
[182.39430237 811.15338135]
[168.96224976 817.84649658]
[155.06248474 823.50457764]
[140.77461243 828.09521484]
[126.18046570 831.59210205]
[111.36365509 833.97528076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 171]
[43 170]
[44 169]
[45 167]
[46 166]
[48 164]
[49 163]
[50 162]
[51 161]
[52 159]
[53 158]
[54 157]
[55 156]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[68 145]
[69 144]
[71 141]
[73 139]
[74 138]
[75 137]
[76 123]
[77 122]
[78 121]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
