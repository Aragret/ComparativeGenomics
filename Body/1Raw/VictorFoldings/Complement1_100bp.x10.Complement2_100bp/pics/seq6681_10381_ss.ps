%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[116.09655762 566.35357666]
[104.37991333 575.79376221]
[91.08831024 582.84570312]
[76.70223236 587.25445557]
[61.74173737 588.86071777]
[46.74763489 587.60638428]
[32.26194763 583.53686523]
[18.80832672 576.79913330]
[6.87311268 567.63690186]
[-3.11224461 556.38122559]
[-10.78678036 543.43914795]
[-15.87306595 529.27844238]
[-18.18723488 514.41094971]
[-17.64562988 499.37423706]
[-14.26783180 484.71182251]
[-8.17594528 470.95370483]
[0.40981260 458.59729004]
[11.17907143 448.08920288]
[23.74252892 439.80935669]
[37.64602661 434.05703735]
[52.38695526 431.04016113]
[67.43244934 430.86782837]
[70.09824371 416.10659790]
[72.76403809 401.34539795]
[75.42983246 386.58416748]
[78.09562683 371.82296753]
[80.76142120 357.06173706]
[83.42722321 342.30053711]
[85.76271057 327.48345947]
[87.76672363 312.61791992]
[89.77073669 297.75241089]
[90.99771118 282.80267334]
[91.44431305 267.80932617]
[91.89092255 252.81596375]
[92.33752441 237.82261658]
[77.87870026 227.68289185]
[72.35235596 210.74446106]
[78.15072632 193.73098755]
[93.13081360 183.51556396]
[93.13081360 168.51556396]
[93.13081360 153.51556396]
[93.01914215 138.51597595]
[92.79581451 123.51763916]
[92.57248688 108.51930237]
[82.86664581 119.95594025]
[68.31987762 123.61537933]
[54.35776520 118.13273621]
[46.18783188 105.55290222]
[46.85725784 90.56784821]
[56.11637115 78.76662445]
[70.51174164 74.55079651]
[84.67426300 79.49276733]
[93.32200623 91.75041199]
[94.88253021 76.83181000]
[88.62291718 62.30157089]
[97.64231110 50.44831085]
[99.20283508 35.52970886]
[100.76335907 20.61110306]
[102.32387543 5.69249821]
[90.01975250 14.27203369]
[75.22917938 11.77421284]
[66.42488098 -0.37009966]
[68.65036011 -15.20409012]
[80.63075256 -24.23017502]
[95.50315094 -22.27780342]
[104.74771118 -10.46629524]
[107.63298035 -25.18618584]
[110.51825714 -39.90607834]
[105.57992554 -54.93682861]
[115.62084961 -65.93814850]
[105.22922516 -77.31005859]
[103.54597473 -92.44346619]
[111.00831604 -105.51165009]
[124.57246399 -111.60689545]
[127.45773315 -126.32678986]
[130.34300232 -141.04667664]
[133.22828674 -155.76657104]
[136.11355591 -170.48646545]
[137.45178223 -185.42665100]
[137.22845459 -200.42498779]
[137.00512695 -215.42332458]
[122.08042908 -217.12086487]
[107.49535370 -220.71304321]
[93.48939514 -226.14088440]
[80.29254150 -233.31524658]
[68.12151337 -242.11833191]
[57.17615891 -252.40557861]
[47.63620758 -264.00808716]
[39.65832520 -276.73526001]
[33.37350464 -290.37820435]
[28.88495445 -304.71282959]
[26.26638031 -319.50372314]
[25.56077957 -334.50808716]
[26.77973938 -349.47946167]
[29.90324593 -364.17205811]
[34.88000488 -378.34457397]
[41.62829590 -391.76428223]
[50.03730392 -404.21084595]
[59.96894455 -415.47988892]
[71.26013184 -425.38632202]
[83.72546387 -433.76748657]
[97.16023254 -440.48574829]
[111.34383392 -445.43081665]
[126.04336548 -448.52148438]
[141.01744080 -449.70697021]
[156.02017212 -448.96783447]
[170.80520630 -446.31622314]
[185.12976074 -441.79562378]
[198.75859070 -435.48034668]
[211.46794128 -427.47402954]
[223.04907227 -417.90817261]
[233.31182861 -406.93984985]
[242.08769226 -394.74917603]
[249.23254395 -381.53631592]
[254.62907410 -367.51824951]
[258.18862915 -352.92520142]
[259.85281372 -337.99673462]
[259.59426880 -322.97802734]
[257.41723633 -308.11569214]
[253.35746765 -293.65380859]
[247.48162842 -279.82980347]
[239.88621521 -266.87069702]
[230.69595337 -254.98931885]
[220.06173706 -244.38075256]
[208.15820312 -235.21919250]
[195.18081665 -227.65509033]
[181.34266663 -221.81263733]
[166.87101746 -217.78779602]
[152.00346375 -215.64665222]
[152.22679138 -200.64831543]
[152.45011902 -185.64997864]
[159.87623596 -198.68273926]
[171.67721558 -207.94215393]
[186.10244751 -212.05467224]
[201.01202393 -210.41020203]
[214.19422913 -203.25271606]
[223.69352722 -191.64395142]
[228.10076904 -177.30601501]
[226.76217651 -162.36587524]
[219.87629700 -149.03977966]
[208.46463013 -139.30459595]
[194.22001648 -134.60446167]
[179.25558472 -135.63664246]
[165.79118347 -142.24800110]
[155.82420349 -153.45777893]
[150.83345032 -167.60119629]
[147.94816589 -152.88130188]
[145.06289673 -138.16140747]
[142.17762756 -123.44151306]
[139.29235840 -108.72162628]
[149.55169678 -97.95669556]
[151.52836609 -83.03835297]
[144.25651550 -69.66024780]
[130.34074402 -63.05287933]
[135.48544312 -49.07499313]
[125.23814392 -37.02080536]
[122.35287476 -22.30091476]
[119.46759796 -7.58102274]
[117.24248505 7.25302124]
[115.68196106 22.17162514]
[114.12143707 37.09022903]
[112.56091309 52.00883484]
[118.93215179 65.47199249]
[109.80113220 78.39233398]
[108.24061584 93.31093597]
[107.57082367 108.29597473]
[107.79415131 123.29431152]
[108.01747894 138.29264832]
[111.27431488 146.82675171]
[108.13081360 153.51556396]
[108.13081360 168.51556396]
[108.13081360 183.51556396]
[119.12446594 189.46597290]
[126.50221252 199.46783447]
[128.91333008 211.58666992]
[125.96046448 223.51065063]
[118.26353455 232.99169922]
[107.33087921 238.26922607]
[106.88426971 253.26257324]
[106.43766785 268.25592041]
[105.99105835 283.24926758]
[116.84838104 272.89947510]
[131.80981445 271.82452393]
[144.03520203 280.51589966]
[147.93524170 295.00000000]
[141.72691345 308.65493774]
[128.24856567 315.23779297]
[113.66231537 311.73901367]
[104.63626099 299.75640869]
[102.63224792 314.62194824]
[100.62823486 329.48745728]
[102.61245728 334.31552124]
[102.55233002 338.95767212]
[100.86099243 342.66638184]
[98.18843842 344.96630859]
[95.52264404 359.72753906]
[92.85684967 374.48873901]
[90.19104767 389.24996948]
[87.52525330 404.01119995]
[84.85945892 418.77239990]
[82.19366455 433.53363037]
[96.22847748 438.95770264]
[108.98300171 446.94009399]
[119.99617767 457.19223022]
[128.86987305 469.34353638]
[135.28332520 482.95471191]
[139.00469971 497.53372192]
[139.89944458 512.55358887]
[137.93522644 527.47131348]
[133.18304443 541.74761963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 191]
[30 190]
[31 189]
[32 181]
[33 180]
[34 179]
[35 178]
[39 172]
[40 171]
[41 170]
[42 168]
[43 167]
[44 166]
[53 165]
[54 164]
[56 162]
[57 161]
[58 160]
[59 159]
[66 158]
[67 157]
[68 156]
[70 154]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 131]
[80 130]
[81 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
