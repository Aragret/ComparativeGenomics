%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[112.61189270 364.20880127]
[118.23645020 350.26925659]
[125.97249603 337.38125610]
[135.62951660 325.86221313]
[146.96969604 315.99578857]
[159.71377563 308.02490234]
[153.84481812 294.22073364]
[147.97586060 280.41656494]
[142.10690308 266.61236572]
[136.23794556 252.80819702]
[130.36897278 239.00402832]
[124.50001526 225.19984436]
[120.52610016 239.66386414]
[109.43457794 249.76229858]
[94.66228485 252.36601257]
[80.78657532 246.66824341]
[72.10698700 234.43447876]
[71.31298828 219.45552063]
[78.65060425 206.37272644]
[91.84619141 199.23995972]
[106.81096649 200.26737976]
[118.90807343 209.13684082]
[114.93598175 194.67231750]
[110.96388245 180.20779419]
[106.99179077 165.74327087]
[103.01969147 151.27874756]
[93.44480133 162.82524109]
[78.44539642 162.69113159]
[69.07849121 150.97529602]
[72.24900818 136.31419373]
[85.61976624 129.51545715]
[99.33325958 135.58959961]
[96.44799042 120.86971283]
[85.16244507 115.09995270]
[79.19575500 103.91728210]
[80.68681335 91.33036804]
[89.10112000 81.85128021]
[86.43532562 67.09006500]
[83.76952362 52.32884598]
[81.10372925 37.56763077]
[78.43793488 22.80641174]
[75.77214050 8.04519463]
[73.10634613 -6.71602249]
[70.44055176 -21.47723961]
[67.77474976 -36.23845673]
[65.10895538 -50.99967575]
[62.33334732 -65.74063873]
[56.25951385 -79.45590210]
[47.29881668 -91.48528290]
[38.33811951 -103.51465607]
[33.61826706 -89.27658081]
[19.59725571 -83.94635773]
[6.61085224 -91.45324707]
[4.23215199 -106.26343536]
[14.21464348 -117.45941162]
[29.19814682 -116.78868866]
[21.15697479 -129.45121765]
[13.11580086 -142.11373901]
[5.07462788 -154.77626038]
[-2.96654510 -167.43879700]
[-11.00771809 -180.10131836]
[-19.04889107 -192.76383972]
[-32.63705826 -186.36344910]
[-46.92027283 -181.71662903]
[-61.67327118 -178.89665222]
[-76.66337585 -177.94801331]
[-91.65417480 -178.88566589]
[-106.40924072 -181.69480896]
[-120.69586182 -186.33114624]
[-134.28872681 -192.72157288]
[-146.97343445 -200.76527405]
[-158.54995728 -210.33541870]
[-168.83569336 -221.28105164]
[-177.66842651 -233.42955017]
[-184.90885925 -246.58930969]
[-190.44281006 -260.55279541]
[-194.18296814 -275.09976196]
[-196.07037354 -290.00079346]
[-196.07525635 -305.02087402]
[-194.19752502 -319.92315674]
[-190.46681213 -334.47253418]
[-184.94194031 -348.43960571]
[-177.71005249 -361.60406494]
[-168.88520813 -373.75830078]
[-158.60656738 -384.71060181]
[-147.03627014 -394.28826904]
[-134.35678101 -402.34020996]
[-120.76808167 -408.73947144]
[-106.48447418 -413.38507080]
[-91.73123932 -416.20379639]
[-76.74105072 -417.15118408]
[-61.75033188 -416.21228027]
[-46.99550629 -413.40188599]
[-32.70927429 -408.76434326]
[-19.11695480 -402.37277222]
[-6.43291664 -394.32800293]
[5.14279318 -384.75689697]
[15.42760944 -373.81039429]
[24.25932693 -361.66116333]
[31.49865532 -348.50079346]
[37.03142166 -334.53683472]
[40.77036285 -319.98956299]
[42.65651703 -305.08834839]
[42.66012955 -290.06826782]
[40.78114700 -275.16616821]
[37.04920197 -260.61706543]
[31.52315521 -246.65046692]
[24.29015923 -233.48661804]
[15.46428776 -221.33312988]
[5.18473816 -210.38169861]
[-6.38636589 -200.80500793]
[1.65480697 -188.14248657]
[9.69598007 -175.47996521]
[17.73715210 -162.81744385]
[25.77832603 -150.15490723]
[33.81949997 -137.49238586]
[41.86067200 -124.82986450]
[50.36750031 -112.47535706]
[59.32819366 -100.44597626]
[68.28888702 -88.41660309]
[65.60186005 -103.17396545]
[65.80509186 -118.17259216]
[68.89097595 -132.85173035]
[74.74415588 -146.66261292]
[83.14579773 -159.08888245]
[93.78180695 -169.66600037]
[106.25454712 -177.99851990]
[120.09770966 -183.77491760]
[134.79376221 -186.77925110]
[149.79327393 -186.89920044]
[164.53550720 -184.13027954]
[178.46926880 -178.57598877]
[191.07366943 -170.44400024]
[201.87747192 -160.03833008]
[210.47676086 -147.74800110]
[216.55004883 -134.03250122]
[219.87030029 -119.40457916]
[220.31335449 -104.41112518]
[217.86267090 -89.61267853]
[212.60986328 -75.56247711]
[204.75131226 -62.78581619]
[194.58081055 -51.76034927]
[182.47859192 -42.89827347]
[168.89710999 -36.53090668]
[154.34411621 -32.89629364]
[139.36369324 -32.13032150]
[124.51587677 -34.26162338]
[110.35577393 -39.21052170]
[97.41277313 -46.79199219]
[86.17076111 -56.72260284]
[77.05323792 -68.62590790]
[81.42463684 -62.66666031]
[79.87017822 -53.66547012]
[82.53597260 -38.90425110]
[85.20176697 -24.14303589]
[87.86756134 -9.38181782]
[90.53335571 5.37939930]
[93.19915009 20.14061546]
[95.86494446 34.90183258]
[98.53074646 49.66305161]
[101.19654083 64.42427063]
[103.86233521 79.18548584]
[117.63179016 88.28327942]
[120.68562317 104.50184631]
[111.16788483 117.98443604]
[114.05315399 132.70433044]
[117.48421478 147.30665588]
[121.45631409 161.77117920]
[125.42840576 176.23570251]
[129.40049744 190.70022583]
[133.37260437 205.16474915]
[138.30419922 219.33088684]
[144.17315674 233.13505554]
[150.04211426 246.93923950]
[155.91107178 260.74340820]
[161.78004456 274.54757690]
[167.64900208 288.35177612]
[173.51795959 302.15594482]
[188.10029602 298.50875854]
[203.07365417 297.18777466]
[218.06930542 298.22555542]
[232.71797180 301.59649658]
[246.65890503 307.21759033]
[259.54879761 314.95043945]
[271.07025146 324.60461426]
[280.93948364 335.94235229]
[288.91351318 348.68447876]
[294.79595947 362.51715088]
[298.44192505 377.09979248]
[299.76165771 392.07327271]
[298.72268677 407.06884766]
[295.35052490 421.71722412]
[289.72827148 435.65768433]
[281.99435425 448.54693604]
[272.33923340 460.06759644]
[261.00067139 469.93591309]
[248.25790405 477.90887451]
[234.42472839 483.79016113]
[219.84178162 487.43493652]
[204.86820984 488.75344849]
[189.87272644 487.71322632]
[175.22462463 484.33987427]
[161.28462219 478.71646118]
[148.39599609 470.98147583]
[136.87615967 461.32540894]
[127.00877380 449.98602295]
[119.03684998 437.24261475]
[113.15670013 423.40893555]
[109.51312256 408.82571411]
[108.19585419 393.85202026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 178]
[7 177]
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[32 166]
[33 165]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 151]
[48 120]
[49 119]
[50 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
