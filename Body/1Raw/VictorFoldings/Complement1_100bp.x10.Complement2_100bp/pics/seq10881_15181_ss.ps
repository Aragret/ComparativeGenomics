%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[-24.46155357 786.82073975]
[-38.37199020 792.44549561]
[-52.59666824 797.22009277]
[-67.08367157 801.12707520]
[-81.78015137 804.15228271]
[-96.63246918 806.28460693]
[-111.58643341 807.51623535]
[-126.58748627 807.84277344]
[-141.58088684 807.26293945]
[-156.51191711 805.77886963]
[-171.32611084 803.39599609]
[-185.96939087 800.12304688]
[-200.38833618 795.97192383]
[-214.53034973 790.95770264]
[-228.34379578 785.09881592]
[-241.77828979 778.41656494]
[-254.78482056 770.93536377]
[-267.31591797 762.68249512]
[-279.32583618 753.68804932]
[-290.77078247 743.98492432]
[-301.60897827 733.60839844]
[-311.80087280 722.59643555]
[-321.30929565 710.98919678]
[-330.09954834 698.82904053]
[-338.13955688 686.16033936]
[-345.39993286 673.02923584]
[-351.85427856 659.48376465]
[-357.47894287 645.57330322]
[-362.25347900 631.34863281]
[-366.16043091 616.86157227]
[-369.18554688 602.16510010]
[-371.31781006 587.31274414]
[-372.54937744 572.35882568]
[-372.87582397 557.35772705]
[-372.29592896 542.36437988]
[-370.81179810 527.43334961]
[-368.42886353 512.61914062]
[-365.15582275 497.97589111]
[-361.00460815 483.55694580]
[-355.99038696 469.41497803]
[-350.13143921 455.60153198]
[-343.44912720 442.16708374]
[-335.96783447 429.16058350]
[-327.71490479 416.62954712]
[-318.72042847 404.61965942]
[-309.01721191 393.17474365]
[-298.64065552 382.33660889]
[-287.62866211 372.14474487]
[-276.02136230 362.63638306]
[-263.86117554 353.84619141]
[-251.19239807 345.80624390]
[-238.06130981 338.54589844]
[-224.51580811 332.09164429]
[-210.60531616 326.46704102]
[-196.38059998 321.69256592]
[-181.89355469 317.78567505]
[-167.19705200 314.76062012]
[-152.34471130 312.62844849]
[-137.39073181 311.39694214]
[-122.38967133 311.07055664]
[-107.39627838 311.65054321]
[-92.46526337 313.13473511]
[-77.65110016 315.51773071]
[-63.00784302 318.79083252]
[-48.58893204 322.94210815]
[-34.44697571 327.95642090]
[-20.63357735 333.81542969]
[-13.95338154 320.38507080]
[-7.27318716 306.95468140]
[-0.59299272 293.52432251]
[6.08720207 280.09393311]
[12.76739693 266.66357422]
[19.44759178 253.23318481]
[7.62128973 242.01014709]
[-0.17147781 227.66792297]
[-3.15930152 211.60218811]
[-1.03897703 195.38032532]
[5.99376583 180.58859253]
[17.26227188 168.67698669]
[31.67404556 160.81707764]
[47.82667160 157.78684998]
[64.14427185 159.89363098]
[70.42163086 146.27030945]
[76.69898987 132.64700317]
[82.97635651 119.02368164]
[89.25371552 105.40036774]
[95.32755280 91.68509674]
[101.19651031 77.88092041]
[107.06546783 64.07674408]
[112.93443298 50.27256775]
[111.21347046 34.54523849]
[123.31366730 25.85993195]
[123.79142761 16.73800468]
[129.37414551 11.89495564]
[135.44796753 -1.82031107]
[122.58427429 -9.57456589]
[110.79390717 -18.87996483]
[100.26281738 -29.58974838]
[91.15710449 -41.53500748]
[83.62037659 -54.52734756]
[77.77149200 -68.36186218]
[73.70270538 -82.82036591]
[71.47817993 -97.67481232]
[71.13300323 -112.69094086]
[72.67261505 -127.63191986]
[76.07273865 -142.26210022]
[81.27975464 -156.35076904]
[88.21152496 -169.67568970]
[96.75873566 -182.02674866]
[106.78659058 -193.20912170]
[118.13691711 -203.04644775]
[130.63072205 -211.38360596]
[144.07095337 -218.08908081]
[158.24565125 -223.05711365]
[172.93122864 -226.20938110]
[187.89610291 -227.49613953]
[202.90425110 -226.89710999]
[217.71896362 -224.42173767]
[232.10659790 -220.10905457]
[245.84024048 -214.02708435]
[258.70327759 -206.27174377]
[270.49285889 -196.96534729]
[281.02307129 -186.25468445]
[290.12777710 -174.30865479]
[297.66339111 -161.31567383]
[303.51110840 -147.48066711]
[307.57870483 -133.02183533]
[309.80197144 -118.16719055]
[310.14587402 -103.15103912]
[308.60501099 -88.21018982]
[305.20364380 -73.58028412]
[299.99545288 -59.49206924]
[293.06256104 -46.16772079]
[284.51431274 -33.81739426]
[274.48550415 -22.63586426]
[263.13436890 -12.79948330]
[250.63984680 -4.46338511]
[237.19905090 2.24095798]
[223.02394104 7.20780897]
[208.33808899 10.35883331]
[193.37310791 11.64433575]
[178.36502075 11.04404068]
[163.55050659 8.56741619]
[149.16323853 4.25352287]
[143.08940125 17.96879005]
[137.11784363 31.72889328]
[139.25859070 46.46885300]
[126.73860931 56.14152908]
[120.86964417 69.94570160]
[115.00068665 83.74988556]
[109.13172913 97.55406189]
[109.94163513 102.73652649]
[107.79024506 108.00386810]
[102.87702942 111.67772675]
[96.59967041 125.30104065]
[90.32231140 138.92436218]
[84.04495239 152.54766846]
[77.76758575 166.17098999]
[88.21210480 175.13520813]
[95.96891785 186.48976135]
[100.51326752 199.45480347]
[101.54077911 213.14193726]
[98.98780823 226.61506653]
[93.03536224 238.95451355]
[84.09626770 249.31967163]
[72.78656006 257.00637817]
[59.88301086 261.49468994]
[46.26981735 262.48400879]
[32.87796783 259.91339111]
[26.19777298 273.34375000]
[19.51757812 286.77413940]
[12.83738327 300.20449829]
[6.15718842 313.63488770]
[-0.52300602 327.06524658]
[-7.20320082 340.49563599]
[5.80339146 347.97671509]
[18.33455467 356.22949219]
[30.34456635 365.22381592]
[41.78960037 374.92687988]
[52.62789536 385.30325317]
[62.81990051 396.31512451]
[72.32843018 407.92227173]
[81.11878967 420.08236694]
[89.15890503 432.75100708]
[96.41942596 445.88201904]
[102.87387848 459.42742920]
[108.49869537 473.33782959]
[113.27335358 487.56250000]
[117.18044281 502.04946899]
[120.20569611 516.74591064]
[122.33807373 531.59826660]
[123.56980133 546.55218506]
[123.89638519 561.55328369]
[123.31661987 576.54663086]
[121.83264160 591.47772217]
[119.44984436 606.29187012]
[116.17694092 620.93518066]
[112.02586365 635.35418701]
[107.01175690 649.49621582]
[101.15292358 663.30969238]
[94.47074127 676.74420166]
[86.98959351 689.75073242]
[78.73677063 702.28186035]
[69.74239349 714.29187012]
[60.03928375 725.73681641]
[49.66284180 736.57507324]
[38.65093231 746.76702881]
[27.04373360 756.27551270]
[14.88360500 765.06579590]
[2.21491551 773.10589600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 175]
[68 174]
[69 173]
[70 172]
[71 171]
[72 170]
[73 169]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 151]
[88 150]
[89 149]
[90 148]
[92 146]
[94 145]
[95 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
