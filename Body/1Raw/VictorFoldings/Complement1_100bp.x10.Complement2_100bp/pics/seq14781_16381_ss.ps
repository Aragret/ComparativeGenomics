%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-0.71643651 685.42877197]
[-6.48243237 699.30578613]
[-14.20756912 712.19531250]
[-23.72718620 723.82263184]
[-34.83837128 733.93994141]
[-47.30428696 742.33154297]
[-60.85922241 748.81854248]
[-75.21425629 753.26275635]
[-90.06340790 755.56939697]
[-105.09016418 755.68927002]
[-119.97423553 753.61987305]
[-134.39836121 749.40533447]
[-148.05509949 743.13543701]
[-160.65333557 734.94384766]
[-171.92456055 725.00518799]
[-181.62850952 713.53125000]
[-189.55834961 700.76666260]
[-195.54505920 686.98339844]
[-199.46104431 672.47540283]
[-201.22279358 657.55175781]
[-200.79280090 642.53070068]
[-198.18020630 627.73229980]
[-193.44068909 613.47204590]
[-186.67530823 600.05389404]
[-178.02822876 587.76379395]
[-167.68379211 576.86376953]
[-155.86247253 567.58618164]
[-142.81625366 560.12866211]
[-128.82321167 554.65032959]
[-114.18160248 551.26782227]
[-99.20352936 550.05328369]
[-84.20823669 551.03259277]
[-69.51535797 554.18493652]
[-64.26863861 540.13244629]
[-59.02191925 526.07995605]
[-53.77520370 512.02752686]
[-48.52848434 497.97503662]
[-61.72778702 488.80960083]
[-72.12384033 476.54202271]
[-79.00908661 461.99862671]
[-81.91272736 446.16101074]
[-80.63287354 430.09954834]
[-75.25059509 414.90139771]
[-66.12480164 401.59652710]
[-53.86832809 391.08819580]
[-39.30675125 384.09155273]
[-23.42281723 381.08493042]
[-7.29009581 382.27716064]
[-2.46409798 368.07470703]
[2.36189961 353.87225342]
[-0.86922562 339.33233643]
[10.89665890 328.75524902]
[6.55579948 311.75161743]
[20.50456619 299.73025513]
[25.11857605 285.45751953]
[21.67133141 270.96731567]
[33.27843475 260.21624756]
[37.89244461 245.94349670]
[28.01334572 239.14599609]
[20.21740150 230.01518250]
[15.04002571 219.16671753]
[12.83975601 207.33457947]
[13.77342606 195.32142639]
[17.78501129 183.94416809]
[24.60893250 173.97839355]
[33.78762817 166.10549927]
[44.70222473 160.86616516]
[56.61426926 158.62307739]
[68.71567535 159.53601074]
[74.17102814 145.56321716]
[79.62638855 131.59042358]
[85.08174133 117.61762238]
[90.53710175 103.64482117]
[90.30211639 95.58769226]
[96.17910004 89.50559998]
[101.84188843 75.61557007]
[107.50466919 61.72554398]
[113.06389618 47.79374313]
[118.51925659 33.82094574]
[123.97460938 19.84814835]
[113.07280731 9.29227924]
[107.05917358 -4.59581757]
[106.82151794 -19.68744469]
[112.36492157 -33.68238449]
[122.81569672 -44.45949173]
[136.55895996 -50.39819336]
[151.48809814 -50.62209702]
[156.94345093 -64.59489441]
[162.39880371 -78.56769562]
[167.85417175 -92.54048920]
[170.62977600 -107.28145599]
[170.62977600 -122.28145599]
[167.50036621 -130.86309814]
[170.74310303 -137.50436401]
[170.96643066 -152.50270081]
[162.55931091 -162.28448486]
[163.05409241 -174.77203369]
[171.64054871 -183.29255676]
[172.08715820 -198.28590393]
[172.53375244 -213.27926636]
[158.96179199 -220.26240540]
[149.77059937 -232.44783020]
[146.78509521 -247.41612244]
[150.59805298 -262.19528198]
[160.45242310 -273.85095215]
[174.39160156 -280.06884766]
[189.64794922 -279.61441040]
[203.19232178 -272.57785034]
[212.33544922 -260.35632324]
[215.26199341 -245.37640381]
[211.39085388 -230.61235046]
[201.49066162 -218.99560547]
[187.52711487 -212.83265686]
[187.08050537 -197.83930969]
[186.63389587 -182.84594727]
[195.77258301 -167.86425781]
[185.96476746 -152.27937317]
[185.74143982 -137.28103638]
[185.62977600 -122.28145599]
[185.62977600 -107.28145599]
[192.26794434 -120.73265076]
[201.79255676 -132.32064819]
[213.70397949 -141.43757629]
[227.37733459 -147.60516357]
[242.09538269 -150.49986267]
[257.08599854 -149.96984863]
[271.56286621 -146.04292297]
[284.76651001 -138.92506409]
[296.00430298 -128.98966980]
[304.68673706 -116.75793457]
[310.35833740 -102.87150574]
[312.72161865 -88.05884552]
[311.65255737 -73.09698486]
[307.20727539 -58.77080536]
[299.61895752 -45.83182526]
[289.28564453 -34.95879364]
[276.74942017 -26.72208977]
[262.66793823 -21.55379486]
[247.77981567 -19.72503090]
[232.86611938 -21.33172607]
[218.70915222 -26.28959846]
[206.05158997 -34.33856964]
[195.55740356 -45.05640411]
[187.77709961 -57.88086700]
[183.11880493 -72.13921356]
[181.82696533 -87.08513641]
[176.37161255 -73.11233521]
[170.91624451 -59.13953781]
[165.46089172 -45.16674042]
[176.28894043 -34.88653564]
[182.37266541 -21.20684814]
[182.75653076 -6.19960070]
[177.35092163 7.84913588]
[166.95050049 18.78737259]
[153.11756897 24.92683411]
[137.94740295 25.30350494]
[132.49205017 39.27630234]
[127.03669739 53.24909973]
[127.53227234 60.62312317]
[121.39469910 67.38832855]
[115.73191071 81.27835846]
[110.06912231 95.16838074]
[104.50989532 109.10018158]
[99.05454254 123.07298279]
[93.59918213 137.04577637]
[88.14382935 151.01856995]
[82.68846893 164.99137878]
[96.18988800 177.20841980]
[103.95584869 193.64006042]
[104.82112885 211.75984192]
[98.67931366 228.79281616]
[86.49508667 242.14047241]
[70.15282440 249.77716064]
[52.16517639 250.55751038]
[47.55116653 264.83026123]
[50.66838837 280.34130859]
[39.39130783 290.07153320]
[34.77729797 304.34426880]
[39.94445038 316.16217041]
[35.80759811 327.95498657]
[25.09911346 333.58126831]
[27.98505211 349.13702393]
[16.56435585 358.69824219]
[11.73835754 372.90069580]
[6.91236019 387.10314941]
[18.73314667 394.57244873]
[28.58110046 404.48809814]
[35.96096420 416.34643555]
[40.50271606 429.54629517]
[41.98012543 443.41934204]
[40.32199860 457.26406860]
[35.61563110 470.38113403]
[28.10218430 482.10873413]
[18.16436577 491.85601807]
[6.30691004 499.13284302]
[-6.86904144 503.57440186]
[-20.69642258 504.95956421]
[-34.47601318 503.22174072]
[-39.72273254 517.27423096]
[-44.96944809 531.32672119]
[-50.21616745 545.37915039]
[-55.46288681 559.43164062]
[-42.29932022 566.67999268]
[-30.33145714 575.76776123]
[-19.81439018 586.50134277]
[-10.97229385 598.65185547]
[-3.99363637 611.96032715]
[0.97283131 626.14318848]
[3.82124853 640.89794922]
[4.49090147 655.91027832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 202]
[34 201]
[35 200]
[36 199]
[37 198]
[48 185]
[49 184]
[50 183]
[52 181]
[54 178]
[55 177]
[57 175]
[58 174]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[75 162]
[76 161]
[77 160]
[78 158]
[79 157]
[80 156]
[87 149]
[88 148]
[89 147]
[90 146]
[91 120]
[92 119]
[94 118]
[95 117]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
