%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[97.40486908 383.17633057]
[93.28878784 397.62884521]
[87.11217499 411.32803345]
[79.00669098 423.98184204]
[69.14511108 435.32058716]
[57.73762131 445.10256958]
[45.02738190 453.11926270]
[31.28531265 459.19985962]
[16.80432320 463.21466064]
[1.89307714 465.07815552]
[-13.13058949 464.75061035]
[-27.94644737 462.23901367]
[-42.23869705 457.59686279]
[-55.70269394 450.92312622]
[-68.05146027 442.36007690]
[-79.02176666 432.09020996]
[-88.37979889 420.33245850]
[-95.92607880 407.33740234]
[-101.49975586 393.38201904]
[-104.98203278 378.76382446]
[-106.29868317 363.79440308]
[-105.42163849 348.79278564]
[-102.36959839 334.07873535]
[-97.20761108 319.96591187]
[-90.04570770 306.75512695]
[-81.03654480 294.72793579]
[-70.37216187 284.14074707]
[-58.27985382 275.21920776]
[-45.01737976 268.15347290]
[-30.86742973 263.09414673]
[-16.13160896 260.14907837]
[-1.12401104 259.38104248]
[13.83547401 260.80639648]
[28.42798424 264.39477539]
[34.09077072 250.50476074]
[31.73080635 235.79830933]
[44.10538864 225.94029236]
[49.76817322 212.05027771]
[47.40821075 197.34381104]
[59.78279114 187.48580933]
[65.44557953 173.59577942]
[70.79676819 159.58276367]
[67.78247833 144.99635315]
[79.70452881 134.59562683]
[84.74144745 120.46659851]
[89.77836609 106.33756256]
[94.60436249 92.13510895]
[99.21836853 77.86238098]
[103.83238220 63.58964539]
[93.16255188 74.13264465]
[79.88700104 81.11544800]
[65.15418243 83.93399048]
[50.23864365 82.34442902]
[36.43072510 76.48427582]
[24.92494965 66.86049652]
[16.71668053 54.30564499]
[12.51601601 39.90584183]
[12.68635559 24.90680695]
[17.21296310 10.60611439]
[25.70424271 -1.75908542]
[37.42561340 -11.11907959]
[51.36305618 -16.66413307]
[66.31085205 -17.91454697]
[80.97585297 -14.76214314]
[94.08940125 -7.47964001]
[104.51703644 3.30295539]
[111.35667419 16.65283966]
[114.01660919 31.41511536]
[112.26764679 46.30929947]
[120.68226624 33.89180374]
[129.09687805 21.47430992]
[137.51150513 9.05681419]
[145.45819092 -3.66522241]
[152.92593384 -16.67417526]
[160.39366150 -29.68312645]
[153.83583069 -41.80689240]
[154.12263489 -55.47935486]
[161.07220459 -67.13152313]
[172.77748108 -73.77461243]
[186.12821960 -73.76644135]
[193.78881836 -86.66276550]
[201.44941711 -99.55908966]
[209.11000061 -112.45542145]
[216.77059937 -125.35174561]
[224.43119812 -138.24807739]
[232.09179688 -151.14439392]
[217.83537292 -146.48027039]
[203.52516174 -150.97673035]
[194.49855042 -162.95672607]
[194.12222290 -177.95201111]
[202.53654480 -190.36970520]
[216.60319519 -195.57832336]
[231.07563782 -191.63517761]
[240.55601501 -180.01097107]
[241.50811768 -165.04010010]
[250.64691162 -176.93473816]
[259.78570557 -188.82936096]
[268.92453003 -200.72399902]
[278.06332397 -212.61863708]
[287.20211792 -224.51325989]
[276.39340210 -234.93685913]
[266.81973267 -246.50512695]
[258.60150146 -259.07257080]
[251.84210205 -272.48117065]
[246.62652588 -286.56228638]
[243.02035522 -301.13882446]
[241.06893921 -316.02749634]
[240.79682922 -331.04101562]
[242.20744324 -345.99060059]
[245.28303528 -360.68823242]
[249.98493958 -374.94909668]
[256.25402832 -388.59384155]
[264.01144409 -401.45083618]
[273.15963745 -413.35842896]
[283.58355713 -424.16683960]
[295.15209961 -433.74017334]
[307.71978760 -441.95800781]
[321.12860107 -448.71701050]
[335.20986938 -453.93215942]
[349.78652954 -457.53790283]
[364.67523193 -459.48886108]
[379.68875122 -459.76052856]
[394.63830566 -458.34948730]
[409.33584595 -455.27343750]
[423.59658813 -450.57110596]
[437.24111938 -444.30160522]
[450.09790039 -436.54382324]
[462.00521851 -427.39526367]
[472.81332397 -416.97103882]
[482.38629150 -405.40219116]
[490.60375977 -392.83422852]
[497.36236572 -379.42523193]
[502.57708740 -365.34381104]
[506.18240356 -350.76705933]
[508.13293457 -335.87829590]
[508.40414429 -320.86474609]
[506.99261475 -305.91525269]
[503.91613770 -291.21777344]
[499.21337891 -276.95721436]
[492.94348145 -263.31286621]
[485.18530273 -250.45631409]
[476.03640747 -238.54927063]
[465.61184692 -227.74147034]
[454.04272461 -218.16883850]
[441.47451782 -209.95175171]
[428.06530762 -203.19355774]
[413.98373413 -197.97923279]
[399.40689087 -194.37437439]
[384.51803589 -192.42430115]
[369.50448608 -192.15353394]
[354.55502319 -193.56549072]
[339.85766602 -196.64241028]
[325.59722900 -201.34559631]
[311.95306396 -207.61589050]
[299.09677124 -215.37446594]
[289.95794678 -203.47982788]
[280.81915283 -191.58518982]
[271.68035889 -179.69056702]
[262.54153442 -167.79592896]
[253.40274048 -155.90129089]
[244.98812866 -143.48379517]
[237.32752991 -130.58747864]
[229.66693115 -117.69114685]
[222.00633240 -104.79482269]
[214.34573364 -91.89849091]
[206.68513489 -79.00216675]
[199.02453613 -66.10584259]
[205.99447632 -51.24322128]
[202.69909668 -34.99200058]
[190.24296570 -23.79619598]
[173.40261841 -22.21538544]
[165.93487549 -9.20643330]
[158.46713257 3.80251861]
[173.40730286 2.46398973]
[183.87873840 13.20404625]
[182.16232300 28.10551834]
[169.52330017 36.18359756]
[155.27871704 31.48341942]
[149.92900085 17.47143173]
[141.51437378 29.88892746]
[133.09976196 42.30642319]
[124.68514252 54.72391891]
[118.10511780 68.20365143]
[113.49110413 82.47638702]
[108.87709808 96.74912262]
[110.14613342 101.83866882]
[108.47325134 107.27693939]
[103.90739441 111.37448120]
[98.87047577 125.50350952]
[93.83356476 139.63253784]
[96.48757935 155.22955322]
[84.92579651 164.61967468]
[85.86795044 169.75381470]
[84.84846497 174.28305054]
[82.42626190 177.56146240]
[79.33560181 179.25857544]
[73.67282104 193.14860535]
[75.62774658 208.84855652]
[63.65820312 217.71305847]
[57.99541473 231.60308838]
[59.95034027 247.30305481]
[47.98079681 256.16754150]
[42.31801224 270.05758667]
[55.25992966 277.69464111]
[66.95191193 287.13473511]
[77.14473724 298.17666626]
[85.62114716 310.58505249]
[92.20046997 324.09542847]
[96.74245453 338.41983032]
[99.15030670 353.25289917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 203]
[35 202]
[37 200]
[38 199]
[40 197]
[41 196]
[42 192]
[44 190]
[45 189]
[46 188]
[47 185]
[48 184]
[49 183]
[69 182]
[70 181]
[71 180]
[72 179]
[73 173]
[74 172]
[75 171]
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
[95 160]
[96 159]
[97 158]
[98 157]
[99 156]
[100 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
