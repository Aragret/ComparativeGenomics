%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[54.31036758 532.90899658]
[45.50283051 545.06762695]
[35.49180222 556.25616455]
[24.38339996 566.35601807]
[12.29538155 575.26019287]
[-0.64411414 582.87420654]
[-14.29792023 589.11743164]
[-28.52129936 593.92358398]
[-43.16347504 597.24182129]
[-58.06923294 599.03692627]
[-73.08056641 599.28985596]
[-88.03833771 597.99798584]
[-102.78399658 595.17492676]
[-117.16122437 590.85064697]
[-131.01762390 585.07098389]
[-144.20628357 577.89721680]
[-156.58743286 569.40539551]
[-168.02980042 559.68548584]
[-178.41209412 548.84063721]
[-187.62426758 536.98565674]
[-195.56864929 524.24633789]
[-202.16104126 510.75762939]
[-207.33154297 496.66259766]
[-211.02534485 482.11062622]
[-213.20330811 467.25598145]
[-213.84234619 452.25613403]
[-212.93566895 437.27008057]
[-210.49288940 422.45666504]
[-206.53990173 407.97296143]
[-201.11862183 393.97247314]
[-194.28649902 380.60360718]
[-186.11598206 368.00811768]
[-176.69366455 356.31948853]
[-166.11944580 345.66165161]
[-154.50538635 336.14755249]
[-141.97463989 327.87808228]
[-128.66000366 320.94085693]
[-114.70265198 315.40948486]
[-100.25052643 311.34252930]
[-85.45682526 308.78314209]
[-70.47837067 307.75845337]
[-55.47394943 308.27932739]
[-40.60261154 310.34020996]
[-26.02199936 313.91931152]
[-11.88667870 318.97860718]
[-5.40718269 305.45028687]
[1.07231307 291.92193604]
[-1.21722794 274.52294922]
[14.06121731 264.24429321]
[20.33857727 250.62097168]
[26.61593819 236.99765015]
[32.89329910 223.37434387]
[39.17065811 209.75102234]
[39.11487198 202.36058044]
[45.64423370 195.97268677]
[52.12372971 182.44433594]
[58.60322571 168.91598511]
[65.08272552 155.38764954]
[71.56221771 141.85929871]
[70.08177948 127.03845215]
[83.02118683 117.93447113]
[89.50067902 104.40612793]
[76.02011871 110.98445892]
[61.11095810 109.33613586]
[49.39296722 99.97190857]
[44.49708939 85.79338837]
[47.94037247 71.19394684]
[58.65586853 60.69736862]
[73.32327271 57.55614090]
[87.39772797 62.74360657]
[96.51810455 74.65237427]
[97.85831451 89.59262848]
[98.15431213 84.38115692]
[100.21379852 80.22040558]
[103.34123230 77.60617065]
[106.74508667 76.68632507]
[115.52568817 64.52487183]
[124.30628967 52.36341095]
[133.08689880 40.20195770]
[141.86749268 28.04050064]
[150.64810181 15.87904549]
[146.98509216 2.91768074]
[151.39157104 -9.60403728]
[162.04748535 -17.18912697]
[174.93258667 -17.25090981]
[183.89328003 -29.28028679]
[192.85397339 -41.30966568]
[193.45964050 -46.49428177]
[195.76312256 -50.52506638]
[199.04061890 -52.94852066]
[202.49317932 -53.66413498]
[211.98208618 -65.28140259]
[221.47097778 -76.89866638]
[230.95988464 -88.51593018]
[220.23236084 -99.01480865]
[210.48915100 -110.43304443]
[201.80868530 -122.67868805]
[194.26087952 -135.65315247]
[187.90649414 -149.25198364]
[182.79667664 -163.36566162]
[178.97259521 -177.88056946]
[176.46502686 -192.67984009]
[175.29415894 -207.64431763]
[175.46943665 -222.65348816]
[176.98942566 -237.58654785]
[179.84188843 -252.32322693]
[184.00387573 -266.74487305]
[189.44186401 -280.73538208]
[196.11206055 -294.18212891]
[203.96078491 -306.97680664]
[212.92483521 -319.01641846]
[222.93202209 -330.20401001]
[233.90177917 -340.44952393]
[245.74578857 -349.67047119]
[258.36868286 -357.79257202]
[271.66882324 -364.75048828]
[285.53912354 -370.48815918]
[299.86791992 -374.95938110]
[314.53982544 -378.12817383]
[329.43673706 -379.96902466]
[344.43865967 -380.46710205]
[359.42486572 -379.61837769]
[374.27465820 -377.42971802]
[388.86846924 -373.91873169]
[403.08877563 -369.11370850]
[416.82113647 -363.05328369]
[429.95495605 -355.78631592]
[442.38449097 -347.37124634]
[454.00967407 -337.87591553]
[464.73687744 -327.37670898]
[474.47973633 -315.95816040]
[483.15982056 -303.71224976]
[490.70721436 -290.73754883]
[497.06118774 -277.13854980]
[502.17056274 -263.02468872]
[505.99420166 -248.50967407]
[508.50134277 -233.71032715]
[509.67175293 -218.74581909]
[509.49600220 -203.73664856]
[507.97558594 -188.80364990]
[505.12265015 -174.06704712]
[500.96023560 -159.64552307]
[495.52182007 -145.65518188]
[488.85119629 -132.20864868]
[481.00207520 -119.41420746]
[472.03768921 -107.37487793]
[462.03015137 -96.18757629]
[451.06005859 -85.94239807]
[439.21578979 -76.72181702]
[426.59265137 -68.60008240]
[413.29229736 -61.64258957]
[399.42181396 -55.90534592]
[385.09286499 -51.43455505]
[370.42086792 -48.26621246]
[355.52389526 -46.42582321]
[340.52194214 -45.92820740]
[325.53579712 -46.77737427]
[310.68606567 -48.96648788]
[296.09237671 -52.47791672]
[281.87219238 -57.28339005]
[268.14001465 -63.34421921]
[255.00642395 -70.61160278]
[242.57714844 -79.02703094]
[233.08824158 -67.40976715]
[223.59934998 -55.79250336]
[214.11044312 -44.17523956]
[204.88334656 -32.34896851]
[195.92265320 -20.31959152]
[186.96195984 -8.29021358]
[190.10362244 8.23155022]
[180.12751770 22.18834877]
[162.80955505 24.65964890]
[154.02896118 36.82110596]
[145.24835205 48.98255920]
[136.46774292 61.14401627]
[127.68714142 73.30547333]
[118.90653992 85.46692657]
[110.39971161 97.82143402]
[103.02902222 110.88562012]
[96.54953003 124.41397095]
[97.56651306 140.20245361]
[85.09056091 148.33879089]
[78.61106873 161.86714172]
[72.13157654 175.39549255]
[65.65207672 188.92382812]
[59.17258072 202.45217896]
[52.79397583 216.02838135]
[46.51661682 229.65170288]
[40.23925400 243.27502441]
[33.96189499 256.89834595]
[27.68453407 270.52163696]
[31.41073418 282.86987305]
[25.90184212 294.08752441]
[14.60065842 298.40142822]
[8.12116241 311.92977905]
[1.64166689 325.45812988]
[14.44391155 333.30072021]
[26.37190437 342.41812134]
[37.29920197 352.71368408]
[47.10996628 364.07821655]
[55.70019913 376.39129639]
[62.97883987 389.52239990]
[68.86873627 403.33227539]
[73.30744171 417.67459106]
[76.24790192 432.39727783]
[77.65896606 447.34429932]
[77.52565002 462.35714722]
[75.84938812 477.27676392]
[72.64794159 491.94491577]
[67.95524597 506.20614624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 196]
[46 195]
[47 194]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[55 186]
[56 185]
[57 184]
[58 183]
[59 182]
[61 180]
[62 179]
[72 178]
[76 177]
[77 176]
[78 175]
[79 174]
[80 173]
[81 172]
[85 169]
[86 168]
[87 167]
[91 166]
[92 165]
[93 164]
[94 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
