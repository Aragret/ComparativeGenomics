%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[221.52357483 823.35888672]
[208.85488892 815.31884766]
[196.69476318 806.52856445]
[185.08757019 797.02008057]
[174.07565308 786.82812500]
[163.69921875 775.98986816]
[153.99610901 764.54486084]
[145.00172424 752.53491211]
[136.74890137 740.00378418]
[129.26776123 726.99725342]
[122.58557129 713.56268311]
[116.72673798 699.74920654]
[111.71263885 685.60717773]
[107.56155396 671.18823242]
[104.28865051 656.54492188]
[101.90586090 641.73071289]
[100.42187500 626.79968262]
[99.84211731 611.80627441]
[100.16869354 596.80523682]
[101.40042114 581.85125732]
[103.53279877 566.99896240]
[106.55805206 552.30249023]
[110.46514130 537.81549072]
[115.23979950 523.59088135]
[120.86462402 509.68045044]
[127.31906891 496.13504028]
[134.57958984 483.00402832]
[142.61970520 470.33538818]
[151.41006470 458.17529297]
[160.91859436 446.56814575]
[171.11061096 435.55627441]
[181.94889832 425.17990112]
[193.39393616 415.47683716]
[205.40394592 406.48251343]
[217.93510437 398.22973633]
[230.94169617 390.74865723]
[224.26150513 377.31829834]
[217.58131409 363.88790894]
[204.98561096 355.93820190]
[205.76741028 340.13632202]
[199.08721924 326.70596313]
[192.40701294 313.27557373]
[185.72682190 299.84521484]
[172.16053772 303.24523926]
[158.17698669 303.73651123]
[144.39309692 301.29470825]
[131.41754150 296.02493286]
[119.82389069 288.15734863]
[110.12516785 278.03686523]
[102.75126648 266.10824585]
[98.02978516 252.89645386]
[96.17155457 238.98358154]
[97.26118469 224.98318481]
[101.25323486 211.51322937]
[107.97408295 199.16883850]
[117.12948608 188.49598694]
[128.31745911 179.96731567]
[122.04010010 166.34399414]
[115.76274109 152.72067261]
[109.48538208 139.09736633]
[103.20802307 125.47404480]
[96.93065643 111.85073090]
[96.11980438 126.82879639]
[90.77885437 140.84571838]
[81.41687012 152.56550598]
[68.92617798 160.87107849]
[54.49731827 164.97082520]
[39.50554657 164.47398376]
[25.37979317 159.42788696]
[13.46642780 150.31352234]
[4.90095949 137.99958801]
[0.49979398 123.65979767]
[0.68242192 108.66091156]
[5.43143654 94.43252563]
[14.29419231 82.33081055]
[26.42594719 73.50921631]
[40.67037964 68.80856323]
[55.66979980 68.67688751]
[69.99456024 73.12673950]
[82.27931976 81.73399353]
[91.35370636 93.67924500]
[81.46984863 81.32530212]
[87.02845001 67.50679016]
[84.47261810 52.72613907]
[81.80681610 37.96492386]
[79.14102173 23.20370483]
[76.47522736 8.44248772]
[73.80943298 -6.31872988]
[58.77217102 -7.56095648]
[44.56912994 -12.65369892]
[32.16869736 -21.24972725]
[22.41635513 -32.76294708]
[15.97703457 -46.40837097]
[13.28978062 -61.25563049]
[14.53781319 -76.29241180]
[19.63603973 -90.49348450]
[28.23685455 -102.89059448]
[39.75384140 -112.63849640]
[53.40174866 -119.07254028]
[68.25004578 -121.75406647]
[83.28634644 -120.50022888]
[97.48545074 -115.39651489]
[109.87923431 -106.79091644]
[119.62268829 -95.27016449]
[126.05146790 -81.61977386]
[128.72724915 -66.77044678]
[127.46761322 -51.73463440]
[122.35842133 -37.53749847]
[113.74803162 -25.14703369]
[102.22352600 -15.40803432]
[88.57064819 -8.98452473]
[91.23644257 5.77669191]
[93.90224457 20.53790855]
[96.56803894 35.29912567]
[99.23383331 50.06034470]
[103.51602173 56.08401489]
[101.82772064 65.06106567]
[111.53664398 76.35646820]
[106.15297699 91.23352051]
[110.55397797 105.57337189]
[116.83133698 119.19668579]
[123.10869598 132.82000732]
[129.38606262 146.44331360]
[135.66342163 160.06663513]
[141.94078064 173.68994141]
[157.70071411 170.54219055]
[173.74836731 171.23945618]
[189.15971375 175.73759460]
[203.04832458 183.77366638]
[214.61637878 194.88143921]
[223.20042419 208.41827393]
[228.30949402 223.60246277]
[229.65316772 239.55824280]
[227.15805054 255.36636353]
[220.97181702 270.11706543]
[211.45442200 282.96243286]
[199.15719604 293.16500854]
[205.83740234 306.59539795]
[212.51759338 320.02575684]
[219.19778442 333.45614624]
[232.27130127 342.36645508]
[231.01168823 357.20770264]
[237.69187927 370.63809204]
[244.37207031 384.06845093]
[258.18548584 378.20944214]
[272.32742310 373.19512939]
[286.74633789 369.04385376]
[301.38958740 365.77075195]
[316.20376587 363.38775635]
[331.13476562 361.90356445]
[346.12817383 361.32357788]
[361.12921143 361.64996338]
[376.08319092 362.88146973]
[390.93554688 365.01364136]
[405.63204956 368.03869629]
[420.11907959 371.94558716]
[434.34381104 376.72006226]
[448.25430298 382.34466553]
[461.79980469 388.79895020]
[474.93090820 396.05926514]
[487.59967041 404.09921265]
[499.75985718 412.88940430]
[511.36715698 422.39776611]
[522.37915039 432.58963013]
[532.75567627 443.42776489]
[542.45892334 454.87268066]
[551.45343018 466.88256836]
[559.70635986 479.41360474]
[567.18762207 492.42010498]
[573.86993408 505.85455322]
[579.72888184 519.66796875]
[584.74310303 533.80999756]
[588.89434814 548.22888184]
[592.16735840 562.87219238]
[594.55029297 577.68634033]
[596.03442383 592.61737061]
[596.61431885 607.61077881]
[596.28790283 622.61181641]
[595.05627441 637.56579590]
[592.92407227 652.41815186]
[589.89892578 667.11462402]
[585.99200439 681.60162354]
[581.21746826 695.82635498]
[575.59277344 709.73681641]
[569.13842773 723.28228760]
[561.87805176 736.41333008]
[553.83807373 749.08209229]
[545.04779053 761.24224854]
[535.53936768 772.84948730]
[525.34747314 783.86145020]
[514.50927734 794.23791504]
[503.06433105 803.94110107]
[491.05441284 812.93554688]
[478.52331543 821.18841553]
[465.51678467 828.66961670]
[452.08230591 835.35186768]
[438.26882935 841.21075439]
[424.12683105 846.22491455]
[409.70788574 850.37603760]
[395.06460571 853.64904785]
[380.25042725 856.03192139]
[365.31939697 857.51593018]
[350.32598877 858.09576416]
[335.32492065 857.76928711]
[320.37097168 856.53759766]
[305.51864624 854.40533447]
[290.82217407 851.38012695]
[276.33517456 847.47308350]
[262.11050415 842.69848633]
[248.20005798 837.07373047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 144]
[37 143]
[38 142]
[40 140]
[41 139]
[42 138]
[43 137]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[81 119]
[83 117]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
