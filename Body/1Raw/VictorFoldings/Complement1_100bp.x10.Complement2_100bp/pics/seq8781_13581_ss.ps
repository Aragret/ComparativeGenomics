%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[48.12886047 754.51116943]
[33.36458588 757.19543457]
[18.44774437 758.83154297]
[3.45265269 759.41131592]
[-11.54598331 758.93188477]
[-26.47344208 757.39569092]
[-41.25535202 754.81036377]
[-55.81807327 751.18872070]
[-70.08905792 746.54888916]
[-83.99719238 740.91394043]
[-97.47320557 734.31201172]
[-110.44995117 726.77587891]
[-122.86277771 718.34313965]
[-134.64984131 709.05584717]
[-145.75242615 698.96026611]
[-156.11521912 688.10662842]
[-165.68658447 676.54901123]
[-174.41885376 664.34509277]
[-182.26850891 651.55554199]
[-189.19644165 638.24420166]
[-195.16815186 624.47729492]
[-200.15386963 610.32342529]
[-204.12876892 595.85314941]
[-207.07304382 581.13848877]
[-208.97203064 566.25286865]
[-209.81625366 551.27032471]
[-209.60151672 536.26556396]
[-208.32888794 521.31335449]
[-206.00471497 506.48809814]
[-202.64057922 491.86376953]
[-198.25321960 477.51315308]
[-192.86451721 463.50778198]
[-186.50129700 449.91738892]
[-179.19528198 436.80972290]
[-170.98284912 424.25006104]
[-161.90493774 412.30099487]
[-152.00674438 401.02203369]
[-141.33761597 390.46939087]
[-129.95066833 380.69561768]
[-117.90266418 371.74942017]
[-105.25361633 363.67535400]
[-92.06652832 356.51367188]
[-78.40711212 350.30004883]
[-64.34342194 345.06539917]
[-49.94551086 340.83584595]
[-35.28511810 337.63244629]
[-20.43527603 335.47116089]
[-5.46997070 334.36276245]
[9.53624153 334.31274414]
[24.50860214 335.32141113]
[39.37251663 337.38369751]
[42.47662354 322.70837402]
[45.58073425 308.03308105]
[40.64471054 293.98013306]
[51.07034302 282.07986450]
[49.37907410 274.88531494]
[54.33145905 267.20993042]
[57.65371704 252.58247375]
[60.97597885 237.95500183]
[51.04169083 226.88938904]
[49.51008224 211.91880798]
[57.17701721 198.76315308]
[71.28334808 192.57302856]
[74.60561371 177.94557190]
[77.92787170 163.31811523]
[73.20162201 149.19323730]
[83.80327606 137.44949341]
[87.12553406 122.82204437]
[90.44779205 108.19458008]
[93.44256592 93.49657440]
[96.10836029 78.73535919]
[98.77416229 63.97414017]
[101.43995667 49.21292496]
[103.00048065 34.29431915]
[103.44708252 19.30097008]
[90.90584564 27.53002548]
[76.60591888 23.00099945]
[71.08867645 9.05252075]
[78.42122650 -4.03310966]
[93.19828033 -6.60965347]
[104.52608490 3.22070837]
[106.08660889 -11.69789600]
[107.64713287 -26.61650085]
[109.20765686 -41.53510666]
[101.70674896 -52.02792358]
[103.31364441 -64.42153168]
[112.62601471 -72.14204407]
[114.40848541 -87.03575897]
[116.19094849 -101.92947388]
[117.97341919 -116.82319641]
[119.75588226 -131.71690369]
[121.53834534 -146.61062622]
[123.32081604 -161.50434875]
[121.47094727 -165.43269348]
[121.01337433 -169.35125732]
[121.77406311 -172.82354736]
[123.45508575 -175.51441956]
[125.67842865 -177.22172546]
[128.34422302 -191.98294067]
[131.01002502 -206.74415588]
[117.35714722 -213.16766357]
[105.83264160 -222.90666199]
[97.22225189 -235.29713440]
[92.11306000 -249.49426270]
[90.85341644 -264.53009033]
[93.52920532 -279.37939453]
[99.95798492 -293.02978516]
[109.70143127 -304.55053711]
[122.09522247 -313.15615845]
[136.29432678 -318.25985718]
[151.33062744 -319.51370239]
[166.17892456 -316.83218384]
[179.82682800 -310.39813232]
[191.34381104 -300.65023804]
[199.94462585 -288.25311279]
[205.04286194 -274.05203247]
[206.29089355 -259.01525879]
[203.60363770 -244.16799927]
[197.16432190 -230.52258301]
[187.41197205 -219.00935364]
[175.01155090 -210.41333008]
[160.80850220 -205.32058716]
[145.77124023 -204.07835388]
[143.10543823 -189.31713867]
[140.43965149 -174.55592346]
[138.21453857 -159.72187805]
[136.43206787 -144.82815552]
[134.64959717 -129.93444824]
[132.86712646 -115.04072571]
[131.08467102 -100.14701080]
[129.30220032 -85.25329590]
[127.51973724 -70.35957336]
[135.28536987 -54.62230301]
[124.12625885 -39.97458267]
[122.56574249 -25.05597878]
[121.00521851 -10.13737297]
[119.44469452 4.78123140]
[118.44042969 19.74757576]
[117.99382782 34.74092484]
[127.19985962 22.89825249]
[141.05630493 17.15378571]
[155.94113159 19.00911713]
[167.96345520 27.97926521]
[173.98069763 41.71945572]
[172.41993713 56.63803864]
[163.68917847 68.83532715]
[150.07061768 75.12298584]
[135.12409973 73.85742950]
[122.75661469 65.36946869]
[116.20117188 51.87871933]
[113.53537750 66.63993835]
[110.86958313 81.40115356]
[108.20378113 96.16236877]
[109.93149567 99.61018372]
[110.13108063 103.80279541]
[108.50396729 108.04066467]
[105.07525635 111.51683807]
[101.75299072 126.14430237]
[98.43073273 140.77175903]
[102.91935730 155.94288635]
[92.55532837 166.64036560]
[89.23307037 181.26782227]
[85.91081238 195.89529419]
[95.95924377 207.57154846]
[97.19116974 222.74836731]
[89.34304810 235.58857727]
[75.60343933 241.27726746]
[72.28118134 255.90472412]
[68.95891571 270.53219604]
[65.74564362 285.18395996]
[70.45964050 300.28659058]
[60.25603867 311.13717651]
[57.15192795 325.81250000]
[54.04781723 340.48779297]
[68.47371674 344.62088013]
[82.57213593 349.76126099]
[96.27283478 355.88333130]
[109.50756073 362.95657349]
[122.21038055 370.94580078]
[134.31799316 379.81112671]
[145.77009583 389.50848389]
[156.50964355 399.98947144]
[166.48309326 411.20193481]
[175.64079285 423.08996582]
[183.93710327 435.59436035]
[191.33070374 448.65283203]
[197.78474426 462.20031738]
[203.26707458 476.16931152]
[207.75039673 490.49023438]
[211.21235657 505.09173584]
[213.63571167 519.90106201]
[215.00839233 534.84442139]
[215.32354736 549.84741211]
[214.57963562 564.83526611]
[212.78033447 579.73333740]
[209.93461609 594.46734619]
[206.05667114 608.96386719]
[201.16580200 623.15081787]
[195.28637695 636.95733643]
[188.44770813 650.31481934]
[180.68383789 663.15655518]
[172.03344727 675.41870117]
[162.53965759 687.04010010]
[152.24975586 697.96289062]
[141.21499634 708.13256836]
[129.49035645 717.49859619]
[117.13425446 726.01416016]
[104.20824432 733.63702393]
[90.77672577 740.32904053]
[76.90661621 746.05694580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 174]
[52 173]
[53 172]
[55 170]
[57 169]
[58 168]
[59 167]
[63 163]
[64 162]
[65 161]
[67 159]
[68 158]
[69 157]
[70 153]
[71 152]
[72 151]
[73 150]
[74 139]
[75 138]
[81 137]
[82 136]
[83 135]
[84 134]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[98 125]
[99 124]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
