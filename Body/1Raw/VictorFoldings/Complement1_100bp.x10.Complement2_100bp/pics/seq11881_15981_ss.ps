%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[92.59229279 425.01745605]
[88.55970764 410.29666138]
[91.32202148 395.28561401]
[100.33078003 382.96469116]
[113.79727173 375.78024292]
[113.12748718 360.79519653]
[112.45770264 345.81015015]
[111.78791809 330.82513428]
[103.49003601 318.45602417]
[110.60340881 304.32412720]
[109.93362427 289.33911133]
[108.59539032 274.39892578]
[106.59137726 259.53338623]
[104.58735657 244.66786194]
[102.02016449 242.25086975]
[100.49612427 238.47033691]
[100.64333344 233.83012390]
[102.84116364 229.09550476]
[101.50292969 214.15531921]
[92.66101074 202.16908264]
[99.13626862 187.73365784]
[95.40855408 181.35195923]
[97.89102173 172.56134033]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[78.23187256 50.91520691]
[73.53807831 38.49833679]
[76.80443573 25.83291054]
[86.62148285 17.48694992]
[85.72866821 2.51354384]
[84.83585358 -12.45986176]
[76.29086304 -25.77503586]
[83.25691223 -38.94027328]
[82.36408997 -53.91368103]
[76.51499939 -40.10107422]
[68.11702728 -27.67231369]
[57.48414612 -17.09205627]
[45.01387405 -8.75585270]
[31.17241669 -2.97535872]
[16.47725296 0.03331842]
[1.47776842 0.15769675]
[-13.26526928 -2.60687351]
[-27.20067978 -8.15703678]
[-39.80747986 -16.28529739]
[-50.61435318 -26.68777275]
[-59.21727753 -38.97555923]
[-65.29462433 -52.68927002]
[-68.61919403 -67.31620789]
[-69.06668854 -82.30952454]
[-66.62037659 -97.10870361]
[-61.37172318 -111.16045380]
[-53.51694489 -123.93943787]
[-43.34970474 -134.96791077]
[-31.25010872 -143.83355713]
[-17.67050934 -150.20494080]
[-3.11859250 -153.84385681]
[11.86161041 -154.61425781]
[26.71005249 -152.48735046]
[40.87161636 -147.54263306]
[53.81685638 -139.96498108]
[65.06180573 -130.03770447]
[74.18607330 -118.13191223]
[80.84853363 -104.69272614]
[84.80010223 -90.22257996]
[85.89319611 -75.26855469]
[91.55598450 -89.15857697]
[85.67057800 -103.58077240]
[91.61131287 -117.58657074]
[105.39694214 -123.10852814]
[111.05973053 -136.99855042]
[116.72251892 -150.88858032]
[122.38530731 -164.77861023]
[116.49989319 -179.20080566]
[122.44063568 -193.20660400]
[136.22627258 -198.72856140]
[141.88905334 -212.61857605]
[137.61518860 -224.78808594]
[142.61769104 -236.24053955]
[153.71498108 -241.05477905]
[159.58393860 -254.85894775]
[165.45289612 -268.66314697]
[171.32186890 -282.46731567]
[158.15928650 -289.68710327]
[145.78099060 -298.18157959]
[134.30999756 -307.86636353]
[123.86030579 -318.64517212]
[114.53578186 -330.41085815]
[106.42910004 -343.04653931]
[99.62082672 -356.42660522]
[94.17862701 -370.41806030]
[90.15658569 -384.88186646]
[87.59468842 -399.67428589]
[86.51838684 -414.64828491]
[86.93837738 -429.65499878]
[88.85049438 -444.54534912]
[92.23572540 -459.17132568]
[97.06043243 -473.38754272]
[103.27665710 -487.05270386]
[110.82262421 -500.03103638]
[119.62332916 -512.19354248]
[129.59130859 -523.41931152]
[140.62750244 -533.59680176]
[152.62220764 -542.62481689]
[165.45623779 -550.41369629]
[179.00201416 -556.88598633]
[193.12490845 -561.97741699]
[207.68457031 -565.63726807]
[222.53630066 -567.82928467]
[237.53247070 -568.53161621]
[252.52406311 -567.73730469]
[267.36206055 -565.45422363]
[281.89901733 -561.70513916]
[295.99041748 -556.52716064]
[309.49621582 -549.97192383]
[322.28222656 -542.10449219]
[334.22134399 -533.00305176]
[345.19488525 -522.75805664]
[355.09384155 -511.47134399]
[363.81976318 -499.25509644]
[371.28598022 -486.23071289]
[377.41827393 -472.52767944]
[382.15567017 -458.28213501]
[385.45114136 -443.63568115]
[387.27188110 -428.73388672]
[387.59979248 -413.72485352]
[386.43167114 -398.75775146]
[383.77908325 -383.98132324]
[379.66839600 -369.54244995]
[374.14047241 -355.58465576]
[367.25024414 -342.24661255]
[359.06622314 -329.66088867]
[349.66970825 -317.95260620]
[339.15408325 -307.23809814]
[327.62390137 -297.62387085]
[315.19372559 -289.20547485]
[301.98712158 -282.06655884]
[288.13531494 -276.27810669]
[273.77600098 -271.89761353]
[259.05187988 -268.96865845]
[244.10929871 -267.52029419]
[229.09675598 -267.56698608]
[214.16346741 -269.10821533]
[199.45783997 -272.12866211]
[185.12603760 -276.59835815]
[179.25708008 -262.79415894]
[173.38812256 -248.98999023]
[167.51914978 -235.18582153]
[170.58331299 -217.90641785]
[155.77908325 -206.95579529]
[150.11628723 -193.06576538]
[156.11167908 -179.47933960]
[150.56668091 -165.31221008]
[136.27532959 -159.11582947]
[130.61254883 -145.22579956]
[124.94976044 -131.33576965]
[119.28697205 -117.44573975]
[125.28235626 -103.85931396]
[119.73735809 -89.69218445]
[105.44601440 -83.49579620]
[99.78322601 -69.60576630]
[97.33750153 -54.80649567]
[98.23031616 -39.83309174]
[106.71144104 -27.58891487]
[99.80925751 -13.35267830]
[100.70207214 1.62072790]
[101.59488678 16.59413338]
[114.63911438 27.20954704]
[115.99652100 44.31136703]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[112.84947968 171.44569397]
[114.07645416 186.39541626]
[123.01409149 199.45027161]
[116.44311523 212.81707764]
[117.78134918 227.75726318]
[119.45288849 242.66384888]
[121.45690155 257.52935791]
[123.46091461 272.39489746]
[133.39297485 261.15414429]
[148.35525513 260.09118652]
[159.77670288 269.81491089]
[161.11457825 284.75512695]
[151.60249329 296.35339355]
[136.68939209 297.96572876]
[124.91866302 288.66931152]
[125.58844757 303.65435791]
[133.93423462 317.09527588]
[126.77295685 330.15533447]
[127.44274139 345.14038086]
[128.11253357 360.12542725]
[128.78231812 375.11044312]
[142.83607483 381.06481934]
[152.90812683 392.53289795]
[156.99864197 407.23767090]
[154.29547119 422.25949097]
[145.33529663 434.61581421]
[131.89720154 441.85321045]
[116.64930725 442.53475952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[10 198]
[11 197]
[12 190]
[13 189]
[14 188]
[18 187]
[19 186]
[21 184]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[29 177]
[30 176]
[31 175]
[35 172]
[36 171]
[37 170]
[39 168]
[40 167]
[71 166]
[72 165]
[75 162]
[76 161]
[77 160]
[78 159]
[81 156]
[82 155]
[85 153]
[86 152]
[87 151]
[88 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
