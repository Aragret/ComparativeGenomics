%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[74.51010895 305.74923706]
[73.21941376 290.79367065]
[73.33486176 275.78298950]
[74.85545349 260.84906006]
[77.76780701 246.12312317]
[82.04633331 231.73463440]
[87.65343475 217.81002808]
[94.53984070 204.47166443]
[102.64501953 191.83676147]
[111.89774323 180.01638794]
[122.21670532 169.11437988]
[133.51121521 159.22659302]
[124.73061371 147.06513977]
[115.95001221 134.90367126]
[107.16941071 122.74221802]
[98.38880157 110.58076477]
[88.14340973 99.62485504]
[76.59710693 90.04973602]
[65.05081177 80.47461700]
[53.50450897 70.89949799]
[41.95820618 61.32437897]
[30.41190338 51.74925613]
[18.86560249 42.17413712]
[7.31930065 32.59901810]
[-2.93218684 43.55541229]
[-13.82056522 53.87910843]
[-25.30685616 63.53315735]
[-37.34994125 72.48299408]
[-49.90671158 80.69658661]
[-62.93221283 88.14452362]
[-76.37982178 94.80015564]
[-90.20139313 100.63964081]
[-104.34745026 105.64208984]
[-118.76736450 109.78958893]
[-133.40950012 113.06729126]
[-148.22145081 115.46346283]
[-163.15019226 116.96952820]
[-178.14227295 117.58009338]
[-193.14404297 117.29297638]
[-208.10179138 116.10919952]
[-222.96197510 114.03300476]
[-237.67138672 111.07182312]
[-252.17738342 107.23625946]
[-266.42803955 102.54003143]
[-280.37231445 96.99996185]
[-293.96032715 90.63587952]
[-307.14343262 83.47057343]
[-319.87438965 75.52967834]
[-332.10769653 66.84162903]
[-343.79949951 57.43753052]
[-354.90795898 47.35104370]
[-365.39334106 36.61827087]
[-375.21810913 25.27764130]
[-384.34704590 13.36974621]
[-392.74749756 0.93721563]
[-400.38940430 -11.97544670]
[-407.24539185 -25.32201576]
[-413.29092407 -39.05471420]
[-418.50436401 -53.12438202]
[-422.86706543 -67.48065186]
[-426.36337280 -82.07213593]
[-428.98077393 -96.84659576]
[-430.70993042 -111.75113678]
[-431.54464722 -126.73242188]
[-431.48190308 -141.73680115]
[-430.52194214 -156.71058655]
[-428.66821289 -171.60015869]
[-425.92733765 -186.35220337]
[-422.30914307 -200.91394043]
[-417.82656860 -215.23323059]
[-412.49566650 -229.25880432]
[-406.33547974 -242.94047546]
[-399.36813354 -256.22924805]
[-391.61853027 -269.07754517]
[-383.11437988 -281.43939209]
[-373.88619995 -293.27053833]
[-363.96694946 -304.52862549]
[-353.39221191 -315.17333984]
[-342.19976807 -325.16656494]
[-330.42971802 -334.47259521]
[-318.12420654 -343.05801392]
[-305.32727051 -350.89218140]
[-292.08474731 -357.94699097]
[-278.44396973 -364.19723511]
[-264.45385742 -369.62051392]
[-250.16442871 -374.19738770]
[-235.62687683 -377.91152954]
[-220.89320374 -380.74960327]
[-206.01618958 -382.70147705]
[-191.04905701 -383.76013184]
[-176.04541016 -383.92178345]
[-161.05895996 -383.18588257]
[-146.14332581 -381.55502319]
[-131.35194397 -379.03506470]
[-116.73771667 -375.63504028]
[-102.35299683 -371.36709595]
[-88.24925995 -366.24655151]
[-74.47700500 -360.29168701]
[-61.08552170 -353.52383423]
[-48.12275696 -345.96722412]
[-35.63510895 -337.64892578]
[-23.66728592 -328.59869385]
[-12.26212597 -318.84893799]
[-1.46045744 -308.43453979]
[8.69905186 -297.39282227]
[18.18003464 -285.76324463]
[26.94854736 -273.58752441]
[34.97320557 -260.90917969]
[42.22528076 -247.77362061]
[48.67881393 -234.22785950]
[54.31069565 -220.32040405]
[59.10077667 -206.10102844]
[63.03190231 -191.62063599]
[66.09000397 -176.93106079]
[68.26412201 -162.08489990]
[69.54649353 -147.13526917]
[69.93251801 -132.13572693]
[69.42080688 -117.13993835]
[68.01320648 -102.20159149]
[65.71474457 -87.37416077]
[62.53364944 -72.71073151]
[58.48131180 -58.26379395]
[53.57223892 -44.08506012]
[47.82400513 -30.22528648]
[41.25718307 -16.73408890]
[33.89528656 -3.65976453]
[25.76466179 8.95088482]
[16.89442062 21.05271721]
[28.44072151 30.62783623]
[39.98702240 40.20295715]
[51.53332520 49.77807617]
[63.07962799 59.35319519]
[74.62593079 68.92831421]
[86.17223358 78.50343323]
[97.71852875 88.07855225]
[92.10066223 74.17030334]
[91.23742676 59.19515991]
[95.21991730 44.73349762]
[103.62786865 32.31148148]
[115.57395172 23.24004364]
[129.79748535 18.47650909]
[144.79740906 18.52358627]
[158.99075317 23.37631035]
[170.87966919 32.52255630]
[179.20947266 44.99710464]
[183.10110474 59.48348236]
[182.14389038 74.45290375]
[176.43882751 88.32562256]
[166.58798218 99.63761139]
[153.63096619 107.19508362]
[138.93511963 110.20048523]
[124.05136871 108.33664703]
[110.55026245 101.80016327]
[119.33086395 113.96161652]
[128.11146545 126.12307739]
[136.89207458 138.28453064]
[145.67266846 150.44598389]
[158.61227417 142.83670044]
[172.20756531 136.47253418]
[186.33906555 131.40943909]
[200.88259888 127.69190216]
[215.71035767 125.35259247]
[230.69200134 124.41207123]
[245.69589233 124.87860107]
[260.59017944 126.74808502]
[275.24392700 130.00408936]
[289.52841187 134.61801147]
[303.31805420 140.54928589]
[316.49169922 147.74578857]
[328.93356323 156.14428711]
[340.53427124 165.67097473]
[351.19192505 176.24211121]
[360.81283569 187.76481628]
[369.31243896 200.13780212]
[376.61608887 213.25236511]
[382.65954590 226.99320984]
[387.38970947 241.23960876]
[390.76504517 255.86636353]
[392.75582886 270.74490356]
[393.34463501 285.74450684]
[392.52624512 300.73330688]
[390.30783081 315.57965088]
[386.70895386 330.15298462]
[381.76119995 344.32528687]
[375.50802612 357.97198486]
[368.00445557 370.97317505]
[359.31637573 383.21456909]
[349.52017212 394.58859253]
[338.70190430 404.99530029]
[326.95666504 414.34326172]
[314.38766479 422.55026245]
[301.10537720 429.54418945]
[287.22653198 435.26364136]
[272.87307739 439.65829468]
[258.17117310 442.68951416]
[243.25001526 444.33071899]
[228.24073792 444.56744385]
[213.27523804 443.39764404]
[198.48504639 440.83157349]
[184.00013733 436.89178467]
[169.94781494 431.61288452]
[156.45156860 425.04129028]
[143.63000488 417.23477173]
[131.59579468 408.26190186]
[120.45471954 398.20153809]
[110.30467224 387.14212036]
[101.23485565 375.18078613]
[93.32498169 362.42272949]
[86.64456177 348.98001099]
[81.25231171 334.97079468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 157]
[13 156]
[14 155]
[15 154]
[16 153]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[24 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
