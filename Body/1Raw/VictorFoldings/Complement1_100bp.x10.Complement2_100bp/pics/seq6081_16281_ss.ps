%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[64.01844788 524.86932373]
[56.03126144 537.58972168]
[46.51273346 549.20867920]
[35.61298370 559.54302979]
[23.50391197 568.42974854]
[10.37649918 575.72869873]
[-3.56221533 581.32470703]
[-18.09239960 585.12957764]
[-32.98488998 587.08325195]
[-48.00481415 587.15496826]
[-62.91528320 585.34356689]
[-77.48114014 581.67761230]
[-91.47265625 576.21496582]
[-104.66916656 569.04174805]
[-116.86254120 560.27105713]
[-127.86048126 550.04125977]
[-137.48953247 538.51367188]
[-145.59780884 525.87017822]
[-152.05746460 512.31005859]
[-156.76660156 498.04727173]
[-159.65095520 483.30673218]
[-160.66502380 468.32092285]
[-159.79283142 453.32617188]
[-157.04812622 438.55895996]
[-152.47419739 424.25225830]
[-146.14318848 410.63162231]
[-138.15493774 397.91189575]
[-128.63542175 386.29373169]
[-117.73480225 375.96029663]
[-105.62498474 367.07461548]
[-92.49695587 359.77679443]
[-78.55776978 354.18194580]
[-64.02726746 350.37829590]
[-49.13461304 348.42587280]
[-34.11468506 348.35540771]
[-19.20436668 350.16806030]
[-4.63882065 353.83523560]
[0.81653619 339.86242676]
[6.27189302 325.88961792]
[11.72725010 311.91683960]
[9.14858913 297.24713135]
[21.37502861 287.20599365]
[13.15601921 276.68505859]
[11.19316769 263.36996460]
[16.10498047 250.72309875]
[26.70817947 242.08650208]
[40.30075836 239.79901123]
[45.96354294 225.90898132]
[51.52276993 211.97718811]
[56.97812653 198.00437927]
[62.22484589 183.95191956]
[67.26176453 169.82287598]
[64.24747467 155.23648071]
[76.16953278 144.83575439]
[81.20644379 130.70671082]
[86.24336243 116.57769012]
[91.28028107 102.44866180]
[90.13784790 98.76528931]
[90.62453461 94.59623718]
[92.92085266 90.68037415]
[96.87046814 87.80976868]
[102.53325653 73.91973877]
[108.19603729 60.02971268]
[113.85882568 46.13968277]
[101.92548370 55.22787857]
[87.44241333 59.13183212]
[72.55811310 57.27241516]
[59.48056030 49.92546463]
[50.14974213 38.18085480]
[45.94982910 23.78082848]
[47.50385284 8.86154652]
[54.58128357 -4.36380768]
[66.13222504 -13.93332958]
[80.44316864 -18.42743874]
[95.39115906 -17.17945862]
[108.75876617 -10.37452126]
[118.56297302 0.97790092]
[123.34938812 15.19374466]
[122.40846252 30.16232491]
[130.82307434 17.74482918]
[139.23770142 5.32733393]
[147.65231323 -7.09016132]
[148.50772095 -13.64606094]
[152.01853943 -18.11497498]
[156.50692749 -19.74698448]
[165.28752136 -31.90843964]
[174.06813049 -44.06989670]
[182.84873962 -56.23134995]
[191.62933350 -68.39280701]
[200.13616943 -80.74731445]
[201.23765564 -96.53013611]
[214.68878174 -102.92673492]
[222.91758728 -115.46813965]
[231.14639282 -128.00953674]
[239.37519836 -140.55093384]
[247.60400391 -153.09233093]
[255.64518738 -165.75486755]
[263.49694824 -178.53570557]
[271.34869385 -191.31654358]
[279.20043945 -204.09739685]
[267.51150513 -213.53120422]
[257.12493896 -224.38235474]
[248.21128845 -236.47265625]
[240.91694641 -249.60356140]
[235.36169434 -263.55947876]
[231.63674927 -278.11120605]
[229.80326843 -293.01983643]
[229.89135742 -308.04049683]
[231.89958191 -322.92657471]
[235.79496765 -337.43362427]
[241.51354980 -351.32342529]
[248.96141052 -364.36785889]
[258.01623535 -376.35278320]
[268.52938843 -387.08135986]
[280.32818604 -396.37741089]
[293.21890259 -404.08828735]
[306.98983765 -410.08740234]
[321.41488647 -414.27621460]
[336.25717163 -416.58593750]
[351.27297974 -416.97866821]
[366.21569824 -415.44793701]
[380.83999634 -412.01889038]
[394.90570068 -406.74783325]
[408.18188477 -399.72131348]
[420.45046997 -391.05471802]
[431.51004028 -380.89038086]
[441.17898560 -369.39517212]
[449.29852295 -356.75787354]
[455.73535156 -343.18600464]
[460.38372803 -328.90240479]
[463.16735840 -314.14166260]
[464.04049683 -299.14611816]
[462.98883057 -284.16204834]
[460.02963257 -269.43548584]
[455.21148682 -255.20828247]
[448.61349487 -241.71401978]
[440.34405518 -229.17430115]
[430.53887939 -217.79505920]
[419.35906982 -207.76312256]
[406.98812866 -199.24325562]
[393.62924194 -192.37533569]
[379.50173950 -187.27215576]
[364.83764648 -184.01750183]
[349.87774658 -182.66482544]
[334.86770630 -183.23634338]
[320.05398560 -185.72265625]
[305.67980957 -190.08296204]
[291.98129272 -196.24563599]
[284.12954712 -183.46479797]
[276.27777100 -170.68394470]
[268.42602539 -157.90310669]
[268.64474487 -153.13223267]
[265.86877441 -148.17330933]
[260.14541626 -144.86352539]
[251.91659546 -132.32212830]
[243.68778992 -119.78073120]
[235.45898438 -107.23932648]
[227.23017883 -94.69792938]
[226.71726990 -79.81215668]
[212.67756653 -72.51850891]
[213.03254700 -69.01047516]
[211.70602417 -65.15620422]
[208.55375671 -61.74789810]
[203.79078674 -59.61220551]
[195.01019287 -47.45074844]
[186.22958374 -35.28929138]
[177.44897461 -23.12783623]
[168.66838074 -10.96638107]
[160.06980896 1.32445717]
[151.65519714 13.74195290]
[143.24057007 26.15944862]
[134.82595825 38.57694244]
[127.74885559 51.80247116]
[122.08606720 65.69249725]
[116.42327881 79.58252716]
[110.76049042 93.47254944]
[105.40930939 107.48557281]
[100.37239075 121.61460114]
[95.33547211 135.74363708]
[90.29856110 149.87266541]
[92.95257568 165.46968079]
[81.39079285 174.85980225]
[76.35387421 188.98883057]
[77.16745758 195.55004883]
[74.88761139 200.75575256]
[70.95092773 203.45974731]
[65.49556732 217.43254089]
[65.28961182 226.56465149]
[59.85357285 231.57176208]
[54.19078445 245.46179199]
[63.30361176 259.71142578]
[62.13890076 276.41906738]
[51.35327148 289.01397705]
[35.34782791 292.66134644]
[37.53628540 308.33047485]
[25.70004845 317.37219238]
[20.24469185 331.34497070]
[14.78933430 345.31777954]
[9.33397675 359.29058838]
[22.53109169 366.46270752]
[34.72520828 375.23236084]
[45.72400665 385.46121216]
[55.35402298 396.98797607]
[63.46337509 409.63082886]
[69.92416382 423.19036865]
[74.63450623 437.45275879]
[77.52009583 452.19308472]
[78.53543091 467.17880249]
[77.66450500 482.17364502]
[74.92104340 496.94107056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 199]
[38 198]
[39 197]
[40 196]
[42 194]
[47 190]
[48 189]
[49 187]
[50 186]
[51 183]
[52 182]
[54 180]
[55 179]
[56 178]
[57 177]
[61 176]
[62 175]
[63 174]
[64 173]
[79 172]
[80 171]
[81 170]
[82 169]
[85 168]
[86 167]
[87 166]
[88 165]
[89 164]
[90 160]
[92 158]
[93 157]
[94 156]
[95 155]
[96 154]
[97 151]
[98 150]
[99 149]
[100 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
