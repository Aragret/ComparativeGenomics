%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[68.66179657 789.26745605]
[53.98326874 792.42102051]
[39.05828857 794.04858398]
[24.04506493 794.13287354]
[9.10274410 792.67309570]
[-5.61027431 789.68457031]
[-19.93802643 785.19909668]
[-33.72862625 779.26416016]
[-46.83589172 771.94268799]
[-59.12087250 763.31231689]
[-70.45333862 753.46453857]
[-80.71317291 742.50372314]
[-89.79160309 730.54602051]
[-97.59239197 717.71826172]
[-104.03285980 704.15637207]
[-109.04471588 690.00415039]
[-112.57484436 675.41162109]
[-114.58582306 660.53344727]
[-115.05633545 645.52734375]
[-113.98138428 630.55242920]
[-111.37237549 615.76739502]
[-107.25695801 601.32897949]
[-101.67875671 587.39025879]
[-94.69691467 574.09899902]
[-86.38543701 561.59606934]
[-76.83242798 550.01403809]
[-66.13915253 539.47564697]
[-54.41897583 530.09259033]
[-41.79612732 521.96435547]
[-28.40442276 515.17718506]
[-14.38581944 509.80288696]
[0.11107806 505.89852905]
[14.93259335 503.50549316]
[29.92160988 502.64907837]
[44.91923904 503.33843994]
[47.14435577 488.50439453]
[49.36947250 473.67037964]
[51.59458923 458.83633423]
[53.81970596 444.00228882]
[56.04482269 429.16824341]
[58.26993942 414.33419800]
[60.49505615 399.50015259]
[62.72017288 384.66610718]
[56.95645523 370.93188477]
[66.65528870 358.43215942]
[68.88040161 343.59811401]
[71.10552216 328.76406860]
[72.99880981 313.88403320]
[74.55933380 298.96542358]
[76.11985779 284.04681396]
[77.68038177 269.12820435]
[79.24090576 254.20960999]
[72.86966705 240.74644470]
[82.00068665 227.82611084]
[83.56120300 212.90750122]
[85.12172699 197.98890686]
[78.75049591 184.52574158]
[87.88150787 171.60540771]
[89.10848236 156.65567017]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[93.57463837 72.37547302]
[93.35131073 57.37713242]
[93.12798309 42.37879562]
[90.44951630 37.89851379]
[89.82035828 33.29879379]
[90.94282532 29.38023186]
[93.24463654 26.70927620]
[93.69124603 11.71592712]
[94.13784790 -3.27742314]
[94.58445740 -18.27077293]
[95.03105927 -33.26412201]
[95.47766876 -48.25747299]
[95.92427063 -63.25082397]
[96.37088013 -78.24417114]
[96.81748199 -93.23752594]
[95.70183563 -108.19597626]
[85.63513947 -120.40139771]
[90.98738861 -134.30113220]
[88.32159424 -149.06234741]
[85.65579224 -163.82356262]
[82.98999786 -178.58479309]
[76.43397522 -165.09336853]
[64.06623840 -156.60577393]
[49.11968231 -155.34068298]
[35.50130463 -161.62873840]
[26.77091408 -173.82629395]
[25.21061707 -188.74491882]
[31.22826767 -202.48493958]
[43.25086975 -211.45472717]
[58.13574219 -213.30960083]
[71.99201202 -207.56471252]
[81.19734192 -195.72257996]
[80.75074005 -210.71592712]
[80.30413055 -225.70927429]
[66.34057617 -231.87222290]
[56.44039154 -243.48898315]
[52.56925201 -258.25302124]
[55.49578857 -273.23294067]
[64.63892365 -285.45449829]
[78.18328857 -292.49102783]
[93.43964386 -292.94546509]
[107.37881470 -286.72756958]
[117.23318481 -275.07192993]
[121.04615021 -260.29275513]
[118.06064606 -245.32446289]
[108.86945343 -233.13903809]
[95.29748535 -226.15588379]
[95.74408722 -211.16253662]
[96.19069672 -196.16918945]
[97.75122070 -181.25057983]
[100.41701508 -166.48936462]
[103.08280945 -151.72814941]
[105.74860382 -136.96693420]
[115.62461853 -125.81732941]
[110.46305084 -110.86177063]
[115.66482544 -124.93094635]
[125.79814148 -135.99058533]
[139.35980225 -142.40008545]
[154.33798218 -143.20860291]
[168.51080322 -138.29623413]
[179.77577209 -128.39166260]
[186.46182251 -114.96420288]
[187.57710266 -100.00572205]
[182.95617676 -85.73522949]
[173.28451538 -74.26966095]
[159.99688721 -67.30986786]
[145.06439209 -65.88829803]
[130.70220947 -70.21583557]
[119.04086304 -79.65050507]
[111.81083679 -92.79091644]
[111.36422729 -77.79756927]
[110.91762543 -62.80421829]
[110.47101593 -47.81086731]
[110.02441406 -32.81751633]
[109.57780457 -17.82416725]
[109.13120270 -2.83081722]
[108.68459320 12.16253281]
[108.23798370 27.15588188]
[108.12631989 42.15546799]
[108.34964752 57.15380478]
[108.57297516 72.15214539]
[120.73426056 63.37129974]
[135.22215271 67.25728607]
[141.35671997 80.94548798]
[134.61579895 94.34548187]
[119.96852875 97.57929230]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.08188629 157.54849243]
[106.41970825 162.21557617]
[106.70501709 166.84934998]
[105.29420471 170.67356873]
[102.80010986 173.16592407]
[109.05973053 187.69616699]
[100.04033661 199.54942322]
[98.47981262 214.46803284]
[96.91928864 229.38664246]
[103.17890167 243.91687012]
[94.15950775 255.77012634]
[92.59898376 270.68875122]
[91.03845978 285.60733032]
[89.47794342 300.52593994]
[87.91741943 315.44454956]
[90.04450989 320.21136475]
[90.12261963 324.85327148]
[88.54245758 328.61068726]
[85.93956757 330.98916626]
[83.71444702 345.82321167]
[81.48932648 360.65725708]
[87.09389496 375.45251465]
[77.55422211 386.89120483]
[75.32910156 401.72525024]
[73.10398102 416.55929565]
[70.87886810 431.39334106]
[68.65374756 446.22738647]
[66.42863464 461.06143188]
[64.20351410 475.89547729]
[61.97839737 490.72952271]
[59.75328064 505.56356812]
[74.29312134 509.30484009]
[88.37120056 514.52130127]
[101.83829498 521.15771484]
[114.55164337 529.14361572]
[126.37648010 538.39440918]
[137.18743896 548.81201172]
[146.86993408 560.28607178]
[155.32133484 572.69482422]
[162.45202637 585.90686035]
[168.18643188 599.78204346]
[172.46376038 614.17327881]
[175.23867798 628.92810059]
[176.48175049 643.89001465]
[176.17982483 658.90045166]
[174.33609009 673.80023193]
[170.97009277 688.43151855]
[166.11750793 702.63916016]
[159.82977295 716.27252197]
[152.17355347 729.18707275]
[143.23001099 741.24597168]
[133.09394836 752.32135010]
[121.87279510 762.29583740]
[109.68553162 771.06365967]
[96.66133118 778.53186035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[45 176]
[46 175]
[47 174]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[54 164]
[55 163]
[56 162]
[58 160]
[59 156]
[60 155]
[61 154]
[62 153]
[64 151]
[65 145]
[66 144]
[67 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 134]
[80 119]
[82 117]
[83 116]
[84 115]
[85 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
