%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[78.51161957 306.76068115]
[81.00835419 321.58337402]
[81.15543365 336.61416626]
[78.94924927 351.48291016]
[74.44412994 365.82342529]
[67.75100708 379.28256226]
[59.03471375 391.52890015]
[48.50989532 402.26086426]
[36.43573761 411.21414185]
[23.10957146 418.16824341]
[8.85956955 422.95196533]
[-5.96334982 425.44747925]
[-20.99415970 425.59332275]
[-35.86270905 423.38592529]
[-50.20285416 418.87960815]
[-63.66144943 412.18536377]
[-75.90706635 403.46807861]
[-86.63814545 392.94235229]
[-95.59042358 380.86746216]
[-102.54344940 367.54074097]
[-107.32598877 353.29034424]
[-109.82026672 338.46719360]
[-109.96487427 323.43640137]
[-107.75623322 308.56802368]
[-103.24874115 294.22824097]
[-96.55340576 280.77020264]
[-87.83509064 268.52529907]
[-77.30850220 257.79510498]
[-65.23286438 248.84381104]
[-51.90555191 241.89189148]
[-37.65475845 237.11051941]
[-22.83142853 234.61746216]
[-7.80059624 234.47410583]
[7.06759071 236.68397522]
[21.40699005 241.19264221]
[28.08718491 227.76226807]
[34.76737976 214.33189392]
[33.50776672 199.49064636]
[46.58127975 190.58032227]
[45.32166672 175.73907471]
[58.39517593 166.82875061]
[65.07537079 153.39837646]
[71.75556946 139.96800232]
[78.43576050 126.53762054]
[77.17614746 111.69637299]
[90.24966431 102.78604889]
[90.73443604 94.74008942]
[97.13059998 89.20655823]
[104.01000977 75.87712860]
[110.88942719 62.54770279]
[117.46945190 49.06796646]
[123.74681091 35.44465256]
[130.02416992 21.82133484]
[136.30152893 8.19801903]
[142.37536621 -5.51724768]
[148.24432373 -19.32142448]
[154.11329651 -33.12560272]
[159.98225403 -46.92977905]
[147.35162354 -38.83860397]
[132.41583252 -37.45204544]
[118.51160431 -43.07986450]
[108.74516296 -54.46479416]
[105.29835510 -69.06340790]
[108.94120789 -83.61433411]
[118.85990143 -94.86687469]
[132.83857727 -100.30716705]
[147.75434875 -98.71984100]
[160.27500916 -90.45951080]
[167.60340881 -77.37155914]
[168.10235596 -62.37983704]
[176.14352417 -75.04235840]
[184.18470764 -87.70488739]
[180.95608521 -102.94345093]
[189.29136658 -115.67050171]
[203.83889771 -118.65457916]
[211.88008118 -131.31710815]
[219.92124939 -143.97962952]
[227.96241760 -156.64215088]
[215.86061096 -165.51431274]
[204.37841797 -175.17498779]
[193.56712341 -185.58100891]
[183.47503662 -196.68591309]
[174.14720154 -208.44009399]
[165.62528992 -220.79106140]
[157.94738770 -233.68365479]
[151.14775085 -247.06028748]
[145.25675964 -260.86120605]
[140.30072021 -275.02478027]
[136.30178833 -289.48776245]
[133.27781677 -304.18554688]
[131.24229431 -319.05249023]
[130.20433044 -334.02218628]
[130.16854858 -349.02780151]
[131.13511658 -364.00225830]
[133.09970093 -378.87875366]
[136.05355835 -393.59078979]
[139.98347473 -408.07266235]
[144.87190247 -422.25973511]
[150.69700623 -436.08859253]
[157.43278503 -449.49749756]
[165.04911804 -462.42654419]
[173.51202393 -474.81802368]
[182.78369141 -486.61654663]
[192.82272339 -497.76947021]
[203.58425903 -508.22692871]
[215.02024841 -517.94226074]
[227.07962036 -526.87200928]
[239.70849609 -534.97637939]
[252.85049438 -542.21911621]
[266.44689941 -548.56787109]
[280.43701172 -553.99432373]
[294.75830078 -558.47424316]
[309.34686279 -561.98754883]
[324.13751221 -564.51861572]
[339.06414795 -566.05615234]
[354.06018066 -566.59320068]
[369.05859375 -566.12750244]
[383.99240112 -564.66094971]
[398.79492188 -562.20025635]
[413.40002441 -558.75640869]
[427.74246216 -554.34466553]
[441.75820923 -548.98480225]
[455.38467407 -542.70080566]
[468.56097412 -535.52062988]
[481.22824097 -527.47644043]
[493.32995605 -518.60412598]
[504.81204224 -508.94329834]
[515.62316895 -498.53713989]
[525.71514893 -487.43212891]
[535.04284668 -475.67782593]
[543.56457520 -463.32675171]
[551.24230957 -450.43405151]
[558.04180908 -437.05734253]
[563.93261719 -423.25634766]
[568.88848877 -409.09268188]
[572.88720703 -394.62966919]
[575.91101074 -379.93185425]
[577.94635010 -365.06488037]
[578.98413086 -350.09515381]
[579.01971436 -335.08956909]
[578.05297852 -320.11511230]
[576.08819580 -305.23864746]
[573.13415527 -290.52664185]
[569.20404053 -276.04479980]
[564.31542969 -261.85781860]
[558.49017334 -248.02902222]
[551.75421143 -234.62020874]
[544.13769531 -221.69123840]
[535.67462158 -209.29988098]
[526.40283203 -197.50146484]
[516.36364746 -186.34867859]
[505.60198975 -175.89135742]
[494.16589355 -166.17617798]
[482.10641479 -157.24655151]
[469.47741699 -149.14236450]
[456.33532715 -141.89978027]
[442.73883057 -135.55117798]
[428.74868774 -130.12490845]
[414.42730713 -125.64519501]
[399.83871460 -122.13204956]
[385.04806519 -119.60116577]
[370.12136841 -118.06384277]
[355.12533569 -117.52695465]
[340.12692261 -117.99288940]
[325.19314575 -119.45957184]
[310.39065552 -121.92044830]
[295.78561401 -125.36453247]
[281.44320679 -129.77644348]
[267.42752075 -135.13645935]
[253.80114746 -141.42066956]
[240.62495422 -148.60098267]
[232.58377075 -135.93846130]
[224.54260254 -123.27593231]
[216.50143433 -110.61340332]
[219.98680115 -96.17776489]
[212.01228333 -83.22161102]
[196.84722900 -79.66371155]
[188.80604553 -67.00119019]
[180.76487732 -54.33866501]
[173.78642273 -41.06081772]
[167.91746521 -27.25664139]
[162.04850769 -13.45246410]
[156.17955017 0.35171318]
[157.10357666 5.03735304]
[155.09391785 10.35320759]
[149.92485046 14.47537994]
[143.64749146 28.09869576]
[137.37013245 41.72201157]
[131.09277344 55.34532928]
[131.96421814 58.76189423]
[131.22410583 62.77029800]
[128.61231995 66.60850525]
[124.21885681 69.42711639]
[117.33943939 82.75654602]
[110.46002960 96.08597565]
[103.68003845 109.46624756]
[104.46183777 125.26812744]
[91.86613464 133.21781921]
[85.18594360 146.64819336]
[78.50574493 160.07856750]
[71.82555389 173.50894165]
[72.60735321 189.31082153]
[60.01165390 197.26051331]
[60.79345703 213.06239319]
[48.19775391 221.01208496]
[41.51755905 234.44245911]
[34.83736420 247.87283325]
[47.08441925 256.58810425]
[57.81723785 267.11206055]
[66.77150726 279.18548584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 207]
[36 206]
[37 205]
[39 203]
[41 201]
[42 200]
[43 199]
[44 198]
[46 196]
[48 195]
[49 194]
[50 193]
[51 189]
[52 188]
[53 187]
[54 186]
[55 183]
[56 182]
[57 181]
[58 180]
[70 179]
[71 178]
[72 177]
[75 174]
[76 173]
[77 172]
[78 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
