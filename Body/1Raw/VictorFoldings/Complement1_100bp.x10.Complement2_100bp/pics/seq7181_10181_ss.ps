%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[190.91540527 681.02935791]
[178.75428772 672.24163818]
[167.10034180 662.79168701]
[155.98957825 652.70861816]
[145.45637512 642.02362061]
[135.53324890 630.76983643]
[126.25089264 618.98193359]
[117.63799286 606.69635010]
[109.72117615 593.95111084]
[102.52490234 580.78558350]
[96.07142639 567.24053955]
[90.38069916 553.35772705]
[85.47029114 539.18005371]
[81.35540009 524.75146484]
[78.04872894 510.11648560]
[75.56050873 495.32034302]
[73.89842987 480.40878296]
[73.06762695 465.42791748]
[73.07067108 450.42401123]
[73.90754700 435.44348145]
[75.57566833 420.53259277]
[78.06988525 405.73748779]
[81.38248444 391.10382080]
[85.50322723 376.67691040]
[90.41938019 362.50128174]
[96.11574554 348.62075806]
[102.57470703 335.07827759]
[109.77631378 321.91567993]
[117.69829559 309.17367554]
[126.31617737 296.89160156]
[135.60331726 285.10745239]
[145.53099060 273.85766602]
[156.06854248 263.17697144]
[167.18338013 253.09841919]
[178.84115601 243.65315247]
[170.06054688 231.49168396]
[161.27995300 219.33023071]
[152.49934387 207.16877747]
[147.56802368 221.33500671]
[133.46920776 226.45588684]
[120.59601593 218.75648499]
[118.43807983 203.91252136]
[128.58615112 192.86640930]
[143.55801392 193.76013184]
[135.70625305 180.97929382]
[127.85449982 168.19845581]
[120.00274658 155.41760254]
[115.47298431 169.71730042]
[102.22262573 176.74780273]
[87.84206390 172.48170471]
[80.56915283 159.36283875]
[84.57013702 144.90628052]
[97.55307007 137.39340210]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[74.77651978 83.50327301]
[76.03613281 68.66201782]
[69.35593414 55.23164368]
[62.67573929 41.80126953]
[62.73269272 56.80116272]
[59.49520493 71.44761658]
[53.12124252 85.02600098]
[43.92180252 96.87380219]
[32.34575272 106.41293335]
[18.95790482 113.17795563]
[4.41148806 116.83879852]
[-10.58374786 117.21683502]
[-25.29615021 114.29362488]
[-39.00786972 108.21178436]
[-51.04988480 99.26807404]
[-60.83463287 87.89888000]
[-67.88469696 74.65891266]
[-71.85608673 60.19419861]
[-72.55503082 45.21049118]
[-69.94743347 30.43888283]
[-64.16050720 16.60011292]
[-55.47663116 4.36940479]
[-44.31949234 -5.65647650]
[-31.23348236 -12.98834705]
[-16.85709381 -17.26846886]
[-1.89178228 -18.28800583]
[12.93226051 -15.99721050]
[26.89173889 -10.50785732]
[39.30553436 -2.08778358]
[49.56795502 8.85217667]
[57.17556763 21.77219963]
[56.05991745 6.81374645]
[54.94426727 -8.14470673]
[53.82862091 -23.10316086]
[45.08634186 -36.28963470]
[51.85559845 -49.55712891]
[50.73995209 -64.51558685]
[36.21001053 -68.90251923]
[24.24839401 -78.24512482]
[16.47281647 -91.27987671]
[13.93486023 -106.24394226]
[16.97776031 -121.11354828]
[25.18999100 -133.87770081]
[37.46091461 -142.81016541]
[52.13099289 -146.70288086]
[67.21621704 -145.02940369]
[80.67642975 -138.01605225]
[90.69125366 -126.61133575]
[95.90625763 -112.35762787]
[95.61617279 -97.18264008]
[89.86020660 -83.13865662]
[79.41682434 -72.12502289]
[65.69840240 -65.63123322]
[66.81405640 -50.67277908]
[75.47653198 -38.55623245]
[68.78707123 -24.21880913]
[69.90272522 -9.26035595]
[71.01837158 5.69809771]
[72.13401794 20.65655136]
[76.10611725 35.12107468]
[82.78630829 48.55145264]
[89.46650696 61.98182678]
[102.06220245 69.93151855]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[132.78358459 147.56585693]
[140.63534546 160.34669495]
[148.48710632 173.12753296]
[156.33885193 185.90838623]
[164.66079712 198.38816833]
[173.44140625 210.54963684]
[182.22200012 222.71109009]
[191.00260925 234.87254333]
[203.63647461 226.77919006]
[216.70060730 219.40046692]
[230.15461731 212.75918579]
[243.95690918 206.87586975]
[258.06484985 201.76872253]
[272.43481445 197.45350647]
[287.02239990 193.94355774]
[301.78247070 191.24975586]
[316.66946411 189.38038635]
[331.63732910 188.34126282]
[346.63983154 188.13558960]
[361.63055420 188.76397705]
[376.56320190 190.22451782]
[391.39160156 192.51268005]
[406.06991577 195.62138367]
[420.55276489 199.54103088]
[434.79541016 204.25950623]
[448.75381470 209.76222229]
[462.38482666 216.03216553]
[475.64633179 223.04995728]
[488.49734497 230.79393005]
[500.89810181 239.24011230]
[512.81030273 248.36241150]
[524.19714355 258.13262939]
[535.02337646 268.52056885]
[545.25555420 279.49414062]
[554.86212158 291.01937866]
[563.81329346 303.06069946]
[572.08142090 315.58087158]
[579.64099121 328.54119873]
[586.46856689 341.90161133]
[592.54315186 355.62084961]
[597.84582520 369.65643311]
[602.36035156 383.96505737]
[606.07269287 398.50244141]
[608.97131348 413.22366333]
[611.04742432 428.08325195]
[612.29443359 443.03521729]
[612.70855713 458.03341675]
[612.28857422 473.03143311]
[611.03570557 487.98291016]
[608.95379639 502.84167480]
[606.04937744 517.56176758]
[602.33135986 532.09771729]
[597.81127930 546.40454102]
[592.50311279 560.43804932]
[586.42315674 574.15490723]
[579.59033203 587.51263428]
[572.02569580 600.47003174]
[563.75268555 612.98693848]
[554.79681396 625.02478027]
[545.18579102 636.54626465]
[534.94927979 647.51586914]
[524.11895752 657.89953613]
[512.72833252 667.66534424]
[500.81256104 676.78295898]
[488.40850830 685.22430420]
[475.55447388 692.96325684]
[462.29025269 699.97583008]
[448.65676880 706.24047852]
[434.69622803 711.73773193]
[420.45172119 716.45062256]
[405.96734619 720.36462402]
[391.28781128 723.46759033]
[376.45852661 725.74993896]
[361.52529907 727.20465088]
[346.53433228 727.82720947]
[331.53192139 727.61566162]
[316.56445312 726.57067871]
[301.67819214 724.69549561]
[286.91915894 721.99591064]
[272.33297729 718.48028564]
[257.96469116 714.15942383]
[243.85874939 709.04675293]
[230.05874634 703.15802002]
[216.60734558 696.51147461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 134]
[36 133]
[37 132]
[38 131]
[44 130]
[45 129]
[46 128]
[47 127]
[54 126]
[55 125]
[56 124]
[58 122]
[60 120]
[61 119]
[62 118]
[89 117]
[90 116]
[91 115]
[92 114]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
