%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[156.09201050 161.03871155]
[144.98477173 150.95758057]
[133.87753296 140.87643433]
[122.77030182 130.79530334]
[111.66307068 120.71415710]
[100.55583191 110.63301849]
[88.66120148 101.49421692]
[76.05889130 93.35900116]
[63.45657730 85.22378540]
[50.85426712 77.08856964]
[38.25195312 68.95335388]
[25.64964294 60.81813812]
[16.86936760 72.98402405]
[7.46946859 84.67777252]
[-2.52471042 95.86787415]
[-13.08622837 106.52415466]
[-24.18661308 116.61788177]
[-35.79594040 126.12185669]
[-47.88291168 135.01043701]
[-60.41493988 143.25968933]
[-73.35824585 150.84736633]
[-86.67794037 157.75299072]
[-100.33810425 163.95797729]
[-114.30192566 169.44557190]
[-128.53173828 174.20100403]
[-142.98921204 178.21144104]
[-157.63534546 181.46606445]
[-172.43067932 183.95611572]
[-187.33529663 185.67486572]
[-202.30903625 186.61770630]
[-217.31153870 186.78207397]
[-232.30233765 186.16752625]
[-247.24104309 184.77572632]
[-262.08737183 182.61042786]
[-276.80130005 179.67747498]
[-291.34317017 175.98475647]
[-305.67376709 171.54223633]
[-319.75445557 166.36189270]
[-333.54727173 160.45767212]
[-347.01507568 153.84553528]
[-360.12152100 146.54325867]
[-372.83126831 138.57055664]
[-385.11007690 129.94891357]
[-396.92483521 120.70157623]
[-408.24371338 110.85346985]
[-419.03616333 100.43114471]
[-429.27310181 89.46269989]
[-438.92697144 77.97769165]
[-447.97167969 66.00710297]
[-456.38287354 53.58319092]
[-464.13787842 40.73944855]
[-471.21582031 27.51050377]
[-477.59756470 13.93202019]
[-483.26593018 0.04060037]
[-488.20562744 -14.12630558]
[-492.40335083 -28.53050423]
[-495.84780884 -43.13316727]
[-498.52966309 -57.89492798]
[-500.44171143 -72.77598572]
[-501.57879639 -87.73623657]
[-501.93786621 -102.73533630]
[-501.51794434 -117.73285675]
[-500.32012939 -132.68835449]
[-498.34771729 -147.56153870]
[-495.60595703 -162.31230164]
[-492.10229492 -176.90086365]
[-487.84613037 -191.28790283]
[-482.84896851 -205.43464661]
[-477.12426758 -219.30294800]
[-470.68746948 -232.85542297]
[-463.55590820 -246.05552673]
[-455.74884033 -258.86767578]
[-447.28726196 -271.25735474]
[-438.19406128 -283.19113159]
[-428.49368286 -294.63687134]
[-418.21231079 -305.56369019]
[-407.37762451 -315.94210815]
[-396.01889038 -325.74420166]
[-384.16668701 -334.94351196]
[-371.85299683 -343.51525879]
[-359.11099243 -351.43630981]
[-345.97500610 -358.68533325]
[-332.48049927 -365.24276733]
[-318.66381836 -371.09094238]
[-304.56222534 -376.21411133]
[-290.21371460 -380.59841919]
[-275.65698242 -384.23208618]
[-260.93127441 -387.10531616]
[-246.07627869 -389.21035767]
[-231.13204956 -390.54150391]
[-216.13887024 -391.09521484]
[-201.13716125 -390.86993408]
[-186.16737366 -389.86636353]
[-171.26985168 -388.08712769]
[-156.48475647 -385.53704834]
[-141.85194397 -382.22299194]
[-127.41087341 -378.15393066]
[-113.20046997 -373.34078979]
[-99.25904083 -367.79653931]
[-85.62416840 -361.53619385]
[-72.33261108 -354.57653809]
[-59.42020416 -346.93640137]
[-46.92175674 -338.63638306]
[-34.87096024 -329.69879150]
[-23.30030060 -320.14779663]
[-12.24097347 -310.00909424]
[-1.72279143 -299.31002808]
[8.22589016 -288.07946777]
[17.57825089 -276.34765625]
[26.30908012 -264.14624023]
[34.39484024 -251.50811768]
[41.81373215 -238.46733093]
[48.54575348 -225.05905151]
[54.57276154 -211.31944275]
[59.87850571 -197.28552246]
[64.44868469 -182.99511719]
[68.27097321 -168.48677063]
[71.33506775 -153.79959106]
[73.63271332 -138.97317505]
[75.15770721 -124.04748535]
[75.90595245 -109.06275177]
[75.87541962 -94.05938721]
[75.06619263 -79.07782745]
[73.48045349 -64.15847015]
[71.12248230 -49.34152222]
[67.99862671 -34.66693497]
[64.11731720 -20.17427063]
[59.48901367 -5.90259409]
[54.12619400 8.10961723]
[48.04331207 21.82459068]
[41.25676727 35.20535278]
[33.78485870 48.21582794]
[46.38716888 56.35104370]
[58.98948288 64.48625946]
[71.59179688 72.62147522]
[84.19410706 80.75669098]
[96.79641724 88.89190674]
[90.97567749 75.06732941]
[92.15428925 60.11370087]
[100.06893921 47.37171173]
[112.95147705 39.68794632]
[127.92390442 38.77898407]
[141.64135742 44.84788132]
[151.03930664 56.53883743]
[154.01824951 71.24005890]
[149.91264343 85.66725922]
[139.63972473 96.59736633]
[125.49448395 101.58855438]
[110.63697052 99.52578735]
[121.74420929 109.60692596]
[132.85144043 119.68806458]
[143.95867920 129.76921082]
[155.06590271 139.85034180]
[166.17314148 149.93148804]
[177.38806152 139.94860840]
[189.60057068 131.21438599]
[202.67228699 123.82776642]
[216.45512390 117.87246704]
[230.79289246 113.41595459]
[245.52313232 110.50872040]
[260.47894287 109.18371582]
[275.49087524 109.45594788]
[290.38882446 111.32233429]
[305.00396729 114.76172638]
[319.17074585 119.73515320]
[332.72857666 126.18626404]
[345.52389526 134.04196167]
[357.41171265 143.21324158]
[368.25729370 153.59616089]
[377.93780518 165.07310486]
[386.34350586 177.51402283]
[393.37918091 190.77792358]
[398.96508789 204.71455383]
[403.03796387 219.16598511]
[405.55166626 233.96846008]
[406.47769165 248.95428467]
[405.80551147 263.95361328]
[403.54281616 278.79653931]
[399.71520996 293.31484985]
[394.36605835 307.34405518]
[387.55596924 320.72518921]
[379.36209106 333.30664062]
[369.87731934 344.94583130]
[359.20907593 355.51092529]
[347.47827148 364.88214111]
[334.81777954 372.95336914]
[321.37112427 379.63308716]
[307.29058838 384.84567261]
[292.73577881 388.53204346]
[277.87155151 390.65039062]
[262.86639404 391.17675781]
[247.89028931 390.10516357]
[233.11293030 387.44775391]
[218.70175171 383.23464966]
[204.82006836 377.51354980]
[191.62515259 370.34933472]
[179.26651001 361.82312012]
[167.88418579 352.03155518]
[157.60713196 341.08560181]
[148.55180359 329.10922241]
[140.82081604 316.23818970]
[134.50175476 302.61828613]
[129.66622925 288.40386963]
[126.36901855 273.75598145]
[124.64749146 258.84060669]
[124.52114105 243.82673645]
[125.99141693 228.88450623]
[129.04165649 214.18319702]
[133.63728333 199.88941956]
[139.72622681 186.16510010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
