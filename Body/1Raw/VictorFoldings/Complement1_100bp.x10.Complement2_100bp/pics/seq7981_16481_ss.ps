%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[212.63652039 467.10345459]
[211.24662781 452.15881348]
[211.12913513 437.15014648]
[212.28489685 422.18557739]
[214.70559692 407.37295532]
[218.37377930 392.81896973]
[223.26301575 378.62850952]
[229.33808899 364.90380859]
[236.55522156 351.74377441]
[244.86242676 339.24319458]
[254.19981384 327.49215698]
[264.50015259 316.57531738]
[254.50196838 305.39337158]
[244.50379944 294.21139526]
[234.50563049 283.02941895]
[219.66621399 282.45721436]
[209.36735535 271.25952148]
[210.06813049 255.69847107]
[200.06996155 244.51649475]
[190.07179260 233.33451843]
[188.15547180 248.21160889]
[176.36549377 257.48504639]
[161.45568848 255.84255981]
[151.96707153 244.22506714]
[153.33514404 229.28759766]
[164.77622986 219.58699036]
[179.73548889 220.67977905]
[170.77479553 208.65040588]
[161.81410217 196.62103271]
[152.85339355 184.59164429]
[143.89270020 172.56227112]
[130.08470154 166.97763062]
[128.04574585 151.28836060]
[116.12581635 149.22880554]
[108.56205750 139.28027344]
[109.84348297 126.44591522]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[77.99506378 82.33469391]
[69.21446228 70.17323303]
[61.65378189 65.04742432]
[60.39525223 57.76470947]
[60.08696747 72.76154327]
[52.40629959 85.64592743]
[39.36095810 93.04991150]
[24.36096382 93.03812408]
[11.32727718 85.61363220]
[3.66687536 72.71719360]
[3.38216734 57.71989441]
[10.54757595 44.54199982]
[23.29007912 36.62817764]
[38.27882004 36.04708099]
[51.59511948 42.95001602]
[44.91492462 29.51963806]
[38.23472977 16.08926201]
[25.16121674 7.17894030]
[26.42082977 -7.66230774]
[21.73102379 6.58570051]
[9.04666615 14.59238815]
[-5.83312845 12.69720554]
[-16.10551643 1.76660550]
[-17.07410240 -13.20209026]
[-8.29606056 -25.36539459]
[6.21540737 -29.16240883]
[19.82717133 -22.85588646]
[14.58045292 -36.90835953]
[9.33373451 -50.96083069]
[4.08701658 -65.01329803]
[-1.36834049 -78.98609924]
[-7.03112698 -92.87612915]
[-12.69391346 -106.76615143]
[-18.35670090 -120.65618134]
[-32.99172211 -117.22650909]
[-47.98308945 -116.12860870]
[-62.96162796 -117.38951874]
[-77.55847931 -120.97817993]
[-91.41417694 -126.80622864]
[-104.18751526 -134.73013306]
[-115.56393433 -144.55476379]
[-125.26329041 -156.03819275]
[-133.04672241 -168.89761353]
[-138.72256470 -182.81636047]
[-142.15101624 -197.45166016]
[-143.24768066 -212.44311523]
[-141.98553467 -227.42155457]
[-138.39567566 -242.01809692]
[-132.56648254 -255.87332153]
[-124.64151764 -268.64599609]
[-114.81594849 -280.02160645]
[-103.33172607 -289.72003174]
[-90.47166443 -297.50241089]
[-76.55245209 -303.17709351]
[-61.91686249 -306.60433960]
[-46.92531586 -307.69976807]
[-31.94698524 -306.43637085]
[-17.35072899 -302.84530640]
[-3.49599361 -297.01498413]
[9.27603722 -289.08895874]
[20.65084076 -279.26245117]
[30.34830093 -267.77743530]
[38.12961197 -254.91673279]
[43.80314636 -240.99703979]
[47.22919464 -226.36117554]
[48.32338333 -211.36953735]
[47.05876923 -196.39131165]
[43.46649170 -181.79534912]
[37.63501358 -167.94110107]
[29.70794678 -155.16972351]
[19.88049507 -143.79573059]
[8.39467335 -134.09921265]
[-4.46667337 -126.31896973]
[1.19611335 -112.42893982]
[6.85890007 -98.53890991]
[12.52168655 -84.64888763]
[16.49819183 -82.00380707]
[18.85529327 -76.83262634]
[18.13948822 -70.26001740]
[23.38620567 -56.20754623]
[28.63292503 -42.15507507]
[33.87964249 -28.10260582]
[39.85120392 -14.34250259]
[52.44690704 -6.39281082]
[51.66510391 9.40906811]
[58.34529877 22.83944321]
[65.02549744 36.26982117]
[72.68608856 49.16614532]
[81.37591553 61.39263153]
[90.15651703 73.55408478]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[122.00493622 117.66530609]
[138.97518921 124.81318665]
[140.07511902 142.32766724]
[154.52406311 148.77272034]
[155.92208862 163.60157776]
[164.88278198 175.63095093]
[173.84347534 187.66032410]
[182.80416870 199.68971252]
[191.76486206 211.71908569]
[201.25376892 223.33634949]
[211.25193787 234.51832581]
[221.25010681 245.70030212]
[236.79234314 246.73794556]
[246.77261353 258.22048950]
[245.68760681 273.03125000]
[255.68577576 284.21319580]
[265.68392944 295.39517212]
[275.68212891 306.57714844]
[287.67877197 297.55752563]
[300.39715576 289.58776855]
[313.74557495 282.72534180]
[327.62792969 277.01965332]
[341.94412231 272.51184082]
[356.59103394 269.23437500]
[371.46313477 267.21087646]
[386.45324707 266.45593262]
[401.45339966 266.97494507]
[416.35549927 268.76422119]
[431.05215454 271.81082153]
[445.43750000 276.09283447]
[459.40786743 281.57940674]
[472.86264038 288.23098755]
[485.70480347 295.99963379]
[497.84188843 304.82943726]
[509.18643188 314.65670776]
[519.65667725 325.41067505]
[529.17718506 337.01382446]
[537.67938232 349.38259888]
[545.10198975 362.42785645]
[551.39154053 376.05560303]
[556.50274658 390.16766357]
[560.39868164 404.66232300]
[563.05139160 419.43518066]
[564.44165039 434.37976074]
[564.55957031 449.38842773]
[563.40417480 464.35302734]
[560.98382568 479.16571045]
[557.31604004 493.71978760]
[552.42718506 507.91036987]
[546.35241699 521.63519287]
[539.13562012 534.79547119]
[530.82879639 547.29626465]
[521.49169922 559.04754639]
[511.19165039 569.96459961]
[500.00286865 579.96887207]
[488.00598145 588.98822021]
[475.28738403 596.95764160]
[461.93878174 603.81970215]
[448.05630493 609.52502441]
[433.73999023 614.03247070]
[419.09298706 617.30957031]
[404.22085571 619.33270264]
[389.23071289 620.08728027]
[374.23056030 619.56781006]
[359.32852173 617.77819824]
[344.63192749 614.73120117]
[330.24670410 610.44879150]
[316.27645874 604.96185303]
[302.82186890 598.30993652]
[289.97988892 590.54095459]
[277.84304810 581.71087646]
[266.49874878 571.88330078]
[256.02877808 561.12908936]
[246.50856018 549.52563477]
[238.00668335 537.15667725]
[230.58441162 524.11120605]
[224.29521179 510.48330688]
[219.18440247 496.37112427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 150]
[13 149]
[14 148]
[15 147]
[18 144]
[19 143]
[20 142]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[33 135]
[36 133]
[37 132]
[39 130]
[40 129]
[41 128]
[43 127]
[54 126]
[55 125]
[56 124]
[58 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
