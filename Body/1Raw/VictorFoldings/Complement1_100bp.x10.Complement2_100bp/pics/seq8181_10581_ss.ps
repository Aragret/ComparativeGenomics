%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[77.03195190 486.74420166]
[69.75714111 473.50585938]
[66.50802612 458.75390625]
[67.54801178 443.68423462]
[72.79277802 429.51846313]
[81.81716156 417.40496826]
[93.88959503 408.32568359]
[108.03141785 403.01669312]
[106.91576385 388.05822754]
[105.80011749 373.09979248]
[104.68447113 358.14132690]
[103.56882477 343.18286133]
[94.61047363 335.05426025]
[93.55858612 322.60125732]
[101.52053833 312.45382690]
[100.62772369 297.48043823]
[99.62346649 282.51406860]
[98.50782013 267.55563354]
[97.39216614 252.59716797]
[94.97338867 250.03166199]
[93.67706299 246.16712952]
[94.10021210 241.54389954]
[96.57595062 236.94848633]
[96.12934113 221.95513916]
[95.68273926 206.96179199]
[87.56993103 194.47053528]
[94.89291382 180.44610596]
[86.78010559 167.95484924]
[94.10309601 153.93041992]
[93.65648651 138.93707275]
[85.54367828 126.44581604]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.58177185 73.03560638]
[85.27368164 86.64472198]
[75.27918243 97.82997894]
[62.46289062 105.62373352]
[47.93354416 109.35176086]
[32.94808197 108.69153595]
[18.80289268 103.70018005]
[6.72167730 94.80950165]
[-2.25041866 82.78862000]
[-7.33721876 68.67747498]
[-8.09866428 53.69681549]
[-4.46888161 39.14261627]
[3.23811626 26.27396393]
[14.35559654 16.20412636]
[27.92178726 9.80424500]
[42.76307297 7.62797165]
[57.59554291 9.86357689]
[71.13603210 16.31765938]
[82.21315002 26.43187523]
[89.86862946 39.33124161]
[93.43984985 53.89633942]
[96.97952271 39.31996155]
[100.51919556 24.74358749]
[96.25695038 9.50732040]
[106.77909851 -1.03467846]
[110.31876373 -15.61105347]
[106.05651855 -30.84732056]
[116.57866669 -41.38932037]
[110.98612213 -58.93369293]
[123.58534241 -71.14952850]
[126.90760040 -85.77698517]
[122.41898346 -100.94810486]
[132.78300476 -111.64559937]
[136.10527039 -126.27305603]
[139.42752075 -140.90051270]
[142.74978638 -155.52796936]
[128.39381409 -159.89875793]
[114.39064789 -165.29405212]
[100.81329346 -171.68571472]
[87.73255157 -179.04043579]
[75.21661377 -187.31985474]
[63.33072281 -196.48083496]
[52.13685608 -206.47558594]
[41.69337463 -217.25201416]
[32.05472183 -228.75393677]
[23.27115440 -240.92137146]
[15.38846302 -253.69090271]
[8.44774532 -266.99594116]
[2.48518753 -280.76715088]
[-2.46812415 -294.93267822]
[-6.38636494 -309.41870117]
[-9.24910641 -324.14971924]
[-11.04142475 -339.04888916]
[-11.75397396 -354.03854370]
[-11.38303947 -369.04055786]
[-9.93055630 -383.97668457]
[-7.40409517 -398.76907349]
[-3.81682992 -413.34060669]
[0.81253821 -427.61529541]
[6.45987320 -441.51870728]
[13.09573174 -454.97839355]
[20.68551826 -467.92416382]
[29.18966103 -480.28854370]
[38.56382370 -492.00701904]
[48.75913620 -503.01852417]
[59.72243881 -513.26568604]
[71.39657593 -522.69500732]
[83.72068787 -531.25732422]
[96.63050842 -538.90814209]
[110.05874634 -545.60736084]
[123.93538666 -551.32025146]
[138.18807983 -556.01684570]
[152.74252319 -559.67285156]
[167.52282715 -562.26904297]
[182.45195007 -563.79193115]
[197.45204163 -564.23364258]
[212.44490051 -563.59179688]
[227.35235596 -561.86975098]
[242.09669495 -559.07653809]
[256.60104370 -555.22662354]
[270.78979492 -550.34020996]
[284.58895874 -544.44268799]
[297.92657471 -537.56475830]
[310.73315430 -529.74243164]
[322.94189453 -521.01629639]
[334.48913574 -511.43203735]
[345.31469727 -501.03948975]
[355.36215210 -489.89288330]
[364.57907104 -478.05032349]
[372.91744995 -465.57357788]
[380.33377075 -452.52767944]
[386.78939819 -438.98062134]
[392.25067139 -425.00305176]
[396.68911743 -410.66784668]
[400.08160400 -396.04977417]
[402.41040039 -381.22497559]
[403.66342163 -366.27078247]
[403.83410645 -351.26516724]
[402.92156982 -336.28634644]
[400.93054199 -321.41241455]
[397.87145996 -306.72094727]
[393.76025391 -292.28848267]
[388.61831665 -278.19030762]
[382.47250366 -264.49993896]
[375.35482788 -251.28871155]
[367.30239868 -238.62551880]
[358.35723877 -226.57638550]
[348.56591797 -215.20413208]
[337.97955322 -204.56803894]
[326.65328979 -194.72357178]
[314.64620972 -185.72204590]
[302.02087402 -177.61039734]
[288.84313965 -170.43090820]
[275.18170166 -164.22102356]
[261.10775757 -159.01310730]
[246.69473267 -154.83430481]
[232.01774597 -151.70642090]
[217.15330505 -149.64576721]
[202.17892456 -148.66305542]
[187.17266846 -148.76344299]
[172.21278381 -149.94638062]
[157.37724304 -152.20571899]
[154.05499268 -137.57826233]
[150.73272705 -122.95079803]
[147.41046143 -108.32333374]
[152.13671875 -94.19847107]
[141.53506470 -82.45472717]
[138.21279907 -67.82727051]
[144.39195251 -57.42800522]
[141.74383545 -45.21443939]
[131.15504456 -37.84964752]
[135.67047119 -23.65598106]
[124.89514160 -12.07138157]
[121.35546875 2.50499392]
[125.87089539 16.69865990]
[115.09557343 28.28326035]
[111.55590057 42.85963440]
[108.01622772 57.43600845]
[106.56681061 72.36582184]
[110.00584412 78.90759277]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[116.00476837 125.53847504]
[108.64984131 138.49046326]
[109.09644318 153.48382568]
[117.24119568 167.04750061]
[109.88626862 179.99949646]
[118.03102112 193.56318665]
[110.67608643 206.51518250]
[111.12269592 221.50852966]
[111.56929779 236.50189209]
[112.35062408 251.48152161]
[113.46627045 266.43997192]
[114.58191681 281.39843750]
[118.34093475 289.72354126]
[115.60112762 296.58761597]
[116.49394989 311.56100464]
[126.98787689 326.69241333]
[118.52727509 342.06723022]
[119.64292145 357.02569580]
[120.75857544 371.98413086]
[121.87422180 386.94259644]
[122.98986816 401.90103149]
[137.76277161 405.05349731]
[151.04846191 412.24145508]
[161.76994324 422.88226318]
[169.05804443 436.11331177]
[172.32197571 450.86196899]
[171.29713440 465.93267822]
[166.06660461 480.10372925]
[157.05439758 492.22628784]
[144.99108887 501.31768799]
[130.85459900 506.64089966]
[115.79092407 507.76440430]
[101.02119446 504.59710693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[15 192]
[16 191]
[17 189]
[18 188]
[19 187]
[23 186]
[24 185]
[25 184]
[27 182]
[29 180]
[30 179]
[32 177]
[34 175]
[35 173]
[55 172]
[56 171]
[57 170]
[59 168]
[60 167]
[62 165]
[64 162]
[65 161]
[67 159]
[68 158]
[69 157]
[70 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
