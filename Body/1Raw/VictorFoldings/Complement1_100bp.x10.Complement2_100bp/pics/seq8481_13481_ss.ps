%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[152.12072754 535.89117432]
[141.48472595 525.30822754]
[131.47024536 514.13537598]
[122.10993195 502.40896606]
[113.43434143 490.16732788]
[105.47175598 477.45037842]
[98.24816132 464.29962158]
[91.78710175 450.75787354]
[86.10967255 436.86938477]
[81.23437500 422.67944336]
[77.17712402 408.23428345]
[73.95114136 393.58108521]
[71.56696320 378.76760864]
[70.03234863 363.84219360]
[69.35232544 348.85348511]
[69.52909851 333.85040283]
[70.56208801 318.88189697]
[72.44792938 303.99676514]
[75.18047333 289.24359131]
[78.75080872 274.67044067]
[83.14727783 260.32492065]
[88.35556030 246.25376892]
[94.35864258 232.50289917]
[101.13696289 219.11717224]
[108.66841125 206.14022827]
[116.92841339 193.61442566]
[125.89002228 181.58061218]
[135.52401733 170.07801819]
[145.79898071 159.14418030]
[135.47230530 148.26484680]
[125.14563751 137.38551331]
[114.81896973 126.50617981]
[104.49230194 115.62684631]
[88.29064941 111.28141022]
[84.55115509 94.92927551]
[74.06365204 84.20489502]
[63.57615280 73.48051453]
[53.08865356 62.75613403]
[41.60528183 72.41762543]
[29.43201637 81.19394684]
[16.63692856 89.03601074]
[3.29157853 95.89995575]
[-10.52940178 101.74741364]
[-24.74871826 106.54566956]
[-39.28684998 110.26789093]
[-54.06249619 112.89325714]
[-68.99301910 114.40709686]
[-83.99491882 114.80093384]
[-98.98430634 114.07257080]
[-113.87734985 112.22608185]
[-128.59075928 109.27178955]
[-143.04225159 105.22621918]
[-157.15100098 100.11199188]
[-170.83810425 93.95771027]
[-184.02703857 86.79779053]
[-196.64402771 78.67228699]
[-208.61849976 69.62661743]
[-219.88351440 59.71139145]
[-230.37605286 48.98204803]
[-240.03744507 37.49859238]
[-248.81365967 25.32524872]
[-256.65560913 12.53009224]
[-263.51943970 -0.81531906]
[-269.36676025 -14.63635063]
[-274.16491699 -28.85571098]
[-277.88699341 -43.39387512]
[-280.51223755 -58.16954041]
[-282.02593994 -73.10007477]
[-282.41964722 -88.10198212]
[-281.69116211 -103.09136200]
[-279.84454346 -117.98439026]
[-276.89010620 -132.69776917]
[-272.84442139 -147.14923096]
[-267.73007202 -161.25793457]
[-261.57565308 -174.94499207]
[-254.41561890 -188.13385010]
[-246.29000854 -200.75076294]
[-237.24423218 -212.72517395]
[-227.32890320 -223.99009705]
[-216.59947205 -234.48254395]
[-205.11593628 -244.14382935]
[-192.94250488 -252.91993713]
[-180.14727783 -260.76177979]
[-166.80181885 -267.62548828]
[-152.98072815 -273.47268677]
[-138.76132202 -278.27069092]
[-124.22312927 -281.99267578]
[-109.44744110 -284.61776733]
[-94.51689148 -286.13134766]
[-79.51497650 -286.52493286]
[-64.52560425 -285.79629517]
[-49.63259506 -283.94955444]
[-34.91923904 -280.99499512]
[-20.46782112 -276.94915771]
[-6.35915947 -271.83468628]
[7.32784462 -265.68017578]
[20.51664543 -258.52001953]
[33.13348770 -250.39428711]
[45.10780716 -241.34840393]
[56.37264252 -231.43298340]
[66.86499786 -220.70346069]
[76.52618408 -209.21983337]
[85.30217743 -197.04632568]
[93.14390564 -184.25103760]
[100.00750732 -170.90550232]
[105.85459137 -157.08436584]
[110.65247345 -142.86492920]
[114.37430573 -128.32669067]
[116.99928284 -113.55097961]
[118.51272583 -98.62041473]
[118.90616608 -83.61850739]
[118.17740631 -68.62913513]
[116.33052826 -53.73614502]
[113.37584686 -39.02281570]
[109.32988739 -24.57143211]
[104.21529388 -10.46281433]
[98.06064606 3.22413492]
[90.90038300 16.41287231]
[82.77453613 29.02964211]
[73.72856140 41.00388336]
[63.81303406 52.26863098]
[74.30053711 62.99301147]
[84.78803253 73.71739197]
[95.27553558 84.44177246]
[106.89232635 85.27332306]
[114.97296143 93.66049194]
[115.37163544 105.30017853]
[125.69830322 116.17951202]
[136.02497864 127.05884552]
[146.35163879 137.93818665]
[156.67831421 148.81752014]
[168.13250732 139.12603760]
[180.12129211 130.10426331]
[192.60557556 121.78163147]
[205.54463196 114.18528748]
[218.89624023 107.34001160]
[232.61686707 101.26813507]
[246.66175842 95.98944855]
[260.98510742 91.52118683]
[275.54016113 87.87791443]
[290.27947998 85.07151794]
[305.15499878 83.11114502]
[320.11813354 82.00320435]
[335.12014771 81.75129700]
[350.11206055 82.35624695]
[365.04498291 83.81608582]
[379.87020874 86.12604523]
[394.53939819 89.27859497]
[409.00466919 93.26345825]
[423.21887207 98.06761932]
[437.13562012 103.67543030]
[450.70953369 110.06858063]
[463.89633179 117.22622681]
[476.65298462 125.12502289]
[488.93789673 133.73919678]
[500.71102905 143.04064941]
[511.93392944 152.99905396]
[522.57000732 163.58192444]
[532.58459473 174.75474548]
[541.94500732 186.48104858]
[550.62066650 198.72261047]
[558.58337402 211.43949890]
[565.80706787 224.59022522]
[572.26824951 238.13189697]
[577.94573975 252.02033997]
[582.82116699 266.21026611]
[586.87854004 280.65536499]
[590.10461426 295.30856323]
[592.48895264 310.12200928]
[594.02368164 325.04742432]
[594.70379639 340.03610229]
[594.52716064 355.03918457]
[593.49426270 370.00772095]
[591.60852051 384.89285278]
[588.87609863 399.64605713]
[585.30590820 414.21920776]
[580.90954590 428.56478882]
[575.70135498 442.63598633]
[569.69836426 456.38690186]
[562.92016602 469.77267456]
[555.38885498 482.74966431]
[547.12890625 495.27554321]
[538.16741943 507.30944824]
[528.53350830 518.81213379]
[518.25866699 529.74603271]
[507.37631226 540.07550049]
[495.92205811 549.76690674]
[483.93319702 558.78857422]
[471.44885254 567.11114502]
[458.50973511 574.70733643]
[445.15805054 581.55255127]
[431.43737793 587.62432861]
[417.39245605 592.90289307]
[403.06909180 597.37103271]
[388.51397705 601.01422119]
[373.77462769 603.82049561]
[358.89913940 605.78070068]
[343.93597412 606.88854980]
[328.93395996 607.14031982]
[313.94204712 606.53527832]
[299.00915527 605.07531738]
[284.18392944 602.76525879]
[269.51477051 599.61254883]
[255.04953003 595.62762451]
[240.83537292 590.82330322]
[226.91865540 585.21539307]
[213.34480286 578.82214355]
[200.15806580 571.66442871]
[187.40145874 563.76550293]
[175.11660767 555.15124512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 131]
[30 130]
[31 129]
[32 128]
[33 127]
[35 124]
[36 123]
[37 122]
[38 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
