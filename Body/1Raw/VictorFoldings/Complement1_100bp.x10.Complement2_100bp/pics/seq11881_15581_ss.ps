%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[122.50389862 775.61499023]
[107.95938873 771.93170166]
[93.63355255 767.47308350]
[79.56768799 762.25195312]
[65.80236053 756.28326416]
[52.37725067 749.58435059]
[39.33107376 742.17449951]
[26.70144463 734.07501221]
[14.52477455 725.30926514]
[2.83617449 715.90258789]
[-8.33065510 705.88208008]
[-18.94351768 695.27661133]
[-28.97181129 684.11676025]
[-38.38662338 672.43469238]
[-47.16080856 660.26409912]
[-55.26906967 647.64013672]
[-62.68802643 634.59912109]
[-69.39628601 621.17864990]
[-75.37451172 607.41748047]
[-80.60546112 593.35528564]
[-85.07405853 579.03253174]
[-88.76741791 564.49060059]
[-91.67488098 549.77136230]
[-93.78807831 534.91729736]
[-95.10090637 519.97119141]
[-95.60958862 504.97619629]
[-95.31265259 489.97549438]
[-94.21096039 475.01239014]
[-92.30767822 460.12994385]
[-89.60830688 445.37115479]
[-86.12061310 430.77850342]
[-81.85466766 416.39410400]
[-76.82276154 402.25942993]
[-71.03941345 388.41525269]
[-64.52128601 374.90142822]
[-57.28717804 361.75695801]
[-49.35794830 349.01977539]
[-40.75645828 336.72653198]
[-31.50750732 324.91275024]
[-21.63776398 313.61242676]
[-11.17568493 302.85815430]
[-0.15143536 292.68099976]
[11.40319920 283.11022949]
[23.45490456 274.17349243]
[35.96892929 265.89651489]
[48.90919495 258.30319214]
[62.23839188 251.41540527]
[75.91808319 245.25300598]
[89.90883636 239.83378601]
[104.17029572 235.17335510]
[118.66136169 231.28515625]
[115.55725098 216.60984802]
[112.45314026 201.93453979]
[107.99349976 196.04104614]
[109.41378021 187.01770020]
[106.52850342 172.29782104]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[69.72130585 67.43024445]
[60.09463501 51.06146622]
[62.26137543 32.34692764]
[75.16618347 18.82809258]
[71.62651062 4.25171709]
[68.08683777 -10.32465839]
[64.54716492 -24.90103340]
[49.65036774 -23.01278496]
[34.63582230 -22.80435371]
[19.69235229 -24.27836037]
[5.00788641 -27.41626740]
[-9.23290253 -32.17861176]
[-22.85092163 -38.50550461]
[-35.67490768 -46.31737900]
[-47.54359055 -55.51598740]
[-58.30770493 -65.98564911]
[-67.83187866 -77.59470367]
[-75.99634552 -90.19714355]
[-82.69841003 -103.63449097]
[-87.85380554 -117.73775482]
[-91.39768982 -132.32955933]
[-93.28549194 -147.22640991]
[-93.49347687 -162.24096680]
[-92.01902008 -177.18438721]
[-88.88067627 -191.86875916]
[-84.11790466 -206.10940552]
[-77.79060364 -219.72723389]
[-69.97834778 -232.55099487]
[-60.77938461 -244.41940308]
[-50.30939484 -255.18319702]
[-38.70006180 -264.70703125]
[-26.09737206 -272.87112427]
[-12.65982628 -279.57278442]
[1.44358730 -284.72775269]
[16.03550339 -288.27120972]
[30.93241119 -290.15856934]
[45.94696808 -290.36608887]
[60.89035034 -288.89120483]
[75.57463074 -285.75241089]
[89.81513214 -280.98919678]
[103.43277740 -274.66149902]
[116.25629425 -266.84887695]
[128.12442017 -257.64953613]
[138.88790894 -247.17922974]
[148.41139221 -235.56961060]
[156.57510376 -222.96669006]
[163.27636719 -209.52893066]
[168.43092346 -195.42536926]
[171.97393799 -180.83334351]
[173.86083984 -165.93638611]
[174.06793213 -150.92181396]
[172.59257507 -135.97848511]
[169.45335388 -121.29429626]
[164.68972778 -107.05393219]
[158.36161804 -93.43648529]
[150.54859924 -80.61319733]
[141.34892273 -68.74533844]
[130.87829590 -57.98216629]
[119.26838684 -48.45903015]
[106.66520691 -40.29570007]
[93.22726440 -33.59483337]
[79.12354279 -28.44070625]
[82.66321564 -13.86433029]
[86.20288086 0.71204478]
[89.74255371 15.28841972]
[100.67578125 17.50545502]
[110.03477478 23.67046928]
[116.44637299 32.92477798]
[118.95281982 43.95321655]
[117.15468597 55.17100143]
[111.27392578 64.95144653]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[121.24839783 169.41253662]
[124.13366699 184.13243103]
[127.12844086 198.83044434]
[130.23255920 213.50573730]
[133.33666992 228.18104553]
[148.16101074 225.86846924]
[163.08810425 224.35496521]
[178.07492065 223.64486694]
[193.07826233 223.74023438]
[208.05484009 224.64080811]
[222.96148682 226.34396362]
[237.75523376 228.84481812]
[252.39341736 232.13613892]
[266.83383179 236.20845032]
[281.03482056 241.05000305]
[294.95547485 246.64683533]
[308.55563354 252.98281860]
[321.79608154 260.03967285]
[334.63867188 267.79705811]
[347.04635620 276.23260498]
[358.98333740 285.32202148]
[370.41525269 295.03903198]
[381.30908203 305.35568237]
[391.63345337 316.24221802]
[401.35858154 327.66723633]
[410.45645142 339.59777832]
[418.90078735 351.99948120]
[426.66729736 364.83654785]
[433.73352051 378.07202148]
[440.07916260 391.66769409]
[445.68585205 405.58435059]
[450.53747559 419.78192139]
[454.61999512 434.21945190]
[457.92169189 448.85528564]
[460.43304443 463.64724731]
[462.14675903 478.55270386]
[463.05795288 493.52862549]
[463.16394043 508.53189087]
[462.46447754 523.51922607]
[460.96154785 538.44738770]
[458.65948486 553.27337646]
[455.56494141 567.95440674]
[451.68682861 582.44818115]
[447.03631592 596.71289062]
[441.62683105 610.70739746]
[435.47396851 624.39135742]
[428.59545898 637.72534180]
[421.01113892 650.67089844]
[412.74285889 663.19067383]
[403.81451416 675.24859619]
[394.25180054 686.80987549]
[384.08227539 697.84118652]
[373.33529663 708.31079102]
[362.04187012 718.18835449]
[350.23449707 727.44555664]
[337.94726562 736.05560303]
[325.21557617 743.99365234]
[312.07614136 751.23693848]
[298.56689453 757.76446533]
[284.72671509 763.55743408]
[270.59555054 768.59918213]
[256.21411133 772.87512207]
[241.62391663 776.37298584]
[226.86698914 779.08264160]
[211.98588562 780.99627686]
[197.02352905 782.10833740]
[182.02304077 782.41571045]
[167.02767944 781.91748047]
[152.08068848 780.61505127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 146]
[52 145]
[53 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[62 136]
[63 135]
[67 128]
[68 127]
[69 126]
[70 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
