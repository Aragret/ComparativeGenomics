%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[70.21029663 329.73870850]
[60.74971390 318.00152588]
[54.37356186 304.34109497]
[51.45254135 289.55151367]
[52.15647507 274.49270630]
[56.44443512 260.04013062]
[64.06713104 247.03405762]
[74.58139038 236.23063660]
[87.37591553 228.25796509]
[101.70686340 223.57957458]
[100.59121704 208.62112427]
[99.47556305 193.66267395]
[98.35991669 178.70420837]
[97.24427032 163.74575806]
[96.12861633 148.78730774]
[87.46614075 136.67076111]
[94.15560150 122.33333588]
[93.03994751 107.37488556]
[89.34761047 100.20974731]
[92.02073669 92.18570709]
[91.12792206 77.21230316]
[87.81202698 71.49247742]
[87.87332153 65.80976105]
[90.43819427 61.78105164]
[89.99158478 46.78770065]
[89.54498291 31.79435158]
[89.09837341 16.80100250]
[88.65177155 1.80765212]
[73.65058899 1.64234793]
[58.66862869 0.86530375]
[43.73083496 -0.52218723]
[28.86206627 -2.51781559]
[14.08707047 -5.11825991]
[-0.56956130 -8.31919193]
[-15.08343410 -12.11528301]
[-29.43039131 -16.50021744]
[-43.58655167 -21.46669388]
[-57.52835846 -27.00644875]
[-71.23260498 -33.11026001]
[-84.67647552 -39.76796722]
[-97.83760071 -46.96849442]
[-110.69407654 -54.69985199]
[-123.22450256 -62.94917297]
[-135.40802002 -71.70272827]
[-147.22434998 -80.94594574]
[-158.65383911 -90.66344452]
[-169.67744446 -100.83905029]
[-180.27682495 -111.45582581]
[-190.43434143 -122.49609375]
[-200.13308716 -133.94149780]
[-209.35691833 -145.77296448]
[-218.09049988 -157.97080994]
[-226.31925964 -170.51473999]
[-234.02952576 -183.38388062]
[-241.20846558 -196.55679321]
[-247.84413147 -210.01156616]
[-253.92547607 -223.72579956]
[-259.44235229 -237.67666626]
[-264.38562012 -251.84094238]
[-268.74703979 -266.19506836]
[-272.51931763 -280.71514893]
[-275.69622803 -295.37701416]
[-278.27243042 -310.15625000]
[-280.24368286 -325.02825928]
[-281.60668945 -339.96832275]
[-282.35916138 -354.95153809]
[-282.49987793 -369.95297241]
[-282.02859497 -384.94766235]
[-280.94607544 -399.91064453]
[-279.25415039 -414.81701660]
[-276.95559692 -429.64196777]
[-274.05429077 -444.36083984]
[-270.55502319 -458.94912720]
[-266.46365356 -473.38253784]
[-261.78695679 -487.63705444]
[-256.53271484 -501.68896484]
[-250.70971680 -515.51489258]
[-244.32760620 -529.09173584]
[-237.39701843 -542.39697266]
[-229.92950439 -555.40850830]
[-221.93748474 -568.10455322]
[-213.43426514 -580.46411133]
[-204.43399048 -592.46649170]
[-194.95164490 -604.09179688]
[-185.00300598 -615.32067871]
[-174.60462952 -626.13439941]
[-163.77384949 -636.51501465]
[-152.52865601 -646.44519043]
[-140.88778687 -655.90844727]
[-128.87060547 -664.88897705]
[-116.49713135 -673.37188721]
[-103.78794861 -681.34307861]
[-90.76420593 -688.78918457]
[-77.44757843 -695.69793701]
[-63.86024475 -702.05773926]
[-50.02480698 -707.85803223]
[-35.96429825 -713.08917236]
[-21.70211601 -717.74243164]
[-7.26200485 -721.81011963]
[7.33200502 -725.28546143]
[22.05562210 -728.16259766]
[36.88434219 -730.43676758]
[51.79347992 -732.10418701]
[66.75822449 -733.16217041]
[81.75366974 -733.60882568]
[96.75485229 -733.44348145]
[111.73680115 -732.66638184]
[126.67459106 -731.27886963]
[141.54335022 -729.28320312]
[156.31834412 -726.68267822]
[170.97497559 -723.48175049]
[185.48883057 -719.68560791]
[199.83576965 -715.30059814]
[213.99192810 -710.33410645]
[227.93371582 -704.79431152]
[241.63793945 -698.69042969]
[255.08180237 -692.03271484]
[268.24288940 -684.83215332]
[281.09936523 -677.10076904]
[293.62976074 -668.85137939]
[305.81323242 -660.09777832]
[317.62954712 -650.85455322]
[329.05902100 -641.13702393]
[340.08258057 -630.96136475]
[350.68194580 -620.34460449]
[360.83941650 -609.30426025]
[370.53814697 -597.85882568]
[379.76193237 -586.02734375]
[388.49548340 -573.82946777]
[396.72421265 -561.28552246]
[404.43444824 -548.41638184]
[411.61334229 -535.24340820]
[418.24896240 -521.78863525]
[424.33026123 -508.07440186]
[429.84710693 -494.12350464]
[434.79034424 -479.95922852]
[439.15170288 -465.60507202]
[442.92395020 -451.08499146]
[446.10079956 -436.42312622]
[448.67700195 -421.64385986]
[450.64819336 -406.77185059]
[452.01116943 -391.83178711]
[452.76358032 -376.84857178]
[452.90426636 -361.84713745]
[452.43292236 -346.85244751]
[451.35037231 -331.88946533]
[449.65838623 -316.98309326]
[447.35983276 -302.15814209]
[444.45846558 -287.43927002]
[440.95916748 -272.85101318]
[436.86773682 -258.41760254]
[432.19100952 -244.16310120]
[426.93673706 -230.11120605]
[421.11367798 -216.28533936]
[414.73153687 -202.70848083]
[407.80090332 -189.40324402]
[400.33337402 -176.39176941]
[392.34130859 -163.69570923]
[383.83804321 -151.33619690]
[374.83773804 -139.33381653]
[365.35534668 -127.70853424]
[355.40667725 -116.47969818]
[345.00827026 -105.66599274]
[334.17745972 -95.28543091]
[322.93225098 -85.35527802]
[311.29135132 -75.89206696]
[299.27413940 -66.91154480]
[286.90063477 -58.42866516]
[274.19143677 -50.45754242]
[261.16766357 -43.01144409]
[247.85102844 -36.10276413]
[234.26367188 -29.74300003]
[220.42822266 -23.94273949]
[206.36769104 -18.71163368]
[192.10549927 -14.05839062]
[177.66537476 -9.99075603]
[163.07136536 -6.51549911]
[148.34773254 -3.63840389]
[133.51901245 -1.36425960]
[118.60986328 0.30314884]
[103.64511871 1.36104620]
[104.09172821 16.35439682]
[104.53833008 31.34774590]
[104.98493958 46.34109497]
[105.43154144 61.33444595]
[106.10132599 76.31948853]
[106.99414062 91.29289246]
[107.99840546 106.25923157]
[109.11405182 121.21768951]
[117.85633087 134.40415955]
[111.08707428 147.67166138]
[112.20272064 162.63011169]
[113.31836700 177.58856201]
[114.43402100 192.54701233]
[115.54966736 207.50547791]
[116.66531372 222.46392822]
[131.53170776 224.96469116]
[145.36735535 230.95120239]
[157.36787415 240.07539368]
[166.83557129 251.80680847]
[173.22000122 265.46340942]
[176.14999390 280.25119019]
[175.45518494 295.31042480]
[171.17599487 309.76559448]
[163.56117249 322.77627563]
[153.05348206 333.58609009]
[140.26377869 341.56649780]
[125.93567657 346.25360107]
[110.90216827 347.37484741]
[96.03730011 344.86505127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[17 189]
[18 188]
[20 187]
[21 186]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
