%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[177.79760742 654.92468262]
[188.70616150 644.53472900]
[201.65345764 636.83312988]
[197.03945923 622.56036377]
[192.42544556 608.28765869]
[187.81143188 594.01489258]
[176.53436279 584.28472900]
[179.65158081 568.77362061]
[167.47145081 564.56958008]
[159.82247925 553.95941162]
[159.67895508 540.68572998]
[167.31730652 529.59204102]
[162.91630554 515.25219727]
[158.51530457 500.91235352]
[154.11430359 486.57250977]
[149.71330261 472.23266602]
[145.31231689 457.89282227]
[140.91131592 443.55297852]
[136.29730225 429.28024292]
[131.47129822 415.07778931]
[126.64530945 400.87533569]
[121.81931305 386.67288208]
[116.99330902 372.47042847]
[112.16731262 358.26797485]
[109.67377472 373.05926514]
[102.57055664 386.27078247]
[91.60728455 396.50830078]
[77.94093323 402.69140625]
[63.01375198 404.16760254]
[48.40103149 400.78106689]
[35.64489746 392.88925171]
[26.09152603 381.32495117]
[20.74911499 367.30856323]
[20.18145752 352.31930542]
[24.44846153 337.93902588]
[33.09981918 325.68530273]
[45.22253036 316.85128784]
[59.53725815 312.36926270]
[74.53334045 312.71221924]
[88.62819672 317.84399414]
[100.33436584 327.22299194]
[108.41654205 339.85961914]
[107.30089569 324.90115356]
[106.18524170 309.94268799]
[105.06959534 294.98425293]
[103.95394897 280.02578735]
[95.29146576 267.90924072]
[101.98092651 253.57182312]
[100.86528015 238.61337280]
[97.23299408 232.17689514]
[99.84606934 223.42419434]
[98.95324707 208.45079041]
[85.11449432 202.88713074]
[75.02220917 191.82118225]
[70.71772003 177.41172791]
[73.10612488 162.50146484]
[81.76657867 150.05624390]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[89.55588531 58.35095215]
[87.77341461 43.45723724]
[85.99095154 28.56351852]
[84.09765625 13.68348408]
[82.09364319 -1.18204403]
[72.58199310 -13.82479000]
[78.54955292 -27.47167587]
[76.54553986 -42.33720398]
[67.03388977 -54.97994995]
[73.00144958 -68.62683868]
[63.48979568 -81.26958466]
[69.45735931 -94.91646576]
[67.45334625 -109.78199768]
[65.44933319 -124.64752197]
[54.41765594 -114.48375702]
[39.57063675 -116.62059784]
[31.85294724 -129.48283386]
[36.95378113 -143.58891296]
[51.11299133 -148.54035950]
[63.89203644 -140.68852234]
[53.39810562 -155.81991577]
[61.85870743 -171.19474792]
[60.74305725 -186.15319824]
[59.62741089 -201.11164856]
[58.51176071 -216.07009888]
[57.39611435 -231.02854919]
[42.48694611 -233.15711975]
[28.38408089 -238.44137573]
[15.74714088 -246.63415527]
[5.16717386 -257.35229492]
[-2.86097455 -270.09445190]
[-7.96181345 -284.26470947]
[-9.89676762 -299.20022583]
[-8.57533455 -314.20248413]
[-4.05932188 -328.56979370]
[3.44004941 -341.63018799]
[13.57201958 -352.77276611]
[25.86269951 -361.47640991]
[39.73722839 -367.33401489]
[54.54667282 -370.07159424]
[69.59836578 -369.56115723]
[84.18831635 -365.82650757]
[97.63412476 -359.04238892]
[109.30690002 -349.52606201]
[118.66069031 -337.72265625]
[125.25800323 -324.18420410]
[128.79026794 -309.54394531]
[129.09228516 -294.48663330]
[126.14990234 -279.71649170]
[120.10076141 -265.92440796]
[111.22779083 -253.75541687]
[99.94599152 -243.77868652]
[86.78302765 -236.46086121]
[72.35456848 -232.14421082]
[73.47021484 -217.18574524]
[74.58586121 -202.22729492]
[75.70151520 -187.26884460]
[76.81716156 -172.31039429]
[85.77551270 -164.18176270]
[86.82739258 -151.72875977]
[78.86544037 -141.58134460]
[80.31485748 -126.65153503]
[82.31887054 -111.78601074]
[84.32288361 -96.92047882]
[93.69120026 -85.34101868]
[87.86697388 -70.63085175]
[97.23529053 -59.05138397]
[91.41107178 -44.34121704]
[93.41508484 -29.47568893]
[102.78339386 -17.89622498]
[96.95917511 -3.18605757]
[98.96318817 11.67947102]
[102.97213745 17.88834381]
[100.88466644 26.78105354]
[102.66712952 41.67477036]
[104.44960022 56.56848907]
[106.56738281 58.40509796]
[108.08525848 61.19125366]
[108.63792419 64.70265961]
[107.94792938 68.58704376]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[124.05246735 147.53486633]
[134.13043213 158.86277771]
[138.27371216 173.38357544]
[135.71202087 188.20243835]
[127.00621796 200.38925171]
[113.92665863 207.55796814]
[114.81947327 222.53138733]
[115.82373047 237.49772644]
[116.93937683 252.45617676]
[125.68165588 265.64263916]
[118.91239929 278.91015625]
[120.02805328 293.86859131]
[121.14369965 308.82705688]
[122.25934601 323.78549194]
[123.37499237 338.74395752]
[126.36976624 353.44195557]
[131.19577026 367.64440918]
[136.02175903 381.84686279]
[140.84776306 396.04931641]
[145.67376709 410.25180054]
[150.49975586 424.45425415]
[155.21192932 429.09179688]
[156.65763855 434.58789062]
[155.25115967 439.15197754]
[159.65216064 453.49182129]
[164.05316162 467.83166504]
[168.45414734 482.17150879]
[172.85514832 496.51135254]
[177.25614929 510.85122681]
[181.65715027 525.19104004]
[197.25923157 533.10272217]
[202.21453857 549.52709961]
[193.92431641 564.15960693]
[205.53141785 574.91070557]
[202.08416748 589.40087891]
[206.69818115 603.67364502]
[211.31219482 617.94635010]
[215.92619324 632.21911621]
[230.93173218 630.88427734]
[245.85800171 632.92248535]
[259.95629883 638.23150635]
[272.51947021 646.54504395]
[282.91735840 657.44604492]
[290.62838745 670.38769531]
[295.26580811 684.72100830]
[296.59698486 699.72680664]
[294.55514526 714.65258789]
[289.24270630 728.74963379]
[280.92614746 741.31079102]
[270.02264404 751.70599365]
[257.07907104 759.41394043]
[242.74468994 764.04785156]
[227.73851013 765.37542725]
[212.81324768 763.32995605]
[198.71751404 758.01409912]
[186.15837097 749.69451904]
[175.76576233 738.78845215]
[168.06100464 725.84301758]
[163.43054199 711.50750732]
[162.10664368 696.50103760]
[164.15571594 681.57623291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 184]
[8 182]
[12 179]
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[18 173]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[48 158]
[49 157]
[51 156]
[52 155]
[58 149]
[59 148]
[60 147]
[62 145]
[63 144]
[64 139]
[65 138]
[66 137]
[67 135]
[68 134]
[70 132]
[71 131]
[73 129]
[75 127]
[76 126]
[77 125]
[83 124]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
