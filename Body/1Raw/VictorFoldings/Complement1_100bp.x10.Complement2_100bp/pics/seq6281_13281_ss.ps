%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[105.21591949 427.92010498]
[95.76908112 439.59854126]
[84.90636444 449.97299194]
[72.80612946 458.87316895]
[59.66709518 466.15286255]
[45.70500183 471.69256592]
[31.14912033 475.40127563]
[16.23847580 477.21813965]
[1.21791136 477.11331177]
[-13.66592026 475.08850098]
[-28.16861153 471.17694092]
[-42.05201721 465.44290161]
[-55.08816147 457.98049927]
[-67.06297302 448.91229248]
[-77.77982330 438.38720703]
[-87.06272125 426.57806396]
[-94.75923920 413.67874146]
[-100.74299622 399.90112305]
[-104.91572571 385.47140503]
[-107.20891571 370.62655640]
[-107.58490753 355.61035156]
[-106.03752136 340.66931152]
[-102.59217072 326.04885864]
[-97.30543518 311.98904419]
[-90.26412201 298.72070312]
[-81.58386230 286.46179199]
[-71.40718842 275.41354370]
[-59.90121078 265.75741577]
[-47.25486755 257.65197754]
[-33.67582703 251.23028564]
[-19.38706589 246.59782410]
[-4.62322140 243.83065796]
[10.37327290 242.97422791]
[25.35616112 244.04258728]
[40.07941055 247.01820374]
[44.90540695 232.81575012]
[49.73140335 218.61329651]
[54.55740356 204.41084290]
[53.73305511 197.06629944]
[59.56242371 190.03378296]
[64.59933472 175.90475464]
[69.63625336 161.77572632]
[74.67317200 147.64669800]
[79.71009064 133.51766968]
[74.81047058 122.45781708]
[78.89117432 110.64546967]
[90.28011322 104.59114075]
[92.83594513 89.81048584]
[92.61261749 74.81214905]
[92.38928986 59.81380844]
[92.16596222 44.81547165]
[91.94263458 29.81713486]
[91.71930695 14.81879711]
[84.79685974 28.12592506]
[73.97416687 38.51194000]
[60.39337540 44.88078308]
[45.48770142 46.56032944]
[30.83017349 43.37334061]
[17.96763802 35.65613937]
[8.25750828 24.22314644]
[2.72451591 10.28090763]
[1.95257175 -4.69921589]
[6.02314091 -19.13633728]
[14.50664711 -31.50687218]
[26.50780487 -40.50532913]
[40.76010132 -45.18207932]
[55.75946426 -45.04357147]
[69.92296600 -40.10442734]
[81.75590515 -30.88588524]
[90.00952148 -18.36079788]
[93.81281281 -3.85077739]
[97.35248566 -18.42715263]
[100.89215851 -33.00352859]
[104.43183136 -47.57990265]
[92.35077667 -58.86883926]
[87.63825989 -74.61963654]
[91.48976898 -90.50619507]
[102.76206970 -102.21479797]
[118.31028748 -106.61539459]
[121.63254547 -121.24285126]
[124.95481110 -135.87031555]
[128.27706909 -150.49777222]
[131.59931946 -165.12522888]
[117.37802887 -169.93757629]
[103.72692108 -176.18667603]
[90.79071045 -183.80630493]
[78.70654297 -192.71566772]
[67.60250854 -202.82034302]
[57.59631348 -214.01319885]
[48.79403305 -226.17559814]
[41.28897476 -239.17860413]
[35.16069412 -252.88436890]
[30.47416115 -267.14764404]
[27.27905083 -281.81716919]
[25.60923386 -296.73748779]
[25.48241043 -311.75039673]
[26.89992714 -326.69680786]
[29.84675407 -341.41821289]
[34.29165649 -355.75860596]
[40.18751526 -369.56594849]
[47.47183228 -382.69390869]
[56.06738281 -395.00326538]
[65.88305664 -406.36358643]
[76.81480408 -416.65438843]
[88.74673462 -425.76663208]
[101.55236816 -433.60372925]
[115.09595490 -440.08255005]
[129.23391724 -445.13446045]
[143.81640625 -448.70590210]
[158.68882751 -450.75897217]
[173.69352722 -451.27197266]
[188.67143250 -450.23944092]
[203.46379089 -447.67230225]
[217.91378784 -443.59777832]
[231.86824036 -438.05905151]
[245.17922974 -431.11486816]
[257.70562744 -422.83880615]
[269.31469727 -413.31863403]
[279.88333130 -402.65524292]
[289.29953003 -390.96166992]
[297.46343994 -378.36190796]
[304.28854370 -364.98947144]
[309.70245361 -350.98611450]
[313.64785767 -336.50033569]
[316.08285522 -321.68566895]
[316.98168945 -306.69912720]
[316.33477783 -291.69961548]
[314.14901733 -276.84609985]
[310.44757080 -262.29608154]
[305.26968384 -248.20376587]
[298.67022705 -234.71855164]
[290.71917725 -221.98336792]
[281.50079346 -210.13325500]
[271.11279297 -199.29379272]
[259.66534424 -189.57991028]
[247.27973938 -181.09455872]
[234.08729553 -173.92771912]
[220.22787476 -168.15533447]
[205.84838867 -163.83859253]
[191.10124207 -161.02328491]
[176.14279175 -159.73922729]
[161.13160706 -160.00004578]
[146.22679138 -161.80297852]
[142.90452576 -147.17550659]
[139.58226013 -132.54804993]
[136.26000977 -117.92059326]
[132.93774414 -103.29312897]
[143.54884338 -94.69535828]
[149.44863892 -82.30499268]
[149.43431091 -68.51554871]
[143.45161438 -56.01811600]
[132.61669922 -47.27622604]
[119.00820160 -44.04022980]
[115.46852875 -29.46385574]
[111.92885590 -14.88748074]
[108.38918304 -0.31110492]
[106.71764374 14.59546947]
[106.94097137 29.59380722]
[107.16429901 44.59214401]
[107.38762665 59.59048080]
[107.61095428 74.58882141]
[107.83428192 89.58715820]
[114.27145386 76.03862000]
[123.62248230 64.31009674]
[135.39683533 55.01684189]
[148.97685242 48.64636230]
[163.65016174 45.53284454]
[178.64703369 45.83961105]
[193.18074036 49.55057144]
[206.48889160 56.47105789]
[217.87336731 66.23803711]
[226.73693848 78.33914948]
[232.61466980 92.13959503]
[235.19822693 106.91542816]
[234.35205078 121.89154053]
[230.12055969 136.28231812]
[222.72570801 149.33283997]
[212.55543518 160.35852051]
[200.14324951 168.78096008]
[186.14024353 174.15832520]
[171.28102112 176.20855713]
[156.34504700 174.82408142]
[142.11584473 170.07752991]
[129.33984375 162.21791077]
[118.68724060 151.65750122]
[110.71686554 138.95030212]
[105.84680939 124.76288605]
[104.33258820 109.83785248]
[107.80068207 127.92248535]
[93.83911896 138.55458069]
[88.80220032 152.68360901]
[83.76528168 166.81263733]
[78.72837067 180.94168091]
[73.69145203 195.07070923]
[68.75985718 209.23683167]
[63.93386078 223.43930054]
[59.10786438 237.64175415]
[54.28186417 251.84420776]
[67.76994324 258.45480347]
[80.30191040 266.73599243]
[91.67198181 276.55178833]
[101.69344330 287.74102783]
[110.20174408 300.11990356]
[117.05715942 313.48522949]
[122.14711761 327.61749268]
[125.38804626 342.28460693]
[126.72672272 357.24575806]
[126.14116669 372.25527954]
[123.64098358 387.06668091]
[119.26723480 401.43673706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 198]
[36 197]
[37 196]
[38 195]
[40 194]
[41 193]
[42 192]
[43 191]
[44 190]
[47 188]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[71 156]
[72 155]
[73 154]
[74 153]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
