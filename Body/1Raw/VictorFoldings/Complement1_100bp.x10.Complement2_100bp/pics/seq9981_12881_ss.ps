%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[193.39649963 256.09582520]
[201.94822693 243.75357056]
[211.80583191 232.42701721]
[201.64228821 221.39514160]
[191.47872925 210.36326599]
[181.31518555 199.33139038]
[171.15164185 188.29951477]
[160.98809814 177.26762390]
[146.99987793 182.48864746]
[132.03790283 181.95492554]
[118.38327026 175.71667480]
[108.12965393 164.69619751]
[102.86235046 150.55160522]
[103.41320038 135.42747498]
[109.72938538 121.62959290]
[99.56583405 110.59770966]
[88.91982269 100.03066254]
[77.81259155 89.94952393]
[66.70536041 79.86838531]
[51.28652191 76.32295990]
[47.06225586 62.03993225]
[35.95502472 51.95879364]
[24.84778976 41.87765121]
[13.74055672 31.79651451]
[2.63332248 21.71537590]
[-8.47391129 11.63423634]
[-19.21049500 22.11583519]
[-30.56035614 31.93005180]
[-42.48207855 41.04106903]
[-54.93215942 49.41564941]
[-67.86517334 57.02323151]
[-81.23393250 63.83605576]
[-94.98963928 69.82926178]
[-109.08212280 74.98097992]
[-123.45993805 79.27241516]
[-138.07064819 82.68790436]
[-152.86090088 85.21499634]
[-167.77677917 86.84445190]
[-182.76380920 87.57033539]
[-197.76733398 87.38999939]
[-212.73258972 86.30410004]
[-227.60498047 84.31659698]
[-242.33023071 81.43475342]
[-256.85461426 77.66906738]
[-271.12512207 73.03328705]
[-285.08972168 67.54433441]
[-298.69741821 61.22223282]
[-311.89855957 54.09004974]
[-324.64495850 46.17381287]
[-336.89016724 37.50240707]
[-348.58944702 28.10747337]
[-359.70013428 18.02329063]
[-370.18170166 7.28665876]
[-379.99584961 -4.06324720]
[-389.10681152 -15.98501205]
[-397.48135376 -28.43513298]
[-405.08886719 -41.36818314]
[-411.90164185 -54.73696899]
[-417.89477539 -68.49270630]
[-423.04641724 -82.58521271]
[-427.33779907 -96.96305084]
[-430.75320435 -111.57376862]
[-433.28024292 -126.36404419]
[-434.90963745 -141.27992249]
[-435.63543701 -156.26695251]
[-435.45504761 -171.27047729]
[-434.36907959 -186.23573303]
[-432.38150024 -201.10810852]
[-429.49957275 -215.83335876]
[-425.73382568 -230.35772705]
[-421.09799194 -244.62821960]
[-415.60897827 -258.59277344]
[-409.28680420 -272.20043945]
[-402.15454102 -285.40155029]
[-394.23825073 -298.14791870]
[-385.56680298 -310.39309692]
[-376.17181396 -322.09231567]
[-366.08758545 -333.20297241]
[-355.35089111 -343.68447876]
[-344.00094604 -353.49859619]
[-332.07913208 -362.60949707]
[-319.62896729 -370.98394775]
[-306.69589233 -378.59143066]
[-293.32705688 -385.40411377]
[-279.57128906 -391.39718628]
[-265.47879028 -396.54879761]
[-251.10092163 -400.84008789]
[-236.49018860 -404.25543213]
[-221.69989014 -406.78237915]
[-206.78401184 -408.41171265]
[-191.79696655 -409.13745117]
[-176.79345703 -408.95697021]
[-161.82820129 -407.87094116]
[-146.95582581 -405.88330078]
[-132.23060608 -403.00131226]
[-117.70625305 -399.23550415]
[-103.43577576 -394.59957886]
[-89.47124481 -389.11050415]
[-75.86361694 -382.78826904]
[-62.66254425 -375.65597534]
[-49.91619110 -367.73962402]
[-37.67107391 -359.06808472]
[-25.97187424 -349.67306519]
[-14.86127853 -339.58877563]
[-4.37982845 -328.85205078]
[5.43422890 -317.50204468]
[14.54508305 -305.58020020]
[22.91948891 -293.13000488]
[30.52689171 -280.19686890]
[37.33952713 -266.82803345]
[43.33254242 -253.07223511]
[48.48406601 -238.97967529]
[52.77530289 -224.60180664]
[56.19058990 -209.99105835]
[58.71747208 -195.20074463]
[60.34672165 -180.28486633]
[61.07239914 -165.29782104]
[60.89185333 -150.29429626]
[59.80574417 -135.32905579]
[57.81803894 -120.45669556]
[54.93598175 -105.73148346]
[51.17009735 -91.20714569]
[46.53412247 -76.93669128]
[41.04497528 -62.97218704]
[34.72268295 -49.36458969]
[27.59031677 -36.16354752]
[19.67390251 -23.41723061]
[11.00232506 -11.17215443]
[1.60722768 0.52700287]
[12.71446133 10.60814190]
[23.82169533 20.68927956]
[34.92892838 30.77042007]
[46.03616333 40.85155869]
[57.14339447 50.93269730]
[71.76776886 53.75705719]
[76.78649902 68.76115417]
[87.89373016 78.84229279]
[99.00096130 88.92343140]
[99.35914612 73.92771149]
[110.12038422 63.47803116]
[125.12015533 63.56045532]
[135.76591492 74.12775421]
[135.95927429 89.12651062]
[125.58948517 99.96474457]
[110.59770966 100.43416595]
[120.76126099 111.46604156]
[135.02955627 106.29967499]
[150.14807129 106.98780060]
[163.81439209 113.39445496]
[173.95922852 124.51515961]
[179.05963135 138.63432312]
[178.36770630 153.58981323]
[172.01997375 167.10408020]
[182.18351746 178.13595581]
[192.34706116 189.16783142]
[202.51062012 200.19972229]
[212.67416382 211.23159790]
[222.83770752 222.26347351]
[234.93264771 213.36540222]
[247.93305969 205.85189819]
[261.68112183 199.81419373]
[276.00994873 195.32554626]
[290.74560547 192.44046021]
[305.70919800 191.19396973]
[320.71911621 191.60118103]
[335.59310913 193.65718079]
[350.15066528 197.33697510]
[364.21502686 202.59591675]
[377.61550903 209.37017822]
[390.18942261 217.57749939]
[401.78411865 227.11827087]
[412.25885010 237.87666321]
[421.48648071 249.72207642]
[429.35498047 262.51074219]
[435.76885986 276.08740234]
[440.65020752 290.28723145]
[443.93981934 304.93789673]
[445.59774780 319.86151123]
[445.60385132 334.87695312]
[443.95806885 349.80191040]
[440.68038940 364.45523071]
[435.81057739 378.65905762]
[429.40774536 392.24090576]
[421.54965210 405.03598022]
[412.33166504 416.88888550]
[401.86569214 427.65579224]
[390.27874756 437.20599365]
[377.71151733 445.42355347]
[364.31655884 452.20870972]
[350.25646973 457.47909546]
[335.70193481 461.17071533]
[320.82958984 463.23883057]
[305.82000732 463.65823364]
[290.85540771 462.42391968]
[276.11740112 459.55084229]
[261.78494263 455.07385254]
[248.03196716 449.04730225]
[235.02545166 441.54440308]
[222.92327881 432.65615845]
[211.87236023 422.49053955]
[202.00683594 411.17086792]
[193.44647217 398.83459473]
[186.29516602 385.63150024]
[180.63975525 371.72180176]
[176.54887390 357.27438354]
[174.07218933 342.46463013]
[173.23976135 327.47229004]
[174.06169128 312.47937012]
[176.52801514 297.66787720]
[180.60877991 283.21759033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[8 153]
[15 146]
[16 145]
[17 138]
[18 137]
[19 136]
[21 134]
[22 133]
[23 132]
[24 131]
[25 130]
[26 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
