%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[105.17018890 987.99597168]
[90.22605133 986.67694092]
[75.35079956 984.72906494]
[60.57089233 982.15588379]
[45.91259766 978.96191406]
[31.40198326 975.15277100]
[17.06484604 970.73535156]
[2.92667723 965.71746826]
[-10.98738575 960.10803223]
[-24.65260315 953.91699219]
[-38.04468155 947.15539551]
[-51.13980484 939.83520508]
[-63.91469574 931.96948242]
[-76.34663391 923.57226562]
[-88.41352844 914.65838623]
[-100.09391785 905.24371338]
[-111.36702728 895.34503174]
[-122.21282196 884.97991943]
[-132.61201477 874.16674805]
[-142.54612732 862.92486572]
[-151.99748230 851.27410889]
[-160.94927979 839.23535156]
[-169.38560486 826.82989502]
[-177.29145813 814.07983398]
[-184.65278625 801.00775146]
[-191.45649719 787.63702393]
[-197.69049072 773.99133301]
[-203.34368896 760.09503174]
[-208.40605164 745.97271729]
[-212.86854553 731.64953613]
[-216.72326660 717.15100098]
[-219.96336365 702.50280762]
[-222.58303833 687.73107910]
[-224.57768250 672.86199951]
[-225.94371033 657.92211914]
[-226.67871094 642.93786621]
[-226.78137207 627.93597412]
[-226.25152588 612.94311523]
[-225.09008789 597.98590088]
[-223.29914856 583.09094238]
[-220.88186646 568.28472900]
[-217.84257507 553.59356689]
[-214.18664551 539.04364014]
[-209.92057800 524.66070557]
[-205.05198669 510.47045898]
[-199.58950806 496.49804688]
[-193.54284668 482.76831055]
[-186.92277527 469.30572510]
[-179.74104309 456.13415527]
[-172.01042175 443.27706909]
[-163.74467468 430.75732422]
[-154.95848083 418.59713745]
[-145.66746521 406.81814575]
[-135.88815308 395.44134521]
[-125.63792419 384.48687744]
[-114.93500519 373.97430420]
[-103.79842377 363.92224121]
[-92.24798584 354.34860229]
[-80.30422211 345.27041626]
[-67.98836517 336.70379639]
[-55.32232666 328.66400146]
[-42.32861328 321.16528320]
[-29.03033257 314.22100830]
[-15.45112801 307.84353638]
[-1.61514091 302.04418945]
[12.45302677 296.83325195]
[26.72836304 292.22003174]
[41.18548584 288.21267700]
[55.79869461 284.81838989]
[70.54199982 282.04315186]
[85.38919830 279.89190674]
[100.31388855 278.36846924]
[99.42107391 263.39505005]
[98.52825165 248.42164612]
[97.63543701 233.44824219]
[88.79911041 225.18714905]
[87.93274689 212.71986389]
[96.04489899 202.69210815]
[95.37511444 187.70707703]
[94.70532227 172.72203064]
[94.03553772 157.73699951]
[93.36575317 142.75195312]
[90.50834656 138.92517090]
[90.02456665 133.26275635]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[89.51436615 54.26684952]
[88.53737640 50.44454575]
[88.82734680 46.90176010]
[90.13379669 44.01042938]
[92.10910797 42.02139282]
[92.66732025 27.03178215]
[93.11392975 12.03843212]
[93.56053162 -2.95491767]
[94.00714111 -17.94826698]
[94.45374298 -32.94161606]
[80.88177490 -39.92476654]
[71.69057465 -52.11019516]
[68.70507812 -67.07847595]
[72.51804352 -81.85765076]
[82.37240601 -93.51330566]
[96.31158447 -99.73119354]
[111.56793213 -99.27675629]
[125.11230469 -92.24021912]
[134.25544739 -80.01868439]
[137.18197632 -65.03876495]
[133.31083679 -50.27471542]
[123.41064453 -38.65795898]
[109.44709778 -32.49501038]
[109.00048828 -17.50166130]
[108.55388641 -2.50831175]
[108.10727692 12.48503876]
[107.66066742 27.47838783]
[110.60363007 34.25782776]
[107.09414673 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.35079193 142.08216858]
[109.02057648 157.06721497]
[109.69036102 172.05224609]
[110.36015320 187.03729248]
[111.02993774 202.02232361]
[121.29741669 217.30827332]
[112.60884857 232.55543518]
[113.50166321 247.52883911]
[114.39447784 262.50222778]
[115.28729248 277.47564697]
[130.28726196 277.21475220]
[145.28489685 277.58645630]
[160.25352478 278.59008789]
[175.16653442 280.22384644]
[189.99742126 282.48480225]
[204.71980286 285.36898804]
[219.30751038 288.87127686]
[233.73460388 292.98541260]
[247.97543335 297.70407104]
[262.00469971 303.01889038]
[275.79742432 308.92037964]
[289.32910156 315.39810181]
[302.57565308 322.44052124]
[315.51354980 330.03509521]
[328.11981201 338.16836548]
[340.37197876 346.82580566]
[352.24829102 355.99206543]
[363.72760010 365.65084839]
[374.78955078 375.78497314]
[385.41445923 386.37643433]
[395.58340454 397.40637207]
[405.27832031 408.85519409]
[414.48196411 420.70257568]
[423.17800903 432.92736816]
[431.35095215 445.50793457]
[438.98629761 458.42181396]
[446.07040405 471.64611816]
[452.59075928 485.15731812]
[458.53573608 498.93136597]
[463.89474487 512.94378662]
[468.65826416 527.16967773]
[472.81784058 541.58374023]
[476.36608887 556.16033936]
[479.29666138 570.87353516]
[481.60440063 585.69720459]
[483.28515625 600.60504150]
[484.33593750 615.57043457]
[484.75491333 630.56677246]
[484.54132080 645.56750488]
[483.69552612 660.54589844]
[482.21908569 675.47528076]
[480.11453247 690.32916260]
[477.38568115 705.08117676]
[474.03738403 719.70495605]
[470.07556152 734.17462158]
[465.50726318 748.46441650]
[460.34060669 762.54888916]
[454.58480835 776.40307617]
[448.25006104 790.00225830]
[441.34768677 803.32232666]
[433.88989258 816.33953857]
[425.88998413 829.03082275]
[417.36215210 841.37359619]
[408.32156372 853.34582520]
[398.78430176 864.92633057]
[388.76736450 876.09448242]
[378.28848267 886.83044434]
[367.36633301 897.11505127]
[356.02032471 906.93011475]
[344.27066040 916.25817871]
[332.13818359 925.08258057]
[319.64447021 933.38763428]
[306.81176758 941.15869141]
[293.66287231 948.38183594]
[280.22116089 955.04418945]
[266.51052856 961.13403320]
[252.55537415 966.64044189]
[238.38049316 971.55364990]
[224.01107788 975.86492920]
[209.47270203 979.56665039]
[194.79118347 982.65216064]
[179.99264526 985.11596680]
[165.10340881 986.95379639]
[150.14991760 988.16223145]
[135.15878296 988.73925781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 135]
[73 134]
[74 133]
[75 132]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[85 125]
[86 124]
[88 122]
[89 121]
[90 120]
[95 119]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
