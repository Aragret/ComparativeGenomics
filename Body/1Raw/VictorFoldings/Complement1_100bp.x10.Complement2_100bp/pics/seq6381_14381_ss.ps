%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[88.44815826 908.76074219]
[73.48632050 907.65747070]
[58.58792496 905.89349365]
[43.78213882 903.47216797]
[29.09794807 900.39831543]
[14.56409740 896.67797852]
[0.20903490 892.31835938]
[-13.93913651 887.32806396]
[-27.85272217 881.71679688]
[-41.50448608 875.49560547]
[-54.86770248 868.67663574]
[-67.91621399 861.27325439]
[-80.62447357 853.29992676]
[-92.96761322 844.77227783]
[-104.92145538 835.70697021]
[-116.46261597 826.12182617]
[-127.56848907 816.03552246]
[-138.21734619 805.46783447]
[-148.38833618 794.43945312]
[-158.06155396 782.97198486]
[-167.21804810 771.08789062]
[-175.83990479 758.81036377]
[-183.91024780 746.16345215]
[-191.41328430 733.17199707]
[-198.33432007 719.86132812]
[-204.65980530 706.25756836]
[-210.37734985 692.38732910]
[-215.47578430 678.27777100]
[-219.94509888 663.95648193]
[-223.77656555 649.45153809]
[-226.96267700 634.79132080]
[-229.49720764 620.00451660]
[-231.37518311 605.12005615]
[-232.59292603 590.16705322]
[-233.14805603 575.17486572]
[-233.03948975 560.17279053]
[-232.26744080 545.19024658]
[-230.83340454 530.25646973]
[-228.74021912 515.40075684]
[-225.99194336 500.65213013]
[-222.59399414 486.03955078]
[-218.55299377 471.59155273]
[-213.87687683 457.33645630]
[-208.57476807 443.30215454]
[-202.65707397 429.51611328]
[-196.13537598 416.00534058]
[-189.02243042 402.79626465]
[-181.33215332 389.91473389]
[-173.07962036 377.38598633]
[-164.28097534 365.23452759]
[-154.95343018 353.48416138]
[-145.11526489 342.15789795]
[-134.78573608 331.27789307]
[-123.98504639 320.86544800]
[-112.73435974 310.94091797]
[-101.05567932 301.52380371]
[-88.97188568 292.63244629]
[-76.50662231 284.28433228]
[-63.68429565 276.49575806]
[-50.53000641 269.28198242]
[-37.06949997 262.65713501]
[-23.32912636 256.63418579]
[-9.33578777 251.22488403]
[4.88312626 246.43986511]
[19.29977989 242.28848267]
[33.88595581 238.77885437]
[48.61309433 235.91786194]
[63.45236969 233.71110535]
[78.37473297 232.16288757]
[93.35097504 231.27626038]
[93.12764740 216.27792358]
[92.90431976 201.27958679]
[92.68099213 186.28125000]
[84.75505829 173.67059326]
[92.28604126 159.75674438]
[92.06271362 144.75840759]
[89.32051086 140.84825134]
[89.00553131 135.17393494]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[84.69254303 105.48278046]
[84.95262909 93.83917236]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[93.82607269 55.36971283]
[94.27268219 40.37636566]
[94.71928406 25.38301468]
[95.16589355 10.38966465]
[95.61249542 -4.60368586]
[96.05910492 -19.59703636]
[96.50570679 -34.59038544]
[89.18272400 -48.61480713]
[97.29553223 -61.10606766]
[97.40719604 -76.10565186]
[97.18386841 -91.10398865]
[96.96054077 -106.10232544]
[96.73721313 -121.10066223]
[96.51388550 -136.09899902]
[82.49436188 -142.04650879]
[72.11071014 -153.18652344]
[67.16196442 -167.58894348]
[68.50551605 -182.75846863]
[75.90859222 -196.06690979]
[88.08856201 -205.20846558]
[102.93517303 -208.59933472]
[117.87616730 -205.65200806]
[130.32292175 -196.87715149]
[138.11894226 -183.79502869]
[139.91355896 -168.67222595]
[135.39581299 -154.12884521]
[125.34844971 -142.68461609]
[111.51222229 -136.32232666]
[111.73554993 -121.32398987]
[111.95887756 -106.32565308]
[112.18220520 -91.32731628]
[112.40553284 -76.32897949]
[114.66732025 -73.62405396]
[115.73133087 -69.68921661]
[115.03375244 -65.09936523]
[112.28887939 -60.65946198]
[119.64381409 -47.70746613]
[111.49906158 -34.14377975]
[111.05245209 -19.15042877]
[110.60585022 -4.15707970]
[110.15924072 10.83627033]
[109.71263123 25.82962036]
[109.26602936 40.82297134]
[108.81941986 55.81631851]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[116.25568390 100.36310577]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[107.06105042 144.53507996]
[107.28437805 159.53341675]
[115.22628021 173.21685791]
[107.67932892 186.05792236]
[107.90265656 201.05625916]
[108.12598419 216.05459595]
[108.34931183 231.05293274]
[123.34531403 231.49327087]
[138.30715942 232.59649658]
[153.20556641 234.36045837]
[168.01135254 236.78170776]
[182.69555664 239.85548401]
[197.22941589 243.57579041]
[211.58450317 247.93534851]
[225.73269653 252.92559814]
[239.64630127 258.53680420]
[253.29808044 264.75793457]
[266.66131592 271.57687378]
[279.70986938 278.98022461]
[292.41815186 286.95349121]
[304.76132202 295.48110962]
[316.71520996 304.54635620]
[328.25637817 314.13150024]
[339.36230469 324.21774292]
[350.01119995 334.78540039]
[360.18222046 345.81372070]
[369.85546875 357.28115845]
[379.01202393 369.16525269]
[387.63394165 381.44271851]
[395.70431519 394.08956909]
[403.20739746 407.08102417]
[410.12847900 420.39163208]
[416.45401001 433.99539185]
[422.17160034 447.86560059]
[427.27008057 461.97515869]
[431.73947144 476.29641724]
[435.57098389 490.80136108]
[438.75714111 505.46157837]
[441.29171753 520.24841309]
[443.16976929 535.13287354]
[444.38754272 550.08581543]
[444.94274902 565.07800293]
[444.83422852 580.08007812]
[444.06222534 595.06268311]
[442.62826538 609.99639893]
[440.53512573 624.85217285]
[437.78689575 639.60076904]
[434.38900757 654.21337891]
[430.34805298 668.66137695]
[425.67199707 682.91650391]
[420.36993408 696.95080566]
[414.45230103 710.73687744]
[407.93063354 724.24768066]
[400.81774902 737.45678711]
[393.12750244 750.33831787]
[384.87503052 762.86712646]
[376.07641602 775.01861572]
[366.74893188 786.76898193]
[356.91079712 798.09527588]
[346.58129883 808.97534180]
[335.78067017 819.38781738]
[324.52999878 829.31237793]
[312.85134888 838.72955322]
[300.76760864 847.62091064]
[288.30236816 855.96911621]
[275.48007202 863.75775146]
[262.32580566 870.97155762]
[248.86532593 877.59643555]
[235.12496948 883.61944580]
[221.13165283 889.02880859]
[206.91275024 893.81384277]
[192.49610901 897.96533203]
[177.90995789 901.47497559]
[163.18283081 904.33605957]
[148.34355164 906.54284668]
[133.42120361 908.09112549]
[118.44496155 908.97778320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 140]
[71 139]
[72 138]
[73 137]
[75 135]
[76 134]
[79 133]
[80 132]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[93 120]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
