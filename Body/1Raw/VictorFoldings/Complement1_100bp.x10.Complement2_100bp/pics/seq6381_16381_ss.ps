%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[11.41081905 504.62863159]
[9.61202717 519.54437256]
[5.79889917 534.07617188]
[0.04247275 547.95336914]
[-7.55001402 560.91748047]
[-16.83711815 572.72692871]
[-27.64582443 583.16180420]
[-39.77477646 592.02758789]
[-52.99801636 599.15917969]
[-67.06920624 604.42370605]
[-81.72620392 607.72314453]
[-96.69596863 608.99591064]
[-111.69960785 608.21844482]
[-126.45762634 605.40515137]
[-140.69508362 600.60839844]
[-154.14674377 593.91760254]
[-166.56201172 585.45745850]
[-177.70959473 575.38543701]
[-187.38183594 563.88928223]
[-195.39854431 551.18310547]
[-201.61035156 537.50366211]
[-205.90155029 523.10577393]
[-208.19219971 508.25769043]
[-208.43963623 493.23593140]
[-206.63922119 478.32043457]
[-202.82452393 463.78903198]
[-197.06660461 449.91241455]
[-189.47270203 436.94915771]
[-180.18432617 425.14068604]
[-169.37448120 414.70703125]
[-157.24458313 405.84255981]
[-144.02056885 398.71240234]
[-129.94880676 393.44937134]
[-115.29145050 390.15155029]
[-100.32154846 388.88034058]
[-85.31799316 389.65945435]
[-70.56028748 392.47439575]
[-56.32334900 397.27264404]
[-49.64315414 383.84228516]
[-42.96295929 370.41189575]
[-36.28276443 356.98153687]
[-29.60256958 343.55114746]
[-22.92237473 330.12075806]
[-16.54376984 316.54455566]
[-10.46993542 302.82928467]
[-4.39610147 289.11404419]
[1.67773247 275.39877319]
[7.75156641 261.68350220]
[13.82540035 247.96823120]
[1.47050428 256.47448730]
[-13.26093388 259.30023193]
[-27.88640785 255.96922302]
[-39.94126892 247.04284668]
[-47.39405823 234.02531433]
[-48.98885345 219.11033630]
[-44.45690155 204.81134033]
[-34.56192017 193.53794861]
[-20.97138023 187.18994141]
[-5.97553158 186.83705139]
[7.89856291 192.53877258]
[18.31287575 203.33422852]
[23.51240921 217.40423584]
[22.62051964 232.37931824]
[23.57640839 217.51541138]
[37.82704544 210.64302063]
[46.42560959 198.35217285]
[55.02417374 186.06134033]
[63.62273788 173.77050781]
[70.50215149 160.44107056]
[75.53907013 146.31204224]
[80.57598114 132.18301392]
[85.61289978 118.05398560]
[90.64981842 103.92495728]
[90.17504120 95.87839508]
[95.86833191 89.62400818]
[101.11505127 75.57154083]
[105.51605225 61.23169327]
[109.05572510 46.65531921]
[112.59539795 32.07894135]
[116.13507080 17.50256729]
[119.67474365 2.92619133]
[123.21441650 -11.65018368]
[110.95386505 -3.00848699]
[95.95419312 -3.10845304]
[83.80991364 -11.91279697]
[79.05054474 -26.13771629]
[83.45119476 -40.47766876]
[95.37055206 -49.58420563]
[110.36297607 -50.06081390]
[122.83666992 -41.72972870]
[128.13931274 -27.69707680]
[133.38603210 -41.74954987]
[138.63275146 -55.80202103]
[143.87947083 -69.85449219]
[143.94943237 -78.98865509]
[149.31033325 -84.07614899]
[147.12187195 -99.74526978]
[158.95811462 -108.78699493]
[164.41346741 -122.75978851]
[151.46685791 -130.40057373]
[139.91366577 -140.01930237]
[130.05313110 -151.36680603]
[122.14067841 -164.14918518]
[116.38125610 -178.03533936]
[112.92404175 -192.66558838]
[111.85859680 -207.66094971]
[113.21250916 -222.63302612]
[116.95070648 -237.19400024]
[122.97637177 -250.96670532]
[131.13342285 -263.59442139]
[141.21055603 -274.75000000]
[152.94677734 -284.14456177]
[166.03807068 -291.53469849]
[180.14533997 -296.72903442]
[194.90318298 -299.59298706]
[209.92932129 -300.05239868]
[224.83456421 -298.09533691]
[239.23281860 -293.77255249]
[252.75112915 -287.19598389]
[265.03933716 -278.53594971]
[275.77917480 -268.01681519]
[284.69241333 -255.91102600]
[291.54821777 -242.53215027]
[296.16897583 -228.22674561]
[298.43502808 -213.36534119]
[298.28762817 -198.33290100]
[295.73065186 -183.51878357]
[290.83032227 -169.30671692]
[283.71353149 -156.06483459]
[274.56463623 -144.13612366]
[263.62063599 -133.82955933]
[251.16500854 -125.41213226]
[237.52035522 -119.10186005]
[223.04011536 -115.06218719]
[208.09936523 -113.39775848]
[193.08511353 -114.15167999]
[178.38626099 -117.30443573]
[172.93090820 -103.33163452]
[175.50956726 -88.66194916]
[163.28312683 -78.62079620]
[157.93194580 -64.60777283]
[152.68522644 -50.55530167]
[147.43850708 -36.50283051]
[142.19178772 -22.45035934]
[137.79078674 -8.11051178]
[134.25111389 6.46586370]
[130.71144104 21.04223824]
[127.17176819 35.61861420]
[123.63209534 50.19498825]
[120.09242249 64.77136230]
[132.35298157 56.12966919]
[147.35264587 56.22963333]
[159.49691772 65.03398132]
[164.25630188 79.25889587]
[159.85563660 93.59884644]
[147.93629456 102.70538330]
[132.94386292 103.18199158]
[120.47016907 94.85091400]
[115.16752625 80.81826019]
[109.92080688 94.87072754]
[104.77884674 108.96186829]
[99.74192810 123.09089661]
[94.70501709 137.21992493]
[89.66809845 151.34895325]
[84.63117981 165.47798157]
[95.68307495 155.33621216]
[109.30180359 149.04890442]
[124.18931580 147.21533203]
[138.92663574 150.01025391]
[152.10906982 157.16729736]
[162.48019409 168.00427246]
[169.05146790 181.48826599]
[171.19656372 196.33409119]
[168.71102905 211.12673950]
[161.83177185 224.45625305]
[151.21447754 235.05213928]
[137.87110901 241.90449524]
[123.07349396 244.36018372]
[108.23202515 242.18513489]
[94.76130676 235.58666992]
[83.94527435 225.19372559]
[76.81484985 211.99685669]
[74.04965973 197.25393677]
[75.91357422 182.36906433]
[67.31501007 194.65989685]
[58.71644974 206.95074463]
[50.11788559 219.24157715]
[48.54696655 234.98460388]
[34.91135788 240.97787476]
[27.54066658 254.04206848]
[21.46683311 267.75732422]
[15.39299965 281.47259521]
[9.31916523 295.18786621]
[3.24533129 308.90313721]
[-2.82850266 322.61840820]
[-2.27081919 327.80841064]
[-3.62434292 332.24926758]
[-6.28367424 335.33843994]
[-9.49199867 336.80096436]
[-16.17219353 350.23135376]
[-22.85238838 363.66171265]
[-29.53258324 377.09210205]
[-36.21277618 390.52246094]
[-42.89297104 403.95285034]
[-30.47678566 412.41168213]
[-19.32810402 422.48248291]
[-9.65462112 433.97756958]
[-1.63654709 446.68286133]
[4.57674551 460.36163330]
[8.86950684 474.75906372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[63 189]
[65 187]
[66 186]
[67 185]
[68 184]
[69 165]
[70 164]
[71 163]
[72 162]
[73 161]
[75 160]
[76 159]
[77 150]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[91 144]
[92 143]
[93 142]
[94 141]
[96 140]
[98 138]
[99 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
