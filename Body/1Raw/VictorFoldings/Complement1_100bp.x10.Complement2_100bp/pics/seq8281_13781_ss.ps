%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[196.28216553 386.60855103]
[203.59599304 373.48266602]
[212.70346069 361.53131104]
[223.41914368 350.99780273]
[235.52487183 342.09655762]
[228.44776917 328.87103271]
[221.37066650 315.64550781]
[214.29354858 302.41998291]
[207.21644592 289.19445801]
[200.13934326 275.96893311]
[193.06224060 262.74337769]
[185.98513794 249.51786804]
[183.34442139 248.57723999]
[180.91719055 246.53392029]
[179.12530518 243.46397400]
[178.35533142 239.59465027]
[178.90715027 235.28775024]
[172.62979126 221.66442871]
[166.35243225 208.04110718]
[158.78805542 195.08811951]
[150.00744629 182.92665100]
[141.22683716 170.76519775]
[132.44624329 158.60374451]
[123.66563416 146.44229126]
[111.77768707 144.20549011]
[104.36289215 134.14544678]
[105.83525848 121.33158875]
[97.23669434 109.04074860]
[92.41217804 106.98210144]
[89.08452606 102.36690521]
[88.57151031 96.25350189]
[80.34270477 83.71209717]
[72.11389923 71.17070007]
[63.88508987 58.62929916]
[49.98013687 60.15085983]
[36.83886719 55.55486679]
[27.00699615 45.79204941]
[22.36306953 32.80809784]
[23.75968170 19.15605545]
[30.86756706 7.49436378]
[22.82639313 -5.16816139]
[10.43109989 -8.73460102]
[3.99427247 -19.44679070]
[6.49909401 -31.28116608]
[-1.35266137 -44.06200790]
[-9.20441723 -56.84284973]
[-17.05617142 -69.62369537]
[-24.90792847 -82.40453339]
[-32.75968170 -95.18537903]
[-47.87009430 -98.96866608]
[-55.65082169 -112.04211426]
[-51.95091248 -126.42426300]
[-59.80266953 -139.20510864]
[-67.65442657 -151.98594666]
[-75.50617981 -164.76678467]
[-81.12846375 -168.24551392]
[-83.75556183 -173.28488159]
[-83.39488220 -178.04713440]
[-90.86262512 -191.05607605]
[-98.33036804 -204.06503296]
[-105.79811096 -217.07398987]
[-119.58839417 -211.13043213]
[-133.96630859 -206.79762268]
[-148.74441528 -204.13204956]
[-163.73005676 -203.16845703]
[-178.72784424 -203.91941833]
[-193.54226685 -206.37513733]
[-207.98019409 -210.50361633]
[-221.85337830 -216.25099182]
[-234.98097229 -223.54237366]
[-247.19181824 -232.28268433]
[-258.32672119 -242.35797119]
[-268.24053955 -253.63690186]
[-276.80398560 -265.97241211]
[-283.90545654 -279.20370483]
[-289.45233154 -293.15826416]
[-293.37234497 -307.65417480]
[-295.61434937 -322.50244141]
[-296.14910889 -337.50952148]
[-294.96969604 -352.47970581]
[-292.09146118 -367.21786499]
[-287.55194092 -381.53186035]
[-281.41030884 -395.23507690]
[-273.74661255 -408.14883423]
[-264.66079712 -420.10482788]
[-254.27128601 -430.94714355]
[-242.71354675 -440.53445435]
[-230.13825989 -448.74176025]
[-216.70936584 -455.46206665]
[-202.60192871 -460.60775757]
[-187.99987793 -464.11175537]
[-173.09358215 -465.92834473]
[-158.07736206 -466.03387451]
[-143.14700317 -464.42697144]
[-128.49714661 -461.12860107]
[-114.31877899 -456.18170166]
[-100.79675293 -449.65081787]
[-88.10734558 -441.62109375]
[-76.41599274 -432.19717407]
[-65.87511444 -421.50195312]
[-56.62213898 -409.67486572]
[-48.77769470 -396.87008667]
[-42.44404602 -383.25454712]
[-37.70376968 -369.00576782]
[-34.61866379 -354.30950928]
[-33.22894669 -339.35739136]
[-33.55273819 -324.34429932]
[-35.58581543 -309.46597290]
[-39.30167770 -294.91638184]
[-44.65187454 -280.88525391]
[-51.56666183 -267.55545044]
[-59.95588303 -255.10078430]
[-69.71017456 -243.68362427]
[-80.70236969 -233.45280457]
[-92.78915405 -224.54173279]
[-85.32141876 -211.53277588]
[-77.85367584 -198.52381897]
[-70.38593292 -185.51487732]
[-62.72533798 -172.61854553]
[-54.87358093 -159.83770752]
[-47.02182388 -147.05685425]
[-39.17007065 -134.27601624]
[-24.66857147 -131.07568359]
[-16.52370834 -118.22593689]
[-19.97883987 -103.03713226]
[-12.12708473 -90.25629425]
[-4.27532959 -77.47544861]
[3.57642579 -64.69460297]
[11.42818165 -51.91376495]
[19.27993584 -39.13292313]
[35.13949966 -31.62018585]
[35.48891830 -13.20933437]
[43.53009033 -0.54680926]
[59.65320587 -1.62273991]
[74.20265961 5.62082815]
[83.16515350 19.29162216]
[84.01529694 35.71029663]
[76.42649078 50.40048981]
[84.65529633 62.94189072]
[92.88410187 75.48329163]
[101.11291504 88.02468872]
[109.52753448 100.44218445]
[118.12609863 112.73302460]
[134.98803711 120.13276672]
[135.82708740 137.66168213]
[144.60769653 149.82313538]
[153.38830566 161.98460388]
[162.16889954 174.14605713]
[170.94950867 186.30751038]
[169.83453369 171.34899902]
[174.82337952 157.20292664]
[185.07530212 146.25314331]
[198.86270142 140.34486389]
[213.86215210 140.47377014]
[227.54597473 146.61811829]
[237.60821533 157.74247742]
[242.35319519 171.97219849]
[240.98132324 186.90933228]
[233.72375488 200.03671265]
[221.80354309 209.14212036]
[207.22944641 212.69116211]
[192.45745850 210.08573914]
[179.97573853 201.76374817]
[186.25311279 215.38706970]
[192.53047180 229.01037598]
[199.21066284 242.44076538]
[206.28776550 255.66629028]
[213.36486816 268.89181519]
[220.44197083 282.11734009]
[227.51908875 295.34286499]
[234.59619141 308.56838989]
[241.67329407 321.79391479]
[248.75039673 335.01943970]
[262.87231445 329.88601685]
[277.58108521 326.81469727]
[292.57723999 325.86795044]
[307.55548096 327.06515503]
[322.21084595 330.38183594]
[336.24502563 335.75054932]
[349.37225342 343.06195068]
[361.32528687 352.16717529]
[371.86080933 362.88088989]
[380.76428223 374.98498535]
[387.85449219 388.23300171]
[392.98703003 402.35522461]
[396.05746460 417.06417847]
[397.00326538 432.06039429]
[395.80514526 447.03854370]
[392.48754883 461.69372559]
[387.11798096 475.72756958]
[379.80575562 488.85433960]
[370.69979858 500.80682373]
[359.98541260 511.34167480]
[347.88076782 520.24438477]
[334.63232422 527.33380127]
[320.50976562 532.46545410]
[305.80062866 535.53497314]
[290.80435181 536.47985840]
[275.82626343 535.28082275]
[261.17129517 531.96228027]
[247.13780212 526.59185791]
[234.01147461 519.27886963]
[222.05955505 510.17211914]
[211.52537537 499.45709229]
[202.62338257 487.35192871]
[195.53483582 474.10302734]
[190.40402222 459.98013306]
[187.33541870 445.27081299]
[186.39147949 430.27450562]
[187.59144592 415.29647827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[17 165]
[18 164]
[19 163]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[27 143]
[28 142]
[31 141]
[32 140]
[33 139]
[34 138]
[40 133]
[41 132]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[49 125]
[52 122]
[53 121]
[54 120]
[55 119]
[58 118]
[59 117]
[60 116]
[61 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
