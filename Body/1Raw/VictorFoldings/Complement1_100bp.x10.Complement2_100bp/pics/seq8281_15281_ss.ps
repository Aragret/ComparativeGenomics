%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[153.89312744 582.45074463]
[144.97843933 570.37805176]
[137.01408386 557.65826416]
[130.04678345 544.36621094]
[124.11743164 530.57977295]
[119.26082611 516.37994385]
[115.50546265 501.84994507]
[112.87339020 487.07513428]
[111.38004303 472.14221191]
[111.03419495 457.13876343]
[111.83786774 442.15289307]
[113.78634644 427.27249146]
[116.86819458 412.58489990]
[121.06533813 398.17633057]
[126.35313416 384.13134766]
[132.70054626 370.53231812]
[140.07034302 357.45910645]
[148.41926575 344.98843384]
[157.69831848 333.19342041]
[167.85304260 322.14334106]
[178.82386780 311.90304565]
[190.54637146 302.53259277]
[202.95179749 294.08697510]
[195.48405457 281.07803345]
[188.01631165 268.06906128]
[180.54858398 255.06011963]
[172.88798523 242.16380310]
[165.03622437 229.38294983]
[157.18446350 216.60211182]
[152.82989502 214.64079285]
[149.66119385 209.92312622]
[149.29576111 203.32177734]
[141.82801819 190.31282043]
[134.36027527 177.30386353]
[121.31373596 170.11798096]
[121.15361023 154.29757690]
[113.68586731 141.28863525]
[106.21812439 128.27967834]
[103.55057526 127.41809845]
[101.06358337 125.44795227]
[99.18109131 122.43271637]
[98.29625702 118.58803558]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[59.32096100 62.86632919]
[48.76610184 51.89142990]
[46.72172546 36.98222351]
[53.76420593 23.88484001]
[47.08401108 10.45446396]
[40.40381622 -2.97591162]
[33.72362518 -16.40628815]
[27.04342842 -29.83666420]
[13.96991634 -38.74698639]
[15.22952938 -53.58823395]
[15.13018131 -38.58856201]
[11.04078674 -24.15676308]
[3.25656343 -11.33467770]
[-7.66053915 -1.04794466]
[-20.92240524 5.96082783]
[-35.57165146 9.18566990]
[-50.55073547 8.39377880]
[-64.77829742 3.64232087]
[-77.22724915 -4.72569180]
[-86.99888611 -16.10616493]
[-93.38777924 -29.67753410]
[-95.93271637 -44.46006775]
[-94.44996643 -59.38660431]
[-89.04658508 -73.37957764]
[-80.11263275 -85.42883301]
[-68.29307556 -94.66452026]
[-54.44115829 -100.41990662]
[-39.55687332 -102.27951050]
[-24.71473122 -100.10906982]
[-10.98619556 -94.06529236]
[0.63765836 -84.58446503]
[9.31823349 -72.34999847]
[7.09311581 -87.18404388]
[4.86799860 -102.01808167]
[2.64288163 -116.85212708]
[0.41776446 -131.68617249]
[-1.80735266 -146.52021790]
[-4.03246975 -161.35426331]
[-13.73130035 -173.85398865]
[-7.96758127 -187.58821106]
[-10.19269848 -202.42225647]
[-25.20391273 -203.81037903]
[-39.44649506 -208.75126648]
[-52.09240341 -216.95762634]
[-62.40641785 -227.95237732]
[-69.78889465 -241.09629822]
[-73.81063080 -255.62519836]
[-74.23780823 -270.69439697]
[-71.04558563 -285.42779541]
[-64.41956329 -298.96881104]
[-54.74495697 -310.53021240]
[-42.58424377 -319.43978882]
[-28.64443207 -325.17956543]
[-13.73596191 -327.41583252]
[1.27440715 -326.01861572]
[15.51399231 -321.06909180]
[28.15492249 -312.85507202]
[38.46226883 -301.85406494]
[45.83678055 -288.70568848]
[49.84970856 -274.17434692]
[50.26774597 -259.10488892]
[47.06659317 -244.37341309]
[40.43235779 -230.83641052]
[30.75074577 -219.28089905]
[18.58463478 -210.37869263]
[4.64134502 -204.64736938]
[6.86646223 -189.81332397]
[16.40613747 -178.37463379]
[10.80157375 -163.57937622]
[13.02669144 -148.74533081]
[15.25180817 -133.91128540]
[17.47692490 -119.07724762]
[19.70204163 -104.24320221]
[21.92716026 -89.40915680]
[24.15227699 -74.57511139]
[28.65990639 -60.26842880]
[41.25560760 -52.31873703]
[40.47380447 -36.51685715]
[47.15399933 -23.08648300]
[53.83419418 -9.65610600]
[60.51438904 3.77426982]
[67.19458008 17.20464516]
[81.88856506 19.49042892]
[92.54505920 30.11602020]
[94.92932129 45.15492630]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[119.22707367 120.81193542]
[126.69481659 133.82089233]
[134.16255188 146.82983398]
[147.74324036 154.94621277]
[147.36923218 169.83612061]
[154.83697510 182.84507751]
[162.30471802 195.85403442]
[169.96531677 208.75035095]
[177.81706238 221.53120422]
[185.66882324 234.31204224]
[191.29110718 237.79075623]
[193.91821289 242.83013916]
[193.55752563 247.59237671]
[201.02526855 260.60134888]
[208.49301147 273.61029053]
[215.96075439 286.61923218]
[229.50976562 280.16580200]
[243.51303101 274.76846313]
[257.88836670 270.45889282]
[272.55142212 267.26242065]
[287.41616821 265.19778442]
[302.39532471 264.27706909]
[317.40100098 264.50573730]
[332.34515381 265.88238525]
[347.14004517 268.39898682]
[361.69891357 272.04074097]
[375.93627930 276.78628540]
[389.76858521 282.60775757]
[403.11468506 289.47103882]
[415.89624023 297.33578491]
[428.03826904 306.15591431]
[439.46945190 315.87960815]
[450.12277222 326.44982910]
[459.93569946 337.80456543]
[468.85058594 349.87713623]
[476.81518555 362.59671021]
[483.78274536 375.88867188]
[489.71237183 389.67498779]
[494.56924438 403.87475586]
[498.32489014 418.40466309]
[500.95724487 433.17941284]
[502.45086670 448.11230469]
[502.79699707 463.11575317]
[501.99362183 478.10165405]
[500.04541016 492.98208618]
[496.96383667 507.66970825]
[492.76696777 522.07836914]
[487.47943115 536.12347412]
[481.13229370 549.72259521]
[473.76272583 562.79595947]
[465.41406250 575.26678467]
[456.13522339 587.06195068]
[445.98071289 598.11224365]
[435.01007080 608.35278320]
[423.28775024 617.72344971]
[410.88247681 626.16925049]
[397.86709595 633.64068604]
[384.31796265 640.09393311]
[370.31457520 645.49096680]
[355.93914795 649.80023193]
[341.27603149 652.99645996]
[326.41128540 655.06085205]
[311.43209839 655.98126221]
[296.42642212 655.75231934]
[281.48229980 654.37536621]
[266.68743896 651.85845947]
[252.12864685 648.21643066]
[237.89137268 643.47064209]
[224.05917358 637.64886475]
[210.71319580 630.78540039]
[197.93179321 622.92034912]
[185.78994751 614.10003662]
[174.35893250 604.37609863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 153]
[24 152]
[25 151]
[26 150]
[27 147]
[28 146]
[29 145]
[32 144]
[33 143]
[34 142]
[36 140]
[37 139]
[38 138]
[43 137]
[45 135]
[46 134]
[47 133]
[51 129]
[52 128]
[53 127]
[54 126]
[55 125]
[57 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
