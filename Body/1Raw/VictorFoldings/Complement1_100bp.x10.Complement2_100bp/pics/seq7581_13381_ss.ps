%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[157.07295227 525.01263428]
[142.02157593 527.79016113]
[127.40689850 523.24371338]
[116.58727264 512.41809082]
[112.04897308 497.80090332]
[114.83485413 482.75106812]
[124.30474854 470.72695923]
[138.28254700 464.49157715]
[139.17535400 449.51818848]
[129.12754822 438.58303833]
[129.81968689 423.38516235]
[141.35757446 412.92022705]
[142.25039673 397.94683838]
[143.14320374 382.97341919]
[144.03602600 368.00003052]
[144.70581055 353.01498413]
[145.15242004 338.02163696]
[145.59901428 323.02828979]
[145.93399048 308.03201294]
[146.15731812 293.03369141]
[144.37486267 278.13995361]
[140.61856079 263.61791992]
[136.86225891 249.09585571]
[133.10595703 234.57379150]
[129.02629089 220.13923645]
[124.62528992 205.79939270]
[120.22428894 191.45954895]
[115.82329559 177.11968994]
[101.33955383 178.71485901]
[86.80991364 177.61343384]
[72.73214722 173.85314941]
[59.58850861 167.56282043]
[47.82927704 158.95794678]
[37.85729599 148.33331299]
[30.01418495 136.05287170]
[24.56862831 122.53735352]
[21.70718002 108.24975586]
[21.52786636 93.67953491]
[24.03683090 79.32584381]
[29.14811897 65.68039703]
[36.68663406 53.21066666]
[46.39412308 42.34383011]
[57.93802261 33.45216751]
[70.92287445 26.84027863]
[66.73586273 12.43649673]
[62.54885101 -1.96728504]
[58.25473022 -16.33949852]
[53.85372925 -30.67934418]
[49.45273209 -45.01919174]
[45.05173492 -59.35903931]
[40.65073776 -73.69888306]
[37.84606552 -58.96342468]
[30.68032074 -45.78571320]
[19.83649254 -35.42176819]
[6.34814644 -28.85941124]
[-8.49909496 -26.72412682]
[-23.29008675 -29.21943855]
[-36.61504364 -36.10750580]
[-47.20391846 -46.73180389]
[-54.04745102 -60.07969284]
[-56.49335098 -74.87893677]
[-54.30849457 -89.71896362]
[-47.70112991 -103.18531799]
[-37.30102539 -113.99446869]
[-24.09945488 -121.11617279]
[-9.35470963 -123.87161255]
[5.52783775 -121.99816895]
[19.12967682 -115.67440796]
[30.15436745 -105.50306702]
[37.55150604 -92.45255280]
[37.10490036 -107.44589996]
[36.65829468 -122.43924713]
[36.21168900 -137.43260193]
[35.76508331 -152.42594910]
[35.31847763 -167.41929626]
[22.36842728 -179.18006897]
[21.93928719 -196.33030701]
[33.80835724 -208.24516296]
[33.13856888 -223.23020935]
[32.46878433 -238.21524048]
[24.12299347 -251.65615845]
[31.28427315 -264.71621704]
[30.61448860 -279.70126343]
[29.94470215 -294.68630981]
[20.58367538 -282.96575928]
[6.15230989 -278.87484741]
[-7.96685266 -283.93933105]
[-16.50771332 -296.27035522]
[-16.28474236 -311.26870728]
[-7.38110256 -323.34036255]
[6.88236904 -327.98291016]
[21.18575096 -323.46481323]
[30.19461632 -311.47009277]
[31.31026459 -326.42852783]
[32.42591476 -341.38699341]
[33.54156113 -356.34542847]
[34.65721130 -371.30389404]
[20.45966339 -376.43539429]
[8.17372799 -385.20797729]
[-1.28889585 -396.97067261]
[-7.22601843 -410.85064697]
[-9.19706631 -425.81787109]
[-7.05577469 -440.76165771]
[-0.96104181 -454.57315063]
[8.63486290 -466.22738647]
[21.01985931 -474.85955811]
[35.27489853 -479.82910156]
[50.34216309 -480.76724243]
[65.10356140 -477.60437012]
[78.46369934 -470.57519531]
[89.43116760 -460.20132446]
[97.19210052 -447.25256348]
[101.17059326 -432.68978882]
[101.07141113 -417.59368896]
[96.90191650 -403.08444214]
[88.97151184 -390.23876953]
[77.86869049 -380.00991821]
[64.41734314 -373.15689087]
[49.61566544 -370.18823242]
[48.50001526 -355.22979736]
[47.38436508 -340.27133179]
[46.26871872 -325.31289673]
[45.15306854 -310.35443115]
[44.92974091 -295.35607910]
[45.59952545 -280.37106323]
[46.26931000 -265.38601685]
[54.56719589 -253.01692200]
[47.45382309 -238.88502502]
[48.12360764 -223.89999390]
[48.79339600 -208.91494751]
[59.42544174 -201.63558960]
[63.99171829 -189.37870789]
[60.61518097 -176.54089355]
[50.31182480 -167.86590576]
[50.75843430 -152.87255859]
[51.20503998 -137.87921143]
[51.65164566 -122.88585663]
[52.09825134 -107.89250183]
[52.54485703 -92.89915466]
[54.99058533 -78.09988403]
[59.39158249 -63.76003647]
[63.79257965 -49.42018890]
[68.19358063 -35.08034134]
[72.59457397 -20.74049568]
[77.56222534 -15.26836300]
[76.95263672 -6.15429640]
[81.13964844 8.24948597]
[85.32666016 22.65326691]
[100.64906311 21.27641678]
[115.94668579 22.90572548]
[130.63536072 27.47897720]
[144.15419006 34.82154083]
[155.98692322 44.65302277]
[165.68173218 56.59800339]
[172.86840820 70.20034027]
[177.27249146 84.94062042]
[178.72584534 100.25595856]
[177.17294312 115.56153107]
[172.67309570 130.27285767]
[165.39813232 143.82817078]
[155.62585449 155.70986938]
[143.72943115 165.46420288]
[130.16314697 172.71870422]
[134.56413269 187.05854797]
[138.96513367 201.39839172]
[143.36613464 215.73823547]
[147.18873596 219.29278564]
[149.07682800 223.53405762]
[149.09277344 227.61018372]
[147.62802124 230.81748962]
[151.38432312 245.33955383]
[155.14060974 259.86160278]
[158.89691162 274.38366699]
[162.35676575 259.78814697]
[170.10377502 246.94354248]
[181.39956665 237.07412720]
[195.16748047 231.12060547]
[210.09526062 229.65042114]
[224.76007080 232.80369568]
[237.76417542 240.27987671]
[247.86808777 251.36639404]
[254.10877991 265.00656128]
[255.89141846 279.90023804]
[253.04609680 294.62789917]
[245.84402466 307.78579712]
[234.97163391 318.11978149]
[221.46524048 324.64489746]
[206.61215210 326.73919678]
[191.82810974 324.20309448]
[178.52220154 317.27828979]
[167.96269226 306.62481689]
[161.15565491 293.25701904]
[160.93232727 308.25534058]
[163.93362427 316.88262939]
[160.59237671 323.47488403]
[160.14576721 338.46823120]
[159.69915771 353.46157837]
[162.49153137 359.45443726]
[161.92349243 365.10900879]
[159.00942993 368.89282227]
[158.11660767 383.86624146]
[157.22380066 398.83966064]
[156.33097839 413.81304932]
[166.54356384 425.57489014]
[165.42481995 440.74734497]
[154.14875793 450.41098022]
[153.25595093 465.38439941]
[166.39375305 473.23657227]
[174.36770630 486.30084229]
[175.34545898 501.57507324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[12 203]
[13 202]
[14 201]
[15 200]
[16 197]
[17 196]
[18 195]
[19 193]
[20 192]
[21 173]
[22 172]
[23 171]
[24 170]
[25 166]
[26 165]
[27 164]
[28 163]
[44 148]
[45 147]
[46 146]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[78 130]
[79 129]
[80 128]
[82 126]
[83 125]
[84 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
