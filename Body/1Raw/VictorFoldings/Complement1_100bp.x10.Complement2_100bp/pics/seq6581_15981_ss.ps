%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[102.57698822 567.26824951]
[88.10426331 571.26672363]
[73.28406525 573.67694092]
[58.29016113 574.47064209]
[43.29833603 573.63848877]
[28.48436356 571.19036865]
[14.02193069 567.15484619]
[0.08060351 561.57928467]
[-13.17616463 554.52911377]
[-25.59294510 546.08691406]
[-37.02415466 536.35168457]
[-47.33577347 525.43756104]
[-56.40689850 513.47253418]
[-64.13117981 500.59686279]
[-70.41804504 486.96151733]
[-75.19379425 472.72637939]
[-78.40243530 458.05831909]
[-80.00633240 443.12933350]
[-79.98670197 428.11444092]
[-78.34375763 413.18969727]
[-75.09677124 398.53009033]
[-70.28380585 384.30746460]
[-63.96129990 370.68862915]
[-56.20337296 357.83322144]
[-47.10098648 345.89193726]
[-36.76086044 335.00485229]
[-25.30422974 325.29953003]
[-12.86541271 316.88983154]
[0.40974826 309.87432861]
[14.36561012 304.33526611]
[28.83854675 300.33761597]
[43.65887070 297.92819214]
[58.65282059 297.13531494]
[73.64459991 297.96823120]
[76.09033203 283.16894531]
[70.53173065 269.35043335]
[80.41558838 256.99649048]
[82.86132050 242.19721985]
[85.30704498 227.39794922]
[87.53215790 212.56390381]
[89.53617859 197.69837952]
[91.54019165 182.83285522]
[93.54420471 167.96733093]
[95.54821777 153.10179138]
[95.88319397 138.10552979]
[94.54496002 123.16535187]
[93.20672607 108.22516632]
[90.43111420 93.48420715]
[86.24410248 79.08042145]
[82.05709076 64.67664337]
[77.87007904 50.27285767]
[73.68306732 35.86907578]
[69.49605560 21.46529388]
[58.21419907 10.37339306]
[62.09134293 -4.00774145]
[57.90433121 -18.41152382]
[53.71731949 -32.81530380]
[39.26755524 -38.15482330]
[30.83117294 -50.83081818]
[31.46899986 -65.86602020]
[40.72703934 -77.50331879]
[36.54002762 -91.90709686]
[32.35301590 -106.31088257]
[28.16600418 -120.71466064]
[23.97899246 -135.11843872]
[19.79198265 -149.52223206]
[16.55256462 -152.41362000]
[14.59827995 -155.84075928]
[13.93974495 -159.33386230]
[14.43391323 -162.46792603]
[15.81200314 -164.90904236]
[12.48974323 -179.53649902]
[9.16748428 -194.16395569]
[5.84522438 -208.79141235]
[2.52296495 -223.41888428]
[-0.79929459 -238.04634094]
[-4.12155390 -252.67379761]
[-19.10386848 -251.51272583]
[-34.09556961 -252.54554749]
[-48.77711105 -255.75027466]
[-62.83554840 -261.05859375]
[-75.97122955 -268.35733032]
[-87.90416718 -277.49093628]
[-98.38001251 -288.26473999]
[-107.17546082 -300.44906616]
[-114.10305023 -313.78421021]
[-119.01511383 -327.98596191]
[-121.80694580 -342.75158691]
[-122.41904449 -357.76635742]
[-120.83836365 -372.71023560]
[-117.09858704 -387.26467896]
[-111.27943420 -401.11947632]
[-103.50494385 -413.97927856]
[-93.94081879 -425.57003784]
[-82.79093170 -435.64465332]
[-70.29293823 -443.98840332]
[-56.71323395 -450.42340088]
[-42.34127045 -454.81256104]
[-27.48338509 -457.06222534]
[-12.45627785 -457.12454224]
[2.41974974 -454.99810791]
[16.82761383 -450.72830200]
[30.46020889 -444.40609741]
[43.02695465 -436.16629028]
[54.25999451 -426.18444824]
[63.91989136 -414.67340088]
[71.80074310 -401.87847900]
[77.73457336 -388.07241821]
[81.59489441 -373.54946899]
[83.29943848 -358.61923218]
[82.81185150 -343.59991455]
[80.14254761 -328.81164551]
[75.34841156 -314.56967163]
[68.53163147 -301.17752075]
[59.83750534 -288.92068481]
[49.45135498 -278.06039429]
[37.59455872 -268.82815552]
[24.51984787 -261.42074585]
[10.50590611 -255.99606323]
[13.82816601 -241.36859131]
[17.15042496 -226.74113464]
[20.47268486 -212.11367798]
[23.79494476 -197.48622131]
[27.11720276 -182.85874939]
[30.43946266 -168.23129272]
[34.19576263 -153.70924377]
[38.38277435 -139.30545044]
[42.56978607 -124.90167236]
[46.75679779 -110.49789429]
[50.94380951 -96.09410858]
[55.13082123 -81.69033051]
[69.18466187 -76.82952118]
[77.78314209 -64.47920990]
[77.45674133 -49.25597382]
[68.12110138 -37.00231552]
[72.30811310 -22.59853554]
[76.49512482 -8.19475269]
[87.47750092 1.86689317]
[83.89984131 17.27828217]
[88.08685303 31.68206406]
[92.27386475 46.08584595]
[96.46086884 60.48962784]
[100.64788055 74.89340973]
[104.83489227 89.29719543]
[108.80764771 74.83284760]
[118.25698090 63.18338394]
[131.59051514 56.31193161]
[146.56132507 55.37645721]
[160.64654541 60.53459930]
[171.47257996 70.91712952]
[177.21505737 84.77439880]
[176.90626526 99.77121735]
[170.59823608 113.38036346]
[159.35398865 123.30844879]
[145.06837463 127.88242340]
[130.14877319 126.33148193]
[117.10939789 118.91699982]
[108.14691162 106.88693237]
[109.48514557 121.82711792]
[110.82337952 136.76730347]
[117.05386353 123.12248230]
[127.74167633 112.59772491]
[141.48066711 106.57774353]
[156.46322632 105.85456085]
[170.71813965 110.52333832]
[182.36993408 119.96981049]
[189.88560486 132.95112610]
[192.27633667 147.75938416]
[189.22760010 162.44628906]
[181.14051819 175.07952881]
[169.07905579 183.99699402]
[154.63011169 188.02542114]
[139.69471741 186.63482666]
[126.23785400 180.00814819]
[116.03001404 169.01722717]
[110.41374207 155.10580444]
[108.40972900 169.97134399]
[106.40571594 184.83686829]
[104.40170288 199.70239258]
[102.39768982 214.56791687]
[104.55144501 220.81875610]
[103.39821625 226.38356018]
[100.10631561 229.84367371]
[97.66059113 244.64294434]
[95.21485901 259.44223022]
[100.59852600 274.31927490]
[90.88960266 285.61468506]
[88.44387054 300.41394043]
[102.90652466 304.44866943]
[116.84815216 310.02346802]
[130.10530090 317.07293701]
[142.52253723 325.51449585]
[153.95426941 335.24908447]
[164.26646423 346.16265869]
[173.33824158 358.12719727]
[181.06321716 371.00244141]
[187.35081482 384.63745117]
[192.12733459 398.87234497]
[195.33676147 413.54022217]
[196.94146729 428.46911621]
[196.92263794 443.48400879]
[195.28050232 458.40884399]
[192.03430176 473.06863403]
[187.22210693 487.29150391]
[180.90032959 500.91070557]
[173.14309692 513.76654053]
[164.04135132 525.70831299]
[153.70181274 536.59594727]
[142.24569702 546.30187988]
[129.80732727 554.71221924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 188]
[35 187]
[37 185]
[38 184]
[39 183]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 160]
[46 159]
[47 158]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[53 139]
[55 137]
[56 136]
[57 135]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
