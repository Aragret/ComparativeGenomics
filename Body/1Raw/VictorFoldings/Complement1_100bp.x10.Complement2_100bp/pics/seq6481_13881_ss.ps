%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[80.22248840 445.86172485]
[71.19659424 433.87347412]
[63.02895355 421.28482056]
[55.75935364 408.15707397]
[49.42321396 394.55419922]
[44.05139923 380.54248047]
[39.67008209 366.19018555]
[36.30060959 351.56719971]
[33.95939636 336.74481201]
[32.65784836 321.79519653]
[32.40230942 306.79122925]
[33.19401932 291.80596924]
[35.02912903 276.91244507]
[37.89868927 262.18319702]
[41.78872299 247.69001770]
[46.68027878 233.50350952]
[52.54952621 219.69276428]
[59.36787033 206.32507324]
[67.10208893 193.46559143]
[75.71450806 181.17692566]
[85.16316223 169.51898193]
[95.40202332 158.54855347]
[106.38120270 148.31906128]
[118.04721069 138.88037109]
[109.44864655 126.58953857]
[100.85008240 114.29869843]
[88.26311493 108.21102142]
[86.85907745 94.29986572]
[78.26051331 82.00902557]
[61.39856339 74.60928345]
[60.55951309 57.08036804]
[51.77891159 44.91891098]
[42.99830627 32.75745392]
[34.21770477 20.59600067]
[25.43710136 8.43454361]
[16.65649796 -3.72691178]
[3.95314884 4.25936270]
[-9.23578453 11.41531944]
[-22.85610390 17.71155167]
[-36.85184097 23.12218857]
[-51.16548538 27.62499619]
[-65.73822021 31.20146942]
[-80.51015472 33.83691406]
[-95.42059326 35.52049637]
[-110.40826416 36.24530411]
[-125.41158295 36.00835419]
[-140.36889648 34.81062317]
[-155.21873474 32.65703201]
[-169.90007019 29.55642700]
[-184.35260010 25.52155495]
[-198.51692200 20.56899071]
[-212.33480835 14.71909046]
[-225.74951172 7.99589014]
[-238.70590210 0.42701739]
[-251.15072632 -7.95642567]
[-263.03283691 -17.11998940]
[-274.30343628 -27.02601624]
[-284.91619873 -37.63380432]
[-294.82748413 -48.89976120]
[-303.99661255 -60.77759171]
[-312.38586426 -73.21848297]
[-319.96081543 -86.17132568]
[-326.69027710 -99.58287811]
[-332.54666138 -113.39804077]
[-337.50585938 -127.56003571]
[-341.54748535 -142.01066589]
[-344.65496826 -156.69056702]
[-346.81549072 -171.53938293]
[-348.02023315 -186.49613953]
[-348.26419067 -201.49934387]
[-347.54641724 -216.48735046]
[-345.86981201 -231.39857483]
[-343.24127197 -246.17175293]
[-339.67163086 -260.74615479]
[-335.17550659 -275.06188965]
[-329.77142334 -289.06018066]
[-323.48156738 -302.68344116]
[-316.33178711 -315.87570190]
[-308.35147095 -328.58279419]
[-299.57336426 -340.75247192]
[-290.03363037 -352.33471680]
[-279.77136230 -363.28198242]
[-268.82882690 -373.54922485]
[-257.25094604 -383.09426880]
[-245.08526611 -391.87789917]
[-232.38183594 -399.86404419]
[-219.19282532 -407.01983643]
[-205.57243347 -413.31591797]
[-191.57662964 -418.72640991]
[-177.26293945 -423.22906494]
[-162.69017029 -426.80535889]
[-147.91819763 -429.44064331]
[-133.00773621 -431.12408447]
[-118.02006531 -431.84872437]
[-103.01674652 -431.61160278]
[-88.05944824 -430.41369629]
[-73.20964050 -428.25994873]
[-58.52832413 -425.15917969]
[-44.07584381 -421.12414551]
[-29.91158676 -416.17141724]
[-16.09375191 -410.32138062]
[-2.67912388 -403.59802246]
[10.27717400 -396.02899170]
[22.72190094 -387.64541626]
[34.60391998 -378.48171997]
[45.87440491 -368.57556152]
[56.48703766 -357.96768188]
[66.39821625 -346.70159912]
[75.56720734 -334.82366943]
[83.95633698 -322.38269043]
[91.53112793 -309.42974854]
[98.26045990 -296.01812744]
[104.11666870 -282.20291138]
[109.07570648 -268.04086304]
[113.11717987 -253.59017944]
[116.22449493 -238.91024780]
[118.38487244 -224.06140137]
[119.58943176 -209.10462952]
[119.83323669 -194.10142517]
[119.11528015 -179.11341858]
[117.43850708 -164.20222473]
[114.80981445 -149.42907715]
[111.23999786 -134.85472107]
[106.74373627 -120.53901672]
[101.33949280 -106.54080963]
[95.04948425 -92.91761017]
[87.89955902 -79.72541046]
[79.91908264 -67.01840973]
[71.14086914 -54.84883499]
[61.60098267 -43.26668549]
[51.33861923 -32.31956100]
[40.39595413 -22.05243874]
[28.81795502 -12.50751495]
[37.59855652 -0.34605917]
[46.37916183 11.81539631]
[55.15976334 23.97685242]
[63.94036865 36.13830948]
[72.72097015 48.29976273]
[84.60891724 50.53656006]
[92.02371216 60.59660721]
[90.55135345 73.41046143]
[99.14991760 85.70130157]
[111.73688507 91.78897858]
[113.14092255 105.70013428]
[121.73948669 117.99097443]
[130.33805847 130.28181458]
[143.20391846 122.55820465]
[156.57722473 115.75090027]
[170.39282227 109.89305878]
[184.58337402 105.01321411]
[199.07975769 101.13514709]
[213.81135559 98.27774811]
[228.70639038 96.45494080]
[243.69230652 95.67559814]
[258.69607544 95.94352722]
[273.64459229 97.25741577]
[288.46505737 99.61086273]
[303.08523560 102.99240875]
[317.43392944 107.38556671]
[331.44119263 112.76895142]
[345.03884888 119.11631775]
[358.16058350 126.39675903]
[370.74249268 134.57478333]
[382.72326660 143.61056519]
[394.04458618 153.46008301]
[404.65124512 164.07534790]
[414.49154663 175.40463257]
[423.51760864 187.39274597]
[431.68542480 199.98129272]
[438.95523071 213.10893250]
[445.29156494 226.71170044]
[450.66357422 240.72334290]
[455.04510498 255.07559204]
[458.41479492 269.69851685]
[460.75619507 284.52087402]
[462.05798340 299.47045898]
[462.31372070 314.47445679]
[461.52221680 329.45971680]
[459.68734741 344.35327148]
[456.81799316 359.08255005]
[452.92816162 373.57577515]
[448.03680420 387.76239014]
[442.16775513 401.57321167]
[435.34960938 414.94097900]
[427.61557007 427.80059814]
[419.00332642 440.08935547]
[409.55484009 451.74743652]
[399.31613159 462.71801758]
[388.33709717 472.94766235]
[376.67123413 482.38653564]
[364.37533569 490.98861694]
[351.50936890 498.71203613]
[338.13595581 505.51916504]
[324.32028198 511.37680054]
[310.12966919 516.25640869]
[295.63320923 520.13427734]
[280.90158081 522.99151611]
[266.00650024 524.81408691]
[251.02059937 525.59320068]
[236.01683044 525.32507324]
[221.06832886 524.01098633]
[206.24790955 521.65728760]
[191.62776184 518.27557373]
[177.27914429 513.88220215]
[163.27194214 508.49859619]
[149.67439270 502.15103149]
[136.55276489 494.87042236]
[123.97096252 486.69219971]
[111.99030304 477.65625000]
[100.66914368 467.80657959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 146]
[25 145]
[26 144]
[28 142]
[29 141]
[31 138]
[32 137]
[33 136]
[34 135]
[35 134]
[36 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
