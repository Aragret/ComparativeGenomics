%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[130.53889465 496.95498657]
[134.83775330 482.52917480]
[141.95280457 469.26412964]
[151.59271240 457.70312500]
[163.36271667 448.31951904]
[176.78085327 441.49761963]
[172.80874634 427.03308105]
[168.83665466 412.56857300]
[164.86456299 398.10403442]
[160.89245605 383.63949585]
[156.92036438 369.17498779]
[152.94827271 354.71044922]
[142.11691284 344.48641968]
[145.92362976 329.13000488]
[135.09226990 318.90597534]
[138.89898682 303.54956055]
[136.03190613 301.49719238]
[134.01643372 297.95419312]
[133.54240417 293.33590698]
[135.08796692 288.35009766]
[131.76571655 273.72262573]
[128.44345093 259.09518433]
[125.12119293 244.46771240]
[121.79893494 229.84025574]
[118.47666931 215.21278381]
[115.15441132 200.58532715]
[111.83215332 185.95787048]
[108.50989532 171.33041382]
[105.18763733 156.70295715]
[94.82360840 146.00546265]
[99.31223297 130.83433533]
[86.12832642 127.54644012]
[75.63680267 118.91201019]
[69.87396240 106.60691833]
[69.95832825 93.01948547]
[75.87352753 80.78690338]
[86.47146606 72.28342438]
[83.36735535 57.60812378]
[80.26324463 42.93282318]
[77.15913391 28.25751877]
[74.05503082 13.58221626]
[69.92733765 8.41755772]
[69.14496613 2.78862095]
[71.08383942 -1.57598948]
[68.41804504 -16.33720589]
[65.75225067 -31.09842300]
[63.08645248 -45.85964203]
[60.42065811 -60.62085724]
[57.75486374 -75.38207245]
[47.62319565 -83.36406708]
[45.70674133 -95.71360016]
[52.49391174 -105.72663116]
[50.04818344 -120.52590179]
[47.60245895 -135.32518005]
[43.11569977 -143.28173828]
[45.23219681 -150.36285400]
[43.00708008 -165.19689941]
[40.78196335 -180.03094482]
[31.08313370 -192.53067017]
[36.84685135 -206.26489258]
[34.62173462 -221.09893799]
[32.39661789 -235.93298340]
[19.97109795 -245.32681274]
[17.92582893 -260.40234375]
[26.95799446 -272.19027710]
[24.73287773 -287.02432251]
[22.50776100 -301.85836792]
[20.28264236 -316.69241333]
[5.29281569 -315.88629150]
[-9.70576191 -316.50872803]
[-24.57725906 -318.55404663]
[-39.18699265 -322.00372314]
[-53.40265274 -326.82656860]
[-67.09549713 -332.97888184]
[-80.14151001 -340.40493774]
[-92.42256165 -349.03747559]
[-103.82740784 -358.79830933]
[-114.25277710 -369.59906006]
[-123.60424805 -381.34191895]
[-131.79713440 -393.92053223]
[-138.75723267 -407.22097778]
[-144.42150879 -421.12280273]
[-148.73867798 -435.50012207]
[-151.66961670 -450.22268677]
[-153.18780518 -465.15719604]
[-153.27949524 -480.16842651]
[-151.94383240 -495.12036133]
[-149.19294739 -509.87765503]
[-145.05171204 -524.30657959]
[-139.55766296 -538.27661133]
[-132.76055908 -551.66107178]
[-124.72192383 -564.33880615]
[-115.51458740 -576.19500732]
[-105.22192383 -587.12231445]
[-93.93715668 -597.02172852]
[-81.76246643 -605.80364990]
[-68.80812836 -613.38848877]
[-55.19145966 -619.70758057]
[-41.03577042 -624.70367432]
[-26.46926498 -628.33160400]
[-11.62386036 -630.55841064]
[3.36599588 -631.36401367]
[18.36455154 -630.74102783]
[33.23597336 -628.69519043]
[47.84558105 -625.24493408]
[62.06106567 -620.42156982]
[75.75368500 -614.26879883]
[88.79943085 -606.84222412]
[101.08016205 -598.20928955]
[112.48465729 -588.44799805]
[122.90962982 -577.64685059]
[132.26068115 -565.90368652]
[140.45309448 -553.32476807]
[147.41270447 -540.02404785]
[153.07647705 -526.12200928]
[157.39312744 -511.74456787]
[160.32353210 -497.02188110]
[161.84118652 -482.08731079]
[161.93231201 -467.07611084]
[160.59611511 -452.12420654]
[157.84468079 -437.36700439]
[153.70292664 -422.93820190]
[148.20837402 -408.96844482]
[141.41076660 -395.58419800]
[133.37167358 -382.90676880]
[124.16390991 -371.05087280]
[113.87084961 -360.12396240]
[102.58571625 -350.22494507]
[90.41071320 -341.44348145]
[77.45610046 -333.85910034]
[63.83919525 -327.54049683]
[49.68332672 -322.54489136]
[35.11668777 -318.91754150]
[37.34180450 -304.08349609]
[39.56692123 -289.24945068]
[41.79203796 -274.41540527]
[53.88527679 -265.79629517]
[56.35317993 -250.78414917]
[47.23065948 -238.15809631]
[49.45577621 -223.32405090]
[51.68089676 -208.49000549]
[61.22056961 -197.05130005]
[55.61600494 -182.25605774]
[57.84112549 -167.42201233]
[60.06624222 -152.58796692]
[62.40172958 -137.77090454]
[64.84745789 -122.97163391]
[67.29318237 -108.17236328]
[79.14296722 -95.22826385]
[72.51608276 -78.04787445]
[75.18187714 -63.28665543]
[77.84767151 -48.52543640]
[80.51346588 -33.76422119]
[83.17926025 -19.00300217]
[85.84505463 -4.24178505]
[88.73033142 10.47810650]
[91.83444214 25.15340805]
[94.93855286 39.82871246]
[98.04266357 54.50401306]
[101.14676666 69.17931366]
[116.49444580 73.93924713]
[127.36476135 85.77327728]
[130.80700684 101.46910858]
[125.88678741 116.76615143]
[113.93968964 127.51208496]
[124.54134369 139.25582886]
[119.81509399 153.38069153]
[123.13735199 168.00814819]
[126.45960999 182.63560486]
[129.78187561 197.26307678]
[133.10412598 211.89053345]
[136.42639160 226.51799011]
[139.74865723 241.14544678]
[143.07090759 255.77291870]
[146.39317322 270.40036011]
[149.71542358 285.02783203]
[153.36352539 299.57745361]
[164.47898865 310.83609009]
[160.38815308 325.15789795]
[171.50361633 336.41656494]
[167.41279602 350.73837280]
[171.38488770 365.20288086]
[175.35697937 379.66741943]
[179.32908630 394.13192749]
[183.30117798 408.59646606]
[187.27326965 423.06097412]
[191.24537659 437.52551270]
[206.26567078 436.53796387]
[221.17726135 438.59454346]
[235.36950684 443.61102295]
[248.26124573 451.38198853]
[259.32458496 461.58923340]
[268.10644531 473.81475830]
[274.24725342 487.55795288]
[277.49554443 502.25601196]
[277.71829224 517.30712891]
[274.90637207 532.09490967]
[269.17495728 546.01379395]
[260.75869751 558.49383545]
[250.00227356 569.02398682]
[237.34614563 577.17303467]
[223.30856323 582.60729980]
[208.46437073 585.10424805]
[193.42141724 584.56164551]
[178.79571533 581.00164795]
[165.18615723 574.57006836]
[153.15005493 565.53033447]
[143.18029785 554.25256348]
[135.68511963 541.19854736]
[130.97143555 526.90283203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[14 179]
[16 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[31 165]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[52 148]
[53 147]
[54 146]
[56 145]
[57 144]
[58 143]
[60 141]
[61 140]
[62 139]
[65 136]
[66 135]
[67 134]
[68 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
