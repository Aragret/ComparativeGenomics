%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[103.94857788 856.43835449]
[89.01135254 855.04357910]
[74.14562988 853.02447510]
[59.37750244 850.38470459]
[44.73287201 847.12878418]
[30.23743057 843.26245117]
[15.91660881 838.79248047]
[1.79553068 833.72680664]
[-12.10103035 828.07421875]
[-25.74869537 821.84466553]
[-39.12352371 815.04907227]
[-52.20204544 807.69934082]
[-64.96132660 799.80834961]
[-77.37896729 791.39001465]
[-89.43320465 782.45910645]
[-101.10286713 773.03118896]
[-112.36750031 763.12292480]
[-123.20733643 752.75158691]
[-133.60334778 741.93542480]
[-143.53732300 730.69348145]
[-152.99180603 719.04534912]
[-161.95022583 707.01147461]
[-170.39686584 694.61309814]
[-178.31689453 681.87182617]
[-185.69644165 668.81011963]
[-192.52253723 655.45080566]
[-198.78321838 641.81744385]
[-204.46749878 627.93377686]
[-209.56541443 613.82427979]
[-214.06799316 599.51373291]
[-217.96737671 585.02716064]
[-221.25669861 570.38995361]
[-223.93019104 555.62786865]
[-225.98316956 540.76684570]
[-227.41201782 525.83282471]
[-228.21424866 510.85208130]
[-228.38845825 495.85089111]
[-227.93431091 480.85556030]
[-226.85263062 465.89239502]
[-225.14530945 450.98764038]
[-222.81533813 436.16748047]
[-219.86680603 421.45788574]
[-216.30488586 406.88464355]
[-212.13581848 392.47335815]
[-207.36692810 378.24929810]
[-202.00659180 364.23742676]
[-196.06417847 350.46228027]
[-189.55015564 336.94808960]
[-182.47592163 323.71853638]
[-174.85388184 310.79681396]
[-166.69743347 298.20559692]
[-158.02087402 285.96697998]
[-148.83943176 274.10244751]
[-139.16920471 262.63278198]
[-129.02716064 251.57815552]
[-118.43108368 240.95791626]
[-107.39957428 230.79071045]
[-95.95198822 221.09437561]
[-84.10839844 211.88591003]
[-71.88958740 203.18150330]
[-59.31699371 194.99638367]
[-46.41266632 187.34494019]
[-33.19925308 180.24058533]
[-19.69992828 173.69577026]
[-5.93837643 167.72200012]
[8.06125927 162.32975769]
[22.27441978 157.52847290]
[36.67617035 153.32658386]
[51.24124527 149.73147583]
[65.94409180 146.74943542]
[80.75891113 144.38571167]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[82.36683655 79.39540100]
[81.74555969 66.91350555]
[89.53760529 57.66090775]
[88.64479065 42.68750000]
[87.75197601 27.71409607]
[86.85916138 12.74068928]
[85.96634674 -2.23271608]
[85.07353210 -17.20612144]
[84.18070984 -32.17952728]
[83.28789520 -47.15293503]
[68.34783936 -48.87505722]
[53.93384552 -53.16551590]
[40.48395157 -59.89392471]
[28.40688324 -68.85581207]
[18.06964302 -79.77884674]
[9.78637218 -92.33107758]
[3.80878973 -106.13106537]
[0.31854647 -120.75943756]
[-0.57829249 -135.77166748]
[1.14552677 -150.71153259]
[5.43761921 -165.12503052]
[12.16755295 -178.57415771]
[21.13081360 -190.65020752]
[32.05501556 -200.98622131]
[44.60818863 -209.26806641]
[58.40885162 -215.24407959]
[73.03762054 -218.73266602]
[88.04994965 -219.62780762]
[102.98961639 -217.90228271]
[117.40263367 -213.60856628]
[130.85099792 -206.87710571]
[142.92604065 -197.91247559]
[153.26080322 -186.98709106]
[161.54121399 -174.43298340]
[167.51567078 -160.63163757]
[171.00259399 -146.00247192]
[171.89602661 -130.99005127]
[170.16882324 -116.05057526]
[165.87345886 -101.63804626]
[159.14047241 -88.19044495]
[150.17448425 -76.11642456]
[139.24794006 -65.78290558]
[126.69287872 -57.50390244]
[112.89086151 -51.53101349]
[98.26129913 -48.04574966]
[99.15412140 -33.07234192]
[100.04693604 -18.09893799]
[100.93975067 -3.12553191]
[101.83256531 11.84787369]
[102.72537994 26.82127953]
[103.61819458 41.79468536]
[104.51101685 56.76808929]
[114.94985962 70.87474060]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[125.61243439 141.04039001]
[140.61398315 141.18031311]
[155.59652710 141.94833374]
[170.53375244 143.34306335]
[185.39949036 145.36209106]
[200.16761780 148.00184631]
[214.81225586 151.25772095]
[229.30770874 155.12400818]
[243.62855530 159.59388733]
[257.74963379 164.65954590]
[271.64620972 170.31210327]
[285.29391479 176.54162598]
[298.66876221 183.33718872]
[311.74731445 190.68687439]
[324.50659180 198.57777405]
[336.92428589 206.99606323]
[348.97854614 215.92697144]
[360.64822388 225.35482788]
[371.91290283 235.26309204]
[382.75274658 245.63436890]
[393.14880371 256.45050049]
[403.08282471 267.69244385]
[412.53732300 279.34054565]
[421.49578857 291.37435913]
[429.94247437 303.77273560]
[437.86254883 316.51394653]
[445.24212646 329.57565308]
[452.06826782 342.93493652]
[458.32897949 356.56832886]
[464.01330566 370.45193481]
[469.11126709 384.56140137]
[473.61389160 398.87197876]
[477.51330566 413.35855103]
[480.80267334 427.99569702]
[483.47622681 442.75775146]
[485.52923584 457.61883545]
[486.95812988 472.55282593]
[487.76043701 487.53356934]
[487.93466187 502.53475952]
[487.48059082 517.53009033]
[486.39895630 532.49328613]
[484.69165039 547.39801025]
[482.36172485 562.21820068]
[479.41323853 576.92779541]
[475.85137939 591.50103760]
[471.68234253 605.91235352]
[466.91351318 620.13641357]
[461.55319214 634.14831543]
[455.61083984 647.92346191]
[449.09686279 661.43768311]
[442.02267456 674.66723633]
[434.40066528 687.58898926]
[426.24426270 700.18023682]
[417.56774902 712.41888428]
[408.38632202 724.28344727]
[398.71612549 735.75311279]
[388.57412720 746.80780029]
[377.97808838 757.42810059]
[366.94659424 767.59533691]
[355.49905396 777.29168701]
[343.65548706 786.50018311]
[331.43670654 795.20465088]
[318.86413574 803.38977051]
[305.95983887 811.04125977]
[292.74642944 818.14569092]
[279.24713135 824.69049072]
[265.48559570 830.66430664]
[251.48597717 836.05664062]
[237.27284241 840.85797119]
[222.87109375 845.05987549]
[208.30603027 848.65502930]
[193.60319519 851.63714600]
[178.78839111 854.00091553]
[163.88757324 855.74218750]
[148.92692566 856.85803223]
[133.93266296 857.34637451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 134]
[73 133]
[74 132]
[76 130]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
