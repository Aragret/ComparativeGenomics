%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[185.15599060 580.56652832]
[173.45133972 571.18017578]
[162.24964905 561.19897461]
[151.58111572 550.64984131]
[141.47451782 539.56121826]
[131.95707703 527.96289062]
[123.05445862 515.88623047]
[114.79067230 503.36380005]
[107.18798828 490.42932129]
[100.26689911 477.11764526]
[94.04607391 463.46469116]
[88.54227448 449.50726318]
[83.77033234 435.28295898]
[79.74312592 420.83016968]
[76.47150421 406.18780518]
[73.96428680 391.39538574]
[72.22822571 376.49276733]
[71.26802063 361.52011108]
[71.08624268 346.51782227]
[71.68338776 331.52630615]
[73.05784607 316.58599854]
[75.20591736 301.73718262]
[78.12179565 287.01986694]
[81.79763794 272.47372437]
[86.22352600 258.13796997]
[91.38752747 244.05128479]
[97.27572632 230.25161743]
[103.87223816 216.77615356]
[111.15929413 203.66125488]
[119.11724091 190.94224548]
[127.72462463 178.65344238]
[136.95825195 166.82795715]
[146.79321289 155.49766541]
[135.99105835 145.09028625]
[125.18890381 134.68292236]
[114.38674164 124.27554321]
[103.58458710 113.86817169]
[90.06169128 110.31529999]
[86.00804138 96.93399048]
[75.20588684 86.52661133]
[59.89944458 82.52368164]
[56.10231018 68.12121582]
[44.80972672 78.00814056]
[32.71934509 86.90176392]
[19.91828346 94.73800659]
[6.49877453 101.46040344]
[-7.44249439 107.02051544]
[-21.80507278 111.37828827]
[-36.48547745 114.50231934]
[-51.37793350 116.37010193]
[-66.37513733 116.96817017]
[-81.36903381 116.29222870]
[-96.25158691 114.34713745]
[-110.91557312 111.14691925]
[-125.25533295 106.71462250]
[-139.16754150 101.08218384]
[-152.55195618 94.29019928]
[-165.31214905 86.38758850]
[-177.35618591 77.43129730]
[-188.59727478 67.48586273]
[-198.95443726 56.62293243]
[-208.35302734 44.92078781]
[-216.72534180 32.46373367]
[-224.01106262 19.34152985]
[-230.15766907 5.64872408]
[-235.12091064 -8.51602650]
[-238.86499023 -23.05066299]
[-241.36296082 -37.85046005]
[-242.59680176 -52.80878448]
[-242.55764771 -67.81785583]
[-241.24574280 -82.76953888]
[-238.67057800 -97.55609894]
[-234.85069275 -112.07099915]
[-229.81361389 -126.20965576]
[-223.59561157 -139.87019348]
[-216.24151611 -152.95420837]
[-207.80430603 -165.36738586]
[-198.34477234 -177.02032471]
[-187.93106079 -187.82905579]
[-176.63822937 -197.71569824]
[-164.54762268 -206.60900879]
[-151.74635315 -214.44491577]
[-138.32667542 -221.16696167]
[-124.38526154 -226.72673035]
[-110.02256775 -231.08412170]
[-95.34207916 -234.20777893]
[-80.44957733 -236.07516479]
[-65.45235443 -236.67285156]
[-50.45847702 -235.99652100]
[-35.57597351 -234.05105591]
[-20.91207123 -230.85044861]
[-6.57243013 -226.41778564]
[7.33963203 -220.78498840]
[20.72387695 -213.99266052]
[33.48386765 -206.08972168]
[45.52767181 -197.13311768]
[56.76850510 -187.18739319]
[67.12538147 -176.32418823]
[76.52367401 -164.62179565]
[84.89566803 -152.16453552]
[92.18103790 -139.04214478]
[98.32730103 -125.34917450]
[103.29016876 -111.18429565]
[107.03388214 -96.64956665]
[109.53146362 -81.84970093]
[110.76492310 -66.89134979]
[110.72537231 -51.88227463]
[109.41309357 -36.93062592]
[106.83754730 -22.14413261]
[103.01728058 -7.62933254]
[97.97982788 6.50919342]
[91.76148987 20.16957474]
[84.40705109 33.25338745]
[75.96952057 45.66635895]
[66.50968170 57.31905746]
[81.04347992 60.57758713]
[85.61325836 75.72445679]
[96.41541290 86.13182831]
[109.93830872 89.68470001]
[113.99195862 103.06600952]
[124.79411316 113.47338867]
[135.59626770 123.88076019]
[146.39842224 134.28813171]
[157.20059204 144.69551086]
[168.15702820 134.44570923]
[179.63070679 124.77841187]
[191.59068298 115.71966553]
[204.00473022 107.29390717]
[216.83937073 99.52384186]
[230.06001282 92.43041992]
[243.63099670 86.03276062]
[257.51577759 80.34811401]
[271.67687988 75.39179993]
[286.07614136 71.17718506]
[300.67474365 67.71562958]
[315.43334961 65.01646423]
[330.31216431 63.08696747]
[345.27108765 61.93233871]
[360.26974487 61.55569458]
[375.26773071 61.95804596]
[390.22463989 63.13830948]
[405.10012817 65.09330750]
[419.85409546 67.81776428]
[434.44674683 71.30433655]
[448.83877563 75.54362488]
[462.99136353 80.52420044]
[476.86636353 86.23263550]
[490.42636108 92.65354919]
[503.63482666 99.76962280]
[516.45611572 107.56166840]
[528.85571289 116.00869751]
[540.80017090 125.08792114]
[552.25726318 134.77487183]
[563.19610596 145.04344177]
[573.58721924 155.86592102]
[583.40264893 167.21316528]
[592.61584473 179.05456543]
[601.20202637 191.35821533]
[609.13800049 204.09092712]
[616.40240479 217.21839905]
[622.97564697 230.70521545]
[628.84002686 244.51502991]
[633.97967529 258.61062622]
[638.38085938 272.95397949]
[642.03155518 287.50643921]
[644.92205811 302.22875977]
[647.04449463 317.08126831]
[648.39318848 332.02392578]
[648.96441650 347.01644897]
[648.75677490 362.01840210]
[647.77075195 376.98937988]
[646.00897217 391.88897705]
[643.47619629 406.67706299]
[640.17932129 421.31372070]
[636.12719727 435.75955200]
[631.33068848 449.97561646]
[625.80285645 463.92352295]
[619.55847168 477.56573486]
[612.61437988 490.86541748]
[604.98937988 503.78677368]
[596.70404053 516.29492188]
[587.78057861 528.35620117]
[578.24316406 539.93804932]
[568.11743164 551.00927734]
[557.43072510 561.53997803]
[546.21179199 571.50183105]
[534.49096680 580.86791992]
[522.29980469 589.61303711]
[509.67114258 597.71362305]
[496.63906860 605.14782715]
[483.23870850 611.89556885]
[469.50616455 617.93865967]
[455.47845459 623.26086426]
[441.19342041 627.84777832]
[426.68957520 631.68707275]
[412.00601196 634.76837158]
[397.18228149 637.08337402]
[382.25839233 638.62591553]
[367.27456665 639.39172363]
[352.27114868 639.37878418]
[337.28866577 638.58709717]
[322.36746216 637.01885986]
[307.54776001 634.67822266]
[292.86950684 631.57159424]
[278.37231445 627.70727539]
[264.09521484 623.09570312]
[250.07672119 617.74932861]
[236.35462952 611.68249512]
[222.96592712 604.91168213]
[209.94670105 597.45501709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 124]
[34 123]
[35 122]
[36 121]
[37 120]
[39 118]
[40 117]
[42 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
