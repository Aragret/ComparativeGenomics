%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[38.13357925 839.20843506]
[23.46139145 842.34887695]
[8.62765121 844.60626221]
[-6.31453800 845.97241211]
[-21.31168747 846.44256592]
[-36.31010818 846.01501465]
[-51.25611496 844.69122314]
[-66.09619904 842.47595215]
[-80.77724457 839.37713623]
[-95.24668884 835.40588379]
[-109.45273590 830.57641602]
[-123.34452820 824.90600586]
[-136.87234497 818.41497803]
[-149.98776245 811.12652588]
[-162.64381409 803.06677246]
[-174.79521179 794.26452637]
[-186.39843750 784.75140381]
[-197.41198730 774.56127930]
[-207.79638672 763.73083496]
[-217.51451111 752.29870605]
[-226.53153992 740.30584717]
[-234.81520081 727.79516602]
[-242.33586121 714.81152344]
[-249.06655884 701.40130615]
[-254.98324585 687.61260986]
[-260.06469727 673.49475098]
[-264.29275513 659.09826660]
[-267.65228271 644.47467041]
[-270.13122559 629.67633057]
[-271.72073364 614.75628662]
[-272.41510010 599.76782227]
[-272.21185303 584.76470947]
[-271.11172485 569.80053711]
[-269.11865234 554.92901611]
[-266.23974609 540.20324707]
[-262.48535156 525.67602539]
[-257.86886597 511.39935303]
[-252.40686035 497.42431641]
[-246.11885071 483.80093384]
[-239.02735901 470.57800293]
[-231.15776062 457.80282593]
[-222.53825378 445.52114868]
[-213.19966125 433.77694702]
[-203.17544556 422.61224365]
[-192.50146484 412.06701660]
[-181.21594238 402.17901611]
[-169.35926819 392.98364258]
[-156.97389221 384.51382446]
[-144.10415649 376.79983521]
[-130.79612732 369.86932373]
[-117.09745026 363.74710083]
[-103.05715179 358.45507812]
[-88.72549438 354.01220703]
[-74.15379333 350.43435669]
[-59.39419556 347.73440552]
[-44.49954987 345.92193604]
[-29.52316856 345.00347900]
[-14.51866722 344.98233032]
[0.46024328 345.85855103]
[15.35994148 347.62899780]
[30.12709045 350.28735352]
[44.70882797 353.82406616]
[49.10982513 339.48422241]
[53.51082230 325.14437866]
[57.91182327 310.80453491]
[62.31282043 296.46469116]
[61.27016068 289.14794922]
[66.88756561 281.94500732]
[71.50157166 267.67227173]
[74.93263245 253.06993103]
[69.16891479 239.33572388]
[78.86774445 226.83598328]
[81.09285736 212.00193787]
[83.31797791 197.16789246]
[85.10044098 182.27418518]
[86.43867493 167.33399963]
[87.77690887 152.39381409]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.13849640 62.69872665]
[96.03131866 47.72531891]
[81.97645569 42.16489029]
[70.34416199 32.54552078]
[62.26560593 19.81896400]
[58.52131271 5.23831463]
[59.46579361 -9.76536942]
[64.99398804 -23.72352219]
[74.55280304 -35.27380753]
[87.19642639 -43.29309845]
[101.67987823 -47.00666428]
[102.57269287 -61.98007202]
[95.67050934 -76.21630859]
[104.15163422 -88.46047974]
[97.24945068 -102.69672394]
[105.73057556 -114.94089508]
[106.62339020 -129.91430664]
[92.70318604 -135.91461182]
[81.67682648 -146.31629944]
[74.87580109 -159.86332703]
[73.12136841 -174.91981506]
[76.62537384 -189.66761780]
[84.96470642 -202.32586670]
[97.13234711 -211.36602783]
[111.65898132 -215.69644165]
[126.79046631 -214.79420471]
[140.69958496 -208.76824951]
[151.70675659 -198.34625244]
[158.48281860 -184.78671265]
[160.20950317 -169.72702026]
[156.67831421 -154.98570251]
[148.31567383 -142.34283447]
[136.13139343 -133.32511902]
[121.59680176 -129.02148438]
[120.70397949 -114.04808044]
[127.67002106 -100.88284302]
[119.12503815 -87.56766510]
[126.09107971 -74.40242767]
[117.54609680 -61.08725357]
[116.65328217 -46.11384964]
[130.59281921 -40.70551300]
[142.19392395 -31.24058723]
[150.31246948 -18.63625526]
[154.14283752 -4.12008286]
[153.29771423 10.88952637]
[147.84732056 24.92192650]
[138.31370544 36.59832382]
[125.62074280 44.76725769]
[111.00472260 48.61813736]
[110.11190796 63.59154129]
[112.85170746 70.45559692]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[102.71709442 153.73204041]
[101.37886047 168.67222595]
[100.04062653 183.61241150]
[102.00663757 187.48394775]
[102.58067322 191.38716125]
[101.92370605 194.88055420]
[100.32354736 197.62026978]
[98.15202332 199.39302063]
[95.92690277 214.22706604]
[93.70178986 229.06111145]
[99.30635071 243.85635376]
[89.76667786 255.29505920]
[99.96867371 244.29872131]
[114.08132935 239.21612549]
[128.95185852 241.18272400]
[141.25813293 249.75918579]
[148.25090027 263.02951050]
[148.36796570 278.02905273]
[141.58316040 291.40689087]
[129.41224670 300.17437744]
[114.57423401 302.37283325]
[100.38396454 297.51113892]
[90.01158142 286.67535400]
[85.77430725 272.28625488]
[81.16029358 286.55899048]
[76.65266418 300.86569214]
[72.25167084 315.20553589]
[67.85066986 329.54537964]
[63.44967270 343.88522339]
[59.04867554 358.22506714]
[73.10393524 363.47723389]
[86.81993866 369.56057739]
[100.14757538 376.45327759]
[113.03914642 384.13070679]
[125.44850159 392.56536865]
[137.33122253 401.72705078]
[148.64476013 411.58297729]
[159.34861755 422.09786987]
[169.40447998 433.23406982]
[178.77635193 444.95172119]
[187.43069458 457.20889282]
[195.33650208 469.96170044]
[202.46548462 483.16445923]
[208.79212952 496.76992798]
[214.29379272 510.72943115]
[218.95075989 524.99291992]
[222.74638367 539.50946045]
[225.66705322 554.22698975]
[227.70231628 569.09277344]
[228.84490967 584.05377197]
[229.09072876 599.05627441]
[228.43888855 614.04663086]
[226.89172363 628.97113037]
[224.45477295 643.77642822]
[221.13676453 658.40948486]
[216.94958496 672.81793213]
[211.90820312 686.95019531]
[206.03068542 700.75561523]
[199.33805847 714.18481445]
[191.85427856 727.18975830]
[183.60615540 739.72387695]
[174.62318420 751.74230957]
[164.93756104 763.20196533]
[154.58392334 774.06188965]
[143.59933472 784.28314209]
[132.02314758 793.82922363]
[119.89678192 802.66589355]
[107.26364899 810.76153564]
[94.16897583 818.08715820]
[80.65962982 824.61657715]
[66.78398132 830.32635498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 169]
[63 168]
[64 167]
[65 166]
[66 165]
[68 164]
[69 163]
[70 151]
[72 149]
[73 148]
[74 147]
[75 142]
[76 141]
[77 140]
[78 139]
[79 138]
[80 137]
[81 135]
[82 134]
[83 132]
[84 131]
[93 122]
[94 121]
[96 119]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
