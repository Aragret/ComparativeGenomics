%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[110.71376801 515.66839600]
[110.32492065 530.96899414]
[102.85996246 544.33062744]
[90.03428650 552.68286133]
[74.79512787 554.10650635]
[60.64434433 548.27435303]
[50.83368301 536.52661133]
[47.61755371 521.56286621]
[51.73500824 506.82156372]
[62.23987961 495.69024658]
[76.71823120 490.72677612]
[78.94334412 475.89273071]
[81.16846466 461.05868530]
[82.72898865 446.14007568]
[83.62180328 431.16668701]
[84.51461792 416.19326782]
[85.40743256 401.21987915]
[86.30024719 386.24645996]
[87.19306183 371.27307129]
[88.08588409 356.29965210]
[85.64209747 352.19638062]
[85.75003052 346.51434326]
[89.23474884 340.89578247]
[90.57298279 325.95559692]
[91.91121674 311.01541138]
[93.24945068 296.07522583]
[80.98770142 287.61856079]
[74.56245422 274.06970215]
[75.78978729 259.02441406]
[84.43988800 246.53152466]
[98.27198792 240.00311279]
[99.61022186 225.06292725]
[100.94845581 210.12274170]
[100.94845581 195.12274170]
[99.61022186 180.18255615]
[98.27198792 165.24237061]
[96.93375397 150.30218506]
[88.09183502 138.31594849]
[94.56709290 123.88052368]
[93.22885895 108.94033813]
[83.67834473 120.50700378]
[68.95066071 123.35221100]
[55.77909470 116.17517090]
[50.18551636 102.25713348]
[54.72723389 87.96122742]
[67.32782745 79.82335663]
[82.22648621 81.56404877]
[92.61249542 92.38916779]
[92.83582306 77.39083099]
[93.05915070 62.39249039]
[93.28247833 47.39415359]
[93.50580597 32.39581680]
[93.39414215 17.39623260]
[92.94753265 2.40288305]
[92.50093079 -12.59046650]
[92.05432129 -27.58381653]
[91.60771179 -42.57716751]
[88.46359253 -48.39318085]
[88.69405365 -54.07155609]
[91.37773895 -58.02210999]
[91.37773895 -73.02210999]
[91.37773895 -88.02210999]
[77.55973053 -97.77704620]
[72.33080292 -113.68803406]
[77.56349945 -129.42272949]
[91.00761414 -138.84255981]
[90.78428650 -153.84089661]
[90.56095886 -168.83923340]
[90.33763123 -183.83757019]
[77.02940369 -191.37667847]
[69.33244324 -204.47834778]
[69.22752380 -219.57322693]
[76.64269257 -232.60668945]
[89.49945831 -240.12792969]
[89.27613068 -255.12628174]
[89.05280304 -270.12460327]
[88.82947540 -285.12295532]
[88.60614777 -300.12127686]
[88.38282013 -315.11962891]
[88.15949249 -330.11795044]
[80.49831390 -317.22198486]
[68.30145264 -308.49063110]
[53.62429428 -305.39529419]
[38.94020844 -308.45758057]
[26.72371483 -317.16143799]
[19.03350639 -330.04013062]
[17.16552162 -344.92337036]
[21.43454552 -359.30303955]
[31.12117577 -370.75595093]
[44.59304047 -377.35208130]
[59.57989883 -377.97985840]
[73.55619812 -372.53347778]
[84.16668701 -361.93075562]
[89.62358856 -347.95681763]
[92.28938293 -362.71804810]
[94.95518494 -377.47924805]
[97.62097931 -392.24047852]
[100.28677368 -407.00167847]
[86.42659760 -412.90451050]
[74.22772217 -421.74392700]
[64.30205536 -433.07656860]
[57.14745331 -446.33398438]
[53.12278748 -460.85122681]
[52.42993927 -475.90005493]
[55.10365677 -490.72567749]
[61.00982666 -504.58441162]
[69.85220337 -516.78112793]
[81.18724823 -526.70410156]
[94.44641113 -533.85546875]
[108.96461487 -537.87658691]
[124.01362610 -538.56579590]
[138.83859253 -535.88848877]
[152.69590759 -529.97900391]
[164.89048767 -521.13366699]
[174.81066895 -509.79620361]
[181.95884705 -496.53530884]
[185.97647095 -482.01614380]
[186.66203308 -466.96694946]
[183.98114014 -452.14263916]
[178.06825256 -438.28674316]
[169.21995544 -426.09429932]
[157.88011169 -416.17687988]
[144.61747742 -409.03192139]
[130.09733582 -405.01779175]
[115.04798889 -404.33587646]
[112.38219452 -389.57467651]
[109.71640015 -374.81344604]
[107.05060577 -360.05224609]
[104.38481140 -345.29101562]
[103.15782928 -330.34127808]
[103.38115692 -315.34295654]
[103.60448456 -300.34460449]
[103.82781219 -285.34628296]
[104.05113983 -270.34793091]
[104.27447510 -255.34960938]
[104.49780273 -240.35125732]
[117.57279968 -233.21614075]
[125.37274170 -220.40924072]
[125.71730042 -205.31793213]
[118.41383362 -191.99290466]
[105.33597565 -184.06089783]
[105.55930328 -169.06256104]
[105.78263092 -154.06422424]
[106.00595856 -139.06588745]
[117.58862305 -132.42631531]
[124.43292999 -120.83753967]
[124.65901947 -107.27220154]
[118.10091400 -95.27179718]
[106.37773895 -88.02210999]
[106.37773895 -73.02210999]
[106.37773895 -58.02210999]
[106.60106659 -43.02377319]
[107.04766846 -28.03042221]
[107.49427795 -13.03707314]
[107.94087982 1.95627725]
[108.38748932 16.94962692]
[110.68930054 19.62058258]
[111.81176758 23.53914261]
[111.18260956 28.13886642]
[108.50414276 32.61914444]
[108.28081512 47.61748123]
[108.05748749 62.61582184]
[107.83415985 77.61415863]
[107.61083221 92.61249542]
[108.16904449 107.60210419]
[109.50727844 122.54228973]
[118.44491577 135.59713745]
[111.87393951 148.96395874]
[113.21217346 163.90412903]
[114.55040741 178.84431458]
[115.88864136 193.78450012]
[122.86061859 180.50326538]
[134.85287476 171.49293518]
[149.54988098 168.49328613]
[164.11389160 172.08351135]
[175.73281860 181.57037354]
[182.16322327 195.12211609]
[182.16349792 210.12211609]
[175.73359680 223.67410278]
[164.11503601 233.16140747]
[149.55114746 236.75216675]
[134.85403442 233.75306702]
[122.86144257 224.74319458]
[115.88864136 211.46096802]
[114.55040741 226.40115356]
[113.21217346 241.34133911]
[125.66385651 250.22407532]
[131.95602417 264.05538940]
[130.48997498 279.07928467]
[121.75910950 291.27056885]
[108.18963623 297.41345215]
[106.85140228 312.35363770]
[105.51316833 327.29382324]
[104.17493439 342.23400879]
[103.05928802 357.19247437]
[102.16647339 372.16586304]
[101.27365112 387.13928223]
[100.38083649 402.11270142]
[99.48802185 417.08609009]
[98.59520721 432.05950928]
[97.70239258 447.03289795]
[109.61115265 437.91250610]
[124.49849701 439.74740601]
[133.83628845 451.48648071]
[132.27540588 466.40505981]
[120.70999908 475.95709229]
[105.76525879 474.67074585]
[96.00251007 463.28381348]
[93.77738953 478.11785889]
[91.55226898 492.95190430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[14 201]
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[20 195]
[23 194]
[24 193]
[25 192]
[26 191]
[31 186]
[32 185]
[33 184]
[34 171]
[35 170]
[36 169]
[37 168]
[39 166]
[40 165]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 156]
[54 155]
[55 154]
[56 153]
[57 152]
[60 151]
[61 150]
[62 149]
[66 144]
[67 143]
[68 142]
[69 141]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
