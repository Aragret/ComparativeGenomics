%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[113.59378815 630.57177734]
[100.55056000 623.15338135]
[88.01487732 614.90618896]
[76.03932190 605.86492920]
[64.67412567 596.06738281]
[53.96695709 585.55474854]
[43.96273041 574.37109375]
[34.70339966 562.56329346]
[26.22780991 550.18096924]
[18.57150459 537.27593994]
[11.76659966 523.90234375]
[5.84163761 510.11636353]
[0.82147002 495.97573853]
[-3.27284718 481.53982544]
[-6.42414045 466.86917114]
[-8.61919308 452.02529907]
[-9.84879589 437.07046509]
[-10.10779381 422.06741333]
[-9.39509964 407.07904053]
[-7.71370316 392.16824341]
[-5.07065582 377.39755249]
[-1.47704387 362.82894897]
[3.05205941 348.52346802]
[8.49765682 334.54119873]
[14.83690929 320.94070435]
[22.04322433 307.77911377]
[30.08638000 295.11157227]
[38.93263626 282.99124146]
[48.54489136 271.46893311]
[58.88282776 260.59298706]
[69.90308380 250.40904236]
[81.55943298 240.95979309]
[93.80299377 232.28486633]
[106.58239746 224.42066956]
[119.84405518 217.40017700]
[133.53233337 211.25282288]
[128.28561401 197.20034790]
[123.03890228 183.14788818]
[117.79218292 169.09541321]
[112.54546356 155.04293823]
[107.29874420 140.99046326]
[95.59844208 131.77352905]
[98.01994324 116.13872528]
[84.81012726 105.80059052]
[87.76675415 89.28894043]
[82.31140137 75.31613922]
[70.08496094 65.27499390]
[72.66362000 50.60530090]
[67.20825958 36.63250351]
[52.39061356 39.24576187]
[37.35266113 38.91796875]
[22.67233086 35.66359329]
[8.91343498 29.60954094]
[-3.39597487 20.99020958]
[-13.78387737 10.13840485]
[-21.85238075 -2.52750468]
[-27.29296112 -16.51971436]
[-29.89826584 -31.29977417]
[-29.57000351 -46.29930496]
[-26.32266617 -60.94186401]
[-20.28288841 -74.66508484]
[-11.68451691 -86.94229126]
[-0.85955060 -97.30269623]
[11.77467060 -105.34947205]
[6.31931400 -119.32226562]
[0.86395669 -133.29507446]
[-4.59140015 -147.26786804]
[-19.12838745 -143.49794006]
[-34.00922775 -141.47383118]
[-49.02501678 -141.22399902]
[-63.96495819 -142.75190735]
[-78.61931610 -146.03613281]
[-92.78237152 -151.03056335]
[-106.25528717 -157.66506958]
[-118.84893799 -165.84654236]
[-130.38652039 -175.46011353]
[-140.70605469 -186.37080383]
[-149.66268921 -198.42547607]
[-157.13067627 -211.45487976]
[-163.00518799 -225.27612305]
[-167.20375061 -239.69514465]
[-169.66740417 -254.50956726]
[-170.36158752 -269.51138306]
[-169.27655029 -284.48999023]
[-166.42752075 -299.23513794]
[-161.85449219 -313.53982544]
[-155.62165833 -327.20321655]
[-147.81652832 -340.03350830]
[-138.54867554 -351.85058594]
[-127.94819641 -362.48852539]
[-116.16391754 -371.79803467]
[-103.36125946 -379.64840698]
[-89.71995544 -385.92944336]
[-75.43151855 -390.55294800]
[-60.69651794 -393.45401001]
[-45.72182465 -394.59191895]
[-30.71764946 -393.95071411]
[-15.89463615 -391.53936768]
[-1.46087158 -387.39172363]
[12.38101482 -381.56607056]
[25.43670464 -374.14410400]
[37.52291870 -365.23007202]
[48.46998215 -354.94912720]
[58.12421417 -343.44555664]
[66.35009003 -330.88085938]
[73.03212738 -317.43145752]
[78.07652283 -303.28613281]
[81.41246033 -288.64343262]
[82.99310303 -273.70898438]
[82.79627228 -258.69241333]
[80.82472229 -243.80451965]
[77.10613251 -229.25431824]
[71.69270325 -215.24606323]
[64.66043854 -201.97640991]
[56.10805893 -189.63165283]
[46.15562057 -178.38508606]
[34.94284439 -168.39459229]
[22.62713814 -159.80041504]
[9.38139725 -152.72322083]
[14.83675480 -138.75042725]
[20.29211235 -124.77762604]
[25.74746895 -110.80482483]
[40.49166489 -113.44732666]
[55.47287750 -113.16234589]
[70.11528778 -109.95896912]
[83.85573578 -103.95848083]
[96.16536713 -95.38978577]
[106.57002258 -84.58067322]
[114.66844940 -71.94527435]
[120.14782715 -57.96821594]
[122.79581451 -43.18598938]
[122.50879669 -28.16640854]
[119.29593658 -13.48676491]
[113.27888489 0.28834996]
[104.68717957 12.62875652]
[93.84949493 23.05909729]
[81.18106079 31.17714691]
[86.63642120 45.14994431]
[98.47265625 54.19166946]
[96.28419495 69.86078644]
[101.73955536 83.83358002]
[112.10487366 89.14408112]
[116.25971985 100.02426910]
[112.07241821 110.89200592]
[124.14800262 121.11408234]
[121.35121918 135.74374390]
[126.59793854 149.79621887]
[131.84465027 163.84869385]
[137.09136963 177.90116882]
[142.33808899 191.95362854]
[147.58480835 206.00610352]
[161.95245361 201.67831421]
[176.57009888 198.28962708]
[191.37644958 195.85423279]
[206.30937195 194.38237000]
[221.30627441 193.88020325]
[236.30421448 194.34983826]
[251.24031067 195.78930664]
[266.05191040 198.19256592]
[280.67684937 201.54954529]
[295.05386353 205.84616089]
[309.12258911 211.06439209]
[322.82403564 217.18234253]
[336.10073853 224.17434692]
[348.89697266 232.01110840]
[361.15911865 240.65972900]
[372.83572388 250.08393860]
[383.87780762 260.24420166]
[394.23907471 271.09793091]
[403.87603760 282.59957886]
[412.74829102 294.70089722]
[420.81860352 307.35116577]
[428.05316162 320.49725342]
[434.42160034 334.08410645]
[439.89718628 348.05465698]
[444.45700073 362.35037231]
[448.08184814 376.91125488]
[450.75659180 391.67623901]
[452.47000122 406.58337402]
[453.21487427 421.57019043]
[452.98806763 436.57376099]
[451.79055786 451.53118896]
[449.62738037 466.37976074]
[446.50756836 481.05712891]
[442.44424438 495.50180054]
[437.45446777 509.65316772]
[431.55908203 523.45184326]
[424.78289795 536.83996582]
[417.15432739 549.76141357]
[408.70532227 562.16192627]
[399.47137451 573.98956299]
[389.49114990 585.19470215]
[378.80657959 595.73028564]
[367.46243286 605.55218506]
[355.50631714 614.61914062]
[342.98837280 622.89318848]
[329.96109009 630.33959961]
[316.47912598 636.92712402]
[302.59902954 642.62817383]
[288.37899780 647.41876221]
[273.87872314 651.27886963]
[259.15896606 654.19226074]
[244.28149414 656.14672852]
[229.30871582 657.13409424]
[214.30343628 657.15020752]
[199.32856750 656.19500732]
[184.44694519 654.27246094]
[169.72097778 651.39062500]
[155.21243286 647.56164551]
[140.98216248 642.80157471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 151]
[37 150]
[38 149]
[39 148]
[40 147]
[41 146]
[43 144]
[45 141]
[46 140]
[48 138]
[49 137]
[64 122]
[65 121]
[66 120]
[67 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
