%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[168.73408508 914.33642578]
[153.99385071 911.54492188]
[139.38438416 908.13446045]
[124.93169403 904.11120605]
[110.66145325 899.48223877]
[96.59903717 894.25579834]
[82.76945496 888.44122314]
[69.19728851 882.04876709]
[55.90667725 875.08984375]
[42.92124176 867.57678223]
[30.26407242 859.52301025]
[17.95767403 850.94281006]
[6.02392912 841.85144043]
[-5.51594687 832.26507568]
[-16.64143562 822.20080566]
[-27.33275604 811.67639160]
[-37.57089996 800.71063232]
[-47.33766556 789.32305908]
[-56.61568832 777.53381348]
[-65.38846588 765.36395264]
[-73.64040375 752.83508301]
[-81.35683441 739.96948242]
[-88.52404022 726.79003906]
[-95.12926483 713.32012939]
[-101.16078186 699.58374023]
[-106.60784912 685.60534668]
[-111.46080017 671.40972900]
[-115.71099091 657.02209473]
[-119.35087585 642.46813965]
[-122.37397766 627.77362061]
[-124.77491760 612.96478271]
[-126.54943848 598.06787109]
[-127.69437408 583.10937500]
[-128.20770264 568.11590576]
[-128.08848572 553.11413574]
[-127.33696747 538.13073730]
[-125.95446014 523.19232178]
[-123.94343567 508.32550049]
[-121.30745697 493.55667114]
[-118.05122375 478.91207886]
[-114.18051910 464.41775513]
[-109.70221710 450.09951782]
[-104.62429810 435.98281860]
[-98.95578003 422.09271240]
[-92.70673370 408.45391846]
[-85.88828278 395.09069824]
[-78.51255035 382.02676392]
[-70.59264374 369.28543091]
[-62.14263916 356.88928223]
[-53.17757034 344.86035156]
[-43.71337509 333.22009277]
[-33.76688004 321.98913574]
[-23.35576630 311.18746948]
[-12.49854755 300.83428955]
[-1.21452737 290.94805908]
[10.47623253 281.54629517]
[22.55294609 272.64572144]
[34.99414062 264.26217651]
[47.77769470 256.41055298]
[60.88088608 249.10484314]
[74.28041077 242.35800171]
[87.95244598 236.18203735]
[101.87268829 230.58792114]
[116.01638031 225.58561707]
[111.61537933 211.24577332]
[107.21438599 196.90591431]
[102.81338501 182.56607056]
[99.05641937 197.08796692]
[89.78157806 208.87683105]
[76.55182648 215.94602966]
[61.59661484 217.10429382]
[47.43615341 212.15643311]
[36.45673370 201.93623352]
[30.50857925 188.16600037]
[30.59405708 173.16624451]
[36.69876480 159.46469116]
[47.79395294 149.37030029]
[62.00988388 144.58413696]
[76.95092773 145.91276550]
[90.09925079 153.13229370]
[99.23985291 165.02760315]
[90.22045898 153.17433167]
[96.48007202 138.64410400]
[94.91954803 123.72549438]
[93.35902405 108.80689240]
[82.02962494 118.63769531]
[67.25281525 116.05975342]
[59.92150497 102.97342682]
[65.44006348 89.02547455]
[79.74041748 84.49779510]
[92.28002167 92.72663116]
[91.83341980 77.73327637]
[91.38681030 62.73992920]
[82.55130005 53.34330750]
[82.48798370 40.84611511]
[90.68540955 31.95067978]
[90.46208191 16.95234299]
[87.20525360 8.41824150]
[90.34875488 1.72943056]
[90.34875488 -13.27056980]
[77.00762939 -20.88042259]
[69.27265930 -34.14940262]
[69.22451782 -49.50822067]
[76.87615204 -62.82542801]
[90.16931152 -70.51876831]
[105.52819824 -70.51876831]
[118.82135773 -62.82542801]
[126.47299194 -49.50822067]
[126.42485046 -34.14940262]
[118.68988037 -20.88042259]
[105.34875488 -13.27056980]
[105.34875488 1.72943056]
[105.46041870 16.72901535]
[105.68374634 31.72735214]
[115.48228455 46.28604889]
[106.38015747 62.29332352]
[106.82676697 77.28667450]
[107.27336884 92.28002167]
[108.27763367 107.24636841]
[109.83815765 122.16497040]
[111.39868164 137.08357239]
[120.52969360 150.00392151]
[114.15845490 163.46707153]
[117.15322876 178.16506958]
[121.55422974 192.50492859]
[125.95523071 206.84477234]
[130.35623169 221.18461609]
[144.87100220 217.39143372]
[159.53279114 214.21353149]
[174.31552124 211.65652466]
[189.19288635 209.72499084]
[204.13847351 208.42236328]
[219.12567139 207.75093079]
[234.12786865 207.71191406]
[249.11836243 208.30537415]
[264.07049561 209.53024292]
[278.95773315 211.38436890]
[293.75354004 213.86442566]
[308.43167114 216.96603394]
[322.96600342 220.68365479]
[337.33065796 225.01068115]
[351.50015259 229.93943787]
[365.44927979 235.46115112]
[379.15319824 241.56599426]
[392.58761597 248.24313354]
[405.72857666 255.48066711]
[418.55276489 263.26574707]
[431.03735352 271.58456421]
[443.16012573 280.42224121]
[454.89959717 289.76315308]
[466.23480225 299.59063721]
[477.14569092 309.88726807]
[487.61276245 320.63467407]
[497.61749268 331.81381226]
[507.14202881 343.40475464]
[516.16949463 355.38693237]
[524.68377686 367.73901367]
[532.66973877 380.43905640]
[540.11328125 393.46444702]
[547.00103760 406.79208374]
[553.32086182 420.39822388]
[559.06152344 434.25866699]
[564.21270752 448.34881592]
[568.76531982 462.64361572]
[572.71130371 477.11761475]
[576.04357910 491.74508667]
[578.75622559 506.50003052]
[580.84448242 521.35620117]
[582.30456543 536.28723145]
[583.13391113 551.26654053]
[583.33105469 566.26745605]
[582.89569092 581.26336670]
[581.82849121 596.22760010]
[580.13134766 611.13354492]
[577.80737305 625.95471191]
[574.86065674 640.66467285]
[571.29644775 655.23736572]
[567.12109375 669.64685059]
[562.34197998 683.86755371]
[556.96759033 697.87408447]
[551.00750732 711.64160156]
[544.47235107 725.14562988]
[537.37371826 738.36218262]
[529.72424316 751.26770020]
[521.53753662 763.83923340]
[512.82806396 776.05450439]
[503.61145020 787.89178467]
[493.90396118 799.32995605]
[483.72293091 810.34875488]
[473.08645630 820.92858887]
[462.01339722 831.05053711]
[450.52346802 840.69671631]
[438.63714600 849.84997559]
[426.37548828 858.49401855]
[413.76031494 866.61340332]
[400.81408691 874.19378662]
[387.55981445 881.22167969]
[374.02105713 887.68457031]
[360.22186279 893.57098389]
[346.18679810 898.87042236]
[331.94079590 903.57342529]
[317.50918579 907.67175293]
[302.91766357 911.15802002]
[288.19210815 914.02606201]
[273.35876465 916.27081299]
[258.44396973 917.88818359]
[243.47425842 918.87536621]
[228.47622681 919.23065186]
[213.47654724 918.95330811]
[198.50189209 918.04388428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 127]
[65 126]
[66 125]
[67 124]
[81 123]
[83 121]
[84 120]
[85 119]
[91 118]
[92 117]
[93 116]
[96 114]
[97 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
