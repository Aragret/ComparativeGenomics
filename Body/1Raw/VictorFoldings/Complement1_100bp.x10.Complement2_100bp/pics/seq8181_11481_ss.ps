%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[94.30760193 613.18951416]
[79.49211121 619.34429932]
[65.51296997 611.47259521]
[63.09378052 595.61297607]
[74.09033966 583.93157959]
[74.98315430 568.95819092]
[75.87596893 553.98480225]
[76.76878357 539.01135254]
[77.66159821 524.03796387]
[64.35854340 520.04730225]
[52.27633286 513.18176270]
[42.02737808 503.78536987]
[34.13204956 492.33044434]
[28.99228859 479.39395142]
[26.87112808 465.62844849]
[27.87923813 451.72912598]
[31.96916771 438.39880371]
[38.93754959 426.31216431]
[48.43522263 416.08193970]
[59.98471451 408.22750854]
[73.00426483 403.14880371]
[86.83709717 401.10574341]
[88.17533112 386.16555786]
[89.51356506 371.22537231]
[90.85179901 356.28518677]
[92.19003296 341.34500122]
[93.52826691 326.40481567]
[94.86650085 311.46463013]
[95.42471313 296.47500610]
[95.20138550 281.47668457]
[87.27545166 268.86599731]
[94.80643463 254.95217896]
[94.58310699 239.95384216]
[86.65717316 227.34317017]
[94.18814850 213.42933655]
[86.26221466 200.81866455]
[93.79319763 186.90483093]
[93.56987000 171.90649414]
[93.34654236 156.90815735]
[78.84798431 153.24845886]
[65.79015350 145.96186829]
[55.06245804 135.54466248]
[47.39558411 122.70642853]
[43.31174850 108.32157898]
[43.08911896 93.36992645]
[46.74285126 78.86987305]
[54.02408218 65.80904388]
[64.43686676 55.07706833]
[77.27195740 47.40491867]
[91.65512085 43.31517410]
[91.43179321 28.31683731]
[91.20846558 13.31850052]
[78.16749573 7.87058640]
[68.21807098 -2.10604692]
[62.83897400 -15.08182430]
[62.81182480 -29.08503151]
[68.10771179 -42.00141525]
[77.89652252 -51.89339066]
[90.67686462 -57.29070282]
[90.67686462 -72.29070282]
[90.67686462 -87.29070282]
[90.67686462 -102.29070282]
[79.78231049 -113.42382812]
[79.99599457 -128.63595581]
[90.67686462 -138.95364380]
[82.93956757 -152.75381470]
[90.67686462 -165.48109436]
[90.67686462 -180.48109436]
[90.67686462 -195.48109436]
[90.67686462 -210.48109436]
[90.67686462 -225.48109436]
[90.67686462 -240.48109436]
[88.89440155 -255.37480164]
[85.35472870 -269.95117188]
[81.81505585 -284.52755737]
[78.27538300 -299.10394287]
[74.73571014 -313.68029785]
[71.19603729 -328.25668335]
[67.54795074 -342.80630493]
[63.79164886 -357.32836914]
[60.03534698 -371.85043335]
[56.27904892 -386.37246704]
[41.24570084 -385.60867310]
[26.36638832 -387.88702393]
[12.25040531 -393.11425781]
[-0.52420634 -401.07629395]
[-11.43433380 -411.44714355]
[-20.03321457 -423.80206299]
[-25.96873093 -437.63516235]
[-28.99782562 -452.37997437]
[-28.99645996 -467.43270874]
[-25.96468925 -482.17697144]
[-20.02666473 -496.00897217]
[-11.42554092 -508.36233521]
[-0.51353163 -518.73120117]
[12.26252460 -526.69091797]
[26.37945557 -531.91558838]
[41.25918198 -534.19122314]
[56.29238892 -533.42468262]
[70.86347198 -529.64733887]
[84.37576294 -523.01391602]
[96.27593994 -513.79589844]
[106.07669067 -502.37094116]
[113.37668610 -489.20678711]
[117.87699127 -474.84252930]
[119.39333344 -459.86636353]
[117.86360168 -444.89154053]
[113.35045624 -430.53131104]
[106.03868866 -417.37368774]
[96.22772980 -405.95748901]
[84.31932068 -396.75015259]
[70.80110931 -390.12878418]
[74.55740356 -375.60671997]
[78.31370544 -361.08465576]
[82.07000732 -346.56259155]
[86.78836060 -340.87411499]
[85.77241516 -331.79635620]
[89.31208801 -317.21997070]
[92.85175323 -302.64361572]
[96.39142609 -288.06723022]
[99.93109894 -273.49084473]
[103.47077179 -258.91448975]
[107.42608643 -273.38360596]
[116.03501129 -285.66717529]
[128.28619385 -294.32214355]
[142.74037170 -298.33175659]
[157.69947815 -297.22491455]
[171.40614319 -291.13168335]
[182.25010681 -280.76788330]
[188.95744324 -267.35104370]
[190.74017334 -252.45735168]
[187.38887024 -237.83651733]
[179.29724121 -225.20617676]
[167.41587830 -216.05012512]
[153.14059448 -211.44401550]
[138.14843750 -211.92895508]
[124.20066071 -217.44799805]
[112.93585205 -227.35273743]
[105.67686462 -240.48109436]
[105.67686462 -225.48109436]
[105.67686462 -210.48109436]
[105.67686462 -195.48109436]
[105.67686462 -180.48109436]
[105.67686462 -165.48109436]
[113.41416168 -152.75381470]
[105.67686462 -138.95364380]
[116.35773468 -128.63595581]
[116.57141876 -113.42382812]
[105.67686462 -102.29070282]
[105.67686462 -87.29070282]
[105.67686462 -72.29070282]
[105.67686462 -57.29070282]
[120.20421600 -50.63437271]
[130.41157532 -38.26410675]
[134.21624756 -22.62415695]
[130.80725098 -6.83368778]
[120.81742096 5.93530560]
[106.20680237 13.09517288]
[106.43013000 28.09350967]
[106.65345764 43.09184647]
[121.15201569 46.75153732]
[134.20983887 54.03813553]
[144.93754578 64.45532990]
[152.60441589 77.29357147]
[156.68824768 91.67842102]
[156.91088867 106.63007355]
[153.25715637 121.13012695]
[145.97592163 134.19094849]
[135.56314087 144.92292786]
[122.72804260 152.59507751]
[108.34487915 156.68482971]
[108.56820679 171.68316650]
[108.79153442 186.68150330]
[116.73343658 200.36494446]
[109.18648529 213.20600891]
[117.12839508 226.88945007]
[109.58144379 239.73051453]
[109.80477142 254.72885132]
[117.74667358 268.41229248]
[110.19972229 281.25335693]
[110.42304993 296.25167847]
[120.80739594 285.42739868]
[135.70591736 283.68545532]
[148.30718994 291.82226562]
[152.85009766 306.11779785]
[147.25767517 320.03631592]
[134.08671570 327.21444702]
[119.35879517 324.37048340]
[109.80668640 312.80285645]
[108.46845245 327.74304199]
[107.13021851 342.68322754]
[105.79198456 357.62341309]
[104.45375061 372.56359863]
[103.11551666 387.50378418]
[101.77728271 402.44396973]
[117.01101685 407.88635254]
[130.31706238 417.06723022]
[140.79835510 429.36090088]
[147.75003052 443.93212891]
[150.70677185 459.79269409]
[149.47398376 475.86856079]
[144.14057922 491.07257080]
[135.07261658 504.37799072]
[122.88814545 514.88775635]
[108.41508484 521.89508057]
[92.63500214 524.93078613]
[91.74218750 539.90417480]
[90.84937286 554.87762451]
[89.95655823 569.85101318]
[89.06374359 584.82440186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 210]
[6 209]
[7 208]
[8 207]
[9 206]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 181]
[30 180]
[32 178]
[33 177]
[35 175]
[37 173]
[38 172]
[39 171]
[50 160]
[51 159]
[52 158]
[59 152]
[60 151]
[61 150]
[62 149]
[65 146]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 115]
[80 114]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
