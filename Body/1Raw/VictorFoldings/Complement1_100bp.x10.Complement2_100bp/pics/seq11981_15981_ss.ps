%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[77.54004669 535.17535400]
[63.43297195 529.94989014]
[50.52638626 522.22106934]
[39.25988770 512.25213623]
[30.01720428 500.38250732]
[23.11314201 487.01657104]
[18.78284836 472.60949707]
[17.17381287 457.65203857]
[18.34083748 442.65362549]
[22.24417686 428.12509155]
[28.75088120 414.56124878]
[37.63933563 402.42410278]
[48.60680389 392.12707520]
[61.27973557 384.02081299]
[75.22650146 378.38143921]
[89.97206879 375.40103149]
[89.74874115 360.40270996]
[89.52541351 345.40435791]
[89.30208588 330.40603638]
[89.07875824 315.40768433]
[88.85543060 300.40936279]
[80.39678955 291.76193237]
[80.08798218 279.26840210]
[88.63980865 269.61285400]
[88.63980865 254.61286926]
[88.63980865 239.61286926]
[88.63980865 224.61286926]
[88.52813721 209.61328125]
[80.60221100 197.00262451]
[88.13318634 183.08877563]
[75.97190094 191.86962891]
[61.48400879 187.98364258]
[55.34943771 174.29542542]
[62.09036636 160.89543152]
[76.73763275 157.66163635]
[88.49309540 166.97637939]
[89.38591003 152.00297546]
[90.27872467 137.02957153]
[91.17153931 122.05615997]
[92.06435394 107.08275604]
[91.84102631 92.08441925]
[90.50279236 77.14423370]
[86.62024689 68.87599945]
[89.25755310 61.97191238]
[88.14190674 47.01346207]
[87.02625275 32.05500793]
[78.28397369 18.86853218]
[85.05323029 5.60103750]
[83.93758392 -9.35741615]
[73.21953583 -24.33089066]
[81.45029449 -39.82997513]
[80.11205292 -54.77016068]
[78.77381897 -69.71034241]
[77.43558502 -84.65052795]
[71.64226532 -70.81443787]
[61.90462494 -59.40486526]
[49.15080643 -51.50928879]
[34.59641647 -47.88027191]
[19.62869072 -48.86370850]
[5.67425394 -54.36586380]
[-5.93684435 -63.86230469]
[-14.09790897 -76.44789124]
[-18.03107834 -90.92304993]
[-17.36146736 -105.90809631]
[-12.15290165 -119.97475433]
[-2.90182567 -131.78227234]
[9.51000595 -140.20524597]
[23.89957619 -144.44084167]
[38.89536285 -144.08535767]
[53.06806564 -139.17265320]
[65.06682587 -130.17100525]
[73.74800873 -117.93838501]
[78.28433990 -103.63959503]
[80.95013428 -118.40081787]
[83.61592865 -133.16203308]
[86.28173065 -147.92324829]
[88.94752502 -162.68446350]
[74.47473145 -166.66499329]
[60.41702271 -171.92683411]
[46.88757706 -178.42764282]
[33.99533081 -186.11505127]
[21.84408951 -194.92716980]
[10.53168392 -204.79306030]
[0.14920078 -215.63327026]
[-9.21976662 -227.36053467]
[-17.49978256 -239.88041687]
[-24.62417793 -253.09213257]
[-30.53559494 -266.88928223]
[-35.18643188 -281.16079712]
[-38.53924942 -295.79174805]
[-40.56704330 -310.66433716]
[-41.25349426 -325.65884399]
[-40.59307098 -340.65451050]
[-38.59109116 -355.53060913]
[-35.26367569 -370.16735840]
[-30.63761330 -384.44692993]
[-24.75015259 -398.25433350]
[-17.64869690 -411.47836304]
[-9.39042377 -424.01260376]
[-0.04182507 -435.75613403]
[10.32182789 -446.61434937]
[21.61709213 -456.49984741]
[33.75302124 -465.33303833]
[46.63190460 -473.04281616]
[60.15004730 -479.56707764]
[74.19860077 -484.85333252]
[88.66446686 -488.85897827]
[103.43115234 -491.55175781]
[118.37977600 -492.91003418]
[133.38998413 -492.92282104]
[148.34089661 -491.59005737]
[163.11215210 -488.92242432]
[177.58482361 -484.94146729]
[191.64237976 -479.67919922]
[205.17161560 -473.17797852]
[218.06362915 -465.49017334]
[230.21459961 -456.67767334]
[241.52670288 -446.81146240]
[251.90885925 -435.97091675]
[261.27746582 -424.24337769]
[269.55709839 -411.72323608]
[276.68109131 -398.51129150]
[282.59210205 -384.71395874]
[287.24249268 -370.44232178]
[290.59484863 -355.81124878]
[292.62219238 -340.93859863]
[293.30819702 -325.94409180]
[292.64730835 -310.94842529]
[290.64486694 -296.07238770]
[287.31701660 -281.43572998]
[282.69052124 -267.15631104]
[276.80264282 -253.34910583]
[269.70077515 -240.12527466]
[261.44210815 -227.59129333]
[252.09317017 -215.84806824]
[241.72918701 -204.99015808]
[230.43360901 -195.10499573]
[218.29740906 -186.27217102]
[205.41828918 -178.56278992]
[191.89994812 -172.03894043]
[177.85124207 -166.75312805]
[163.38525391 -162.74792480]
[148.61848450 -160.05558777]
[133.66981506 -158.69778442]
[118.65961456 -158.68544006]
[103.70874023 -160.01867676]
[101.04294586 -145.25746155]
[98.37715149 -130.49623108]
[95.71135712 -115.73502350]
[93.04555511 -100.97380066]
[92.37577057 -85.98876190]
[93.71400452 -71.04857635]
[95.05223846 -56.10839462]
[96.39047241 -41.16820908]
[105.46885681 -33.17386246]
[106.70603180 -20.73789787]
[98.89604187 -10.47306442]
[100.01168823 4.48538876]
[108.67417145 16.60193443]
[101.98471069 30.93935776]
[103.10035706 45.89781189]
[104.21600342 60.85626602]
[105.44297791 75.80599976]
[106.78121185 90.74618530]
[114.51473999 77.89345551]
[127.59038544 70.54312134]
[142.59020996 70.61652374]
[155.59329224 78.09449005]
[163.20065308 91.02229309]
[163.42375183 106.02062988]
[156.20426941 119.16898346]
[143.42936707 127.03039551]
[128.43836975 127.54991913]
[115.14987946 120.59174347]
[107.03776550 107.97557068]
[106.14495087 122.94897461]
[105.25212860 137.92237854]
[104.35931396 152.89578247]
[103.46649933 167.86918640]
[103.13152313 182.86544800]
[111.07343292 196.54890442]
[103.52648163 209.38995361]
[106.78330994 217.92405701]
[103.63980865 224.61286926]
[103.63980865 239.61286926]
[103.63980865 254.61286926]
[103.63980865 269.61285400]
[113.21449280 285.34204102]
[103.85376740 300.18603516]
[104.07709503 315.18435669]
[104.30042267 330.18270874]
[104.52375031 345.18103027]
[104.74707794 360.17938232]
[104.97040558 375.17770386]
[119.79817963 377.71777344]
[133.90666199 382.93939209]
[146.81532288 390.66473389]
[158.08451843 400.63067627]
[167.33039856 412.49777222]
[174.23806763 425.86187744]
[178.57223511 440.26776123]
[180.18530273 455.22479248]
[179.02232361 470.22351074]
[175.12290955 484.75311279]
[168.61985779 498.31869507]
[159.73468018 510.45822144]
[148.76997375 520.75823975]
[136.09922791 528.86791992]
[122.15399170 534.51104736]
[107.40922546 537.49542236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 194]
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[24 187]
[25 186]
[26 185]
[27 184]
[28 182]
[30 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 164]
[42 163]
[44 162]
[45 161]
[46 160]
[48 158]
[49 157]
[51 154]
[52 153]
[53 152]
[54 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
