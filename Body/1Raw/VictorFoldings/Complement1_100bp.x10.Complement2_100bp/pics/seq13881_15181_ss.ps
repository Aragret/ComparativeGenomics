%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[76.85926056 607.47442627]
[64.42207336 615.89733887]
[51.00988770 622.66058350]
[36.84292603 627.65313721]
[22.15383339 630.79296875]
[7.18381214 632.02862549]
[-7.82131290 631.33978271]
[-22.61514473 628.73767090]
[-36.95475769 624.26513672]
[-50.60467529 617.99548340]
[-63.34076309 610.03179932]
[-74.95388031 600.50482178]
[-85.25331879 589.57092285]
[-94.06996918 577.40972900]
[-101.25904083 564.22088623]
[-106.70249176 550.22094727]
[-110.31092834 535.63989258]
[-112.02509308 520.71710205]
[-111.81685638 505.69760132]
[-109.68962097 490.82806396]
[-105.67832184 476.35266113]
[-99.84883118 462.50906372]
[-92.29686737 449.52459717]
[-83.14644623 437.61248779]
[-72.54782867 426.96835327]
[-60.67505264 417.76696777]
[-47.72307205 410.15942383]
[-33.90457916 404.27066040]
[-19.44648170 400.19738770]
[-4.58619547 398.00643921]
[10.43226051 397.73382568]
[25.36226845 399.38403320]
[20.84683990 385.19036865]
[31.62216568 373.60577393]
[35.16183853 359.02938843]
[38.70151138 344.45300293]
[31.91543961 326.34677124]
[46.05219650 311.97616577]
[49.15630722 297.30084229]
[52.26041794 282.62554932]
[55.36452866 267.95025635]
[58.46863937 253.27494812]
[47.57773590 238.56086731]
[50.95862961 220.24468994]
[66.92310333 210.04420471]
[69.58889771 195.28297424]
[72.25469208 180.52175903]
[74.92048645 165.76054382]
[62.01232147 173.40118408]
[47.44850159 169.81021118]
[39.57183838 157.04469299]
[42.89445114 142.41731262]
[55.51298904 134.30729675]
[70.19898224 137.36041260]
[78.53943634 149.82678223]
[74.44860840 135.50497437]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[96.16468048 56.42515945]
[106.99604034 46.20111847]
[103.18932343 30.84470177]
[114.02067566 20.62066078]
[117.99276733 6.15613651]
[106.05194855 -3.20828462]
[98.62609863 -16.39539337]
[96.81967926 -31.38040161]
[100.87703705 -45.87610626]
[110.14990234 -57.68198013]
[123.20075989 -65.01823425]
[138.02558899 -66.79407501]
[141.99769592 -81.25859833]
[145.96978760 -95.72312164]
[149.94187927 -110.18764496]
[153.91398621 -124.65216827]
[157.88607788 -139.11669922]
[161.85816956 -153.58122253]
[165.83026123 -168.04574585]
[169.69458008 -182.53942871]
[173.45086670 -197.06149292]
[160.57089233 -189.37345886]
[145.74295044 -191.63893127]
[135.74620056 -202.82217407]
[135.15101624 -217.81036377]
[144.22950745 -229.75108337]
[158.83110046 -233.18522644]
[172.28015137 -226.54272461]
[178.42808533 -212.85859680]
[183.67480469 -226.91107178]
[188.92152405 -240.96354675]
[194.16824341 -255.01600647]
[180.86581421 -261.99084473]
[168.54248047 -270.57797241]
[157.39260864 -280.64196777]
[147.59204102 -292.02404785]
[139.29534912 -304.54476929]
[132.63339233 -318.00662231]
[127.71123505 -332.19729614]
[124.60650635 -346.89300537]
[123.36816406 -361.86196899]
[124.01574707 -376.86810303]
[126.53903961 -391.67474365]
[130.89823914 -406.04833984]
[137.02461243 -419.76223755]
[144.82153320 -432.60012817]
[154.16601562 -444.35952759]
[164.91069031 -454.85501099]
[176.88610840 -463.92102051]
[189.90339661 -471.41458130]
[203.75724792 -477.21752930]
[218.22917175 -481.23828125]
[233.09092712 -483.41351318]
[248.10812378 -483.70883179]
[263.04391479 -482.11962891]
[277.66271973 -478.67095947]
[291.73400879 -473.41720581]
[305.03585815 -466.44125366]
[317.35848999 -457.85308838]
[328.50750732 -447.78817749]
[338.30709839 -436.40524292]
[346.60275269 -423.88385010]
[353.26358032 -410.42141724]
[358.18453979 -396.23031616]
[361.28802490 -381.53436279]
[362.52511597 -366.56527710]
[361.87625122 -351.55920410]
[359.35171509 -336.75280762]
[354.99130249 -322.37954712]
[348.86376953 -308.66619873]
[341.06579590 -295.82894897]
[331.72030640 -284.07031250]
[320.97476196 -273.57574463]
[308.99856567 -264.51074219]
[295.98065186 -257.01828003]
[282.12631226 -251.21650696]
[267.65405273 -247.19696045]
[252.79211426 -245.02301025]
[237.77490234 -244.72894287]
[222.83924866 -246.31939697]
[208.22071838 -249.76928711]
[202.97399902 -235.71682739]
[197.72727966 -221.66435242]
[192.48056030 -207.61187744]
[187.97293091 -193.30519104]
[184.21662903 -178.78312683]
[185.58496094 -171.52024841]
[180.29478455 -164.07363892]
[176.32269287 -149.60911560]
[172.35060120 -135.14459229]
[168.37850952 -120.68007660]
[164.40640259 -106.21555328]
[160.43431091 -91.75102234]
[156.46221924 -77.28649902]
[152.49011230 -62.82197952]
[164.32890320 -53.72405243]
[171.80278015 -40.75151443]
[173.74583435 -25.86563683]
[169.83113098 -11.33076191]
[160.62510681 0.63012540]
[147.50595093 8.17538071]
[132.45729065 10.12823296]
[128.48519897 24.59275627]
[132.57601929 38.91457367]
[121.46056366 50.17321396]
[125.55139160 64.49502563]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[103.83531952 143.57484436]
[93.00395966 153.79888916]
[89.68170166 168.42634583]
[87.01590729 183.18756104]
[84.35011292 197.94877625]
[81.68431854 212.70999146]
[90.23431396 220.97039795]
[93.69973755 232.21725464]
[91.33024597 243.62248230]
[83.82774353 252.37623596]
[73.14394379 256.37905884]
[70.03983307 271.05435181]
[66.93572235 285.72964478]
[63.83160782 300.40496826]
[60.72750092 315.08026123]
[67.17754364 323.83843994]
[67.73131561 334.48144531]
[62.44709396 343.48284912]
[53.27788544 347.99267578]
[49.73821259 362.56906128]
[46.19853973 377.14544678]
[50.46078873 392.38171387]
[39.93864441 402.92370605]
[53.96270752 408.30459595]
[67.18350983 415.43472290]
[79.38396454 424.19699097]
[90.36371613 434.44750977]
[99.94247437 446.01797485]
[107.96295166 458.71838379]
[114.29343414 472.34017944]
[118.82997894 486.65969849]
[121.49808502 501.44174194]
[122.25393677 516.44366455]
[121.08513641 531.41906738]
[118.01086426 546.12200928]
[113.08160400 560.31109619]
[106.37831116 573.75335693]
[98.01103973 586.22802734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 195]
[34 193]
[35 192]
[36 191]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[45 178]
[46 177]
[47 176]
[48 175]
[55 174]
[57 172]
[58 171]
[60 169]
[61 168]
[63 166]
[65 164]
[66 163]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[79 150]
[80 149]
[81 147]
[82 146]
[90 145]
[91 144]
[92 143]
[93 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
