%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[129.52941895 198.98074341]
[129.66726685 214.06860352]
[125.89444733 228.67779541]
[118.46820831 241.81222534]
[107.89487457 252.57637024]
[94.89535522 260.23632812]
[80.35597992 264.26983643]
[65.26807404 264.40185547]
[50.66034698 260.62338257]
[37.52878189 253.19206238]
[26.76871109 242.61457825]
[19.11377335 229.61210632]
[15.08589554 215.07118225]
[14.95970440 199.98321533]
[18.74380302 185.37695312]
[26.18018723 172.24826050]
[36.76182938 161.49226379]
[49.76726151 153.84236145]
[64.30974579 149.82008362]
[79.39775085 149.69972229]
[83.15405273 135.17765808]
[86.91034698 120.65560913]
[90.66664886 106.13354492]
[94.31473541 91.58392334]
[97.85440826 77.00755310]
[101.39408112 62.43117523]
[104.93375397 47.85480118]
[91.59369659 54.71358109]
[77.26943970 50.26211929]
[70.16655731 37.05041504]
[74.35391235 22.64673233]
[87.43280029 15.30215549]
[101.91102600 19.22399139]
[109.49468994 32.16469193]
[114.32068634 17.96223831]
[119.14668274 3.75978184]
[123.97267914 -10.44267368]
[128.79867554 -24.64513016]
[133.62467957 -38.84758377]
[138.45066833 -53.05004120]
[124.45491028 -58.45203400]
[110.69113922 -64.42040253]
[97.18226624 -70.94520569]
[83.95076752 -78.01558685]
[71.01867676 -85.61978149]
[58.40750885 -93.74513245]
[46.13825607 -102.37811279]
[34.23134232 -111.50434875]
[22.70658684 -121.10865784]
[11.58316708 -131.17506409]
[0.87959921 -141.68678284]
[-9.38630199 -152.62635803]
[-19.19745064 -163.97554016]
[-28.53751564 -175.71546936]
[-37.39095306 -187.82661438]
[-45.74302673 -200.28877258]
[-53.57983398 -213.08125305]
[-60.88833237 -226.18272400]
[-67.65635681 -239.57139587]
[-73.87264252 -253.22499084]
[-79.52684784 -267.12078857]
[-84.60955811 -281.23562622]
[-89.11230469 -295.54605103]
[-93.02761078 -310.02819824]
[-96.34894562 -324.65802002]
[-99.07079315 -339.41113281]
[-101.18860626 -354.26300049]
[-102.69887543 -369.18887329]
[-103.59908295 -384.16394043]
[-103.88773346 -399.16326904]
[-103.56433105 -414.16186523]
[-102.62943268 -429.13479614]
[-101.08458710 -444.05712891]
[-98.93236542 -458.90405273]
[-96.17634583 -473.65081787]
[-92.82112122 -488.27288818]
[-88.87227631 -502.74597168]
[-84.33638000 -517.04589844]
[-79.22097778 -531.14892578]
[-73.53459930 -545.03155518]
[-67.28668976 -558.67071533]
[-60.48766327 -572.04370117]
[-53.14883041 -585.12823486]
[-45.28240585 -597.90246582]
[-36.90147781 -610.34527588]
[-28.02000618 -622.43585205]
[-18.65276337 -634.15411377]
[-8.81534672 -645.48052979]
[1.47587347 -656.39630127]
[12.20376778 -666.88317871]
[23.35048103 -676.92376709]
[34.89746094 -686.50140381]
[46.82548523 -695.59997559]
[59.11470413 -704.20452881]
[71.74466705 -712.30065918]
[84.69434357 -719.87487793]
[97.94218445 -726.91455078]
[111.46614075 -733.40802002]
[125.24370575 -739.34448242]
[139.25193787 -744.71405029]
[153.46754456 -749.50775146]
[167.86683655 -753.71765137]
[182.42585754 -757.33673096]
[197.12039185 -760.35888672]
[211.92596436 -762.77923584]
[226.81793213 -764.59362793]
[241.77151489 -765.79907227]
[256.76181030 -766.39361572]
[271.76391602 -766.37622070]
[286.75280762 -765.74688721]
[301.70355225 -764.50677490]
[316.59127808 -762.65783691]
[331.39117432 -760.20318604]
[346.07864380 -757.14691162]
[360.62924194 -753.49407959]
[375.01873779 -749.25079346]
[389.22317505 -744.42413330]
[403.21893311 -739.02209473]
[416.98266602 -733.05371094]
[430.49154663 -726.52880859]
[443.72302246 -719.45843506]
[456.65509033 -711.85418701]
[469.26623535 -703.72882080]
[481.53546143 -695.09576416]
[493.44235229 -685.96954346]
[504.96707153 -676.36517334]
[516.09045410 -666.29876709]
[526.79400635 -655.78698730]
[537.05987549 -644.84741211]
[546.87097168 -633.49816895]
[556.21099854 -621.75817871]
[565.06439209 -609.64703369]
[573.41644287 -597.18487549]
[581.25323486 -584.39239502]
[588.56170654 -571.29089355]
[595.32965088 -557.90216064]
[601.54589844 -544.24853516]
[607.20007324 -530.35278320]
[612.28277588 -516.23791504]
[616.78546143 -501.92745972]
[620.70074463 -487.44528198]
[624.02203369 -472.81546021]
[626.74383545 -458.06234741]
[628.86163330 -443.21047974]
[630.37182617 -428.28460693]
[631.27197266 -413.30953979]
[631.56060791 -398.31021118]
[631.23718262 -383.31161499]
[630.30218506 -368.33868408]
[628.75732422 -353.41635132]
[626.60504150 -338.56942749]
[623.84899902 -323.82266235]
[620.49371338 -309.20059204]
[616.54486084 -294.72753906]
[612.00891113 -280.42761230]
[606.89349365 -266.32461548]
[601.20703125 -252.44197083]
[594.95910645 -238.80284119]
[588.16003418 -225.42990112]
[580.82116699 -212.34541321]
[572.95471191 -199.57115173]
[564.57373047 -187.12838745]
[555.69226074 -175.03782654]
[546.32495117 -163.31959534]
[536.48748779 -151.99319458]
[526.19628906 -141.07748413]
[515.46832275 -130.59060669]
[504.32159424 -120.55004120]
[492.77459717 -110.97248840]
[480.84652710 -101.87389374]
[468.55728149 -93.26940155]
[455.92730713 -85.17333221]
[442.97760010 -77.59915924]
[429.72973633 -70.55948639]
[416.20578003 -64.06604004]
[402.42819214 -58.12961578]
[388.41995239 -52.76010513]
[374.20431519 -47.96643829]
[359.80502319 -43.75659561]
[345.24597168 -40.13758469]
[330.55145264 -37.11542892]
[315.74588013 -34.69515610]
[300.85388184 -32.88079834]
[285.90029907 -31.67537498]
[270.91000366 -31.08088875]
[255.90791321 -31.09833145]
[240.91902161 -31.72767639]
[225.96827698 -32.96787262]
[211.08056641 -34.81685638]
[196.28065491 -37.27154922]
[181.59318542 -40.32786942]
[167.04260254 -43.98072815]
[152.65312195 -48.22404480]
[147.82713318 -34.02158737]
[143.00112915 -19.81913185]
[138.17514038 -5.61667633]
[133.34913635 8.58577919]
[128.52314758 22.78823471]
[123.69714355 36.99069214]
[119.51013184 51.39447403]
[115.97045898 65.97084808]
[112.43078613 80.54722595]
[108.89111328 95.12359619]
[110.20043182 103.07710266]
[105.18871307 109.88984680]
[101.43241119 124.41190338]
[97.67610931 138.93395996]
[93.91980743 153.45602417]
[107.05710602 160.87719727]
[117.82534027 171.44638062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 208]
[21 207]
[22 206]
[23 205]
[24 203]
[25 202]
[26 201]
[27 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
