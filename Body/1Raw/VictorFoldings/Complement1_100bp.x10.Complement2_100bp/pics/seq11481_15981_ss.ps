%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[111.36540222 682.19915771]
[98.20636749 674.98205566]
[85.67073822 666.72955322]
[73.83981323 657.49505615]
[62.79032898 647.33850098]
[52.59394455 636.32580566]
[43.31678391 624.52832031]
[35.01901627 612.02258301]
[27.75445366 598.88970947]
[21.57021713 585.21484375]
[16.50640869 571.08673096]
[12.59587193 556.59692383]
[9.86396790 541.83947754]
[8.32841396 526.91003418]
[7.99916935 511.90542603]
[8.87836933 496.92297363]
[10.96031189 482.05987549]
[14.23149395 467.41250610]
[18.67070198 453.07583618]
[24.24914360 439.14288330]
[30.93064117 425.70397949]
[38.67186356 412.84631348]
[47.42259979 400.65325928]
[57.12610245 389.20385742]
[67.71943665 378.57241821]
[79.13390350 368.82788086]
[91.29547119 360.03341675]
[104.12527466 352.24606323]
[117.54009247 345.51635742]
[131.45292664 339.88793945]
[145.77355957 335.39727783]
[142.45129395 320.76980591]
[139.12902832 306.14233398]
[135.80677795 291.51489258]
[125.44274902 280.81741333]
[129.93136597 265.64627075]
[126.60910797 251.01881409]
[123.28684998 236.39135742]
[112.92282867 225.69386292]
[117.41144562 210.52275085]
[114.08918762 195.89529419]
[110.76692963 181.26782227]
[107.44467163 166.64036560]
[104.12240601 152.01290894]
[100.80014801 137.38545227]
[90.43612671 126.68795776]
[94.92474365 111.51683807]
[91.27665710 96.96721649]
[87.30456543 82.50269318]
[83.33246613 68.03816986]
[79.36036682 53.57364655]
[75.38827515 39.10912323]
[71.41617584 24.64459991]
[67.44408417 10.18007565]
[64.57998657 24.90410233]
[58.93582153 38.80170441]
[50.72259140 51.35331345]
[40.24735641 62.08967209]
[27.90173721 70.60939789]
[14.14729023 76.59397888]
[-0.50176907 79.81966400]
[-15.49777317 80.16587067]
[-30.28008652 77.61965179]
[-44.29605865 72.27620697]
[-57.02169800 64.33528900]
[-67.98123932 54.09378433]
[-76.76496124 41.93457794]
[-83.04447174 28.31225204]
[-86.58500671 13.73608685]
[-87.25420380 -1.24897826]
[-85.02703857 -16.08271599]
[-79.98678589 -30.21055412]
[-72.32186890 -43.10431290]
[-62.31885147 -54.28195572]
[-50.35169983 -63.32558823]
[-36.86782074 -69.89711761]
[-22.37131310 -73.75085449]
[-7.40414333 -74.74272919]
[7.47413206 -72.83565521]
[21.70727730 -68.10093689]
[34.76317596 -60.71557999]
[46.15372467 -50.95568848]
[55.45307541 -39.18615341]
[62.31357193 -25.84697533]
[66.47760010 -11.44285488]
[69.14340210 -26.20407104]
[71.80919647 -40.96529007]
[74.47499084 -55.72650528]
[77.14078522 -70.48772430]
[71.97921753 -85.44328308]
[81.85523224 -96.59288025]
[84.52102661 -111.35409546]
[87.07685852 -126.13475037]
[80.19492340 -143.21458435]
[91.85066986 -156.33366394]
[94.07579041 -171.16770935]
[96.30090332 -186.00175476]
[98.52602386 -200.83580017]
[84.58273315 -206.56712341]
[72.41661835 -215.46931458]
[62.73501205 -227.02482605]
[56.10077667 -240.56182861]
[52.89962006 -255.29330444]
[53.31766129 -270.36276245]
[57.33058929 -284.89410400]
[64.70510101 -298.04248047]
[75.01244354 -309.04348755]
[87.65337372 -317.25750732]
[101.89295959 -322.20703125]
[116.90332794 -323.60424805]
[131.81179810 -321.36798096]
[145.75161743 -315.62820435]
[157.91232300 -306.71862793]
[167.58692932 -295.15725708]
[174.21295166 -281.61624146]
[177.40518188 -266.88281250]
[176.97799683 -251.81361389]
[172.95626831 -237.28471375]
[165.57379150 -224.14080811]
[155.25976562 -213.14605713]
[142.61386108 -204.93968201]
[128.37127686 -199.99880981]
[113.36006927 -198.61067200]
[111.13494873 -183.77662659]
[108.90983582 -168.94259644]
[106.68471527 -154.10855103]
[113.62021637 -144.19767761]
[111.88783264 -131.82096863]
[101.87613678 -123.68902588]
[103.88696289 -116.57717896]
[99.28224945 -108.68830109]
[96.61645508 -93.92708588]
[101.96869659 -80.02734375]
[91.90200043 -67.82192993]
[89.23620605 -53.06071091]
[86.57041168 -38.29949188]
[83.90461731 -23.53827667]
[81.23882294 -8.77705860]
[81.90860748 6.20797968]
[85.88069916 20.67250443]
[89.85279846 35.13702774]
[93.82489777 49.60155106]
[97.79698944 64.06607819]
[101.76908875 78.53060150]
[105.74118042 92.99512482]
[108.78872681 95.35835266]
[110.77979279 99.05342102]
[111.14293671 103.57836914]
[109.55220795 108.19458008]
[120.15386200 119.93832397]
[115.42761230 134.06318665]
[118.74987030 148.69064331]
[122.07212830 163.31811523]
[125.39438629 177.94557190]
[128.71664429 192.57302856]
[132.03890991 207.20048523]
[142.64056396 218.94422913]
[137.91430664 233.06909180]
[141.23657227 247.69656372]
[144.55883789 262.32400513]
[155.16047668 274.06774902]
[150.43423462 288.19262695]
[153.75650024 302.82009888]
[157.07875061 317.44754028]
[160.40101624 332.07501221]
[175.25645447 329.93905640]
[190.23559570 329.00540161]
[205.24128723 329.28012085]
[220.17620850 330.76138306]
[234.94352722 333.43963623]
[249.44743347 337.29748535]
[263.59387207 342.30990601]
[277.29110718 348.44439697]
[290.45031738 355.66116333]
[302.98611450 363.91342163]
[314.81723022 373.14764404]
[325.86694336 383.30395508]
[336.06356812 394.31643677]
[345.34100342 406.11370850]
[353.63903809 418.61926270]
[360.90390015 431.75198364]
[367.08843994 445.42669678]
[372.15255737 459.55471802]
[376.06341553 474.04443359]
[378.79565430 488.80184937]
[380.33151245 503.73126221]
[380.66110229 518.73583984]
[379.78222656 533.71832275]
[377.70062256 548.58142090]
[374.42974854 563.22888184]
[369.99087524 577.56567383]
[364.41271973 591.49871826]
[357.73153687 604.93774414]
[349.99060059 617.79559326]
[341.24011230 629.98889160]
[331.53686523 641.43847656]
[320.94375610 652.07012939]
[309.52951050 661.81494141]
[297.36813354 670.60968018]
[284.53851318 678.39727783]
[271.12384033 685.12731934]
[257.21112061 690.75604248]
[242.89060974 695.24700928]
[228.25514221 698.57110596]
[213.39965820 700.70672607]
[198.42050171 701.64007568]
[183.41481018 701.36499023]
[168.47990417 699.88342285]
[153.71266174 697.20483398]
[139.20884705 693.34667969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 165]
[32 164]
[33 163]
[34 162]
[36 160]
[37 159]
[38 158]
[40 156]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[47 149]
[48 145]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[54 139]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[91 132]
[92 131]
[93 129]
[95 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
