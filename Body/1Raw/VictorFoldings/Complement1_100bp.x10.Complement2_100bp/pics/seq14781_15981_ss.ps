%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[167.99484253 809.02557373]
[153.60702515 804.73968506]
[139.71742249 799.04248047]
[126.46412659 791.99066162]
[113.97883606 783.65423584]
[102.38563538 774.11608887]
[91.79975128 763.47100830]
[82.32640076 751.82476807]
[74.05972290 739.29321289]
[67.08188629 726.00079346]
[61.46224213 712.07965088]
[57.25664139 697.66815186]
[54.50687790 682.90948486]
[53.24028778 667.95037842]
[53.46945190 652.93951416]
[55.19210052 638.02606201]
[58.39110565 623.35827637]
[63.03467941 609.08184814]
[69.07666779 595.33874512]
[76.45702362 582.26550293]
[85.10238647 569.99212646]
[94.92684174 558.64056396]
[105.83274841 548.32354736]
[117.71170807 539.14373779]
[130.44566345 531.19232178]
[143.90805054 524.54833984]
[157.96508789 519.27783203]
[172.47703552 515.43310547]
[187.29969788 513.05249023]
[186.40687561 498.07907104]
[185.51406860 483.10565186]
[184.62124634 468.13226318]
[182.72795105 453.25222778]
[179.84268188 438.53234863]
[176.95741272 423.81243896]
[174.07214355 409.09255981]
[171.18687439 394.37265015]
[168.30158997 379.65277100]
[151.37989807 370.00027466]
[146.94421387 350.71743774]
[158.29222107 334.13726807]
[154.75254822 319.56088257]
[151.21287537 304.98449707]
[147.67320251 290.40814209]
[130.60865784 290.95886230]
[113.83250427 287.75378418]
[98.16152954 280.94622803]
[84.35935211 270.86492920]
[73.09913635 257.99829102]
[64.93083954 242.97058105]
[60.25427246 226.51173401]
[59.29959106 209.42189026]
[62.11594009 192.53244019]
[68.56893921 176.66566467]
[78.34709930 162.59463501]
[90.97684479 151.00553894]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[68.77457428 55.59288406]
[65.22538757 43.61010361]
[70.61396027 32.78005981]
[66.21296692 18.44021416]
[61.81196594 4.10036755]
[52.58510208 15.92681885]
[37.58835983 16.23936081]
[27.87677765 4.80759811]
[30.60937500 -9.94139862]
[43.77178192 -17.13521767]
[57.66004944 -11.47206402]
[54.33778763 -26.09952545]
[43.73613358 -37.84326935]
[48.46238327 -51.96813202]
[45.14012527 -66.59559631]
[41.81786728 -81.22305298]
[38.49560547 -95.85051727]
[35.17334747 -110.47797394]
[20.14666748 -109.81563568]
[5.24323702 -111.84725952]
[-9.05786228 -116.50755310]
[-22.29690933 -123.64669800]
[-34.04832458 -133.03520203]
[-43.93434525 -144.37127686]
[-51.63718033 -157.29048157]
[-56.90921021 -171.37754822]
[-59.58096695 -186.17962646]
[-59.56656265 -201.22088623]
[-56.86645889 -216.01782227]
[-51.56745529 -230.09477234]
[-43.83989334 -242.99920654]
[-33.93217850 -254.31631470]
[-22.16280174 -263.68231201]
[-8.91010571 -270.79608154]
[5.39989376 -275.42895508]
[20.30718803 -277.43203735]
[35.33257294 -276.74093628]
[49.99303818 -273.37780762]
[63.81731415 -267.45083618]
[76.36100769 -259.15051270]
[87.22089386 -248.74363708]
[96.04786682 -236.56478882]
[102.55817413 -223.00546265]
[106.54254913 -208.50151062]
[107.87289429 -193.51918030]
[106.50645447 -178.54011536]
[102.48715210 -164.04580688]
[95.94419098 -150.50219727]
[87.08790588 -138.34465027]
[76.20298004 -127.96398163]
[63.63932419 -119.69389343]
[49.80080795 -113.80023193]
[53.12306595 -99.17277527]
[56.44532776 -84.54531097]
[59.76758575 -69.91785431]
[63.08984375 -55.29039383]
[73.45386505 -44.59290314]
[68.96524811 -29.42178345]
[72.28750610 -14.79432392]
[76.15181732 -0.30063063]
[80.55281067 14.03921604]
[84.95381165 28.37906456]
[98.42670441 39.62397766]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[133.04492188 136.15289307]
[146.07015991 136.63957214]
[158.82756042 139.29551697]
[170.95854187 144.04489136]
[182.12229919 150.75309753]
[192.00540161 159.23045349]
[200.33061218 169.23767090]
[206.86463928 180.49253845]
[211.42465210 192.67793274]
[213.88345337 205.45071411]
[214.17300415 218.45140076]
[212.28628540 231.31430054]
[208.27748108 243.67778015]
[202.26042175 255.19444275]
[194.40533447 265.54086304]
[184.93409729 274.42669678]
[174.11386108 281.60287476]
[162.24958801 286.86846924]
[165.78926086 301.44482422]
[169.32893372 316.02120972]
[172.86860657 330.59759521]
[183.07604980 333.70108032]
[191.01383972 340.70812988]
[195.29405212 350.30413818]
[195.20555115 360.73031616]
[190.83135986 370.10589600]
[183.02148438 376.76748657]
[185.90675354 391.48739624]
[188.79203796 406.20727539]
[191.67730713 420.92718506]
[194.56257629 435.64706421]
[197.44784546 450.36694336]
[204.32893372 437.03839111]
[217.27014160 429.45385742]
[232.26147461 429.96347046]
[244.65773010 438.40936279]
[250.61778259 452.17446899]
[248.29483032 466.99349976]
[238.40869141 478.27462769]
[224.02267456 482.52230835]
[209.59445190 478.42028809]
[199.59465027 467.23944092]
[200.48747253 482.21286011]
[201.38029480 497.18624878]
[202.27310181 512.15966797]
[217.27362061 512.76202393]
[232.13963318 514.85504150]
[246.72335815 518.41778564]
[260.87988281 523.41497803]
[274.46847534 529.79687500]
[287.35412598 537.50006104]
[299.40872192 546.44793701]
[310.51248169 556.55163574]
[320.55505371 567.71075439]
[329.43661499 579.81433105]
[337.06890869 592.74206543]
[343.37606812 606.36553955]
[348.29541016 620.54925537]
[351.77801514 635.15234375]
[353.78930664 650.02966309]
[354.30929565 665.03326416]
[353.33282471 680.01403809]
[350.86953735 694.82324219]
[346.94396973 709.31353760]
[341.59515381 723.34094238]
[334.87619019 736.76605225]
[326.85388184 749.45550537]
[317.60797119 761.28308105]
[307.23034668 772.13128662]
[295.82412720 781.89227295]
[283.50271606 790.46905518]
[270.38854980 797.77636719]
[256.61196899 803.74163818]
[242.30989075 808.30554199]
[227.62445068 811.42272949]
[212.70162964 813.06213379]
[197.68971252 813.20764160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 178]
[30 177]
[31 176]
[32 175]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[41 154]
[42 153]
[43 152]
[44 151]
[57 133]
[58 132]
[59 131]
[61 129]
[62 128]
[63 127]
[66 125]
[67 124]
[68 123]
[74 122]
[75 121]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
