%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[99.72705078 549.15905762]
[84.81799316 546.96441650]
[70.81714630 541.39007568]
[58.47957611 532.73669434]
[48.47062683 521.47094727]
[41.33006668 508.20031738]
[37.44297409 493.64053345]
[37.01898193 478.57675171]
[40.08095551 463.82138062]
[46.46376038 450.17013550]
[55.82318115 438.35922241]
[67.65447998 429.02557373]
[81.31961060 422.67254639]
[96.08161926 419.64273071]
[96.52822876 404.64938354]
[96.86320496 389.65313721]
[97.08653259 374.65478516]
[97.30986023 359.65646362]
[83.23918915 351.71109009]
[75.04821777 337.67315674]
[75.05435944 321.32638550]
[83.35063171 307.13247681]
[97.75443268 299.01321411]
[97.75443268 284.01321411]
[97.53110504 269.01486206]
[97.08450317 254.02153015]
[96.63789368 239.02818298]
[96.19129181 224.03482056]
[95.74468231 209.04147339]
[95.29808044 194.04812622]
[84.31474304 184.05302429]
[83.64823914 168.85400391]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.24250793 43.07217026]
[88.68198395 28.15356445]
[79.55097198 15.23322582]
[85.92221069 1.77006781]
[84.36168671 -13.14853668]
[82.80116272 -28.06714249]
[81.24063873 -42.98574829]
[66.93955231 -48.20497894]
[56.36582184 -59.07158661]
[51.57828903 -73.39289093]
[53.47573471 -88.31135559]
[61.62867737 -100.87475586]
[74.37509918 -108.62035370]
[65.24407959 -121.54069519]
[71.61531830 -135.00386047]
[70.05479431 -149.92245483]
[68.49427032 -164.84106445]
[66.93374634 -179.75967407]
[51.93593979 -179.25494385]
[36.93989182 -179.80941772]
[22.02031136 -181.42031860]
[7.25152493 -184.07962036]
[-7.29288626 -187.77407837]
[-21.54046249 -192.48529053]
[-35.42022324 -198.18977356]
[-48.86301804 -204.85911560]
[-61.80187607 -212.46009827]
[-74.17234039 -220.95483398]
[-85.91277313 -230.30102539]
[-96.96468353 -240.45208740]
[-107.27301788 -251.35745239]
[-116.78642273 -262.96279907]
[-125.45748901 -275.21032715]
[-133.24302673 -288.03897095]
[-140.10424805 -301.38485718]
[-146.00697327 -315.18148804]
[-150.92178345 -329.36010742]
[-154.82420349 -343.85009766]
[-157.69477844 -358.57928467]
[-159.51922607 -373.47424316]
[-160.28845215 -388.46081543]
[-159.99861145 -403.46432495]
[-158.65116882 -418.41000366]
[-156.25280762 -433.22338867]
[-152.81550598 -447.83071899]
[-148.35638428 -462.15917969]
[-142.89762878 -476.13742065]
[-136.46647644 -489.69580078]
[-129.09494019 -502.76672363]
[-120.81974792 -515.28509521]
[-111.68212891 -527.18859863]
[-101.72761536 -538.41784668]
[-91.00579071 -548.91699219]
[-79.57007599 -558.63360596]
[-67.47743988 -567.51940918]
[-54.78812790 -575.53002930]
[-41.56536102 -582.62567139]
[-27.87501717 -588.77081299]
[-13.78529644 -593.93499756]
[0.63360393 -598.09246826]
[15.30984879 -601.22241211]
[30.17032242 -603.30932617]
[45.14098740 -604.34283447]
[60.14726257 -604.31768799]
[75.11438751 -603.23413086]
[89.96778870 -601.09747314]
[104.63347626 -597.91839600]
[119.03838348 -593.71270752]
[133.11074829 -588.50140381]
[146.78044128 -582.31048584]
[159.97938538 -575.17065430]
[172.64181519 -567.11761475]
[184.70465088 -558.19140625]
[196.10777283 -548.43652344]
[206.79440308 -537.90155029]
[216.71127319 -526.63903809]
[225.80900574 -514.70507812]
[234.04225159 -502.15902710]
[241.36999512 -489.06350708]
[247.75575256 -475.48370361]
[253.16767883 -461.48727417]
[257.57882690 -447.14395142]
[260.96722412 -432.52520752]
[263.31597900 -417.70385742]
[264.61340332 -402.75375366]
[264.85302734 -387.74938965]
[264.03366089 -372.76547241]
[262.15936279 -357.87667847]
[259.23950195 -343.15719604]
[255.28860474 -328.68032837]
[250.32637024 -314.51824951]
[244.37750244 -300.74145508]
[237.47164917 -287.41860962]
[229.64321899 -274.61608887]
[220.93121338 -262.39767456]
[211.37902832 -250.82421875]
[201.03425598 -239.95339966]
[189.94842529 -229.83938599]
[178.17677307 -220.53254700]
[165.77795410 -212.07925415]
[152.81373596 -204.52162170]
[139.34869385 -197.89730835]
[125.44991302 -192.23930359]
[111.18665314 -187.57580566]
[96.62995148 -183.93005371]
[81.85234833 -181.32019043]
[83.41287231 -166.40158081]
[84.97339630 -151.48298645]
[86.53392029 -136.56437683]
[95.55331421 -124.71111298]
[89.29370117 -110.18087769]
[103.36708069 -105.24069977]
[113.94342041 -94.63642883]
[118.88703156 -80.43354797]
[117.16679382 -65.43151855]
[109.07068634 -52.61199951]
[96.15924072 -44.54626846]
[97.71976471 -29.62766457]
[99.28028870 -14.70905972]
[100.84081268 0.20954479]
[109.86020660 12.06280518]
[103.60059357 26.59304237]
[105.16111755 41.51164627]
[116.49051666 31.68084145]
[131.26733398 34.25878143]
[138.59863281 47.34510803]
[133.08007812 61.29306412]
[118.77972412 65.82073975]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[120.42103577 167.75865173]
[120.66036987 182.97039795]
[110.29142761 193.60151672]
[110.73803711 208.59486389]
[111.18463898 223.58822632]
[111.63124847 238.58157349]
[112.07785034 253.57492065]
[112.52445984 268.56826782]
[115.66857910 274.38427734]
[115.43811798 280.06265259]
[112.75443268 284.01321411]
[112.75443268 299.01321411]
[125.21498108 305.36914062]
[133.68101501 316.42092896]
[136.54560852 329.97720337]
[133.30554199 343.38058472]
[124.64850616 354.02880859]
[112.30819702 359.87979126]
[112.08486938 374.87811279]
[111.86154175 389.87646484]
[114.86283875 398.50375366]
[111.52157593 405.09600830]
[111.07497406 420.08935547]
[125.63047791 423.99243164]
[138.89323425 431.14755249]
[150.14801025 441.16888428]
[158.78784180 453.51593018]
[164.34678650 467.52288818]
[166.52508545 482.43435669]
[165.20523071 497.44616699]
[160.45841980 511.74877930]
[152.54063416 524.57086182]
[141.87887573 535.22088623]
[129.04812622 543.12457275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[15 198]
[16 196]
[17 195]
[18 194]
[23 188]
[24 187]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 179]
[33 176]
[34 175]
[35 174]
[36 173]
[38 171]
[39 170]
[40 169]
[41 163]
[42 162]
[44 160]
[45 159]
[46 158]
[47 157]
[53 151]
[55 149]
[56 148]
[57 147]
[58 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
