%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[54.57957458 278.64489746]
[59.10608292 292.97290039]
[61.54735184 307.79925537]
[61.85367584 322.82214355]
[60.01881790 337.73568726]
[56.08013916 352.23629761]
[50.11781693 366.02874756]
[42.25324249 378.83221436]
[32.64652634 390.38607788]
[21.49325180 400.45510864]
[9.02048206 408.83428955]
[-4.51785231 415.35305786]
[-18.84612846 419.87869263]
[-33.67264175 422.31903076]
[-48.69553757 422.62442017]
[-63.60897827 420.78863525]
[-78.10933685 416.84906006]
[-91.90141296 410.88589478]
[-104.70441437 403.02053833]
[-116.25768280 393.41308594]
[-126.32601166 382.25918579]
[-134.70442200 369.78591919]
[-141.22235107 356.24716187]
[-145.74708557 341.91860962]
[-148.18652344 327.09194946]
[-148.49098206 312.06903076]
[-146.65428162 297.15570068]
[-142.71380615 282.65560913]
[-136.74978638 268.86389160]
[-128.88362122 256.06137085]
[-119.27547455 244.50869751]
[-108.12095642 234.44105530]
[-95.64714813 226.06341553]
[-82.10800934 219.54632568]
[-67.77917480 215.02247620]
[-52.95235825 212.58396912]
[-37.92942047 212.28042603]
[-23.01620865 214.11805725]
[-8.51633549 218.05943298]
[5.27500057 224.02430725]
[13.12675571 211.24346924]
[13.94957733 203.89875793]
[21.19175720 198.33201599]
[29.23293114 185.66949463]
[37.27410507 173.00695801]
[45.31527710 160.34443665]
[30.47780800 162.54660034]
[18.34734344 153.72323608]
[15.87276649 138.92875671]
[24.47162437 126.63812256]
[39.21810150 123.89196777]
[51.66474915 132.26341248]
[54.68173218 146.95597839]
[63.82053375 135.06134033]
[72.95933533 123.16670990]
[82.09813690 111.27207184]
[91.23693848 99.37744141]
[91.09855652 96.33271790]
[92.06495667 93.17034149]
[94.18186188 90.29942322]
[97.34320068 88.14021301]
[101.29087830 87.06839752]
[111.12145996 75.73880768]
[120.95204163 64.40921021]
[130.78262329 53.07962036]
[140.61320496 41.75002670]
[150.44378662 30.42043304]
[160.27436829 19.09083939]
[170.10494995 7.76124716]
[171.09454346 2.63603830]
[173.69145203 -1.21225858]
[177.14010620 -3.38523126]
[180.63633728 -3.84207416]
[190.96301270 -14.72140884]
[201.28968811 -25.60074234]
[211.61634827 -36.48007584]
[196.78225708 -38.70490265]
[189.14096069 -51.61267471]
[194.32533264 -65.68826294]
[208.51365662 -70.55567169]
[221.24681091 -62.62682724]
[223.13893127 -47.74814224]
[234.24615479 -57.82928085]
[245.35339355 -67.91042328]
[256.46063232 -77.99156189]
[253.32159424 -92.96131897]
[258.06564331 -107.39706421]
[269.32360840 -117.45315552]
[284.00524902 -120.50358582]
[298.14727783 -115.82715607]
[309.25448608 -125.90829468]
[320.36172485 -135.98942566]
[311.13427734 -147.82438660]
[302.81704712 -160.31582642]
[295.45657349 -173.39389038]
[289.09402466 -186.98542786]
[283.76495361 -201.01445007]
[279.49917603 -215.40246582]
[276.32055664 -230.06906128]
[274.24685669 -244.93215942]
[273.28970337 -259.90869141]
[273.45440674 -274.91485596]
[274.74008179 -289.86676025]
[277.13952637 -304.68075562]
[280.63931274 -319.27401733]
[285.21987915 -333.56497192]
[290.85562134 -347.47363281]
[297.51498413 -360.92221069]
[305.16076660 -373.83557129]
[313.75018311 -386.14141846]
[323.23519897 -397.77099609]
[333.56277466 -408.65921021]
[344.67514038 -418.74520874]
[356.51019287 -427.97256470]
[369.00170898 -436.28967285]
[382.07983398 -443.65002441]
[395.67141724 -450.01245117]
[409.70046997 -455.34140015]
[424.08856201 -459.60705566]
[438.75515747 -462.78555298]
[453.61828613 -464.85910034]
[468.59481812 -465.81613159]
[483.60098267 -465.65127563]
[498.55285645 -464.36547852]
[513.36688232 -461.96591187]
[527.96008301 -458.46597290]
[542.25097656 -453.88528442]
[556.15960693 -448.24945068]
[569.60815430 -441.58996582]
[582.52142334 -433.94406128]
[594.82720947 -425.35455322]
[606.45666504 -415.86944580]
[617.34478760 -405.54174805]
[627.43072510 -394.42929077]
[636.65795898 -382.59417725]
[644.97497559 -370.10256958]
[652.33520508 -357.02438354]
[658.69750977 -343.43273926]
[664.02636719 -329.40362549]
[668.29187012 -315.01553345]
[671.47021484 -300.34887695]
[673.54364014 -285.48574829]
[674.50054932 -270.50921631]
[674.33557129 -255.50303650]
[673.04962158 -240.55116272]
[670.64990234 -225.73719788]
[667.14990234 -211.14398193]
[662.56903076 -196.85313416]
[656.93310547 -182.94458008]
[650.27349854 -169.49609375]
[642.62750244 -156.58288574]
[634.03784180 -144.27717590]
[624.55261230 -132.64778137]
[614.22485352 -121.75974274]
[603.11230469 -111.67395020]
[591.27709961 -102.44680786]
[578.78546143 -94.12991333]
[565.70715332 -86.76978302]
[552.11547852 -80.40757751]
[538.08630371 -75.07888031]
[523.69818115 -70.81349182]
[509.03152466 -67.63526154]
[494.16833496 -65.56196594]
[479.19180298 -64.60520172]
[464.18563843 -64.77030945]
[449.23376465 -66.05638123]
[434.41983032 -68.45621490]
[419.82666016 -71.95639038]
[405.53582764 -76.53733826]
[391.62731934 -82.17343140]
[378.17889404 -88.83316040]
[365.26574707 -96.47927094]
[352.96011353 -105.06900787]
[341.33081055 -114.55432892]
[330.44287109 -124.88219452]
[319.33563232 -114.80105591]
[308.22839355 -104.71991730]
[311.51644897 -90.19220734]
[307.06161499 -75.87401581]
[295.96475220 -65.64044952]
[281.13815308 -62.31348419]
[266.54177856 -66.88432312]
[255.43452454 -56.80318832]
[244.32730103 -46.72204971]
[233.22006226 -36.64091110]
[222.49568176 -26.15340805]
[212.16902161 -15.27407455]
[201.84234619 -4.39474010]
[191.51567078 6.48459435]
[181.43453979 17.59182739]
[171.60395813 28.92142105]
[161.77337646 40.25101471]
[151.94279480 51.58060837]
[142.11221313 62.91020203]
[132.28163147 74.23979187]
[122.45105743 85.56938934]
[112.62047577 96.89897919]
[103.13157654 108.51624298]
[93.99277496 120.41087341]
[84.85397339 132.30551147]
[75.71517181 144.20013428]
[66.57636261 156.09477234]
[57.97780228 168.38562012]
[49.93663025 181.04814148]
[41.89545441 193.71066284]
[33.85428238 206.37318420]
[25.90759850 219.09523010]
[18.05584335 231.87606812]
[29.61030197 241.48207092]
[39.68001556 252.63471985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 208]
[41 207]
[43 206]
[44 205]
[45 204]
[46 203]
[53 202]
[54 201]
[55 200]
[56 199]
[57 198]
[62 197]
[63 196]
[64 195]
[65 194]
[66 193]
[67 192]
[68 191]
[69 190]
[73 189]
[74 188]
[75 187]
[76 186]
[82 185]
[83 184]
[84 183]
[85 182]
[90 177]
[91 176]
[92 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
