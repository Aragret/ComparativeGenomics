%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCU\
) } def
/len { sequence length } bind def

/coor [
[262.56600952 363.77032471]
[273.82934570 353.82455444]
[265.60052490 341.28317261]
[257.37170410 328.74176025]
[249.14291382 316.20037842]
[240.91410828 303.65896606]
[222.79872131 301.02297974]
[212.18083191 285.72024536]
[216.18768311 267.20379639]
[207.58912659 254.91294861]
[198.99055481 242.62211609]
[190.39199829 230.33128357]
[181.52110291 218.23551941]
[172.38229370 206.34089661]
[157.62654114 204.66658020]
[148.18905640 192.73391724]
[150.04527283 177.26808167]
[140.90647888 165.37344360]
[131.76766968 153.47882080]
[117.87804413 148.10037231]
[115.60573578 132.44320679]
[106.46693420 120.54856873]
[97.32813263 108.65393829]
[93.61393738 107.61608887]
[90.37524414 104.94611359]
[88.33071899 100.89309692]
[88.06102753 96.01794434]
[79.46246338 83.72710419]
[70.86389923 71.43627167]
[62.26533508 59.14543152]
[53.66677475 46.85459137]
[45.06821060 34.56375504]
[36.46964645 22.27291679]
[38.75106812 37.09840393]
[37.72207260 52.06306839]
[33.43286133 66.43675232]
[26.09272003 79.51811981]
[16.05978775 90.66891479]
[3.82359290 99.34506989]
[-10.01883221 105.12323761]
[-24.79208565 107.72150421]
[-39.77534866 107.01308441]
[-54.23755264 103.03254700]
[-67.47305298 95.97411346]
[-78.83606720 86.18218231]
[-87.77216339 74.13452148]
[-93.84532928 60.41895676]
[-96.75923920 45.70470810]
[-96.37172699 30.70971298]
[-92.70169067 16.16561317]
[-85.92819977 2.78204656]
[-76.38175964 -8.78797340]
[-64.52814484 -17.97991943]
[-50.94572830 -24.34529877]
[-36.29722977 -27.57352638]
[-21.29737663 -27.50709152]
[-6.67804718 -24.14923477]
[6.84745026 -17.66379547]
[18.61917686 -8.36721230]
[28.05918884 3.28134537]
[24.73692894 -11.34611511]
[20.54991722 -25.74989700]
[15.51300144 -39.87892532]
[10.47608566 -54.00795746]
[-1.44597149 -64.40868378]
[1.56831801 -78.99509430]
[-3.46859813 -93.12412262]
[-8.50551414 -107.25315094]
[-13.54243088 -121.38217926]
[-17.51993752 -124.76249695]
[-19.59553146 -128.91522217]
[-19.79347229 -132.98657227]
[-18.47338295 -136.25608826]
[-22.87438011 -150.59593201]
[-27.27537918 -164.93577576]
[-31.67637634 -179.27563477]
[-46.55901718 -177.16531372]
[-61.58855438 -177.40925598]
[-76.39487457 -180.00144958]
[-90.61334991 -184.87806702]
[-103.89384460 -191.91902161]
[-115.90930939 -200.95091248]
[-126.36385345 -211.75132751]
[-135.00003052 -224.05429077]
[-141.60516357 -237.55683899]
[-146.01660156 -251.92643738]
[-148.12568665 -266.80926514]
[-147.88050842 -281.83877563]
[-145.28709412 -296.64486694]
[-140.40930176 -310.86294556]
[-133.36724854 -324.14285278]
[-124.33436584 -336.15759277]
[-113.53308868 -346.61123657]
[-101.22941589 -355.24639893]
[-87.72632599 -361.85043335]
[-73.35634613 -366.26068115]
[-58.47335815 -368.36853027]
[-43.44386292 -368.12210083]
[-28.63797379 -365.52746582]
[-14.42030239 -360.64849854]
[-1.14097130 -353.60537720]
[10.87300491 -344.57150269]
[21.32577133 -333.76934814]
[29.95991898 -321.46496582]
[36.56282425 -307.96133423]
[40.97188187 -293.59097290]
[43.07851791 -278.70782471]
[42.83085632 -263.67834473]
[40.23499298 -248.87268066]
[35.35485458 -234.65541077]
[28.31061554 -221.37664795]
[19.27575111 -209.36341858]
[8.47275162 -198.91154480]
[-3.83235025 -190.27841187]
[-17.33652878 -183.67662048]
[-12.93553162 -169.33677673]
[-8.53453350 -154.99693298]
[-4.13353539 -140.65708923]
[0.58659887 -126.41909790]
[5.62351513 -112.29006958]
[10.66043091 -98.16104126]
[15.69734764 -84.03200531]
[27.25913048 -74.64188385]
[24.60511589 -59.04487228]
[29.64203072 -44.91584396]
[34.67894745 -30.78681374]
[40.18918610 -44.73806000]
[52.78514862 -52.88310242]
[67.76885223 -52.18404388]
[79.55174255 -42.90161896]
[83.73909760 -28.49793434]
[78.76913452 -14.34521580]
[66.49552917 -5.72207355]
[51.49602890 -5.84472799]
[39.36439133 -14.66837406]
[42.68664932 -0.04091408]
[48.76048279 13.67435265]
[57.35904694 25.96519089]
[65.95761108 38.25602722]
[74.55617523 50.54686737]
[83.15473938 62.83770370]
[91.75330353 75.12854004]
[100.35186768 87.41938019]
[109.22276306 99.51512909]
[118.36156464 111.40976715]
[127.50036621 123.30439758]
[142.04365540 129.53361511]
[143.66230774 144.34001160]
[152.80110168 156.23464966]
[161.93991089 168.12927246]
[177.36192322 170.32002258]
[186.46052551 182.51306152]
[184.27693176 197.20208740]
[193.41574097 209.09672546]
[198.24018860 211.08966064]
[201.49252319 214.40260315]
[202.93321228 218.21566772]
[202.68283081 221.73271179]
[211.28140259 234.02355957]
[219.87995911 246.31439209]
[228.47853088 258.60522461]
[240.36442566 258.35620117]
[250.78799438 263.81976318]
[257.21343994 273.53610229]
[258.14099121 285.02764893]
[253.45550537 295.43014526]
[261.68429565 307.97155762]
[269.91311646 320.51296997]
[278.14193726 333.05435181]
[286.37072754 345.59576416]
[299.97836304 339.22290039]
[314.35446167 334.85156250]
[329.20632935 332.57073975]
[344.23165894 332.42684937]
[359.12451172 334.42282104]
[373.58166504 338.51803589]
[387.30883789 344.62911987]
[400.02655029 352.63168335]
[411.47589111 362.36273193]
[421.42373657 373.62423706]
[429.66760254 386.18685913]
[436.03961182 399.79486084]
[440.41006470 414.17123413]
[442.68997192 429.02325439]
[442.83294678 444.04858398]
[440.83602905 458.94131470]
[436.73989868 473.39822388]
[430.62796021 487.12503052]
[422.62463379 499.84225464]
[412.89288330 511.29098511]
[401.63076782 521.23809814]
[389.06762695 529.48120117]
[375.45922852 535.85235596]
[361.08258057 540.22192383]
[346.23040771 542.50091553]
[331.20507812 542.64294434]
[316.31246948 540.64514160]
[301.85580444 536.54809570]
[288.12939453 530.43530273]
[275.41268921 522.43121338]
[263.96453857 512.69873047]
[254.01809692 501.43603516]
[245.77580261 488.87237549]
[239.40547180 475.26354980]
[235.03678894 460.88665771]
[232.75872803 446.03433228]
[232.61761475 431.00900269]
[234.61637878 416.11654663]
[238.71427917 401.66012573]
[244.82791138 387.93408203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[9 161]
[10 160]
[11 159]
[12 158]
[13 154]
[14 153]
[17 150]
[18 149]
[19 148]
[21 146]
[22 145]
[23 144]
[27 143]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
[60 136]
[61 135]
[62 126]
[63 125]
[64 124]
[66 122]
[67 121]
[68 120]
[69 119]
[73 118]
[74 117]
[75 116]
[76 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
