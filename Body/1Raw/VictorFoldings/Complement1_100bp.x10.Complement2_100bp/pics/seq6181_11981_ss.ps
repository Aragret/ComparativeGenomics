%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[21.58983231 840.69250488]
[6.69347095 842.48291016]
[-8.27706814 843.47796631]
[-23.27934837 843.67486572]
[-38.27084732 843.07305908]
[-53.20906448 841.67413330]
[-68.05165863 839.48223877]
[-82.75655365 836.50341797]
[-97.28207397 832.74621582]
[-111.58703613 828.22125244]
[-125.63089752 822.94140625]
[-139.37385559 816.92156982]
[-152.77693176 810.17883301]
[-165.80215454 802.73229980]
[-178.41259766 794.60308838]
[-190.57250977 785.81420898]
[-202.24742126 776.39068604]
[-213.40425110 766.35906982]
[-224.01135254 755.74792480]
[-234.03868103 744.58728027]
[-243.45779419 732.90881348]
[-252.24200439 720.74554443]
[-260.36642456 708.13201904]
[-267.80798340 695.10394287]
[-274.54562378 681.69830322]
[-280.56024170 667.95306396]
[-285.83477783 653.90722656]
[-290.35427856 639.60052490]
[-294.10595703 625.07354736]
[-297.07913208 610.36755371]
[-299.26541138 595.52410889]
[-300.65859985 580.58538818]
[-301.25476074 565.59362793]
[-301.05215454 550.59143066]
[-300.05139160 535.62127686]
[-298.25531006 520.72558594]
[-295.66897583 505.94662476]
[-292.29974365 491.32623291]
[-288.15716553 476.90588379]
[-283.25296021 462.72647095]
[-277.60104370 448.82815552]
[-271.21743774 435.25036621]
[-264.12023926 422.03155518]
[-256.32958984 409.20919800]
[-247.86752319 396.81964111]
[-238.75804138 384.89804077]
[-229.02699280 373.47814941]
[-218.70193481 362.59237671]
[-207.81214905 352.27151489]
[-196.38850403 342.54489136]
[-184.46336365 333.44003296]
[-172.07055664 324.98275757]
[-159.24519348 317.19705200]
[-146.02363586 310.10498047]
[-132.44335938 303.72665405]
[-118.54285431 298.08010864]
[-104.36153412 293.18139648]
[-89.93959045 289.04440308]
[-75.31790924 285.68081665]
[-60.53793716 283.10021973]
[-45.64156342 281.30987549]
[-30.67101860 280.31491089]
[-15.66873550 280.11813354]
[-0.67724246 280.72006226]
[14.26096630 282.11904907]
[29.10354614 284.31106567]
[43.80842590 287.28994751]
[47.56472778 272.76788330]
[51.32102585 258.24584961]
[55.07732773 243.72377014]
[58.83362961 229.20172119]
[51.07683182 216.53808594]
[54.67938232 201.75714111]
[68.01476288 193.70695496]
[71.77106476 179.18489075]
[75.52736664 164.66284180]
[79.28366852 150.14077759]
[74.98005676 135.88145447]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[102.98233032 57.18280411]
[106.08644104 42.50750351]
[109.19055176 27.83220100]
[112.29466248 13.15689850]
[99.22014618 5.57307386]
[89.14349365 -5.66541624]
[83.04219055 -19.44955254]
[81.50223541 -34.42431641]
[84.66192627 -49.12189865]
[92.19953156 -62.10556412]
[103.36597443 -72.11009216]
[117.05929565 -78.16509247]
[131.93338013 -79.68907928]
[135.03749084 -94.36438751]
[138.14160156 -109.03968811]
[141.24571228 -123.71498871]
[127.56742859 -130.02784729]
[115.63715363 -139.22656250]
[106.05329895 -150.84970093]
[99.29658508 -164.31427002]
[95.70594025 -178.94488525]
[95.46145630 -194.00769043]
[98.57540131 -208.74713135]
[104.89157867 -222.42388916]
[114.09317780 -234.35194397]
[125.71864319 -243.93296814]
[139.18484497 -250.68641663]
[153.81634521 -254.27352905]
[168.87919617 -254.51435852]
[183.61788940 -251.39683533]
[197.29310608 -245.07734680]
[209.21893311 -235.87286377]
[218.79714966 -224.24507141]
[225.54733276 -210.77723694]
[229.13088989 -196.14486694]
[229.36807251 -181.08195496]
[226.24697876 -166.34402466]
[219.92417908 -152.67033386]
[210.71679688 -140.74674988]
[199.08668518 -131.17134094]
[185.61721802 -124.42442322]
[170.98399353 -120.84441376]
[155.92102051 -120.61087799]
[152.81690979 -105.93557739]
[149.71279907 -91.26027679]
[146.60868835 -76.58496857]
[159.59172058 -69.16866302]
[169.66043091 -58.08753586]
[175.81942749 -44.41833878]
[177.45405579 -29.49456978]
[174.39175415 -14.77639008]
[166.92007446 -1.70775783]
[155.75984192 8.42522717]
[141.99552917 14.62089443]
[126.96996307 16.26100731]
[123.86585236 30.93630981]
[120.76174927 45.61161423]
[117.65763855 60.28691483]
[119.26415253 63.42561722]
[119.43022919 67.49839020]
[117.73339844 71.81974030]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[104.48365784 143.51290894]
[93.80572510 153.89707947]
[90.04942322 168.41914368]
[86.29312134 182.94119263]
[82.53681946 197.46325684]
[90.29628754 210.96986389]
[86.27999115 225.64378357]
[73.35569000 232.95802307]
[69.59938812 247.48007202]
[65.84308624 262.00213623]
[62.08678436 276.52420044]
[58.33048630 291.04626465]
[72.63547516 295.57110596]
[86.67937469 300.85092163]
[100.42236328 306.87066650]
[113.82548523 313.61331177]
[126.85075378 321.05978394]
[139.46124268 329.18890381]
[151.62121582 337.97766113]
[163.29618835 347.40115356]
[174.45307922 357.43264771]
[185.06025696 368.04373169]
[195.08764648 379.20431519]
[204.50683594 390.88275146]
[213.29113770 403.04595947]
[221.41561890 415.65942383]
[228.85726929 428.68743896]
[235.59500122 442.09304810]
[241.60969543 455.83825684]
[246.88432312 469.88409424]
[251.40391541 484.19073486]
[255.15567017 498.71768188]
[258.12896729 513.42370605]
[260.31533813 528.26708984]
[261.70861816 543.20581055]
[262.30487061 558.19757080]
[262.10235596 573.19976807]
[261.10168457 588.16992188]
[259.30569458 603.06561279]
[256.71945190 617.84460449]
[253.35031128 632.46502686]
[249.20782471 646.88537598]
[244.30371094 661.06481934]
[238.65188599 674.96319580]
[232.26837158 688.54101562]
[225.17126465 701.75988770]
[217.38067627 714.58227539]
[208.91868591 726.97186279]
[199.80929565 738.89355469]
[190.07832336 750.31347656]
[179.75332642 761.19934082]
[168.86361694 771.52026367]
[157.44001770 781.24694824]
[145.51493835 790.35186768]
[133.12219238 798.80926514]
[120.29686737 806.59503174]
[107.07535553 813.68719482]
[93.49511719 820.06561279]
[79.59465790 825.71221924]
[65.41336823 830.61102295]
[50.99145126 834.74816895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[74 154]
[75 153]
[76 152]
[77 151]
[79 149]
[80 148]
[82 146]
[83 145]
[84 141]
[85 140]
[86 139]
[87 138]
[96 129]
[97 128]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
