%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[39.81473160 353.10473633]
[39.19792175 368.10549927]
[37.04196167 382.96337891]
[33.36970901 397.52078247]
[28.22008705 411.62347412]
[21.64768791 425.12188721]
[13.72218132 437.87298584]
[4.52758360 449.74157715]
[-5.83863831 460.60183716]
[-17.26659584 470.33868408]
[-29.63514900 478.84884644]
[-42.81317902 486.04214478]
[-56.66099930 491.84231567]
[-71.03180695 496.18786621]
[-85.77326202 499.03274536]
[-100.72911072 500.34680176]
[-115.74079895 500.11608887]
[-130.64920044 498.34307861]
[-145.29627991 495.04653931]
[-159.52676392 490.26141357]
[-173.18978882 484.03842163]
[-186.14054871 476.44357300]
[-198.24174500 467.55734253]
[-209.36509705 457.47393799]
[-219.39268494 446.30023193]
[-228.21821594 434.15469360]
[-235.74815369 421.16607666]
[-241.90263367 407.47204590]
[-246.61645508 393.21780396]
[-249.83963013 378.55441284]
[-251.53797913 363.63729858]
[-251.69352722 348.62466431]
[-250.30461121 333.67556763]
[-247.38595581 318.94854736]
[-242.96850586 304.59967041]
[-237.09907532 290.78106689]
[-229.83988953 277.63922119]
[-221.26789856 265.31341553]
[-211.47396851 253.93435669]
[-200.56193542 243.62265015]
[-188.64746094 234.48757935]
[-175.85685730 226.62602234]
[-162.32568359 220.12129211]
[-148.19740295 215.04234314]
[-133.62178040 211.44300842]
[-118.75331116 209.36146545]
[-103.74962616 208.81976318]
[-88.76976776 209.82365417]
[-73.97252655 212.36248779]
[-59.51476288 216.40936279]
[-45.54973984 221.92137146]
[-32.22549438 228.84007263]
[-19.68326759 237.09213257]
[-10.19436932 225.47486877]
[-0.70547140 213.85760498]
[1.35329759 199.10597229]
[16.07560921 193.31253052]
[25.56450844 181.69526672]
[34.96665955 170.00767517]
[44.28154373 158.25042725]
[53.59642410 146.49317932]
[55.43533707 131.71252441]
[70.06976318 125.70052338]
[71.90866852 110.91986847]
[86.54309845 104.90786743]
[88.77265167 91.10494232]
[101.69965363 85.77725220]
[111.01453400 74.01999664]
[120.32941437 62.26274872]
[129.64430237 50.50549698]
[138.42489624 38.34403992]
[146.65371704 25.80264091]
[154.88252258 13.26124096]
[163.11132812 0.71984076]
[163.86903381 -5.84806824]
[167.31292725 -10.36875629]
[171.77650452 -12.06741047]
[180.37507629 -24.35824966]
[177.83012390 -39.72577667]
[186.72537231 -52.06794739]
[201.39164734 -54.39946365]
[209.99021912 -66.69029999]
[218.58877563 -78.98114014]
[227.18733215 -91.27198029]
[235.78590393 -103.56282043]
[244.38446045 -115.85365295]
[252.70640564 -128.33345032]
[260.74758911 -140.99597168]
[268.78875732 -153.65849304]
[276.82992554 -166.32102966]
[284.87109375 -178.98355103]
[292.91226196 -191.64607239]
[300.95346069 -204.30859375]
[289.13009644 -213.55926514]
[278.27038574 -223.92430115]
[268.47897339 -235.30386353]
[259.85006714 -247.58837891]
[252.46685791 -260.65951538]
[246.40040588 -274.39141846]
[241.70915222 -288.65182495]
[238.43826294 -303.30337524]
[236.61923218 -318.20498657]
[236.26960754 -333.21313477]
[237.39274597 -348.18328857]
[239.97781372 -362.97125244]
[243.99992371 -377.43463135]
[249.42034912 -391.43414307]
[256.18688965 -404.83489990]
[264.23434448 -417.50790405]
[273.48526001 -429.33108521]
[283.85052490 -440.19058228]
[295.23028564 -449.98178101]
[307.51495361 -458.61041260]
[320.58624268 -465.99337769]
[334.31826782 -472.05953979]
[348.57876587 -476.75051880]
[363.23037720 -480.02111816]
[378.13201904 -481.83984375]
[393.14019775 -482.18917847]
[408.11032104 -481.06573486]
[422.89822388 -478.48037720]
[437.36154175 -474.45797729]
[451.36093140 -469.03726196]
[464.76156616 -462.27044678]
[477.43438721 -454.22274780]
[489.25738525 -444.97158813]
[500.11666870 -434.60614014]
[509.90765381 -423.22616577]
[518.53601074 -410.94131470]
[525.91876221 -397.86987305]
[531.98461914 -384.13772583]
[536.67535400 -369.87713623]
[539.94561768 -355.22546387]
[541.76403809 -340.32379150]
[542.11309814 -325.31561279]
[540.98937988 -310.34552002]
[538.40368652 -295.55764771]
[534.38098145 -281.09442139]
[528.96002197 -267.09515381]
[522.19293213 -253.69464111]
[514.14495850 -241.02195740]
[504.89358521 -229.19915771]
[494.52789307 -218.34008789]
[483.14773560 -208.54933167]
[470.86273193 -199.92118835]
[457.79113770 -192.53875732]
[444.05886841 -186.47312927]
[429.79818726 -181.78271484]
[415.14645386 -178.51271057]
[400.24472046 -176.69458008]
[385.23654175 -176.34585571]
[370.26647949 -177.46987915]
[355.47863770 -180.05583191]
[341.01550293 -184.07882690]
[327.01635742 -189.50009155]
[313.61596680 -196.26742554]
[305.57479858 -183.60490417]
[297.53363037 -170.94238281]
[289.49246216 -158.27984619]
[281.45129395 -145.61732483]
[273.41009521 -132.95480347]
[265.36892700 -120.29227448]
[265.77612305 -116.78990936]
[264.50711060 -112.91632080]
[261.40594482 -109.46146393]
[256.67529297 -107.25508881]
[248.07673645 -94.96425629]
[239.47817993 -82.67341614]
[230.87960815 -70.38257599]
[222.28105164 -58.09173965]
[213.68247986 -45.80089951]
[216.51979065 -31.22402763]
[207.97471619 -18.63687897]
[192.66590881 -15.75968456]
[184.06735229 -3.46884680]
[175.65272522 8.94864845]
[167.42391968 21.49004936]
[159.19511414 34.03144836]
[150.96630859 46.57284927]
[165.83491516 44.59183884]
[177.83267212 53.59483719]
[180.08670044 68.42451477]
[171.30580139 80.58576202]
[156.52008057 83.11206055]
[144.19944763 74.55623627]
[141.40155029 59.82038116]
[132.08666992 71.57762909]
[122.77178955 83.33488464]
[113.45690155 95.09213257]
[111.22734833 108.89505768]
[98.30034637 114.22274780]
[95.79517365 129.84436035]
[81.82701111 135.01541138]
[79.32183838 150.63700867]
[65.35367584 155.80805969]
[56.03879547 167.56530762]
[46.72391129 179.32255554]
[43.84766006 187.99234009]
[37.18177032 191.18415833]
[27.69287300 202.80142212]
[24.95539474 218.38400269]
[10.91179180 223.34651184]
[1.42289352 234.96377563]
[-8.06600475 246.58103943]
[2.52399826 257.22320557]
[11.96361637 268.89785767]
[20.15278435 281.48126221]
[27.00469208 294.83996582]
[32.44670486 308.83242798]
[36.42113876 323.31027222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 204]
[54 203]
[55 202]
[57 200]
[58 199]
[59 197]
[60 196]
[61 195]
[63 193]
[65 191]
[67 189]
[68 188]
[69 187]
[70 186]
[71 179]
[72 178]
[73 177]
[74 176]
[77 175]
[78 174]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[93 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
