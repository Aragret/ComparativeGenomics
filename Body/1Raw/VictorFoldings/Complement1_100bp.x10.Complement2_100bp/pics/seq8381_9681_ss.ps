%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[125.42803955 826.06726074]
[110.75671387 822.92816162]
[96.26809692 819.03173828]
[82.00125122 814.38861084]
[67.99462891 809.01116943]
[54.28599930 802.91400146]
[40.91231155 796.11352539]
[27.90962410 788.62805176]
[15.31298733 780.47784424]
[3.15636015 771.68475342]
[-8.52748585 762.27252197]
[-19.70705223 752.26660156]
[-30.35220146 741.69384766]
[-40.43423462 730.58282471]
[-49.92597580 718.96350098]
[-58.80183029 706.86718750]
[-67.03787994 694.32647705]
[-74.61190796 681.37518311]
[-81.50350952 668.04821777]
[-87.69409943 654.38153076]
[-93.16699219 640.41192627]
[-97.90742493 626.17712402]
[-101.90263367 611.71539307]
[-105.14183044 597.06585693]
[-107.61629486 582.26794434]
[-109.31935883 567.36151123]
[-110.24642181 552.38677979]
[-110.39498138 537.38409424]
[-109.76465607 522.39398193]
[-108.35712433 507.45672607]
[-106.17619324 492.61270142]
[-103.22772980 477.90185547]
[-99.51969910 463.36389160]
[-95.06208801 449.03799438]
[-89.86691284 434.96276855]
[-83.94818115 421.17614746]
[-77.32185364 407.71533203]
[-70.00578308 394.61660767]
[-62.01969910 381.91525269]
[-53.38513184 369.64550781]
[-44.12535477 357.84048462]
[-34.26533127 346.53201294]
[-23.83164406 335.75054932]
[-12.85242176 325.52514648]
[-1.35725927 315.88342285]
[10.62285233 306.85131836]
[23.05561829 298.45318604]
[35.90752029 290.71170044]
[49.14390945 283.64773560]
[62.72911072 277.28027344]
[76.62648773 271.62655640]
[90.79859161 266.70178223]
[105.20720673 262.51919556]
[119.81348419 259.09014893]
[117.14768982 244.32893372]
[114.48189545 229.56771851]
[111.81610107 214.80650330]
[109.15030670 200.04528809]
[99.39490509 192.89274597]
[97.05318451 180.61674500]
[103.91624451 169.69607544]
[101.47052002 154.89680481]
[99.02479553 140.09753418]
[96.57906342 125.29826355]
[94.13333893 110.49899292]
[91.46754456 95.73777771]
[88.58226776 81.01788330]
[85.69699860 66.29799652]
[75.44969940 54.24380493]
[80.59440613 40.26591873]
[77.70912933 25.54602814]
[74.82386017 10.82613659]
[71.93858337 -3.89375424]
[69.05331421 -18.61364555]
[66.16803741 -33.33353806]
[51.17923737 -32.35163879]
[36.18793488 -33.29457855]
[21.44029999 -36.14688110]
[7.17850447 -40.86170197]
[-6.36325932 -47.36162186]
[-18.96262550 -55.53990173]
[-30.41269875 -65.26225281]
[-40.52545929 -76.36902618]
[-49.13484955 -88.67783356]
[-56.09949112 -101.98655701]
[-61.30501938 -116.07665253]
[-64.66595459 -130.71675110]
[-66.12710571 -145.66644287]
[-65.66448975 -160.68025208]
[-63.28568649 -175.51162720]
[-59.02976990 -189.91702271]
[-52.96662521 -203.65989685]
[-45.19580841 -216.51457214]
[-35.84492874 -228.26997375]
[-25.06753540 -238.73304749]
[-13.04060173 -247.73200989]
[0.03837905 -255.11906433]
[13.95463753 -260.77291870]
[28.47965813 -264.60073853]
[43.37492371 -266.53964233]
[58.39584351 -266.55783081]
[73.29575348 -264.65496826]
[87.82999420 -260.86230469]
[101.75989532 -255.24214172]
[114.85671234 -247.88676453]
[126.90538788 -238.91693115]
[137.70806885 -228.47996521]
[147.08737183 -216.74722290]
[154.88926697 -203.91139221]
[160.98565674 -190.18322754]
[165.27641296 -175.78817749]
[167.69110107 -160.96260071]
[168.19004822 -145.94996643]
[166.76507568 -130.99678040]
[163.43959045 -116.34858704]
[158.26817322 -102.24593353]
[151.33575439 -88.92039490]
[142.75617981 -76.59078979]
[132.67031860 -65.45957947]
[121.24380493 -55.70954895]
[108.66426849 -47.50079727]
[95.13827515 -40.96812820]
[80.88793182 -36.21881104]
[83.77320099 -21.49891853]
[86.65847778 -6.77902699]
[89.54374695 7.94086456]
[92.42902374 22.66075516]
[95.31429291 37.38064575]
[105.35521698 48.38196945]
[100.41688538 63.41271973]
[103.30216217 78.13261414]
[106.18743134 92.85250092]
[109.76513672 96.68838501]
[110.93899536 102.25573730]
[108.93260956 108.05326843]
[111.37833405 122.85253906]
[113.82406616 137.65180969]
[116.26979065 152.45108032]
[118.71551514 167.25035095]
[130.72669983 181.20790100]
[123.91152191 197.37948608]
[126.57731628 212.14070129]
[129.24311829 226.90191650]
[131.90890503 241.66314697]
[134.57470703 256.42434692]
[149.45774841 254.52780151]
[164.41917419 253.40629578]
[179.41864014 253.06285095]
[194.41571045 253.49839783]
[209.36996460 254.71177673]
[224.24107361 256.69970703]
[238.98896790 259.45681763]
[253.57388306 262.97567749]
[267.95648193 267.24682617]
[282.09802246 272.25869751]
[295.96032715 277.99783325]
[309.50610352 284.44876099]
[322.69876099 291.59405518]
[335.50280762 299.41445923]
[347.88366699 307.88891602]
[359.80795288 316.99456787]
[371.24359131 326.70684814]
[382.15966797 336.99960327]
[392.52682495 347.84509277]
[402.31707764 359.21401978]
[411.50405884 371.07580566]
[420.06295776 383.39840698]
[427.97073364 396.14868164]
[435.20605469 409.29217529]
[441.74945068 422.79351807]
[447.58322144 436.61627197]
[452.69171143 450.72320557]
[457.06106567 465.07629395]
[460.67959595 479.63677979]
[463.53747559 494.36547852]
[465.62701416 509.22265625]
[466.94262695 524.16827393]
[467.48071289 539.16198730]
[467.23980713 554.16345215]
[466.22064209 569.13220215]
[464.42587280 584.02789307]
[461.86041260 598.81030273]
[458.53112793 613.43963623]
[454.44702148 627.87646484]
[449.61907959 642.08184814]
[444.06033325 656.01751709]
[437.78576660 669.64587402]
[430.81231689 682.93017578]
[423.15872192 695.83459473]
[414.84567261 708.32440186]
[405.89553833 720.36590576]
[396.33248901 731.92657471]
[386.18228149 742.97534180]
[375.47229004 753.48236084]
[364.23135376 763.41937256]
[352.48980713 772.75952148]
[340.27932739 781.47760010]
[327.63275146 789.55023193]
[314.58425903 796.95550537]
[301.16897583 803.67358398]
[287.42309570 809.68627930]
[273.38366699 814.97741699]
[259.08850098 819.53265381]
[244.57618713 823.33984375]
[229.88583374 826.38867188]
[215.05702209 828.67083740]
[200.12976074 830.18029785]
[185.14425659 830.91296387]
[170.14093018 830.86676025]
[155.16021729 830.04193115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 132]
[67 131]
[68 130]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
