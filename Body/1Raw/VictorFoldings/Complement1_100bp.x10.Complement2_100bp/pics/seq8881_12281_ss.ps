%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[33.62070465 772.79589844]
[18.80011749 775.13500977]
[3.87093353 776.63189697]
[-11.11902523 777.28179932]
[-26.12174225 777.08251953]
[-41.08915710 776.03485107]
[-55.97332764 774.14202881]
[-70.72657776 771.41021729]
[-85.30163574 767.84808350]
[-99.65182495 763.46704102]
[-113.73117065 758.28118896]
[-127.49457550 752.30706787]
[-140.89794922 745.56390381]
[-153.89836121 738.07318115]
[-166.45416260 729.85900879]
[-178.52513123 720.94763184]
[-190.07261658 711.36755371]
[-201.05960083 701.14959717]
[-211.45089722 690.32635498]
[-221.21324158 678.93261719]
[-230.31533813 667.00476074]
[-238.72802734 654.58111572]
[-246.42437744 641.70135498]
[-253.37973022 628.40686035]
[-259.57180786 614.74011230]
[-264.98077393 600.74499512]
[-269.58926392 586.46618652]
[-273.38259888 571.94958496]
[-276.34854126 557.24163818]
[-278.47763062 542.38940430]
[-279.76306152 527.44055176]
[-280.20068359 512.44287109]
[-279.78912354 497.44448853]
[-278.52966309 482.49340820]
[-276.42639160 467.63751221]
[-273.48599243 452.92443848]
[-269.71789551 438.40124512]
[-265.13421631 424.11450195]
[-259.74957275 410.10998535]
[-253.58125305 396.43252563]
[-246.64901733 383.12591553]
[-238.97505188 370.23284912]
[-230.58395386 357.79458618]
[-221.50259399 345.85095215]
[-211.76007080 334.44024658]
[-201.38758850 323.59896851]
[-190.41836548 313.36190796]
[-178.88755798 303.76184082]
[-166.83209229 294.82949829]
[-154.29057312 286.59347534]
[-141.30319214 279.08020020]
[-127.91156006 272.31372070]
[-114.15855408 266.31573486]
[-100.08823395 261.10540771]
[-85.74568176 256.69946289]
[-71.17683411 253.11201477]
[-56.42835617 250.35455322]
[-41.54749680 248.43589783]
[-26.58192253 247.36219788]
[-11.57957458 247.13690186]
[3.41149068 247.76072693]
[18.34325218 249.23167419]
[33.16788101 251.54502869]
[47.83788300 254.69338989]
[51.80998230 240.22886658]
[55.78207779 225.76434326]
[59.75417328 211.29981995]
[54.04553604 200.63502502]
[57.23637390 188.55187988]
[68.14347076 181.66725159]
[72.33048248 167.26347351]
[76.51748657 152.85968018]
[80.70449829 138.45590210]
[84.89151001 124.05212402]
[83.74003601 116.75171661]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[109.18467712 42.98886108]
[112.72434998 28.41248703]
[116.26401520 13.83611107]
[119.80368805 -0.74026436]
[111.84399414 -14.12984848]
[115.64137268 -28.86194229]
[128.45533752 -36.36778259]
[131.12113953 -51.12899780]
[132.90361023 -66.02272034]
[134.68606567 -80.91643524]
[136.46853638 -95.81015015]
[138.25100708 -110.70386505]
[123.85482788 -115.05372620]
[110.43279266 -121.83753204]
[98.39277649 -130.84913635]
[88.10066223 -141.81469727]
[79.86921692 -154.40098572]
[73.94858551 -168.22549438]
[70.51869202 -182.86813354]
[69.68375397 -197.88392639]
[71.46916199 -212.81655884]
[75.82064819 -227.21224976]
[82.60597992 -240.63351440]
[91.61895752 -252.67250061]
[102.58568573 -262.96337891]
[115.17289734 -271.19338989]
[128.99807739 -277.11245728]
[143.64111328 -280.54067993]
[158.65699768 -281.37393188]
[173.58943176 -279.58682251]
[187.98461914 -275.23370361]
[201.40512085 -268.44683838]
[213.44308472 -259.43249512]
[223.73271179 -248.46461487]
[231.96130371 -235.87646484]
[237.87879944 -222.05061340]
[241.30537415 -207.40719604]
[242.13690186 -192.39120483]
[240.34811401 -177.45898438]
[235.99336243 -163.06428528]
[229.20498657 -149.64456177]
[220.18927002 -137.60762024]
[209.22021484 -127.31922913]
[196.63113403 -119.09207153]
[182.80459595 -113.17613983]
[168.16079712 -109.75122833]
[153.14471436 -108.92140198]
[151.36225891 -94.02768707]
[149.57978821 -79.13396454]
[147.79731750 -64.24024963]
[146.01486206 -49.34653473]
[157.16163635 -59.38393402]
[172.06689453 -61.06710434]
[185.17135620 -53.76826096]
[191.58737183 -40.20969391]
[188.92193604 -25.44841194]
[178.16917419 -14.99001026]
[163.33961487 -12.73521233]
[149.96430969 -19.52500343]
[143.03172302 -32.82810974]
[150.97619629 -20.28136444]
[147.59411621 -5.44842243]
[134.38006592 2.79940796]
[130.84039307 17.37578392]
[127.30072021 31.95215797]
[123.76104736 46.52853394]
[125.10263824 48.98989105]
[125.55009460 52.13097000]
[124.83962250 55.61388016]
[122.83453369 59.01154327]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.29529572 128.23913574]
[95.10828400 142.64291382]
[90.92127228 157.04669189]
[86.73426056 171.45048523]
[82.54724884 185.85426331]
[87.35081482 203.63085938]
[74.21869659 215.27192688]
[70.24659729 229.73645020]
[66.27450562 244.20097351]
[62.30241013 258.66549683]
[76.52291107 263.45074463]
[90.44990540 269.03283691]
[104.03878784 275.39395142]
[117.24602509 282.51364136]
[130.02931213 290.36914062]
[142.34770203 298.93527222]
[154.16171265 308.18460083]
[165.43353271 318.08749390]
[176.12704468 328.61221313]
[186.20799255 339.72509766]
[195.64407349 351.39050293]
[204.40507507 363.57104492]
[212.46292114 376.22775269]
[219.79180908 389.32006836]
[226.36825562 402.80606079]
[232.17120361 416.64248657]
[237.18205261 430.78506470]
[241.38475037 445.18847656]
[244.76585388 459.80661011]
[247.31451416 474.59259033]
[249.02256775 489.49908447]
[249.88455200 504.47836304]
[249.89770508 519.48236084]
[249.06196594 534.46313477]
[247.38005066 549.37261963]
[244.85729980 564.16302490]
[241.50183105 578.78704834]
[237.32437134 593.19781494]
[232.33831787 607.34918213]
[226.55964661 621.19573975]
[220.00683594 634.69323730]
[212.70091248 647.79840088]
[204.66525269 660.46917725]
[195.92562866 672.66510010]
[186.50999451 684.34698486]
[176.44854736 695.47753906]
[165.77349854 706.02099609]
[154.51905823 715.94360352]
[142.72126770 725.21362305]
[130.41790771 733.80133057]
[117.64841461 741.67926025]
[104.45367432 748.82208252]
[90.87596130 755.20697021]
[76.95877075 760.81347656]
[62.74667740 765.62365723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 165]
[65 164]
[66 163]
[67 162]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
[76 155]
[78 153]
[79 152]
[80 151]
[81 146]
[82 145]
[83 144]
[84 143]
[87 140]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
