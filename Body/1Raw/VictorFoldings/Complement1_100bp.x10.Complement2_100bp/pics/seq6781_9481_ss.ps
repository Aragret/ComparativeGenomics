%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[16.17840958 171.94123840]
[18.27847290 186.80064392]
[19.26221275 201.77543640]
[19.12412643 216.78187561]
[17.86498833 231.73603821]
[15.49183846 246.55427551]
[12.01795006 261.15374756]
[7.46275043 275.45278931]
[1.85171390 289.37139893]
[-4.78378010 302.83181763]
[-12.40662193 315.75869751]
[-20.97418213 328.07980347]
[-30.43854523 339.72616577]
[-40.74678421 350.63269043]
[-51.84125137 360.73840332]
[-63.65989685 369.98672485]
[-76.13662720 378.32598877]
[-89.20166779 385.70956421]
[-102.78195953 392.09609985]
[-116.80153656 397.44995117]
[-131.18200684 401.74111938]
[-145.84295654 404.94561768]
[-160.70237732 407.04556274]
[-175.67718506 408.02914429]
[-190.68362427 407.89093018]
[-205.63777161 406.63168335]
[-220.45599365 404.25839233]
[-235.05541992 400.78436279]
[-249.35441589 396.22903442]
[-263.27301025 390.61788940]
[-276.73333740 383.98226929]
[-289.66018677 376.35931396]
[-301.98117065 367.79165649]
[-313.62747192 358.32717896]
[-324.53390503 348.01885986]
[-334.63949585 336.92428589]
[-343.88775635 325.10556030]
[-352.22689819 312.62875366]
[-359.61035156 299.56365967]
[-365.99676514 285.98330688]
[-371.35049438 271.96368408]
[-375.64154053 257.58316040]
[-378.84591675 242.92219543]
[-380.94570923 228.06275940]
[-381.92919922 213.08793640]
[-381.79083252 198.08151245]
[-380.53143311 183.12738037]
[-378.15802002 168.30917358]
[-374.68386841 153.70976257]
[-370.12841797 139.41081238]
[-364.51715088 125.49227905]
[-357.88140869 112.03199005]
[-350.25833130 99.10523224]
[-341.69055176 86.78430176]
[-332.22598267 75.13809204]
[-321.91757202 64.23174286]
[-310.82290649 54.12624741]
[-299.00411987 44.87811661]
[-286.52722168 36.53906631]
[-273.46206665 29.15574265]
[-259.88165283 22.76943016]
[-245.86198425 17.41584396]
[-231.48143005 13.12492657]
[-216.82043457 9.92067337]
[-201.96096802 7.82100344]
[-186.98614502 6.83766079]
[-171.97972107 6.97614336]
[-157.02558899 8.23567677]
[-142.20741272 10.60921860]
[-127.60803986 14.08349228]
[-113.30912781 18.63907051]
[-99.39064026 24.25047493]
[-85.93041229 30.88632584]
[-73.00372314 38.50951004]
[-60.68286514 47.07739639]
[-49.03674316 56.54206848]
[-38.13048553 66.85059357]
[-28.02508354 77.94532776]
[-18.77705574 89.76422119]
[-10.43811798 102.24117279]
[-3.05490804 115.30640411]
[3.33128524 128.88685608]
[17.34430885 123.53567505]
[31.35733032 118.18449402]
[45.37035370 112.83330536]
[59.38337708 107.48211670]
[73.39640045 102.13093567]
[87.40942383 96.77974701]
[101.25690460 91.01371002]
[114.92657471 84.83794403]
[128.59625244 78.66217804]
[132.75679016 73.52394104]
[138.08744812 71.55391693]
[142.76608276 72.51280212]
[156.61357117 66.74676514]
[170.46105957 60.98073196]
[184.30854797 55.21469879]
[179.44906616 41.01806259]
[175.51873779 26.53664589]
[172.53404236 11.83118916]
[170.50747681 -3.03662682]
[169.44757080 -18.00444221]
[169.35873413 -33.00947571]
[170.24137878 -47.98878860]
[172.09178162 -62.87955475]
[174.90217590 -77.61931610]
[178.66078186 -92.14624786]
[183.35183716 -106.39942169]
[188.95567322 -120.31904602]
[195.44876099 -133.84675598]
[202.80387878 -146.92578125]
[210.99018860 -159.50128174]
[219.97334290 -171.52050781]
[229.71565247 -182.93305969]
[240.17628479 -193.69105530]
[251.31132507 -203.74935913]
[263.07409668 -213.06581116]
[275.41525269 -221.60130310]
[288.28302002 -229.32006836]
[301.62344360 -236.18969727]
[315.38058472 -242.18141174]
[329.49670410 -247.27005005]
[343.91259766 -251.43428040]
[358.56781006 -254.65663147]
[373.40087891 -256.92361450]
[388.34954834 -258.22567749]
[403.35119629 -258.55737305]
[418.34283447 -257.91732788]
[433.26159668 -256.30822754]
[448.04492188 -253.73678589]
[462.63079834 -250.21382141]
[476.95803833 -245.75410461]
[490.96655273 -240.37632751]
[504.59759521 -234.10307312]
[517.79394531 -226.96061707]
[530.50030518 -218.97895813]
[542.66339111 -210.19154358]
[554.23217773 -200.63523865]
[565.15808105 -190.35012817]
[575.39532471 -179.37936401]
[584.90093994 -167.76893616]
[593.63507080 -155.56756592]
[601.56115723 -142.82643127]
[608.64581299 -129.59895325]
[614.85943604 -115.94062042]
[620.17590332 -101.90872955]
[624.57293701 -87.56213379]
[628.03210449 -72.96099854]
[630.53887939 -58.16657257]
[632.08276367 -43.24091339]
[632.65728760 -28.24661827]
[632.26000977 -13.24658298]
[630.89257812 1.69627821]
[628.56079102 16.51928902]
[625.27441406 31.16027641]
[621.04718018 45.55783081]
[615.89685059 59.65156174]
[609.84509277 73.38235474]
[602.91717529 86.69262695]
[595.14227295 99.52653503]
[586.55285645 111.83025360]
[577.18511963 123.55218506]
[567.07818604 134.64315796]
[556.27459717 145.05664062]
[544.81958008 154.74897766]
[532.76116943 163.67948914]
[520.14996338 171.81074524]
[507.03894043 179.10861206]
[493.48297119 185.54251099]
[479.53897095 191.08543396]
[465.26544189 195.71412659]
[450.72222900 199.40919495]
[435.97030640 202.15512085]
[421.07159424 203.94041443]
[406.08856201 204.75755310]
[391.08407593 204.60313416]
[376.12103271 203.47778320]
[361.26220703 201.38624573]
[346.56994629 198.33728027]
[332.10583496 194.34368896]
[317.93060303 189.42219543]
[304.10363770 183.59346008]
[290.68295288 176.88192749]
[277.72488403 169.31576538]
[265.28372192 160.92668152]
[253.41169739 151.74987793]
[242.15858459 141.82383728]
[231.57157898 131.19020081]
[221.69508362 119.89356995]
[212.57054138 107.98132324]
[204.23622131 95.50342560]
[196.72706604 82.51221466]
[190.07456970 69.06218719]
[176.22709656 74.82821655]
[162.37960815 80.59425354]
[148.53211975 86.36028290]
[134.77201843 92.33184814]
[121.10234833 98.50761414]
[107.43267822 104.68338013]
[106.11817169 107.43321991]
[103.77406311 109.76552582]
[100.55306244 111.29804993]
[96.74697876 111.71028900]
[92.76060486 110.79277039]
[78.74758911 116.14395905]
[64.73456573 121.49514008]
[50.72153854 126.84632874]
[36.70851517 132.19750977]
[22.69549370 137.54870605]
[8.68247128 142.89988708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 210]
[83 209]
[84 208]
[85 207]
[86 206]
[87 205]
[88 204]
[89 199]
[90 198]
[91 197]
[94 196]
[95 195]
[96 194]
[97 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
