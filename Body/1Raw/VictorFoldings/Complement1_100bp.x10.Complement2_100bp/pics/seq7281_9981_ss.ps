%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[100.06947327 853.87481689]
[85.20924377 851.80242920]
[70.49005127 848.89270020]
[55.95905685 845.15484619]
[41.66280746 840.60089111]
[27.64709282 835.24542236]
[13.95681381 829.10559082]
[0.63582325 822.20111084]
[-12.27320671 814.55401611]
[-24.72892570 806.18878174]
[-36.69143295 797.13232422]
[-48.12240601 787.41357422]
[-58.98523331 777.06372070]
[-69.24511719 766.11584473]
[-78.86918640 754.60504150]
[-87.82661438 742.56817627]
[-96.08871460 730.04382324]
[-103.62901306 717.07214355]
[-110.42335510 703.69464111]
[-116.44998169 689.95416260]
[-121.68958282 675.89471436]
[-126.12537384 661.56134033]
[-129.74314880 647.00000000]
[-132.53132629 632.25732422]
[-134.48095703 617.38049316]
[-135.58581543 602.41717529]
[-135.84234619 587.41528320]
[-135.24974060 572.42297363]
[-133.80987549 557.48815918]
[-131.52738953 542.65875244]
[-128.40959167 527.98223877]
[-124.46644592 513.50561523]
[-119.71059418 499.27526855]
[-114.15728760 485.33676147]
[-107.82429504 471.73474121]
[-100.73191071 458.51281738]
[-92.90284729 445.71334839]
[-84.36219788 433.37725830]
[-75.13730621 421.54415894]
[-65.25773621 410.25189209]
[-54.75512314 399.53665161]
[-43.66311646 389.43276978]
[-32.01724625 379.97259521]
[-19.85481644 371.18643188]
[-7.21478987 363.10244751]
[5.86234617 355.74652100]
[19.33469963 349.14221191]
[33.15911484 343.31066895]
[47.29130936 338.27059937]
[61.68601227 334.03814697]
[76.29711151 330.62683105]
[91.07780457 328.04760742]
[105.98074341 326.30874634]
[105.08792114 311.33535767]
[96.60680389 299.09115601]
[103.50897980 284.85491943]
[102.61616516 269.88153076]
[101.72335052 254.90812683]
[100.83053589 239.93472290]
[86.69409943 235.12945557]
[75.44392395 225.25125122]
[68.81488800 211.78199768]
[67.84510803 196.76045227]
[72.71343994 182.47363281]
[82.70748901 171.10868835]
[96.32772064 164.41801453]
[95.43489838 149.44461060]
[86.95378113 137.20043945]
[93.85595703 122.96419525]
[92.96314240 107.99079132]
[90.84851837 93.14059448]
[87.52626038 78.51313782]
[76.92460632 66.76939392]
[81.65085602 52.64452362]
[78.32859802 38.01706314]
[75.00634003 23.38960457]
[70.80220795 18.28697395]
[69.93612671 12.67030907]
[71.80979919 8.27731514]
[68.92452240 -6.44257593]
[66.03925323 -21.16246796]
[63.15398026 -35.88235855]
[58.43231583 -43.70180511]
[60.33704376 -50.84280014]
[57.67124557 -65.60401917]
[55.00545120 -80.36523438]
[52.33965683 -95.12644958]
[49.67385864 -109.88766479]
[34.63659668 -111.12989807]
[20.43355560 -116.22264099]
[8.03312302 -124.81866455]
[-1.71921802 -136.33187866]
[-8.15853786 -149.97731018]
[-10.84579182 -164.82456970]
[-9.59775925 -179.86134338]
[-4.49953222 -194.06242371]
[4.10128260 -206.45953369]
[15.61826801 -216.20742798]
[29.26617622 -222.64147949]
[44.11447144 -225.32299805]
[59.15077209 -224.06916809]
[73.34987640 -218.96545410]
[85.74366760 -210.35984802]
[95.48711395 -198.83911133]
[101.91589355 -185.18872070]
[104.59168243 -170.33938599]
[103.33203888 -155.30357361]
[98.22284698 -141.10644531]
[89.61245728 -128.71597290]
[78.08795166 -118.97697449]
[64.43507385 -112.55346680]
[67.10087585 -97.79224396]
[69.76667023 -83.03102875]
[72.43246460 -68.26981354]
[75.09825897 -53.50859451]
[77.87387085 -38.76763153]
[80.75914001 -24.04774094]
[83.64441681 -9.32784843]
[86.52968597 5.39204264]
[89.63379669 20.06734467]
[92.95605469 34.69480515]
[96.27832031 49.32226562]
[106.64234161 60.01975632]
[102.15372467 75.19087219]
[105.47598267 89.81833649]
[110.98007965 75.86466217]
[122.27780914 65.99748230]
[136.84523010 62.42114639]
[151.42794800 65.93461609]
[162.76814270 75.75296783]
[168.33238220 89.68276978]
[166.87759399 104.61205292]
[158.72880554 117.20558929]
[145.70645142 124.64994812]
[130.71977234 125.28203583]
[117.11683655 118.96064758]
[107.93654633 107.09797668]
[108.82936859 122.07138062]
[117.37435150 135.38655090]
[110.40830994 148.55178833]
[111.30112457 163.52519226]
[125.61990356 168.54995728]
[136.89364624 178.64677429]
[143.42520142 192.25384521]
[144.24731445 207.28421021]
[139.26582336 221.44575500]
[129.26919556 232.59083557]
[115.80393982 239.04190063]
[116.69675446 254.01530457]
[117.58956909 268.98870850]
[118.48239136 283.96212769]
[127.02737427 297.27728271]
[120.06133270 310.44253540]
[120.95414734 325.41592407]
[135.95811462 325.37155151]
[150.94056702 326.17608643]
[165.85351562 327.82696533]
[180.64916992 330.31890869]
[195.28015137 333.64392090]
[209.69956970 337.79135132]
[223.86126709 342.74792480]
[237.71986389 348.49777222]
[251.23095703 355.02246094]
[264.35128784 362.30108643]
[277.03878784 370.31033325]
[289.25286865 379.02456665]
[300.95437622 388.41583252]
[312.10580444 398.45410156]
[322.67147827 409.10717773]
[332.61752319 420.34091187]
[341.91207886 432.11938477]
[350.52539062 444.40484619]
[358.42984009 457.15789795]
[365.60012817 470.33773804]
[372.01330566 483.90213013]
[377.64877319 497.80761719]
[382.48852539 512.00964355]
[386.51702881 526.46276855]
[389.72140503 541.12066650]
[392.09136963 555.93634033]
[393.61932373 570.86236572]
[394.30041504 585.85095215]
[394.13241577 600.85406494]
[393.11590576 615.82360840]
[391.25408936 630.71166992]
[388.55297852 645.47058105]
[385.02120972 660.05303955]
[380.67007446 674.41229248]
[375.51351929 688.50244141]
[369.56811523 702.27825928]
[362.85281372 715.69561768]
[355.38922119 728.71160889]
[347.20117188 741.28448486]
[338.31494141 753.37396240]
[328.75897217 764.94134521]
[318.56387329 775.94958496]
[307.76232910 786.36340332]
[296.38891602 796.14947510]
[284.48004150 805.27636719]
[272.07391357 813.71490479]
[259.21023560 821.43804932]
[245.93023682 828.42108154]
[232.27642822 834.64160156]
[218.29257202 840.07971191]
[204.02343750 844.71795654]
[189.51475525 848.54144287]
[174.81300354 851.53802490]
[159.96525574 853.69805908]
[145.01908875 855.01458740]
[130.02236938 855.48345947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 154]
[54 153]
[56 151]
[57 150]
[58 149]
[59 148]
[66 141]
[67 140]
[69 138]
[70 137]
[71 125]
[72 124]
[74 122]
[75 121]
[76 120]
[79 119]
[80 118]
[81 117]
[82 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
