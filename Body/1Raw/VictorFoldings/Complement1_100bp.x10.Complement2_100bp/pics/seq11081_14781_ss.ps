%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[37.18145370 235.19511414]
[36.32215881 250.17724609]
[34.37152863 265.05667114]
[31.33996582 279.75402832]
[27.24364853 294.19085693]
[22.10443115 308.29019165]
[15.94973278 321.97674561]
[8.81239414 335.17755127]
[0.73049498 347.82211304]
[-8.25284290 359.84301758]
[-18.08968925 371.17611694]
[-28.72756195 381.76092529]
[-40.10969925 391.54095459]
[-52.17537308 400.46408081]
[-64.86020660 408.48263550]
[-78.09651947 415.55386353]
[-91.81369781 421.64004517]
[-105.93854523 426.70867920]
[-120.39569092 430.73275757]
[-135.10801697 433.69079590]
[-149.99702454 435.56698608]
[-164.98324585 436.35134888]
[-179.98675537 436.03967285]
[-194.92749023 434.63366699]
[-209.72573853 432.14077759]
[-224.30252075 428.57434082]
[-238.58009338 423.95336914]
[-252.48226929 418.30252075]
[-265.93487549 411.65194702]
[-278.86611938 404.03713989]
[-291.20703125 395.49874878]
[-302.89172363 386.08227539]
[-313.85791016 375.83798218]
[-324.04702759 364.82055664]
[-333.40475464 353.08874512]
[-341.88116455 340.70513916]
[-349.43099976 327.73587036]
[-356.01397705 314.25006104]
[-361.59500122 300.31970215]
[-366.14428711 286.01913452]
[-369.63754272 271.42462158]
[-372.05612183 256.61407471]
[-373.38717651 241.66647339]
[-373.62356567 226.66159058]
[-372.76400757 211.67947388]
[-370.81314087 196.80007935]
[-367.78134155 182.10278320]
[-363.68478394 167.66600037]
[-358.54534912 153.56677246]
[-352.39041138 139.88029480]
[-345.25286865 126.67963409]
[-337.17074585 114.03518677]
[-328.18722534 102.01443481]
[-318.35018921 90.68151093]
[-307.71212769 80.09687805]
[-296.32983398 70.31701660]
[-284.26400757 61.39410400]
[-271.57904053 53.37574768]
[-258.34262085 46.30472946]
[-244.62535095 40.21878052]
[-230.50041199 35.15036774]
[-216.04319763 31.12653351]
[-201.33082581 28.16875076]
[-186.44180298 26.29279709]
[-171.45555115 25.50868416]
[-156.45204163 25.82059288]
[-141.51133728 27.22686195]
[-126.71313477 29.71998787]
[-112.13639832 33.28666687]
[-97.85890961 37.90786743]
[-83.95682526 43.55894089]
[-70.50434113 50.20972443]
[-57.57321548 57.82474518]
[-45.23245621 66.36336517]
[-33.54789734 75.78002167]
[-22.58188820 86.02449036]
[-12.39293480 97.04209137]
[-3.03540087 108.77405548]
[5.44078684 121.15778351]
[12.99040413 134.12719727]
[21.03364372 121.59102631]
[36.82926178 122.49044037]
[50.30899811 115.91041565]
[58.35223770 103.37424469]
[74.14785767 104.27365875]
[87.62759399 97.69363403]
[100.95702362 90.81421661]
[114.12949371 83.63885498]
[127.30197144 76.46348572]
[140.47444153 69.28812408]
[153.64692688 62.11275482]
[162.06455994 48.71670914]
[176.94239807 49.42314529]
[182.98152161 42.56991196]
[190.36483765 42.24066925]
[203.64268494 35.26221848]
[216.92053223 28.28376579]
[230.19837952 21.30531311]
[224.17118835 7.56261063]
[219.12841797 -6.57101345]
[215.09516907 -21.02514458]
[212.09156799 -35.72777176]
[210.13255310 -50.60564804]
[209.22789001 -65.58464813]
[209.38209534 -80.59015656]
[210.59439087 -95.54740143]
[212.85873413 -110.38187408]
[216.16386414 -125.01967621]
[220.49328613 -139.38786316]
[225.82545471 -153.41487122]
[232.13378906 -167.03080750]
[239.38687134 -180.16784668]
[247.54856873 -192.76052856]
[256.57821655 -204.74612427]
[266.43081665 -216.06492615]
[277.05731201 -226.66052246]
[288.40472412 -236.48014832]
[300.41653442 -245.47486877]
[313.03292847 -253.59988403]
[326.19100952 -260.81472778]
[339.82525635 -267.08340454]
[353.86770630 -272.37472534]
[368.24844360 -276.66232300]
[382.89578247 -279.92483521]
[397.73678589 -282.14602661]
[412.69750977 -283.31478882]
[427.70339966 -283.42532349]
[442.67968750 -282.47708130]
[457.55181885 -280.47476196]
[472.24563599 -277.42840576]
[486.68795776 -273.35311890]
[500.80685425 -268.26922607]
[514.53198242 -262.20205688]
[527.79492188 -255.18186951]
[540.52960205 -247.24359131]
[552.67260742 -238.42678833]
[564.16345215 -228.77539062]
[574.94488525 -218.33749390]
[584.96319580 -207.16506958]
[594.16839600 -195.31379700]
[602.51470947 -182.84271240]
[609.96057129 -169.81394958]
[616.46881104 -156.29241943]
[622.00701904 -142.34548950]
[626.54766846 -128.04263306]
[630.06805420 -113.45511627]
[632.55065918 -98.65560913]
[633.98321533 -83.71784210]
[634.35845947 -68.71623993]
[633.67456055 -53.72553253]
[631.93493652 -38.82041168]
[629.14819336 -24.07513237]
[625.32836914 -9.56315517]
[620.49432373 4.64322281]
[614.67022705 18.47322464]
[607.88513184 31.85794830]
[600.17272949 44.73071289]
[591.57153320 57.02738571]
[582.12432861 68.68670654]
[571.87823486 79.65058136]
[560.88427734 89.86439514]
[549.19726562 99.27725983]
[536.87536621 107.84228516]
[523.97998047 115.51679230]
[510.57534790 122.26255798]
[496.72830200 128.04595947]
[482.50778198 132.83819580]
[467.98461914 136.61538696]
[453.23123169 139.35873413]
[438.32104492 141.05453491]
[423.32839966 141.69435120]
[408.32797241 141.27502441]
[393.39447021 139.79861450]
[378.60232544 137.27247620]
[364.02520752 133.70921326]
[349.73577881 129.12655640]
[335.80517578 123.54735565]
[322.30285645 116.99939728]
[309.29602051 109.51530457]
[296.84951782 101.13236237]
[285.02536011 91.89233398]
[273.88244629 81.84125519]
[263.47628784 71.02919769]
[253.85870361 59.51003265]
[245.07763672 47.34114456]
[237.17683411 34.58316040]
[223.89898682 41.56161118]
[210.62113953 48.54006577]
[197.34329224 55.51851654]
[184.11776733 62.59562302]
[176.64231873 75.47843933]
[160.82229614 75.28523254]
[147.64981079 82.46059418]
[134.47734070 89.63596344]
[121.30486298 96.81133270]
[108.13238525 103.98669434]
[106.52890015 107.49400330]
[103.38722992 110.27748871]
[99.06530762 111.66602325]
[94.20761871 111.17337036]
[80.72788239 117.75339508]
[71.72048187 130.76020813]
[56.88902664 129.39015198]
[43.40929031 135.97016907]
[34.40188980 148.97698975]
[19.57043076 147.60693359]
[25.15167999 161.53718567]
[29.70119095 175.83769226]
[33.19468689 190.43214417]
[35.61353683 205.24266052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 206]
[82 204]
[83 203]
[85 201]
[86 200]
[87 196]
[88 195]
[89 194]
[90 193]
[91 192]
[93 190]
[95 189]
[96 188]
[97 187]
[98 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
