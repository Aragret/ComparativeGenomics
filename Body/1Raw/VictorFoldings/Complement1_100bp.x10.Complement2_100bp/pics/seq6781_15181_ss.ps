%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[74.31807709 618.64855957]
[68.59363556 604.64550781]
[67.47857666 589.55871582]
[71.08214569 574.86621094]
[79.05130005 562.00744629]
[90.60529327 552.24218750]
[104.61219788 546.52709961]
[103.49655151 531.56866455]
[102.38090515 516.61022949]
[101.26525116 501.65176392]
[89.84657288 492.15707397]
[88.50205231 477.00296021]
[98.53839111 465.09036255]
[97.42274475 450.13192749]
[96.30709076 435.17346191]
[95.19144440 420.21502686]
[93.96446991 405.26528931]
[92.62623596 390.32510376]
[81.06745148 381.00146484]
[79.49746704 365.86904907]
[89.35532379 353.80834961]
[88.01708984 338.86816406]
[85.56038666 336.33895874]
[84.20666504 332.49414062]
[84.56093597 327.86514282]
[86.96797943 323.23336792]
[86.29819489 308.24835205]
[85.62841034 293.26330566]
[84.95862579 278.27825928]
[84.28884125 263.29321289]
[83.61905670 248.30818176]
[72.72375488 258.61801147]
[57.72629547 258.34185791]
[47.21790314 247.63795471]
[47.21826553 232.63795471]
[57.72716904 221.93455505]
[72.72463989 221.65913391]
[83.61905670 231.96861267]
[84.28884125 216.98356628]
[84.95862579 201.99853516]
[85.62841034 187.01348877]
[86.29819489 172.02845764]
[86.96797943 157.04341125]
[85.17799377 154.88607788]
[84.13470459 151.88972473]
[84.16196442 148.33520508]
[85.47606659 144.61529541]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[87.55067444 72.55222321]
[96.57006836 60.69896317]
[98.13059235 45.78035736]
[99.69110870 30.86175346]
[101.25163269 15.94314861]
[102.81215668 1.02454352]
[104.37268066 -13.89406109]
[105.04246521 -28.87910080]
[104.81913757 -43.87743759]
[104.59580994 -58.87577438]
[104.37248230 -73.87411499]
[104.14915466 -88.87245178]
[103.92582703 -103.87078857]
[103.70249939 -118.86912537]
[95.76058960 -132.55256653]
[103.30754852 -145.39363098]
[103.08422089 -160.39196777]
[101.96856689 -175.35041809]
[99.96455383 -190.21594238]
[97.96054077 -205.08148193]
[95.95652771 -219.94700623]
[93.95251465 -234.81253052]
[84.18737030 -243.23896790]
[82.82425690 -255.66175842]
[90.05176544 -265.36172485]
[80.72940063 -278.14468384]
[86.89948273 -291.70123291]
[85.11701965 -306.59494019]
[83.33454895 -321.48864746]
[81.55208588 -336.38238525]
[66.53131104 -336.95059204]
[51.78438187 -339.86169434]
[37.67444992 -345.04400635]
[24.54898643 -352.36990356]
[12.73121834 -361.65896606]
[2.51216888 -372.68246460]
[-5.85650921 -385.16891479]
[-12.16872978 -398.81085205]
[-16.26904869 -413.27230835]
[-18.05648994 -428.19717407]
[-17.48703957 -443.21789551]
[-14.57471848 -457.96459961]
[-9.39124680 -472.07409668]
[-2.06427026 -485.19894409]
[7.22577667 -497.01596069]
[18.25011826 -507.23410034]
[30.73727036 -515.60174561]
[44.37972641 -521.91284180]
[58.84152603 -526.01196289]
[73.76653290 -527.79815674]
[88.78721619 -527.22747803]
[103.53366089 -524.31396484]
[117.64273834 -519.12933350]
[130.76699829 -511.80126953]
[142.58323669 -502.51022339]
[152.80046082 -491.48504639]
[161.16708374 -478.99719238]
[167.47705078 -465.35421753]
[171.57498169 -450.89208984]
[173.35995483 -435.96694946]
[172.78802490 -420.94628906]
[169.87327576 -406.20010376]
[164.68746948 -392.09143066]
[157.35833740 -378.96780396]
[148.06632996 -367.15231323]
[137.04031372 -356.93600464]
[124.55177307 -348.57043457]
[110.90827942 -342.26156616]
[96.44580078 -338.16482544]
[98.22827148 -323.27111816]
[100.01073456 -308.37741089]
[101.79319763 -293.48367310]
[110.98807526 -281.76602173]
[104.94548798 -267.14419556]
[116.20545959 -253.68389893]
[108.81804657 -236.81654358]
[110.82205963 -221.95101929]
[112.82607269 -207.08549500]
[114.83008575 -192.21995544]
[116.83409882 -177.35443115]
[125.11213684 -189.86338806]
[139.12098694 -195.22550964]
[153.63568115 -191.44084167]
[163.24259949 -179.92098999]
[164.35859680 -164.96255493]
[156.56744385 -152.14468384]
[142.77503967 -146.24810791]
[128.12561035 -149.47212219]
[118.08255768 -160.61529541]
[118.30588531 -145.61695862]
[126.23181915 -133.00628662]
[118.70083618 -119.09245300]
[118.92416382 -104.09411621]
[119.14749146 -89.09577942]
[119.37081909 -74.09744263]
[119.59414673 -59.09910202]
[119.81747437 -44.10076523]
[120.04080200 -29.10242844]
[129.74664307 -40.53906250]
[144.29341125 -44.19850159]
[158.25552368 -38.71585846]
[166.42546082 -26.13602638]
[165.75602722 -11.15097141]
[156.49691772 0.65025151]
[142.10154724 4.86607790]
[127.93903351 -0.07589126]
[119.29128265 -12.33353806]
[117.73076630 2.58506656]
[116.17024231 17.50367165]
[114.60971832 32.42227554]
[113.04919434 47.34088135]
[111.48867035 62.25948715]
[117.85990906 75.72264099]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.95301819 157.71319580]
[101.28323364 172.69824219]
[100.61344910 187.68327332]
[99.94366455 202.66831970]
[99.27388000 217.65336609]
[98.60409546 232.63839722]
[98.60409546 247.63839722]
[99.27388000 262.62344360]
[99.94366455 277.60848999]
[100.61344910 292.59350586]
[101.28323364 307.57855225]
[101.95301819 322.56359863]
[102.95727539 337.52993774]
[104.29550934 352.47012329]
[116.13986969 362.58688354]
[117.28420258 377.75741577]
[107.56642151 388.98684692]
[108.90465546 403.92703247]
[112.78720093 412.19528198]
[110.14989471 419.09936523]
[111.26554871 434.05783081]
[112.38119507 449.01626587]
[113.49684143 463.97473145]
[125.18926239 474.26672363]
[126.10760498 489.45260620]
[116.22370911 500.53610229]
[117.33935547 515.49456787]
[118.45500183 530.45300293]
[119.57065582 545.41149902]
[134.27037048 548.98547363]
[147.14512634 556.92877197]
[156.93359375 568.46313477]
[162.67678833 582.45849609]
[163.81205750 597.54382324]
[160.22819519 612.24114990]
[152.27627563 625.11059570]
[140.73538208 634.89129639]
[126.73614502 640.62512207]
[111.65008545 641.75030518]
[96.95517731 638.15655518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 199]
[8 198]
[9 197]
[10 196]
[13 193]
[14 192]
[15 191]
[16 190]
[17 188]
[18 187]
[21 184]
[22 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[43 171]
[48 170]
[49 169]
[50 168]
[52 166]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[65 145]
[66 144]
[68 142]
[69 141]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[77 126]
[79 124]
[80 123]
[81 122]
[82 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
