%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[199.35810852 481.82952881]
[193.46487427 468.02883911]
[188.55979919 453.84683228]
[184.66734314 439.35415649]
[181.80686951 424.62301636]
[179.99266052 409.72680664]
[179.23373413 394.73968506]
[179.53388977 379.73641968]
[180.89160156 364.79165649]
[183.30014038 349.97991943]
[186.74748230 335.37493896]
[191.21644592 321.04956055]
[196.68479919 307.07507324]
[203.12527466 293.52111816]
[210.50579834 280.45526123]
[218.78958130 267.94256592]
[227.93537903 256.04534912]
[237.89761353 244.82293701]
[227.41011047 234.09855652]
[216.92260742 223.37417603]
[206.27659607 212.80712891]
[195.47444153 202.39974976]
[184.67228699 191.99238586]
[173.87013245 181.58500671]
[163.06797791 171.17762756]
[152.26580811 160.77026367]
[137.73200989 157.51173401]
[133.16224670 142.36485291]
[122.36008453 131.95748901]
[111.55792999 121.55010986]
[100.75577545 111.14273834]
[89.87643433 100.81607056]
[78.92052460 90.57067871]
[63.55618668 86.79607391]
[59.54504395 72.45174408]
[48.58913422 62.20634842]
[37.48189926 52.12520981]
[26.22580338 42.21055984]
[14.96970844 32.29590988]
[6.46152115 28.97196960]
[3.62124610 22.14887428]
[-7.48598766 12.06773567]
[-18.59322166 1.98659647]
[-29.63662720 12.15268803]
[-41.54686737 21.28792000]
[-54.22803879 29.31874084]
[-67.57804871 36.18048859]
[-81.48939514 41.81791306]
[-95.85008240 46.18562698]
[-110.54447937 49.24846649]
[-125.45426941 50.98176193]
[-140.45941162 51.37156677]
[-155.43908691 50.41473770]
[-170.27268982 48.11898041]
[-184.84078979 44.50278091]
[-199.02607727 39.59524918]
[-212.71434021 33.43590164]
[-225.79537964 26.07433510]
[-238.16386414 17.56981659]
[-249.72021484 7.99082136]
[-260.37136841 -2.58552289]
[-270.03158569 -14.07406044]
[-278.62307739 -26.38229179]
[-286.07666016 -39.41111374]
[-292.33233643 -53.05562973]
[-297.33972168 -67.20597076]
[-301.05853271 -81.74821472]
[-303.45880127 -96.56526184]
[-304.52117920 -111.53782654]
[-304.23715210 -126.54534149]
[-302.60900879 -141.46697998]
[-299.64981079 -156.18260193]
[-295.38342285 -170.57371521]
[-289.84420776 -184.52445984]
[-283.07672119 -197.92250061]
[-275.13549805 -210.65997314]
[-266.08444214 -222.63430786]
[-255.99644470 -233.74908447]
[-244.95272827 -243.91484070]
[-233.04220581 -253.04971313]
[-220.36079407 -261.08013916]
[-207.01057434 -267.94149780]
[-193.09906006 -273.57849121]
[-178.73823547 -277.94577026]
[-164.04374695 -281.00814819]
[-149.13389587 -282.74099731]
[-134.12873840 -283.13034058]
[-119.14909363 -282.17306519]
[-104.31556702 -279.87683105]
[-89.74758148 -276.26019287]
[-75.56244659 -271.35223389]
[-61.87436295 -265.19247437]
[-48.79354858 -257.83050537]
[-36.42532730 -249.32560730]
[-24.86927223 -239.74626160]
[-14.21843719 -229.16958618]
[-4.55857372 -217.68075562]
[4.03253984 -205.37226868]
[11.48573208 -192.34321594]
[17.74099350 -178.69850159]
[22.74795723 -164.54801941]
[26.46631241 -150.00566101]
[28.86611938 -135.18853760]
[29.92805481 -120.21594238]
[29.64356995 -105.20843506]
[28.01495361 -90.28684235]
[25.05532074 -75.57131195]
[20.78849792 -61.18032455]
[15.24884415 -47.22975540]
[8.48095989 -33.83192062]
[0.53933632 -21.09469604]
[-8.51208210 -9.12063694]
[2.59515119 0.96050149]
[13.70238495 11.04164028]
[24.88435936 21.03981209]
[36.14045715 30.95446396]
[47.39654922 40.86911392]
[52.13492584 41.46648788]
[56.54833984 45.04682159]
[58.83452606 51.25043869]
[69.79043579 61.49583054]
[84.37113190 64.53761292]
[89.16591644 79.61476898]
[100.12182617 89.86016083]
[107.69226837 92.62799835]
[111.16314697 100.34058380]
[121.96530151 110.74795532]
[132.76745605 121.15532684]
[143.56961060 131.56269836]
[158.87605286 135.56564331]
[162.67318726 149.96810913]
[173.47534180 160.37547302]
[184.27749634 170.78285217]
[195.07965088 181.19021606]
[205.88182068 191.59759521]
[216.68397522 202.00497437]
[222.99824524 203.96492004]
[226.80360413 208.18585205]
[227.64698792 212.88667297]
[238.13449097 223.61105347]
[248.62199402 234.33543396]
[260.06408691 224.62629700]
[272.16256714 215.74847412]
[284.85714722 207.74618530]
[298.08456421 200.65928650]
[311.77896118 194.52310181]
[325.87207031 189.36819458]
[340.29370117 185.22024536]
[354.97198486 182.09991455]
[369.83383179 180.02275085]
[384.80517578 178.99911499]
[399.81143188 179.03410339]
[414.77783203 180.12751770]
[429.62985229 182.27394104]
[444.29342651 185.46266174]
[458.69555664 189.67779541]
[472.76449585 194.89834595]
[486.43011475 201.09831238]
[499.62435913 208.24679565]
[512.28149414 216.30818176]
[524.33843994 225.24230957]
[535.73516846 235.00468445]
[546.41485596 245.54664612]
[556.32434082 256.81567383]
[565.41424561 268.75567627]
[573.63922119 281.30709839]
[580.95837402 294.40744019]
[587.33514404 307.99145508]
[592.73791504 321.99142456]
[597.13958740 336.33764648]
[600.51837158 350.95861816]
[602.85742188 365.78149414]
[604.14501953 380.73245239]
[604.37475586 395.73696899]
[603.54553223 410.72033691]
[601.66143799 425.60791016]
[598.73193359 440.32546997]
[594.77148438 454.79971313]
[589.79992676 468.95855713]
[583.84204102 482.73144531]
[576.92742920 496.04974365]
[569.09057617 508.84710693]
[560.37054443 521.05981445]
[550.81072998 532.62695312]
[540.45880127 543.49096680]
[529.36633301 553.59771729]
[517.58856201 562.89678955]
[505.18420410 571.34191895]
[492.21499634 578.89105225]
[478.74560547 585.50646973]
[464.84310913 591.15533447]
[450.57678223 595.80944824]
[436.01770020 599.44567871]
[421.23840332 602.04577637]
[406.31246948 603.59692383]
[391.31433105 604.09136963]
[376.31866455 603.52661133]
[361.40020752 601.90545654]
[346.63323975 599.23596191]
[332.09136963 595.53155518]
[317.84704590 590.81054688]
[303.97119141 585.09649658]
[290.53298950 578.41790771]
[277.59936523 570.80804443]
[265.23474121 562.30480957]
[253.50071716 552.95056152]
[242.45579529 542.79193115]
[232.15495300 531.87945557]
[222.64952087 520.26757812]
[213.98687744 508.01412964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 141]
[19 140]
[20 139]
[21 136]
[22 135]
[23 134]
[24 133]
[25 132]
[26 131]
[28 129]
[29 128]
[30 127]
[31 126]
[32 124]
[33 123]
[35 121]
[36 120]
[37 117]
[38 116]
[39 115]
[41 114]
[42 113]
[43 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
