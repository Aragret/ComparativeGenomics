%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[141.93453979 409.21286011]
[135.85534668 395.49392700]
[130.69615173 381.40319824]
[126.47949219 367.00231934]
[123.22382355 352.35424805]
[120.94338226 337.52301025]
[119.64813232 322.57348633]
[119.34373474 307.57107544]
[120.03153229 292.58132935]
[121.70851135 277.66979980]
[124.36734009 262.90170288]
[127.99638367 248.34162903]
[132.57978821 234.05323792]
[138.09750366 220.09901428]
[144.52539062 206.53996277]
[151.83535767 193.43537903]
[159.99543762 180.84257507]
[168.96995544 168.81660461]
[157.56748962 159.07063293]
[146.16502380 149.32467651]
[134.76255798 139.57870483]
[123.36009979 129.83274841]
[108.65811920 127.44506073]
[103.19488525 112.59703827]
[91.50730896 103.19488525]
[75.83364868 101.03919983]
[70.35195923 87.18999481]
[58.38962173 78.13999939]
[46.42728424 69.08999634]
[34.46494675 60.03999710]
[21.60517311 61.03448486]
[11.82802773 53.25045013]
[10.03518105 41.28749466]
[-1.79108834 32.06039810]
[-13.61735821 22.83329964]
[-23.73807526 33.91478729]
[-34.68709564 44.17867279]
[-46.39856720 53.56321716]
[-58.80205917 62.01198959]
[-71.82296753 69.47416687]
[-85.38299561 75.90488434]
[-99.40057373 81.26545715]
[-113.79141235 85.52364349]
[-128.46894836 88.65383911]
[-143.34492493 90.63721466]
[-158.32986450 91.46184540]
[-173.33363342 91.12277222]
[-188.26602173 89.62203217]
[-203.03720093 86.96864319]
[-217.55834961 83.17858124]
[-231.74212646 78.27462769]
[-245.50323486 72.28627777]
[-258.75891113 65.24954224]
[-271.42941284 57.20675278]
[-283.43856812 48.20627594]
[-294.71411133 38.30223465]
[-305.18829346 27.55420494]
[-314.79806519 16.02681923]
[-323.48565674 3.78940868]
[-331.19879150 -9.08442879]
[-337.89111328 -22.51726723]
[-343.52236938 -36.42831802]
[-348.05865479 -50.73392105]
[-351.47274780 -65.34803772]
[-353.74407959 -80.18276978]
[-354.85897827 -95.14891052]
[-354.81076050 -110.15644073]
[-353.59973145 -125.11510468]
[-351.23312378 -139.93493652]
[-347.72521973 -154.52682495]
[-343.09707642 -168.80297852]
[-337.37658691 -182.67756653]
[-330.59808350 -196.06712341]
[-322.80236816 -208.89114380]
[-314.03634644 -221.07247925]
[-304.35269165 -232.53787231]
[-293.80969238 -243.21838379]
[-282.47073364 -253.04977417]
[-270.40399170 -261.97290039]
[-257.68206787 -269.93411255]
[-244.38146973 -276.88552856]
[-230.58216858 -282.78533936]
[-216.36717224 -287.59805298]
[-201.82197571 -291.29473877]
[-187.03404236 -293.85317993]
[-172.09233093 -295.25793457]
[-157.08668518 -295.50061035]
[-142.10736084 -294.57971191]
[-127.24443054 -292.50079346]
[-112.58731079 -289.27633667]
[-98.22412872 -284.92578125]
[-84.24127960 -279.47525024]
[-70.72285461 -272.95755005]
[-57.75015640 -265.41186523]
[-45.40120697 -256.88357544]
[-33.75027466 -247.42396545]
[-22.86742973 -237.08995056]
[-12.81812382 -225.94364929]
[-3.66279459 -214.05213928]
[4.54349470 -201.48689270]
[11.75139046 -188.32351685]
[17.91754341 -174.64115906]
[23.00486755 -160.52212524]
[26.98276901 -146.05130005]
[29.82732201 -131.31573486]
[31.52141953 -116.40405273]
[32.05487061 -101.40592957]
[31.42447281 -86.41156006]
[29.63401413 -71.51113892]
[26.69425964 -56.79427338]
[22.62289429 -42.34947205]
[17.44440269 -28.26361084]
[11.18992805 -14.62140083]
[3.89708734 -1.50489295]
[-4.39025974 11.00702953]
[7.43600988 20.23412704]
[19.26227951 29.46122551]
[36.74782944 30.95201683]
[43.51494598 48.07765961]
[55.47728348 57.12765884]
[67.43962097 66.17765808]
[79.40195465 75.22766113]
[94.21998596 76.73603058]
[100.55730438 91.23255157]
[103.60091400 91.07150269]
[106.77039337 92.01433563]
[109.65699005 94.10980988]
[111.83967590 97.25498199]
[112.94084930 101.19457245]
[128.45841980 104.27935791]
[133.10606384 118.43028259]
[144.50852966 128.17623901]
[155.91099548 137.92221069]
[167.31344604 147.66818237]
[178.71591187 157.41413879]
[189.19789124 146.67665100]
[200.36660767 136.65539551]
[212.17321777 127.39420319]
[224.56610107 118.93357086]
[237.49104309 111.31048584]
[250.89155579 104.55828857]
[264.70901489 98.70651245]
[278.88302612 93.78073120]
[293.35159302 89.80249786]
[308.05145264 86.78919983]
[322.91830444 84.75401306]
[337.88717651 83.70584106]
[352.89260864 83.64926147]
[367.86892700 84.58453369]
[382.75073242 86.50756073]
[397.47290039 89.40992737]
[411.97103882 93.27895355]
[426.18179321 98.09770966]
[440.04296875 103.84513092]
[453.49401855 110.49608612]
[466.47607422 118.02149200]
[478.93240356 126.38844299]
[490.80850220 135.56034851]
[502.05249023 145.49708557]
[512.61511230 156.15524292]
[522.45025635 167.48817444]
[531.51495361 179.44635010]
[539.76940918 191.97747803]
[547.17767334 205.02673340]
[553.70733643 218.53709412]
[559.32977295 232.44946289]
[564.02038574 246.70300293]
[567.75878906 261.23538208]
[570.52856445 275.98306274]
[572.31756592 290.88156128]
[573.11798096 305.86572266]
[572.92639160 320.87002563]
[571.74353027 335.82885742]
[569.57458496 350.67678833]
[566.42913818 365.34893799]
[562.32086182 379.78109741]
[557.26770020 393.91021729]
[551.29180908 407.67443848]
[544.41925049 421.01364136]
[536.68017578 433.86944580]
[528.10833740 446.18566895]
[518.74127197 457.90844727]
[508.61987305 468.98654175]
[497.78848267 479.37145996]
[486.29443359 489.01782227]
[474.18795776 497.88342285]
[461.52200317 505.92953491]
[448.35198975 513.12091064]
[434.73550415 519.42620850]
[420.73202515 524.81774902]
[406.40286255 529.27203369]
[391.81063843 532.76953125]
[377.01916504 535.29498291]
[362.09310913 536.83734131]
[347.09774780 537.38983154]
[332.09869385 536.95001221]
[317.16146851 535.51995850]
[302.35140991 533.10571289]
[287.73330688 529.71801758]
[273.37106323 525.37158203]
[259.32748413 520.08538818]
[245.66397095 513.88269043]
[232.44027710 506.79043579]
[219.71421814 498.83978271]
[207.54145813 490.06539917]
[195.97521973 480.50570679]
[185.06607056 470.20248413]
[174.86172485 459.20080566]
[165.40679932 447.54876709]
[156.74263000 435.29730225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[24 129]
[25 124]
[27 122]
[28 121]
[29 120]
[30 119]
[33 117]
[34 116]
[35 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
