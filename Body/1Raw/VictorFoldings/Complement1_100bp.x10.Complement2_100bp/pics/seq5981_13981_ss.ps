%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[73.29027557 284.25067139]
[80.95623779 297.21398926]
[85.65581512 311.52230835]
[87.16921234 326.50640869]
[85.42562866 341.46548462]
[80.50662231 355.69985962]
[72.64226532 368.54376221]
[62.20038223 379.39648438]
[49.66936493 387.75039673]
[35.63531113 393.21475220]
[20.75461578 395.53402710]
[5.72327852 394.59970093]
[-8.75565910 390.45550537]
[-22.00499153 383.29522705]
[-33.40502167 373.45382690]
[-42.42255020 361.39157104]
[-48.63581085 347.67260742]
[-51.75419998 332.93865967]
[-51.63186264 317.87881470]
[-48.27452087 303.19744873]
[-41.83920288 289.58123779]
[-32.62690353 277.66708374]
[-21.06849480 268.01217651]
[-7.70458746 261.06808472]
[6.83976555 257.15966797]
[21.88429832 256.46966553]
[36.72534943 259.03036499]
[42.38813782 245.14033508]
[48.05092239 231.25032043]
[53.71371078 217.36029053]
[51.35374451 202.65383911]
[63.72832870 192.79582214]
[69.39111328 178.90580750]
[67.03115082 164.19934082]
[79.40573120 154.34133911]
[85.06851959 140.45130920]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[99.98812866 42.27912140]
[101.54865265 27.36051750]
[103.10917664 12.44191265]
[104.66969299 -2.47669244]
[106.11911774 -17.40650177]
[107.45735168 -32.34668732]
[108.79558563 -47.28687286]
[106.90229034 -62.16690445]
[101.86537170 -76.29593658]
[96.82846069 -90.42496490]
[91.79154205 -104.55399323]
[86.75462341 -118.68302155]
[81.71771240 -132.81205750]
[76.68079376 -146.94108582]
[71.64387512 -161.07011414]
[57.77257156 -162.87278748]
[46.08698273 -170.44003296]
[38.83659363 -182.24723816]
[37.38774872 -195.96037292]
[41.96649933 -208.89729309]
[51.62555313 -218.55232239]
[46.79955673 -232.75477600]
[41.97355652 -246.95724487]
[37.14756012 -261.15969849]
[32.32156372 -275.36215210]
[27.49556351 -289.56460571]
[12.81225395 -286.41549683]
[-2.13736677 -284.99234009]
[-17.15112114 -285.31439209]
[-32.02596283 -287.37728882]
[-46.56072998 -291.15313721]
[-60.55885696 -296.59088135]
[-73.83103180 -303.61697388]
[-86.19776154 -312.13638306]
[-97.49181366 -322.03390503]
[-107.56043243 -333.17568970]
[-116.26745605 -345.41107178]
[-123.49513245 -358.57455444]
[-129.14572144 -372.48812866]
[-133.14280701 -386.96359253]
[-135.43231201 -401.80526733]
[-135.98329163 -416.81234741]
[-134.78829956 -431.78195190]
[-131.86347961 -446.51156616]
[-127.24840546 -460.80203247]
[-121.00547791 -474.46008301]
[-113.21912384 -487.30102539]
[-103.99465179 -499.15115356]
[-93.45681000 -509.85021973]
[-81.74810791 -519.25354004]
[-69.02689362 -527.23400879]
[-55.46520996 -533.68359375]
[-41.24645996 -538.51513672]
[-26.56294060 -541.66326904]
[-11.61322594 -543.08538818]
[3.40050673 -542.76239014]
[18.27521324 -540.69848633]
[32.80972672 -536.92163086]
[46.80749130 -531.48297119]
[60.07919693 -524.45599365]
[72.44535828 -515.93579102]
[83.73874664 -506.03747559]
[93.80661774 -494.89501953]
[102.51283264 -482.65905762]
[109.73963165 -469.49511719]
[115.38928986 -455.58117676]
[119.38540649 -441.10540771]
[121.67392731 -426.26361084]
[122.22390747 -411.25646973]
[121.02790833 -396.28695679]
[118.10211182 -381.55752563]
[113.48607635 -367.26736450]
[107.24224091 -353.60974121]
[99.45503235 -340.76931763]
[90.22976685 -328.91983032]
[79.69120789 -318.22143555]
[67.98188019 -308.81887817]
[55.26013565 -300.83929443]
[41.69802094 -294.39059448]
[46.52401733 -280.18814087]
[51.35001373 -265.98568726]
[56.17601395 -251.78323364]
[61.00201035 -237.58078003]
[65.82801056 -223.37832642]
[81.74967957 -220.61917114]
[94.17890167 -210.14682007]
[99.66226959 -194.74716187]
[96.61396027 -178.59155273]
[85.77291107 -166.10702515]
[90.80982208 -151.97799683]
[95.84674072 -137.84896851]
[100.88365936 -123.71994019]
[105.92057037 -109.59091187]
[110.95748901 -95.46188354]
[115.99440765 -81.33285522]
[121.03131866 -67.20381927]
[122.77371216 -82.10227966]
[127.43990326 -96.35803986]
[134.84403992 -109.40329742]
[144.69122314 -120.71846771]
[156.58923340 -129.85287476]
[170.06419373 -136.44268799]
[184.57937622 -140.22543335]
[199.55667114 -141.05047607]
[214.39953613 -138.88491821]
[228.51676941 -133.81504822]
[241.34609985 -126.04276276]
[252.37652588 -115.87765503]
[261.16873169 -103.72457886]
[267.37252808 -90.06760406]
[270.74078369 -75.45066833]
[271.13937378 -60.45596313]
[268.55242920 -45.68072510]
[263.08294678 -31.71344185]
[254.94883728 -19.11042976]
[244.47401428 -8.37365723]
[232.07572937 0.06923246]
[218.24777222 5.88196182]
[203.54093933 8.83301258]
[188.54095459 8.80484581]
[173.84530640 5.79858303]
[160.03927612 -0.06603774]
[147.67279053 -8.55543041]
[137.23837280 -19.33146667]
[129.15162659 -31.96493912]
[123.73577118 -45.94863892]
[122.39753723 -31.00845146]
[121.05930328 -16.06826782]
[123.59352112 -9.12567902]
[119.58830261 -0.91616946]
[118.02777863 14.00243568]
[116.46725464 28.92103958]
[114.90673065 43.83964539]
[117.16485596 48.04795837]
[116.80332184 53.71949387]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[112.61820984 115.82861328]
[124.86183929 107.16295624]
[139.23713684 102.87917328]
[154.22703552 103.42932892]
[168.24963379 108.75537109]
[179.82508850 118.29523468]
[187.73179626 131.04214478]
[191.13537598 145.65090942]
[189.67660522 160.57980347]
[183.50946045 174.25335693]
[173.28474426 185.22857666]
[160.08152771 192.34721375]
[145.29315186 194.85801697]
[130.48030090 192.49601746]
[117.20616913 185.51049805]
[106.87163544 174.63862610]
[100.56732178 161.02777100]
[98.95854187 146.11410522]
[93.29576111 160.00411987]
[95.25068665 175.70408630]
[83.28114319 184.56858826]
[77.61835480 198.45861816]
[79.57328033 214.15856934]
[67.60373688 223.02307129]
[61.94095230 236.91310120]
[56.27816391 250.80313110]
[50.61537933 264.69314575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[30 207]
[32 205]
[33 204]
[35 202]
[36 201]
[37 183]
[38 182]
[40 180]
[41 179]
[42 178]
[43 175]
[44 174]
[45 173]
[46 172]
[47 170]
[48 169]
[49 168]
[50 138]
[51 137]
[52 136]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
