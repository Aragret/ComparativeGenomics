%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[102.14334106 539.20910645]
[101.87049103 554.36499023]
[96.42757416 568.51245117]
[86.47184753 579.94305420]
[73.20552063 587.27661133]
[58.23055649 589.62738037]
[43.35526657 586.71166992]
[30.37590599 578.88146973]
[20.85980034 567.08233643]
[15.95606232 552.73907471]
[16.25684547 537.58367920]
[21.72582626 523.44628906]
[31.70259857 512.03405762]
[44.98242188 504.72500610]
[59.96168900 502.40176392]
[54.81698227 488.42388916]
[65.06427765 476.36968994]
[67.94955444 461.64981079]
[70.83482361 446.92990112]
[64.34878540 436.71923828]
[66.63208771 424.43225098]
[76.99691772 416.75546265]
[80.10102844 402.08013916]
[83.20513916 387.40484619]
[86.30924225 372.72955322]
[89.41335297 358.05422974]
[91.30664825 343.17419434]
[84.14537048 330.11413574]
[92.49115753 316.67321777]
[93.16094208 301.68817139]
[93.83073425 286.70315552]
[80.59854889 281.67098999]
[69.55060577 272.78479004]
[61.77537537 260.90304565]
[58.04410553 247.18017578]
[58.73439026 232.95437622]
[63.79197693 219.61711121]
[72.73477173 208.47708130]
[84.69878387 200.63169861]
[98.52156830 196.85911560]
[99.41438293 181.88571167]
[100.30719757 166.91230774]
[101.20001221 151.93890381]
[102.09283447 136.96549988]
[99.97821045 122.11530304]
[94.94129181 107.98626709]
[90.83415222 104.72354889]
[88.84741211 99.39192200]
[89.97158813 93.36090851]
[78.36448669 82.60982513]
[81.81172943 68.11962891]
[77.19772339 53.84689713]
[72.58370972 39.57416534]
[67.96970367 25.30143166]
[63.32710648 20.59422112]
[61.96337891 15.07722282]
[63.43765640 10.53458595]
[59.25064468 -3.86919618]
[55.06363297 -18.27297783]
[43.78177643 -29.36487961]
[47.65892029 -43.74601364]
[36.37706375 -54.83791351]
[40.25420761 -69.21904755]
[36.06719589 -83.62283325]
[31.88018417 -98.02661133]
[27.37255478 -112.33329773]
[15.60667133 -122.91037750]
[18.83779716 -137.45028687]
[14.01179886 -151.65274048]
[9.18580055 -165.85519409]
[4.35980320 -180.05766296]
[-0.46619433 -194.26011658]
[-12.23207855 -204.83718872]
[-9.00095367 -219.37710571]
[-23.79180527 -216.71470642]
[-38.81427002 -216.28662109]
[-53.73273468 -218.10238647]
[-68.21392059 -222.12145996]
[-81.93431091 -228.25405884]
[-94.58737946 -236.36314392]
[-105.89046478 -246.26759338]
[-115.59104919 -257.74609375]
[-123.47240448 -270.54226685]
[-129.35847473 -284.37020874]
[-133.11775208 -298.92098999]
[-134.66627502 -313.86956787]
[-133.96940613 -328.88195801]
[-131.04275513 -343.62280273]
[-125.95169067 -357.76275635]
[-118.80993652 -370.98596191]
[-109.77705383 -382.99700928]
[-99.05484772 -393.52752686]
[-86.88284302 -402.34228516]
[-73.53296661 -409.24435425]
[-59.30346680 -414.07952881]
[-44.51223755 -416.73980713]
[-29.48971176 -417.16577148]
[-14.57150555 -415.34786987]
[-0.09089333 -411.32672119]
[13.62862110 -405.19219971]
[26.28054047 -397.08129883]
[37.58221436 -387.17523193]
[47.28115845 -375.69534302]
[55.16069794 -362.89807129]
[61.04479599 -349.06927490]
[64.80200958 -334.51794434]
[66.34838867 -319.56915283]
[65.64939117 -304.55685425]
[62.72063828 -289.81643677]
[57.62755585 -275.67721558]
[50.48392105 -262.45501709]
[41.44932938 -250.44528198]
[30.72561836 -239.91629028]
[18.55235863 -231.10327148]
[5.20150232 -224.20309448]
[16.62219810 -214.64187622]
[13.73626137 -199.08610535]
[18.56225967 -184.88365173]
[23.38825607 -170.68119812]
[28.21425438 -156.47874451]
[33.04025269 -142.27629089]
[44.46094894 -132.71507263]
[41.57501221 -117.15929413]
[44.55917740 -115.28124237]
[46.78195190 -111.86447144]
[47.53003693 -107.28258514]
[46.28396606 -102.21362305]
[50.47097778 -87.80984497]
[54.65798950 -73.40605927]
[65.64036560 -63.34441376]
[62.06270218 -47.93302536]
[73.04507446 -37.87137985]
[69.46741486 -22.45998955]
[73.65442657 -8.05620766]
[77.84143829 6.34757471]
[82.24243927 20.68742180]
[86.85644531 34.96015549]
[91.47045135 49.23288727]
[96.08446503 63.50562286]
[107.36154175 73.23582458]
[104.24432373 88.74689484]
[109.07032013 102.94935608]
[114.10723877 117.07838440]
[115.83129883 102.17779541]
[120.67619324 87.98177338]
[128.42150879 75.13614655]
[138.71488953 64.22530365]
[151.08804321 55.74562073]
[164.97807312 50.08285904]
[179.75309753 47.49463654]
[194.74092102 48.09870911]
[209.25971985 51.86758423]
[222.64898682 58.62981033]
[234.29957581 68.07775116]
[243.68150330 79.78158569]
[250.36790466 93.20886230]
[254.05462646 107.74874115]
[254.57394409 122.73975372]
[251.90222168 137.49989319]
[246.16101074 151.35769653]
[237.61151123 163.68270874]
[226.64263916 173.91421509]
[213.75341797 181.58677673]
[199.53022766 186.35133362]
[184.62013245 187.99111938]
[169.70143127 186.43153381]
[155.45281982 181.74354553]
[142.52253723 174.14041138]
[131.49879456 163.96803284]
[122.88313293 151.68917847]
[117.06623840 137.85830688]
[116.17342377 152.83171082]
[115.28060150 167.80513000]
[114.38778687 182.77853394]
[113.49497223 197.75193787]
[128.14875793 204.00543213]
[139.75576782 214.88031006]
[146.92518616 229.04829407]
[148.80659485 244.78808594]
[145.19075012 260.19445801]
[136.53274536 273.40887451]
[123.89473724 282.84371948]
[108.81577301 287.37292480]
[108.14598083 302.35797119]
[107.47619629 317.34301758]
[114.58956909 331.47491455]
[106.29168701 343.84399414]
[115.29431915 331.84597778]
[128.80163574 325.32275391]
[143.79606628 325.73162842]
[156.92781067 332.98126221]
[165.26319885 345.45205688]
[166.94010925 360.35803223]
[161.58389282 374.36914062]
[150.39114380 384.35525513]
[135.86236572 388.08544922]
[121.24330139 384.72640991]
[109.79991150 375.02853394]
[104.08866119 361.15835571]
[100.98455048 375.83364868]
[97.88043976 390.50894165]
[94.77632904 405.18426514]
[91.67221832 419.85955811]
[97.78463745 437.22964478]
[85.55471802 449.81518555]
[82.66944885 464.53509521]
[79.78417206 479.25497437]
[84.72250366 494.28573608]
[74.68157959 505.28704834]
[87.67534637 513.09332275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[17 207]
[18 206]
[19 205]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 187]
[29 185]
[30 184]
[31 183]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 143]
[46 142]
[49 141]
[51 139]
[52 138]
[53 137]
[54 136]
[57 135]
[58 134]
[59 133]
[61 131]
[63 129]
[64 128]
[65 127]
[66 123]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[74 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
