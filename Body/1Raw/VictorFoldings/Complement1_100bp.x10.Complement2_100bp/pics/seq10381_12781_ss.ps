%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[106.04524231 318.56958008]
[91.10750580 320.39993286]
[76.09973145 319.28060913]
[61.59877777 315.25460815]
[48.16202164 308.47671509]
[36.30593872 299.20742798]
[26.48624611 287.80307007]
[19.08038521 274.70193481]
[14.37301731 260.40765381]
[12.54508018 245.46960449]
[13.66683674 230.46200562]
[17.69516945 215.96170044]
[24.47523880 202.52604675]
[33.74643707 190.67146301]
[45.15240479 180.85362244]
[58.25472641 173.44987488]
[72.54978180 168.74482727]
[87.48811340 166.91931152]
[88.60376740 151.96084595]
[89.71941376 137.00239563]
[90.83506012 122.04394531]
[79.66205597 112.50199127]
[76.19287872 98.22438812]
[81.74163055 84.61937714]
[94.20648193 76.84040833]
[95.32213593 61.88195038]
[96.43778229 46.92350006]
[88.05949402 30.52575874]
[98.49834442 16.41911125]
[99.39115906 1.44570637]
[100.28397369 -13.52769947]
[101.17678833 -28.50110435]
[102.06960297 -43.47451019]
[87.14451599 -44.99374390]
[72.29614258 -47.13664246]
[57.55052948 -49.89944458]
[42.93354416 -53.27730942]
[28.47083092 -57.26430511]
[14.18776321 -61.85343933]
[0.10939573 -67.03666687]
[-13.73957062 -72.80488586]
[-27.33484268 -79.14797974]
[-40.65256500 -86.05481720]
[-53.66938019 -93.51329041]
[-66.36244202 -101.51030731]
[-78.70949554 -110.03184509]
[-90.68887329 -119.06294250]
[-102.27955627 -128.58776855]
[-113.46121979 -138.58959961]
[-124.21423340 -149.05090332]
[-134.51974487 -159.95332336]
[-144.35966492 -171.27772522]
[-153.71675110 -183.00424194]
[-162.57455444 -195.11231995]
[-170.91755676 -207.58070374]
[-178.73112488 -220.38751221]
[-186.00155640 -233.51028442]
[-192.71606445 -246.92599487]
[-198.86289978 -260.61111450]
[-204.43127441 -274.54165649]
[-209.41140747 -288.69314575]
[-213.79457092 -303.04074097]
[-217.57307434 -317.55932617]
[-220.74028015 -332.22338867]
[-223.29064941 -347.00723267]
[-225.21969604 -361.88491821]
[-226.52403259 -376.83029175]
[-227.20137024 -391.81719971]
[-227.25054932 -406.81933594]
[-226.67143250 -421.81036377]
[-225.46508789 -436.76400757]
[-223.63359070 -451.65399170]
[-221.18019104 -466.45422363]
[-218.10916138 -481.13873291]
[-214.42588806 -495.68176270]
[-210.13687134 -510.05780029]
[-205.24958801 -524.24163818]
[-199.77264404 -538.20837402]
[-193.71563721 -551.93347168]
[-187.08920288 -565.39288330]
[-179.90495300 -578.56304932]
[-172.17549133 -591.42077637]
[-163.91438293 -603.94360352]
[-155.13612366 -616.10943604]
[-145.85610962 -627.89709473]
[-136.09062195 -639.28570557]
[-125.85678864 -650.25543213]
[-115.17256927 -660.78698730]
[-104.05670166 -670.86193848]
[-92.52869415 -680.46252441]
[-80.60877228 -689.57189941]
[-68.31784058 -698.17419434]
[-55.67745972 -706.25427246]
[-42.70981216 -713.79785156]
[-29.43764305 -720.79187012]
[-15.88423920 -727.22393799]
[-2.07337642 -733.08276367]
[11.97071552 -738.35815430]
[26.22339821 -743.04083252]
[40.65966797 -747.12255859]
[55.25419998 -750.59613037]
[69.98139191 -753.45550537]
[84.81539917 -755.69567871]
[99.73020935 -757.31274414]
[114.69964600 -758.30377197]
[129.69744873 -758.66705322]
[144.69731140 -758.40203857]
[159.67292786 -757.50909424]
[174.59800720 -755.98980713]
[189.44638062 -753.84686279]
[204.19198608 -751.08398438]
[218.80895996 -747.70611572]
[233.27165222 -743.71905518]
[247.55471802 -739.12988281]
[261.63305664 -733.94659424]
[275.48202515 -728.17834473]
[289.07727051 -721.83520508]
[302.39495850 -714.92834473]
[315.41174316 -707.46978760]
[328.10479736 -699.47277832]
[340.45181274 -690.95117188]
[352.43118286 -681.92004395]
[364.02182007 -672.39520264]
[375.20346069 -662.39331055]
[385.95645142 -651.93200684]
[396.26193237 -641.02954102]
[406.10180664 -629.70507812]
[415.45883179 -617.97851562]
[424.31661987 -605.87042236]
[432.65957642 -593.40203857]
[440.47311401 -580.59521484]
[447.74349976 -567.47241211]
[454.45797729 -554.05670166]
[460.60476685 -540.37152100]
[466.17309570 -526.44097900]
[471.15319824 -512.28948975]
[475.53631592 -497.94186401]
[479.31475830 -483.42327881]
[482.48193359 -468.75918579]
[485.03225708 -453.97534180]
[486.96124268 -439.09765625]
[488.26553345 -424.15225220]
[488.94284058 -409.16534424]
[488.99194336 -394.16323853]
[488.41281128 -379.17221069]
[487.20642090 -364.21856689]
[485.37487793 -349.32858276]
[482.92141724 -334.52835083]
[479.85034180 -319.84384155]
[476.16702271 -305.30084229]
[471.87796021 -290.92480469]
[466.99063110 -276.74099731]
[461.51364136 -262.77429199]
[455.45660400 -249.04919434]
[448.83013916 -235.58978271]
[441.64584351 -222.41966248]
[433.91632080 -209.56193542]
[425.65518188 -197.03916931]
[416.87689209 -184.87332153]
[407.59683228 -173.08575439]
[397.83129883 -161.69712830]
[387.59744263 -150.72743225]
[376.91320801 -140.19590759]
[365.79730225 -130.12103271]
[354.26925659 -120.52047729]
[342.34930420 -111.41108704]
[330.05834961 -102.80885315]
[317.41793823 -94.72885132]
[304.45028687 -87.18525696]
[291.17810059 -80.19132233]
[277.62466431 -73.75929260]
[263.81378174 -67.90047455]
[249.76966858 -62.62512970]
[235.51698303 -57.94252014]
[221.08068848 -53.86085892]
[206.48614502 -50.38731003]
[191.75895691 -47.52796173]
[176.92494202 -45.28783417]
[162.01013184 -43.67085648]
[147.04067993 -42.67986679]
[132.04287720 -42.31660080]
[117.04300690 -42.58169556]
[116.15019226 -27.60828972]
[115.25737762 -12.63488388]
[114.36456299 2.33852220]
[113.47174835 17.31192780]
[121.26379395 26.56452560]
[120.64251709 39.04642487]
[111.39623260 48.03914642]
[110.28058624 62.99760056]
[109.16493988 77.95605469]
[120.33794403 87.49800873]
[123.80712128 101.77561188]
[118.25836945 115.38062286]
[105.79351807 123.15959167]
[104.67786407 138.11804199]
[103.56221771 153.07650757]
[102.44657135 168.03495789]
[116.94882965 172.05624390]
[130.38777161 178.82978821]
[142.24685669 188.09523010]
[152.07023621 199.49642944]
[159.48034668 212.59515381]
[164.19233704 226.88792419]
[166.02511597 241.82536316]
[164.90821838 256.83331299]
[160.88456726 271.33493042]
[154.10885620 284.77279663]
[144.84149170 296.63037109]
[133.43870544 306.45190430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 198]
[19 197]
[20 196]
[21 195]
[25 191]
[26 190]
[27 189]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
