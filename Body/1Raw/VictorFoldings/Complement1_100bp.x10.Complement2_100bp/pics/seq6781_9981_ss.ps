%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[46.24258423 361.71939087]
[41.02846146 375.79153442]
[34.77729797 389.43469238]
[27.52405930 402.57250977]
[19.30930519 415.13159180]
[10.17897511 427.04162598]
[0.18413113 438.23605347]
[-10.61933041 448.65228271]
[-22.17099190 458.23199463]
[-34.40625000 466.92169189]
[-47.25667953 474.67272949]
[-60.65041733 481.44177246]
[-74.51255798 487.19097900]
[-88.76557159 491.88818359]
[-103.32976532 495.50711060]
[-118.12367249 498.02752686]
[-133.06455994 499.43536377]
[-148.06887817 499.72268677]
[-163.05271912 498.88793945]
[-177.93228149 496.93579102]
[-192.62434387 493.87713623]
[-207.04675293 489.72906494]
[-221.11885071 484.51483154]
[-234.76193237 478.26354980]
[-247.89970398 471.01019287]
[-260.45867920 462.79531860]
[-272.36865234 453.66488647]
[-283.56301880 443.66995239]
[-293.97912598 432.86639404]
[-303.55874634 421.31466675]
[-312.24832153 409.07931519]
[-319.99926758 396.22882080]
[-326.76818848 382.83502197]
[-332.51727295 368.97283936]
[-337.21435547 354.71975708]
[-340.83316040 340.15554810]
[-343.35342407 325.36163330]
[-344.76110840 310.42071533]
[-345.04833984 295.41638184]
[-344.21343994 280.43255615]
[-342.26116943 265.55300903]
[-339.20236206 250.86097717]
[-335.05419922 236.43861389]
[-329.83981323 222.36656189]
[-323.58840942 208.72352600]
[-316.33496094 195.58583069]
[-308.11996460 183.02691650]
[-298.98944092 171.11701965]
[-288.99438477 159.92276001]
[-278.19073486 149.50674438]
[-266.63891602 139.92721558]
[-254.40350342 131.23774719]
[-241.55294800 123.48692322]
[-228.15908813 116.71811676]
[-214.29684448 110.96915436]
[-200.04374695 106.27220917]
[-185.47949219 102.65353394]
[-170.68553162 100.13337708]
[-155.74462891 98.72582245]
[-140.74029541 98.43875122]
[-125.75646973 99.27375793]
[-110.87694550 101.22618103]
[-96.18493652 104.28509521]
[-81.76259613 108.43340302]
[-67.69059753 113.64789581]
[-54.04762268 119.89942169]
[-40.90998077 127.15300751]
[-28.35113716 135.36808777]
[-16.44132805 144.49873352]
[-5.24715996 154.49388123]
[5.16876459 165.29762268]
[16.71506691 155.72248840]
[28.26136780 146.14736938]
[39.80767059 136.57225037]
[40.49756241 133.11445618]
[42.89654922 129.81901550]
[46.91007614 127.48558807]
[52.09004211 126.84133911]
[64.05237579 117.79133606]
[76.01471710 108.74134064]
[87.97705078 99.69133759]
[99.80332184 90.46424103]
[111.49089813 81.06208801]
[123.17848206 71.65993500]
[108.42140961 68.97130585]
[99.77468872 56.71429825]
[102.19155884 41.91028595]
[114.28752136 33.03968048]
[129.13346863 35.18396759]
[138.22496033 47.11479950]
[136.35444641 61.99682999]
[148.83422852 53.67488480]
[161.31402588 45.35294342]
[173.79382324 37.03099823]
[166.35946655 23.99585152]
[159.85250854 10.47386169]
[154.30465698 -3.46909380]
[149.74291992 -17.76508522]
[146.18954468 -32.34446335]
[143.66184998 -47.13619995]
[142.17211914 -62.06822586]
[141.72764587 -77.06780243]
[142.33056641 -92.06183624]
[143.97795105 -106.97729492]
[146.66177368 -121.74150085]
[150.36897278 -136.28253174]
[155.08146667 -150.52952576]
[160.77632141 -164.41310120]
[167.42576599 -177.86558533]
[174.99740601 -190.82147217]
[183.45437622 -203.21762085]
[192.75546265 -214.99363708]
[202.85534668 -226.09214783]
[213.70481873 -236.45910645]
[225.25103760 -246.04397583]
[237.43772888 -254.80006409]
[250.20553589 -262.68472290]
[263.49224854 -269.65954590]
[277.23312378 -275.69052124]
[291.36123657 -280.74829102]
[305.80776978 -284.80819702]
[320.50228882 -287.85049438]
[335.37326050 -289.86032104]
[350.34817505 -290.82791138]
[365.35412598 -290.74853516]
[380.31799316 -289.62258911]
[395.16683960 -287.45556641]
[409.82836914 -284.25799561]
[424.23110962 -280.04547119]
[438.30493164 -274.83853149]
[451.98126221 -268.66253662]
[465.19345093 -261.54754639]
[477.87713623 -253.52825928]
[489.97052002 -244.64373779]
[501.41467285 -234.93727112]
[512.15386963 -224.45613098]
[522.13580322 -213.25138855]
[531.31176758 -201.37762451]
[539.63714600 -188.89271545]
[547.07128906 -175.85746765]
[553.57806396 -162.33537292]
[559.12573242 -148.39234924]
[563.68725586 -134.09628296]
[567.24041748 -119.51686096]
[569.76788330 -104.72509003]
[571.25744629 -89.79303741]
[571.70166016 -74.79345703]
[571.09857178 -59.79942703]
[569.45092773 -44.88399506]
[566.76690674 -30.11982727]
[563.05950928 -15.57885456]
[558.34680176 -1.33192015]
[552.65173340 12.55156612]
[546.00213623 26.00396538]
[538.43029785 38.95973587]
[529.97314453 51.35576248]
[520.67187500 63.13164520]
[510.57183838 74.23001862]
[499.72222900 84.59680939]
[488.17587280 94.18151855]
[475.98904419 102.93743896]
[463.22113037 110.82191467]
[449.93432617 117.79653168]
[436.19335938 123.82732391]
[422.06515503 128.88488770]
[407.61859131 132.94459534]
[392.92401123 135.98667908]
[378.05303955 137.99629211]
[363.07809448 138.96366882]
[348.07214355 138.88407898]
[333.10830688 137.75791931]
[318.25946045 135.59066772]
[303.59799194 132.39289856]
[289.19531250 128.18017578]
[275.12155151 122.97303009]
[261.44531250 116.79682159]
[248.23324585 109.68165588]
[235.54966736 101.66219330]
[223.45642090 92.77749634]
[212.01237488 83.07085419]
[201.27333069 72.58956146]
[191.29158020 61.38467789]
[182.11576843 49.51079178]
[169.63597107 57.83273697]
[157.15617371 66.15467834]
[144.67639160 74.47662354]
[132.58062744 83.34751892]
[120.89305115 92.74967194]
[109.20547485 102.15182495]
[107.47444153 107.10334015]
[103.09239197 110.73252106]
[97.02705383 111.65367889]
[85.06471252 120.70367432]
[73.10237885 129.75367737]
[61.14004135 138.80368042]
[49.38278961 148.11856079]
[37.83648682 157.69367981]
[26.29018593 167.26879883]
[14.74388409 176.84391785]
[23.43367958 189.07910156]
[31.18483353 201.92945862]
[37.95400238 215.32313538]
[43.70332336 229.18522644]
[48.40065002 243.43820190]
[52.01970673 258.00234985]
[54.54025650 272.79623413]
[55.94820404 287.73712158]
[56.23567581 302.74145508]
[55.40106583 317.72528076]
[53.44903564 332.60485840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 199]
[72 198]
[73 197]
[74 196]
[78 195]
[79 194]
[80 193]
[81 192]
[82 189]
[83 188]
[84 187]
[91 186]
[92 185]
[93 184]
[94 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
