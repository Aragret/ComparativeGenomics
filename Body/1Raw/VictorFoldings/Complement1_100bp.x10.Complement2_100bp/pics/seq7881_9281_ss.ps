%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[133.58270264 510.34640503]
[121.66184998 520.72271729]
[105.90132904 519.54730225]
[95.65159607 507.51736450]
[96.99362946 491.77017212]
[109.13122559 481.64819336]
[110.24687195 466.68975830]
[111.36252594 451.73129272]
[112.47817230 436.77282715]
[113.59381866 421.81439209]
[114.70947266 406.85592651]
[115.82511902 391.89746094]
[109.05586243 378.62997437]
[117.79814148 365.44351196]
[118.91378784 350.48504639]
[120.02943420 335.52661133]
[121.14508820 320.56814575]
[122.26073456 305.60968018]
[113.80013275 290.23486328]
[124.29405975 275.10348511]
[125.18687439 260.13006592]
[126.07968903 245.15666199]
[124.85271454 230.20693970]
[121.53045654 215.57946777]
[118.20819855 200.95201111]
[114.88594055 186.32455444]
[111.56368256 171.69709778]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[83.15756989 76.64199066]
[74.55900574 64.35115051]
[65.96044159 52.06031036]
[49.09849167 44.66056824]
[48.25944138 27.13165092]
[39.47883987 14.97019386]
[30.69823647 2.80873847]
[21.91763306 -9.35271740]
[13.13702965 -21.51417351]
[5.57635069 -26.63998604]
[4.31782293 -33.92269897]
[-4.28074121 -46.21353531]
[-12.87930489 -58.50437546]
[-21.56912994 -70.73085785]
[-30.34973335 -82.89231873]
[-39.13033676 -95.05377197]
[-52.01886368 -87.36122894]
[-65.52880096 -80.82128143]
[-79.55732727 -75.48369598]
[-93.99767303 -71.38909912]
[-108.73994446 -68.56865692]
[-123.67192841 -67.04383087]
[-138.67999268 -66.82622528]
[-153.64991760 -67.91750336]
[-168.46775818 -70.30934906]
[-183.02075195 -73.98356628]
[-197.19812012 -78.91219330]
[-210.89198303 -85.05771637]
[-223.99812317 -92.37335968]
[-236.41677856 -100.80344391]
[-248.05343628 -110.28382111]
[-258.81951904 -120.74233246]
[-268.63314819 -132.09938049]
[-277.41955566 -144.26853943]
[-285.11190796 -157.15716553]
[-291.65167236 -170.66720581]
[-296.98907471 -184.69580078]
[-301.08346558 -199.13619995]
[-303.90368652 -213.87850952]
[-305.42831421 -228.81051636]
[-305.64569092 -243.81858826]
[-304.55422974 -258.78848267]
[-302.16217041 -273.60629272]
[-298.48773193 -288.15924072]
[-293.55892944 -302.33654785]
[-287.41320801 -316.03033447]
[-280.09738159 -329.13635254]
[-271.66711426 -341.55490112]
[-262.18658447 -353.19140625]
[-251.72790527 -363.95736694]
[-240.37072754 -373.77081299]
[-228.20144653 -382.55706787]
[-215.31271362 -390.24923706]
[-201.80258179 -396.78881836]
[-187.77391052 -402.12600708]
[-173.33345032 -406.22018433]
[-158.59109497 -409.04022217]
[-143.65907288 -410.56463623]
[-128.65100098 -410.78182983]
[-113.68110657 -409.69012451]
[-98.86333466 -407.29785156]
[-84.31044769 -403.62322998]
[-70.13320923 -398.69421387]
[-56.43951797 -392.54830933]
[-43.33359146 -385.23229980]
[-30.91517258 -376.80184937]
[-19.27878189 -367.32113647]
[-8.51297474 -356.86233521]
[1.30031049 -345.50500488]
[10.08638763 -333.33560181]
[17.77838707 -320.44677734]
[24.31777000 -306.93655396]
[29.65476418 -292.90780640]
[33.74875259 -278.46728516]
[36.56857681 -263.72488403]
[38.09277344 -248.79284668]
[38.30974579 -233.78477478]
[37.21783829 -218.81489563]
[34.82536697 -203.99714661]
[31.15053749 -189.44432068]
[26.22131538 -175.26715088]
[20.07522011 -161.57354736]
[12.75902462 -148.46771240]
[4.32841206 -136.04942322]
[-5.15245485 -124.41316223]
[-15.61141872 -113.64749908]
[-26.96887970 -103.83437347]
[-18.18827629 -91.67292023]
[-9.40767384 -79.51145935]
[-2.94358444 -75.92854309]
[-0.58846718 -67.10293579]
[8.01009655 -54.81209946]
[16.60866165 -42.52126312]
[25.29848480 -30.29477692]
[34.07909012 -18.13331985]
[42.85969162 -5.97186470]
[51.64029312 6.18959093]
[60.42089844 18.35104752]
[72.30884552 20.58784103]
[79.72364044 30.64789009]
[78.25128174 43.46174622]
[86.84984589 55.75258636]
[95.44840240 68.04342651]
[93.22581482 53.20899963]
[94.71137238 38.28274536]
[99.81424713 24.17740250]
[108.22238159 11.75551891]
[119.42163086 1.77669835]
[132.72714233 -5.14885092]
[147.32530212 -8.59762859]
[162.32339478 -8.35874081]
[176.80430603 -4.44679546]
[189.88250732 2.89899015]
[200.75827026 13.22941875]
[208.76654053 25.91278076]
[213.41760254 40.17348099]
[214.42703247 55.13948059]
[211.73312378 69.89559174]
[205.50061035 83.53948212]
[196.11059570 95.23681641]
[184.13728333 104.27229309]
[170.31286621 110.09340668]
[155.48269653 112.34417725]
[140.55363464 110.88697815]
[126.43862915 105.81091309]
[114.00079346 97.42639160]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[126.09519196 156.84216309]
[127.85617065 161.13777161]
[127.75074768 165.21257019]
[126.19113922 168.37483215]
[129.51339722 183.00228882]
[132.83566284 197.62976074]
[136.15791321 212.25721741]
[139.48017883 226.88467407]
[143.26924133 212.37112427]
[151.11680603 199.58770752]
[162.34396362 189.64031982]
[175.97947693 183.38948059]
[190.84371948 181.37599182]
[205.65080261 183.77400208]
[219.11975098 190.37608337]
[230.08535767 200.61108398]
[237.59901428 213.59358215]
[241.01069641 228.20043945]
[240.02526855 243.16802979]
[234.72796631 257.20150757]
[225.57707214 269.08685303]
[213.36422729 277.79583740]
[199.14596558 282.57504272]
[184.15229797 283.01104736]
[169.68034363 279.06613159]
[156.98205566 271.08154297]
[147.15597534 259.74804688]
[141.05310059 246.04948425]
[140.16027832 261.02288818]
[139.26747131 275.99630737]
[147.22941589 286.14370728]
[146.17753601 298.59671021]
[137.21919250 306.72534180]
[136.10353088 321.68380737]
[134.98788452 336.64224243]
[133.87223816 351.60070801]
[132.75659180 366.55914307]
[139.44604492 380.89657593]
[130.78356934 393.01312256]
[129.66792297 407.97158813]
[128.55227661 422.93002319]
[127.43662262 437.88848877]
[126.32097626 452.84692383]
[125.20532990 467.80538940]
[124.08967590 482.76385498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[20 195]
[21 194]
[22 193]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[28 165]
[29 164]
[30 163]
[31 162]
[33 160]
[34 136]
[35 135]
[36 134]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[44 126]
[45 125]
[46 124]
[47 122]
[48 121]
[49 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
