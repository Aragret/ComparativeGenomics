%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[3.69222546 573.16937256]
[-1.35986280 587.33679199]
[-8.86063862 600.37432861]
[-18.56898308 611.86297607]
[-30.17281532 621.43328857]
[-43.29911423 628.77764893]
[-57.52593231 633.66003418]
[-72.39592743 635.92340088]
[-87.43109894 635.49505615]
[-102.14812469 632.38879395]
[-116.07390594 626.70440674]
[-128.76080322 618.62463379]
[-139.80096436 608.40924072]
[-148.83950806 596.38659668]
[-155.58587646 582.94311523]
[-159.82321167 568.51104736]
[-161.41529846 553.55426025]
[-160.31094360 538.55358887]
[-156.54565430 523.99127197]
[-150.24047852 510.33532715]
[-141.59809875 498.02478027]
[-130.89631653 487.45541382]
[-118.47916412 478.96694946]
[-104.74580383 472.83224487]
[-90.13769531 469.24853516]
[-75.12443542 468.33099365]
[-60.18864441 470.10913086]
[-55.78764343 455.76928711]
[-51.38664627 441.42944336]
[-46.98564911 427.08959961]
[-42.58465195 412.74975586]
[-43.90473938 409.48022461]
[-43.70679855 405.40887451]
[-41.63120651 401.25613403]
[-37.65369797 397.87582397]
[-32.61678314 383.74679565]
[-35.63107300 369.16040039]
[-23.70901489 358.75967407]
[-18.67209816 344.63064575]
[-13.63518238 330.50161743]
[-16.64947128 315.91519165]
[-4.72741508 305.51446533]
[-7.74170446 290.92807007]
[4.18035269 280.52734375]
[0.09313373 263.46093750]
[14.21933460 251.64859009]
[19.04533195 237.44613647]
[23.87133026 223.24366760]
[28.69732857 209.04121399]
[17.32607841 218.82357788]
[3.10105896 223.58265686]
[-11.86753273 222.61247253]
[-25.35919571 216.05694580]
[-35.37252045 204.88853455]
[-40.42209244 190.76402283]
[-39.75883484 175.77868652]
[-33.48114014 162.15553284]
[-22.52026558 151.91545105]
[-8.50219250 146.57749939]
[6.49358130 146.93354797]
[20.24252129 152.93077087]
[30.70505714 163.67950439]
[36.32912827 177.58525085]
[36.28081894 192.58329773]
[43.94141388 179.68698120]
[51.60201263 166.79064941]
[51.44972992 151.89682007]
[65.14974976 143.98353577]
[72.81034851 131.08721924]
[80.47094727 118.19088745]
[88.13154602 105.29456329]
[95.40476990 92.17586517]
[102.28418732 78.84643555]
[109.16359711 65.51701355]
[115.94358826 52.13673782]
[115.16178894 36.33485794]
[127.75748444 28.38516617]
[134.43768311 14.95479012]
[141.11787415 1.52441430]
[147.79806519 -11.90596199]
[154.47827148 -25.33633804]
[161.15846252 -38.76671219]
[167.23229980 -52.48197937]
[172.68765259 -66.45478058]
[178.14300537 -80.42757416]
[183.59837341 -94.40037537]
[189.05372620 -108.37316895]
[194.40490723 -122.38619232]
[194.47488403 -131.52035522]
[199.83576965 -136.60784912]
[197.64730835 -152.27697754]
[209.48355103 -161.31869507]
[209.68949890 -170.45080566]
[215.12554932 -175.45793152]
[220.78833008 -189.34794617]
[207.73664856 -196.78491211]
[195.76736450 -205.86189270]
[185.08531189 -216.42356873]
[175.87327576 -228.28919983]
[168.28886414 -241.25576782]
[162.46188354 -255.10137939]
[158.49201965 -269.58914185]
[156.44720459 -284.47113037]
[156.36244202 -299.49270630]
[158.23916626 -314.39685059]
[162.04527283 -328.92846680]
[167.71563721 -342.83898926]
[175.15322876 -355.89031982]
[184.23077393 -367.85916138]
[194.79295349 -378.54071045]
[206.65902710 -387.75219727]
[219.62594604 -395.33596802]
[233.47184753 -401.16229248]
[247.95979309 -405.13146973]
[262.84188843 -407.17556763]
[277.86346436 -407.25961304]
[292.76751709 -405.38220215]
[307.29895020 -401.57537842]
[321.20919800 -395.90435791]
[334.26016235 -388.46615601]
[346.22857666 -379.38803101]
[356.90963745 -368.82534790]
[366.12054443 -356.95883179]
[373.70370483 -343.99154663]
[379.52938843 -330.14538574]
[383.49786377 -315.65725708]
[385.54125977 -300.77505493]
[385.62460327 -285.75347900]
[383.74645996 -270.84951782]
[379.93896484 -256.31823730]
[374.26727295 -242.40827942]
[366.82843018 -229.35765076]
[357.74975586 -217.38967896]
[347.18655396 -206.70913696]
[335.31961060 -197.49879456]
[322.35195923 -189.91624451]
[308.50552368 -184.09123230]
[294.01718140 -180.12342834]
[279.13488770 -178.08074951]
[264.11331177 -177.99812317]
[249.20945740 -179.87698364]
[234.67835999 -183.68516541]
[229.01556396 -169.79513550]
[223.45634460 -155.86334229]
[226.03500366 -141.19364929]
[213.80856323 -131.15249634]
[208.45738220 -117.13947296]
[209.06268311 -109.77365112]
[203.02651978 -102.91781616]
[197.57116699 -88.94501495]
[192.11581421 -74.97222137]
[186.66044617 -60.99942017]
[181.20509338 -47.02662277]
[195.34190369 -52.04167175]
[208.94302368 -45.71638107]
[214.21713257 -31.67416763]
[208.14297485 -17.95904541]
[194.20010376 -12.42766190]
[180.37562561 -18.24864388]
[174.58883667 -32.08651733]
[167.90864563 -18.65614319]
[161.22845459 -5.22576714]
[154.54824829 8.20460892]
[147.86805725 21.63498497]
[141.18786621 35.06536102]
[142.44747925 49.90660858]
[129.37396240 58.81693268]
[129.20968628 66.20575714]
[122.49302673 72.39642334]
[115.61361694 85.72585297]
[108.73419952 99.05528259]
[109.41149139 102.02694702]
[109.02249146 105.31072235]
[107.44950104 108.51215363]
[104.72222137 111.19882202]
[101.02787018 112.95516205]
[93.36727142 125.85148621]
[85.70667267 138.74781799]
[78.04607391 151.64413452]
[77.65042114 167.46040344]
[64.49833679 174.45124817]
[56.83774185 187.34757996]
[49.17714310 200.24389648]
[42.89978409 213.86721802]
[38.07378387 228.06967163]
[33.24778748 242.27212524]
[28.42179108 256.47457886]
[33.41241455 268.36813354]
[29.10044479 280.09802246]
[18.30938148 285.56423950]
[20.96339798 301.16125488]
[9.40161419 310.55139160]
[12.05562973 326.14840698]
[0.49384701 335.53851318]
[-4.54306936 349.66754150]
[-9.57998562 363.79660034]
[-6.92597008 379.39358521]
[-18.48775291 388.78372192]
[-23.52466965 402.91275024]
[-28.24480438 417.15072632]
[-32.64580154 431.49060059]
[-37.04679871 445.83044434]
[-41.44779587 460.17028809]
[-45.84879684 474.51013184]
[-32.48695755 481.41671753]
[-20.57320213 490.59835815]
[-10.49050522 501.75985718]
[-2.56298280 514.54241943]
[2.95452714 528.53515625]
[5.88465929 543.28826904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[35 199]
[36 198]
[38 196]
[39 195]
[40 194]
[42 192]
[44 190]
[46 187]
[47 186]
[48 185]
[49 184]
[64 183]
[65 182]
[66 181]
[68 179]
[69 178]
[70 177]
[71 176]
[72 171]
[73 170]
[74 169]
[75 167]
[77 165]
[78 164]
[79 163]
[80 162]
[81 161]
[82 160]
[83 153]
[84 152]
[85 151]
[86 150]
[87 149]
[88 147]
[90 146]
[92 144]
[94 143]
[95 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
