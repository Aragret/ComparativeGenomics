%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[103.65340424 526.88067627]
[91.65623474 536.03106689]
[77.69918823 541.76373291]
[62.73387146 543.68768311]
[47.78065109 541.67187500]
[33.85905838 535.85363770]
[21.91829491 526.62976074]
[12.77249908 514.62902832]
[7.04524612 500.66976929]
[5.12703085 485.70373535]
[7.14863968 470.75128174]
[12.97223663 456.83193970]
[22.20075798 444.89474487]
[34.20499039 435.75357056]
[48.16646194 430.03170776]
[63.13325882 428.11926270]
[65.13726807 413.25375366]
[67.14128876 398.38821411]
[69.14530182 383.52270508]
[71.14931488 368.65716553]
[72.48754883 353.71697998]
[73.15733337 338.73193359]
[73.82711792 323.74688721]
[74.49690247 308.76187134]
[75.16668701 293.77682495]
[62.50432205 301.81823730]
[48.27341080 297.07681274]
[42.96445084 283.04772949]
[50.49101257 270.07272339]
[65.30479431 267.71649170]
[76.48498535 277.71441650]
[78.26744843 262.82067871]
[72.09736633 249.26416016]
[81.41973114 236.48120117]
[83.20220184 221.58749390]
[84.98466492 206.69377136]
[86.76713562 191.80004883]
[88.54959869 176.90634155]
[89.77657318 161.95660400]
[90.44635773 146.97155762]
[83.28507996 133.91149902]
[91.63087463 120.47058105]
[92.30065918 105.48554230]
[89.72917938 100.91372681]
[89.90224457 95.22660828]
[93.22005463 90.06626892]
[86.53060150 75.72885132]
[95.19307709 63.61230087]
[96.30872345 48.65385056]
[97.42437744 33.69539642]
[98.54002380 18.73694229]
[99.65567017 3.77848864]
[100.77132416 -11.17996502]
[101.88697052 -26.13841820]
[86.00568390 -32.93355942]
[73.42445374 -44.73398972]
[65.64938354 -60.10393143]
[63.60330963 -77.18172455]
[67.51628113 -93.90530396]
[76.89984894 -108.26117706]
[90.60796356 -118.52685547]
[106.97693634 -123.47753143]
[107.42353821 -138.47088623]
[100.10055542 -152.49530029]
[108.21336365 -164.98655701]
[108.65996552 -179.97991943]
[109.10657501 -194.97326660]
[93.65657043 -198.44708252]
[79.17732239 -204.84855652]
[66.21757507 -213.93313599]
[55.26811981 -225.35469055]
[46.74320602 -238.67857361]
[40.96485901 -253.39822388]
[38.15073013 -268.95443726]
[38.40589523 -284.75659180]
[41.71892548 -300.20501709]
[47.96238708 -314.71389771]
[56.89775467 -327.73333740]
[68.18451691 -338.77020264]
[81.39313507 -347.40701294]
[96.02142334 -353.31741333]
[111.51361847 -356.27874756]
[111.51361847 -371.27874756]
[111.51361847 -386.27874756]
[103.77632141 -400.07891846]
[111.51361847 -412.80621338]
[111.51361847 -427.80621338]
[111.51361847 -442.80621338]
[111.51361847 -457.80621338]
[101.93893433 -473.53536987]
[111.29965973 -488.37936401]
[111.07633209 -503.37768555]
[110.85300446 -518.37603760]
[110.62967682 -533.37438965]
[96.03093719 -537.21875000]
[83.01134491 -544.86029053]
[72.53703308 -555.73187256]
[65.38527679 -569.02679443]
[62.08678055 -583.75848389]
[62.88631439 -598.83374023]
[67.72454071 -613.13385010]
[76.24243927 -625.59771729]
[87.80792999 -635.30041504]
[101.56275940 -641.52191162]
[116.48624420 -643.80053711]
[131.47096252 -641.96728516]
[145.40493774 -636.15802002]
[157.25416565 -626.80401611]
[166.13938904 -614.59930420]
[171.40124512 -600.44952393]
[172.64927673 -585.40478516]
[169.79084778 -570.58142090]
[163.03810120 -557.07940674]
[152.89213562 -545.90081787]
[140.10581970 -537.87506104]
[125.62801361 -533.59771729]
[125.85134125 -518.59936523]
[126.07466888 -503.60101318]
[126.29799652 -488.60269165]
[134.75663757 -479.95526123]
[135.06544495 -467.46173096]
[126.51361847 -457.80621338]
[126.51361847 -442.80621338]
[126.51361847 -427.80621338]
[126.51361847 -412.80621338]
[134.25091553 -400.07891846]
[126.51361847 -386.27874756]
[126.51361847 -371.27874756]
[126.51361847 -356.27874756]
[140.49053955 -353.74728394]
[153.81333923 -348.81094360]
[166.07153320 -341.62051392]
[176.88722229 -332.39617920]
[185.92672729 -321.42089844]
[192.91085815 -309.03167725]
[197.62356567 -295.60919189]
[199.91865540 -281.56613159]
[199.72424316 -267.33453369]
[197.04504395 -253.35238647]
[191.96231079 -240.05027771]
[184.63130188 -227.83805847]
[175.27658081 -217.09220886]
[164.18510437 -208.14430237]
[151.69744873 -201.27069092]
[138.19735718 -196.68403625]
[124.09992218 -194.52665710]
[123.65332031 -179.53330994]
[123.20671082 -164.53996277]
[130.56164551 -151.58796692]
[122.41689301 -138.02427673]
[121.97028351 -123.03092194]
[134.21907043 -119.10974121]
[145.04554749 -112.14245605]
[153.70701599 -102.59873962]
[159.60710144 -91.12526703]
[162.33689880 -78.50194550]
[161.70326233 -65.58886719]
[157.74246216 -53.26774597]
[150.71815491 -42.38166428]
[141.10389709 -33.67742157]
[129.55122375 -27.75429344]
[116.84542084 -25.02276993]
[115.72977448 -10.06431580]
[114.61412811 4.89413738]
[113.49847412 19.85259056]
[112.38282776 34.81104279]
[111.26718140 49.76949692]
[110.15153503 64.72795105]
[116.92079163 77.99544525]
[108.17851257 91.18192291]
[107.28569794 106.15532684]
[106.61591339 121.14036560]
[113.72928619 135.27226257]
[105.43139648 147.64135742]
[104.76161194 162.62638855]
[117.42398071 154.58496094]
[131.65489197 159.32640076]
[136.96385193 173.35546875]
[129.43728638 186.33047485]
[114.62350464 188.68673706]
[103.44331360 178.68879700]
[101.66085052 193.58251953]
[99.87838745 208.47624207]
[98.09591675 223.36994934]
[96.31345367 238.26367188]
[102.35604095 252.88549805]
[93.16117096 264.60314941]
[91.37870026 279.49688721]
[90.15172577 294.44659424]
[89.48194122 309.43164062]
[88.81215668 324.41668701]
[88.14237213 339.40173340]
[87.47258759 354.38674927]
[99.24423981 345.09008789]
[114.15725708 346.70312500]
[123.66878510 358.30187988]
[122.33019257 373.24200439]
[110.90828705 382.96517944]
[95.94604492 381.90148926]
[86.01483917 370.66116333]
[84.01082611 385.52670288]
[82.00681305 400.39224243]
[80.00279999 415.25775146]
[77.99878693 430.12329102]
[91.92486572 435.93075562]
[103.87274933 445.14544678]
[113.02780914 457.13906860]
[118.76583862 471.09390259]
[120.69561768 486.05850220]
[118.68555450 501.01248169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[31 188]
[32 187]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[39 175]
[40 174]
[42 172]
[43 171]
[46 170]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[62 151]
[63 150]
[65 148]
[66 147]
[67 146]
[82 129]
[83 128]
[84 127]
[86 125]
[87 124]
[88 123]
[89 122]
[91 119]
[92 118]
[93 117]
[94 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
