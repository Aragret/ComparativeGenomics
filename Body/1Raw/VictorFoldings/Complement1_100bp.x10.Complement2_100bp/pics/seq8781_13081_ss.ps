%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[46.57213211 699.48571777]
[32.30133438 704.12438965]
[17.74993706 707.78906250]
[2.98433661 710.46301270]
[-11.92809582 712.13403320]
[-26.91931725 712.79449463]
[-41.92092514 712.44140625]
[-56.86447144 711.07635498]
[-71.68177032 708.70556641]
[-86.30521393 705.33990479]
[-100.66808319 700.99462891]
[-114.70482635 695.68969727]
[-128.35142517 689.44921875]
[-141.54557800 682.30169678]
[-154.22711182 674.27972412]
[-166.33815002 665.41992188]
[-177.82342529 655.76275635]
[-188.63053894 645.35223389]
[-198.71020508 634.23583984]
[-208.01638794 622.46435547]
[-216.50665283 610.09149170]
[-224.14225769 597.17364502]
[-230.88835144 583.76983643]
[-236.71417236 569.94110107]
[-241.59310913 555.75067139]
[-245.50292969 541.26324463]
[-248.42578125 526.54486084]
[-250.34832764 511.66278076]
[-251.26179504 496.68484497]
[-251.16201782 481.67941284]
[-250.04945374 466.71493530]
[-247.92916870 451.85971069]
[-244.81085205 437.18154907]
[-240.70872498 422.74737549]
[-235.64151001 408.62304688]
[-229.63232422 394.87304688]
[-222.70857239 381.56008911]
[-214.90187073 368.74493408]
[-206.24781799 356.48605347]
[-196.78590393 344.83935547]
[-186.55932617 333.85803223]
[-175.61471558 323.59213257]
[-164.00202942 314.08853149]
[-151.77424622 305.39059448]
[-138.98716736 297.53796387]
[-125.69912720 290.56652832]
[-111.97075653 284.50808716]
[-97.86470032 279.39025879]
[-83.44532776 275.23638916]
[-68.77841949 272.06549072]
[-53.93090057 269.89193726]
[-38.97052383 268.72573853]
[-23.96554756 268.57217407]
[-8.98443413 269.43191528]
[5.90445900 271.30108643]
[20.63319588 274.17114258]
[35.13457489 278.02902222]
[39.96057129 263.82653809]
[44.78656769 249.62409973]
[49.61256790 235.42164612]
[54.43856430 221.21917725]
[58.94619370 206.91249084]
[63.13320541 192.50871277]
[67.32021332 178.10493469]
[63.44307327 163.72380066]
[74.72492981 152.63189697]
[78.91194153 138.22811890]
[77.68159485 135.70930481]
[77.37483978 132.55137634]
[78.24011993 129.10366821]
[80.39492798 125.79892731]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[107.10718536 57.72857666]
[112.14410400 43.59954834]
[104.35815430 27.93435287]
[110.19577789 11.80248928]
[125.58537292 5.02022409]
[130.41137695 -9.18223095]
[126.40636444 -27.15558434]
[140.04518127 -38.19865799]
[144.65919495 -52.47139359]
[149.27320862 -66.74412537]
[151.27722168 -81.60965729]
[150.60743713 -96.59469604]
[149.93765259 -111.57973480]
[149.26785278 -126.56477356]
[148.59806824 -141.54980469]
[147.81675720 -156.52944946]
[146.92393494 -171.50285339]
[146.03112793 -186.47625732]
[145.13830566 -201.44966125]
[130.60371399 -205.75329590]
[118.41943359 -214.77102661]
[110.05678558 -227.41387939]
[106.52560425 -242.15521240]
[108.25228882 -257.21490479]
[115.02834320 -270.77444458]
[126.03551483 -281.19644165]
[139.94464111 -287.22238159]
[155.07611084 -288.12463379]
[169.60275269 -283.79418945]
[181.77040100 -274.75405884]
[190.10972595 -262.09579468]
[193.61373901 -247.34799194]
[191.85929871 -232.29150391]
[185.05827332 -218.74447632]
[174.03192139 -208.34278870]
[160.11170959 -202.34248352]
[161.00453186 -187.36907959]
[161.89733887 -172.39567566]
[162.79016113 -157.42225647]
[166.32621765 -150.93241882]
[163.58311462 -142.21958923]
[164.25289917 -127.23455811]
[164.92268372 -112.24951935]
[165.59246826 -97.26448059]
[166.26225281 -82.27944183]
[172.31101990 -96.00578308]
[181.42987061 -107.91571808]
[193.10310364 -117.33567047]
[206.67053223 -123.73291016]
[221.36486816 -126.74562836]
[236.35507202 -126.20345306]
[250.79336548 -122.13703918]
[263.86318970 -114.77636719]
[274.82540894 -104.53771210]
[283.06002808 -92.00012970]
[288.10134888 -77.87266541]
[289.66424561 -62.95431137]
[287.66036987 -48.08876801]
[282.20300293 -34.11674881]
[273.60083008 -21.82844734]
[262.34030151 -11.91881943]
[249.05828857 -4.94830608]
[234.50593567 -1.31112361]
[219.50625610 -1.21297157]
[204.90756226 -4.65940142]
[191.53546143 -11.45550060]
[180.14622498 -21.21691704]
[171.38395691 -33.39159393]
[165.74421692 -47.29099655]
[163.54592896 -62.13011551]
[158.93193054 -47.85738373]
[154.31791687 -33.58465195]
[159.54464722 -22.67558098]
[155.81745911 -10.74697018]
[144.61383057 -4.35623360]
[139.78782654 9.84622192]
[147.04435730 20.49386215]
[146.84022522 33.57210541]
[139.02592468 44.30276871]
[126.27313232 48.63646317]
[121.23621368 62.76549149]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[93.31571960 142.41513062]
[89.12870789 156.81890869]
[92.70637512 172.23030090]
[81.72399902 182.29194641]
[77.53698730 196.69572449]
[73.34997559 211.09950256]
[74.59604645 216.16847229]
[73.84796143 220.75035095]
[71.62518311 224.16712952]
[68.64102173 226.04518127]
[63.81502151 240.24763489]
[58.98902512 254.45008850]
[54.16302872 268.65255737]
[49.33702850 282.85501099]
[63.18667603 288.63082886]
[76.61479950 295.32849121]
[89.56012726 302.91738892]
[101.96359253 311.36291504]
[113.76860809 320.62652588]
[124.92130280 330.66598511]
[135.37078857 341.43542480]
[145.06939697 352.88574219]
[153.97285461 364.96472168]
[162.04055786 377.61718750]
[169.23568726 390.78546143]
[175.52540588 404.40942383]
[180.88101196 418.42691040]
[185.27809143 432.77398682]
[188.69656372 447.38519287]
[191.12084961 462.19381714]
[192.53985596 477.13235474]
[192.94712830 492.13259888]
[192.34080505 507.12609863]
[190.72364807 522.04443359]
[188.10305786 536.81964111]
[184.49096680 551.38415527]
[179.90385437 565.67163086]
[174.36267090 579.61682129]
[167.89268494 593.15606689]
[160.52342224 606.22772217]
[152.28851318 618.77197266]
[143.22550964 630.73168945]
[133.37579346 642.05230713]
[122.78429413 652.68212891]
[111.49934387 662.57269287]
[99.57241821 671.67877197]
[87.05795288 679.95898438]
[74.01304626 687.37536621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 176]
[58 175]
[59 174]
[60 173]
[61 172]
[62 168]
[63 167]
[64 166]
[66 164]
[67 163]
[72 162]
[73 161]
[75 159]
[76 158]
[77 157]
[78 156]
[81 152]
[82 151]
[84 148]
[85 147]
[86 146]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
