%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[0.39046276 801.85424805]
[-14.16590691 805.49169922]
[-28.90333176 808.30725098]
[-43.77544022 810.29205322]
[-58.73544312 811.43981934]
[-73.73626709 811.74700928]
[-88.73071289 811.21252441]
[-103.67160034 809.83819580]
[-118.51193237 807.62829590]
[-133.20500183 804.58978271]
[-147.70457458 800.73211670]
[-161.96505737 796.06762695]
[-175.94154358 790.61077881]
[-189.59008789 784.37890625]
[-202.86773682 777.39154053]
[-215.73269653 769.67071533]
[-228.14451599 761.24066162]
[-240.06413269 752.12792969]
[-251.45404053 742.36114502]
[-262.27838135 731.97119141]
[-272.50314331 720.99060059]
[-282.09613037 709.45391846]
[-291.02716064 697.39758301]
[-299.26812744 684.85943604]
[-306.79312134 671.87890625]
[-313.57843018 658.49688721]
[-319.60275269 644.75549316]
[-324.84707642 630.69787598]
[-329.29495239 616.36834717]
[-332.93237305 601.81195068]
[-335.74786377 587.07452393]
[-337.73260498 572.20239258]
[-338.88034058 557.24243164]
[-339.18743896 542.24157715]
[-338.65295410 527.24713135]
[-337.27856445 512.30627441]
[-335.06860352 497.46594238]
[-332.02999878 482.77285767]
[-328.17233276 468.27331543]
[-323.50772095 454.01284790]
[-318.05087280 440.03637695]
[-311.81893921 426.38784790]
[-304.83151245 413.11022949]
[-297.11062622 400.24530029]
[-288.68051147 387.83352661]
[-279.56774902 375.91394043]
[-269.80096436 364.52407837]
[-259.41091919 353.69973755]
[-248.43029785 343.47503662]
[-236.89363098 333.88208008]
[-224.83723450 324.95111084]
[-212.29904175 316.71017456]
[-199.31851196 309.18524170]
[-185.93646240 302.39999390]
[-172.19502258 296.37573242]
[-158.13740540 291.13143921]
[-143.80786133 286.68362427]
[-129.25146484 283.04626465]
[-114.51401520 280.23080444]
[-99.64189148 278.24612427]
[-84.68187714 277.09844971]
[-69.68105316 276.79141235]
[-54.68661118 277.32595825]
[-39.74572754 278.70037842]
[-24.90541840 280.91043091]
[-10.21237183 283.94906616]
[4.28718090 287.80679321]
[18.54761887 292.47143555]
[24.00297546 278.49865723]
[29.45833206 264.52584839]
[34.91368866 250.55305481]
[40.36904526 236.58026123]
[28.76914978 225.78356934]
[22.18461418 211.32698059]
[21.65061188 195.41189575]
[27.27847290 180.47433472]
[38.23411179 168.81201172]
[52.86150360 162.23098755]
[68.93296814 161.76594543]
[74.17968750 147.71347046]
[79.42640686 133.66101074]
[76.62962341 119.03133392]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[91.43128204 61.49916077]
[85.21154022 47.70213699]
[84.74922180 32.61572266]
[90.08364105 18.53980064]
[100.37280273 7.60828876]
[114.02612305 1.46563208]
[128.95027161 1.01947856]
[134.19699097 -13.03299236]
[139.44371033 -27.08546448]
[144.69042969 -41.13793564]
[142.26892090 -56.77273178]
[153.96923828 -65.98967743]
[159.21594238 -80.04215240]
[146.18705750 -87.54534149]
[134.57095337 -97.09080505]
[124.68450928 -108.41812897]
[116.79746246 -121.21829224]
[111.12495422 -135.14210510]
[107.82175446 -149.80970764]
[106.97795868 -164.82096863]
[108.61660004 -179.76635742]
[112.69296265 -194.23815918]
[119.09585571 -207.84158325]
[127.65058899 -220.20549011]
[138.12379456 -230.99261475]
[150.22975159 -239.90864563]
[163.63818359 -246.71037292]
[177.98333740 -251.21223450]
[192.87382507 -253.29139709]
[207.90345764 -252.89117432]
[222.66220093 -250.02244568]
[236.74740601 -244.76350403]
[249.77485657 -237.25779724]
[261.38912964 -227.71009827]
[271.27337646 -216.38087463]
[279.15795898 -203.57919312]
[284.82778931 -189.65428162]
[288.12817383 -174.98603821]
[288.96908569 -159.97462463]
[287.32754517 -145.02954102]
[283.24838257 -130.55853271]
[276.84289551 -116.95634460]
[268.28576660 -104.59407806]
[257.81048584 -93.80898285]
[245.70281982 -84.89527893]
[232.29306030 -78.09613800]
[217.94705200 -73.59704590]
[203.05615234 -71.52073669]
[188.02661133 -71.92386627]
[173.26841736 -74.79543304]
[168.02169800 -60.74296188]
[170.81848145 -46.11328888]
[158.74290466 -35.89121628]
[153.49618530 -21.83874512]
[148.24946594 -7.78627443]
[143.00274658 6.26619673]
[153.98265076 16.38404846]
[160.26936340 29.97164154]
[160.87661743 44.97151184]
[155.68078613 59.09917068]
[145.44436646 70.19104004]
[131.70437622 76.53577423]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[105.17918396 129.69078064]
[93.47888184 138.90773010]
[88.23216248 152.96018982]
[82.98544312 167.01266479]
[93.68556976 176.41258240]
[100.52011108 188.87413025]
[102.68596649 202.89062500]
[99.94313049 216.77528381]
[92.64107513 228.86421204]
[81.67437744 237.71582031]
[68.37317657 242.28271484]
[54.34184265 242.03561401]
[48.88648605 256.00842285]
[43.43112946 269.98120117]
[37.97577286 283.95401001]
[32.52041626 297.92678833]
[46.16900253 304.15859985]
[59.44669724 311.14584351]
[72.31172180 318.86660767]
[84.72360229 327.29656982]
[96.64328003 336.40921021]
[108.03326416 346.17587280]
[118.85769653 356.56579590]
[129.08253479 367.54632568]
[138.67559814 379.08285522]
[147.60671997 391.13916016]
[155.84777832 403.67724609]
[163.37286377 416.65771484]
[170.15827942 430.03967285]
[176.18269348 443.78106689]
[181.42713928 457.83862305]
[185.87512207 472.16812134]
[189.51263428 486.72448730]
[192.32824707 501.46188354]
[194.31309509 516.33398438]
[195.46093750 531.29400635]
[195.76814270 546.29479980]
[195.23377991 561.28924561]
[193.85949707 576.23016357]
[191.64964294 591.07049561]
[188.61114502 605.76354980]
[184.75358582 620.26318359]
[180.08909607 634.52368164]
[174.63233948 648.50018311]
[168.40051270 662.14874268]
[161.41319275 675.42639160]
[153.69238281 688.29138184]
[145.26237488 700.70324707]
[136.14968872 712.62286377]
[126.38300323 724.01281738]
[115.99303436 734.83721924]
[105.01248169 745.06201172]
[93.47589111 754.65502930]
[81.41956329 763.58612061]
[68.88143158 771.82714844]
[55.90095139 779.35217285]
[42.51895523 786.13757324]
[28.77755165 792.16192627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[79 156]
[80 155]
[81 154]
[83 152]
[85 150]
[86 149]
[93 142]
[94 141]
[95 140]
[96 139]
[98 137]
[99 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
