%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[57.64939880 655.36224365]
[43.80399323 661.15692139]
[29.51703644 665.75659180]
[14.89146805 669.12799072]
[0.03267020 671.24694824]
[-14.95229912 672.09814453]
[-29.95547104 671.67547607]
[-44.86874390 669.98193359]
[-59.58467102 667.02972412]
[-73.99721527 662.84014893]
[-88.00253296 657.44342041]
[-101.49971771 650.87835693]
[-114.39152527 643.19232178]
[-126.58505249 634.44067383]
[-137.99246216 624.68646240]
[-148.53153992 613.99993896]
[-158.12637329 602.45812988]
[-166.70780945 590.14422607]
[-174.21403503 577.14691162]
[-180.59095764 563.55981445]
[-185.79263306 549.48089600]
[-189.78158569 535.01153564]
[-192.52906799 520.25598145]
[-194.01528931 505.32064819]
[-194.22953796 490.31304932]
[-193.17027283 475.34133911]
[-190.84510803 460.51342773]
[-187.27082825 445.93609619]
[-182.47317505 431.71441650]
[-176.48670959 417.95083618]
[-169.35456848 404.74453735]
[-161.12814331 392.19067383]
[-151.86668396 380.37966919]
[-141.63696289 369.39666748]
[-130.51264954 359.32077026]
[-118.57391357 350.22460938]
[-105.90677643 342.17367554]
[-92.60249329 335.22601318]
[-78.75694275 329.43167114]
[-64.46986389 324.83239746]
[-49.84420776 321.46133423]
[-34.98535538 319.34277344]
[-20.00036430 318.49194336]
[-4.99720383 318.91503906]
[9.91602707 320.60897827]
[24.63187599 323.56152344]
[28.81888580 309.15774536]
[33.00589752 294.75396729]
[37.19290924 280.35018921]
[28.06804276 270.60446167]
[24.92510414 257.51760864]
[28.68903160 244.48294067]
[38.47943115 234.93482971]
[51.81372452 231.44377136]
[56.21472549 217.10392761]
[60.61572266 202.76408386]
[65.01671600 188.42424011]
[69.41771698 174.08439636]
[73.81871796 159.74453735]
[78.21971130 145.40469360]
[82.62071228 131.06484985]
[87.02171326 116.72499847]
[79.79343414 106.31319427]
[79.80866241 93.63828278]
[87.06192017 83.24387360]
[98.95312500 78.85607147]
[103.56713867 64.58333588]
[108.18114471 50.31060410]
[112.79515839 36.03787231]
[111.70056152 30.93405533]
[112.58473206 26.37647629]
[114.90824890 23.02739906]
[117.94701385 21.23902702]
[123.19373322 7.18655586]
[128.44044495 -6.86591530]
[133.68716431 -20.91838646]
[119.16518402 -17.16179848]
[107.08271027 -26.05077934]
[106.34651184 -41.03270340]
[117.49926758 -51.06344986]
[132.31959534 -48.74872971]
[139.88235474 -35.79651642]
[146.15971375 -49.41983032]
[152.43707275 -63.04314804]
[158.71443176 -76.66646576]
[164.99179077 -90.28977966]
[151.98641968 -97.78480530]
[139.71649170 -106.43144226]
[128.28370667 -116.15802002]
[117.78276825 -126.88394928]
[108.30070496 -138.52035522]
[99.91609955 -150.97079468]
[92.69842529 -164.13212585]
[86.70749664 -177.89526367]
[81.99294281 -192.14616394]
[78.59384155 -206.76673889]
[76.53836060 -221.63584900]
[75.84352875 -236.63026428]
[76.51509857 -251.62573242]
[78.54751587 -266.49801636]
[81.92393494 -281.12384033]
[86.61637115 -295.38204956]
[92.58595276 -309.15444946]
[99.78320312 -322.32696533]
[108.14848328 -334.79040527]
[117.61248016 -346.44149780]
[128.09677124 -357.18368530]
[139.51446533 -366.92800903]
[151.77096558 -375.59365845]
[164.76469421 -383.10885620]
[178.38798523 -389.41131592]
[192.52796936 -394.44882202]
[207.06744385 -398.17962646]
[221.88594055 -400.57278442]
[236.86067200 -401.60855103]
[251.86753845 -401.27825928]
[266.78219604 -399.58465576]
[281.48104858 -396.54180908]
[295.84231567 -392.17492676]
[309.74694824 -386.52017212]
[323.07974243 -379.62445068]
[335.73025513 -371.54483032]
[347.59362793 -362.34832764]
[358.57153320 -352.11111450]
[368.57305908 -340.91802979]
[377.51525879 -328.86181641]
[385.32409668 -316.04238892]
[391.93481445 -302.56597900]
[397.29266357 -288.54428101]
[401.35324097 -274.09341431]
[404.08288574 -259.33319092]
[405.45898438 -244.38591003]
[405.47015381 -229.37539673]
[404.11627197 -214.42608643]
[401.40859985 -199.66180420]
[397.36950684 -185.20494080]
[392.03253174 -171.17526245]
[385.44186401 -157.68904114]
[377.65209961 -144.85801697]
[368.72781372 -132.78852844]
[358.74298096 -121.58058167]
[347.78030396 -111.32704926]
[335.93063354 -102.11289978]
[323.29217529 -94.01448822]
[309.96963501 -87.09891510]
[296.07339478 -81.42349243]
[281.71865845 -77.03524780]
[267.02435303 -73.97055054]
[252.11222839 -72.25478363]
[237.10586548 -71.90216827]
[222.12960815 -72.91563416]
[207.30757141 -75.28678131]
[192.76255798 -78.99594879]
[178.61511230 -84.01242065]
[172.33775330 -70.38909912]
[166.06039429 -56.76578522]
[159.78303528 -43.14247131]
[153.50567627 -29.51915359]
[147.73963928 -15.67166805]
[142.49291992 -1.61919701]
[137.24620056 12.43327427]
[131.99948120 26.48574638]
[127.06788635 40.65188217]
[122.45388031 54.92461395]
[117.83987427 69.19734955]
[113.22586060 83.47007751]
[121.07401276 97.98815155]
[116.11454773 113.72890472]
[101.36155701 121.12599945]
[96.96055603 135.46585083]
[92.55956268 149.80569458]
[88.15856171 164.14553833]
[83.75756836 178.48538208]
[79.35656738 192.82524109]
[74.95556641 207.16508484]
[70.55457306 221.50492859]
[66.15357208 235.84477234]
[76.50135040 249.22459412]
[76.83186340 265.96951294]
[67.21290588 279.47644043]
[51.59669113 284.53720093]
[47.40967941 298.94097900]
[43.22266769 313.34475708]
[39.03565598 327.74853516]
[53.04111481 333.14492798]
[66.53847504 339.70962524]
[79.43047333 347.39532471]
[91.62422943 356.14669800]
[103.03188324 365.90063477]
[113.57124329 376.58685303]
[123.16636658 388.12841797]
[131.74812317 400.44210815]
[139.25468445 413.43923950]
[145.63195801 427.02615356]
[150.83399963 441.10494995]
[154.82333374 455.57421875]
[157.57119751 470.32965088]
[159.05780029 485.26498413]
[159.27243042 500.27255249]
[158.21354675 515.24426270]
[155.88877869 530.07226562]
[152.31488037 544.64971924]
[147.51759338 558.87152100]
[141.53147888 572.63525391]
[134.39967346 585.84173584]
[126.17356873 598.39581299]
[116.91242981 610.20703125]
[106.68298340 621.19030762]
[95.55892944 631.26647949]
[83.62042999 640.36297607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 184]
[47 183]
[48 182]
[49 181]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
[66 166]
[67 165]
[68 164]
[69 163]
[73 162]
[74 161]
[75 160]
[76 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
