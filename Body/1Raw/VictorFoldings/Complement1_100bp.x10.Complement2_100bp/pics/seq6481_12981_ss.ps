%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[93.97792816 573.24468994]
[83.44433594 583.96386719]
[71.43071747 592.99328613]
[58.20547104 600.13122559]
[44.06404495 605.21826172]
[29.32236671 608.14068604]
[14.30977154 608.83325195]
[-0.63835490 607.28045654]
[-15.18806553 603.51702881]
[-29.01431465 597.62695312]
[-41.80821609 589.74194336]
[-53.28395462 580.03808594]
[-63.18515396 568.73211670]
[-71.29061890 556.07672119]
[-77.41927338 542.35461426]
[-81.43419647 527.87225342]
[-83.24568939 512.95330811]
[-82.81329346 497.93093872]
[-80.14665985 483.14083862]
[-75.30537415 468.91342163]
[-68.39757538 455.56652832]
[-59.57759476 443.39828491]
[-49.04247665 432.68060303]
[-37.02757645 423.65289307]
[-23.80130959 416.51681519]
[-9.65915966 411.43179321]
[5.08293390 408.51147461]
[20.09562874 407.82104492]
[35.04353333 409.37597656]
[38.79983521 394.85391235]
[42.55613327 380.33184814]
[46.31243515 365.80981445]
[49.74349594 351.20748901]
[52.84760666 336.53216553]
[55.95171738 321.85687256]
[59.05582809 307.18157959]
[54.11980057 293.12863159]
[64.54543304 281.22836304]
[67.64954376 266.55303955]
[62.71352005 252.50012207]
[73.13915253 240.59983826]
[75.58487701 225.80056763]
[77.36734772 210.90684509]
[79.14981079 196.01313782]
[80.93227386 181.11941528]
[82.71474457 166.22569275]
[80.51952362 161.98422241]
[80.96546173 156.31871033]
[84.77842712 150.91751099]
[87.00354767 136.08348083]
[89.22866058 121.24942780]
[91.45378113 106.41538239]
[92.01199341 91.42577362]
[83.26971436 78.23930359]
[90.03897095 64.97180939]
[88.92332458 50.01335526]
[87.80767059 35.05490112]
[86.69202423 20.09644699]
[85.57637787 5.13799334]
[70.23365021 3.28887630]
[55.54802704 -1.50774729]
[42.07991028 -9.06694031]
[30.34286308 -19.09838486]
[20.78404045 -31.21752739]
[13.76714611 -44.96033096]
[9.55860138 -59.80102539]
[8.31742573 -75.17224121]
[10.08922577 -90.48669434]
[14.80453014 -105.15960693]
[22.28150368 -118.63105774]
[32.23296738 -130.38735962]
[44.27741623 -139.98060608]
[57.95365524 -147.04577637]
[72.73845673 -151.31460571]
[71.40022278 -166.25479126]
[70.06198883 -181.19497681]
[68.72375488 -196.13516235]
[59.78611374 -209.19001770]
[66.35709381 -222.55682373]
[65.01885223 -237.49700928]
[56.08121872 -250.55186462]
[62.65219498 -263.91867065]
[51.17768478 -254.25762939]
[36.44089127 -257.05529785]
[29.30522728 -270.24932861]
[35.03084183 -284.11355591]
[49.39702225 -288.42782593]
[61.81271744 -280.01321411]
[61.58938980 -295.01156616]
[61.36606216 -310.00988770]
[51.55825424 -325.59475708]
[60.69693756 -340.57647705]
[60.25033188 -355.56982422]
[59.80372620 -370.56317139]
[59.35712051 -385.55651855]
[58.91051483 -400.54986572]
[58.46390915 -415.54321289]
[58.01730347 -430.53656006]
[44.05374908 -436.69952393]
[34.15356064 -448.31628418]
[30.28242302 -463.08032227]
[33.20895767 -478.06024170]
[42.35209656 -490.28176880]
[55.89646149 -497.31829834]
[71.15280914 -497.77276611]
[85.09198761 -491.55487061]
[94.94635773 -479.89920044]
[98.75932312 -465.12002563]
[95.77381897 -450.15176392]
[86.58262634 -437.96630859]
[73.01065063 -430.98318481]
[73.45726013 -415.98983765]
[73.90386200 -400.99649048]
[74.35047150 -386.00311279]
[74.79707336 -371.00976562]
[75.24368286 -356.01641846]
[75.69028473 -341.02307129]
[84.27674103 -332.50253296]
[84.77152252 -320.01498413]
[76.36440277 -310.23321533]
[76.58773041 -295.23489380]
[76.81105804 -280.23654175]
[77.59237671 -265.25689697]
[86.43429565 -253.27067566]
[79.95903778 -238.83525085]
[81.29727173 -223.89506531]
[90.13919067 -211.90882874]
[83.66394043 -197.47340393]
[85.00217438 -182.53321838]
[86.34040833 -167.59303284]
[87.67864227 -152.65284729]
[102.18528748 -151.23767090]
[116.18650055 -147.17172241]
[129.20205688 -140.59284973]
[140.78524780 -131.72515869]
[150.53822327 -120.87130737]
[158.12565613 -108.40222168]
[163.28622437 -94.74440002]
[165.84167480 -80.36533356]
[165.70292664 -65.75748444]
[162.87322998 -51.42145920]
[157.44804382 -37.84880829]
[149.61187744 -25.50519943]
[139.63198853 -14.81444263]
[127.84922791 -6.14392138]
[114.66648102 0.20802011]
[100.53482819 4.02234459]
[101.65048218 18.98079872]
[102.76612854 33.93925095]
[103.88177490 48.89770508]
[104.99742126 63.85615921]
[113.65990448 75.97270203]
[106.97044373 90.31012726]
[113.40338898 76.75958252]
[124.24671936 66.39511871]
[138.07382202 60.58035278]
[153.06547546 60.08032608]
[167.24929810 64.96081543]
[178.75915527 74.57971954]
[186.08071899 87.67149353]
[188.25073242 102.51370239]
[184.98365784 117.15358734]
[176.70936584 129.66502380]
[164.51647949 138.40193176]
[150.00917053 142.21478271]
[135.09613037 140.60197449]
[121.73941803 133.77566528]
[111.69635773 122.63400269]
[106.28782654 108.64050293]
[104.06270599 123.47454834]
[101.83759308 138.30859375]
[99.61247253 153.14263916]
[97.60845947 168.00816345]
[95.82599640 182.90188599]
[94.04352570 197.79559326]
[92.26106262 212.68931580]
[90.47859955 227.58303833]
[102.90909576 219.18763733]
[117.66083527 221.90539551]
[126.28334808 234.17944336]
[123.83726501 248.97865295]
[111.72381592 257.82537842]
[96.88213348 255.65177917]
[87.81445312 243.70394897]
[92.52845001 258.80654907]
[82.32484436 269.65716553]
[79.22073364 284.33245850]
[83.93473053 299.43508911]
[73.73113251 310.28567505]
[70.62702179 324.96099854]
[67.52291107 339.63629150]
[64.41880035 354.31158447]
[66.03842926 359.27383423]
[65.63320160 363.89868164]
[63.67071152 367.47131348]
[60.83449554 369.56610107]
[57.07819366 384.08816528]
[53.32189178 398.61022949]
[49.56559372 413.13229370]
[63.39268112 419.02035522]
[76.18770599 426.90356445]
[87.66482544 436.60580444]
[97.56763458 447.91030884]
[105.67490387 460.56454468]
[111.80551147 474.28582764]
[115.82249451 488.76757812]
[117.63611603 503.68630981]
[117.20585632 518.70874023]
[114.54133606 533.49920654]
[109.70206451 547.72729492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 199]
[30 198]
[31 197]
[32 196]
[33 192]
[34 191]
[35 190]
[36 189]
[38 187]
[39 186]
[41 184]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[49 172]
[50 171]
[51 170]
[52 169]
[53 153]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[74 131]
[75 130]
[76 129]
[77 128]
[79 126]
[80 125]
[82 123]
[88 122]
[89 121]
[90 120]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
