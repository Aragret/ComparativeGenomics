%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[26.17080116 912.19189453]
[11.18276215 912.85845947]
[-3.82001567 912.81109619]
[-18.80354691 912.04986572]
[-33.73388672 910.57659912]
[-48.57721329 908.39459229]
[-63.29990387 905.50878906]
[-77.86860657 901.92565918]
[-92.25032043 897.65344238]
[-106.41246033 892.70172119]
[-120.32294464 887.08178711]
[-133.95025635 880.80627441]
[-147.26354980 873.88952637]
[-160.23263550 866.34704590]
[-172.82815552 858.19610596]
[-185.02157593 849.45501709]
[-196.78524780 840.14367676]
[-208.09255981 830.28314209]
[-218.91787720 819.89569092]
[-229.23667908 809.00500488]
[-239.02558899 797.63562012]
[-248.26243591 785.81329346]
[-256.92626953 773.56494141]
[-264.99752808 760.91815186]
[-272.45785522 747.90167236]
[-279.29040527 734.54492188]
[-285.47964478 720.87823486]
[-291.01162720 706.93255615]
[-295.87374878 692.73937988]
[-300.05502319 678.33099365]
[-303.54598999 663.73992920]
[-306.33874512 648.99926758]
[-308.42694092 634.14245605]
[-309.80584717 619.20312500]
[-310.47235107 604.21508789]
[-310.42492676 589.21228027]
[-309.66369629 574.22875977]
[-308.19039917 559.29846191]
[-306.00836182 544.45513916]
[-303.12249756 529.73242188]
[-299.53936768 515.16375732]
[-295.26708984 500.78204346]
[-290.31536865 486.61990356]
[-284.69537354 472.70944214]
[-278.41986084 459.08212280]
[-271.50302124 445.76885986]
[-263.96057129 432.79977417]
[-255.80955505 420.20428467]
[-247.06846619 408.01089478]
[-237.75708008 396.24722290]
[-227.89651489 384.93994141]
[-217.50907898 374.11465454]
[-206.61833191 363.79589844]
[-195.24891663 354.00698853]
[-183.42662048 344.77017212]
[-171.17820740 336.10635376]
[-158.53141785 328.03515625]
[-145.51492310 320.57482910]
[-132.15817261 313.74234009]
[-118.49146271 307.55310059]
[-104.54573822 302.02117920]
[-90.35258484 297.15908813]
[-75.94416046 292.97781372]
[-61.35309982 289.48687744]
[-46.61246490 286.69418335]
[-31.75564003 284.60601807]
[-16.81628609 283.22714233]
[-1.82824421 282.56066895]
[13.17453384 282.60812378]
[28.15806007 283.36938477]
[43.08839417 284.84271240]
[57.93171310 287.02481079]
[60.81698608 272.30490112]
[63.70225906 257.58502197]
[57.12861252 241.31375122]
[69.34626770 227.53659058]
[72.01206207 212.77537537]
[74.67785645 198.01414490]
[77.34365082 183.25292969]
[71.99140930 169.35319519]
[82.05809784 157.14778137]
[84.72389221 142.38656616]
[87.38969421 127.62534332]
[90.05548859 112.86412811]
[84.00343323 102.91355133]
[86.15850830 91.46817017]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[93.36199188 54.64944458]
[103.40291595 43.64812469]
[106.28818512 28.92823219]
[101.34985352 13.89748096]
[111.39077759 2.89615822]
[114.27605438 -11.82373333]
[117.16132355 -26.54362488]
[120.04660034 -41.26351547]
[122.82221222 -56.00447845]
[125.48800659 -70.76569366]
[111.62783051 -76.66851044]
[99.42895508 -85.50792694]
[89.50328827 -96.84057617]
[82.34868622 -110.09799957]
[78.32402039 -124.61522675]
[77.63117218 -139.66406250]
[80.30488586 -154.48968506]
[86.21105957 -168.34843445]
[95.05343628 -180.54516602]
[106.38848114 -190.46807861]
[119.64764404 -197.61947632]
[134.16584778 -201.64062500]
[149.21485901 -202.32983398]
[164.03982544 -199.65251160]
[177.89714050 -193.74298096]
[190.09172058 -184.89765930]
[200.01190186 -173.56021118]
[207.16007996 -160.29931641]
[211.17770386 -145.78013611]
[211.86326599 -130.73095703]
[209.18235779 -115.90663910]
[203.26948547 -102.05075836]
[194.42118835 -89.85831451]
[183.08134460 -79.94088745]
[169.81871033 -72.79592133]
[155.29856873 -68.78181458]
[140.24922180 -68.09989929]
[137.58341980 -53.33868408]
[139.48815918 -46.19768906]
[134.76649475 -38.37824249]
[131.88121033 -23.65835190]
[128.99594116 -8.93846035]
[126.11067200 5.78143072]
[131.25537109 19.75931549]
[121.00807953 31.81350327]
[118.12280273 46.53339386]
[123.26750946 60.51128006]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[115.97894287 103.00871277]
[104.81670380 115.52992249]
[102.15090942 130.29113770]
[99.48511505 145.05235291]
[96.81932068 159.81356812]
[101.98088837 174.76913452]
[92.10486603 185.91873169]
[89.43907166 200.67994690]
[86.77327728 215.44116211]
[84.10748291 230.20237732]
[90.80718994 241.22402954]
[88.28295898 253.46379089]
[78.42214966 260.47030640]
[75.53687286 275.19018555]
[72.65160370 289.91009521]
[87.22032166 293.49310303]
[101.60205078 297.76525879]
[115.76421356 302.71691895]
[129.67472839 308.33682251]
[143.30207825 314.61224365]
[156.61538696 321.52896118]
[169.58451843 329.07135010]
[182.18006897 337.22225952]
[194.37351990 345.96328735]
[206.13725281 355.27459717]
[217.44459534 365.13507080]
[228.26995850 375.52243042]
[238.58880615 386.41311646]
[248.37777710 397.78247070]
[257.61465454 409.60470581]
[266.27856445 421.85305786]
[274.34988403 434.49978638]
[281.81027222 447.51623535]
[288.64288330 460.87292480]
[294.83218384 474.53961182]
[300.36422729 488.48529053]
[305.22640991 502.67840576]
[309.40774536 517.08679199]
[312.89880371 531.67785645]
[315.69158936 546.41845703]
[317.77984619 561.27526855]
[319.15884399 576.21459961]
[319.82540894 591.20263672]
[319.77804565 606.20544434]
[319.01690674 621.18896484]
[317.54367065 636.11932373]
[315.36169434 650.96264648]
[312.47589111 665.68536377]
[308.89285278 680.25402832]
[304.62063599 694.63574219]
[299.66894531 708.79791260]
[294.04904175 722.70843506]
[287.77355957 736.33575439]
[280.85681152 749.64904785]
[273.31442261 762.61816406]
[265.16345215 775.21368408]
[256.42242432 787.40710449]
[247.11108398 799.17083740]
[237.25056458 810.47814941]
[226.86318970 821.30352783]
[215.97247314 831.62231445]
[204.60311890 841.41125488]
[192.78085327 850.64813232]
[180.53248596 859.31201172]
[167.88572693 867.38330078]
[154.86926270 874.84362793]
[141.51255798 881.67620850]
[127.84587097 887.86547852]
[113.90016937 893.39752197]
[99.70703888 898.25964355]
[85.29862976 902.44097900]
[70.70758820 905.93194580]
[55.96696472 908.72473145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 152]
[73 151]
[74 150]
[76 147]
[77 146]
[78 145]
[79 144]
[81 142]
[82 141]
[83 140]
[84 139]
[87 137]
[88 136]
[90 134]
[91 133]
[93 131]
[94 130]
[95 129]
[96 128]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
