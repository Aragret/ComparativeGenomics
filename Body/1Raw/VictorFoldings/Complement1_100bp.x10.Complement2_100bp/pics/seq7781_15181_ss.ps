%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[99.41649628 438.29568481]
[104.51494598 424.14486694]
[112.05836487 411.13192749]
[121.80427551 399.67520142]
[133.43937683 390.14291382]
[146.58966064 382.84155273]
[141.76365662 368.63909912]
[136.93766785 354.43664551]
[123.13594055 343.59786987]
[126.87290192 325.56686401]
[115.31111908 316.17672729]
[117.96514130 300.57974243]
[112.92822266 286.45071411]
[107.89130402 272.32165527]
[103.62276459 286.70150757]
[92.80442047 297.09204102]
[78.26415253 300.77722168]
[63.80275726 296.79376221]
[53.20040512 286.18292236]
[49.22852707 271.71832275]
[52.92536163 257.18103027]
[63.32456970 246.37100220]
[77.70781708 242.11398315]
[92.31536102 245.52275085]
[103.32834625 255.70550537]
[100.44307709 240.98561096]
[97.55780029 226.26571655]
[94.67253113 211.54582214]
[91.78725433 196.82594299]
[88.90198517 182.10604858]
[84.57952881 196.46975708]
[76.08172607 208.83047485]
[64.21852875 218.01005554]
[50.12066269 223.13354492]
[35.13184357 223.71260071]
[20.68071365 219.69206238]
[8.14466000 211.45510864]
[-1.28145969 199.78684998]
[-6.69920731 185.79942322]
[-7.59219837 170.82603455]
[-3.87531781 156.29383850]
[4.09716415 143.58795166]
[15.56536198 133.91941833]
[29.43619919 128.20979309]
[44.38759613 127.00326538]
[58.99448395 130.41484070]
[71.86462402 138.11935425]
[81.77131653 149.38246155]
[87.77060699 163.13171387]
[77.88671112 152.04820251]
[78.80504608 136.86231995]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[87.85461426 57.97660065]
[96.51709747 45.86005402]
[85.82963562 56.38517380]
[71.01438904 58.73221970]
[57.59709167 52.02579880]
[50.58205414 38.76724625]
[52.58571243 23.90167046]
[62.86075592 12.97356415]
[77.57484436 10.05884075]
[91.23999023 16.24462128]
[98.75967407 29.22490311]
[101.64494324 14.50501060]
[96.70661163 -0.52573949]
[106.74753571 -11.52706242]
[109.63281250 -26.24695396]
[112.51808167 -40.96684647]
[115.40335846 -55.68673706]
[118.28862762 -70.40662384]
[116.51074982 -76.77456665]
[117.99315643 -82.26087189]
[121.48516846 -85.51891327]
[124.80743408 -100.14637756]
[123.65644073 -109.20800018]
[128.28958130 -114.96611023]
[131.82925415 -129.54248047]
[135.36892700 -144.11886597]
[138.90859985 -158.69523621]
[124.75260925 -163.69515991]
[111.17510223 -170.10157776]
[98.31539154 -177.84875488]
[86.30543518 -186.85720825]
[75.26848602 -197.03446960]
[65.31780243 -208.27612305]
[56.55548477 -220.46681213]
[49.07145691 -233.48143005]
[42.94250870 -247.18643188]
[38.23154068 -261.44116211]
[34.98689270 -276.09939575]
[33.24185944 -291.01065063]
[33.01435089 -306.02197266]
[34.30669785 -320.97927856]
[37.10564041 -335.72906494]
[41.38245392 -350.12002563]
[47.09325790 -364.00448608]
[54.17944336 -377.23992920]
[62.56829834 -389.69055176]
[72.17373657 -401.22860718]
[82.89719391 -411.73565674]
[94.62863159 -421.10394287]
[107.24765778 -429.23727417]
[120.62478638 -436.05221558]
[134.62274170 -441.47882080]
[149.09790039 -445.46142578]
[163.90168762 -447.95913696]
[178.88223267 -448.94635010]
[193.88577271 -448.41293335]
[208.75837708 -446.36431885]
[223.34741211 -442.82159424]
[237.50317383 -437.82104492]
[251.08039856 -431.41403198]
[263.93975830 -423.66629028]
[275.94934082 -414.65731812]
[286.98583984 -404.47955322]
[296.93600464 -393.23745728]
[305.69781494 -381.04638672]
[313.18124390 -368.03143311]
[319.30960083 -354.32617188]
[324.01992798 -340.07119751]
[327.26394653 -325.41284180]
[329.00833130 -310.50149536]
[329.23516846 -295.49020386]
[327.94216919 -280.53295898]
[325.14257812 -265.78326416]
[320.86511230 -251.39248657]
[315.15371704 -237.50830078]
[308.06695557 -224.27316284]
[299.67755127 -211.82290649]
[290.07159424 -200.28527832]
[279.34768677 -189.77868652]
[267.61581421 -180.41093445]
[254.99644470 -172.27815247]
[241.61900330 -165.46380615]
[227.62081909 -160.03779602]
[213.14549255 -156.05583191]
[198.34158325 -153.55876160]
[183.36100769 -152.57221985]
[168.35748291 -153.10630798]
[153.48497009 -155.15556335]
[149.94529724 -140.57919312]
[146.40562439 -126.00281525]
[142.86595154 -111.42643738]
[139.43489075 -96.82411957]
[136.11262512 -82.19665527]
[133.00851440 -67.52135468]
[130.12324524 -52.80146408]
[127.23797607 -38.08157349]
[124.35270691 -23.36168098]
[121.46743011 -8.64178944]
[126.61213684 5.33609581]
[116.36483765 17.39028358]
[113.47956085 32.11017609]
[111.47554779 46.97570419]
[118.24481201 60.24319839]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[115.49225616 139.59857178]
[114.14774323 154.75267029]
[102.72905731 164.24736023]
[103.62187195 179.22077942]
[106.50714874 193.94065857]
[109.39241791 208.66055298]
[112.27769470 223.38044739]
[115.16296387 238.10034180]
[118.04824066 252.82023621]
[122.02033234 267.28475952]
[127.05725098 281.41378784]
[132.09416199 295.54281616]
[144.01622009 305.94354248]
[141.00193787 320.52993774]
[152.29946899 326.75317383]
[156.20385742 338.62496948]
[151.14012146 349.61065674]
[155.96611023 363.81311035]
[160.79211426 378.01556396]
[175.66835022 375.79351807]
[190.70227051 376.26364136]
[205.41059875 379.41082764]
[219.32052612 385.13391113]
[231.98490906 393.24893188]
[242.99662781 403.49499512]
[252.00170898 415.54272461]
[258.71069336 429.00488281]
[262.90786743 443.44866943]
[264.45837402 458.40982056]
[263.31231689 473.40737915]
[259.50656128 487.95919800]
[253.16342163 501.59756470]
[244.48684692 513.88397217]
[233.75572205 524.42358398]
[221.31503296 532.87750244]
[207.56466675 538.97399902]
[192.94664001 542.51708984]
[177.93089294 543.39288330]
[163.00010681 541.57324219]
[148.63423157 537.11657715]
[135.29507446 530.16625977]
[123.41144562 520.94567871]
[113.36534882 509.75125122]
[105.47972107 496.94281006]
[100.00805664 482.93206787]
[97.12624359 468.16943359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 183]
[7 182]
[8 181]
[10 178]
[12 176]
[13 175]
[14 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[49 167]
[52 164]
[53 163]
[55 161]
[56 160]
[58 158]
[67 157]
[68 156]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[77 149]
[78 148]
[80 147]
[81 146]
[82 145]
[83 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
