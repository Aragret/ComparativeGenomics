%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[20.70091820 496.85098267]
[18.90212440 511.76666260]
[15.08899784 526.29846191]
[9.33257103 540.17572021]
[1.74008405 553.13983154]
[-7.54701948 564.94927979]
[-18.35572624 575.38409424]
[-30.48467827 584.24987793]
[-43.70792007 591.38146973]
[-57.77910995 596.64605713]
[-72.43611145 599.94543457]
[-87.40586853 601.21826172]
[-102.40950775 600.44079590]
[-117.16752625 597.62744141]
[-131.40498352 592.83074951]
[-144.85664368 586.13995361]
[-157.27191162 577.67974854]
[-168.41950989 567.60778809]
[-178.09173584 556.11163330]
[-186.10844421 543.40545654]
[-192.32025146 529.72601318]
[-196.61145020 515.32812500]
[-198.90211487 500.48001099]
[-199.14953613 485.45825195]
[-197.34912109 470.54275513]
[-193.53442383 456.01135254]
[-187.77650452 442.13476562]
[-180.18260193 429.17147827]
[-170.89422607 417.36300659]
[-160.08439636 406.92935181]
[-147.95448303 398.06488037]
[-134.73046875 390.93472290]
[-120.65870667 385.67169189]
[-106.00135040 382.37387085]
[-91.03145599 381.10266113]
[-76.02789307 381.88180542]
[-61.27018738 384.69671631]
[-47.03324890 389.49496460]
[-40.35305405 376.06460571]
[-33.67285919 362.63421631]
[-26.99266624 349.20385742]
[-20.31247139 335.77346802]
[-13.63227654 322.34310913]
[-17.18292046 310.77938843]
[-11.72745514 299.53564453]
[0.30022806 294.87756348]
[6.57758856 281.25424194]
[12.24037552 267.36422729]
[17.90316200 253.47419739]
[23.56594849 239.58416748]
[29.22873497 225.69415283]
[34.89152145 211.80412292]
[40.55430984 197.91409302]
[40.16857529 190.53350830]
[46.40619278 183.86042786]
[52.27515411 170.05625916]
[58.14411163 156.25207520]
[45.26144028 163.93562317]
[30.26467896 164.24723816]
[17.07394409 157.10549927]
[9.13726139 144.37722778]
[8.52926254 129.38955688]
[15.40887737 116.06022644]
[27.97778893 107.87349701]
[42.95051575 106.96936798]
[56.41322327 113.58416748]
[64.84678650 125.98880005]
[66.04685974 140.93984985]
[73.89861298 128.15901184]
[81.75037384 115.37817383]
[89.60212708 102.59732819]
[95.57369232 88.83722687]
[99.54578400 74.37270355]
[103.51788330 59.90817642]
[107.48997498 45.44365311]
[111.46207428 30.97912979]
[115.43417358 16.51460457]
[119.40626526 2.05008125]
[115.59954834 -13.30633354]
[126.43090057 -23.53037643]
[130.40299988 -37.99489975]
[121.47349548 -53.03761292]
[126.09511566 -69.55897522]
[140.93763733 -77.46707916]
[144.69393921 -91.98914337]
[148.45024109 -106.51119995]
[152.20654297 -121.03325653]
[146.87583923 -138.65895081]
[159.65553284 -150.68585205]
[155.39328003 -165.92211914]
[165.91543579 -176.46411133]
[169.45510864 -191.04049683]
[172.99478149 -205.61686707]
[176.53445435 -220.19323730]
[168.57475281 -233.58282471]
[172.37213135 -248.31491089]
[185.18609619 -255.82075500]
[188.72576904 -270.39712524]
[175.07325745 -276.72918701]
[162.91856384 -285.60327148]
[152.72889709 -296.67834473]
[144.89590454 -309.52865601]
[139.72070312 -323.66030884]
[137.40217590 -338.53009033]
[138.02944946 -353.56646729]
[141.57843018 -368.19149780]
[147.91268921 -381.84298706]
[156.78875732 -393.99624634]
[167.86546326 -404.18411255]
[180.71704102 -412.01501465]
[194.84953308 -417.18795776]
[209.71969604 -419.50405884]
[224.75598145 -418.87435913]
[239.38041687 -415.32299805]
[253.03088379 -408.98654175]
[265.18270874 -400.10848999]
[275.36877441 -389.03015137]
[283.19760132 -376.17727661]
[288.36825562 -362.04397583]
[290.68194580 -347.17343140]
[290.04980469 -332.13726807]
[286.49609375 -317.51339722]
[280.15740967 -303.86395264]
[271.27740479 -291.71356201]
[260.19741821 -281.52926636]
[247.34329224 -273.70254517]
[233.20913696 -268.53417969]
[218.33822632 -266.22286987]
[203.30215454 -266.85745239]
[199.76248169 -252.28108215]
[207.70695496 -239.73434448]
[204.32487488 -224.90139771]
[191.11082458 -216.65356445]
[187.57115173 -202.07719421]
[184.03147888 -187.50082397]
[180.49180603 -172.92443848]
[185.00723267 -158.73077393]
[174.23190308 -147.14617920]
[180.25555420 -136.65606689]
[177.42588806 -124.48328400]
[166.72860718 -117.27696228]
[162.97230530 -102.75489807]
[159.21600342 -88.23284149]
[155.45970154 -73.71077728]
[163.48806763 -63.63234711]
[164.25721741 -50.57514572]
[157.26266479 -39.29300308]
[144.86752319 -34.02280426]
[140.89543152 -19.55827904]
[144.98625183 -5.23646402]
[133.87078857 6.02217722]
[129.89869690 20.48670197]
[125.92659760 34.95122528]
[121.95450592 49.41574860]
[117.98240662 63.88027191]
[114.01030731 78.34479523]
[110.03821564 92.80931854]
[120.22663116 81.80040741]
[133.17713928 74.23177338]
[147.76940918 70.75819397]
[162.74104309 71.68015289]
[176.79685974 76.91790771]
[188.72088623 86.01832581]
[197.48158264 98.19413757]
[202.32102966 112.39201355]
[202.82060242 127.38368988]
[198.93707275 141.87223816]
[191.00639343 154.60426331]
[179.71466064 164.47831726]
[166.03872681 170.64016724]
[151.16166687 172.55679321]
[136.37052917 170.06236267]
[122.94488525 163.37266541]
[112.04618073 153.06645203]
[104.61726379 140.03529358]
[101.30081177 125.40650940]
[102.38297272 110.44908142]
[94.53121185 123.22992706]
[86.67945862 136.01077271]
[78.82770538 148.79161072]
[71.94828796 162.12103271]
[66.07933044 175.92521667]
[60.21036911 189.72940063]
[54.44433594 203.57687378]
[48.78154755 217.46690369]
[43.11876297 231.35693359]
[37.45597458 245.24696350]
[31.79318810 259.13699341]
[26.13040161 273.02700806]
[20.46761513 286.91705322]
[34.67752075 282.11303711]
[48.18296814 288.64010620]
[53.24742508 302.75930786]
[46.96973801 316.38247681]
[32.94605255 321.70565796]
[19.20977211 315.67947388]
[13.62965775 301.75698853]
[14.92416573 320.12557983]
[-0.20190023 329.02328491]
[-6.88209486 342.45367432]
[-13.56228924 355.88403320]
[-20.24248505 369.31442261]
[-26.92267799 382.74478149]
[-33.60287476 396.17517090]
[-21.18668747 404.63400269]
[-10.03800583 414.70480347]
[-0.36452267 426.19989014]
[7.65355110 438.90518188]
[13.86684322 452.58395386]
[18.15960503 466.98138428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[46 197]
[47 190]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[55 183]
[56 182]
[57 181]
[68 180]
[69 179]
[70 178]
[71 177]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[80 149]
[81 148]
[84 144]
[85 143]
[86 142]
[87 141]
[89 138]
[91 136]
[92 135]
[93 134]
[94 133]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
