%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[101.61797333 257.13336182]
[99.17931366 271.94134521]
[95.61426544 286.51916504]
[90.94374847 300.78131104]
[85.19516754 314.64410400]
[78.40226746 328.02615356]
[70.60491180 340.84893799]
[61.84884644 353.03720093]
[52.18546677 364.51943970]
[41.67147827 375.22827148]
[30.36858749 385.10083008]
[18.34311676 394.07919312]
[5.66564274 402.11065674]
[-7.58943892 409.14807129]
[-21.34434128 415.15020752]
[-35.51834488 420.08178711]
[-50.02826691 423.91384888]
[-64.78895569 426.62396240]
[-79.71379852 428.19619751]
[-94.71520233 428.62133789]
[-109.70512390 427.89685059]
[-124.59561157 426.02703857]
[-139.29927063 423.02282715]
[-153.72981262 418.90188599]
[-167.80255127 413.68838501]
[-181.43490601 407.41290283]
[-194.54689026 400.11230469]
[-207.06152344 391.82940674]
[-218.90538025 382.61279297]
[-230.00897217 372.51660156]
[-240.30711365 361.60003662]
[-249.73937988 349.92721558]
[-258.25042725 337.56658936]
[-265.79028320 324.59072876]
[-272.31469727 311.07574463]
[-277.78543091 297.10098267]
[-282.17034912 282.74844360]
[-285.44372559 268.10235596]
[-287.58630371 253.24867249]
[-288.58557129 238.27456665]
[-288.43566895 223.26788330]
[-287.13742065 208.31672668]
[-284.69848633 193.50880432]
[-281.13314819 178.93104553]
[-276.46237183 164.66897583]
[-270.71353149 150.80630493]
[-263.92037964 137.42439270]
[-256.12277222 124.60174561]
[-247.36647034 112.41363525]
[-237.70288086 100.93157959]
[-227.18869019 90.22296143]
[-215.88560486 80.35061646]
[-203.85997009 71.37248993]
[-191.18234253 63.34127045]
[-177.92712402 56.30408096]
[-164.17210388 50.30222321]
[-149.99801636 45.37092209]
[-135.48802185 41.53911209]
[-120.72727203 38.82928085]
[-105.80240631 37.25733185]
[-90.80099487 36.83248901]
[-75.81108093 37.55724716]
[-60.92063141 39.42734909]
[-46.21703339 42.43182755]
[-31.78656769 46.55304718]
[-17.71392250 51.76681900]
[-4.08168411 58.04254913]
[9.03014946 65.34341431]
[21.54463196 73.62655640]
[33.38832092 82.84337616]
[44.49171066 92.93978119]
[54.78964615 103.85652924]
[64.22168732 115.52954102]
[76.57620239 107.02272034]
[88.93070984 98.51589203]
[101.22154999 89.91732788]
[113.44802856 81.22750092]
[125.67451477 72.53767395]
[137.90100098 63.84785461]
[144.66712952 49.54644775]
[159.52349854 48.47993088]
[171.74998474 39.79010773]
[163.75717163 27.09231377]
[156.48890686 13.96633434]
[149.96804810 0.45346957]
[144.21513367 -13.40376472]
[139.24824524 -27.56176949]
[135.08300781 -41.97599792]
[131.73255920 -56.60109329]
[129.20741272 -71.39104462]
[127.51551056 -86.29931641]
[126.66219330 -101.27899933]
[126.65013885 -116.28295898]
[127.47937775 -131.26399231]
[129.14730835 -146.17497253]
[131.64868164 -160.96896362]
[134.97563171 -175.59942627]
[139.11769104 -190.02032471]
[144.06181335 -204.18629456]
[149.79244995 -218.05274963]
[156.29158020 -231.57608032]
[163.53874207 -244.71372986]
[171.51113892 -257.42434692]
[180.18368530 -269.66796875]
[189.52909851 -281.40603638]
[199.51797485 -292.60162354]
[210.11886597 -303.21954346]
[221.29844666 -313.22634888]
[233.02151489 -322.59057617]
[245.25120544 -331.28274536]
[257.94903564 -339.27551270]
[271.07504272 -346.54373169]
[284.58792114 -353.06451416]
[298.44515991 -358.81738281]
[312.60321045 -363.78424072]
[327.01742554 -367.94940186]
[341.64254761 -371.29980469]
[356.43249512 -373.82489014]
[371.34078979 -375.51675415]
[386.32046509 -376.36999512]
[401.32443237 -376.38201904]
[416.30548096 -375.55270386]
[431.21643066 -373.88473511]
[446.01040649 -371.38330078]
[460.64086914 -368.05627441]
[475.06173706 -363.91418457]
[489.22769165 -358.97000122]
[503.09414673 -353.23931885]
[516.61743164 -346.74014282]
[529.75506592 -339.49291992]
[542.46563721 -331.52047729]
[554.70922852 -322.84786987]
[566.44726562 -313.50244141]
[577.64282227 -303.51351929]
[588.26068115 -292.91256714]
[598.26745605 -281.73297119]
[607.63165283 -270.00985718]
[616.32379150 -257.78015137]
[624.31646729 -245.08229065]
[631.58465576 -231.95625305]
[638.10540771 -218.44334412]
[643.85821533 -204.58607483]
[648.82501221 -190.42802429]
[652.99011230 -176.01376343]
[656.34045410 -161.38864136]
[658.86553955 -146.59867859]
[660.55731201 -131.69039917]
[661.41052246 -116.71070862]
[661.42248535 -101.70674133]
[660.59313965 -86.72571564]
[658.92504883 -71.81475830]
[656.42358398 -57.02078247]
[653.09649658 -42.39034653]
[648.95434570 -27.96947289]
[644.01013184 -13.80354118]
[638.27935791 0.06287865]
[631.78015137 13.58615780]
[624.53289795 26.72374725]
[616.56042480 39.43431091]
[607.88775635 51.67785645]
[598.54229736 63.41585922]
[588.55334473 74.61138916]
[577.95233154 85.22921753]
[566.77270508 95.23594666]
[555.04956055 104.60007477]
[542.81982422 113.29215240]
[530.12194824 121.28482819]
[516.99584961 128.55294800]
[503.48291016 135.07365417]
[489.62561035 140.82641602]
[475.46755981 145.79315186]
[461.05328369 149.95820618]
[446.42816162 153.30850220]
[431.63818359 155.83349609]
[416.72988892 157.52522278]
[401.75018311 158.37837219]
[386.74624634 158.39025879]
[371.76519775 157.56085205]
[356.85424805 155.89276123]
[342.06030273 153.39122009]
[327.42987061 150.06410217]
[313.00900269 145.92189026]
[298.84310913 140.97760010]
[284.97668457 135.24681091]
[271.45343018 128.74752808]
[258.31588745 121.50022125]
[245.60534668 113.52768707]
[233.36183167 104.85500336]
[221.62387085 95.50946045]
[210.42837524 85.52046967]
[199.81057739 74.91945648]
[189.80389404 63.73976898]
[180.43980408 52.01659012]
[168.21331787 60.70641708]
[162.32171631 74.38626862]
[146.59082031 76.07434082]
[134.36434937 84.76416016]
[122.13785553 93.45398712]
[109.91136932 102.14381409]
[105.68780518 109.00923157]
[97.43753815 110.87039948]
[85.08302307 119.37722778]
[72.72851562 127.88405609]
[80.26862335 140.85978699]
[86.79331970 154.37463379]
[92.26431274 168.34928894]
[96.64949036 182.70173645]
[99.92313385 197.34776306]
[102.06601715 212.20141602]
[103.06557465 227.17550659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 203]
[74 202]
[75 201]
[76 199]
[77 198]
[78 197]
[79 196]
[81 194]
[82 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
