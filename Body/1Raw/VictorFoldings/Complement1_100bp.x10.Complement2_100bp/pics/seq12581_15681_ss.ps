%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-0.89089841 372.47024536]
[6.92737722 385.33334351]
[11.99596310 399.50704956]
[14.10730267 414.41098022]
[13.17493916 429.43481445]
[9.23705196 443.96334839]
[2.45489383 457.40161133]
[-6.89380836 469.19937134]
[-18.42623138 478.87344360]
[-31.67013168 486.02774048]
[-46.08317947 490.36929321]
[-61.07516479 491.72030640]
[-76.03218079 490.02542114]
[-90.34174347 485.35412598]
[-103.41789246 477.89761353]
[-114.72515869 467.96130371]
[-123.80051422 455.95202637]
[-130.27233887 442.36157227]
[-133.87561035 427.74645996]
[-134.46278381 412.70516968]
[-132.00981140 397.85363770]
[-126.61712646 383.80004883]
[-118.50557709 371.11984253]
[-108.00731659 360.33227539]
[-95.55223846 351.87911987]
[-81.65037537 346.10650635]
[-66.87100220 343.25082397]
[-51.81931686 343.42898560]
[-37.11168671 346.63375854]
[-31.03785133 332.91848755]
[-24.96401787 319.20321655]
[-18.89018440 305.48794556]
[-12.81634998 291.77267456]
[-26.41752434 298.09786987]
[-41.16064835 295.33377075]
[-51.54689789 284.51129150]
[-53.70246506 269.66699219]
[-46.82336807 256.33740234]
[-33.47534561 249.49412537]
[-18.63687897 251.68954468]
[-7.84234905 262.10482788]
[-5.11799717 276.85647583]
[2.54260039 263.96017456]
[10.20319748 251.06382751]
[17.86379433 238.16751099]
[18.57717323 230.81135559]
[25.73567009 225.13740540]
[33.58742523 212.35656738]
[41.43918228 199.57572937]
[49.29093552 186.79487610]
[56.56416702 173.67619324]
[63.24436188 160.24580383]
[69.92455292 146.81542969]
[76.40405273 133.28709412]
[82.68141174 119.66377258]
[88.95877075 106.04045868]
[94.93033600 92.28034973]
[100.59312439 78.39032745]
[106.25591278 64.50029755]
[111.91869354 50.61027145]
[117.58148193 36.72024536]
[123.24427032 22.83021927]
[126.67533112 8.22789574]
[127.79097748 -6.73055744]
[119.41269684 -23.12829781]
[129.85153198 -37.23494339]
[130.74435425 -52.20834732]
[120.53176880 -63.97019196]
[121.65051270 -79.14263153]
[132.92657471 -88.80628967]
[133.81938171 -103.77969360]
[134.71220398 -118.75309753]
[135.60501099 -133.72650146]
[136.49783325 -148.69990540]
[122.84940338 -152.40122986]
[110.19671631 -158.70542908]
[99.03043365 -167.36576843]
[89.78313446 -178.04418945]
[82.81253815 -190.32452393]
[78.38769531 -203.72863770]
[76.67859650 -217.73518372]
[77.74962616 -231.79971313]
[81.55715942 -245.37599182]
[87.95130920 -257.93710327]
[96.68186188 -268.99600220]
[107.40804291 -278.12423706]
[119.71182251 -284.96878052]
[133.11419678 -289.26544189]
[147.09387207 -290.84924316]
[140.61862183 -305.28466797]
[149.46054077 -317.27090454]
[150.79878235 -332.21109009]
[152.13700867 -347.15127563]
[153.47525024 -362.09146118]
[154.81347656 -377.03164673]
[156.15171814 -391.97183228]
[157.48994446 -406.91201782]
[158.82818604 -421.85220337]
[144.76696777 -427.37115479]
[132.83105469 -436.62915039]
[123.98802185 -448.87567139]
[118.95474243 -463.11798096]
[118.13924408 -478.20147705]
[121.60762787 -492.90341187]
[129.07873535 -506.03198242]
[139.94689941 -516.52288818]
[153.33111572 -523.52569580]
[168.14636230 -526.47277832]
[183.19165039 -525.12512207]
[197.24731445 -519.59204102]
[209.17391968 -510.32202148]
[218.00463867 -498.06661987]
[223.02360535 -483.81927490]
[223.82395935 -468.73498535]
[220.34080505 -454.03652954]
[212.85652161 -440.91549683]
[201.97781372 -430.43548584]
[188.58656311 -423.44610596]
[173.76837158 -420.51394653]
[172.43013000 -405.57376099]
[171.09190369 -390.63357544]
[169.75366211 -375.69338989]
[168.41543579 -360.75320435]
[167.07719421 -345.81301880]
[165.73895264 -330.87283325]
[164.40072632 -315.93264771]
[170.97169495 -302.56585693]
[162.03405762 -289.51098633]
[177.20372009 -284.74624634]
[190.94807434 -276.73822021]
[202.58363342 -265.88168335]
[211.53102112 -252.71321106]
[217.34378052 -237.88449097]
[219.73072815 -222.13024902]
[218.57046509 -206.23176575]
[213.91760254 -190.97811890]
[206.00015259 -177.12705994]
[195.20838928 -165.36735535]
[182.07560730 -156.28453064]
[167.25173950 -150.33172607]
[151.47123718 -147.80709839]
[150.57843018 -132.83369446]
[149.68560791 -117.86028290]
[148.79278564 -102.88687897]
[147.89997864 -87.91347504]
[157.94779968 -76.97834778]
[157.25564575 -61.78046417]
[145.71775818 -51.31553268]
[144.82493591 -36.34212875]
[152.61698914 -27.08953094]
[151.99571228 -14.60763168]
[142.74943542 -5.61490870]
[141.63378906 9.34354496]
[149.37962341 -3.50176120]
[160.26591492 -13.82109547]
[173.50677490 -20.86949539]
[188.14630127 -24.13813210]
[203.12768555 -23.39103699]
[217.36940002 -18.68214798]
[229.84332275 -10.35140038]
[239.64894104 0.99980050]
[246.07838440 14.55200195]
[248.66752625 29.32685852]
[247.22941589 44.25776291]
[241.86790466 58.26683807]
[232.97003174 70.34275818]
[221.17813110 79.61374664]
[207.34349060 85.41053009]
[192.46484375 87.31462860]
[177.61627197 85.18859100]
[163.86972046 79.18589020]
[152.21757507 69.73986816]
[143.50099182 57.53244400]
[138.34924316 43.44487762]
[137.13429260 28.49300575]
[131.47151184 42.38303375]
[125.80872345 56.27305984]
[120.14593506 70.16308594]
[114.48314667 84.05311584]
[108.82036591 97.94313812]
[109.79718781 101.67385101]
[109.12482452 105.81700897]
[106.65594482 109.62642670]
[102.58209229 112.31781769]
[96.30472565 125.94113159]
[90.02736664 139.56445312]
[90.25234222 146.17208862]
[87.51715851 151.15364075]
[83.35493469 153.49563599]
[76.67473602 166.92601013]
[69.99454498 180.35638428]
[84.52239990 176.62255859]
[97.50497437 184.13604736]
[101.50526428 198.59280396]
[94.23171997 211.71131897]
[79.85095978 215.97673035]
[66.60092926 208.94560242]
[62.07178116 194.64663696]
[54.22002411 207.42747498]
[46.36826706 220.20832825]
[38.51651382 232.98916626]
[30.76012230 245.82810974]
[23.09952545 258.72442627]
[15.43892670 271.62075806]
[7.77832985 284.51708984]
[0.89891720 297.84652710]
[-5.17491674 311.56176758]
[-11.24875069 325.27703857]
[-17.32258415 338.99230957]
[-23.39641953 352.70758057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 210]
[30 209]
[31 208]
[32 207]
[33 206]
[42 205]
[43 204]
[44 203]
[45 202]
[47 201]
[48 200]
[49 199]
[50 198]
[51 191]
[52 190]
[53 189]
[54 186]
[55 185]
[56 184]
[57 180]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 153]
[64 152]
[66 149]
[67 148]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[89 128]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
