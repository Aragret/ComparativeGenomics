%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[62.16267014 795.37213135]
[47.14612961 795.33557129]
[32.23164749 793.58740234]
[17.61365700 790.15051270]
[3.48273897 785.06970215]
[-9.97688293 778.41113281]
[-22.58973503 770.26165771]
[-34.19138336 760.72753906]
[-44.63057327 749.93304443]
[-53.77121353 738.01892090]
[-61.49413300 725.14050293]
[-67.69865417 711.46563721]
[-72.30387878 697.17266846]
[-75.24977112 682.44787598]
[-76.49793243 667.48321533]
[-76.03208160 652.47387695]
[-73.85829163 637.61547852]
[-70.00491333 623.10168457]
[-64.52217865 609.12182617]
[-57.48155594 595.85803223]
[-48.97484589 583.48333740]
[-39.11294937 572.15899658]
[-28.02443123 562.03265381]
[-15.85385799 553.23638916]
[-2.75989532 545.88476562]
[11.08674908 540.07373047]
[25.50555611 535.87896729]
[40.30854416 533.35528564]
[55.30273438 532.53540039]
[56.19554901 517.56201172]
[53.45574570 510.69796753]
[57.21475983 502.37283325]
[58.33041000 487.41436768]
[59.44606018 472.45593262]
[60.56170654 457.49746704]
[57.92440414 450.59338379]
[61.80694962 442.32516479]
[63.14518356 427.38497925]
[56.57421112 414.01815796]
[65.51184845 400.96331787]
[66.85008240 386.02313232]
[54.58832932 377.56646729]
[48.16308212 364.01757812]
[49.39041519 348.97232056]
[58.04051208 336.47943115]
[71.87261963 329.95101929]
[73.21085358 315.01083374]
[74.54908752 300.07064819]
[75.88732147 285.13046265]
[61.63609695 280.53649902]
[48.75836182 272.88256836]
[37.90161896 262.54983521]
[29.61257172 250.05409241]
[24.30961800 236.02030945]
[22.26172256 221.15118408]
[23.57477760 206.19197083]
[28.18613625 191.89321899]
[35.86758423 178.97300720]
[46.23664474 168.08099365]
[58.77561188 159.76562500]
[72.85739899 154.44665527]
[87.77690887 152.39381409]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[97.48118591 32.78971100]
[98.59683228 17.83125687]
[98.15023041 2.83790636]
[96.14621735 -12.02762222]
[94.14220428 -26.89315033]
[84.63054657 -39.53589630]
[90.59810638 -53.18278122]
[88.59409332 -68.04830933]
[86.59008026 -82.91384125]
[76.82493591 -91.34027100]
[75.46183014 -103.76306152]
[82.68933105 -113.46304321]
[80.90686798 -128.35676575]
[79.12440491 -143.25047302]
[69.80203247 -156.03343201]
[75.97212219 -169.58996582]
[66.64974976 -182.37292480]
[72.81983185 -195.92944336]
[71.03736877 -210.82316589]
[56.05529404 -212.39961243]
[41.79981613 -217.27085876]
[28.98598099 -225.19256592]
[18.25652504 -235.76737976]
[10.14963531 -248.46485901]
[5.07194853 -262.64810181]
[3.27816010 -277.60571289]
[4.85824490 -292.58740234]
[9.73294735 -306.84170532]
[17.65775490 -319.65362549]
[28.23516083 -330.38052368]
[40.93460846 -338.48434448]
[55.11909485 -343.55859375]
[70.07714081 -345.34875488]
[85.05844879 -343.76504517]
[99.31156158 -338.88687134]
[112.12155914 -330.95895386]
[122.84588623 -320.37896729]
[130.94662476 -307.67755127]
[136.01744080 -293.49182129]
[137.80397034 -278.53335571]
[136.21662903 -263.55242920]
[131.33502197 -249.30050659]
[123.40400696 -236.49243164]
[112.82140350 -225.77066040]
[100.11803436 -217.67300415]
[85.93108368 -212.60562134]
[87.71355438 -197.71191406]
[96.90842438 -185.99424744]
[90.86583710 -171.37242126]
[100.06070709 -159.65476990]
[94.01811981 -145.03294373]
[95.80058289 -130.13922119]
[97.58305359 -115.24550629]
[108.84303284 -101.78520203]
[101.45561218 -84.91785431]
[103.45962524 -70.05232239]
[105.46363831 -55.18679428]
[114.83194733 -43.60733032]
[109.00772858 -28.89716339]
[111.01174164 -14.03163528]
[113.01575470 0.83389264]
[118.84056091 -12.98897457]
[129.45761108 -23.58511543]
[143.29193115 -29.38265610]
[158.29129028 -29.52156448]
[172.23062134 -23.98123550]
[183.04209900 -13.58354187]
[189.12190247 0.12907726]
[189.56813049 15.12243843]
[184.31460571 29.17236519]
[174.14064026 40.19463348]
[160.55548096 46.55415726]
[145.57441711 47.30753708]
[131.41978455 42.34301376]
[120.19135284 32.39704895]
[113.55529022 18.94690514]
[112.43963623 33.90535736]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[102.71709442 153.73204041]
[117.03427887 158.40370178]
[129.94660950 166.14062500]
[140.80816650 176.55203247]
[149.07644653 189.11344910]
[154.33943176 203.19311523]
[156.33621216 218.08378601]
[154.96981812 233.03820801]
[150.31199646 247.30670166]
[142.59938049 260.17465210]
[132.22154236 270.99832153]
[119.70128632 279.23715210]
[105.66830444 284.48059082]
[90.82750702 286.46868896]
[89.48927307 301.40887451]
[88.15103912 316.34906006]
[86.81280518 331.28924561]
[99.26448822 340.17196655]
[105.55665588 354.00329590]
[104.09060669 369.02716064]
[95.35974121 381.21847534]
[81.79026794 387.36135864]
[80.45203400 402.30154419]
[86.92728424 416.73696899]
[78.08537292 428.72320557]
[76.74713898 443.66339111]
[75.52015686 458.61312866]
[74.40451050 473.57156372]
[73.28886414 488.53002930]
[72.17321777 503.48849487]
[71.16895294 518.45483398]
[70.27613831 533.42822266]
[85.06665802 536.02404785]
[99.46486664 540.28894043]
[113.28304291 546.16735840]
[126.34104919 553.58264160]
[138.46862793 562.43811035]
[149.50770569 572.61834717]
[159.31433105 583.99053955]
[167.76066589 596.40655518]
[174.73660278 609.70446777]
[180.15118408 623.71087646]
[183.93382263 638.24322510]
[186.03521729 653.11206055]
[186.42796326 668.12353516]
[185.10693359 683.08190918]
[182.08935547 697.79217529]
[177.41456604 712.06256104]
[171.14352417 725.70703125]
[163.35797119 738.54772949]
[154.15940857 750.41717529]
[143.66777039 761.16070557]
[132.01982117 770.63818359]
[119.36743164 778.72613525]
[105.87554169 785.31903076]
[91.72004700 790.33099365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 186]
[30 185]
[32 184]
[33 183]
[34 182]
[35 181]
[37 180]
[38 179]
[40 177]
[41 176]
[46 171]
[47 170]
[48 169]
[49 168]
[62 155]
[63 154]
[64 153]
[65 152]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 130]
[73 129]
[74 128]
[76 126]
[77 125]
[78 124]
[81 122]
[82 121]
[83 120]
[85 118]
[87 116]
[88 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
