%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[77.87569427 579.52441406]
[64.13589478 573.40417480]
[51.70983505 564.92871094]
[40.99696350 554.37060547]
[32.34164810 542.06915283]
[26.02213097 528.41986084]
[22.24155235 513.86145020]
[21.12144279 498.86193848]
[22.69780922 483.90350342]
[26.91998100 469.46697998]
[33.65222931 456.01647949]
[42.67813873 443.98431396]
[53.70756912 433.75732422]
[66.38596344 425.66424561]
[80.30577087 419.96520996]
[95.01952362 416.84347534]
[94.57292175 401.85012817]
[94.12631226 386.85678101]
[86.01350403 374.36550903]
[93.33649445 360.34109497]
[92.88988495 345.34774780]
[92.44328308 330.35440063]
[91.99667358 315.36105347]
[83.41022491 306.84051514]
[82.91544342 294.35296631]
[91.32256317 284.57119751]
[91.09923553 269.57284546]
[90.87590790 254.57450867]
[88.13370514 250.66435242]
[87.81872559 244.99003601]
[90.87590790 239.12785339]
[91.09923553 224.12951660]
[83.55228424 211.28845215]
[91.49418640 197.60501099]
[91.71751404 182.60667419]
[91.82918549 167.60708618]
[91.82918549 152.60708618]
[88.68568420 145.91827393]
[91.94251251 137.38418579]
[92.16584015 122.38584137]
[92.38916779 107.38750458]
[91.94255829 92.39415741]
[83.20027924 79.20767975]
[89.96954346 65.94018555]
[88.85388947 50.98173141]
[87.73824310 36.02328110]
[86.62259674 21.06482506]
[85.50694275 6.10637236]
[79.89694214 20.01779938]
[71.36970520 32.35823059]
[60.34130096 42.52555084]
[47.34983444 50.02367020]
[33.02918625 54.48674011]
[18.07808876 55.69699860]
[3.22604299 53.59539413]
[-10.80228806 48.28446579]
[-23.32242966 40.02334976]
[-33.72349930 29.21512413]
[-41.49800491 16.38714409]
[-46.26660919 2.16531467]
[-47.79664230 -12.75644779]
[-46.01345062 -27.65007782]
[-41.00403976 -41.78888321]
[-33.01282883 -54.48299789]
[-22.42973137 -65.11305237]
[-9.77111626 -73.16037750]
[4.34537411 -78.23233032]
[19.23096466 -80.08143616]
[34.15935516 -78.61747742]
[48.40215302 -73.91188049]
[61.26442719 -66.19423676]
[72.11859131 -55.84111786]
[80.43505096 -43.35766983]
[85.80802917 -29.35298538]
[87.97513580 -14.51700306]
[92.58914185 -28.78973579]
[97.20314789 -43.06246948]
[90.26136780 -57.00698090]
[95.14395142 -71.41583252]
[108.48069000 -77.94783020]
[105.36347198 -93.45890045]
[116.64054871 -103.18910217]
[121.25456238 -117.46183777]
[125.86856842 -131.73457336]
[114.35779572 -141.62283325]
[107.52819061 -155.12837219]
[106.39269257 -170.17909241]
[111.09326935 -184.47917175]
[120.88404846 -195.85922241]
[134.24946594 -202.60539246]
[149.13880920 -203.71751404]
[153.75282288 -217.99023438]
[158.36683655 -232.26296997]
[162.98083496 -246.53570557]
[166.73713684 -261.05776978]
[169.62240601 -275.77764893]
[172.50769043 -290.49755859]
[175.39295959 -305.21743774]
[161.57968140 -311.21804810]
[149.37957764 -320.04821777]
[139.36325073 -331.29486084]
[131.99920654 -344.43200684]
[127.63185883 -358.84521484]
[126.46547699 -373.86032104]
[128.55462646 -388.77508545]
[133.80157471 -402.89184570]
[141.96093750 -415.55041504]
[152.65106201 -426.15869141]
[165.37196350 -434.22048950]
[179.52867126 -439.35876465]
[194.45903015 -441.33319092]
[209.46472168 -440.05142212]
[223.84393311 -435.57339478]
[236.92408752 -428.10858154]
[248.09341431 -418.00610352]
[256.82952881 -405.73846436]
[262.72375488 -391.87948608]
[265.50048828 -377.07730103]
[265.02984619 -362.02432251]
[261.33380127 -347.42456055]
[254.58522034 -333.96084595]
[245.09979248 -322.26296997]
[233.32115173 -312.87802124]
[219.80018616 -306.24493408]
[205.16931152 -302.67398071]
[190.11285400 -302.33215332]
[187.22756958 -287.61227417]
[184.34230042 -272.89239502]
[181.45703125 -258.17248535]
[193.31947327 -267.35302734]
[208.30865479 -267.92294312]
[220.83395386 -259.66964722]
[226.22375488 -245.67143250]
[222.46780396 -231.14927673]
[210.96696472 -221.51960754]
[196.01077271 -220.37402344]
[183.17752075 -228.13981628]
[177.25357056 -241.92169189]
[172.63955688 -227.64897156]
[168.02555847 -213.37623596]
[163.41154480 -199.10350037]
[174.83229065 -189.48600769]
[181.71945190 -176.19268799]
[182.99588013 -161.23489380]
[178.43605042 -146.88932800]
[168.70512390 -135.35144043]
[155.26214600 -128.39950562]
[140.14129639 -127.12055969]
[135.52729797 -112.84782410]
[130.91328430 -98.57509613]
[134.36053467 -84.08489990]
[122.75342560 -73.33381653]
[129.74272156 -60.23094177]
[125.26677704 -45.69063187]
[111.47588348 -38.44845963]
[106.86187744 -24.17572784]
[102.24786377 -9.90299320]
[100.46540070 4.99072361]
[101.58104706 19.94917679]
[102.69669342 34.90763092]
[103.81234741 49.86608505]
[104.92799377 64.82453918]
[113.59047699 76.94108582]
[106.90101624 91.27850342]
[117.48451996 80.64886475]
[132.48355103 80.47834778]
[143.30598450 90.86463928]
[143.75222778 105.85799408]
[133.56666565 116.86954498]
[118.58403778 117.59137726]
[107.38750458 107.61083221]
[107.16417694 122.60916901]
[106.94084930 137.60751343]
[106.82918549 152.60708618]
[106.82918549 167.60708618]
[109.95858765 176.18873596]
[106.71585083 182.83000183]
[106.49252319 197.82833862]
[114.02350616 211.74218750]
[106.09757233 224.35284424]
[105.87424469 239.35118103]
[105.87424469 254.35118103]
[106.09757233 269.34951782]
[106.32089996 284.34786987]
[116.12870789 299.93273926]
[106.99002075 314.91442871]
[107.43663025 329.90777588]
[107.88323975 344.90112305]
[108.32984161 359.89450073]
[116.47459412 373.45816040]
[109.11965942 386.41015625]
[109.56626892 401.40353394]
[110.01287842 416.39688110]
[124.88635254 418.63729858]
[139.12068176 423.49768066]
[152.25831604 430.82180786]
[163.87690735 440.37417603]
[173.60298157 451.84777832]
[181.12388611 464.87371826]
[186.19784546 479.03335571]
[188.66175842 493.87142944]
[188.43643188 508.91101074]
[185.52908325 523.66864014]
[180.03318787 537.66986084]
[172.12541199 550.46466064]
[162.05996704 561.64172363]
[150.16040039 570.84173584]
[136.80924988 577.76898193]
[122.43569183 582.20074463]
[107.50177002 583.99456787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 193]
[17 192]
[18 191]
[20 189]
[21 188]
[22 187]
[23 186]
[26 184]
[27 183]
[28 182]
[31 181]
[32 180]
[34 178]
[35 177]
[36 175]
[37 174]
[39 173]
[40 172]
[41 171]
[42 164]
[44 162]
[45 161]
[46 160]
[47 159]
[48 158]
[75 157]
[76 156]
[77 155]
[80 152]
[82 150]
[83 149]
[84 148]
[91 141]
[92 140]
[93 139]
[94 138]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
