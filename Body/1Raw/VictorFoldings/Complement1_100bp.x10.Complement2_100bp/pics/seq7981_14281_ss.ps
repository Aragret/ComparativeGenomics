%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[151.62622070 490.07714844]
[146.39981079 476.00448608]
[142.55603027 461.49307251]
[140.13076782 446.67843628]
[139.14666748 431.69888306]
[139.61289978 416.69427490]
[141.52514648 401.80471802]
[144.86550903 387.16925049]
[149.60284424 372.92446899]
[155.69288635 359.20343018]
[163.07878113 346.13424683]
[171.69157410 333.83889771]
[181.45085144 322.43222046]
[192.26547241 312.02072144]
[204.03448486 302.70159912]
[216.64797974 294.56188965]
[209.76856995 281.23245239]
[202.88916016 267.90301514]
[196.00973511 254.57359314]
[188.54199219 241.56463623]
[180.50082397 228.90211487]
[172.17887878 216.42231750]
[163.58032227 204.13148499]
[154.98175049 191.84063721]
[141.34614563 185.84736633]
[139.77522278 170.10433960]
[126.13961792 164.11106873]
[124.56869507 148.36804199]
[115.97013092 136.07720947]
[107.37156677 123.78636932]
[98.77300262 111.49552917]
[98.94397736 126.49455261]
[92.20730591 139.89668274]
[80.06797791 148.70787048]
[65.23796082 150.95964050]
[51.03030777 146.14895630]
[40.61904907 135.35055542]
[36.33008575 120.97679901]
[39.12158203 106.23883820]
[48.36991501 94.42916107]
[62.00897980 88.18608856]
[76.99177551 88.90433502]
[89.97111511 96.42346191]
[83.49162292 82.89511871]
[77.01213074 69.36676788]
[70.53263092 55.83842468]
[64.05313873 42.31007767]
[59.15171814 56.48668289]
[46.34955978 64.30363464]
[31.49962997 62.18712234]
[21.39112091 51.10479355]
[20.64550400 36.12333679]
[29.60366631 24.09207153]
[44.17005920 20.51153183]
[57.68641663 27.02001381]
[52.64950180 12.89098358]
[48.67199326 9.51067066]
[46.59640121 5.35793495]
[46.39846039 1.28658760]
[47.71855164 -1.98292327]
[43.31755066 -16.32277107]
[38.91655350 -30.66261673]
[34.51555634 -45.00246429]
[30.11455727 -59.34231186]
[25.71356010 -73.68215942]
[21.31256104 -88.02200317]
[6.20059395 -88.31506348]
[-8.06157780 -93.25803375]
[-20.08133507 -102.35494232]
[-28.68914223 -114.70487213]
[-33.05233002 -129.09115601]
[-32.75564194 -144.10125732]
[-27.84071732 -158.26541138]
[-18.80077362 -170.20063782]
[-6.53115606 -178.74566650]
[-10.93215370 -193.08551025]
[-15.33315182 -207.42535400]
[-26.77890205 -218.34806824]
[-23.11630058 -232.78532410]
[-38.06371307 -231.08547974]
[-53.06894684 -232.16139221]
[-67.62093353 -235.97642517]
[-81.22402954 -242.40061951]
[-93.41491699 -251.21520996]
[-103.77838898 -262.11993408]
[-111.96147156 -274.74340820]
[-117.68543243 -288.65563965]
[-120.75534058 -303.38284302]
[-121.06661224 -318.42340088]
[-118.60866547 -333.26498413]
[-113.46520996 -347.40216064]
[-105.81142426 -360.35339355]
[-95.90799713 -371.67755127]
[-84.09223938 -380.98895264]
[-70.76658630 -387.97048950]
[-56.38490295 -392.38430786]
[-41.43703461 -394.08013916]
[-26.43208885 -393.00018311]
[-11.88113594 -389.18124390]
[1.72022831 -382.75335693]
[13.90874481 -373.93548584]
[24.26927757 -363.02798462]
[32.44895172 -350.40231323]
[38.16916656 -336.48849487]
[41.23509979 -321.76049805]
[41.54232407 -306.71984863]
[39.08037186 -291.87893677]
[33.93310165 -277.74313354]
[26.27582741 -264.79397583]
[16.36934853 -253.47248840]
[4.55108023 -244.16426086]
[-8.77645397 -237.18632507]
[2.35450649 -227.28930664]
[-0.99330497 -211.82635498]
[3.40769315 -197.48651123]
[7.80869102 -183.14666748]
[22.75942802 -182.95574951]
[36.93834686 -178.14656067]
[48.95282364 -169.17814636]
[57.61871338 -156.91873169]
[62.07706070 -142.56164551]
[61.87923050 -127.50920868]
[57.03201294 -113.23571014]
[47.99819565 -101.14303589]
[35.65240860 -92.42300415]
[40.05340576 -78.08316040]
[44.45440674 -63.74330902]
[48.85540390 -49.40346146]
[53.25640106 -35.06361389]
[57.65739822 -20.72376823]
[62.05839539 -6.38392115]
[66.77853394 7.85406780]
[71.81544495 21.98309708]
[77.58148193 35.83058167]
[84.06097412 49.35892868]
[90.54047394 62.88727570]
[97.01996613 76.41561890]
[103.49946594 89.94396210]
[111.06384277 102.89696503]
[119.66240692 115.18780518]
[128.26097107 127.47863770]
[136.85954285 139.76947021]
[151.11016846 146.64187622]
[152.06607056 161.50578308]
[166.31669617 168.37817383]
[167.27259827 183.24208069]
[175.87115479 195.53291321]
[184.46972656 207.82376099]
[189.20036316 210.03012085]
[192.30152893 213.48498535]
[193.57052612 217.35858154]
[193.16334534 220.86094666]
[201.20452881 233.52346802]
[205.52087402 219.15791321]
[218.66510010 211.93092346]
[233.10758972 215.98243713]
[240.57501221 228.99156189]
[236.78970337 243.50608826]
[223.92005920 251.21144104]
[209.33917236 247.69418335]
[216.21858215 261.02362061]
[223.09799194 274.35302734]
[229.97740173 287.68246460]
[243.91935730 282.11672974]
[258.33340454 277.92260742]
[273.08496094 275.13922119]
[288.03628540 273.79257202]
[303.04779053 273.89526367]
[317.97927856 275.44628906]
[332.69137573 278.43118286]
[347.04672241 282.82208252]
[360.91122437 288.57800293]
[374.15548706 295.64520264]
[386.65582275 303.95764160]
[398.29553223 313.43777466]
[408.96594238 323.99703979]
[418.56738281 335.53686523]
[427.01025391 347.94952393]
[434.21566772 361.11907959]
[440.11639404 374.92257690]
[444.65734863 389.23117065]
[447.79608154 403.91122437]
[449.50335693 418.82565308]
[449.76315308 433.83526611]
[448.57308960 448.79986572]
[445.94427490 463.57974243]
[441.90127563 478.03689575]
[436.48178101 492.03634644]
[429.73645020 505.44738770]
[421.72824097 518.14477539]
[412.53192139 530.01000977]
[402.23333740 540.93225098]
[390.92871094 550.80950928]
[378.72354126 559.54962158]
[365.73178101 567.07092285]
[352.07476807 573.30322266]
[337.88000488 578.18835449]
[323.28002930 581.68060303]
[308.41116333 583.74743652]
[293.41220093 584.36962891]
[278.42324829 583.54119873]
[263.58419800 581.27001953]
[249.03363037 577.57727051]
[234.90739441 572.49737549]
[221.33740234 566.07781982]
[208.45034790 558.37847900]
[196.36654663 549.47137451]
[185.19883728 539.43951416]
[175.05149841 528.37664795]
[166.01925659 516.38604736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 163]
[17 162]
[18 161]
[19 160]
[20 153]
[21 152]
[22 148]
[23 147]
[24 146]
[26 144]
[28 142]
[29 141]
[30 140]
[31 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[55 133]
[56 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[75 116]
[76 115]
[77 114]
[79 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
