%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[37.50384903 670.33538818]
[23.78715515 676.42059326]
[9.68717098 681.55548096]
[-4.73036289 685.71618652]
[-19.39822388 688.88330078]
[-34.24802017 691.04205322]
[-49.21052170 692.18237305]
[-64.21595764 692.29895020]
[-79.19437408 691.39129639]
[-94.07592010 689.46356201]
[-108.79122925 686.52471924]
[-123.27167511 682.58856201]
[-137.44975281 677.67340088]
[-151.25933838 671.80212402]
[-164.63607788 665.00213623]
[-177.51757812 657.30517578]
[-189.84378052 648.74700928]
[-201.55722046 639.36767578]
[-212.60328674 629.21087646]
[-222.93046570 618.32391357]
[-232.49061584 606.75756836]
[-241.23916626 594.56573486]
[-249.13531494 581.80535889]
[-256.14224243 568.53588867]
[-262.22729492 554.81915283]
[-267.36212158 540.71911621]
[-271.52270508 526.30157471]
[-274.68972778 511.63366699]
[-276.84838867 496.78384399]
[-277.98861694 481.82135010]
[-278.10510254 466.81591797]
[-277.19732666 451.83749390]
[-275.26947021 436.95596313]
[-272.33059692 422.24069214]
[-268.39431763 407.76025391]
[-263.47906494 393.58221436]
[-257.60769653 379.77267456]
[-250.80761719 366.39596558]
[-243.11053467 353.51452637]
[-234.55233765 341.18838501]
[-225.17291260 329.47500610]
[-215.01600647 318.42901611]
[-204.12898254 308.10189819]
[-192.56257629 298.54183960]
[-180.37072754 289.79336548]
[-167.61027527 281.89730835]
[-154.34072876 274.89044189]
[-140.62396240 268.80548096]
[-126.52390289 263.67077637]
[-112.10631561 259.51028442]
[-97.43840790 256.34335327]
[-82.58858490 254.18479919]
[-67.62606812 253.04466248]
[-52.62062836 252.92826843]
[-37.64223099 253.83615112]
[-22.76070404 255.76409912]
[-8.04543972 258.70309448]
[6.43495464 262.63946533]
[20.61296463 267.55480957]
[26.48192406 253.75064087]
[32.35088730 239.94647217]
[38.21984482 226.14228821]
[44.08880615 212.33811951]
[49.95776749 198.53393555]
[55.82672882 184.72976685]
[53.68598175 169.98980713]
[66.20596313 160.31712341]
[72.07492828 146.51295471]
[77.94388580 132.70877075]
[75.80313873 117.96881104]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[109.61062622 58.22654724]
[115.47958374 44.42237091]
[111.38738251 32.19058228]
[116.55984497 20.81387520]
[127.72757721 16.16539955]
[126.24095917 0.41419086]
[138.46913147 -8.08999920]
[144.54295349 -21.80526543]
[150.61679077 -35.52053452]
[156.69062805 -49.23579788]
[162.76446533 -62.95106506]
[168.83830261 -76.66633606]
[174.91212463 -90.38159943]
[173.42552185 -106.13280487]
[185.65368652 -114.63700104]
[191.72752380 -128.35226440]
[178.70985413 -135.83277893]
[166.54544067 -144.63305664]
[155.36756897 -154.65667725]
[145.29870605 -165.79379272]
[136.44915771 -177.92240906]
[128.91589355 -190.90962219]
[122.78145599 -204.61314392]
[118.11305237 -218.88282776]
[114.96183777 -233.56231689]
[113.36233521 -248.49078369]
[113.33206177 -263.50466919]
[114.87136841 -278.43948364]
[117.96337128 -293.13156128]
[122.57419586 -307.41995239]
[128.65333557 -321.14807129]
[136.13417053 -334.16555786]
[144.93473816 -346.32974243]
[154.95863342 -357.50738525]
[166.09599304 -367.57598877]
[178.22482300 -376.42523193]
[191.21221924 -383.95819092]
[204.91589355 -390.09228516]
[219.18568420 -394.76034546]
[233.86524963 -397.91119385]
[248.79376221 -399.51034546]
[263.80764771 -399.54025269]
[278.74240112 -398.00057983]
[293.43441772 -394.90823364]
[307.72268677 -390.29705811]
[321.45068359 -384.21759033]
[334.46798706 -376.73641968]
[346.63195801 -367.93554688]
[357.80935669 -357.91140747]
[367.87768555 -346.77377319]
[376.72662354 -334.64474487]
[384.25927734 -321.65716553]
[390.39303589 -307.95333862]
[395.06076050 -293.68344116]
[398.21124268 -279.00378418]
[399.81002808 -264.07525635]
[399.83956909 -249.06135559]
[398.29953003 -234.12663269]
[395.20681763 -219.43470764]
[390.59530640 -205.14654541]
[384.51550293 -191.41870117]
[377.03402710 -178.40158081]
[368.23287964 -166.23780823]
[358.20843506 -155.06066895]
[347.07058716 -144.99261475]
[334.94131470 -136.14395142]
[321.95355225 -128.61163330]
[308.24960327 -122.47819519]
[293.97958374 -117.81083679]
[279.29986572 -114.66069031]
[264.37127686 -113.06227112]
[249.35737610 -113.03309631]
[234.42268372 -114.57348633]
[219.73083496 -117.66655731]
[205.44277954 -122.27842712]
[199.36895752 -108.56316376]
[201.29000854 -93.79296112]
[188.62739563 -84.30776215]
[182.55355835 -70.59249878]
[176.47973633 -56.87723160]
[170.40589905 -43.16196442]
[164.33206177 -29.44669914]
[158.25822449 -15.73143196]
[152.18438721 -2.01616526]
[154.10545349 12.75403500]
[141.44284058 22.23923302]
[144.24940491 39.56234360]
[129.28376770 50.29133224]
[123.41480255 64.09551239]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[103.84825897 129.89242554]
[91.74806213 138.57772827]
[85.87910461 152.38191223]
[80.01013947 166.18608093]
[81.73110199 181.91342163]
[69.63090515 190.59872437]
[63.76194382 204.40289307]
[57.89298248 218.20707703]
[52.02402496 232.01124573]
[46.15506363 245.81542969]
[40.28610229 259.61959839]
[34.41714096 273.42379761]
[47.79396439 280.22357178]
[60.67556763 287.92041016]
[73.00188446 296.47836304]
[84.71545410 305.85754395]
[95.76165009 316.01422119]
[106.08898163 326.90106201]
[115.64928436 338.46728516]
[124.39799500 350.65893555]
[132.29431152 363.41921997]
[139.30142212 376.68862915]
[145.38667297 390.40530396]
[150.52165222 404.50524902]
[154.68246460 418.92276001]
[157.84967041 433.59057617]
[160.00852966 448.44036865]
[161.14897156 463.40286255]
[161.26565552 478.40829468]
[160.35807800 493.38671875]
[158.43043518 508.26828003]
[155.49172974 522.98358154]
[151.55566406 537.46405029]
[146.64057922 551.64221191]
[140.76940918 565.45184326]
[133.96951294 578.82861328]
[126.27260590 591.71014404]
[117.71456909 604.03643799]
[108.33530426 615.74993896]
[98.17854309 626.79602051]
[87.29164886 637.12329102]
[75.72537231 646.68353271]
[63.53363800 655.43212891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 179]
[60 178]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[67 171]
[68 170]
[69 169]
[71 167]
[73 165]
[74 164]
[75 163]
[76 162]
[79 160]
[81 158]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[89 150]
[90 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
