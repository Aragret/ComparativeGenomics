%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[5.39895201 365.66110229]
[13.26803589 378.48934937]
[18.48296547 392.60638428]
[20.84329414 407.46960449]
[20.25829697 422.50769043]
[16.75045776 437.14260864]
[10.45461178 450.81185913]
[1.61275172 462.99002075]
[-9.43526363 473.20901489]
[-22.26477814 481.07601929]
[-36.38265991 486.28866577]
[-51.24625397 488.64657593]
[-66.28424072 488.05914307]
[-80.91860962 484.54895020]
[-94.58684540 478.25088501]
[-106.76358032 469.40707397]
[-116.98077393 458.35739136]
[-124.84570312 445.52661133]
[-130.05606079 431.40786743]
[-132.41157532 416.54391479]
[-131.82171631 401.50601196]
[-128.30914307 386.87222290]
[-122.00887299 373.20498657]
[-113.16307068 361.02969360]
[-102.11174774 350.81430054]
[-89.27968597 342.95144653]
[-75.16011810 337.74334717]
[-60.29576111 335.39025879]
[-45.25796127 335.98254395]
[-30.62473297 339.49749756]
[-24.34737206 325.87417603]
[-18.07001114 312.25085449]
[-18.12579918 304.86041260]
[-11.59643555 298.47250366]
[-5.11693954 284.94418335]
[-6.59737730 270.12332153]
[6.34202480 261.01934814]
[12.82152081 247.49099731]
[11.34108257 232.67015076]
[24.28048515 223.56616211]
[30.75998116 210.03782654]
[37.23947525 196.50947571]
[22.44025421 198.95549011]
[11.19900322 189.02401733]
[11.80235577 174.03616333]
[23.80554199 165.04040527]
[38.36026001 168.66810608]
[44.73732376 182.24337769]
[52.20506287 169.23443604]
[51.83105087 154.34452820]
[65.41173553 146.22814941]
[72.87947845 133.21919250]
[80.25016785 120.15501404]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[96.56044769 73.09930420]
[102.88841248 62.32244873]
[114.47914886 58.86103058]
[121.94689178 45.85207748]
[122.31231689 39.25071716]
[125.48102570 34.53305817]
[129.83560181 32.57173920]
[137.68734741 19.79089546]
[145.53910828 7.01005268]
[153.39086914 -5.77078962]
[160.95524597 -18.72378922]
[168.22846985 -31.84248161]
[175.50169373 -44.96117783]
[182.77493286 -58.07987213]
[190.04815674 -71.19856262]
[197.32139587 -84.31726074]
[203.19035339 -98.12143707]
[199.84254456 -113.58438110]
[210.97349548 -123.48139954]
[215.37449646 -137.82124329]
[219.77549744 -152.16110229]
[215.23712158 -170.00723267]
[228.54110718 -181.45149231]
[232.72811890 -195.85527039]
[236.91513062 -210.25906372]
[241.10214233 -224.66284180]
[245.28915405 -239.06661987]
[232.65496826 -230.98100281]
[217.67471313 -231.75064087]
[205.93568420 -241.08847046]
[201.81623840 -255.51171875]
[206.85281372 -269.64086914]
[219.16690063 -278.20611572]
[234.16566467 -278.01278687]
[246.25491333 -269.13302612]
[250.92567444 -254.87760925]
[256.79464722 -268.68179321]
[262.66360474 -282.48596191]
[268.53256226 -296.29013062]
[274.40151978 -310.09429932]
[261.48245239 -317.76119995]
[249.70057678 -327.08163452]
[239.26617432 -337.88937378]
[230.36546326 -349.99145508]
[223.15725708 -363.17193604]
[217.77023315 -377.19561768]
[214.30050659 -391.81219482]
[212.80999756 -406.76083374]
[213.32530212 -421.77474976]
[215.83724976 -436.58602905]
[220.30097961 -450.93029785]
[226.63685608 -464.55163574]
[234.73179626 -477.20687866]
[244.44134521 -488.67022705]
[255.59220886 -498.73706055]
[267.98541260 -507.22778320]
[281.39974976 -513.99084473]
[295.59585571 -518.90551758]
[310.32037354 -521.88415527]
[325.31051636 -522.87353516]
[340.29876709 -521.85601807]
[355.01766968 -518.84985352]
[369.20452881 -513.90850830]
[382.60617065 -507.12033081]
[394.98342896 -498.60641479]
[406.11541748 -488.51864624]
[415.80343628 -477.03713989]
[423.87463379 -464.36672974]
[430.18496704 -450.73355103]
[434.62179565 -436.38095093]
[437.10595703 -421.56497192]
[437.59313965 -406.55010986]
[436.07461548 -391.60430908]
[432.57748413 -376.99426270]
[427.16415405 -362.98071289]
[419.93127441 -349.81375122]
[411.00787354 -337.72836304]
[400.55322266 -326.94024658]
[388.75390625 -317.64187622]
[375.82049561 -309.99923706]
[361.98376465 -304.14871216]
[347.49069214 -300.19470215]
[332.59991455 -298.20776367]
[317.57714844 -298.22335815]
[302.69052124 -300.24124146]
[288.20568848 -304.22534180]
[282.33673096 -290.42117310]
[276.46777344 -276.61700439]
[270.59881592 -262.81280518]
[264.72985840 -249.00863647]
[259.69293213 -234.87960815]
[255.50592041 -220.47583008]
[251.31890869 -206.07205200]
[247.13189697 -191.66825867]
[242.94488525 -177.26448059]
[248.49411011 -166.51586914]
[245.12373352 -154.48156738]
[234.11534119 -147.76010132]
[229.71434021 -133.42025757]
[225.31333923 -119.08040619]
[228.97595215 -104.64313507]
[217.53019714 -93.72043610]
[228.60514832 -103.83702850]
[242.68215942 -109.01753235]
[257.67300415 -108.49344635]
[271.35388184 -102.34251404]
[281.69528198 -91.47718811]
[287.16314697 -77.50928497]
[286.94635010 -62.51085281]
[281.07705688 -48.70681763]
[270.42593384 -38.14493179]
[256.57299805 -32.39198685]
[241.57327271 -32.30139542]
[227.65187073 -37.88659668]
[216.87394714 -48.31906128]
[210.83833313 -62.05119324]
[210.44007874 -77.04402924]
[203.16685486 -63.92533493]
[195.89363098 -50.80664062]
[188.62039185 -37.68794632]
[181.34716797 -24.56925201]
[174.07392883 -11.45055866]
[174.68885803 -7.97864103]
[173.65266418 -4.03638649]
[170.76263428 -0.40306795]
[166.17170715 2.08096552]
[158.31994629 14.86180782]
[150.46820068 27.64265060]
[142.61643982 40.42349243]
[134.95584106 53.31982040]
[127.48809814 66.32877350]
[128.47721863 83.84986115]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[93.36885834 127.42823792]
[91.94469452 136.45095825]
[85.88842773 140.68693542]
[78.42068481 153.69589233]
[78.26055908 169.51628113]
[65.21401215 176.70217896]
[57.74627304 189.71112061]
[50.76782227 202.98896790]
[44.28832626 216.51731873]
[37.80883026 230.04566956]
[38.82581329 245.83415222]
[26.34986687 253.97048950]
[19.87037086 267.49884033]
[20.88735199 283.28732300]
[8.41140652 291.42367554]
[1.93191028 304.95202637]
[-4.44669485 318.52822876]
[-10.72405529 332.15155029]
[-17.00141525 345.77484131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 210]
[31 209]
[32 208]
[34 207]
[35 206]
[37 204]
[38 203]
[40 201]
[41 200]
[42 199]
[48 198]
[49 197]
[51 195]
[52 194]
[53 192]
[54 191]
[56 189]
[59 187]
[60 186]
[63 185]
[64 184]
[65 183]
[66 182]
[67 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[73 158]
[75 156]
[76 155]
[77 154]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[92 146]
[93 145]
[94 144]
[95 143]
[96 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
