%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[88.24549103 655.67456055]
[76.91971588 665.66973877]
[63.23616028 672.06793213]
[48.30409622 674.35046387]
[33.33399582 672.33239746]
[19.53941727 666.17718506]
[8.03862953 656.38391113]
[-0.23605290 643.74639893]
[-4.61383820 629.28918457]
[-4.73983860 614.18414307]
[-0.60383981 599.65588379]
[7.45887089 586.88214111]
[18.79468536 576.89837646]
[32.48466110 570.51391602]
[47.41901016 568.24633789]
[49.42302704 553.38079834]
[51.42704010 538.51525879]
[53.43105316 523.64971924]
[55.43506622 508.78421021]
[57.43907928 493.91870117]
[59.33237076 479.03866577]
[61.11483765 464.14492798]
[62.89730453 449.25122070]
[64.67977142 434.35751343]
[65.57258606 419.38409424]
[65.57258606 404.38409424]
[65.57258606 389.38409424]
[63.68805695 387.30883789]
[62.51201248 384.36206055]
[62.38052750 380.80984497]
[63.52722168 377.03500366]
[66.04578400 373.49792480]
[63.30598450 366.63388062]
[67.06500244 358.30874634]
[68.18064880 343.35031128]
[69.29629517 328.39184570]
[70.41194153 313.43338013]
[58.90288925 301.17041016]
[59.84246445 284.04055786]
[73.13693237 272.67059326]
[74.02974701 257.69717407]
[74.92256927 242.72377014]
[75.81538391 227.75036621]
[63.03469467 235.60237122]
[48.87595367 230.64959717]
[43.77645493 216.54302979]
[51.49536133 203.68151855]
[66.34258270 201.54608154]
[77.37268066 211.70936584]
[79.37669373 196.84384155]
[73.40912628 183.19694519]
[82.92078400 170.55419922]
[84.92479706 155.68867493]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[89.01647949 61.32687378]
[90.99166107 48.98659897]
[100.52977753 41.54677582]
[102.75489044 26.71273422]
[94.47440338 19.98538589]
[89.76928711 10.50018501]
[89.42848969 -0.00159433]
[93.44651031 -9.62284374]
[101.03649139 -16.65332222]
[110.78332520 -19.87359619]
[113.66860199 -34.59348679]
[116.55387115 -49.31337738]
[115.13359833 -58.33671570]
[119.59323883 -64.23021698]
[122.69734955 -78.90552521]
[125.80146027 -93.58082581]
[128.90556335 -108.25612640]
[132.00967407 -122.93142700]
[125.64109039 -134.14765930]
[128.52862549 -146.30685425]
[138.59367371 -153.01664734]
[141.91593933 -167.64411926]
[145.23818970 -182.27157593]
[140.74957275 -197.44268799]
[151.11360168 -208.14018250]
[154.43585205 -222.76763916]
[157.64913940 -237.41943359]
[160.75325012 -252.09472656]
[163.52885437 -266.83569336]
[165.97457886 -281.63497925]
[168.42030334 -296.43423462]
[170.86604309 -311.23352051]
[173.31176758 -326.03277588]
[175.75749207 -340.83206177]
[178.20321655 -355.63131714]
[180.64894104 -370.43060303]
[166.53494263 -375.64511108]
[153.66297913 -383.43670654]
[142.49838257 -393.52377319]
[133.44474792 -405.54159546]
[126.82935333 -419.05575562]
[122.89134979 -433.57775879]
[121.77307892 -448.58264160]
[123.51497650 -463.52795410]
[128.05406189 -477.87344360]
[135.22627258 -491.10052490]
[144.77232361 -502.73107910]
[156.34712219 -512.34460449]
[169.53225708 -519.59368896]
[183.85108948 -524.21618652]
[198.78601074 -526.04498291]
[213.79713440 -525.01403809]
[228.34179688 -521.16058350]
[241.89424133 -514.62396240]
[253.96455383 -505.64038086]
[264.11639404 -494.53466797]
[271.98275757 -481.70828247]
[277.27929688 -467.62484741]
[279.81457520 -452.79348755]
[279.49691772 -437.75036621]
[276.33776855 -423.03927612]
[270.45141602 -409.19198608]
[262.05056763 -396.70910645]
[251.43894958 -386.04187012]
[239.00016785 -377.57586670]
[225.18385315 -371.61718750]
[210.48947144 -368.38119507]
[195.44821167 -367.98486328]
[193.00248718 -353.18560791]
[190.55676270 -338.38632202]
[188.11103821 -323.58706665]
[185.66531372 -308.78778076]
[183.21957397 -293.98849487]
[180.77384949 -279.18923950]
[178.32812500 -264.38995361]
[180.07319641 -261.32614136]
[180.42095947 -257.26483154]
[178.91877747 -252.87202454]
[175.42854309 -248.99061584]
[172.32443237 -234.31532288]
[174.01570129 -227.12077332]
[169.06332397 -219.44538879]
[165.74105835 -204.81791687]
[170.46731567 -190.69305420]
[159.86566162 -178.94931030]
[156.54339600 -164.32185364]
[153.22113037 -149.69439697]
[159.30741882 -133.23461914]
[146.68498230 -119.82731628]
[143.58087158 -105.15201569]
[140.47676086 -90.47671509]
[137.37265015 -75.80141449]
[134.26853943 -61.12611008]
[131.27375793 -46.42810440]
[128.38848877 -31.70821571]
[125.50321960 -16.98832321]
[137.52873230 -1.66183436]
[134.35655212 17.86867714]
[117.58893585 28.93785095]
[115.36382294 43.77189636]
[122.65746307 59.73340225]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[99.79032135 157.69268799]
[97.78630829 172.55821228]
[103.61053467 187.26838684]
[94.24221802 198.84785461]
[92.23820496 213.71337891]
[90.78878784 228.64318848]
[89.89597321 243.61659241]
[89.00315857 258.58999634]
[88.11033630 273.56341553]
[98.15084076 282.54132080]
[101.14365387 295.47396851]
[96.21446991 307.58947754]
[85.37039948 314.54904175]
[84.25475311 329.50750732]
[83.13909912 344.46594238]
[82.02345276 359.42440796]
[81.01919556 374.39074707]
[80.57258606 389.38409424]
[80.57258606 404.38409424]
[80.57258606 419.38409424]
[90.44762421 408.09323120]
[105.04726410 404.65078735]
[118.92620850 410.34069824]
[126.90793610 423.04077148]
[126.01548004 438.01419067]
[116.58168793 449.67626953]
[102.12514496 453.67727661]
[88.03777313 448.52499390]
[79.57348633 436.13995361]
[77.79102325 451.03369141]
[76.00855255 465.92739868]
[74.22608948 480.82110596]
[76.31356049 489.71383667]
[72.30461121 495.92269897]
[70.30059814 510.78823853]
[68.29657745 525.65374756]
[66.29256439 540.51928711]
[64.28855133 555.38482666]
[62.28453827 570.25036621]
[76.08529663 576.39166260]
[87.59591675 586.17340088]
[95.88328552 598.80255127]
[100.27559662 613.25543213]
[100.41677094 628.36029053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[21 198]
[22 197]
[23 196]
[24 195]
[25 186]
[26 185]
[27 184]
[32 183]
[34 182]
[35 181]
[36 180]
[37 179]
[40 175]
[41 174]
[42 173]
[43 172]
[49 171]
[50 170]
[52 168]
[53 167]
[54 166]
[55 165]
[56 164]
[58 162]
[59 161]
[62 159]
[63 158]
[69 155]
[70 154]
[71 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[80 146]
[81 145]
[82 144]
[84 142]
[85 141]
[86 139]
[87 138]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
