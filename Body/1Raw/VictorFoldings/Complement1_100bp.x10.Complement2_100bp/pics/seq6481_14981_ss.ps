%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[23.12203217 590.22686768]
[12.07903385 600.38958740]
[0.28170678 609.66595459]
[-12.19899940 618.00024414]
[-25.28802299 625.34234619]
[-38.90664291 631.64801025]
[-52.97295380 636.87933350]
[-67.40236664 641.00494385]
[-82.10808563 643.99993896]
[-97.00167847 645.84637451]
[-111.99356842 646.53308105]
[-126.99358368 646.05596924]
[-141.91152954 644.41790771]
[-156.65766907 641.62872314]
[-171.14332581 637.70520020]
[-185.28138733 632.67095947]
[-198.98680115 626.55621338]
[-212.17716980 619.39782715]
[-224.77313232 611.23876953]
[-236.69895935 602.12817383]
[-247.88291931 592.12078857]
[-258.25775146 581.27685547]
[-267.76104736 569.66156006]
[-276.33566284 557.34472656]
[-283.93002319 544.40045166]
[-290.49844360 530.90661621]
[-296.00146484 516.94433594]
[-300.40594482 502.59756470]
[-303.68542480 487.95266724]
[-305.82012939 473.09765625]
[-306.79730225 458.12188721]
[-306.61099243 443.11544800]
[-305.26235962 428.16854858]
[-302.75949097 413.37112427]
[-299.11746216 398.81213379]
[-294.35818481 384.57916260]
[-288.51025391 370.75781250]
[-281.60885620 357.43118286]
[-273.69546509 344.67944336]
[-264.81771851 332.57928467]
[-255.02899170 321.20346069]
[-244.38816833 310.62042236]
[-232.95921326 300.89379883]
[-220.81088257 292.08206177]
[-208.01625061 284.23825073]
[-194.65223694 277.40951538]
[-180.79924011 271.63693237]
[-166.54055786 266.95520020]
[-151.96195984 263.39251709]
[-137.15112305 260.97027588]
[-122.19711304 259.70303345]
[-107.18986511 259.59844971]
[-92.21965027 260.65713501]
[-77.37648773 262.87274170]
[-62.74964905 266.23190308]
[-48.42710876 270.71444702]
[-34.49500275 276.29339600]
[-21.03712463 282.93521118]
[-13.37652683 270.03887939]
[-5.71592903 257.14254761]
[1.94466829 244.24623108]
[9.60526562 231.34991455]
[17.26586342 218.45358276]
[24.34296799 205.22805786]
[30.82246399 191.69970703]
[37.30195999 178.17135620]
[43.78145599 164.64302063]
[50.26095200 151.11466980]
[38.13659668 159.94642639]
[23.82103348 164.42579651]
[8.82501984 164.08003235]
[-5.26888180 158.94564819]
[-16.97330666 149.56446838]
[-25.05305862 136.92652893]
[-28.65546417 122.36553192]
[-27.40035057 107.41812897]
[-21.42017555 93.66177368]
[-11.34603786 82.54818726]
[1.75891197 75.25022125]
[16.51167870 72.53804779]
[31.35536766 74.69789124]
[44.72348785 81.50181580]
[55.20526886 92.23178101]
[61.69454956 105.75543976]
[63.50649261 120.64559937]
[60.44981384 135.33103943]
[70.11062622 123.85634613]
[79.77143097 112.38164520]
[89.43224335 100.90694427]
[98.65933990 89.08067322]
[100.46447754 73.36278534]
[114.18780518 67.57318878]
[122.96840668 55.41173172]
[131.74900818 43.25027466]
[133.55415344 27.53238487]
[147.27748108 21.74278450]
[156.05807495 9.58132935]
[164.83868408 -2.58012652]
[173.61929321 -14.74158192]
[162.50500488 -24.83873940]
[152.59114075 -36.11683273]
[144.00239563 -48.43403244]
[136.84675598 -61.63543320]
[131.21424866 -75.55501556]
[127.17566681 -90.01772308]
[124.78182983 -104.84167480]
[124.06283569 -119.84044647]
[125.02771759 -134.82540894]
[127.66435242 -149.60810852]
[131.93957520 -164.00263977]
[137.79962158 -177.82797241]
[145.17079163 -190.91023254]
[153.96038818 -203.08491516]
[164.05787659 -214.19891357]
[175.33627319 -224.11242676]
[187.65373230 -232.70082092]
[200.85534668 -239.85604858]
[214.77510071 -245.48814392]
[229.23793030 -249.52629089]
[244.06195068 -251.91967773]
[259.06072998 -252.63822937]
[274.04565430 -251.67289734]
[288.82827759 -249.03582764]
[303.22268677 -244.76017761]
[317.04785156 -238.89971924]
[330.12991333 -231.52815247]
[342.30432129 -222.73818970]
[353.41799927 -212.64036560]
[363.33117676 -201.36167908]
[371.91918945 -189.04396057]
[379.07403564 -175.84213257]
[384.70571899 -161.92221069]
[388.74343872 -147.45925903]
[391.13638306 -132.63517761]
[391.85449219 -117.63636017]
[390.88870239 -102.65145874]
[388.25119019 -87.86891937]
[383.97509766 -73.47463989]
[378.11422729 -59.64965820]
[370.74227905 -46.56782913]
[361.95196533 -34.39366913]
[351.85379028 -23.28028488]
[340.57479858 -13.36743832]
[328.25683594 -4.77979374]
[315.05480957 2.37465096]
[301.13470459 8.00592041]
[286.67163086 12.04319477]
[271.84747314 14.43570232]
[256.84863281 15.15335464]
[241.86376953 14.18712521]
[227.08131409 11.54916668]
[212.68716431 7.27265358]
[198.86235046 1.41136765]
[185.78074646 -5.96097898]
[177.00013733 6.20047665]
[168.21954346 18.36193275]
[159.43893433 30.52338791]
[158.26184082 45.37141037]
[143.91047668 52.03087616]
[135.12986755 64.19233704]
[126.34926605 76.35379028]
[125.17218018 91.20181274]
[110.82080078 97.86128235]
[125.81913757 98.08431244]
[135.11642456 109.85548401]
[131.85903931 124.49752808]
[118.44820404 131.21687317]
[104.76989746 125.06026459]
[100.90694427 110.56775665]
[91.24613190 122.04245758]
[81.58532715 133.51715088]
[71.92451477 144.99185181]
[63.78929901 157.59416199]
[57.30980301 171.12251282]
[50.83030701 184.65086365]
[44.35081100 198.17919922]
[37.87131500 211.70755005]
[52.34196854 207.75784302]
[65.43496704 215.07720947]
[69.65005493 229.47280884]
[62.57263565 242.69816589]
[48.25697327 247.17720032]
[34.90372849 240.34413147]
[30.16218948 226.11418152]
[22.50159264 239.01051331]
[14.84099483 251.90682983]
[7.18039751 264.80316162]
[-0.48019969 277.69949341]
[-8.14079666 290.59582520]
[4.12949800 299.23687744]
[15.69327354 308.80282593]
[26.48098183 319.23614502]
[36.42774582 330.47402954]
[45.47373962 342.44894409]
[53.56455994 355.08883667]
[60.65155029 368.31768799]
[66.69208527 382.05596924]
[71.64984131 396.22103882]
[75.49499512 410.72769165]
[78.20442200 425.48867798]
[79.76182556 440.41528320]
[80.15784454 455.41766357]
[79.39009094 470.40560913]
[77.46318817 485.28900146]
[74.38872528 499.97833252]
[70.18518829 514.38519287]
[64.87785339 528.42303467]
[58.49865341 542.00738525]
[51.08594513 555.05651855]
[42.68431473 567.49200439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 189]
[59 188]
[60 187]
[61 186]
[62 185]
[63 184]
[64 177]
[65 176]
[66 175]
[67 174]
[68 173]
[86 172]
[87 171]
[88 170]
[89 169]
[90 163]
[92 161]
[93 160]
[94 159]
[96 157]
[97 156]
[98 155]
[99 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
