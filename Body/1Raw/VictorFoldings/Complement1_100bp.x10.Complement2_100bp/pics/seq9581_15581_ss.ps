%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[87.01089478 826.41381836]
[72.00385284 826.86828613]
[57.03152466 825.75158691]
[42.25794220 823.07598877]
[27.84497452 818.87072754]
[13.95054340 813.18194580]
[0.72687966 806.07189941]
[-11.68112946 797.61859131]
[-23.13753700 787.91455078]
[-33.51681900 777.06610107]
[-42.70524979 765.19213867]
[-50.60216522 752.42279053]
[-57.12103653 738.89794922]
[-62.19043732 724.76574707]
[-65.75482941 710.18109131]
[-67.77516174 695.30371094]
[-68.22928619 680.29663086]
[-67.11223602 665.32434082]
[-64.43625641 650.55084229]
[-60.23065567 636.13800049]
[-54.54151535 622.24365234]
[-47.43117142 609.02020264]
[-38.97752762 596.61236572]
[-29.27320480 585.15618896]
[-18.42453194 574.77722168]
[-6.55037022 565.58905029]
[6.21917772 557.69244385]
[19.74420357 551.17388916]
[33.87651825 546.10485840]
[48.46128464 542.54083252]
[63.33869553 540.52081299]
[78.34575653 540.06707764]
[79.46140289 525.10864258]
[80.57705688 510.15017700]
[81.69270325 495.19171143]
[82.80834961 480.23327637]
[83.92399597 465.27481079]
[85.03964996 450.31634521]
[78.27038574 437.04885864]
[87.01266479 423.86239624]
[80.24340820 410.59487915]
[88.98568726 397.40841675]
[90.10134125 382.44995117]
[83.33207703 369.18246460]
[92.07435608 355.99600220]
[93.19001007 341.03753662]
[94.30565643 326.07910156]
[95.42130280 311.12063599]
[95.86791229 296.12728882]
[95.64458466 281.12893677]
[95.42125702 266.13061523]
[80.90088654 262.51007080]
[67.80245972 255.24865723]
[57.02176666 244.83610535]
[49.29786301 231.97789001]
[45.16241074 217.54742432]
[44.90307999 202.52670288]
[48.54355240 187.93957520]
[55.84150314 174.78181458]
[66.30470276 163.95326233]
[79.22422791 156.19625854]
[93.72249603 152.04469299]
[93.49916840 137.04635620]
[93.16419220 122.05009460]
[92.71759033 107.05674744]
[89.34886932 99.73388672]
[92.37762451 91.83721161]
[84.43571472 78.15376282]
[91.98266602 65.31270599]
[91.75933838 50.31436539]
[88.50251007 41.78026581]
[91.64601135 35.09145355]
[91.64601135 20.09145355]
[91.64601135 5.09145451]
[91.64601135 -9.90854549]
[91.64601135 -24.90854645]
[91.64601135 -39.90854645]
[91.64601135 -54.90854645]
[83.90871429 -68.70871735]
[91.64601135 -81.43598938]
[91.64601135 -96.43598938]
[91.64601135 -111.43598938]
[91.64601135 -126.43598938]
[91.64601135 -141.43598938]
[89.34243774 -145.11668396]
[88.42246246 -148.95310974]
[88.76515198 -152.49118042]
[90.11450195 -155.36274719]
[92.11920929 -157.32215881]
[93.01203156 -172.29556274]
[86.10984802 -186.53179932]
[94.59097290 -198.77597046]
[95.48378754 -213.74937439]
[87.52182770 -223.89678955]
[88.57371521 -236.34980774]
[97.53206635 -244.47842407]
[90.84260559 -258.81585693]
[99.50508881 -270.93240356]
[85.42633820 -276.43515015]
[73.59607697 -285.84451294]
[65.06623077 -298.32382202]
[60.59527206 -312.76342773]
[60.58075714 -327.87936401]
[65.02397919 -342.32751465]
[73.52983856 -354.82318115]
[85.34201813 -364.25524902]
[99.41016388 -369.78503418]
[114.48336792 -370.92080688]
[129.22131348 -367.56161499]
[142.31353760 -360.00613403]
[152.59585571 -348.92617798]
[159.15399170 -335.30700684]
[161.40480042 -320.35958862]
[159.14813232 -305.41305542]
[152.58465576 -291.79641724]
[142.29797363 -280.72052002]
[129.20280457 -273.17016602]
[114.46353912 -269.81674194]
[121.23279572 -256.54925537]
[112.49051666 -243.36277771]
[120.95111847 -227.98796082]
[110.45719147 -212.85656738]
[109.56437683 -197.88316345]
[116.53041840 -184.71792603]
[107.98543549 -171.40274048]
[107.09262085 -156.42933655]
[106.64601135 -141.43598938]
[106.64601135 -126.43598938]
[106.64601135 -111.43598938]
[106.64601135 -96.43598938]
[106.64601135 -81.43598938]
[114.38330841 -68.70871735]
[106.64601135 -54.90854645]
[106.64601135 -39.90854645]
[106.64601135 -24.90854645]
[106.64601135 -9.90854549]
[106.64601135 5.09145451]
[106.64601135 20.09145355]
[106.64601135 35.09145355]
[106.75767517 50.09103775]
[106.98100281 65.08937836]
[114.90693665 77.70004272]
[107.37596130 91.61387634]
[107.71093750 106.61013794]
[108.15753937 121.60349274]
[111.54106903 130.08815002]
[108.49750519 136.82302856]
[108.72083282 151.82136536]
[123.33628082 155.53941345]
[136.48103333 162.90832520]
[147.26200867 173.42054749]
[154.94847107 186.35517883]
[159.02165222 200.82746887]
[159.20965576 215.84922791]
[155.50567627 230.39643860]
[148.16804504 243.47892761]
[137.70214844 254.20783997]
[124.82572937 261.85601807]
[110.41959381 265.90728760]
[110.64292145 280.90560913]
[110.86624908 295.90396118]
[122.06368256 285.92309570]
[137.04626465 286.64562988]
[147.23130798 297.65768433]
[146.78433228 312.65103149]
[135.96141052 323.03680420]
[120.96238708 322.86557007]
[110.37976074 312.23629761]
[109.26410675 327.19473267]
[108.14846039 342.15319824]
[107.03281403 357.11163330]
[113.72227478 371.44906616]
[105.05979156 383.56561279]
[103.94414520 398.52407837]
[110.63360596 412.86148071]
[101.97112274 424.97802734]
[108.66058350 439.31546021]
[99.99810028 451.43200684]
[98.88245392 466.39047241]
[97.76680756 481.34890747]
[96.65115356 496.30737305]
[95.53550720 511.26580811]
[94.41986084 526.22424316]
[93.30420685 541.18273926]
[108.07791901 543.85760498]
[122.49108887 548.06219482]
[136.38580322 553.75030518]
[149.60980225 560.85968018]
[162.01823425 569.31243896]
[173.47511292 579.01593018]
[183.85491943 589.86383057]
[193.04393005 601.73730469]
[200.94146729 614.50628662]
[207.46098328 628.03082275]
[212.53108215 642.16278076]
[216.09617615 656.74731445]
[218.11723328 671.62457275]
[218.57208252 686.63159180]
[217.45576477 701.60394287]
[214.78050232 716.37762451]
[210.57559204 730.79064941]
[204.88713074 744.68524170]
[197.77743530 757.90905762]
[189.32438660 770.31726074]
[179.62062073 781.77392578]
[168.77246094 792.15350342]
[156.89874268 801.34222412]
[144.12957764 809.23944092]
[130.60487366 815.75860596]
[116.47280121 820.82836914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[37 179]
[38 178]
[40 176]
[42 174]
[43 173]
[45 171]
[46 170]
[47 169]
[48 168]
[49 161]
[50 160]
[51 159]
[62 148]
[63 147]
[64 145]
[65 144]
[67 143]
[69 141]
[70 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[89 126]
[90 125]
[92 123]
[93 122]
[96 120]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
