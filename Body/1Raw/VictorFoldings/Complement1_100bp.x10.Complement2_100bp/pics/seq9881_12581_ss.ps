%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[136.36074829 640.78521729]
[124.81221008 631.20336914]
[113.95225525 620.84759521]
[103.83264160 609.76721191]
[94.50158691 598.01513672]
[86.00355530 585.64727783]
[78.37905884 572.72259521]
[71.66441345 559.30267334]
[65.89163208 545.45147705]
[61.08822250 531.23498535]
[57.27706909 516.72100830]
[54.47633743 501.97866821]
[52.69937515 487.07821655]
[51.95465088 472.09069824]
[52.24571228 457.08749390]
[53.57117081 442.14013672]
[55.92471313 427.31982422]
[59.29512405 412.69720459]
[63.66633606 398.34194946]
[69.01752472 384.32247925]
[75.32318115 370.70559692]
[82.55326843 357.55621338]
[90.67331696 344.93695068]
[99.64464569 332.90798950]
[109.42448425 321.52664185]
[119.96623993 310.84713745]
[131.21968079 300.92034912]
[143.13116455 291.79360962]
[155.64392090 283.51040649]
[168.69834900 276.11022949]
[162.21885681 262.58187866]
[155.73934937 249.05354309]
[149.25985718 235.52519226]
[143.53543091 230.85050964]
[142.78628540 221.74685669]
[130.19288635 219.01995850]
[121.33730316 209.39392090]
[119.61746216 196.23136902]
[125.88341522 184.30859375]
[119.80957794 170.59333801]
[113.73574829 156.87806702]
[111.17230988 155.74363708]
[108.90377045 153.52545166]
[107.34518433 150.33073425]
[106.86513519 146.41485596]
[107.73575592 142.16091919]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[77.58953094 63.33409119]
[71.11003113 49.80574417]
[64.63053894 36.27739716]
[58.15104294 22.74905205]
[45.21163940 13.64507294]
[46.69207764 -1.17577612]
[40.21258163 -14.70412159]
[27.27318001 -23.80810165]
[28.75361824 -38.62895203]
[22.27412224 -52.15729523]
[15.79462719 -65.68563843]
[2.85522485 -74.78961945]
[4.33566236 -89.61047363]
[-2.14383340 -103.13881683]
[-16.37180328 -98.33026123]
[-31.07565117 -95.27179718]
[-46.04095459 -94.00802612]
[-61.04946899 -94.55738831]
[-75.88233185 -96.91185760]
[-90.32323456 -101.03710938]
[-104.16159058 -106.87297821]
[-117.19557953 -114.33436584]
[-129.23515320 -123.31246185]
[-140.10472107 -133.67633057]
[-149.64576721 -145.27485657]
[-157.71917725 -157.93887329]
[-164.20719910 -171.48373413]
[-169.01522827 -185.71188354]
[-172.07313538 -200.41583252]
[-173.33634949 -215.38119507]
[-172.78642273 -230.38967896]
[-170.43139648 -245.22245789]
[-166.30560303 -259.66320801]
[-160.46922302 -273.50134277]
[-153.00733948 -286.53506470]
[-144.02880859 -298.57427979]
[-133.66452026 -309.44348145]
[-122.06564331 -318.98410034]
[-109.40132141 -327.05700684]
[-95.85622406 -333.54452515]
[-81.62789917 -338.35202026]
[-66.92382050 -341.40939331]
[-51.95842361 -342.67202759]
[-36.94994736 -342.12155151]
[-22.11726189 -339.76599121]
[-7.67666817 -335.63964844]
[6.16124678 -329.80273438]
[19.19468498 -322.34039307]
[31.23358154 -313.36138916]
[42.10237122 -302.99670410]
[51.64255905 -291.39746094]
[59.71501541 -278.73284912]
[66.20202637 -265.18750000]
[71.00898743 -250.95899963]
[74.06580353 -236.25480652]
[75.32788849 -221.28936768]
[74.77684784 -206.28089905]
[72.42071533 -191.44830322]
[68.29384613 -177.00787354]
[62.45642090 -163.17016602]
[54.99356842 -150.13700867]
[46.01412582 -138.09844971]
[35.64903259 -127.23004913]
[24.04944038 -117.69029999]
[11.38451195 -109.61830902]
[17.86400795 -96.08996582]
[30.33995247 -87.95362091]
[29.32297325 -72.16513824]
[35.80246735 -58.63679123]
[42.28196335 -45.10844803]
[54.75790787 -36.97210312]
[53.74092865 -21.18361664]
[60.22042465 -7.65527201]
[72.69637299 0.48106983]
[71.67938995 16.26955605]
[78.15888214 29.79790306]
[84.63838196 43.32624817]
[91.11787415 56.85459518]
[97.11072540 43.10374832]
[111.02059937 37.48990250]
[124.87930298 43.22892761]
[130.74794006 57.03324509]
[125.26467133 70.99511719]
[111.57058716 77.11654663]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.78822327 136.91419983]
[127.45101166 150.80422974]
[133.52484131 164.51950073]
[139.59867859 178.23477173]
[156.03036499 184.23635864]
[162.90229797 199.95550537]
[156.40960693 215.46949768]
[162.78820801 229.04570007]
[169.26770020 242.57405090]
[175.74719238 256.10238647]
[182.22669983 269.63073730]
[196.17535400 264.09759521]
[210.47251892 259.54000854]
[225.05004883 255.97962952]
[239.83848572 253.43347168]
[254.76734924 251.91366577]
[269.76547241 251.42742920]
[284.76144409 251.97709656]
[299.68371582 253.56005859]
[314.46127319 256.16876221]
[329.02359009 259.79074097]
[343.30136108 264.40878296]
[357.22650146 270.00088501]
[370.73263550 276.54037476]
[383.75543213 283.99606323]
[396.23281860 292.33245850]
[408.10531616 301.50982666]
[419.31637573 311.48443604]
[429.81256104 322.20874023]
[439.54385376 333.63165283]
[448.46389771 345.69869995]
[456.53012085 358.35241699]
[463.70416260 371.53247070]
[469.95178223 385.17605591]
[475.24322510 399.21820068]
[479.55328369 413.59191895]
[482.86138916 428.22875977]
[485.15182495 443.05895996]
[486.41360474 458.01184082]
[486.64077759 473.01614380]
[485.83224487 488.00036621]
[483.99185181 502.89309692]
[481.12838745 517.62335205]
[477.25546265 532.12097168]
[472.39157104 546.31689453]
[466.55984497 560.14337158]
[459.78814697 573.53460693]
[452.10867310 586.42669678]
[443.55807495 598.75823975]
[434.17706299 610.47052002]
[424.01034546 621.50769043]
[413.10638428 631.81713867]
[401.51715088 641.34973145]
[389.29788208 650.06005859]
[376.50677490 657.90661621]
[363.20480347 664.85198975]
[349.45535278 670.86303711]
[335.32394409 675.91125488]
[320.87792969 679.97247314]
[306.18615723 683.02734375]
[291.31863403 685.06134033]
[276.34619141 686.06475830]
[261.34020996 686.03277588]
[246.37217712 684.96563721]
[231.51342773 682.86834717]
[216.83479309 679.75097656]
[202.40620422 675.62829590]
[188.29643250 670.51995850]
[174.57269287 664.45037842]
[161.30041504 657.44842529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 151]
[31 150]
[32 149]
[33 148]
[35 147]
[39 144]
[40 143]
[41 142]
[46 141]
[47 140]
[48 139]
[50 137]
[51 136]
[52 129]
[53 128]
[54 127]
[55 126]
[57 124]
[58 123]
[60 121]
[61 120]
[62 119]
[64 117]
[65 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
