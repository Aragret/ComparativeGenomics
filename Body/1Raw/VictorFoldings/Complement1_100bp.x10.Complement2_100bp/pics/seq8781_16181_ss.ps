%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[41.14133835 367.93597412]
[39.23886490 382.83038330]
[35.70940018 397.42510986]
[30.59579086 411.54296875]
[23.96010780 425.01260376]
[15.88290405 437.67050171]
[6.46222878 449.36297607]
[-4.18755913 459.94812012]
[-15.93718147 469.29742432]
[-28.64400864 477.29739380]
[-42.15378952 483.85095215]
[-56.30253220 488.87850952]
[-70.91847992 492.31903076]
[-85.82420349 494.13079834]
[-100.83877563 494.29177856]
[-115.77992249 492.79998779]
[-130.46627808 489.67361450]
[-144.71954346 484.95056152]
[-158.36672974 478.68817139]
[-171.24215698 470.96243286]
[-183.18951416 461.86718750]
[-194.06379700 451.51281738]
[-203.73298645 440.02499390]
[-212.07972717 427.54318237]
[-219.00265503 414.21893311]
[-224.41778564 400.21392822]
[-228.25933838 385.69824219]
[-230.48069763 370.84802246]
[-231.05491638 355.84356689]
[-229.97499084 340.86703491]
[-227.25405884 326.10018921]
[-222.92512512 311.72229004]
[-217.04077148 297.90789795]
[-209.67239380 284.82470703]
[-200.90945435 272.63150024]
[-190.85833740 261.47631836]
[-179.64102173 251.49458313]
[-167.39370728 242.80743408]
[-154.26506042 235.52033997]
[-140.41444397 229.72177124]
[-126.00997925 225.48210144]
[-111.22654724 222.85279846]
[-96.24358368 221.86579895]
[-81.24298859 222.53305054]
[-66.40684509 224.84648132]
[-51.91524506 228.77798462]
[-37.94411087 234.27986145]
[-24.66303635 241.28530884]
[-16.24841881 228.86781311]
[-7.83379984 216.45031738]
[0.58081901 204.03282166]
[8.99543762 191.61532593]
[8.69271851 188.10238647]
[10.07648182 184.26829529]
[13.27913952 180.90730286]
[18.07337952 178.84275818]
[27.03407669 166.81338501]
[35.99477005 154.78401184]
[21.66278076 159.21052551]
[7.01601362 155.97444153]
[-4.11689806 145.92166138]
[-8.82583904 131.67996216]
[-5.87990332 116.97209930]
[3.95084882 105.64265442]
[18.09668159 100.65312195]
[32.85990906 103.30776215]
[44.38145828 112.91265106]
[49.64962769 126.95709991]
[47.28768158 141.76910400]
[57.93369293 131.20205688]
[68.57969666 120.63500977]
[79.22570801 110.06795502]
[89.87171936 99.50090790]
[92.91936493 92.03871155]
[100.75577545 88.85726166]
[111.55792999 78.44989014]
[122.36008453 68.04251862]
[133.16224670 57.63514328]
[118.44375610 60.52759552]
[103.90630341 56.83132935]
[92.35682678 47.26003647]
[86.02536011 33.66178513]
[86.13439941 18.66217995]
[92.66289520 5.15741396]
[104.35030365 -4.24495554]
[118.93996429 -7.72947836]
[133.61483765 -4.62334776]
[145.54144287 4.47369099]
[152.41693115 17.80514336]
[152.91375732 32.79691315]
[146.93525696 46.55535507]
[159.41503906 38.23340988]
[171.89483643 29.91146660]
[184.37463379 21.58952141]
[196.85443115 13.26757812]
[209.33421326 4.94563484]
[216.52314758 -9.14797688]
[231.40469360 -9.77169228]
[224.05860901 -22.85824394]
[217.73585510 -36.46873474]
[212.47352600 -50.52329636]
[208.30252075 -64.93944550]
[205.24729919 -79.63259125]
[203.32580566 -94.51649475]
[202.54930115 -109.50381470]
[202.92234802 -124.50659943]
[204.44276428 -139.43681335]
[207.10162354 -154.20681763]
[210.88331604 -168.72994995]
[215.76565552 -182.92098999]
[221.72000122 -196.69664001]
[228.71138000 -209.97607422]
[236.69879150 -222.68135071]
[245.63534546 -234.73791504]
[255.46861267 -246.07501221]
[266.14086914 -256.62609863]
[277.58950806 -266.32928467]
[289.74731445 -275.12759399]
[302.54296875 -282.96942139]
[315.90133667 -289.80874634]
[329.74407959 -295.60540771]
[343.98992920 -300.32537842]
[358.55529785 -303.94100952]
[373.35470581 -306.43106079]
[388.30130005 -307.78091431]
[403.30737305 -307.98263550]
[418.28485107 -307.03506470]
[433.14584351 -304.94375610]
[447.80316162 -301.72097778]
[462.17074585 -297.38565063]
[476.16430664 -291.96319580]
[489.70172119 -285.48544312]
[502.70355225 -277.99044800]
[515.09344482 -269.52212524]
[526.79882812 -260.13021851]
[537.75085449 -249.86981201]
[547.88531494 -238.80114746]
[557.14276123 -226.98918152]
[565.46881104 -214.50320435]
[572.81463623 -201.41651917]
[579.13714600 -187.80590820]
[584.39916992 -173.75123596]
[588.56994629 -159.33500671]
[591.62487793 -144.64181519]
[593.54608154 -129.75787354]
[594.32226562 -114.77053833]
[593.94897461 -99.76775360]
[592.42828369 -84.83757782]
[589.76910400 -70.06761932]
[585.98712158 -55.54455185]
[581.10455322 -41.35360718]
[575.14996338 -27.57806778]
[568.15832520 -14.29876995]
[560.17065430 -1.59364498]
[551.23388672 10.46274757]
[541.40039062 21.79965591]
[530.72790527 32.35054779]
[519.27911377 42.05350876]
[507.12115479 50.85159683]
[494.32534790 58.69317627]
[480.96682739 65.53223419]
[467.12396240 71.32863617]
[452.87802124 76.04836273]
[438.31259155 79.66371155]
[423.51315308 82.15348053]
[408.56652832 83.50304413]
[393.56045532 83.70449066]
[378.58297729 82.75663757]
[363.72204590 80.66504669]
[349.06478882 77.44198608]
[334.69729614 73.10637665]
[320.70382690 67.68366241]
[307.16653442 61.20566177]
[294.16485596 53.71039200]
[281.77508545 45.24184418]
[270.06994629 35.84970856]
[259.11810303 25.58910751]
[248.98384094 14.52025223]
[239.72663879 2.70810175]
[233.43034363 16.20647240]
[217.65615845 17.42542839]
[205.17637634 25.74737167]
[192.69657898 34.06931686]
[180.21678162 42.39125824]
[167.73698425 50.71320343]
[155.25720215 59.03514862]
[143.56961060 68.43730164]
[132.76745605 78.84467316]
[121.96530151 89.25204468]
[111.16314697 99.65941620]
[100.43876648 110.14691925]
[89.79275513 120.71396637]
[79.14675140 131.28102112]
[68.50074005 141.84806824]
[57.85472870 152.41511536]
[48.02415085 163.74470520]
[39.06345367 175.77407837]
[30.10275650 187.80345154]
[21.41293335 200.02993774]
[12.99831486 212.44743347]
[4.58369589 224.86492920]
[-3.83092260 237.28242493]
[-12.24554157 249.69992065]
[-0.81681091 259.43887329]
[9.47116756 270.37600708]
[18.49350739 282.37854004]
[26.14068604 295.30075073]
[32.31987381 308.98580933]
[36.95605850 323.26757812]
[39.99296570 337.97268677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[56 198]
[57 197]
[58 196]
[69 195]
[70 194]
[71 193]
[72 192]
[73 191]
[75 190]
[76 189]
[77 188]
[78 187]
[91 186]
[92 185]
[93 184]
[94 183]
[95 182]
[96 181]
[98 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
