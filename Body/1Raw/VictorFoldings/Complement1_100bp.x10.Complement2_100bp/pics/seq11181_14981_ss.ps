%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[203.30020142 340.14285278]
[213.92524719 329.50253296]
[226.19577026 320.81100464]
[219.71627808 307.28268433]
[213.23678589 293.75433350]
[206.75727844 280.22598267]
[203.57109070 278.71585083]
[200.95805359 275.58743286]
[199.67079163 271.12689209]
[200.30567932 265.94577026]
[194.43672180 252.14160156]
[188.56776428 238.33741760]
[181.19706726 225.27323914]
[172.41647339 213.11178589]
[163.63586426 200.95033264]
[154.85525513 188.78886414]
[146.07466125 176.62741089]
[132.35133362 170.83781433]
[130.54618835 155.11991882]
[121.76559448 142.95846558]
[112.98498535 130.79701233]
[98.35819244 133.38218689]
[84.05566406 129.37420654]
[72.90222168 119.56466675]
[67.10073090 105.89100647]
[67.79701233 91.05384064]
[74.85355377 77.98358917]
[66.07295227 65.82213593]
[57.29235077 53.66067505]
[48.51174545 41.49922180]
[48.42677689 56.49898148]
[40.93878937 69.49629211]
[28.00512695 77.09368134]
[13.00661850 77.30522156]
[-0.13616212 70.07560730]
[-7.98772430 57.29464722]
[-8.49568844 42.30324936]
[-1.52727342 29.02013397]
[11.09599304 20.91747284]
[26.07442093 20.11328125]
[39.49201584 26.81718826]
[32.77535629 20.62652588]
[32.61108017 13.23769665]
[25.93088341 -0.19267939]
[19.25068855 -13.62305546]
[12.57049465 -27.05343056]
[-0.50301790 -35.96375275]
[0.75659531 -50.80500031]
[-5.92359924 -64.23537445]
[-18.99711227 -73.14569855]
[-17.73749924 -87.98694611]
[-24.41769409 -101.41732025]
[-38.35557938 -95.85062408]
[-52.70082474 -91.43851471]
[-67.35797119 -88.21037292]
[-82.22946930 -86.18767548]
[-97.21635437 -85.38388062]
[-112.21888733 -85.80433655]
[-127.13722992 -87.44625092]
[-141.87210083 -90.29869843]
[-156.32543945 -94.34268188]
[-170.40106201 -99.55130768]
[-184.00527954 -105.88990021]
[-197.04759216 -113.31627655]
[-209.44116211 -121.78102875]
[-221.10354614 -131.22779846]
[-231.95712280 -141.59375000]
[-241.92965698 -152.80987549]
[-250.95477295 -164.80154419]
[-258.97241211 -177.48893738]
[-265.92922974 -190.78764343]
[-271.77893066 -204.60913086]
[-276.48260498 -218.86145020]
[-280.00888062 -233.44973755]
[-282.33435059 -248.27690125]
[-283.44351196 -263.24429321]
[-283.32901001 -278.25228882]
[-281.99157715 -293.20098877]
[-279.44012451 -307.99096680]
[-275.69165039 -322.52374268]
[-270.77105713 -336.70260620]
[-264.71115112 -350.43322754]
[-257.55221558 -363.62423706]
[-249.34188843 -376.18780518]
[-240.13484192 -388.04037476]
[-229.99232483 -399.10302734]
[-218.98184204 -409.30212402]
[-207.17666626 -418.56985474]
[-194.65536499 -426.84451294]
[-181.50125122 -434.07101440]
[-167.80189514 -440.20126343]
[-153.64843750 -445.19451904]
[-139.13507080 -449.01748657]
[-124.35839081 -451.64474487]
[-109.41673279 -453.05883789]
[-94.40953064 -453.25030518]
[-79.43665314 -452.21792603]
[-64.59775543 -449.96853638]
[-49.99157333 -446.51712036]
[-35.71532059 -441.88662720]
[-21.86400032 -436.10787964]
[-8.52979565 -429.21936035]
[4.19855738 -421.26690674]
[16.23635292 -412.30340576]
[27.50347900 -402.38851929]
[37.92495346 -391.58825684]
[47.43142319 -379.97448730]
[55.95962524 -367.62448120]
[63.45280075 -354.62045288]
[69.86108398 -341.04888916]
[75.14183044 -327.00018311]
[79.25989532 -312.56777954]
[82.18787384 -297.84771729]
[83.90628052 -282.93801880]
[84.40367889 -267.93783569]
[83.67676544 -252.94702148]
[81.73036194 -238.06533813]
[78.57743835 -223.39183044]
[74.23896790 -209.02413940]
[68.74382782 -195.05789185]
[62.12857819 -181.58601379]
[54.43725586 -168.69818115]
[45.72103882 -156.48014832]
[36.03793335 -145.01322937]
[25.45238113 -134.37373352]
[14.03482819 -124.63246155]
[1.86125731 -115.85425568]
[-10.98731709 -108.09751892]
[-4.30712271 -94.66714478]
[8.28857803 -86.71745300]
[7.50677681 -70.91557312]
[14.18697166 -57.48519516]
[26.78267097 -49.53550339]
[26.00087166 -33.73362732]
[32.68106461 -20.30324936]
[39.36125946 -6.87287426]
[46.04145432 6.55750179]
[52.82144547 19.93777466]
[60.67320251 32.71861649]
[69.45380402 44.88007355]
[78.23440552 57.04153061]
[87.01501465 69.20298767]
[101.64180756 66.61781311]
[115.94433594 70.62579346]
[127.09777832 80.43533325]
[132.89927673 94.10899353]
[132.20298767 108.94615936]
[125.14644623 122.01641083]
[133.92704773 134.17787170]
[142.70765686 146.33932495]
[157.05903625 152.99879456]
[158.23611450 167.84681702]
[167.01672363 180.00827026]
[175.79731750 192.16972351]
[184.57792664 204.33117676]
[193.35852051 216.49263000]
[191.74671936 201.57948303]
[195.56056213 187.07243347]
[204.29827881 174.88012695]
[216.81028748 166.60668945]
[231.45039368 163.34060669]
[246.29244995 165.51161194]
[259.38372803 172.83407593]
[269.00186157 184.34457397]
[273.88137817 198.52873230]
[273.38034058 213.52035522]
[267.56463623 227.34706116]
[257.19946289 238.18968201]
[243.64846802 244.62171936]
[228.69458008 245.79689026]
[214.30520630 241.56060791]
[202.37193298 232.46846008]
[208.24090576 246.27264404]
[214.10986328 260.07681274]
[220.28562927 273.74649048]
[226.76512146 287.27484131]
[233.24461365 300.80319214]
[239.72412109 314.33151245]
[254.18757629 310.21859741]
[269.13812256 308.60931396]
[284.14553833 309.55001831]
[298.77807617 313.01364136]
[312.61474609 318.90048218]
[325.25738525 327.04119873]
[336.34228516 337.20159912]
[345.55047607 349.08926392]
[352.61706543 362.36224365]
[357.33868408 376.63858032]
[359.57949829 391.50756836]
[359.27505493 406.54138184]
[356.43408203 421.30746460]
[351.13836670 435.38095093]
[343.54022217 448.35693359]
[333.85830688 459.86206055]
[322.37115479 469.56533813]
[309.40927124 477.18756104]
[295.34564209 482.50939941]
[280.58486938 485.37774658]
[265.55163574 485.71011353]
[250.67852783 483.49688721]
[236.39343262 478.80175781]
[223.10737610 471.75982666]
[211.20262146 462.57373047]
[201.02169800 451.50769043]
[192.85752869 438.88018799]
[186.94499207 425.05447388]
[183.45423889 410.42837524]
[182.48568726 395.42272949]
[184.06719971 380.46923828]
[188.15328979 365.99816895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[10 174]
[11 173]
[12 172]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[19 150]
[20 149]
[21 148]
[27 142]
[28 141]
[29 140]
[30 139]
[41 138]
[43 137]
[44 136]
[45 135]
[46 134]
[48 132]
[49 131]
[51 129]
[52 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
