%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[122.43903351 672.92218018]
[109.59986877 665.15368652]
[97.34761810 656.48907471]
[85.74470520 646.97247314]
[74.85027313 636.65234375]
[64.71982574 625.58135986]
[55.40499878 613.81585693]
[46.95324326 601.41577148]
[39.40763855 588.44439697]
[32.80663300 574.96777344]
[27.18386269 561.05450439]
[22.56798172 546.77563477]
[18.98251152 532.20379639]
[16.44572258 517.41333008]
[14.97054195 502.47958374]
[14.56448841 487.47863770]
[15.22962856 472.48696899]
[16.96257591 457.58090210]
[19.75449562 442.83648682]
[23.59116554 428.32876587]
[28.45303154 414.13174438]
[34.31531906 400.31774902]
[41.14815521 386.95715332]
[48.91671753 374.11804199]
[57.58142471 361.86584473]
[67.09812164 350.26303101]
[77.41831207 339.36865234]
[88.48940277 329.23831177]
[100.25498199 319.92355347]
[112.65509033 311.47189331]
[125.62654877 303.92639160]
[139.10324097 297.32550049]
[153.01651001 291.70281982]
[148.40249634 277.43008423]
[143.78848267 263.15734863]
[139.17448425 248.88462830]
[134.56047058 234.61189270]
[123.93694305 228.82681274]
[119.97612762 216.97372437]
[125.31864929 205.23403931]
[120.91765594 190.89419556]
[109.78668976 180.99717712]
[113.13450623 165.53422546]
[99.66161346 154.28930664]
[103.93376923 136.37757874]
[99.31976318 122.10484314]
[94.70574951 107.83211517]
[90.69757843 104.44855499]
[88.87046814 99.06014252]
[90.17370605 93.06526947]
[85.98669434 78.66148376]
[81.79968262 64.25770569]
[77.61267090 49.85391998]
[73.11228180 45.01057053]
[71.91342163 39.45541382]
[73.52230072 34.95868683]
[69.76599884 20.43662834]
[58.81938934 9.01374149]
[63.12299347 -5.24558020]
[59.36669159 -19.76763916]
[55.61039352 -34.28969955]
[51.85409164 -48.81175995]
[48.80572510 -34.12477493]
[42.60736847 -20.46533203]
[33.56145859 -8.49990177]
[22.10936546 1.18769574]
[8.80986023 8.12478065]
[-5.68814516 11.97287750]
[-20.67725945 12.54422855]
[-35.42613220 9.81095695]
[-49.21512985 3.90642524]
[-61.37145996 -4.88127232]
[-71.30198669 -16.12336349]
[-78.52217865 -29.27132225]
[-82.67974854 -43.68363190]
[-83.57183838 -58.65708160]
[-81.15491486 -73.46108246]
[-75.54691315 -87.37332153]
[-67.02145386 -99.71498108]
[-55.99451447 -109.88388824]
[-43.00413132 -117.38387299]
[-28.68412399 -121.84900665]
[-13.73320198 -123.06142426]
[1.11914623 -120.96195984]
[15.14824200 -115.65305328]
[27.66957474 -107.39373779]
[38.07220078 -96.58701324]
[45.84855270 -83.76015472]
[50.61780548 -69.54547882]
[52.62182236 -84.41100311]
[54.62583542 -99.27653503]
[56.62984848 -114.14205933]
[42.28073883 -118.63774109]
[28.89788055 -125.49391174]
[16.86632156 -134.51330566]
[6.53223610 -145.43643188]
[-1.80704486 -157.94900513]
[-7.91158342 -171.69100952]
[-11.60573959 -186.26705933]
[-12.78322506 -201.25778198]
[-11.41016102 -216.23184204]
[-7.52605391 -230.75842285]
[-1.24265659 -244.41957092]
[7.25924444 -256.82223511]
[17.73503304 -267.60952759]
[29.88330078 -276.47109985]
[43.35451508 -283.15200806]
[57.76108551 -287.45999146]
[72.68849945 -289.27111816]
[87.70727539 -288.53329468]
[102.38529205 -285.26773071]
[116.30022430 -279.56835938]
[129.05171204 -271.59921265]
[140.27288818 -261.58953857]
[149.64086914 -249.82737732]
[156.88615417 -236.65110779]
[161.80024719 -222.43984985]
[164.24177551 -207.60250854]
[164.14048767 -192.56594849]
[161.49931335 -177.76284790]
[156.39422607 -163.61907959]
[148.97210693 -150.54161072]
[139.44651794 -138.90669250]
[128.09153748 -129.04910278]
[115.23384857 -121.25244141]
[101.24340057 -115.74105072]
[86.52272797 -112.67350006]
[71.49537659 -112.13804626]
[69.49136353 -97.27252197]
[67.48735046 -82.40699005]
[65.48333740 -67.54146576]
[66.37615204 -52.56805801]
[70.13245392 -38.04600143]
[73.88875580 -23.52394104]
[77.64505005 -9.00188065]
[88.32298279 1.38229036]
[84.28805542 16.68032646]
[88.04435730 31.20238686]
[92.01645660 45.66690826]
[96.20346832 60.07069016]
[100.39048004 74.47447205]
[104.57748413 88.87825775]
[108.97848511 103.21810150]
[113.59249115 117.49083710]
[118.20650482 131.76356506]
[129.31373596 138.32040405]
[132.86293030 150.30319214]
[127.47434998 161.13322449]
[138.92010498 172.05592346]
[135.25750732 186.49319458]
[139.65849304 200.83303833]
[153.42674255 213.06076050]
[148.83320618 229.99789429]
[153.44720459 244.27061462]
[158.06121826 258.54336548]
[162.67523193 272.81610107]
[167.28924561 287.08880615]
[181.86096191 283.50302124]
[196.65138245 280.96588135]
[211.58509827 279.49035645]
[226.58604431 279.08395386]
[241.57774353 279.74874878]
[256.48382568 281.48135376]
[271.22833252 284.27294922]
[285.73611450 288.10928345]
[299.93325806 292.97082520]
[313.74740601 298.83279419]
[327.10815430 305.66531372]
[339.94744873 313.43359375]
[352.19982910 322.09802246]
[363.80288696 331.61444092]
[374.69747925 341.93438721]
[384.82809448 353.00524902]
[394.14309692 364.77059937]
[402.59503174 377.17053223]
[410.14083862 390.14181519]
[416.74206543 403.61834717]
[422.36505127 417.53149414]
[426.98114014 431.81030273]
[430.56683350 446.38204956]
[433.10385132 461.17248535]
[434.57925415 476.10623169]
[434.98553467 491.10717773]
[434.32064819 506.09887695]
[432.58792114 521.00494385]
[429.79623413 535.74945068]
[425.95977783 550.25720215]
[421.09811401 564.45428467]
[415.23605347 578.26837158]
[408.40341187 591.62908936]
[400.63504028 604.46832275]
[391.97052002 616.72064209]
[382.45401001 628.32360840]
[372.13400269 639.21813965]
[361.06304932 649.34863281]
[349.29760742 658.66357422]
[336.89764404 667.11541748]
[323.92630005 674.66113281]
[310.44970703 681.26220703]
[296.53652954 686.88513184]
[282.25765991 691.50109863]
[267.68588257 695.08666992]
[252.89543152 697.62359619]
[237.96168518 699.09887695]
[222.96073914 699.50506592]
[207.96903992 698.84002686]
[193.06298828 697.10717773]
[178.31852722 694.31536865]
[163.81080627 690.47882080]
[149.61373901 685.61706543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[40 151]
[41 150]
[43 148]
[45 145]
[46 144]
[47 143]
[50 142]
[51 141]
[52 140]
[53 139]
[56 138]
[57 137]
[59 135]
[60 134]
[61 133]
[62 132]
[89 131]
[90 130]
[91 129]
[92 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
