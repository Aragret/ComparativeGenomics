%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[36.14602280 637.85437012]
[22.56604767 644.23596191]
[8.62228012 649.77783203]
[-5.63340616 654.45935059]
[-20.14797783 658.26300049]
[-34.86744308 661.17474365]
[-49.73703766 663.18371582]
[-64.70145416 664.28247070]
[-79.70501709 664.46679688]
[-94.69190979 663.73620605]
[-109.60638428 662.09326172]
[-124.39295959 659.54412842]
[-138.99662781 656.09826660]
[-153.36305237 651.76855469]
[-167.43879700 646.57098389]
[-181.17149353 640.52502441]
[-194.51007080 633.65313721]
[-207.40489197 625.98077393]
[-219.80798340 617.53662109]
[-231.67323303 608.35198975]
[-242.95646667 598.46112061]
[-253.61572266 587.90075684]
[-263.61135864 576.71026611]
[-272.90615845 564.93115234]
[-281.46557617 552.60729980]
[-289.25778198 539.78454590]
[-296.25375366 526.51062012]
[-302.42745972 512.83489990]
[-307.75598145 498.80819702]
[-312.21945190 484.48275757]
[-315.80126953 469.91183472]
[-318.48812866 455.14968872]
[-320.27005005 440.25115967]
[-321.14035034 425.27172852]
[-321.09585571 410.26708984]
[-320.13665771 395.29309082]
[-318.26641846 380.40542603]
[-315.49200439 365.65945435]
[-311.82379150 351.11004639]
[-307.27539062 336.81134033]
[-301.86376953 322.81652832]
[-295.60900879 309.17764282]
[-288.53439331 295.94546509]
[-280.66625977 283.16918945]
[-272.03387451 270.89633179]
[-262.66934204 259.17257690]
[-252.60749817 248.04154968]
[-241.88575745 237.54461670]
[-230.54403687 227.72085571]
[-218.62452698 218.60681152]
[-206.17153931 210.23638916]
[-193.23143005 202.64070129]
[-179.85231018 195.84803772]
[-166.08398438 189.88366699]
[-151.97764587 184.76974487]
[-137.58578491 180.52532959]
[-122.96192932 177.16618347]
[-108.16049194 174.70481873]
[-93.23653412 173.15040588]
[-78.24556732 172.50869751]
[-63.24336243 172.78208923]
[-48.28573227 173.96957397]
[-33.42831421 176.06674194]
[-18.72638702 179.06576538]
[-4.23463821 182.95550537]
[9.99302101 187.72148132]
[23.90366173 193.34597778]
[37.44553757 199.80805969]
[44.71876526 186.68936157]
[51.99199677 173.57066345]
[59.26522446 160.45198059]
[66.53845215 147.33328247]
[73.81168365 134.21458435]
[81.08491516 121.09589386]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[111.46632385 58.69734955]
[117.94581604 45.16900635]
[124.22317505 31.54568863]
[130.29701233 17.83042145]
[136.37084961 4.11515522]
[123.21190643 -3.10399199]
[110.71260071 -11.41309738]
[98.96298981 -20.75229263]
[88.04773712 -31.05428696]
[78.04548645 -42.24485397]
[69.02829742 -54.24336243]
[61.06115341 -66.96336365]
[54.20144653 -80.31320190]
[48.49861145 -94.19670105]
[43.99373245 -108.51382446]
[40.71926880 -123.16140747]
[38.69881058 -138.03392029]
[37.94692230 -153.02420044]
[38.46901703 -168.02424622]
[40.26133347 -182.92596436]
[43.31095886 -197.62200928]
[47.59591675 -212.00646973]
[53.08533859 -225.97573853]
[59.73966980 -239.42912292]
[67.51096344 -252.26971436]
[76.34323120 -264.40499878]
[86.17282867 -275.74752808]
[96.92893219 -286.21557617]
[108.53404999 -295.73370361]
[120.90456390 -304.23336792]
[133.95133972 -311.65332031]
[147.58036804 -317.94006348]
[161.69345093 -323.04833984]
[176.18891907 -326.94134521]
[190.96231079 -329.59100342]
[205.90719604 -330.97824097]
[220.91587830 -331.09304810]
[235.88023376 -329.93460083]
[250.69242859 -327.51126099]
[265.24575806 -323.84045410]
[279.43533325 -318.94866943]
[293.15893555 -312.87115479]
[306.31771851 -305.65167236]
[318.81680298 -297.34225464]
[330.56616211 -288.00274658]
[341.48114014 -277.70046997]
[351.48312378 -266.50964355]
[360.50000000 -254.51089478]
[368.46679688 -241.79069519]
[375.32617188 -228.44067383]
[381.02865601 -214.55702209]
[385.53314209 -200.23979187]
[388.80725098 -185.59211731]
[390.82730103 -170.71955872]
[391.57882690 -155.72926331]
[391.05633545 -140.72923279]
[389.26364136 -125.82755280]
[386.21362305 -111.13159180]
[381.92828369 -96.74723053]
[376.43850708 -82.77811432]
[369.78384399 -69.32489777]
[362.01220703 -56.48450470]
[353.17962646 -44.34945679]
[343.34973145 -33.00718689]
[332.59335327 -22.53941917]
[320.98800659 -13.02157307]
[308.61727905 -4.52222729]
[295.57031250 2.89737892]
[281.94110107 9.18378639]
[267.82788086 14.29170132]
[253.33232117 18.18431854]
[238.55885315 20.83359528]
[223.61393738 22.22043800]
[208.60525513 22.33485794]
[193.64093018 21.17602921]
[178.82879639 18.75230026]
[164.27557373 15.08113670]
[150.08610535 10.18898964]
[144.01228333 23.90425682]
[137.93844604 37.61952209]
[138.79260254 42.31840134]
[136.70402527 47.60374451]
[131.47416687 51.64850235]
[124.99466705 65.17684937]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[101.98030090 118.56060791]
[101.15280914 122.41803741]
[99.31541443 125.46096039]
[96.85803223 127.46791840]
[94.20360565 128.36912537]
[86.93037415 141.48780823]
[79.65715027 154.60650635]
[72.38391876 167.72520447]
[65.11068726 180.84390259]
[57.83745956 193.96258545]
[50.56423187 207.08128357]
[63.21915436 215.14315796]
[75.35905457 223.96153259]
[86.93876648 233.50360107]
[97.91521454 243.73387146]
[108.24756622 254.61428833]
[117.89739227 266.10437012]
[126.82877350 278.16134644]
[135.00851440 290.74041748]
[142.40615845 303.79473877]
[148.99418640 317.27578735]
[154.74810791 331.13339233]
[159.64651489 345.31600952]
[163.67117310 359.77087402]
[166.80712891 374.44421387]
[169.04269409 389.28143311]
[170.36955261 404.22735596]
[170.78279114 419.22634888]
[170.28085327 434.22265625]
[168.86561584 449.16046143]
[166.54234314 463.98419189]
[163.31967163 478.63870239]
[159.20959473 493.06951904]
[154.22740173 507.22290039]
[148.39163208 521.04626465]
[141.72398376 534.48809814]
[134.24925232 547.49847412]
[125.99527740 560.02893066]
[116.99273682 572.03289795]
[107.27513123 583.46569824]
[96.87861633 594.28479004]
[85.84185028 604.45001221]
[74.20590973 613.92340088]
[62.01406860 622.66979980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[75 166]
[77 164]
[78 163]
[79 162]
[80 161]
[81 158]
[82 157]
[83 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
