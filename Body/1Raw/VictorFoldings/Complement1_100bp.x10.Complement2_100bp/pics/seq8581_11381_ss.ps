%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[131.68211365 323.38385010]
[131.01232910 308.39880371]
[130.34254456 293.41378784]
[129.67276001 278.42874146]
[127.77946472 263.54870605]
[124.67535400 248.87339783]
[121.57124329 234.19808960]
[118.46713257 219.52279663]
[115.36302185 204.84748840]
[112.25891876 190.17218018]
[109.15480804 175.49688721]
[94.68019867 166.93391418]
[90.80090332 150.22265625]
[100.39319611 135.59367371]
[97.07093811 120.96621704]
[85.61860657 115.53502655]
[79.32160950 104.53496552]
[80.43724823 91.90924072]
[88.56559753 82.18383026]
[85.46148682 67.50852203]
[78.77959442 80.93805695]
[65.95275116 88.71443939]
[50.95548630 88.42806244]
[38.43486786 80.16767120]
[32.27053833 66.49284363]
[34.37259293 51.64085770]
[44.08967972 40.21377563]
[58.41085815 35.75239944]
[72.89855194 39.63913345]
[83.06370544 50.66986465]
[81.94805908 35.71141052]
[80.83241272 20.75295830]
[79.71676636 5.79450560]
[78.60111237 -9.16394806]
[77.48546600 -24.12240028]
[76.36981964 -39.08085632]
[72.61080170 -47.40597534]
[75.35060120 -54.27003098]
[74.45778656 -69.24343872]
[73.56497192 -84.21684265]
[65.01998901 -97.53201294]
[71.98603058 -110.69725800]
[71.09321594 -125.67066193]
[56.09036255 -125.54972839]
[41.10117340 -126.20128632]
[26.16540337 -127.62361145]
[11.32265472 -129.81292725]
[-3.38771009 -132.76341248]
[-17.92668152 -136.46726990]
[-32.25570679 -140.91467285]
[-46.33678436 -146.09381104]
[-60.13257599 -151.99095154]
[-73.60649872 -158.59048462]
[-86.72281647 -165.87487793]
[-99.44675446 -173.82482910]
[-111.74456787 -182.41925049]
[-123.58364105 -191.63534546]
[-134.93258667 -201.44869995]
[-145.76130676 -211.83326721]
[-156.04107666 -222.76150513]
[-165.74464417 -234.20445251]
[-174.84626770 -246.13175964]
[-183.32183838 -258.51177979]
[-191.14884949 -271.31170654]
[-198.30656433 -284.49758911]
[-204.77598572 -298.03445435]
[-210.53996277 -311.88641357]
[-215.58323669 -326.01672363]
[-219.89239502 -340.38793945]
[-223.45602417 -354.96191406]
[-226.26467896 -369.70001221]
[-228.31091309 -384.56317139]
[-229.58929443 -399.51193237]
[-230.09643555 -414.50671387]
[-229.83099365 -429.50769043]
[-228.79367065 -444.47512817]
[-226.98721313 -459.36932373]
[-224.41641235 -474.15078735]
[-221.08808899 -488.78027344]
[-217.01107788 -503.21905518]
[-212.19616699 -517.42883301]
[-206.65614319 -531.37182617]
[-200.40570068 -545.01123047]
[-193.46139526 -558.31072998]
[-185.84165955 -571.23510742]
[-177.56669617 -583.75012207]
[-168.65844727 -595.82250977]
[-159.14053345 -607.42034912]
[-149.03819275 -618.51281738]
[-138.37823486 -629.07055664]
[-127.18889618 -639.06549072]
[-115.49987030 -648.47119141]
[-103.34214783 -657.26269531]
[-90.74797058 -665.41662598]
[-77.75073242 -672.91143799]
[-64.38491058 -679.72723389]
[-50.68593979 -685.84588623]
[-36.69014740 -691.25128174]
[-22.43465042 -695.92901611]
[-7.95725155 -699.86669922]
[6.70365810 -703.05383301]
[21.50919914 -705.48205566]
[36.42011261 -707.14483643]
[51.39685440 -708.03784180]
[66.39971161 -708.15869141]
[81.38889313 -707.50708008]
[96.32465363 -706.08465576]
[111.16738892 -703.89526367]
[125.87773895 -700.94470215]
[140.41668701 -697.24072266]
[154.74568176 -692.79327393]
[168.82673645 -687.61407471]
[182.62249756 -681.71679688]
[196.09637451 -675.11724854]
[209.21266174 -667.83276367]
[221.93655396 -659.88275146]
[234.23431396 -651.28820801]
[246.07333374 -642.07208252]
[257.42221069 -632.25866699]
[268.25088501 -621.87402344]
[278.53057861 -610.94573975]
[288.23410034 -599.50274658]
[297.33566284 -587.57537842]
[305.81112671 -575.19531250]
[313.63809204 -562.39532471]
[320.79571533 -549.20941162]
[327.26507568 -535.67248535]
[333.02896118 -521.82049561]
[338.07214355 -507.69015503]
[342.38122559 -493.31893921]
[345.94476318 -478.74493408]
[348.75335693 -464.00680542]
[350.79949951 -449.14364624]
[352.07778931 -434.19485474]
[352.58483887 -419.20010376]
[352.31930542 -404.19909668]
[351.28192139 -389.23165894]
[349.47537231 -374.33749390]
[346.90447998 -359.55606079]
[343.57608032 -344.92657471]
[339.49896240 -330.48782349]
[334.68399048 -316.27810669]
[329.14389038 -302.33508301]
[322.89337158 -288.69577026]
[315.94897461 -275.39630127]
[308.32916260 -262.47195435]
[300.05413818 -249.95698547]
[291.14581299 -237.88462830]
[281.62783813 -226.28684998]
[271.52545166 -215.19442749]
[260.86541748 -204.63677979]
[249.67602539 -194.64189148]
[237.98693848 -185.23626709]
[225.82916260 -176.44487000]
[213.23493958 -168.29098511]
[200.23767090 -160.79624939]
[186.87179565 -153.98052979]
[173.17279053 -147.86192322]
[159.17697144 -142.45661926]
[144.92144775 -137.77899170]
[130.44403076 -133.84140015]
[115.78309631 -130.65432739]
[100.97753906 -128.22621155]
[86.06661987 -126.56347656]
[86.95943451 -111.59007263]
[95.44055939 -99.34589386]
[88.53837585 -85.10965729]
[89.43119812 -70.13625336]
[90.32401276 -55.16284943]
[91.32826996 -40.19650269]
[92.44391632 -25.23805046]
[93.55957031 -10.27959633]
[94.67521667 4.67885685]
[95.79086304 19.63731003]
[96.90651703 34.59576416]
[98.02216339 49.55421829]
[100.13678741 64.40441132]
[103.24089813 79.07971954]
[117.27512360 87.76351166]
[120.81049347 103.88395691]
[111.69839478 117.64395905]
[115.02065277 132.27142334]
[127.16810608 138.08982849]
[133.65190125 149.67304993]
[132.30049133 162.68287659]
[123.83010864 172.39277649]
[126.93421936 187.06808472]
[130.03833008 201.74337769]
[133.14244080 216.41868591]
[136.24655151 231.09397888]
[139.35066223 245.76928711]
[142.45477295 260.44458008]
[148.16600037 246.57441711]
[159.60939026 236.87654114]
[174.22845459 233.51748657]
[188.75723267 237.24768066]
[199.94998169 247.23377991]
[205.30621338 261.24487305]
[203.62931824 276.15084839]
[195.29393005 288.62167358]
[182.16218567 295.87130737]
[167.16777039 296.28021240]
[153.66044617 289.75698853]
[144.65779114 277.75894165]
[145.32757568 292.74398804]
[145.99736023 307.72903442]
[146.66716003 322.71408081]
[155.94393921 336.23712158]
[148.62786865 350.91387939]
[132.24507141 351.64614868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[14 182]
[15 181]
[19 178]
[20 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[38 169]
[39 168]
[40 167]
[42 165]
[43 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
