%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[157.49107361 761.76660156]
[142.85704041 758.38983154]
[128.73675537 753.27374268]
[115.33610535 746.49285889]
[102.85054016 738.14611816]
[91.46211243 728.35522461]
[81.33692169 717.26300049]
[72.62260437 705.03112793]
[65.44625092 691.83807373]
[59.91251373 677.87615967]
[56.10208893 663.34899902]
[54.07054138 648.46850586]
[53.84749603 633.45159912]
[55.43621445 618.51727295]
[58.81351852 603.88336182]
[63.93016052 589.76324463]
[70.71152496 576.36285400]
[79.05872345 563.87762451]
[88.85002136 552.48956299]
[99.94264221 542.36480713]
[112.17481232 533.65093994]
[125.36816406 526.47509766]
[139.33029175 520.94183350]
[153.85757446 517.13195801]
[168.73817444 515.10095215]
[168.51484680 500.10263062]
[168.29151917 485.10430908]
[168.06819153 470.10595703]
[167.84486389 455.10763550]
[157.01156616 444.95010376]
[156.57142639 429.74285889]
[167.29901123 418.44876099]
[167.07568359 403.45040894]
[166.85235596 388.45208740]
[158.92642212 375.84140015]
[166.45739746 361.92758179]
[166.23406982 346.92922974]
[166.01074219 331.93090820]
[163.23513794 317.18994141]
[157.98841858 303.13745117]
[152.74169922 289.08499146]
[147.49497986 275.03253174]
[142.24826050 260.98004150]
[131.25703430 261.58181763]
[120.46594238 259.33154297]
[110.60353851 254.37300110]
[102.33779144 247.03305054]
[96.23081970 237.80017090]
[92.70067596 227.29191589]
[91.99275208 216.21360779]
[94.16271973 205.31100464]
[99.07223511 195.32012939]
[106.39775085 186.91752625]
[115.65183258 180.67446899]
[111.46482086 166.27069092]
[107.27780914 151.86691284]
[103.09079742 137.46311951]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[82.63217163 65.07704163]
[78.66007996 50.61252213]
[74.73423767 65.08966827]
[65.62802124 77.00926208]
[52.69227600 84.60311127]
[37.84594345 86.74469757]
[23.29138947 83.11634827]
[11.18769550 74.25628662]
[3.33037281 61.47886658]
[0.88500851 46.67953873]
[4.21435785 32.05368805]
[12.82453156 19.77098083]
[25.43826103 11.65348053]
[40.18437576 8.90536976]
[54.87537766 11.93431473]
[67.33193970 20.29098892]
[75.70546722 32.73397064]
[74.81265259 17.76056480]
[73.91983795 2.78715801]
[73.02702332 -12.18624783]
[72.13420105 -27.15965271]
[71.01855469 -42.11810684]
[69.68032074 -57.05829239]
[68.23090363 -71.98809814]
[66.67037964 -86.90670776]
[65.10985565 -101.82530975]
[62.04236221 -106.04875946]
[61.00534058 -110.57401276]
[61.77373886 -114.57708740]
[63.82807922 -117.44274902]
[62.93526459 -132.41615295]
[62.04244995 -147.38955688]
[47.39757919 -151.18205261]
[34.64250946 -159.31614685]
[25.02685928 -170.99494934]
[19.49266624 -185.07427979]
[18.58211517 -200.17481995]
[22.38441277 -214.81713867]
[30.52705002 -227.56675720]
[42.21229172 -237.17457581]
[56.29534149 -242.69934082]
[71.39647675 -243.59977722]
[86.03625488 -239.78765869]
[98.78041077 -231.63648987]
[108.38040161 -219.94480896]
[113.89572144 -205.85806274]
[114.78603363 -190.75631714]
[110.96411896 -176.11911011]
[102.80440521 -163.38041687]
[91.10629272 -153.78825378]
[77.01585388 -148.28237915]
[77.90866852 -133.30897522]
[78.80148315 -118.33556366]
[80.02846527 -103.38583374]
[81.58898163 -88.46723175]
[83.14950562 -73.54862213]
[86.97181702 -67.22314453]
[84.62050629 -58.39652634]
[85.95874023 -43.45634079]
[88.98417664 -39.76096725]
[89.72031403 -34.12579727]
[87.10761261 -28.05246925]
[88.00042725 -13.07906342]
[88.89324188 1.89434218]
[89.78605652 16.86774826]
[90.67887115 31.84115410]
[93.12460327 46.64042282]
[97.09669495 61.10494995]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[117.49457550 133.27610779]
[121.68158722 147.67990112]
[125.86859894 162.08367920]
[130.05561829 176.48745728]
[149.18716431 178.87159729]
[165.31101990 189.35136414]
[175.20704651 205.78250122]
[176.92134094 224.83740234]
[170.15190125 242.67897034]
[156.30073547 255.73333740]
[161.54745483 269.78579712]
[166.79417419 283.83828735]
[172.04089355 297.89074707]
[177.28761292 311.94320679]
[178.85067749 297.02487183]
[184.02673340 282.94622803]
[192.49926758 270.56817627]
[203.75019836 260.64764404]
[217.09149170 253.79130554]
[231.70736694 250.41839600]
[246.70401001 250.73516846]
[261.16439819 254.72227478]
[274.20428467 262.13586426]
[285.02624512 272.52264404]
[292.96853638 285.24743652]
[297.54547119 299.53210449]
[298.47717285 314.50314331]
[295.70666504 329.24505615]
[289.40335083 342.85638428]
[279.95272827 354.50479126]
[267.93264771 363.47796631]
[254.07818604 369.22720337]
[239.23652649 371.40093994]
[224.31524658 369.86621094]
[210.22677612 364.71691895]
[197.83265686 356.26791382]
[187.89077759 345.03585815]
[181.00907898 331.70758057]
[181.23240662 346.70590210]
[181.45573425 361.70425415]
[189.39764404 375.38769531]
[181.85069275 388.22875977]
[182.07402039 403.22708130]
[182.29734802 418.22543335]
[193.35644531 429.19509888]
[193.36927795 444.40875244]
[182.84320068 454.88430786]
[183.06652832 469.88262939]
[183.28985596 484.88098145]
[183.51318359 499.87930298]
[183.73651123 514.87762451]
[198.67098999 516.46466064]
[213.30528259 519.84033203]
[227.42596436 524.95538330]
[240.82710266 531.73529053]
[253.31330872 540.08105469]
[264.70245361 549.87109375]
[274.82849121 560.96258545]
[283.54370117 573.19378662]
[290.72103882 586.38629150]
[296.25582886 600.34783936]
[300.06735229 614.87469482]
[302.10000610 629.75506592]
[302.32415771 644.77197266]
[300.73657227 659.70635986]
[297.36035156 674.34051514]
[292.24478149 688.46099854]
[285.46441650 701.86193848]
[277.11813354 714.34777832]
[267.32769775 725.73657227]
[256.23583984 735.86218262]
[244.00431824 744.57696533]
[230.81150818 751.75378418]
[216.84979248 757.28808594]
[202.32279968 761.09906006]
[187.44233704 763.13116455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 185]
[26 184]
[27 183]
[28 182]
[29 181]
[32 178]
[33 177]
[34 176]
[36 174]
[37 173]
[38 172]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[61 132]
[62 131]
[63 130]
[64 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 121]
[85 120]
[86 118]
[87 117]
[88 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
