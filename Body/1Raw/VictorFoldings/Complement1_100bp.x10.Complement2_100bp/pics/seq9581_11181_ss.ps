%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[109.55472565 622.71978760]
[96.58132935 615.17919922]
[84.14055634 606.78894043]
[72.28797913 597.58642578]
[61.07653046 587.61285400]
[50.55628586 576.91265869]
[40.77422714 565.53375244]
[31.77404594 553.52679443]
[23.59594154 540.94555664]
[16.27643776 527.84619141]
[9.84822559 514.28710938]
[4.34001637 500.32901001]
[-0.22358997 486.03417969]
[-3.82221031 471.46643066]
[-6.43977261 456.69085693]
[-8.06458569 441.77343750]
[-8.68939304 426.78079224]
[-8.31140423 411.77993774]
[-6.93230724 396.83779907]
[-4.55826187 382.02114868]
[-1.19987035 367.39614868]
[3.12786698 353.02813721]
[8.40562153 338.98126221]
[14.60982132 325.31826782]
[21.71275711 312.10018921]
[29.68270493 299.38604736]
[38.48406601 287.23266602]
[48.07753754 275.69424438]
[58.42026520 264.82241821]
[69.46606445 254.66564941]
[81.16558838 245.26934814]
[93.46659851 236.67549133]
[106.31414032 228.92243958]
[119.65084839 222.04481506]
[133.41714478 216.07336426]
[128.38023376 201.94433594]
[123.34330750 187.81530762]
[118.30639648 173.68627930]
[106.74461365 164.29615784]
[109.39862823 148.69914246]
[97.83684540 139.30902100]
[100.49085999 123.71200562]
[95.45394135 109.58296967]
[89.79116058 95.69294739]
[83.51379395 82.06963348]
[77.23643494 68.44631195]
[70.95907593 54.82299805]
[64.68171692 41.19968033]
[58.30310822 27.62347412]
[51.82361221 14.09512901]
[45.34411621 0.56678355]
[38.86462021 -12.96156216]
[28.23588371 -13.88553715]
[19.01987839 -19.09824944]
[12.84652328 -27.60079002]
[10.77549934 -37.81958771]
[13.11481857 -47.89743423]
[19.37707901 -56.03101349]
[13.50811768 -69.83518982]
[7.63915682 -83.63936615]
[1.77019620 -97.44354248]
[-4.09876442 -111.24771881]
[-16.61874580 -120.92039490]
[-14.47799969 -135.66035461]
[-20.34696007 -149.46453857]
[-26.21592140 -163.26870728]
[-32.08488083 -177.07289124]
[-37.95384216 -190.87705994]
[-52.41499710 -186.81462097]
[-67.27692413 -184.63484192]
[-82.29557800 -184.37351990]
[-97.22434235 -186.03492737]
[-111.81807709 -189.59181213]
[-125.83712769 -194.98574829]
[-139.05130005 -202.12815857]
[-151.24359131 -210.90176392]
[-162.21380615 -221.16249084]
[-171.78181458 -232.74186707]
[-179.79046631 -245.44972229]
[-186.10829163 -259.07739258]
[-190.63151550 -273.40112305]
[-193.28587341 -288.18563843]
[-194.02778625 -303.18826294]
[-192.84504700 -318.16253662]
[-189.75711060 -332.86264038]
[-184.81466675 -347.04714966]
[-178.09886169 -360.48318481]
[-169.72000122 -372.95004272]
[-159.81565857 -384.24307251]
[-148.54847717 -394.17678833]
[-136.10346985 -402.58810425]
[-122.68498993 -409.33886719]
[-108.51339722 -414.31823730]
[-93.82138824 -417.44445801]
[-78.85022736 -418.66619873]
[-63.84574890 -417.96337891]
[-49.05434418 -415.34753418]
[-34.71889877 -410.86163330]
[-21.07481194 -404.57931519]
[-8.34613609 -396.60379028]
[3.25811458 -387.06597900]
[13.54738712 -376.12252808]
[22.35272217 -363.95312500]
[29.52952766 -350.75759888]
[34.95995712 -336.75265503]
[38.55483246 -322.16824341]
[40.25512695 -307.24386597]
[40.03292084 -292.22457886]
[37.89186096 -277.35702515]
[33.86710358 -262.88531494]
[28.02474213 -249.04714966]
[20.46071053 -236.06971741]
[11.29922009 -224.16612244]
[0.69070971 -213.53184509]
[-11.19061947 -204.34150696]
[-24.14966583 -196.74601746]
[-18.28070450 -182.94184875]
[-12.41174507 -169.13766479]
[-6.54278374 -155.33349609]
[-0.67382306 -141.52931213]
[11.42637157 -132.84400940]
[9.70541191 -117.11668396]
[15.57437325 -103.31250763]
[21.44333458 -89.50832367]
[27.31229401 -75.70414734]
[33.18125534 -61.89997482]
[51.73414230 -55.95820618]
[60.06422424 -38.01068878]
[52.39296722 -19.44105721]
[58.87246323 -5.91271210]
[65.35195923 7.61563349]
[71.83145142 21.14397812]
[77.55588531 25.81866264]
[78.30503082 34.92232132]
[84.58238983 48.54563904]
[90.85974884 62.16895294]
[97.13711548 75.79226685]
[103.41447449 89.41558838]
[109.61138916 75.75548553]
[123.60330200 70.34936523]
[137.37503052 76.29408264]
[143.03747559 90.18424988]
[137.34695435 104.06293488]
[123.56324768 109.97980499]
[109.58296967 104.54605865]
[114.61988831 118.67508698]
[126.54194641 129.07582092]
[123.52765656 143.66221619]
[135.44970703 154.06294250]
[132.43542480 168.64935303]
[137.47233582 182.77838135]
[142.50926208 196.90742493]
[147.54617310 211.03645325]
[161.98545837 206.95277405]
[176.66525269 203.84268188]
[191.52000427 201.72001648]
[206.48336792 200.59429932]
[221.48849487 200.47053528]
[236.46838379 201.34928894]
[251.35612488 203.22663879]
[266.08523560 206.09417725]
[280.58990479 209.93911743]
[294.80538940 214.74427795]
[308.66815186 220.48820496]
[322.11633301 227.14523315]
[335.08981323 234.68563843]
[347.53070068 243.07574463]
[359.38339233 252.27807617]
[370.59497070 262.25152588]
[381.11535645 272.95156860]
[390.89755249 284.33041382]
[399.89788818 296.33721924]
[408.07614136 308.91836548]
[415.39581299 322.01766968]
[421.82418823 335.57659912]
[427.33258057 349.53463745]
[431.89636230 363.82943726]
[435.49517822 378.39715576]
[438.11291504 393.17269897]
[439.73791504 408.09008789]
[440.36291504 423.08270264]
[439.98510742 438.08358765]
[438.60620117 453.02572632]
[436.23233032 467.84240723]
[432.87414551 482.46746826]
[428.54656982 496.83554077]
[423.26898193 510.88247681]
[417.06497192 524.54553223]
[409.96218872 537.76367188]
[401.99240112 550.47790527]
[393.19119263 562.63146973]
[383.59786987 574.16998291]
[373.25527954 585.04193115]
[362.20962524 595.19885254]
[350.51019287 604.59527588]
[338.20932007 613.18933105]
[325.36184692 620.94250488]
[312.02523804 627.82031250]
[298.25903320 633.79193115]
[284.12466431 638.83074951]
[269.68533325 642.91424561]
[255.00550842 646.02416992]
[240.15072632 648.14660645]
[225.18734741 649.27215576]
[210.18222046 649.39569092]
[195.20234680 648.51678467]
[180.31462097 646.63922119]
[165.58555603 643.77154541]
[151.08093262 639.92639160]
[136.86550903 635.12103271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 153]
[36 152]
[37 151]
[38 150]
[40 148]
[42 146]
[43 145]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 132]
[50 131]
[51 130]
[52 129]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
