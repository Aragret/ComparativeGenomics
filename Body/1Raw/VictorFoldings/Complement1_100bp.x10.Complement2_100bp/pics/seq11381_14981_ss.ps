%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[143.17933655 658.93328857]
[128.15937805 658.26190186]
[113.45481110 655.12738037]
[99.46677399 649.61517334]
[86.57687378 641.87561035]
[75.13675690 632.11993408]
[65.45852661 620.61419678]
[57.80620193 607.67230225]
[52.38854980 593.64739990]
[49.35336685 578.92199707]
[48.78345108 563.89782715]
[50.69435501 548.98480225]
[55.03394699 534.58978271]
[61.68383789 521.10534668]
[70.46261597 508.89950562]
[81.13078308 498.30517578]
[93.39731598 489.61135864]
[106.92755890 483.05529785]
[121.35241699 478.81576538]
[136.27835083 477.00848389]
[136.94813538 462.02343750]
[137.61791992 447.03839111]
[138.28770447 432.05337524]
[135.44601440 425.23086548]
[139.08065796 416.85070801]
[139.97348022 401.87728882]
[140.86628723 386.90386963]
[133.90025330 373.73864746]
[142.44523621 360.42346191]
[143.33804321 345.45007324]
[144.23086548 330.47665405]
[145.01219177 315.49700928]
[144.78886414 300.49868774]
[143.67321777 285.54022217]
[142.55755615 270.58178711]
[141.44190979 255.62332153]
[140.21493530 240.67358398]
[138.87670898 225.73341370]
[137.53846741 210.79322815]
[136.20024109 195.85304260]
[132.12057495 181.41848755]
[125.44037628 167.98811340]
[118.76017761 154.55772400]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[66.45720673 73.86692810]
[59.87386322 60.15145493]
[64.84213257 46.15674591]
[51.76861572 37.24642181]
[53.02822876 22.40517426]
[46.34803391 8.97479916]
[41.99702454 6.09108782]
[39.44266510 2.21442127]
[38.76232147 -1.80455661]
[39.68453979 -5.20776892]
[33.61070633 -18.92303658]
[20.94809914 -28.40823364]
[22.86915207 -43.17843246]
[16.79531860 -56.89369965]
[5.06621313 -62.25941467]
[0.28965944 -73.80792999]
[4.52229309 -85.13980865]
[-1.34666765 -98.94398499]
[-7.21562862 -112.74816132]
[-8.06162453 -97.77204132]
[-12.29295254 -83.38121033]
[-19.68764496 -70.33059692]
[-29.85779381 -59.30480576]
[-42.26988983 -50.88222885]
[-56.27282333 -45.50469208]
[-71.13202667 -43.45429611]
[-86.06801605 -44.83859634]
[-100.29727173 -49.58498001]
[-113.07336426 -57.44445801]
[-123.72608948 -68.00473785]
[-131.69660950 -80.71185303]
[-136.56683350 -94.89920807]
[-138.08125305 -109.82256317]
[-136.16043091 -124.69906616]
[-130.90515137 -138.74833679]
[-122.59106445 -151.23336792]
[-111.65432739 -161.49922180]
[-98.66865540 -169.00737000]
[-84.31525421 -173.36396790]
[-69.34706879 -174.34045410]
[-54.54930878 -171.88560486]
[-40.69823074 -166.12821960]
[-28.52042961 -157.37028503]
[-18.65473557 -146.07125854]
[-11.61807537 -132.82231140]
[-12.06468105 -147.81565857]
[-12.51128769 -162.80900574]
[-12.95789337 -177.80235291]
[-27.18108368 -183.16606140]
[-38.26557922 -193.56809998]
[-44.52107239 -207.42224121]
[-44.99364853 -222.61582947]
[-39.61124039 -236.83193970]
[-29.19462776 -247.90274048]
[-15.33227062 -254.14001465]
[-0.13807391 -254.59260559]
[14.07095623 -249.19149780]
[25.12804413 -238.76033020]
[31.34706879 -224.88978577]
[31.77966881 -209.69500732]
[26.35987854 -195.49308777]
[15.91417694 -184.44973755]
[2.03545690 -178.24896240]
[2.48206282 -163.25561523]
[2.92866874 -148.26225281]
[3.37527466 -133.26890564]
[6.58854866 -118.61711884]
[12.45750904 -104.81294250]
[18.32646942 -91.00876617]
[32.89611816 -81.22652435]
[30.51058578 -62.96753311]
[36.58441925 -49.25226974]
[48.81258392 -40.74807739]
[47.32597351 -24.99687004]
[53.39980698 -11.28160286]
[59.77841187 2.29460406]
[66.45860291 15.72498035]
[79.05430603 23.67467117]
[78.27250671 39.47655106]
[92.43065643 43.95788574]
[99.39664459 57.48303604]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[132.19055176 147.87753296]
[138.87074280 161.30790710]
[145.55094910 174.73828125]
[145.50404358 159.73835754]
[148.87130737 145.12120056]
[155.47610474 131.65357971]
[164.97195435 120.04199982]
[176.86073303 110.89556885]
[190.51876831 104.69409943]
[205.22958374 101.76290894]
[220.22148132 102.25574493]
[234.70802307 106.14677429]
[247.92927551 113.23187256]
[259.19165039 123.13936615]
[267.90438843 135.34953308]
[273.61041260 149.22186279]
[276.01040649 164.02861023]
[274.97848511 178.99307251]
[270.56872559 193.33023071]
[263.01251221 206.28799438]
[252.70619202 217.18661499]
[240.19044495 225.45437622]
[226.12179565 230.65756226]
[211.23826599 232.52323914]
[196.32063293 230.95353699]
[182.15141296 226.03077698]
[169.47393799 218.01321411]
[158.95320129 207.32144165]
[151.14042664 194.51480103]
[152.47865295 209.45498657]
[153.81689453 224.39517212]
[155.15512085 239.33535767]
[159.03767395 247.60359192]
[156.40036011 254.50767517]
[157.51602173 269.46612549]
[158.63166809 284.42459106]
[159.74731445 299.38302612]
[168.75521851 287.38897705]
[183.05839539 282.87017822]
[197.32208252 287.51205444]
[206.22630310 299.58331299]
[206.44998169 314.58163452]
[197.90971375 326.91305542]
[183.79078674 331.97824097]
[169.35922241 327.88800049]
[159.99722290 316.16680908]
[162.74032593 324.87963867]
[159.20426941 331.36947632]
[158.31144714 346.34289551]
[157.41864014 361.31628418]
[164.32081604 375.55252075]
[155.83969116 387.79669189]
[154.94688416 402.77011108]
[154.05406189 417.74349976]
[153.27275085 432.72314453]
[152.60295105 447.70819092]
[151.93316650 462.69323730]
[151.26338196 477.67825317]
[165.96856689 480.80996704]
[179.95767212 486.31951904]
[192.84906006 494.05654907]
[204.29104614 503.81005859]
[213.97149658 515.31390381]
[221.62631226 528.25427246]
[227.04666138 542.27819824]
[230.08468628 557.00299072]
[230.65750122 572.02703857]
[228.74946594 586.94042969]
[224.41264343 601.33636475]
[217.76535034 614.82202148]
[208.98893738 627.02954102]
[198.32279968 637.62597656]
[186.05795288 646.32214355]
[172.52896118 652.88079834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 194]
[21 193]
[22 192]
[23 191]
[25 190]
[26 189]
[27 188]
[29 186]
[30 185]
[31 184]
[32 182]
[33 173]
[34 172]
[35 171]
[36 170]
[37 168]
[38 167]
[39 166]
[40 165]
[41 139]
[42 138]
[43 137]
[44 136]
[45 135]
[46 134]
[48 132]
[49 131]
[52 128]
[54 126]
[55 125]
[59 124]
[60 123]
[62 121]
[63 120]
[66 118]
[67 117]
[68 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
