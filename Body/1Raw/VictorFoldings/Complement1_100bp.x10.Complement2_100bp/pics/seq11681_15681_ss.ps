%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[174.44143677 386.40512085]
[177.47834778 371.70001221]
[182.11453247 357.41824341]
[188.29371643 343.73318481]
[195.94090271 330.81094360]
[204.96324158 318.80844116]
[215.25122070 307.87130737]
[226.67994690 298.13235474]
[218.26533508 285.71484375]
[209.85070801 273.29736328]
[201.43609619 260.87985229]
[192.83752441 248.58901978]
[179.11419678 242.79942322]
[177.30906677 227.08154297]
[168.52845764 214.92007446]
[159.74786377 202.75862122]
[150.96725464 190.59716797]
[142.18664551 178.43571472]
[137.25534058 192.60194397]
[123.15651703 197.72282410]
[110.28331757 190.02342224]
[108.12538910 175.17944336]
[118.27346039 164.13334656]
[133.24531555 165.02706909]
[125.39356232 152.24623108]
[117.54180908 139.46539307]
[109.69005585 126.68454742]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[77.73448944 82.66426849]
[68.77379608 70.63489532]
[51.42095566 68.42170715]
[41.23815918 54.61498260]
[44.13349915 38.04827499]
[34.99469376 26.15364265]
[25.85589218 14.25901031]
[16.71709061 2.36437750]
[7.57828808 -9.53025532]
[-5.08576012 -11.97661972]
[-12.45261383 -22.07182693]
[-11.01359177 -34.08248138]
[-25.46252823 -40.52753830]
[-26.86054993 -55.35638809]
[-26.72218513 -40.35702896]
[-34.01583099 -27.24967384]
[-46.83494568 -19.46055984]
[-61.82864380 -19.02573967]
[-75.07760620 -26.05887413]
[-83.11858368 -38.72151947]
[-83.84969330 -53.70369339]
[-77.07981873 -67.08908844]
[-64.57858276 -75.37879181]
[-49.61379242 -76.40589905]
[-36.09787369 -69.90250397]
[-43.17497635 -83.12803650]
[-50.25208282 -96.35356140]
[-57.32918930 -109.57908630]
[-70.66220093 -118.09621429]
[-69.84502411 -132.96838379]
[-76.92212677 -146.19390869]
[-83.99923706 -159.41943359]
[-97.96036530 -153.88909912]
[-112.46091461 -149.98629761]
[-127.31183624 -147.76190186]
[-142.31951904 -147.24493408]
[-157.28829956 -148.44209290]
[-172.02304077 -151.33781433]
[-186.33163452 -155.89431763]
[-200.02755737 -162.05221558]
[-212.93223572 -169.73121643]
[-224.87744141 -178.83120728]
[-235.70742798 -189.23356628]
[-245.28102112 -200.80265808]
[-253.47340393 -213.38768005]
[-260.17776489 -226.82453918]
[-265.30673218 -240.93806458]
[-268.79339600 -255.54425049]
[-270.59231567 -270.45269775]
[-270.68005371 -285.46902466]
[-269.05541992 -300.39746094]
[-265.73965454 -315.04339600]
[-260.77597046 -329.21588135]
[-254.22904968 -342.73016357]
[-246.18426514 -355.41003418]
[-236.74649048 -367.09020996]
[-226.03878784 -377.61837769]
[-214.20071411 -386.85733032]
[-201.38664246 -394.68658447]
[-187.76361084 -401.00408936]
[-173.50923157 -405.72744751]
[-158.80932617 -408.79513550]
[-143.85554504 -410.16711426]
[-128.84284973 -409.82550049]
[-113.96694946 -407.77478027]
[-99.42179108 -404.04168701]
[-85.39700317 -398.67483521]
[-72.07541656 -391.74426270]
[-59.63070679 -383.34027100]
[-48.22512436 -373.57241821]
[-38.00735855 -362.56811523]
[-29.11062050 -350.47076416]
[-21.65089798 -337.43811035]
[-15.72544384 -323.64004517]
[-11.41150761 -309.25643921]
[-8.76533031 -294.47485352]
[-7.82141018 -279.48794556]
[-8.59205437 -264.49114990]
[-11.06721497 -249.67997742]
[-15.21462345 -235.24748230]
[-20.98020935 -221.38185120]
[-28.28880692 -208.26383972]
[-37.04513168 -196.06448364]
[-47.13503265 -184.94279480]
[-58.42695999 -175.04380798]
[-70.77370453 -166.49655151]
[-63.69660187 -153.27101135]
[-56.61949539 -140.04548645]
[-43.79268646 -132.47434998]
[-44.10366058 -116.65619659]
[-37.02655411 -103.43066406]
[-29.94944954 -90.20513916]
[-22.87234497 -76.97961426]
[-14.83117199 -64.31708527]
[-1.02316344 -58.73244858]
[1.01578593 -43.04317474]
[17.48235893 -36.97531891]
[19.47292137 -18.66905785]
[28.61172295 -6.77442503]
[37.75052643 5.12020779]
[46.88932800 17.01484108]
[56.02812958 28.90947342]
[68.91271973 28.77940941]
[79.68038177 36.20500565]
[84.27279663 48.65973282]
[80.80317688 61.67419815]
[89.76387024 73.70357513]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[116.54075623 90.65955353]
[129.11105347 82.47495270]
[143.81486511 85.44107056]
[152.22918701 97.85876465]
[149.53390503 112.61462402]
[137.27301025 121.25582886]
[122.47089386 118.83278656]
[130.32264709 131.61363220]
[138.17440796 144.39447021]
[146.02616882 157.17530823]
[154.34809875 169.65510559]
[163.12870789 181.81655884]
[171.90931702 193.97802734]
[180.68991089 206.13948059]
[189.47052002 218.30093384]
[203.82189941 224.96040344]
[204.99897766 239.80842590]
[210.86442566 242.85934448]
[213.85906982 247.68936157]
[213.85359192 252.46524048]
[222.26820374 264.88275146]
[230.68283081 277.30023193]
[239.09744263 289.71774292]
[252.37850952 282.71228027]
[266.34963989 277.21041870]
[280.84124756 273.27890015]
[295.67739868 270.96548462]
[310.67797852 270.29821777]
[325.66094971 271.28521729]
[340.44439697 273.91452026]
[354.84884644 278.15420532]
[368.69946289 283.95275879]
[381.82812500 291.23986816]
[394.07543945 299.92700195]
[405.29272461 309.90875244]
[415.34387207 321.06393433]
[424.10681152 333.25714111]
[431.47515869 346.34033203]
[437.35952759 360.15472412]
[441.68847656 374.53262329]
[444.40939331 389.29946899]
[445.48931885 404.27600098]
[444.91510010 419.28045654]
[442.69375610 434.13067627]
[438.85217285 448.64636230]
[433.43707275 462.65136719]
[426.51412964 475.97561646]
[418.16738892 488.45742798]
[408.49819946 499.94525146]
[397.62393188 510.29962158]
[385.67654419 519.39489746]
[372.80114746 527.12060547]
[359.15396118 533.38299561]
[344.90066528 538.10601807]
[330.21432495 541.23242188]
[315.27319336 542.72418213]
[300.25860596 542.56323242]
[285.35287476 540.75146484]
[270.73693848 537.31091309]
[256.58819580 532.28338623]
[243.07841492 525.72979736]
[230.37158203 517.72985840]
[218.62196350 508.38052368]
[207.97218323 497.79537964]
[198.55149841 486.10290527]
[190.47430420 473.44503784]
[183.83860779 459.97540283]
[178.72500610 445.85754395]
[175.19554138 431.26281738]
[173.29306030 416.36837769]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 163]
[9 162]
[10 161]
[11 160]
[12 157]
[14 155]
[15 154]
[16 153]
[17 152]
[18 151]
[24 150]
[25 149]
[26 148]
[27 147]
[28 140]
[30 138]
[31 137]
[32 136]
[35 132]
[36 131]
[37 130]
[38 129]
[39 128]
[42 126]
[44 124]
[55 123]
[56 122]
[57 121]
[58 120]
[60 118]
[61 117]
[62 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
