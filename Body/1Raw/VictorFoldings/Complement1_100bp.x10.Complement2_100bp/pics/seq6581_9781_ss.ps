%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[105.64971924 715.30950928]
[91.24990082 711.09039307]
[77.14999390 705.95733643]
[63.40793610 699.93139648]
[50.08018875 693.03741455]
[37.22152710 685.30371094]
[24.88478851 676.76202393]
[13.12066746 667.44744873]
[1.97750556 657.39831543]
[-8.49890709 646.65582275]
[-18.26552010 635.26422119]
[-27.28220177 623.27026367]
[-35.51189804 610.72326660]
[-42.92079163 597.67474365]
[-49.47843933 584.17828369]
[-55.15789413 570.28948975]
[-59.93581390 556.06530762]
[-63.79256821 541.56427002]
[-66.71231079 526.84588623]
[-68.68303680 511.97064209]
[-69.69665527 496.99972534]
[-69.74900055 481.99462891]
[-68.83985138 467.01702881]
[-66.97294617 452.12841797]
[-64.15596008 437.39001465]
[-60.40046310 422.86239624]
[-55.72189331 408.60522461]
[-50.13947296 394.67712402]
[-43.67614365 381.13531494]
[-36.35845947 368.03540039]
[-28.21649933 355.43127441]
[-19.28371239 343.37469482]
[-9.59680939 331.91522217]
[0.80440378 321.09994507]
[11.87718678 310.97329712]
[23.57603836 301.57687378]
[35.85288620 292.94931030]
[48.65727997 285.12606812]
[61.93660736 278.13928223]
[75.63629150 272.01766968]
[89.70005035 266.78637695]
[104.07007599 262.46688843]
[118.68733978 259.07699585]
[108.97841644 247.78158569]
[114.36207581 232.90452576]
[111.91635132 218.10525513]
[109.47061920 203.30598450]
[107.02489471 188.50671387]
[104.57917023 173.70744324]
[102.13343811 158.90817261]
[88.90969849 157.89413452]
[76.24736786 153.94940186]
[64.78742981 147.27366638]
[55.11000061 138.20487976]
[47.70496750 127.20211029]
[42.94718552 114.82232666]
[41.07749557 101.69221497]
[42.19054794 88.47644043]
[46.22999954 75.84400940]
[52.99136353 64.43438721]
[62.13237000 54.82514191]
[73.19029236 47.50271606]
[85.60536194 42.83778000]
[83.82289124 27.94406319]
[82.04042816 13.05034542]
[80.25796509 -1.84337211]
[78.47549438 -16.73708916]
[74.82503510 -22.24940872]
[74.54797363 -27.92569733]
[76.86850739 -32.09992599]
[75.53027344 -47.04011154]
[74.19203949 -61.98029709]
[72.85380554 -76.92047882]
[57.84165192 -77.15076447]
[42.93581390 -78.94900513]
[28.29960060 -82.29550171]
[14.09338188 -87.15358734]
[0.47280347 -93.47003937]
[-12.41289806 -101.17565155]
[-24.42254066 -110.18598938]
[-35.42453766 -120.40233612]
[-45.29835129 -131.71275330]
[-53.93579102 -143.99331665]
[-61.24222565 -157.10948181]
[-67.13760376 -170.91752625]
[-71.55731964 -185.26618958]
[-74.45296478 -199.99821472]
[-75.79280090 -214.95223999]
[-75.56215668 -229.96438599]
[-73.76355743 -244.87017822]
[-70.41670227 -259.50631714]
[-65.55827332 -273.71240234]
[-59.24148560 -287.33282471]
[-51.53556442 -300.21835327]
[-42.52493668 -312.22778320]
[-32.30832291 -323.22952271]
[-20.99766350 -333.10305786]
[-8.71688747 -341.74020386]
[4.39945316 -349.04632568]
[18.20764732 -354.94134521]
[32.55640411 -359.36071777]
[47.28851318 -362.25601196]
[62.24256134 -363.59548950]
[77.25469971 -363.36447144]
[92.16045380 -361.56552124]
[106.79650116 -358.21829224]
[121.00248718 -353.35952759]
[134.62275696 -347.04241943]
[147.50808716 -339.33618164]
[159.51728821 -330.32525635]
[170.51878357 -320.10836792]
[180.39205933 -308.79748535]
[189.02890015 -296.51647949]
[196.33470154 -283.39996338]
[202.22940063 -269.59164429]
[206.64842224 -255.24276733]
[209.54335022 -240.51058960]
[210.88246155 -225.55651855]
[210.65109253 -210.54437256]
[208.85176086 -195.63867188]
[205.50419617 -181.00270081]
[200.64506531 -166.79684448]
[194.32762146 -153.17672729]
[186.62107849 -140.29158020]
[177.60986328 -128.28259277]
[167.39271545 -117.28134155]
[156.08158875 -107.40835571]
[143.80038452 -98.77180481]
[130.68368530 -91.46633148]
[116.87520599 -85.57196045]
[102.52623749 -81.15328217]
[87.79399109 -78.25871277]
[89.13222504 -63.31853104]
[90.47045898 -48.37834549]
[91.80869293 -33.43815994]
[93.36920929 -18.51955605]
[95.15167999 -3.62583804]
[96.93414307 11.26787949]
[98.71661377 26.16159630]
[100.49907684 41.05531311]
[117.00521851 43.55934525]
[132.14730835 50.59072876]
[144.71070862 61.58544922]
[153.68766785 75.66156769]
[158.35810852 91.68997955]
[158.34738159 108.38497162]
[153.65635681 124.40737152]
[144.66133118 138.47195435]
[132.08381653 149.45051575]
[116.93270874 156.46244812]
[119.37844086 171.26171875]
[121.82416534 186.06098938]
[124.26988983 200.86026001]
[126.71562195 215.65953064]
[129.16134644 230.45880127]
[139.04521179 242.81274414]
[133.48660278 256.63125610]
[148.41731262 255.13807678]
[163.41300964 254.60456848]
[178.41209412 255.03294373]
[193.35289001 256.42144775]
[208.17404175 258.76434326]
[222.81463623 262.05203247]
[237.21449280 266.27099609]
[251.31446838 271.40386963]
[265.05657959 277.42962646]
[278.38439941 284.32345581]
[291.24316406 292.05703735]
[303.57998657 300.59860229]
[315.34420776 309.91302490]
[326.48748779 319.96206665]
[336.96401978 330.70440674]
[346.73077393 342.09591675]
[355.74758911 354.08978271]
[363.97741699 366.63671875]
[371.38644409 379.68515015]
[377.94424438 393.18148804]
[383.62384033 407.07025146]
[388.40194702 421.29437256]
[392.25885010 435.79537964]
[395.17874146 450.51373291]
[397.14965820 465.38894653]
[398.16342163 480.35983276]
[398.21594238 495.36492920]
[397.30694580 510.34255981]
[395.44021606 525.23120117]
[392.62338257 539.96960449]
[388.86807251 554.49725342]
[384.18963623 568.75451660]
[378.60739136 582.68267822]
[372.14419556 596.22454834]
[364.82666016 609.32452393]
[356.68484497 621.92877197]
[347.75219727 633.98541260]
[338.06542969 645.44500732]
[327.66430664 656.26043701]
[316.59164429 666.38720703]
[304.89291382 675.78375244]
[292.61614990 684.41143799]
[279.81182861 692.23480225]
[266.53259277 699.22174072]
[252.83297729 705.34350586]
[238.76927185 710.57495117]
[224.39929199 714.89459229]
[209.78207397 718.28466797]
[194.97769165 720.73126221]
[180.04696655 722.22424316]
[165.05125427 722.75762939]
[150.05218506 722.32904053]
[135.11138916 720.94042969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 157]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[70 135]
[71 134]
[72 133]
[73 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
