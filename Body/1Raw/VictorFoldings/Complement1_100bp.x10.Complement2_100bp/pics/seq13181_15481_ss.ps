%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[117.32048035 374.13272095]
[115.12889099 359.28335571]
[114.27721405 344.29733276]
[114.77231598 329.29531860]
[116.61021423 314.39804077]
[119.77610016 299.72549438]
[124.24449921 285.39581299]
[129.97941589 271.52438354]
[136.93469238 258.22286987]
[145.05430603 245.59835815]
[154.27290344 233.75253296]
[164.51625061 222.78074646]
[175.70187378 212.77134705]
[166.74118042 200.74197388]
[157.78047180 188.71258545]
[143.97247314 183.12794495]
[141.93351746 167.43867493]
[132.97282410 155.40930176]
[123.92282867 143.44696045]
[114.78401947 131.55233765]
[100.89440155 126.17389679]
[98.62208557 110.51671600]
[88.87612152 99.11425781]
[78.54945374 88.23492432]
[68.22277832 77.35558319]
[57.89611435 66.47624969]
[47.56944656 55.59691620]
[32.45701218 50.91450882]
[29.30677032 36.35685730]
[18.98010063 25.47752190]
[8.65343285 14.59818649]
[13.07505608 28.93168831]
[14.65557003 43.84818649]
[13.33588600 58.79002380]
[9.16534233 73.19857788]
[2.29985595 86.53518677]
[-7.00390053 98.30124664]
[-18.39809990 108.05686951]
[-31.45676041 115.43733978]
[-45.69167709 120.16674042]
[-60.57066727 122.06823730]
[-75.53746033 121.07076263]
[-90.03252411 117.21160126]
[-103.51394653 110.63503265]
[-115.47771454 101.58691406]
[-125.47654724 90.40553284]
[-133.13664246 77.50890350]
[-138.17160034 63.37918091]
[-140.39321899 48.54461288]
[-139.71841431 33.55979919]
[-136.17242432 18.98496056]
[-129.88781738 5.36498499]
[-121.09954834 -6.79093266]
[-110.13616943 -17.02833366]
[-97.40756226 -24.96448708]
[-83.38958740 -30.30269432]
[-68.60632324 -32.84337997]
[-53.61045074 -32.49156189]
[-38.96260071 -29.26038933]
[-25.21039200 -23.27066612]
[-12.86796379 -14.74631977]
[-2.40056372 -4.01079941]
[-7.01457310 -18.28353310]
[-11.62858200 -32.55626678]
[-16.24259186 -46.82899857]
[-18.72170830 -32.03528595]
[-25.39749527 -18.60271835]
[-35.69242859 -7.69334793]
[-48.71589279 -0.25094527]
[-63.34123230 3.08064747]
[-78.30319977 2.01321459]
[-92.30744934 -3.36090064]
[-104.14245605 -12.57678318]
[-112.78439331 -24.83716774]
[-117.48562622 -39.08140564]
[-117.83946991 -54.07723236]
[-113.81529999 -68.52735901]
[-105.76125336 -81.18169403]
[-94.37408447 -90.94552612]
[-80.63890076 -96.97418213]
[-65.74392700 -98.74611664]
[-50.97772598 -96.10803986]
[-37.61773300 -89.28817749]
[-26.81970978 -78.87651825]
[-19.51904106 -65.77705383]
[-19.96564674 -80.77040863]
[-20.41225243 -95.76375580]
[-20.85885811 -110.75710297]
[-30.89761543 -126.19422913]
[-21.98299980 -141.31033325]
[-22.65278625 -156.29537964]
[-37.45827103 -159.10505676]
[-51.21647263 -165.25392151]
[-63.18542480 -174.41038513]
[-72.71965790 -186.08065796]
[-79.30500031 -199.63536072]
[-82.58631897 -214.34350586]
[-82.38665009 -229.41191101]
[-78.71676636 -244.02795410]
[-71.77457428 -257.40341187]
[-61.93446350 -268.81695557]
[-49.72709656 -277.65307617]
[-35.81079865 -283.43524170]
[-20.93606377 -285.85162354]
[-5.90506268 -284.77191162]
[8.47159958 -280.25436401]
[21.41860771 -272.54257202]
[32.23774719 -262.05242920]
[40.34555054 -249.34967041]
[45.30478287 -235.11933899]
[46.84799194 -220.12882996]
[44.89195633 -205.18658447]
[39.54216385 -191.09841919]
[31.08711815 -178.62408447]
[19.98279572 -168.43630981]
[6.82803345 -161.08451843]
[-7.66774702 -156.96516418]
[-6.99796152 -141.98011780]
[1.71439588 -133.58837891]
[2.39504361 -121.10957336]
[-5.86550808 -111.20371246]
[-5.41890240 -96.21036530]
[-4.97229624 -81.21701050]
[-4.52569008 -66.22366333]
[-1.96985805 -51.44300842]
[2.64415121 -37.17027664]
[7.25816059 -22.89754295]
[11.87216949 -8.62480831]
[19.53276634 4.27151823]
[29.85943604 15.15085220]
[40.18610382 26.03018761]
[54.55990219 29.93443489]
[58.44878006 45.27024841]
[68.77545166 56.14958191]
[79.10211945 67.02891541]
[89.42878723 77.90824890]
[99.75545502 88.78759003]
[100.05849457 73.79064941]
[109.83544922 62.41474533]
[124.61643219 59.86079407]
[137.64376831 67.29641724]
[142.96153259 81.32215118]
[138.13853455 95.52562714]
[125.37976074 103.41319275]
[110.51671600 101.37791443]
[125.06001282 107.60713959]
[126.67865753 122.41352844]
[135.81745911 134.30816650]
[143.52740479 139.20658875]
[145.00219727 146.44860840]
[153.96290588 158.47798157]
[168.41183472 164.92304993]
[169.80986023 179.75189209]
[178.77055359 191.78126526]
[187.73124695 203.81065369]
[200.52389526 195.95861816]
[213.96890259 189.28492737]
[227.95800781 183.84330750]
[242.37858582 179.67759705]
[257.11453247 176.82131958]
[272.04718018 175.29745483]
[287.05630493 175.11830139]
[302.02108765 176.28529358]
[316.82098389 178.78903198]
[331.33688354 182.60935974]
[345.45190430 187.71551514]
[359.05236816 194.06637573]
[372.02880859 201.61082458]
[384.27670288 210.28811646]
[395.69744873 220.02836609]
[406.19909668 230.75317383]
[415.69711304 242.37617493]
[424.11499023 254.80377197]
[431.38497925 267.93594360]
[437.44851685 281.66690063]
[442.25680542 295.88613892]
[445.77111816 310.47915649]
[447.96319580 325.32843018]
[448.81530762 340.31442261]
[448.32067871 355.31649780]
[446.48321533 370.21380615]
[443.31777954 384.88644409]
[438.84982300 399.21624756]
[433.11532593 413.08786011]
[426.16046143 426.38958740]
[418.04122925 439.01434326]
[408.82299805 450.86047363]
[398.57998657 461.83255005]
[387.39468384 471.84231567]
[375.35711670 480.80911255]
[362.56423950 488.66073608]
[349.11901855 495.33401489]
[335.12973022 500.77520752]
[320.70904541 504.94049072]
[305.97302246 507.79632568]
[291.04031372 509.31970215]
[276.03118896 509.49841309]
[261.06643677 508.33096313]
[246.26660156 505.82678223]
[231.75080872 502.00601196]
[217.63595581 496.89941406]
[204.03569031 490.54812622]
[191.05949402 483.00329590]
[178.81185913 474.32562256]
[167.39140320 464.58502197]
[156.89007568 453.85989380]
[147.39242554 442.23660278]
[138.97491455 429.80874634]
[131.70533752 416.67636108]
[125.64221191 402.94522095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 155]
[14 154]
[15 153]
[17 151]
[18 150]
[19 148]
[20 147]
[22 145]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[29 131]
[30 130]
[31 129]
[62 128]
[63 127]
[64 126]
[65 125]
[85 124]
[86 123]
[87 122]
[88 121]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
