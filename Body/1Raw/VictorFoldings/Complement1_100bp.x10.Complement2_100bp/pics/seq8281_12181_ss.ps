%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[-41.55329895 478.29467773]
[-35.44706345 492.03381348]
[-31.68564796 506.59063721]
[-30.37166023 521.56805420]
[-31.54094887 536.55749512]
[-35.16161728 551.14996338]
[-41.13488770 564.94744873]
[-49.29780197 577.57348633]
[-59.42767715 588.68359375]
[-71.24816132 597.97479248]
[-84.43677521 605.19354248]
[-98.63373566 610.14288330]
[-113.45172882 612.68786621]
[-128.48651123 612.75903320]
[-143.32792664 610.35443115]
[-157.57109070 605.53961182]
[-170.82743835 598.44604492]
[-182.73533630 589.26715088]
[-192.96990967 578.25335693]
[-201.25195312 565.70513916]
[-207.35554504 551.96484375]
[-211.11415100 537.40728760]
[-212.42524719 522.42956543]
[-211.25306702 507.44039917]
[-207.62959290 492.84860229]
[-201.65367126 479.05230713]
[-193.48831177 466.42785645]
[-183.35630798 455.31964111]
[-171.53402710 446.03073120]
[-158.34402466 438.81454468]
[-144.14611816 433.86791992]
[-129.32762146 431.32577515]
[-114.29283142 431.25753784]
[-99.45187378 433.66500854]
[-85.20964050 438.48254395]
[-78.13253021 425.25701904]
[-71.05542755 412.03149414]
[-71.87260437 397.15930176]
[-58.53959274 388.64218140]
[-51.46248627 375.41665649]
[-44.38538361 362.19113159]
[-37.30827713 348.96560669]
[-30.23117065 335.74008179]
[-31.74152184 318.25619507]
[-16.01935005 308.67001343]
[-9.13993835 295.34060669]
[-2.26052570 282.01116943]
[4.61888695 268.68173218]
[11.49829960 255.35231018]
[-2.17214823 261.52636719]
[-17.02562141 259.43487549]
[-28.45960999 249.72590637]
[-32.93116760 235.40789795]
[-29.05473137 220.91744995]
[-18.03146172 210.74456787]
[-3.27703619 208.04142761]
[10.63672638 213.64564514]
[19.39849472 225.82067871]
[20.29328156 240.79421997]
[28.89184570 228.50337219]
[37.49040985 216.21253967]
[46.08897400 203.92170715]
[54.68753815 191.63085938]
[63.10215759 179.21336365]
[71.33096313 166.67196655]
[79.55976868 154.13056946]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[103.83860779 23.58150482]
[103.61508942 19.64265251]
[104.58110046 16.22180176]
[106.41930389 13.63575935]
[108.74032593 12.06381989]
[112.27999878 -2.51255512]
[115.81967163 -17.08893013]
[119.35934448 -31.66530609]
[117.88817596 -36.67357254]
[118.43092346 -41.28429031]
[120.49891663 -44.79690552]
[123.39624023 -46.80633926]
[127.58325195 -61.21012115]
[131.33955383 -75.73217773]
[134.66181946 -90.35964203]
[130.17320251 -105.53076172]
[140.53721619 -116.22824860]
[138.94972229 -122.64630127]
[140.59481812 -128.08602905]
[144.18229675 -131.23866272]
[147.93859863 -145.76072693]
[151.69490051 -160.28277588]
[155.45118713 -174.80484009]
[159.20748901 -189.32690430]
[162.96379089 -203.84896851]
[149.53216553 -210.66111755]
[137.87927246 -220.20176697]
[128.55012512 -232.02467346]
[121.98107147 -245.57685852]
[118.47935486 -260.22445679]
[118.20875549 -275.28237915]
[121.18193817 -290.04632568]
[127.25984192 -303.82577515]
[136.15817261 -315.97622681]
[147.46076965 -325.92938232]
[160.63896179 -333.21975708]
[175.07640076 -337.50628662]
[190.09780884 -338.58856201]
[205.00062561 -336.41589355]
[219.08779907 -331.08996582]
[231.70043945 -322.85983276]
[242.24865723 -312.11044312]
[250.23908997 -299.34457397]
[255.29798889 -285.15933228]
[257.18875122 -270.21813965]
[255.82295227 -255.21984863]
[251.26446533 -240.86595154]
[243.72650146 -227.82781982]
[233.56161499 -216.71524048]
[221.24523926 -208.04800415]
[207.35345459 -202.23146057]
[192.53598022 -199.53768921]
[177.48585510 -200.09266663]
[173.72955322 -185.57060242]
[169.97325134 -171.04853821]
[166.21694946 -156.52648926]
[162.46064758 -142.00442505]
[158.70434570 -127.48236084]
[155.16467285 -112.90599060]
[159.89093018 -98.78112030]
[149.28927612 -87.03737640]
[145.96701050 -72.40991974]
[147.34510803 -69.96881104]
[147.83927917 -66.83473969]
[147.18074036 -63.34164047]
[145.22645569 -59.91450119]
[141.98703003 -57.02310944]
[137.80001831 -42.61932755]
[133.93571472 -28.12563324]
[130.39604187 -13.54925823]
[126.85637665 1.02711737]
[123.31670380 15.60349274]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[108.79368591 130.80015564]
[120.06296539 120.90048981]
[133.17538452 113.61595154]
[147.53440857 109.27792358]
[162.48680115 108.08377075]
[177.35232544 110.08780670]
[191.45469666 115.19887543]
[204.15235901 123.18444824]
[214.86764526 133.68122864]
[223.11309814 146.21170044]
[228.51358032 160.20579529]
[230.82342529 175.02688599]
[229.93754578 190.00070190]
[225.89624023 204.44604492]
[218.88336182 217.70573425]
[209.21794128 229.17655945]
[197.33970642 238.33665466]
[183.78903198 244.76931763]
[169.18237305 248.18190002]
[154.18424988 248.41914368]
[139.47697449 245.47024536]
[125.72961426 239.46939087]
[113.56760406 230.68955994]
[103.54421997 219.53018188]
[96.11547089 206.49891663]
[91.61930084 192.18862915]
[90.26026154 177.25032043]
[92.10117340 162.35937500]
[83.87236786 174.90077209]
[75.64355469 187.44218445]
[74.88585663 194.01008606]
[71.44196320 198.53077698]
[66.97837830 200.22943115]
[58.37981033 212.52026367]
[49.78124619 224.81111145]
[41.18268585 237.10194397]
[32.58412170 249.39277649]
[24.82772827 262.23171997]
[17.94831657 275.56115723]
[11.06890392 288.89059448]
[4.18949127 302.22000122]
[-2.68992162 315.54943848]
[0.48118594 328.05172729]
[-5.52310610 339.01220703]
[-17.00564384 342.81716919]
[-24.08274841 356.04269409]
[-31.15985489 369.26824951]
[-38.23696136 382.49377441]
[-45.31406403 395.71929932]
[-45.00308990 411.53744507]
[-57.82989883 419.10858154]
[-64.90700531 432.33410645]
[-71.98410797 445.55963135]
[-60.07445526 454.73623657]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 209]
[36 208]
[37 207]
[39 205]
[40 204]
[41 203]
[42 202]
[43 201]
[45 198]
[46 197]
[47 196]
[48 195]
[49 194]
[59 193]
[60 192]
[61 191]
[62 190]
[63 189]
[64 186]
[65 185]
[66 184]
[67 156]
[68 155]
[69 154]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[80 147]
[81 146]
[82 145]
[83 144]
[87 143]
[88 142]
[89 137]
[90 136]
[92 134]
[95 133]
[96 132]
[97 131]
[98 130]
[99 129]
[100 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
