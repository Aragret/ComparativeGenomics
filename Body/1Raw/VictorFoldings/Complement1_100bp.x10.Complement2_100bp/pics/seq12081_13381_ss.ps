%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[164.79391479 426.15328979]
[163.32635498 411.21655273]
[163.09729004 396.20965576]
[164.10826111 381.23510742]
[166.35238647 366.39517212]
[169.81433105 351.79125977]
[174.47044373 337.52310181]
[180.28890991 323.68817139]
[187.22998047 310.38101196]
[195.24626160 297.69247437]
[204.28298950 285.70925903]
[214.27841187 274.51324463]
[203.95173645 263.63391113]
[193.62507629 252.75456238]
[183.29840088 241.87522888]
[172.97174072 230.99589539]
[162.64506531 220.11656189]
[152.31840515 209.23722839]
[141.99172974 198.35789490]
[131.66505432 187.47856140]
[136.12046814 201.80158997]
[137.32273865 216.75334167]
[135.21319580 231.60426331]
[129.89476013 245.62974548]
[121.62695312 258.14547729]
[110.81317139 268.54077148]
[97.98103333 276.30841064]
[83.75665283 281.06939697]
[68.83407593 282.59146118]
[53.94140244 280.80029297]
[39.80527878 275.78332520]
[27.11543655 267.78533936]
[16.49104500 257.19656372]
[8.45048809 244.53363037]
[3.38608527 230.41442871]
[1.54493856 215.52786255]
[3.01688194 200.60025024]
[7.73009586 186.35997009]
[15.45461273 173.50183105]
[25.81353569 162.65319824]
[38.30142975 154.34341431]
[52.30898285 148.97793579]
[67.15273285 146.81854248]
[82.10842896 147.97059631]
[96.44634247 152.37788391]
[109.46689606 159.82539368]
[120.53042603 169.94473267]
[115.07506561 155.97192383]
[109.61971283 141.99913025]
[104.16435242 128.02633667]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[75.52657318 64.80857086]
[69.24920654 51.18525696]
[62.97184753 37.56193924]
[56.69448853 23.93862343]
[56.14858627 38.92868805]
[51.63131714 53.23233414]
[43.46878433 65.81697083]
[32.25024796 75.77410126]
[18.78558159 82.38491058]
[4.04681540 85.17215729]
[-10.90204906 83.93463135]
[-24.98183823 78.76167297]
[-37.17612457 70.02671814]
[-46.60458755 58.36035538]
[-52.58657837 44.60478210]
[-54.69025421 29.75302887]
[-52.76374817 14.87725830]
[-46.94613647 1.05136251]
[-37.65739441 -10.72655392]
[-25.56809044 -19.60623360]
[-11.55095863 -24.94664383]
[3.38209343 -26.36225891]
[18.15303421 -23.75087929]
[31.69553757 -17.30102730]
[43.03195953 -7.47832012]
[51.34441757 5.00917673]
[49.56195450 -9.88454056]
[47.77948761 -24.77825737]
[44.12902451 -30.29057693]
[43.85196686 -35.96686554]
[46.17249680 -40.14109421]
[44.83426285 -55.08127975]
[43.49602890 -70.02146149]
[42.15779495 -84.96164703]
[33.22015762 -98.01650238]
[39.79113388 -111.38330841]
[38.45289612 -126.32349396]
[23.58642387 -128.90232849]
[9.89437199 -135.24189758]
[-1.68971169 -144.90995789]
[-10.37600517 -157.24732971]
[-15.57226181 -171.41282654]
[-16.92419243 -186.44062805]
[-14.33962154 -201.30610657]
[-7.99476719 -214.99569702]
[1.67776656 -226.57604980]
[14.01849079 -235.25758362]
[28.18599319 -240.44836426]
[43.21431351 -241.79449463]
[58.07878876 -239.20419312]
[71.76594543 -232.85404968]
[83.34255981 -223.17704773]
[92.01931763 -210.83296204]
[97.20463562 -196.66346741]
[98.54496002 -181.63462830]
[95.94891357 -166.77114868]
[89.59349060 -153.08645630]
[79.91201782 -141.51356506]
[67.56459045 -132.84156799]
[53.39308167 -127.66172791]
[54.73131561 -112.72154236]
[63.57323456 -100.73531342]
[57.09798050 -86.29988098]
[58.43621445 -71.35969543]
[59.77444839 -56.41951370]
[61.11268234 -41.47932816]
[62.67320633 -26.56072426]
[64.45567322 -11.66700649]
[66.23813629 3.22671056]
[70.31780243 17.66126442]
[76.59516144 31.28458023]
[82.87252808 44.90789413]
[89.14988708 58.53121185]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[115.55120087 110.32365417]
[117.99224854 113.42298126]
[119.16166687 116.77974701]
[119.13787842 119.95244598]
[118.13715363 122.57097626]
[123.59250641 136.54377747]
[129.04786682 150.51657104]
[134.50321960 164.48936462]
[142.54440308 177.15190125]
[152.87106323 188.03123474]
[163.19773865 198.91056824]
[173.52439880 209.78990173]
[183.85107422 220.66923523]
[194.17773438 231.54856873]
[204.50440979 242.42790222]
[214.83106995 253.30723572]
[225.15774536 264.18655396]
[236.85922241 254.78788757]
[249.29685974 246.38761902]
[262.38571167 239.04315186]
[276.03637695 232.80464172]
[290.15557861 227.71470642]
[304.64691162 223.80812073]
[319.41131592 221.11157227]
[334.34799194 219.64347839]
[349.35488892 219.41386414]
[364.32949829 220.42430115]
[379.16949463 222.66790771]
[393.77352905 226.12931824]
[408.04187012 230.78491211]
[421.87698364 236.60289001]
[435.18441772 243.54350281]
[447.87322998 251.55932617]
[459.85675049 260.59561157]
[471.05313110 270.59063721]
[481.38589478 281.47613525]
[490.78442383 293.17770386]
[499.18453979 305.61544800]
[506.52886963 318.70440674]
[512.76721191 332.35513306]
[517.85699463 346.47439575]
[521.76336670 360.96575928]
[524.45977783 375.73022461]
[525.92767334 390.66690063]
[526.15710449 405.67379761]
[525.14648438 420.64837646]
[522.90270996 435.48837280]
[519.44110107 450.09237671]
[514.78533936 464.36062622]
[508.96722412 478.19567871]
[502.02645874 491.50302124]
[494.01046753 504.19174194]
[484.97406006 516.17517090]
[474.97888184 527.37145996]
[464.09329224 537.70404053]
[452.39160156 547.10247803]
[439.95373535 555.50244141]
[426.86471558 562.84661865]
[413.21389771 569.08477783]
[399.09457397 574.17437744]
[384.60317993 578.08062744]
[369.83868408 580.77679443]
[354.90197754 582.24456787]
[339.89508057 582.47381592]
[324.92050171 581.46301270]
[310.08053589 579.21905518]
[295.47659302 575.75726318]
[281.20837402 571.10137939]
[267.37338257 565.28308105]
[254.06613159 558.34210205]
[241.37750244 550.32598877]
[229.39419556 541.28942871]
[218.19804382 531.29412842]
[207.86555481 520.40838623]
[198.46728516 508.70660400]
[190.06747437 496.26864624]
[182.72346497 483.17953491]
[176.48544312 469.52865601]
[171.39601135 455.40924072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 148]
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[47 139]
[48 138]
[49 137]
[50 136]
[51 131]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[80 123]
[81 122]
[82 121]
[85 120]
[86 119]
[87 118]
[88 117]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
