%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[70.23167419 316.26263428]
[67.51401520 331.02368164]
[63.55431747 345.50103760]
[58.38110733 359.59048462]
[52.03165817 373.19039917]
[44.55171967 386.20288086]
[35.99518204 398.53411865]
[26.42370033 410.09527588]
[15.90623665 420.80307007]
[4.51857185 430.58035278]
[-7.65724564 439.35662842]
[-20.53348541 447.06872559]
[-34.01737595 453.66104126]
[-48.01176071 459.08609009]
[-62.41580582 463.30474854]
[-77.12573242 466.28668213]
[-92.03555298 468.01034546]
[-107.03784180 468.46337891]
[-122.02450562 467.64245605]
[-136.88755798 465.55355835]
[-151.51989746 462.21166992]
[-165.81613159 457.64093018]
[-179.67321777 451.87420654]
[-192.99133301 444.95312500]
[-205.67451477 436.92749023]
[-217.63137817 427.85513306]
[-228.77577209 417.80145264]
[-239.02738953 406.83889771]
[-248.31237793 395.04641724]
[-256.56384277 382.50897217]
[-263.72232056 369.31692505]
[-269.73623657 355.56533813]
[-274.56225586 341.35324097]
[-278.16561890 326.78308105]
[-280.52035522 311.95980835]
[-281.60949707 296.99026489]
[-281.42520142 281.98226929]
[-279.96878052 267.04397583]
[-277.25073242 252.28300476]
[-273.29067993 237.80572510]
[-268.11709595 223.71643066]
[-261.76730347 210.11666870]
[-254.28701782 197.10438538]
[-245.73016357 184.77336121]
[-236.15838623 173.21244812]
[-225.64064026 162.50492859]
[-214.25273132 152.72795105]
[-202.07667542 143.95198059]
[-189.20024109 136.24021912]
[-175.71618652 129.64825439]
[-161.72166443 124.22357941]
[-147.31750488 120.00527191]
[-132.60749817 117.02373505]
[-117.69763184 115.30043793]
[-102.69532776 114.84780121]
[-87.70869446 115.66909790]
[-72.84569550 117.75839996]
[-58.21343231 121.10065460]
[-43.91732407 125.67177582]
[-30.06038475 131.43884277]
[-16.74244881 138.36029053]
[-4.05947590 146.38624573]
[7.89715052 155.45889282]
[19.04128265 165.51286316]
[29.99719048 155.26747131]
[34.00833511 140.92312622]
[49.37267685 137.14852905]
[60.32858658 126.90313721]
[64.33972931 112.55879974]
[79.70407104 108.78420258]
[90.65998077 98.53881073]
[92.01793671 93.47225952]
[96.11791992 89.52720642]
[102.09795380 88.15748596]
[113.35404968 78.24283600]
[124.61014557 68.32818604]
[135.86624146 58.41353226]
[147.12234497 48.49887848]
[158.37843323 38.58422852]
[163.61999512 23.65651703]
[178.28479004 21.05020523]
[189.54089355 11.13555431]
[174.56561279 10.27462482]
[163.56143188 0.08109763]
[161.55931091 -14.78468513]
[169.47459412 -27.52628708]
[183.68850708 -32.31842041]
[197.70265198 -26.97018433]
[205.10995483 -13.92672253]
[202.52296448 0.85028112]
[214.74945068 -7.83954334]
[226.97593689 -16.52936745]
[239.20242310 -25.21919250]
[251.42890930 -33.90901566]
[263.65539551 -42.59884262]
[275.88189697 -51.28866577]
[268.12615967 -64.13627625]
[261.35223389 -77.52754974]
[255.59800720 -91.38759613]
[250.89562988 -105.63890839]
[247.27139282 -120.20177460]
[244.74559021 -134.99476624]
[243.33235168 -149.93515015]
[243.03955078 -164.93936157]
[243.86883545 -179.92350769]
[245.81558228 -194.80377197]
[248.86889648 -209.49694824]
[253.01170349 -223.92086792]
[258.22082520 -237.99485779]
[264.46716309 -251.64021301]
[271.71572876 -264.78060913]
[279.92602539 -277.34259033]
[289.05212402 -289.25588989]
[299.04299927 -300.45385742]
[309.84277344 -310.87390137]
[321.39102173 -320.45773315]
[333.62319946 -329.15176392]
[346.47088623 -336.90737915]
[359.86221313 -343.68118286]
[373.72232056 -349.43530273]
[387.97366333 -354.13754272]
[402.53656006 -357.76165771]
[417.32955933 -360.28732300]
[432.26995850 -361.70043945]
[447.27416992 -361.99310303]
[462.25833130 -361.16369629]
[477.13858032 -359.21679688]
[491.83172607 -356.16336060]
[506.25558472 -352.02041626]
[520.32952881 -346.81118774]
[533.97485352 -340.56472778]
[547.11517334 -333.31604004]
[559.67706299 -325.10562134]
[571.59027100 -315.97943115]
[582.78820801 -305.98846436]
[593.20812988 -295.18859863]
[602.79187012 -283.64025879]
[611.48577881 -271.40802002]
[619.24127197 -258.56027222]
[626.01495361 -245.16886902]
[631.76898193 -231.30871582]
[636.47106934 -217.05732727]
[640.09509277 -202.49440002]
[642.62060547 -187.70135498]
[644.03356934 -172.76095581]
[644.32611084 -157.75672913]
[643.49658203 -142.77261353]
[641.54956055 -127.89237213]
[638.49597168 -113.19924927]
[634.35290527 -98.77540588]
[629.14355469 -84.70150757]
[622.89697266 -71.05626678]
[615.64819336 -57.91598129]
[607.43768311 -45.35415268]
[598.31134033 -33.44102097]
[588.32031250 -22.24321938]
[577.52032471 -11.82336617]
[565.97192383 -2.23973441]
[553.73956299 6.45407915]
[540.89178467 14.20945454]
[527.50030518 20.98302078]
[513.64013672 26.73689651]
[499.38867188 31.43890190]
[484.82571411 35.06274414]
[470.03265381 37.58815384]
[455.09225464 39.00101089]
[440.08801270 39.29341125]
[425.10391235 38.46371841]
[410.22369385 36.51657867]
[395.53057861 33.46287537]
[381.10678101 29.31968880]
[367.03292847 24.11018944]
[353.38772583 17.86351013]
[340.24752808 10.61458588]
[327.68576050 2.40395665]
[315.77270508 -6.72246075]
[304.57501221 -16.71362686]
[294.15524292 -27.51366615]
[284.57171631 -39.06217957]
[272.34521484 -30.37235451]
[260.11874390 -21.68253136]
[247.89225769 -12.99270630]
[235.66577148 -4.30288219]
[223.43928528 4.38694239]
[211.21279907 13.07676697]
[199.45555115 22.39164925]
[188.19944763 32.30630112]
[183.76300049 46.52485275]
[168.29309082 49.84032440]
[157.03698730 59.75497437]
[145.78089905 69.66962433]
[134.52479553 79.58428192]
[123.26869965 89.49893188]
[112.01260376 99.41358185]
[100.90537262 109.49472046]
[89.94946289 119.74011230]
[85.15467834 134.81726074]
[70.57397461 137.85905457]
[59.61806870 148.10444641]
[54.82328415 163.18159485]
[40.24258423 166.22337341]
[29.28667259 176.46876526]
[38.57197189 188.26101685]
[46.82375717 200.79823303]
[53.98257828 213.99009705]
[59.99684906 227.74154663]
[64.82324219 241.95350647]
[68.42697906 256.52355957]
[70.78208923 271.34677124]
[71.87162018 286.31631470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 202]
[65 201]
[67 199]
[68 198]
[70 196]
[71 195]
[74 194]
[75 193]
[76 192]
[77 191]
[78 190]
[79 189]
[81 187]
[82 186]
[90 185]
[91 184]
[92 183]
[93 182]
[94 181]
[95 180]
[96 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
