%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[168.77932739 623.74182129]
[157.88331604 613.42492676]
[147.68539429 602.41741943]
[138.22923279 590.76654053]
[129.55532837 578.52209473]
[121.70081329 565.73663330]
[114.69933319 552.46478271]
[108.58086395 538.76342773]
[103.37161255 524.69128418]
[99.09388733 510.30853271]
[95.76599121 495.67681885]
[93.40219116 480.85876465]
[92.01260376 465.91784668]
[91.60317230 450.91802979]
[92.17565918 435.92352295]
[93.72761536 420.99859619]
[96.25238037 406.20712280]
[99.73915863 391.61245728]
[104.17301178 377.27706909]
[109.53495026 363.26235962]
[115.80202484 349.62835693]
[122.94738007 336.43344116]
[130.94044495 323.73410034]
[139.74696350 311.58471680]
[149.32923889 300.03732300]
[159.64624023 289.14135742]
[170.65377808 278.94351196]
[182.30471802 269.48739624]
[194.54917908 260.81356812]
[186.69741821 248.03273010]
[178.84567261 235.25189209]
[164.34417725 232.05154419]
[156.19931030 219.20181274]
[159.65443420 204.01300049]
[151.80268860 191.23216248]
[143.95092773 178.45132446]
[136.09916687 165.67047119]
[128.24742126 152.88963318]
[119.92547607 140.40983582]
[111.14487457 128.24838257]
[102.36426544 116.08692932]
[86.88842010 109.61589813]
[85.36710358 92.91075134]
[76.40641022 80.88137054]
[61.95747375 74.43630981]
[60.55945206 59.60746384]
[46.11051559 53.16240311]
[44.71249390 38.33355331]
[35.75179672 26.30417633]
[26.79110336 14.27479744]
[17.83040619 2.24541998]
[5.00553513 10.04651833]
[-8.49349689 16.61238480]
[-22.54805756 21.88531685]
[-37.03462982 25.81897354]
[-51.82590485 28.37878799]
[-66.79189301 29.54226112]
[-81.80107117 29.29916763]
[-96.72153473 27.65164566]
[-111.42214966 24.61417389]
[-125.77374268 20.21344566]
[-139.65016174 14.48813629]
[-152.92948914 7.48856020]
[-165.49501038 -0.72376794]
[-177.23628235 -10.07667637]
[-188.05014038 -20.48797035]
[-197.84153748 -31.86615181]
[-206.52442932 -44.11122894]
[-214.02250671 -57.11558533]
[-220.26986694 -70.76493835]
[-225.21162415 -84.93933868]
[-228.80433655 -99.51420593]
[-231.01644897 -114.36146545]
[-231.82849121 -129.35063171]
[-231.23335266 -144.34997559]
[-229.23623657 -159.22767639]
[-225.85472107 -173.85299683]
[-221.11851501 -188.09738159]
[-215.06922913 -201.83567810]
[-207.76005554 -214.94712830]
[-199.25518799 -227.31652832]
[-189.62940979 -238.83514404]
[-178.96728516 -249.40177917]
[-167.36251831 -258.92355347]
[-154.91711426 -267.31677246]
[-141.74043274 -274.50769043]
[-127.94826508 -280.43313599]
[-113.66183472 -285.04098511]
[-99.00669098 -288.29080200]
[-84.11162567 -290.15396118]
[-69.10753632 -290.61413574]
[-54.12628174 -289.66726685]
[-39.29952621 -287.32168579]
[-24.75756645 -283.59799194]
[-10.62820530 -278.52890015]
[2.96438956 -272.15896606]
[15.90076160 -264.54421997]
[28.06722260 -255.75149536]
[39.35685349 -245.85812378]
[49.67043304 -234.95104980]
[58.91733170 -223.12609863]
[67.01627350 -210.48721313]
[73.89609528 -197.14544678]
[79.49633026 -183.21806335]
[83.76776123 -168.82746887]
[86.67285156 -154.10011292]
[88.18606567 -139.16543579]
[88.29411316 -124.15467834]
[86.99604034 -109.19976807]
[84.30326080 -94.43212128]
[80.23942566 -79.98152161]
[74.84026337 -65.97497559]
[68.15321350 -52.53555679]
[60.23704529 -39.78139114]
[51.16133118 -27.82455826]
[41.00582504 -16.77013588]
[29.85978508 -6.71527576]
[38.82048035 5.31410170]
[47.78117752 17.34347916]
[56.74187088 29.37285614]
[70.54988098 34.95749664]
[72.58882904 50.64676666]
[86.39683533 56.23140335]
[88.43579102 71.92067719]
[97.39648438 83.95005798]
[108.79803467 86.32617188]
[115.68569946 95.71772003]
[114.52572632 107.30632782]
[123.30632782 119.46778107]
[132.08692932 131.62924194]
[137.01824951 117.46300507]
[151.11706543 112.34213257]
[163.99026489 120.04153442]
[166.14819336 134.88549805]
[156.00012207 145.93161011]
[141.02825928 145.03787231]
[148.88002014 157.81872559]
[156.73176575 170.59956360]
[164.58352661 183.38040161]
[172.43528748 196.16125488]
[187.54568481 199.94453430]
[195.32641602 213.01797485]
[191.62651062 227.40013123]
[199.47827148 240.18096924]
[207.33001709 252.96182251]
[220.60173035 245.96009827]
[234.30296326 239.84140015]
[248.37503052 234.63189697]
[262.75769043 230.35391235]
[277.38937378 227.02575684]
[292.20739746 224.66169739]
[307.14828491 223.27183533]
[322.14810181 222.86215210]
[337.14257812 223.43437195]
[352.06756592 224.98605347]
[366.85906982 227.51055908]
[381.45382690 230.99708557]
[395.78927612 235.43067932]
[409.80407715 240.79237366]
[423.43820190 247.05920410]
[436.63323975 254.20433044]
[449.33273315 262.19717407]
[461.48226929 271.00347900]
[473.02981567 280.58554077]
[483.92596436 290.90234375]
[494.12402344 301.90969849]
[503.58032227 313.56048584]
[512.25439453 325.80477905]
[520.10900879 338.59020996]
[527.11065674 351.86193848]
[533.22930908 365.56320190]
[538.43872070 379.63531494]
[542.71661377 394.01800537]
[546.04467773 408.64968872]
[548.40863037 423.46771240]
[549.79840088 438.40863037]
[550.20800781 453.40844727]
[549.63568115 468.40292358]
[548.08392334 483.32788086]
[545.55932617 498.11938477]
[542.07275391 512.71411133]
[537.63903809 527.04956055]
[532.27728271 541.06433105]
[526.01037598 554.69842529]
[518.86517334 567.89343262]
[510.87225342 580.59283447]
[502.06588745 592.74230957]
[492.48373413 604.28985596]
[482.16687012 615.18591309]
[471.15945435 625.38391113]
[459.50860596 634.84014893]
[447.26425171 643.51409912]
[434.47879028 651.36871338]
[421.20700073 658.37023926]
[407.50570679 664.48876953]
[393.43356323 669.69812012]
[379.05084229 673.97595215]
[364.41915894 677.30389404]
[349.60110474 679.66778564]
[334.66018677 681.05749512]
[319.66036987 681.46697998]
[304.66589355 680.89459229]
[289.74093628 679.34277344]
[274.94946289 676.81805420]
[260.35476685 673.33135986]
[246.01934814 668.89758301]
[232.00460815 663.53576660]
[218.37057495 657.26873779]
[205.17559814 650.12347412]
[192.47621155 642.13049316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 145]
[30 144]
[31 143]
[34 140]
[35 139]
[36 138]
[37 137]
[38 136]
[39 130]
[40 129]
[41 128]
[43 125]
[44 124]
[46 122]
[48 120]
[49 119]
[50 118]
[51 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
