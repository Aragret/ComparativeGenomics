%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[-31.24518776 373.65856934]
[-31.25586510 388.66848755]
[-32.59309006 403.61871338]
[-35.24639511 418.39227295]
[-39.19501877 432.87350464]
[-44.40805817 446.94906616]
[-50.84470367 460.50885010]
[-58.45458984 473.44665527]
[-67.17815399 485.66128540]
[-76.94712067 497.05712891]
[-87.68502808 507.54495239]
[-99.30784607 517.04272461]
[-111.72460175 525.47613525]
[-124.83811188 532.77911377]
[-138.54576111 538.89447021]
[-152.74023438 543.77447510]
[-167.31047058 547.38085938]
[-182.14242554 549.68536377]
[-197.12001038 550.66998291]
[-212.12602234 550.32702637]
[-227.04298401 548.65917969]
[-241.75416565 545.67950439]
[-256.14443970 541.41125488]
[-270.10116577 535.88793945]
[-283.51510620 529.15270996]
[-296.28131104 521.25823975]
[-308.29983521 512.26641846]
[-319.47662354 502.24758911]
[-329.72418213 491.28015137]
[-338.96234131 479.44992065]
[-347.11877441 466.84951782]
[-354.12966919 453.57757568]
[-359.94012451 439.73791504]
[-364.50469971 425.43887329]
[-367.78762817 410.79235840]
[-369.76324463 395.91302490]
[-370.41610718 380.91732788]
[-369.74105835 365.92260742]
[-367.74337769 351.04620361]
[-364.43875122 336.40457153]
[-359.85302734 322.11233521]
[-354.02206421 308.28128052]
[-346.99154663 295.01971436]
[-338.81643677 282.43142700]
[-329.56076050 270.61489868]
[-319.29696655 259.66262817]
[-308.10534668 249.66035461]
[-296.07354736 240.68634033]
[-283.29565430 232.81083679]
[-269.87173462 226.09547424]
[-255.90686035 220.59280396]
[-241.51028442 216.34590149]
[-226.79469299 213.38798523]
[-211.87527466 211.74223328]
[-196.86878967 211.42150879]
[-181.89266968 212.42832947]
[-167.06414795 214.75482178]
[-152.49926758 218.38275146]
[-138.31202698 223.28375244]
[-124.61345673 229.41946411]
[-111.51077271 236.74183655]
[-99.10652161 245.19360352]
[-87.49778748 254.70858765]
[-76.77542114 265.21231079]
[-65.37296295 255.46635437]
[-53.97049713 245.72038269]
[-42.56803513 235.97442627]
[-31.16557312 226.22845459]
[-35.28968430 208.58299255]
[-29.86012077 191.20535278]
[-16.29758072 178.93231201]
[1.70110786 175.22578430]
[19.17041779 181.19656372]
[30.12632751 170.95117188]
[34.13747406 156.60684204]
[49.50181198 152.83224487]
[60.45772171 142.58685303]
[71.41363525 132.34146118]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.29914093 59.25054550]
[119.67774963 45.67433548]
[125.34053802 31.78431129]
[131.00332642 17.89428329]
[126.72946167 5.72477531]
[131.73196411 -5.72767973]
[142.82925415 -10.54191113]
[148.69821167 -24.34608841]
[154.56716919 -38.15026474]
[157.99822998 -52.75258636]
[158.89105225 -67.72599030]
[159.78385925 -82.69940186]
[160.67668152 -97.67280579]
[161.56948853 -112.64620972]
[162.46231079 -127.61961365]
[163.35513306 -142.59301758]
[149.43492126 -148.59332275]
[138.40856934 -158.99502563]
[131.60754395 -172.54203796]
[129.85310364 -187.59852600]
[133.35711670 -202.34632874]
[141.69644165 -215.00459290]
[153.86407471 -224.04473877]
[168.39071655 -228.37516785]
[183.52220154 -227.47291565]
[197.43132019 -221.44697571]
[208.43849182 -211.02497864]
[215.21455383 -197.46543884]
[216.94123840 -182.40574646]
[213.41004944 -167.66442871]
[205.04740906 -155.02156067]
[192.86312866 -146.00384521]
[178.32853699 -141.70021057]
[177.43571472 -126.72679901]
[176.54290771 -111.75339508]
[175.65008545 -96.77999115]
[174.75726318 -81.80657959]
[173.86445618 -66.83317566]
[172.97163391 -51.85977173]
[180.44158936 -64.86745453]
[190.87509155 -75.64437866]
[203.63410950 -83.53153992]
[217.93844604 -88.04663086]
[232.91337585 -88.91355133]
[247.64317322 -86.07929230]
[261.22711182 -79.71717072]
[272.83453369 -70.21622467]
[281.75561523 -58.15744400]
[287.44485474 -44.27823257]
[289.55435181 -29.42730331]
[287.95507812 -14.51280117]
[282.74487305 -0.44675130]
[274.24234009 11.91070175]
[262.96737671 21.80389404]
[249.60946655 28.62785530]
[234.98545837 31.96529388]
[219.98962402 31.61212921]
[205.53894043 27.58995247]
[192.51708984 20.14472580]
[181.72036743 9.73172283]
[173.80897522 -3.01229310]
[169.26672363 -17.30802345]
[168.37135315 -32.28130341]
[162.50238037 -18.47712708]
[156.63342285 -4.67295074]
[159.69758606 12.60645390]
[144.89335632 23.55706978]
[139.23056030 37.44709778]
[133.56777954 51.33712387]
[147.35942078 45.43878174]
[161.75175476 49.66497040]
[170.16479492 62.08353424]
[168.75221252 77.01687622]
[158.15982056 87.63766479]
[143.23031616 89.09022522]
[130.78927612 80.71047211]
[126.52467346 66.32765198]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[106.03002167 118.87019348]
[120.08587646 113.63256073]
[135.01325989 112.15841675]
[149.82209778 114.54553986]
[163.53016663 120.63560486]
[175.22825623 130.02467346]
[184.14048767 142.09001160]
[189.67572021 156.03135681]
[191.46685791 170.92402649]
[189.39506531 185.78027344]
[183.59776306 199.61470032]
[174.45948792 211.50973511]
[162.58633423 220.67642212]
[148.76580811 226.50675964]
[133.91456604 228.61405945]
[119.01764679 226.85855103]
[105.06311035 221.35664368]
[92.97650909 212.47329712]
[83.55950165 200.79766846]
[77.43668365 187.10420227]
[75.01416779 172.30111694]
[76.45262146 157.37025452]
[81.65901947 143.29736328]
[70.70311737 153.54275513]
[59.74720383 163.78814697]
[54.95241928 178.86531067]
[40.37171936 181.90708923]
[29.41580963 192.15248108]
[33.61303329 203.41442871]
[33.76651764 215.39750671]
[29.88161278 226.69779968]
[22.43543816 235.99929810]
[12.31839085 242.22709656]
[0.72772849 244.67156982]
[-10.97410011 243.06924438]
[-21.41960716 237.63092041]
[-32.82207108 247.37687683]
[-44.22453308 257.12286377]
[-55.62699509 266.86880493]
[-67.02945709 276.61477661]
[-58.32328033 288.84179688]
[-50.73180771 301.79043579]
[-44.31445694 315.35934448]
[-39.12144852 329.44232178]
[-35.19343185 343.92916870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 205]
[65 204]
[66 203]
[67 202]
[68 201]
[73 193]
[74 192]
[76 190]
[77 189]
[78 188]
[79 165]
[80 164]
[82 162]
[83 161]
[84 160]
[85 152]
[86 151]
[87 150]
[90 148]
[91 147]
[92 146]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
