%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[20.57622337 707.99310303]
[7.98469067 716.15832520]
[-5.18830824 723.34783936]
[-18.86731911 729.52056885]
[-32.97398758 734.64105225]
[-47.42751312 738.67999268]
[-62.14510345 741.61419678]
[-77.04245758 743.42700195]
[-92.03424835 744.10791016]
[-107.03459930 743.65307617]
[-121.95758820 742.06500244]
[-136.71774292 739.35296631]
[-151.23049927 735.53234863]
[-165.41275024 730.62506104]
[-179.18324280 724.65930176]
[-192.46311951 717.66912842]
[-205.17630005 709.69464111]
[-217.24995422 700.78149414]
[-228.61494446 690.98071289]
[-239.20616150 680.34857178]
[-248.96295166 668.94580078]
[-257.82940674 656.83782959]
[-265.75476074 644.09393311]
[-272.69360352 630.78717041]
[-278.60620117 616.99377441]
[-283.45864868 602.79266357]
[-287.22320557 588.26525879]
[-289.87829590 573.49475098]
[-291.40869141 558.56573486]
[-291.80563354 543.56378174]
[-291.06686401 528.57470703]
[-289.19656372 513.68444824]
[-286.20550537 498.97830200]
[-282.11080933 484.54049683]
[-276.93591309 470.45370483]
[-270.71044922 456.79861450]
[-263.47012329 443.65347290]
[-255.25634766 431.09356689]
[-246.11621094 419.19082642]
[-236.10205078 408.01342773]
[-225.27124023 397.62539673]
[-213.68582153 388.08627319]
[-201.41212463 379.45065308]
[-188.52049255 371.76800537]
[-175.08474731 365.08233643]
[-161.18183899 359.43197632]
[-146.89141846 354.84924316]
[-132.29534912 351.36041260]
[-117.47721863 348.98547363]
[-102.52191162 347.73800659]
[-87.51509094 347.62515259]
[-72.54271698 348.64761353]
[-57.69054794 350.79946899]
[-43.04365921 354.06842041]
[-28.68595123 358.43576050]
[-14.69965839 363.87643433]
[-8.22016239 350.34811401]
[-1.74066687 336.81976318]
[4.63793802 323.24356079]
[10.91529846 309.62023926]
[17.19265938 295.99691772]
[23.47002029 282.37359619]
[29.74738121 268.75027466]
[36.02474213 255.12696838]
[41.68752670 241.23693848]
[46.72444534 227.10791016]
[43.71015549 212.52149963]
[55.63221359 202.12077332]
[60.66912842 187.99174500]
[65.70604706 173.86271667]
[59.10997391 160.55755615]
[64.01684570 146.15695190]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[84.64415741 94.65423584]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[88.55923462 59.75587082]
[78.50785065 46.03085327]
[73.18203735 29.89294434]
[73.08992004 12.91713142]
[78.22940063 -3.24342203]
[88.08946228 -17.01835251]
[101.70093536 -27.07269096]
[117.73175049 -32.43624496]
[134.61732483 -32.59720230]
[138.80433655 -47.00098419]
[142.66864014 -61.49467850]
[146.20831299 -76.07105255]
[149.74798584 -90.64743042]
[153.28765869 -105.22380066]
[156.82733154 -119.80017853]
[159.60295105 -134.54113770]
[161.60696411 -149.40666199]
[163.61097717 -164.27220154]
[165.17149353 -179.19079590]
[166.28713989 -194.14926147]
[167.40278625 -209.10771179]
[168.51844788 -224.06616211]
[154.80001831 -230.55995178]
[144.35664368 -241.57359314]
[138.60067749 -255.61756897]
[138.31059265 -270.79257202]
[143.52558899 -285.04626465]
[153.54042053 -296.45098877]
[167.00062561 -303.46432495]
[182.08584595 -305.13781738]
[196.75593567 -301.24508667]
[209.02685547 -292.31262207]
[217.23908997 -279.54849243]
[220.28198242 -264.67886353]
[217.74403381 -249.71481323]
[209.96844482 -236.68005371]
[198.00683594 -227.33744812]
[183.47689819 -222.95051575]
[182.36125183 -207.99206543]
[181.24559021 -193.03359985]
[180.12994385 -178.07514954]
[181.85490417 -175.86547852]
[182.80851746 -172.83938599]
[182.67544556 -169.28724670]
[181.25115967 -165.60812378]
[178.47650146 -162.26818848]
[176.47248840 -147.40264893]
[174.46847534 -132.53712463]
[186.34361267 -141.70123291]
[201.33569336 -141.21383667]
[212.59053040 -131.29776001]
[214.96257019 -116.48649597]
[207.36734009 -103.55155945]
[193.27728271 -98.40663910]
[179.13418579 -103.40390778]
[171.40371704 -116.26050568]
[167.86404419 -101.68412781]
[164.32437134 -87.10775757]
[160.78469849 -72.53137970]
[157.24502563 -57.95500565]
[158.75737000 -54.76986313]
[158.80210876 -50.69395447]
[156.97737122 -46.42503738]
[153.20811462 -42.81397247]
[149.02110291 -28.41019058]
[160.24508667 -21.68276215]
[169.53306580 -12.45008564]
[176.33824158 -1.24866426]
[180.25827026 11.26889038]
[181.05906677 24.37187576]
[178.68881226 37.29415894]
[173.28120422 49.27895737]
[165.14799500 59.62318420]
[154.76098633 67.71866608]
[142.72468567 73.08792114]
[129.74108887 75.41230011]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[116.25178528 99.49163055]
[112.42272949 110.49069977]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[98.66980743 158.51052856]
[93.36038208 172.76762390]
[79.83507538 178.89962769]
[74.79815674 193.02865601]
[69.76123810 207.15768433]
[72.41526031 222.75469971]
[60.85347366 232.14482117]
[55.81655884 246.27384949]
[69.79778290 240.84013367]
[83.58120728 246.75765991]
[89.27106476 260.63662720]
[83.60794830 274.52651978]
[69.83593750 280.47058105]
[55.84428024 275.06378174]
[49.64805603 261.40432739]
[43.37069702 275.02764893]
[37.09333801 288.65097046]
[30.81597519 302.27426147]
[24.53861427 315.89758301]
[18.26125336 329.52090454]
[17.51211166 338.62457275]
[11.78767872 343.29925537]
[5.30818272 356.82760620]
[-1.17131305 370.35595703]
[11.83466339 377.84338379]
[24.23712158 386.29302979]
[35.96501923 395.65646362]
[46.95117950 405.88003540]
[57.13267517 416.90521240]
[66.45118713 428.66885376]
[74.85333252 441.10351562]
[82.29099274 454.13803101]
[88.72156525 467.69772339]
[94.10820770 481.70492554]
[98.42007446 496.07937622]
[101.63246155 510.73876953]
[103.72696686 525.59912109]
[104.69160461 540.57537842]
[104.52083588 555.58160400]
[103.21563721 570.53198242]
[100.78350067 585.34088135]
[97.23834991 599.92333984]
[92.60047913 614.19598389]
[86.89647675 628.07696533]
[80.15899658 641.48681641]
[72.42663574 654.34869385]
[63.74369049 666.58892822]
[54.15989304 678.13745117]
[43.73013687 688.92810059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 185]
[57 184]
[58 183]
[59 181]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[65 169]
[66 168]
[68 166]
[69 165]
[70 164]
[73 161]
[74 160]
[75 159]
[77 156]
[78 155]
[87 143]
[88 142]
[89 138]
[90 137]
[91 136]
[92 135]
[93 134]
[94 126]
[95 125]
[96 124]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
