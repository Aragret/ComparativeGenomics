%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[115.84403229 530.10882568]
[120.74127960 515.83721924]
[129.16622925 503.31994629]
[140.54446411 493.41043091]
[154.10018921 486.78436279]
[151.21492004 472.06448364]
[148.32965088 457.34457397]
[145.44436646 442.62469482]
[142.55909729 427.90478516]
[126.25209045 425.67416382]
[111.67150879 417.98345947]
[100.58780670 405.74667358]
[94.35361481 390.43096924]
[93.73870087 373.88082886]
[98.83494568 358.09588623]
[109.04314423 344.98931885]
[123.14336395 336.15606689]
[119.82110596 321.52859497]
[116.49884796 306.90115356]
[113.17658234 292.27368164]
[109.85432434 277.64620972]
[99.49030304 266.94873047]
[103.97891998 251.77760315]
[101.20632935 249.59928894]
[99.35108185 245.96981812]
[99.08373260 241.33496094]
[100.85039520 236.42314148]
[98.18459320 221.66192627]
[95.51879883 206.90071106]
[89.39712524 220.59468079]
[77.67006683 229.94755554]
[62.95748520 232.86985779]
[48.54619980 228.70874023]
[37.65573502 218.39381409]
[32.71904373 204.22944641]
[34.83900070 189.38002014]
[43.54199982 177.16290283]
[56.88376617 170.30744934]
[71.88372040 170.34518433]
[85.19082642 177.26766968]
[93.83226013 189.52842712]
[93.60893250 174.53009033]
[93.38560486 159.53175354]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.73397064 40.82297134]
[82.58921814 27.25928497]
[89.94415283 14.30728626]
[89.49754333 -0.68606347]
[80.66203308 -10.08268547]
[80.59871674 -22.57987595]
[88.79614258 -31.47531128]
[88.57281494 -46.47364807]
[88.34948730 -61.47198486]
[88.12615967 -76.47032166]
[87.01051331 -91.42877960]
[85.00650024 -106.29430389]
[83.00248718 -121.15983582]
[80.99847412 -136.02536011]
[78.99446106 -150.89088440]
[76.99044800 -165.75642395]
[74.98643494 -180.62194824]
[62.39978790 -186.24041748]
[54.29720688 -197.25706482]
[52.70893097 -210.73100281]
[57.94360352 -223.13029480]
[68.53538513 -231.25779724]
[66.75292206 -246.15151978]
[64.97045135 -261.04522705]
[49.95482635 -260.94055176]
[35.02190018 -262.51779175]
[20.35946846 -265.75711060]
[6.15193081 -270.61776733]
[-7.42203999 -277.03860474]
[-20.19173622 -284.93890381]
[-31.99656677 -294.21932983]
[-42.68807220 -304.76312256]
[-52.13179398 -316.43771362]
[-60.20897293 -329.09628296]
[-66.81802368 -342.57962036]
[-71.87583160 -356.71817017]
[-75.31879425 -371.33410645]
[-77.10359955 -386.24365234]
[-77.20782471 -401.25930786]
[-75.63013458 -416.19216919]
[-72.39038849 -430.85452271]
[-67.52931976 -445.06188965]
[-61.10805893 -458.63568115]
[-53.20737076 -471.40515137]
[-43.92660904 -483.20968628]
[-33.38248825 -493.90087891]
[-21.70761490 -503.34426880]
[-9.04880905 -511.42105103]
[4.43472862 -518.02972412]
[18.57342911 -523.08709717]
[33.18948364 -526.52960205]
[48.09907913 -528.31396484]
[63.11471176 -528.41772461]
[78.04754639 -526.83959961]
[92.70978546 -523.59942627]
[106.91703033 -518.73791504]
[120.49061584 -512.31628418]
[133.25984192 -504.41519165]
[145.06411743 -495.13409424]
[155.75498962 -484.58963013]
[165.19801331 -472.91448975]
[173.27442932 -460.25543213]
[179.88267517 -446.77169800]
[184.93963623 -432.63284302]
[188.38172913 -418.01669312]
[190.16564941 -403.10705566]
[190.26896667 -388.09140015]
[188.69038391 -373.15863037]
[185.44976807 -358.49649048]
[180.58784485 -344.28936768]
[174.16577148 -330.71597290]
[166.26432800 -317.94699097]
[156.98284912 -306.14300537]
[146.43809509 -295.45245361]
[134.76264954 -286.00976562]
[122.10337067 -277.93371582]
[108.61943817 -271.32589722]
[94.48043060 -266.26934814]
[79.86417389 -262.82769775]
[81.64663696 -247.93397522]
[83.42910767 -233.04026794]
[98.01119995 -225.50102234]
[105.29914856 -210.60647583]
[102.24282837 -194.13954163]
[89.85195923 -182.62596130]
[91.85597229 -167.76043701]
[93.85998535 -152.89489746]
[95.86399841 -138.02937317]
[97.86801147 -123.16384888]
[99.87203217 -108.29831696]
[101.87604523 -93.43279266]
[110.15408325 -105.94174957]
[124.16292572 -111.30386353]
[138.67762756 -107.51920319]
[148.28454590 -95.99934387]
[149.40054321 -81.04091644]
[141.60939026 -68.22304535]
[127.81698608 -62.32646942]
[113.16755676 -65.55047607]
[103.12449646 -76.69364929]
[103.34782410 -61.69531250]
[103.57115173 -46.69697571]
[103.79448700 -31.69863892]
[113.59301758 -17.13994408]
[104.49089050 -1.13266945]
[104.93750000 13.86068058]
[113.05030823 26.35194206]
[105.72731781 40.37636566]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[108.38394165 159.30842590]
[108.60726929 174.30676270]
[108.83059692 189.30509949]
[110.28002167 204.23490906]
[112.94581604 218.99612427]
[115.61161041 233.75733948]
[118.60638428 248.45535278]
[129.20803833 260.19909668]
[124.48178864 274.32394409]
[127.80404663 288.95141602]
[131.12631226 303.57888794]
[134.44856262 318.20632935]
[137.77082825 332.83380127]
[151.34585571 333.93493652]
[164.04557800 338.80865479]
[174.84526062 347.05160522]
[182.87632751 357.98892212]
[187.49624634 370.72952271]
[188.33992004 384.23876953]
[185.34848022 397.42236328]
[178.77334595 409.21517944]
[169.15507507 418.66702271]
[157.27899170 425.01953125]
[160.16426086 439.73941040]
[163.04954529 454.45932007]
[165.93481445 469.17919922]
[168.82008362 483.89907837]
[183.87417603 484.91729736]
[198.15145874 489.79800415]
[210.67849731 498.20846558]
[220.60118103 509.57519531]
[227.24295044 523.12322998]
[230.15095520 537.92883301]
[229.12693787 552.98254395]
[224.24070740 567.25793457]
[215.82542419 579.78173828]
[204.45484924 589.70001221]
[190.90423584 596.33654785]
[176.09751892 599.23883057]
[161.04421997 598.20904541]
[146.77070618 593.31726074]
[134.25015259 584.89715576]
[124.33626556 573.52276611]
[117.70496368 559.96960449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[23 173]
[27 172]
[28 171]
[29 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[48 161]
[49 160]
[50 159]
[51 158]
[53 156]
[54 155]
[57 153]
[58 152]
[59 151]
[60 150]
[61 141]
[62 140]
[63 139]
[64 138]
[65 137]
[66 136]
[67 135]
[72 131]
[73 130]
[74 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
