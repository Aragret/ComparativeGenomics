%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[145.89291382 279.48721313]
[151.00520325 265.37048340]
[157.56510925 251.86547852]
[165.50074768 239.12014771]
[174.72518921 227.27416992]
[185.13735962 216.45730591]
[175.47654724 204.98260498]
[165.81573486 193.50790405]
[151.69981384 188.75503540]
[148.73063660 173.21495056]
[144.13330078 171.92127991]
[140.29981995 167.72587585]
[138.95918274 161.25175476]
[129.64430237 149.49450684]
[120.32941437 137.73724365]
[111.01453400 125.98000336]
[101.69965363 114.22274780]
[88.77265167 108.89505768]
[86.54309845 95.09213257]
[71.09017944 93.13123322]
[61.81105042 81.07501984]
[63.77569580 66.35511017]
[54.46081543 54.59785843]
[39.82638931 48.58585358]
[37.98748016 33.80520248]
[28.67259598 22.04795074]
[16.42119598 30.70913315]
[3.71509719 38.68835068]
[-9.40778160 45.96179199]
[-22.90827751 52.50774765]
[-36.74609756 58.30668259]
[-50.87994385 63.34128952]
[-65.26763916 67.59654236]
[-79.86623383 71.05974579]
[-94.63217163 73.72055817]
[-109.52138519 75.57104492]
[-124.48943329 76.60568237]
[-139.49163818 76.82137299]
[-154.48324585 76.21749115]
[-169.41950989 74.79582214]
[-184.25584412 72.56061554]
[-198.94796753 69.51854706]
[-213.45204163 65.67868042]
[-227.72479248 61.05249405]
[-241.72360229 55.65378571]
[-255.40670776 49.49866486]
[-268.73327637 42.60550308]
[-281.66351318 34.99487686]
[-294.15884399 26.68949127]
[-306.18200684 17.71413803]
[-317.69705200 8.09560108]
[-328.66967773 -2.13741207]
[-339.06710815 -12.95436287]
[-348.85830688 -24.32296944]
[-358.01406860 -36.20930099]
[-366.50704956 -48.57788849]
[-374.31195068 -61.39181519]
[-381.40542603 -74.61283875]
[-387.76632690 -88.20150757]
[-393.37567139 -102.11726379]
[-398.21670532 -116.31857300]
[-402.27499390 -130.76306152]
[-405.53842163 -145.40760803]
[-407.99725342 -160.20852661]
[-409.64413452 -175.12162781]
[-410.47418213 -190.10241699]
[-410.48489380 -205.10617065]
[-409.67623901 -220.08811951]
[-408.05065918 -235.00357056]
[-405.61297607 -249.80796814]
[-402.37045288 -264.45718384]
[-398.33279419 -278.90744019]
[-393.51205444 -293.11566162]
[-387.92257690 -307.03939819]
[-381.58108521 -320.63714600]
[-374.50650024 -333.86828613]
[-366.71994019 -346.69332886]
[-358.24459839 -359.07403564]
[-349.10583496 -370.97344971]
[-339.33087158 -382.35601807]
[-328.94891357 -393.18780518]
[-317.99090576 -403.43646240]
[-306.48959351 -413.07144165]
[-294.47927856 -422.06396484]
[-281.99581909 -430.38717651]
[-269.07647705 -438.01626587]
[-255.75976562 -444.92846680]
[-242.08546448 -451.10311890]
[-228.09437561 -456.52178955]
[-213.82824707 -461.16836548]
[-199.32966614 -465.02893066]
[-184.64189148 -468.09197998]
[-169.80876160 -470.34838867]
[-154.87455750 -471.79138184]
[-139.88383484 -472.41668701]
[-124.88132477 -472.22241211]
[-109.91181183 -471.20913696]
[-95.01997375 -469.37991333]
[-80.25025177 -466.74020386]
[-65.64672089 -463.29785156]
[-51.25296783 -459.06314087]
[-37.11194611 -454.04873657]
[-23.26585770 -448.26956177]
[-9.75602818 -441.74288940]
[3.37722445 -434.48818970]
[16.09470558 -426.52713013]
[28.35846138 -417.88345337]
[40.13189316 -408.58297729]
[51.37985992 -398.65341187]
[62.06879807 -388.12442017]
[72.16680908 -377.02743530]
[81.64374542 -365.39556885]
[90.47133636 -353.26351929]
[98.62322998 -340.66751099]
[106.07509613 -327.64511108]
[112.80470276 -314.23522949]
[118.79196167 -300.47784424]
[124.01900482 -286.41403198]
[128.47023010 -272.08575439]
[132.13235474 -257.53576660]
[134.99446106 -242.80752563]
[137.04798889 -227.94496155]
[138.28681946 -212.99243164]
[138.70724487 -197.99455261]
[138.30802917 -182.99610901]
[137.09034729 -168.04183960]
[135.05784607 -153.17637634]
[132.21658325 -138.44409180]
[128.57502747 -123.88896179]
[124.14408112 -109.55440521]
[118.93693542 -95.48320770]
[112.96913910 -81.71736908]
[106.25850677 -68.29797363]
[98.82506561 -55.26505661]
[90.69099426 -42.65752792]
[81.88057709 -30.51300621]
[72.42009735 -18.86774063]
[62.33779526 -7.75648022]
[51.66376114 2.78761148]
[40.42984772 12.73306751]
[49.74473190 24.49031830]
[63.71289062 29.66136551]
[66.21806335 45.28297424]
[75.53295135 57.04022598]
[90.31199646 58.49465942]
[99.92609406 70.28549194]
[98.30034637 85.77725220]
[111.22734833 91.10494232]
[113.45690155 104.90786743]
[122.77178955 116.66511536]
[132.08666992 128.42236328]
[141.40155029 140.17962646]
[150.71643066 151.93687439]
[160.20533752 163.55413818]
[175.01226807 169.12774658]
[177.29043579 183.84709167]
[186.95124817 195.32179260]
[196.61206055 206.79649353]
[209.04486084 198.37965393]
[222.28936768 191.30853271]
[236.20045471 185.66058350]
[250.62571716 181.49771118]
[265.40710449 178.86552429]
[280.38265991 177.79284668]
[295.38827515 178.29144287]
[310.25958252 180.35583496]
[324.83364868 183.96343994]
[338.95074463 189.07469177]
[352.45623779 195.63362122]
[365.20214844 203.56832886]
[377.04879761 212.79191589]
[387.86642456 223.20329285]
[397.53646851 234.68840027]
[405.95300293 247.12141418]
[413.02383423 260.36608887]
[418.67141724 274.27731323]
[422.83395386 288.70266724]
[425.46578979 303.48413086]
[426.53808594 318.45968628]
[426.03912354 333.46533203]
[423.97436523 348.33657837]
[420.36642456 362.91055298]
[415.25482178 377.02752686]
[408.69558716 390.53286743]
[400.76055908 403.27856445]
[391.53668213 415.12500000]
[381.12503052 425.94235229]
[369.63967896 435.61215210]
[357.20648193 444.02838135]
[343.96163940 451.09887695]
[330.05026245 456.74612427]
[315.62481689 460.90829468]
[300.84329224 463.53976440]
[285.86770630 464.61172485]
[270.86209106 464.11239624]
[255.99087524 462.04727173]
[241.41699219 458.43896484]
[227.30014038 453.32702637]
[213.79496765 446.76745605]
[201.04945374 438.83212280]
[189.20323181 429.60797119]
[178.38612366 419.19604492]
[168.71662903 407.71047974]
[160.30070496 395.27706909]
[153.23052979 382.03204346]
[147.58360291 368.12054443]
[143.42178345 353.69497681]
[140.79066467 338.91339111]
[139.71908569 323.93777466]
[140.21876526 308.93218994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 158]
[7 157]
[8 156]
[10 154]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[19 147]
[22 144]
[23 143]
[25 141]
[26 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
