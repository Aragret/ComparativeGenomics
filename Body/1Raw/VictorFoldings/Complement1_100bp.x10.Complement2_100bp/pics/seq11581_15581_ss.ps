%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[22.51566315 793.61151123]
[7.70054770 795.98248291]
[-7.22047424 797.55480957]
[-22.20438194 798.32391357]
[-37.20797348 798.28765869]
[-52.18798828 797.44610596]
[-67.10123444 795.80169678]
[-81.90470886 793.35913086]
[-96.55574036 790.12548828]
[-111.01207733 786.11010742]
[-125.23204803 781.32452393]
[-139.17463684 775.78259277]
[-152.79965210 769.50024414]
[-166.06781006 762.49560547]
[-178.94085693 754.78887939]
[-191.38166809 746.40222168]
[-203.35438538 737.35992432]
[-214.82447815 727.68804932]
[-225.75886536 717.41436768]
[-236.12605286 706.56860352]
[-245.89611816 695.18200684]
[-255.04089355 683.28735352]
[-263.53402710 670.91906738]
[-271.35104370 658.11267090]
[-278.46936035 644.90515137]
[-284.86849976 631.33459473]
[-290.52996826 617.44006348]
[-295.43750000 603.26177979]
[-299.57687378 588.84045410]
[-302.93621826 574.21771240]
[-305.50579834 559.43572998]
[-307.27822876 544.53717041]
[-308.24841309 529.56494141]
[-308.41351318 514.56219482]
[-307.77310181 499.57226562]
[-306.32897949 484.63827515]
[-304.08535767 469.80334473]
[-301.04864502 455.11022949]
[-297.22766113 440.60131836]
[-292.63339233 426.31838989]
[-287.27905273 412.30267334]
[-281.18014526 398.59457397]
[-274.35421753 385.23358154]
[-266.82095337 372.25827026]
[-258.60208130 359.70599365]
[-249.72129822 347.61300659]
[-240.20420837 336.01412964]
[-230.07823181 324.94281006]
[-219.37258911 314.43099976]
[-208.11814880 304.50900269]
[-196.34733582 295.20538330]
[-184.09411621 286.54699707]
[-171.39379883 278.55880737]
[-158.28302002 271.26385498]
[-144.79957581 264.68316650]
[-130.98233032 258.83569336]
[-116.87113190 253.73832703]
[-102.50666809 249.40574646]
[-87.93035126 245.85046387]
[-73.18421173 243.08270264]
[-58.31077194 241.11045837]
[-43.35290527 239.93940735]
[-28.35374832 239.57295227]
[-13.35654259 240.01211548]
[1.59546936 241.25566101]
[16.45917702 243.29997253]
[31.19172478 246.13917542]
[45.75063324 249.76509094]
[50.15163040 235.42524719]
[54.55262756 221.08540344]
[58.95362854 206.74554443]
[63.35462570 192.40570068]
[67.75562286 178.06585693]
[72.15662384 163.72601318]
[76.55761719 149.38616943]
[80.95861816 135.04631042]
[75.57003784 124.21627045]
[79.11922455 112.23348999]
[90.22646332 105.67665863]
[77.35713196 113.38252258]
[62.40644836 112.16721344]
[50.95064163 102.48400116]
[47.26245117 87.94449615]
[52.71747589 73.97156525]
[65.28112793 65.77677155]
[80.26747894 66.41657257]
[92.08698273 75.65232849]
[96.33123779 90.04051208]
[102.60859680 76.41719055]
[108.88596344 62.79387665]
[114.75492096 48.98970032]
[120.21028137 35.01690292]
[125.66563416 21.04410553]
[131.12098694 7.07130718]
[136.57635498 -6.90149069]
[142.03170776 -20.87428856]
[147.48706055 -34.84708786]
[134.43287659 -42.29060745]
[122.60163879 -51.55558395]
[112.24554443 -62.44453049]
[103.58533478 -74.72534943]
[96.80559540 -88.13627625]
[92.05083466 -102.39145660]
[89.42241669 -117.18704224]
[88.97634888 -132.20765686]
[90.72214508 -147.13313293]
[94.62258911 -161.64535522]
[100.59455872 -175.43496704]
[108.51074219 -188.20805359]
[118.20241547 -199.69236755]
[129.46299744 -209.64309692]
[142.05247498 -217.84815979]
[155.70249939 -224.13265991]
[170.12210083 -228.36264038]
[185.00395203 -230.44793701]
[200.03082275 -230.34410095]
[214.88244629 -228.05334473]
[229.24221802 -223.62451172]
[242.80409241 -217.15197754]
[255.27897644 -208.77372742]
[266.40097046 -198.66833496]
[275.93301392 -187.05119324]
[283.67193604 -174.16993713]
[289.45275879 -160.29910278]
[293.15231323 -145.73437500]
[294.69168091 -130.78619385]
[294.03808594 -115.77317810]
[291.20544434 -101.01533508]
[286.25415039 -86.82722473]
[279.28973389 -73.51126099]
[270.46063232 -61.35129166]
[259.95507812 -50.60649490]
[247.99693298 -41.50589752]
[234.84112549 -34.24348450]
[220.76806641 -28.97405052]
[206.07772827 -25.80991554]
[191.08322144 -24.81852341]
[176.10418701 -26.02100563]
[161.45985413 -29.39172935]
[156.00450134 -15.41893196]
[150.54914856 -1.44613373]
[145.09379578 12.52666378]
[139.63842773 26.49946213]
[134.18307495 40.47225952]
[128.72772217 54.44505692]
[129.72843933 57.06358719]
[129.75222778 60.23628998]
[128.58280945 63.59305191]
[126.14176941 66.69237518]
[122.50927734 69.07123566]
[116.23191833 82.69455719]
[109.95455170 96.31787109]
[104.49919891 110.29066467]
[108.77135468 128.20240784]
[95.29846191 139.44731140]
[90.89746857 153.78715515]
[86.49646759 168.12701416]
[82.09546661 182.46685791]
[77.69447327 196.80670166]
[73.29347229 211.14654541]
[68.89247894 225.48638916]
[64.49147797 239.82624817]
[60.09048080 254.16609192]
[74.17687225 259.33163452]
[87.96568298 265.24581909]
[101.41716003 271.89163208]
[114.49252319 279.24987793]
[127.15406799 287.29937744]
[139.36529541 296.01687622]
[151.09097290 305.37728882]
[162.29733276 315.35360718]
[172.95202637 325.91705322]
[183.02435303 337.03720093]
[192.48526001 348.68194580]
[201.30747986 360.81771851]
[209.46557617 373.40957642]
[216.93601990 386.42117310]
[223.69728088 399.81500244]
[229.72984314 413.55242920]
[235.01634216 427.59387207]
[239.54150391 441.89883423]
[243.29231262 456.42605591]
[246.25793457 471.13366699]
[248.42982483 485.97927856]
[249.80172729 500.92007446]
[250.36965942 515.91296387]
[250.13201904 530.91467285]
[249.08947754 545.88208008]
[247.24504089 560.77191162]
[244.60401917 575.54125977]
[241.17402649 590.14758301]
[236.96496582 604.54870605]
[231.98898315 618.70318604]
[226.26039124 632.57012939]
[219.79573059 646.10955811]
[212.61363220 659.28253174]
[204.73480225 672.05096436]
[196.18197632 684.37811279]
[186.97978210 696.22839355]
[177.15478516 707.56762695]
[166.73529053 718.36315918]
[155.75135803 728.58380127]
[144.23463440 738.20013428]
[132.21835327 747.18444824]
[119.73713684 755.51086426]
[106.82698822 763.15527344]
[93.52512360 770.09564209]
[79.86988831 776.31207275]
[65.90067291 781.78656006]
[51.65773773 786.50329590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 163]
[69 162]
[70 161]
[71 160]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[79 153]
[88 152]
[89 151]
[90 150]
[91 145]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
