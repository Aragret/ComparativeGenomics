%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[82.50828552 491.89715576]
[73.21662903 480.10494995]
[65.16566467 467.43319702]
[58.43800354 454.01196289]
[53.10268021 439.97894287]
[49.21445084 425.47817993]
[46.81321335 410.65841675]
[45.92360306 395.67178345]
[46.55475235 380.67202759]
[48.70018387 365.81307983]
[52.33788681 351.24743652]
[57.43052673 337.12454224]
[63.92584229 323.58932495]
[71.75718689 310.78070068]
[80.84420013 298.83007812]
[91.09362793 287.86010742]
[102.40029144 277.98336792]
[114.64817810 269.30117798]
[127.71159363 261.90264893]
[141.45649719 255.86370850]
[130.17941284 246.13351440]
[133.29663086 230.62243652]
[128.68263245 216.34970093]
[124.06861877 202.07696533]
[119.45460510 187.80422974]
[114.84059906 173.53149414]
[109.79203033 168.13392639]
[110.26585388 159.01179504]
[105.86486053 144.67195129]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[84.49179840 104.88619232]
[88.42597961 88.57979584]
[83.81196594 74.30706024]
[79.19795990 60.03432846]
[73.74259949 46.06153107]
[67.46524048 32.43821335]
[61.18788147 18.81489754]
[49.38018799 13.62440872]
[44.43222427 2.14828491]
[48.49567413 -9.24535084]
[42.42184067 -22.96061707]
[36.34800339 -36.67588425]
[23.68540001 -46.16108322]
[25.60645294 -60.93128204]
[19.53261757 -74.64655304]
[5.42936325 -69.52063751]
[-8.99081898 -65.36912537]
[-23.66069603 -62.21136093]
[-38.51186752 -60.06207275]
[-53.47509003 -58.93127441]
[-68.48059845 -58.82424545]
[-83.45842743 -59.74148560]
[-98.33874512 -61.67871094]
[-113.05217743 -64.62689209]
[-127.53011322 -68.57228851]
[-141.70504761 -73.49649811]
[-155.51091003 -79.37656403]
[-168.88330078 -86.18507385]
[-181.75988770 -93.89028168]
[-194.08064270 -102.45625305]
[-205.78810120 -111.84305573]
[-216.82768250 -122.00692749]
[-227.14791870 -132.90048218]
[-236.70069885 -144.47291565]
[-245.44146729 -156.67027283]
[-253.32948303 -169.43569946]
[-260.32797241 -182.70965576]
[-266.40426636 -196.43026733]
[-271.53009033 -210.53355408]
[-275.68148804 -224.95376587]
[-278.83917236 -239.62367249]
[-280.98834229 -254.47485352]
[-282.11904907 -269.43807983]
[-282.22598267 -284.44360352]
[-281.30865479 -299.42141724]
[-279.37130737 -314.30172729]
[-276.42303467 -329.01513672]
[-272.47753906 -343.49304199]
[-267.55325317 -357.66793823]
[-261.67306519 -371.47375488]
[-254.86448669 -384.84609985]
[-247.15919495 -397.72265625]
[-238.59313965 -410.04333496]
[-229.20625305 -421.75073242]
[-219.04229736 -432.79025269]
[-208.14868164 -443.11041260]
[-196.57618713 -452.66311646]
[-184.37876892 -461.40380859]
[-171.61329651 -469.29174805]
[-158.33927917 -476.29013062]
[-144.61863708 -482.36633301]
[-130.51530457 -487.49206543]
[-116.09506989 -491.64337158]
[-101.42514801 -494.80096436]
[-86.57395172 -496.95004272]
[-71.61071014 -498.08062744]
[-56.60520172 -498.18746948]
[-41.62738037 -497.27001953]
[-26.74708939 -495.33261108]
[-12.03369999 -492.38421631]
[2.44418168 -488.43862915]
[16.61905479 -483.51422119]
[30.42482758 -477.63397217]
[43.79713058 -470.82528687]
[56.67361832 -463.11990356]
[68.99425507 -454.55377197]
[80.70158386 -445.16680908]
[91.74103546 -435.00277710]
[102.06112671 -424.10910034]
[111.61374664 -412.53652954]
[120.35435486 -400.33905029]
[128.24220276 -387.57354736]
[135.24049377 -374.29946899]
[141.31661987 -360.57879639]
[146.44224548 -346.47543335]
[150.59347534 -332.05517578]
[153.75094604 -317.38522339]
[155.89993286 -302.53399658]
[157.03042603 -287.57077026]
[157.13716125 -272.56524658]
[156.21961975 -257.58743286]
[154.28208923 -242.70715332]
[151.33361816 -227.99378967]
[147.38792419 -213.51593018]
[142.46342468 -199.34109497]
[136.58308411 -185.53535461]
[129.77430725 -172.16310120]
[122.06884766 -159.28666687]
[113.50262451 -146.96609497]
[104.11558533 -135.25881958]
[93.95149231 -124.21943665]
[83.05773163 -113.89942169]
[71.48510742 -104.34687805]
[59.28756714 -95.60634613]
[46.52198792 -87.71858978]
[33.24788666 -80.72038269]
[39.32172012 -67.00511932]
[51.54988480 -58.50092697]
[50.06327057 -42.74971771]
[56.13710785 -29.03445244]
[62.21094131 -15.31918526]
[76.92461395 -5.75494671]
[74.81119537 12.53753757]
[81.08855438 26.16085434]
[87.36592102 39.78416824]
[91.60951996 25.39695740]
[103.42858124 16.16063690]
[118.41490173 15.52012634]
[130.97894287 23.71432114]
[136.43463135 37.68698883]
[132.74713135 52.22666931]
[121.29178619 61.91042328]
[106.34116364 63.12644958]
[93.47069550 55.42031860]
[98.08470154 69.69305420]
[102.69870758 83.96578979]
[112.72956848 89.88381958]
[116.22944641 100.99201965]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[120.20470428 140.27095032]
[124.60570526 154.61079407]
[129.11332703 168.91748047]
[133.72734070 183.19021606]
[138.34135437 197.46295166]
[142.95535278 211.73568726]
[147.56936646 226.00842285]
[159.17646790 236.75950623]
[155.72923279 251.24969482]
[170.40812683 248.09994507]
[185.33036804 246.45143127]
[200.34283447 246.32104492]
[215.29145813 247.71012878]
[230.02285767 250.60444641]
[244.38584900 254.97427368]
[258.23306274 260.77478027]
[271.42236328 267.94644165]
[283.81848145 276.41567993]
[295.29412842 286.09558105]
[305.73159790 296.88677979]
[315.02377319 308.67858887]
[323.07528687 321.34994507]
[329.80355835 334.77090454]
[335.13949585 348.80368042]
[339.02835083 363.30429077]
[341.43023682 378.12393188]
[342.32052612 393.11053467]
[341.69003296 408.11032104]
[339.54525757 422.96936035]
[335.90820312 437.53515625]
[330.81616211 451.65829468]
[324.32144165 465.19378662]
[316.49066162 478.00274658]
[307.40417480 489.95376587]
[297.15524292 500.92419434]
[285.84899902 510.80145264]
[273.60150146 519.48419189]
[260.53842163 526.88323975]
[246.79377747 532.92279053]
[232.50865173 537.54083252]
[217.82960510 540.68994141]
[202.90728760 542.33776855]
[187.89482117 542.46752930]
[172.94625854 541.07775879]
[158.21499634 538.18280029]
[143.85218811 533.81237793]
[130.00524902 528.01123047]
[116.81623840 520.83898926]
[104.42051697 512.36920166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 170]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[28 163]
[29 162]
[30 161]
[31 160]
[33 157]
[34 156]
[35 155]
[36 146]
[37 145]
[38 144]
[41 142]
[42 141]
[43 140]
[45 138]
[46 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
