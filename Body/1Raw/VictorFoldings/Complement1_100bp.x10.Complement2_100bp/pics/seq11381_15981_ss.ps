%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-37.13512039 417.32760620]
[-35.39641190 432.24319458]
[-35.36931610 447.25973511]
[-37.05418777 462.18151855]
[-40.42906570 476.81393433]
[-45.44994736 490.96627808]
[-52.05138016 504.45401001]
[-60.14729309 517.10131836]
[-69.63214874 528.74322510]
[-80.38228607 539.22808838]
[-92.25755310 548.41918945]
[-105.10313416 556.19665527]
[-118.75156403 562.45904541]
[-133.02490234 567.12487793]
[-147.73707581 570.13317871]
[-162.69627380 571.44476318]
[-177.70747375 571.04254150]
[-192.57496643 568.93176270]
[-207.10493469 565.13995361]
[-221.10794067 559.71655273]
[-234.40142822 552.73217773]
[-246.81210327 544.27801514]
[-258.17816162 534.46423340]
[-268.35140991 523.41876221]
[-277.19921875 511.28558350]
[-284.60626221 498.22290039]
[-290.47595215 484.40103149]
[-294.73178101 470.00012207]
[-297.31826782 455.20797729]
[-298.20166016 440.21740723]
[-297.37045288 425.22381592]
[-294.83551025 410.42276001]
[-290.62988281 396.00714111]
[-284.80834961 382.16488647]
[-277.44683838 369.07650757]
[-268.64132690 356.91259766]
[-258.50662231 345.83172607]
[-247.17480469 335.97842407]
[-234.79365540 327.48107910]
[-221.52455139 320.45050049]
[-207.54052734 314.97836304]
[-193.02384949 311.13595581]
[-178.16378784 308.97341919]
[-163.15408325 308.51895142]
[-148.19041443 309.77844238]
[-133.46786499 312.73547363]
[-119.17835999 317.35153198]
[-105.50820160 323.56637573]
[-92.63561249 331.29907227]
[-91.01696777 316.49267578]
[-76.47367859 310.26345825]
[-67.33486938 298.36880493]
[-65.71622467 283.56240845]
[-51.17293549 277.33319092]
[-49.55429077 262.52679443]
[-35.01099777 256.29757690]
[-25.87219429 244.40295410]
[-24.25354958 229.59655762]
[-9.71025562 223.36734009]
[-0.57145369 211.47270203]
[8.56734848 199.57806396]
[17.70615005 187.68344116]
[26.84495354 175.78880310]
[26.75186539 172.26408386]
[28.36138344 168.51914978]
[31.75841331 165.35473633]
[36.66703796 163.57922363]
[46.32784653 152.10452271]
[55.98865891 140.62982178]
[65.64946747 129.15512085]
[75.31027985 117.68041229]
[84.97109222 106.20571899]
[84.67624664 94.56293488]
[92.24334717 85.70967102]
[103.79004669 84.18814850]
[113.62062836 72.85855865]
[123.45121002 61.52896500]
[133.28178406 50.19937134]
[143.11236572 38.86977768]
[152.94294739 27.54018402]
[162.77352905 16.21059036]
[172.17567444 4.52300978]
[181.13638306 -7.50636816]
[190.09707642 -19.53574562]
[196.27284241 -33.20541763]
[199.37695312 -47.88071823]
[202.48106384 -62.55601883]
[205.58517456 -77.23132324]
[207.47846985 -92.11135864]
[208.14825439 -107.09639740]
[208.81803894 -122.08143616]
[199.95524597 -138.22245789]
[209.96945190 -152.63365173]
[210.41606140 -167.62699890]
[199.85780334 -179.07955933]
[200.52432251 -194.27857971]
[211.50764465 -204.27368164]
[211.95425415 -219.26702881]
[212.40086365 -234.26039124]
[212.84747314 -249.25373840]
[199.27549744 -256.23687744]
[190.08430481 -268.42230225]
[187.09880066 -283.39059448]
[190.91175842 -298.16976929]
[200.76612854 -309.82540894]
[214.70530701 -316.04330444]
[229.96165466 -315.58886719]
[243.50602722 -308.55233765]
[252.64916992 -296.33081055]
[255.57569885 -281.35089111]
[251.70455933 -266.58682251]
[241.80436707 -254.97007751]
[227.84082031 -248.80712891]
[227.39421082 -233.81378174]
[226.94760132 -218.82043457]
[226.50099182 -203.82707214]
[236.86993408 -193.19596863]
[236.63059998 -177.98420715]
[225.40940857 -167.18038940]
[224.96279907 -152.18704224]
[233.02687073 -143.17054749]
[232.77751160 -130.67568970]
[223.80307007 -121.41165161]
[223.13328552 -106.42661285]
[222.46350098 -91.44157410]
[231.46614075 -103.43959808]
[244.97344971 -109.96282196]
[259.96786499 -109.55394745]
[273.09960938 -102.30430603]
[281.43502808 -89.83349609]
[283.11193848 -74.92752075]
[277.75570679 -60.91642380]
[266.56295776 -50.93030930]
[252.03417969 -47.20010376]
[237.41511536 -50.55914688]
[225.97172546 -60.25701904]
[220.26046753 -74.12721252]
[217.15637207 -59.45191193]
[214.05226135 -44.77660751]
[210.94815063 -30.10130501]
[220.23136902 -41.88357162]
[231.66940308 -51.58776093]
[244.80668640 -58.82735443]
[259.11996460 -63.31400299]
[274.03915405 -64.86901093]
[288.97000122 -63.43043137]
[303.31784058 -59.05556870]
[316.51119995 -51.91867447]
[328.02459717 -42.30400467]
[337.39944458 -30.59451294]
[344.26235962 -17.25657654]
[348.33996582 -2.82144523]
[349.46987915 12.13593674]
[347.60711670 27.01982307]
[342.82583618 41.23739243]
[335.31646729 54.22236633]
[325.37814331 65.45755768]
[313.40667725 74.49547577]
[299.87887573 80.97613525]
[285.33358765 84.64142609]
[270.35009766 85.34535217]
[255.52523804 83.05987549]
[241.44946289 77.87603760]
[228.68338013 70.00028992]
[217.73548889 59.74634171]
[209.04182434 47.52258682]
[202.94863892 33.81590271]
[199.69865417 19.17221451]
[199.42129517 4.17477894]
[202.12644958 -10.57504940]
[193.16575623 1.45432806]
[184.20506287 13.48370552]
[199.19842529 13.93001556]
[208.31941223 25.83830643]
[204.84439087 40.43022919]
[191.33500671 46.94916153]
[177.74987793 40.58958817]
[174.10311890 26.04117203]
[164.27253723 37.37076569]
[154.44195557 48.70035934]
[144.61137390 60.02994919]
[134.78080750 71.35954285]
[124.95021820 82.68914032]
[115.11963654 94.01873016]
[112.36006927 110.56445312]
[96.44579315 115.86652374]
[86.78498077 127.34122467]
[77.12416840 138.81593323]
[67.46335602 150.29061890]
[57.80254745 161.76531982]
[48.14173889 173.24002075]
[38.73958588 184.92761230]
[29.60078430 196.82223511]
[20.46198082 208.71687317]
[11.32317924 220.61151123]
[2.18437672 232.50613403]
[-0.08793657 248.16331482]
[-13.97756100 253.54174805]
[-23.11636353 265.43637085]
[-25.38867760 281.09356689]
[-39.27830124 286.47201538]
[-41.55061340 302.12918091]
[-55.44023895 307.50762939]
[-64.57904053 319.40225220]
[-66.85135651 335.05941772]
[-80.74098206 340.43786621]
[-69.95307922 350.88385010]
[-60.42627335 362.49151611]
[-52.28476715 375.10949707]
[-45.63470459 388.57333374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 206]
[51 204]
[52 203]
[54 201]
[56 199]
[57 198]
[59 196]
[60 195]
[61 194]
[62 193]
[63 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[75 184]
[76 183]
[77 182]
[78 181]
[79 180]
[80 179]
[81 178]
[82 172]
[83 171]
[84 170]
[85 140]
[86 139]
[87 138]
[88 137]
[89 125]
[90 124]
[91 123]
[93 120]
[94 119]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
