%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[146.87605286 277.25253296]
[146.82762146 262.24569702]
[147.88763428 247.27629089]
[150.05027771 232.42602539]
[153.30375671 217.77603149]
[157.63029480 203.40634155]
[163.00625610 189.39540100]
[169.40229797 175.81976318]
[176.78346252 162.75357056]
[164.30366516 154.43162537]
[151.82386780 146.10968018]
[139.34408569 137.78773499]
[135.83349609 138.11659241]
[131.98921204 136.76141357]
[128.60447693 133.58386230]
[126.50428772 128.80513000]
[114.40853882 119.93423462]
[102.31278992 111.06333923]
[105.57752228 125.70374298]
[99.71932983 139.51249695]
[86.92317200 147.33926392]
[71.96170044 146.26487732]
[60.41517258 136.69003296]
[56.59015656 122.18591309]
[61.91329193 108.16220856]
[74.39917755 99.84941101]
[89.39199066 100.34837341]
[78.43608093 90.10298157]
[67.48017120 79.85758972]
[56.52426147 69.61219788]
[45.56835175 59.36680984]
[34.61244202 49.12141800]
[21.71898842 48.77264404]
[12.80470848 40.01368332]
[12.26615524 27.92912865]
[1.46399868 17.52175522]
[-9.33815765 7.11438131]
[-20.52877808 17.11349297]
[-32.43534470 26.24836540]
[-44.99127197 34.46791077]
[-58.12633896 41.72615814]
[-71.76708984 47.98252106]
[-85.83724213 53.20201111]
[-100.25810242 57.35543442]
[-114.94903564 60.41956711]
[-129.82786560 62.37726974]
[-144.81138611 63.21759796]
[-159.81581116 62.93584824]
[-174.75723267 61.53359604]
[-189.55207825 59.01868820]
[-204.11761475 55.40518570]
[-218.37237549 50.71329498]
[-232.23666382 44.96926117]
[-245.63291931 38.20520401]
[-258.48623657 30.45895004]
[-270.72473145 21.77382088]
[-282.27996826 12.19838905]
[-293.08731079 1.78620434]
[-303.08630371 -9.40450382]
[-312.22106934 -21.31115150]
[-320.44052124 -33.86714935]
[-327.69863892 -47.00228500]
[-333.95489502 -60.64308929]
[-339.17425537 -74.71328735]
[-343.32754517 -89.13418579]
[-346.39154053 -103.82514191]
[-348.34912109 -118.70398712]
[-349.18933105 -133.68751526]
[-348.90744019 -148.69194031]
[-347.50506592 -163.63334656]
[-344.99002075 -178.42817688]
[-341.37637329 -192.99368286]
[-336.68438721 -207.24839783]
[-330.94021606 -221.11262512]
[-324.17602539 -234.50883484]
[-316.42965698 -247.36207581]
[-307.74444580 -259.60049438]
[-298.16891479 -271.15563965]
[-287.75662231 -281.96289062]
[-276.56582642 -291.96179199]
[-264.65908813 -301.09646606]
[-252.10302734 -309.31579590]
[-238.96783447 -316.57382202]
[-225.32696533 -322.82992554]
[-211.25672913 -328.04916382]
[-196.83578491 -332.20233154]
[-182.14480591 -335.26620483]
[-167.26594543 -337.22366333]
[-152.28239441 -338.06372070]
[-137.27798462 -337.78170776]
[-122.33658600 -336.37918091]
[-107.54178619 -333.86401367]
[-92.97631836 -330.25027466]
[-78.72163391 -325.55813599]
[-64.85745239 -319.81384277]
[-51.46131134 -313.04956055]
[-38.60813141 -305.30307007]
[-26.36979103 -296.61773682]
[-14.81473064 -287.04208374]
[-4.00757313 -276.62969971]
[5.99124336 -265.43881226]
[15.12579918 -253.53201294]
[23.34501266 -240.97587585]
[30.60291481 -227.84060669]
[36.85891724 -214.19969177]
[42.07803345 -200.12940979]
[46.23107529 -185.70843506]
[49.29481888 -171.01742554]
[51.25212860 -156.13854980]
[52.09206009 -141.15499878]
[51.80991364 -126.15057373]
[50.40726852 -111.20919800]
[47.89196777 -96.41442108]
[44.27807999 -81.84897614]
[39.58581161 -67.59433746]
[33.84141159 -53.73020935]
[27.07699776 -40.33412933]
[19.33040428 -27.48101616]
[10.64495277 -15.24275112]
[1.06921554 -3.68777490]
[11.87137222 6.71959829]
[22.67352867 17.12697220]
[39.90910339 20.42877960]
[44.85783386 38.16550827]
[55.81374359 48.41090012]
[66.76965332 58.65629196]
[77.72556305 68.90167999]
[88.68147278 79.14707184]
[99.63738251 89.39246368]
[111.18368530 98.96759033]
[123.27943420 107.83848572]
[135.37518311 116.70938110]
[147.66603088 125.30793762]
[160.14581299 133.62988281]
[172.62561035 141.95182800]
[185.10540771 150.27377319]
[194.33033752 138.43705750]
[204.40425110 127.31394958]
[215.27212524 116.96520996]
[226.87461853 107.44735718]
[239.14833069 98.81237030]
[252.02626038 91.10741425]
[265.43804932 84.37457275]
[279.31045532 78.65061951]
[293.56768799 73.96681213]
[308.13192749 70.34873199]
[322.92358398 67.81614685]
[337.86190796 66.38288879]
[352.86526489 66.05677795]
[367.85174561 66.83960724]
[382.73947144 68.72708130]
[397.44714355 71.70891571]
[411.89443970 75.76880646]
[426.00247192 80.88458252]
[439.69412231 87.02831268]
[452.89468384 94.16643524]
[465.53201294 102.25995636]
[477.53710938 111.26468658]
[488.84436035 121.13143158]
[499.39208984 131.80630493]
[509.12261963 143.23101807]
[517.98284912 155.34315491]
[525.92431641 168.07656860]
[532.90374756 181.36170959]
[538.88293457 195.12602234]
[543.82928467 209.29432678]
[547.71575928 223.78923035]
[550.52111816 238.53160095]
[552.23004150 253.44088745]
[552.83325195 268.43566895]
[552.32733154 283.43405151]
[550.71520996 298.35409546]
[548.00555420 313.11434937]
[544.21319580 327.63415527]
[539.35882568 341.83425903]
[533.46905518 355.63708496]
[526.57598877 368.96722412]
[518.71722412 381.75189209]
[509.93579102 393.92123413]
[500.27960205 405.40884399]
[489.80136108 416.15191650]
[478.55831909 426.09179688]
[466.61190796 435.17422485]
[454.02734375 443.34957886]
[440.87338257 450.57318115]
[427.22186279 456.80560303]
[413.14733887 462.01278687]
[398.72668457 466.16632080]
[384.03866577 469.24353027]
[369.16348267 471.22753906]
[354.18240356 472.10757446]
[339.17724609 471.87881470]
[324.22994995 470.54248047]
[309.42214966 468.10592651]
[294.83477783 464.58239746]
[280.54742432 459.99118042]
[266.63818359 454.35736084]
[253.18299866 447.71166992]
[240.25537109 440.09042358]
[227.92588806 431.53521729]
[216.26190186 422.09283447]
[205.32710266 411.81481934]
[195.18124390 400.75732422]
[185.87971497 388.98068237]
[177.47332764 376.54928589]
[170.00799561 363.53097534]
[163.52449036 349.99691772]
[158.05821228 336.02096558]
[153.63902283 321.67947388]
[150.29107666 307.05081177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 136]
[10 135]
[11 134]
[12 133]
[16 132]
[17 131]
[18 130]
[27 129]
[28 128]
[29 127]
[30 126]
[31 125]
[32 124]
[35 122]
[36 121]
[37 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
