%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[32.85313797 807.95007324]
[17.92365265 809.43750000]
[2.93708968 810.14801025]
[-12.06615162 810.07971191]
[-27.04562569 809.23278809]
[-41.96094894 807.60949707]
[-56.77191162 805.21423340]
[-71.43859100 802.05346680]
[-85.92144012 798.13568115]
[-100.18141937 793.47143555]
[-114.18008423 788.07336426]
[-127.87969971 781.95599365]
[-141.24333191 775.13580322]
[-154.23497009 767.63116455]
[-166.81956482 759.46228027]
[-178.96319580 750.65130615]
[-190.63313293 741.22186279]
[-201.79792786 731.19940186]
[-212.42745972 720.61096191]
[-222.49308777 709.48510742]
[-231.96766663 697.85174561]
[-240.82565308 685.74237061]
[-249.04318237 673.18951416]
[-256.59811401 660.22705078]
[-263.47003174 646.88995361]
[-269.64044189 633.21411133]
[-275.09271240 619.23645020]
[-279.81213379 604.99462891]
[-283.78598022 590.52709961]
[-287.00357056 575.87274170]
[-289.45617676 561.07122803]
[-291.13723755 546.16229248]
[-292.04220581 531.18621826]
[-292.16864014 516.18334961]
[-291.51617432 501.19412231]
[-290.08660889 486.25900269]
[-287.88375854 471.41818237]
[-284.91360474 456.71173096]
[-281.18411255 442.17926025]
[-276.70538330 427.85992432]
[-271.48944092 413.79238892]
[-265.55035400 400.01452637]
[-258.90417480 386.56350708]
[-251.56877136 373.47558594]
[-243.56394958 360.78601074]
[-234.91128540 348.52905273]
[-225.63409424 336.73770142]
[-215.75740051 325.44378662]
[-205.30781555 314.67773438]
[-194.31350708 304.46856689]
[-182.80412292 294.84378052]
[-170.81069946 285.82937622]
[-158.36555481 277.44961548]
[-145.50224304 269.72711182]
[-132.25543213 262.68267822]
[-118.66085815 256.33529663]
[-104.75514984 250.70207214]
[-90.57579803 245.79820251]
[-76.16102600 241.63691711]
[-61.54969788 238.22941589]
[-46.78120041 235.58489990]
[-31.89535332 233.71049500]
[-16.93227959 232.61123657]
[-1.93231893 232.29010010]
[13.06409073 232.74797058]
[28.01652145 233.98358154]
[42.88466263 235.99362183]
[57.62843704 238.77267456]
[61.16810989 224.19630432]
[64.70777893 209.61991882]
[68.24745178 195.04354858]
[71.78712463 180.46717834]
[75.32679749 165.89079285]
[73.85048676 158.64909363]
[79.02920532 151.12454224]
[82.78549957 136.60249329]
[71.33712769 128.53981018]
[63.32378387 117.05684662]
[59.70581055 103.52975464]
[60.91679001 89.57964325]
[66.81160736 76.87833405]
[76.68379974 66.94798279]
[89.35026550 60.97867203]
[103.29302216 59.68577194]
[107.26512146 45.22124863]
[111.23721313 30.75672340]
[113.01968384 15.86300659]
[112.57307434 0.86965638]
[112.12646484 -14.12369347]
[109.38159180 -18.56359863]
[108.68402100 -23.15344429]
[109.74802399 -27.08828163]
[112.00981140 -29.79321098]
[112.23313904 -44.79154968]
[112.45646667 -59.78988647]
[112.67979431 -74.78822327]
[98.29848480 -79.44324493]
[85.92913818 -88.13177490]
[76.67163086 -100.08126068]
[71.34914398 -114.22913361]
[70.43493652 -129.31739807]
[74.01030731 -144.00440979]
[81.75733948 -156.98419189]
[92.98715973 -167.10261536]
[106.70123291 -173.45994568]
[121.68010712 -175.49089050]
[136.59187317 -173.01486206]
[150.11058044 -166.25204468]
[161.03416443 -155.80375671]
[168.39129639 -142.59906006]
[171.52780151 -127.81211090]
[170.16476440 -112.75775909]
[164.42340088 -98.77462006]
[154.81422424 -87.10607147]
[142.19166565 -78.78966522]
[127.67813110 -74.56489563]
[127.45480347 -59.56655884]
[127.23147583 -44.56822205]
[127.00814819 -29.56988335]
[127.11981964 -14.57029915]
[127.56642151 0.42305046]
[128.01303101 15.41639996]
[134.44396973 1.86490214]
[144.38923645 -9.36414051]
[157.06454468 -17.38515854]
[171.47024536 -21.56558037]
[186.47023010 -21.57572174]
[200.88157654 -17.41478348]
[213.56770325 -9.41091156]
[223.52816772 1.80467367]
[229.97741699 15.34746361]
[232.40684509 30.14941788]
[230.62486267 45.04319382]
[224.77200317 58.85420609]
[215.30984497 70.49325562]
[202.98460388 79.04244232]
[188.76832581 83.82754517]
[173.78213501 84.47119141]
[159.20793152 80.92260742]
[146.19508362 73.46166229]
[135.76983643 62.67675400]
[128.75436401 49.41842651]
[125.70173645 34.72882080]
[121.72964478 49.19334412]
[117.75754547 63.65786743]
[130.33175659 73.24060059]
[138.27227783 86.91129303]
[140.36604309 102.58151245]
[136.29319763 117.85736084]
[126.67594147 130.40518188]
[112.98347473 138.30810547]
[97.30756378 140.35879517]
[93.55126190 154.88084412]
[89.90317535 169.43046570]
[86.36350250 184.00683594]
[82.82382965 198.58322144]
[79.28415680 213.15959167]
[75.74448395 227.73597717]
[72.20481110 242.31234741]
[86.58110046 246.60470581]
[100.71520996 251.63746643]
[114.56906128 257.39706421]
[128.10528564 263.86795044]
[141.28739929 271.03271484]
[154.07986450 278.87200928]
[166.44819641 287.36471558]
[178.35905457 296.48797607]
[189.78033447 306.21713257]
[200.68122864 316.52597046]
[211.03236389 327.38671875]
[220.80581665 338.77011108]
[229.97526550 350.64541626]
[238.51599121 362.98065186]
[246.40493774 375.74258423]
[253.62086487 388.89675903]
[260.14431763 402.40771484]
[265.95770264 416.23907471]
[271.04534912 430.35354614]
[275.39352417 444.71304321]
[278.99053955 459.27886963]
[281.82669067 474.01177979]
[283.89431763 488.87200928]
[285.18783569 503.81954956]
[285.70379639 518.81408691]
[285.44079590 533.81518555]
[284.39950562 548.78234863]
[282.58276367 563.67535400]
[279.99548340 578.45397949]
[276.64462280 593.07843018]
[272.53921509 607.50921631]
[267.69030762 621.70745850]
[262.11102295 635.63488770]
[255.81632996 649.25396729]
[248.82327271 662.52795410]
[241.15065002 675.42108154]
[232.81916809 687.89862061]
[223.85128784 699.92687988]
[214.27117920 711.47344971]
[204.10467529 722.50720215]
[193.37918091 732.99841309]
[182.12361145 742.91882324]
[170.36830139 752.24157715]
[158.14494324 760.94171143]
[145.48649597 768.99560547]
[132.42707825 776.38165283]
[119.00189972 783.07989502]
[105.24715424 789.07232666]
[91.19991302 794.34271240]
[76.89806366 798.87689209]
[62.38014221 802.66265869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[75 153]
[76 152]
[84 145]
[85 144]
[86 143]
[87 122]
[88 121]
[89 120]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
