%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[182.32022095 404.78936768]
[186.68635559 390.41946411]
[192.75280762 376.68063354]
[200.43110657 363.77322388]
[209.60925293 351.88546753]
[220.15344238 341.19070435]
[231.90988159 331.84494019]
[224.05812073 319.06408691]
[216.20635986 306.28323364]
[208.35461426 293.50241089]
[200.50285339 280.72155762]
[192.65109253 267.94073486]
[184.79934692 255.15988159]
[176.94758606 242.37902832]
[172.59301758 240.41770935]
[169.42430115 235.70005798]
[169.05888367 229.09869385]
[161.59114075 216.08973694]
[154.12339783 203.08079529]
[141.07685852 195.89489746]
[140.91671753 180.07450867]
[133.16033936 167.23556519]
[125.11915588 154.57304382]
[117.07798767 141.91050720]
[110.83861542 137.94918823]
[109.01298523 128.99905396]
[101.16123199 116.21821594]
[90.01712799 112.83438110]
[83.99480438 102.86579132]
[86.18403625 91.42688751]
[78.52343750 78.53056335]
[64.82341766 70.61727905]
[64.97570038 55.72345352]
[56.56108475 43.30595779]
[47.42228317 31.41132545]
[38.28347778 19.51669312]
[29.14467621 7.62206030]
[20.00587463 -4.27257252]
[10.86707211 -16.16720581]
[1.72826982 -28.06183815]
[4.51598597 -13.32316017]
[3.27893496 1.62574327]
[-1.89357901 15.70569706]
[-10.62814808 27.90025711]
[-22.29421616 37.32909012]
[-36.04959869 43.31151581]
[-50.90128708 45.41566086]
[-65.77711487 43.48962402]
[-79.60319519 37.67245102]
[-91.38140869 28.38408279]
[-100.26146698 16.29505920]
[-105.60232544 2.27809501]
[-107.01840973 -12.65491199]
[-104.40749359 -27.42593575]
[-97.95806885 -40.96864319]
[-88.13572693 -52.30537415]
[-75.64953613 -60.61772156]
[-61.40089798 -65.30561066]
[-46.41843033 -66.03060913]
[-31.78372765 -62.74039459]
[-18.55328560 -55.67248154]
[-7.68149328 -45.33620071]
[-12.71840954 -59.46522903]
[-17.75532532 -73.59426117]
[-31.75573158 -80.42261505]
[-36.66260529 -94.82321167]
[-30.06653595 -108.12837982]
[-35.10345078 -122.25740814]
[-40.14036942 -136.38642883]
[-45.17728424 -150.51545715]
[-50.42400360 -164.56793213]
[-55.87936020 -178.54074097]
[-61.33471680 -192.51353455]
[-66.79007721 -206.48632812]
[-72.24542999 -220.45912170]
[-86.97473907 -217.43333435]
[-102.00354767 -216.94049072]
[-116.89945221 -218.99479675]
[-131.23385620 -223.53712463]
[-144.59434509 -230.43679810]
[-156.59649658 -239.49528503]
[-166.89498901 -250.45196533]
[-175.19352722 -262.99160767]
[-181.25332642 -276.75338745]
[-184.90003967 -291.34136963]
[-186.02876282 -306.33584595]
[-184.60699463 -321.30535889]
[-180.67564392 -335.81924438]
[-174.34783936 -349.45986938]
[-165.80563354 -361.83480835]
[-155.29481506 -372.58798218]
[-143.11778259 -381.40997314]
[-129.62490845 -388.04702759]
[-115.20439911 -392.30813599]
[-100.27116394 -394.07067871]
[-85.25487518 -393.28399658]
[-70.58756256 -389.97070312]
[-56.69124222 -384.22610474]
[-43.96574020 -376.21551514]
[-32.77719116 -366.16940308]
[-23.44751549 -354.37680054]
[-16.24514389 -341.17703247]
[-11.37730503 -326.94985962]
[-8.98405457 -312.10467529]
[-9.13425255 -297.06851196]
[-11.82357597 -282.27407837]
[-16.97464943 -268.14700317]
[-24.43926430 -255.09373474]
[-34.00265121 -243.48986816]
[-45.38964844 -233.66926575]
[-58.27263260 -225.91448975]
[-52.81727600 -211.94168091]
[-47.36191940 -197.96888733]
[-41.90656281 -183.99609375]
[-36.45120621 -170.02330017]
[-32.51452255 -167.31930542]
[-30.23467255 -162.11360168]
[-31.04825401 -155.55238342]
[-26.01133919 -141.42335510]
[-20.97442245 -127.29431915]
[-15.93750668 -113.16529083]
[-2.41219568 -107.03327942]
[2.89722705 -92.77619171]
[-3.62629604 -78.63117218]
[1.41062021 -64.50214386]
[6.44753647 -50.37311554]
[13.62290287 -37.20064163]
[22.76170540 -25.30600739]
[31.90050697 -13.41137505]
[41.03931046 -1.51674187]
[50.17811203 10.37789059]
[59.31691360 22.27252388]
[68.45571899 34.16715622]
[69.40738678 19.19737625]
[78.88721466 7.57271433]
[93.35947418 3.62888241]
[107.42636108 8.83683300]
[115.84127045 21.25412750]
[115.46566010 36.24942398]
[106.43961334 48.22984695]
[92.12963104 52.72699356]
[77.87203217 48.06285858]
[91.02411652 55.05370331]
[91.41976929 70.86996460]
[99.08036804 83.76628876]
[113.91718292 91.59220886]
[113.94207001 108.36646271]
[121.79382324 121.14730835]
[129.74050903 133.86933899]
[137.78167725 146.53186035]
[145.82286072 159.19439697]
[150.45027161 161.60980225]
[153.39407349 165.19969177]
[154.48883057 169.12606812]
[153.92567444 172.60676575]
[167.50636292 180.72314453]
[167.13235474 195.61305237]
[174.60008240 208.62199402]
[182.06782532 221.63095093]
[189.72842407 234.52728271]
[197.58018494 247.30812073]
[205.43194580 260.08895874]
[213.28369141 272.86981201]
[221.13545227 285.65063477]
[228.98721313 298.43148804]
[236.83895874 311.21234131]
[244.69071960 323.99316406]
[258.34121704 317.73049927]
[272.64709473 313.15893555]
[287.39971924 310.34509277]
[302.38394165 309.33007812]
[317.38125610 310.12863159]
[332.17297363 312.72912598]
[346.54336548 317.09365845]
[360.28289795 323.15856934]
[373.19116211 330.83541870]
[385.07995605 340.01223755]
[395.77587891 350.55523682]
[405.12295532 362.31060791]
[412.98492432 375.10699463]
[419.24707031 388.75772095]
[423.81811523 403.06378174]
[426.63140869 417.81649780]
[427.64587402 432.80075073]
[426.84674072 447.79806519]
[424.24569702 462.58966064]
[419.88061523 476.95989990]
[413.81518555 490.69918823]
[406.13787842 503.60717773]
[396.96060181 515.49560547]
[386.41723633 526.19116211]
[374.66149902 535.53778076]
[361.86483765 543.39929199]
[348.21383667 549.66094971]
[333.90762329 554.23144531]
[319.15481567 557.04412842]
[304.17050171 558.05804443]
[289.17324829 557.25836182]
[274.38171387 554.65679932]
[260.01165771 550.29113770]
[246.27259827 544.22521973]
[233.36489868 536.54742432]
[221.47679138 527.36968994]
[210.78164673 516.82592773]
[201.43544006 505.06985474]
[193.57444763 492.27288818]
[187.31330872 478.62167358]
[182.74333191 464.31527710]
[179.93115234 449.56234741]
[178.91780090 434.57800293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[17 159]
[18 158]
[19 157]
[21 155]
[22 151]
[23 150]
[24 149]
[26 148]
[27 147]
[30 145]
[31 144]
[33 142]
[34 133]
[35 132]
[36 131]
[37 130]
[38 129]
[39 128]
[40 127]
[62 126]
[63 125]
[64 124]
[67 121]
[68 120]
[69 119]
[70 118]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
