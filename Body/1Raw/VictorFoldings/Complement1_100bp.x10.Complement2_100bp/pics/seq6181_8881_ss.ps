%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[88.47925568 910.90789795]
[73.51374817 909.85827637]
[58.60627365 908.17449951]
[43.78369141 905.85955811]
[29.07271385 902.91754150]
[14.49985409 899.35388184]
[0.09137063 895.17492676]
[-14.12677002 890.38824463]
[-28.12894630 885.00244141]
[-41.88992691 879.02716064]
[-55.38490677 872.47326660]
[-68.58957672 865.35253906]
[-81.48013306 857.67785645]
[-94.03334808 849.46289062]
[-106.22660828 840.72265625]
[-118.03792572 831.47271729]
[-129.44602966 821.72985840]
[-140.43035889 811.51159668]
[-150.97109985 800.83636475]
[-161.04928589 789.72338867]
[-170.64672852 778.19268799]
[-179.74617004 766.26507568]
[-188.33116150 753.96197510]
[-196.38627625 741.30566406]
[-203.89698792 728.31884766]
[-210.84974670 715.02496338]
[-217.23202515 701.44799805]
[-223.03233337 687.61236572]
[-228.24021912 673.54302979]
[-232.84629822 659.26531982]
[-236.84225464 644.80505371]
[-240.22090149 630.18817139]
[-242.97613525 615.44110107]
[-245.10301208 600.59033203]
[-246.59768677 585.66271973]
[-247.45747375 570.68511963]
[-247.68080139 555.68450928]
[-247.26728821 540.68792725]
[-246.21768188 525.72241211]
[-244.53387451 510.81497192]
[-242.21887207 495.99237061]
[-239.27688599 481.28140259]
[-235.71318054 466.70855713]
[-231.53421021 452.30007935]
[-226.74748230 438.08193970]
[-221.36163330 424.07977295]
[-215.38638306 410.31881714]
[-208.83247375 396.82382202]
[-201.71171570 383.61917114]
[-194.03695679 370.72863770]
[-185.82203674 358.17541504]
[-177.08172607 345.98217773]
[-167.83180237 334.17086792]
[-158.08892822 322.76278687]
[-147.87065125 311.77847290]
[-137.19540405 301.23776245]
[-126.08241272 291.15957642]
[-114.55170441 281.56216431]
[-102.62405396 272.46273804]
[-90.32096100 263.87774658]
[-77.66459656 255.82266235]
[-64.67777252 248.31198120]
[-51.38388443 241.35925293]
[-37.80688858 234.97698975]
[-23.97125816 229.17669678]
[-9.90192223 223.96884155]
[4.37576532 219.36279297]
[18.83607483 215.36685181]
[33.45294571 211.98823547]
[48.20004272 209.23301697]
[63.05078506 207.10617065]
[77.97840881 205.61151123]
[92.95602417 204.75175476]
[92.73269653 189.75341797]
[92.50936890 174.75508118]
[92.28604126 159.75674438]
[92.06271362 144.75840759]
[89.32051086 140.84825134]
[89.00553131 135.17393494]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[83.74071503 99.87895203]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[89.37059021 61.99167633]
[92.61332703 55.35041046]
[92.83665466 40.35207367]
[93.05998230 25.35373497]
[78.27832031 22.59503174]
[64.17556000 17.37773895]
[51.15746689 9.85196781]
[39.59859467 0.23424834]
[29.83152199 -11.19869804]
[22.13726044 -24.11792183]
[16.73719215 -38.15171051]
[13.78668690 -52.89628983]
[13.37063789 -67.92742157]
[15.50101471 -82.81262970]
[20.11652184 -97.12364197]
[27.08436203 -110.44869995]
[36.20405960 -122.40441895]
[47.21321869 -132.64680481]
[59.79508209 -140.88116455]
[73.58765411 -146.87057495]
[88.19408417 -150.44271851]
[103.19412231 -151.49481201]
[118.15618134 -149.99656677]
[132.64978027 -145.99113464]
[146.25790405 -139.59371948]
[158.58903503 -130.98840332]
[169.28836060 -120.42277527]
[178.04803467 -108.20082855]
[184.61605835 -94.67421722]
[188.80342102 -80.23213196]
[190.48966980 -65.29008484]
[189.62626648 -50.27800751]
[186.23806763 -35.62781525]
[180.42256165 -21.76102829]
[172.34706116 -9.07661819]
[162.24391174 2.06045723]
[150.40380859 11.32976246]
[137.16741943 18.46459961]
[122.91557312 23.25968933]
[108.05831909 25.57706261]
[107.83499146 40.57540131]
[107.61166382 55.57373810]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[115.22412872 94.28992462]
[115.13742828 105.93611145]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[107.06105042 144.53507996]
[107.28437805 159.53341675]
[107.50770569 174.53175354]
[107.73103333 189.53009033]
[107.95436096 204.52842712]
[122.95092773 204.94186401]
[137.91644287 205.99140930]
[152.82392883 207.67515564]
[167.64651489 209.99006653]
[182.35749817 212.93199158]
[196.93037415 216.49562073]
[211.33886719 220.67453003]
[225.55702209 225.46118164]
[239.55921936 230.84695435]
[253.32022095 236.82215881]
[266.81521606 243.37600708]
[280.01989746 250.49668884]
[292.91049194 258.17138672]
[305.46374512 266.38626099]
[317.65701294 275.12649536]
[329.46838379 284.37637329]
[340.87649536 294.11917114]
[351.86087036 304.33740234]
[362.40164185 315.01260376]
[372.47985840 326.12554932]
[382.07736206 337.65621948]
[391.17681885 349.58383179]
[399.76187134 361.88687134]
[407.81701660 374.54318237]
[415.32775879 387.52999878]
[422.28054810 400.82385254]
[428.66290283 414.40078735]
[434.46325684 428.23641968]
[439.67117310 442.30572510]
[444.27728271 456.58337402]
[448.27328491 471.04367065]
[451.65197754 485.66052246]
[454.40728760 500.40762329]
[456.53421021 515.25836182]
[458.02893066 530.18597412]
[458.88873291 545.16357422]
[459.11212158 560.16418457]
[458.69866943 575.16076660]
[457.64910889 590.12622070]
[455.96533203 605.03375244]
[453.65039062 619.85632324]
[450.70843506 634.56732178]
[447.14480591 649.14013672]
[442.96588135 663.54864502]
[438.17919922 677.76678467]
[432.79339600 691.76898193]
[426.81817627 705.52996826]
[420.26431274 719.02496338]
[413.14358521 732.22967529]
[405.46887207 745.12023926]
[397.25399780 757.67346191]
[388.51373291 769.86669922]
[379.26385498 781.67803955]
[369.52099609 793.08618164]
[359.30276489 804.07049561]
[348.62756348 814.61126709]
[337.51458740 824.68945312]
[325.98391724 834.28692627]
[314.05630493 843.38641357]
[301.75323486 851.97143555]
[289.09689331 860.02655029]
[276.11007690 867.53729248]
[262.81622314 874.49005127]
[249.23924255 880.87237549]
[235.40364075 886.67266846]
[221.33432007 891.88061523]
[207.05664062 896.48669434]
[192.59634399 900.48266602]
[177.97947693 903.86132812]
[163.23239136 906.61663818]
[148.38166809 908.74353027]
[133.45404053 910.23822021]
[118.47643280 911.09802246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[80 132]
[81 131]
[83 128]
[84 127]
[86 126]
[87 125]
[88 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
