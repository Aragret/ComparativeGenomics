%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[177.44619751 327.89855957]
[177.13609314 312.89416504]
[177.98966980 297.91085815]
[180.00178528 283.03872681]
[183.16032410 268.36727905]
[187.44628906 253.98469543]
[192.83392334 239.97749329]
[199.29081726 226.42991638]
[206.77813721 213.42343140]
[215.25085449 201.03628540]
[203.56327820 191.63414001]
[191.87568665 182.23197937]
[180.18811035 172.82983398]
[168.50053406 163.42768860]
[152.80375671 168.23275757]
[137.17939758 162.67926025]
[127.85140228 148.76921082]
[128.66044617 131.87419128]
[116.83418274 122.64709473]
[105.00791168 113.41999054]
[91.18876648 111.29325867]
[85.76499176 98.40627289]
[72.89183807 99.20919037]
[63.23166656 91.28044891]
[61.61713028 79.29212952]
[49.92955017 69.88997650]
[38.24197006 60.48782730]
[26.55438805 51.08567810]
[14.86680698 41.68352509]
[3.17922544 32.28137589]
[-8.50835609 22.87922478]
[-20.19593620 13.47707272]
[-31.88351822 4.07492161]
[-42.11814880 15.05010796]
[-53.12662125 25.24893188]
[-64.85018921 34.61697769]
[-77.22631836 43.10425949]
[-90.18895721 50.66549683]
[-103.66896057 57.26034546]
[-117.59439087 62.85361862]
[-131.89096069 67.41547394]
[-146.48239136 70.92156982]
[-161.29081726 73.35320282]
[-176.23724365 74.69739532]
[-191.24191284 74.94698334]
[-206.22476196 74.10062408]
[-221.10588074 72.16283417]
[-235.80583191 69.14396667]
[-250.24621582 65.06011200]
[-264.34997559 59.93306732]
[-278.04183960 53.79018784]
[-291.24877930 46.66424942]
[-303.90032959 38.59326935]
[-315.92898560 29.62031364]
[-327.27056885 19.79325485]
[-337.86456299 9.16452694]
[-347.65441895 -2.20916247]
[-356.58795166 -14.26712799]
[-364.61746216 -26.94503593]
[-371.70010376 -40.17523956]
[-377.79812622 -53.88715744]
[-382.87896729 -68.00762177]
[-386.91552734 -82.46129608]
[-389.88626099 -97.17105865]
[-391.77529907 -112.05843353]
[-392.57260132 -127.04398346]
[-392.27389526 -142.04776001]
[-390.88076782 -156.98970032]
[-388.40066528 -171.79008484]
[-384.84680176 -186.36994934]
[-380.23815918 -200.65150452]
[-374.59933472 -214.55854797]
[-367.96038818 -228.01689148]
[-360.35675049 -240.95469666]
[-351.82897949 -253.30297852]
[-342.42260742 -264.99581909]
[-332.18780518 -275.97082520]
[-321.17916870 -286.16946411]
[-309.45541382 -295.53732300]
[-297.07916260 -304.02441406]
[-284.11639404 -311.58541870]
[-270.63629150 -318.18005371]
[-256.71075439 -323.77310181]
[-242.41412354 -328.33471680]
[-227.82263184 -331.84057617]
[-213.01417542 -334.27197266]
[-198.06771851 -335.61590576]
[-183.06304932 -335.86523438]
[-168.08020020 -335.01864624]
[-153.19912720 -333.08062744]
[-138.49922180 -330.06149292]
[-124.05890656 -325.97741699]
[-109.95523834 -320.85012817]
[-96.26346588 -314.70703125]
[-83.05663300 -307.58087158]
[-70.40522003 -299.50970459]
[-58.37671661 -290.53652954]
[-47.03530121 -280.70928955]
[-36.44149017 -270.08038330]
[-26.65180588 -258.70654297]
[-17.71847916 -246.64842224]
[-9.68917465 -233.97038269]
[-2.60673213 -220.74006653]
[3.49105930 -207.02804565]
[8.57166576 -192.90750122]
[12.60797882 -178.45376587]
[15.57846260 -163.74394226]
[17.46726990 -148.85653687]
[18.26432228 -133.87098694]
[17.96536446 -118.86721039]
[16.57199669 -103.92529297]
[14.09164810 -89.12494659]
[10.53755569 -74.54513550]
[5.92868090 -60.26365662]
[0.28961512 -46.35670471]
[-6.34955454 -32.89847946]
[-13.95340538 -19.96078873]
[-22.48136711 -7.61265945]
[-10.79378605 1.78949165]
[0.89379537 11.19164276]
[12.58137608 20.59379387]
[24.26895714 29.99594498]
[35.95653915 39.39809799]
[47.64411926 48.80024719]
[59.33169937 58.20240021]
[71.01927948 67.60455322]
[88.48069763 69.35550690]
[94.99208832 86.58000946]
[108.81123352 88.70674133]
[114.23500824 101.59372711]
[126.06127930 110.82082367]
[137.88754272 120.04792023]
[150.81472778 115.26472473]
[164.31021118 117.47612762]
[174.86628723 125.99897003]
[179.79289246 138.52384949]
[177.90267944 151.74009705]
[189.59025574 161.14225769]
[201.27784729 170.54440308]
[212.96542358 179.94656372]
[224.65299988 189.34870911]
[234.93759155 178.41912842]
[246.03820801 168.31939697]
[257.88809204 159.11026001]
[270.41601562 150.84709167]
[283.54656982 143.57960510]
[297.20083618 137.35148621]
[311.29669189 132.20021057]
[325.74932861 128.15675354]
[340.47183228 125.24542999]
[355.37570190 123.48375702]
[370.37124634 122.88232422]
[385.36831665 123.44474030]
[400.27670288 125.16764069]
[415.00674438 128.04064941]
[429.46984863 132.04649353]
[443.57904053 137.16108704]
[457.24945068 143.35365295]
[470.39889526 150.58695984]
[482.94824219 158.81750488]
[494.82205200 167.99577332]
[505.94891357 178.06660461]
[516.26190186 188.96939087]
[525.69897461 200.63856506]
[534.20343018 213.00396729]
[541.72399902 225.99121094]
[548.21563721 239.52220154]
[553.63909912 253.51554871]
[557.96191406 267.88711548]
[561.15808105 282.55044556]
[563.20825195 297.41732788]
[564.10021973 312.39840698]
[563.82855225 327.40356445]
[562.39495850 342.34255981]
[559.80798340 357.12551880]
[556.08319092 371.66354370]
[551.24304199 385.86920166]
[545.31658936 399.65707397]
[538.33947754 412.94424438]
[530.35369873 425.65075684]
[521.40728760 437.70022583]
[511.55401611 449.02020264]
[500.85317993 459.54254150]
[489.36907959 469.20404053]
[477.17083740 477.94650269]
[464.33178711 485.71743774]
[450.92916870 492.47006226]
[437.04354858 498.16375732]
[422.75848389 502.76431274]
[408.15985107 506.24401855]
[393.33547974 508.58200073]
[378.37451172 509.76412964]
[363.36691284 509.78335571]
[348.40295410 508.63955688]
[333.57263184 506.33956909]
[318.96514893 502.89727783]
[304.66833496 498.33334351]
[290.76815796 492.67523193]
[277.34829712 485.95700073]
[264.48937988 478.21899414]
[252.26876831 469.50778198]
[240.75996399 459.87576294]
[230.03218079 449.38085938]
[220.14993286 438.08618164]
[211.17266846 426.05966187]
[203.15437317 413.37365723]
[196.14324951 400.10443115]
[190.18150330 386.33178711]
[185.30494690 372.13854980]
[181.54293823 357.61010742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 141]
[11 140]
[12 139]
[13 138]
[14 137]
[18 132]
[19 131]
[20 130]
[22 128]
[25 126]
[26 125]
[27 124]
[28 123]
[29 122]
[30 121]
[31 120]
[32 119]
[33 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
