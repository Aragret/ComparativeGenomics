%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[36.12058258 508.73791504]
[27.86742210 521.28833008]
[18.07706261 532.68035889]
[6.91027260 542.72680664]
[-5.44958162 551.26269531]
[-18.79953766 558.14801025]
[-32.92037964 563.26953125]
[-47.58023071 566.54321289]
[-62.53836060 567.91534424]
[-77.54914093 567.36334229]
[-92.36608887 564.89624023]
[-106.74588776 560.55462646]
[-120.45241547 554.40979004]
[-133.26060486 546.56256104]
[-144.96011353 537.14184570]
[-155.35882568 526.30236816]
[-164.28601074 514.22204590]
[-171.59506226 501.09930420]
[-177.16595459 487.14962769]
[-180.90721130 472.60208130]
[-182.75738525 457.69552612]
[-182.68612671 442.67477417]
[-180.69458008 427.78643799]
[-176.81544495 413.27505493]
[-171.11244202 399.37884521]
[-163.67921448 386.32608032]
[-154.63780212 374.33102417]
[-144.13668823 363.59066772]
[-132.34831238 354.28140259]
[-119.46624756 346.55606079]
[-105.70203400 340.54153442]
[-91.28167725 336.33657837]
[-76.44199371 334.01019287]
[-61.42664719 333.60064697]
[-46.48221207 335.11462402]
[-31.85408401 338.52728271]
[-34.65087128 323.89761353]
[-22.57528305 313.67556763]
[-17.32856369 299.62307739]
[-12.08184624 285.57061768]
[-6.83512783 271.51812744]
[-1.58840990 257.46566772]
[3.65830827 243.41319275]
[-7.99915743 252.85266113]
[-22.35956573 257.18609619]
[-37.29263687 255.77067566]
[-50.58313370 248.81634521]
[-60.25949478 237.35475159]
[-64.88628387 223.08615112]
[-63.77715683 208.12722778]
[-57.09663010 194.69700623]
[-45.83573151 184.78781128]
[-31.66494179 179.86961365]
[-16.68641853 180.67198181]
[-3.12213182 187.07589722]
[7.01573420 198.13137817]
[12.22328758 212.19841003]
[11.72844887 227.18836975]
[19.76962280 214.52584839]
[27.81079483 201.86331177]
[28.10202408 186.97155762]
[42.03157806 179.46968079]
[37.66977692 163.22735596]
[46.58019257 148.56723022]
[63.66638565 144.81471252]
[71.51814270 132.03387451]
[79.36989594 119.25302887]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[115.60565186 60.05627060]
[123.26625061 47.15994644]
[113.55484009 34.34601593]
[109.51399231 18.82370567]
[111.73384094 2.97732043]
[119.84517670 -10.77077103]
[132.58047485 -20.33042336]
[147.97190857 -24.26147079]
[163.65531921 -21.99062920]
[171.12304688 -34.99958038]
[178.59078979 -48.00853348]
[180.14913940 -57.00905609]
[186.26779175 -61.15438843]
[193.92839050 -74.05071259]
[201.58898926 -86.94704437]
[209.15336609 -99.90003967]
[205.24754333 -114.97924042]
[213.00621033 -128.06578064]
[227.40599060 -131.69647217]
[234.87373352 -144.70542908]
[242.34147644 -157.71437073]
[249.80921936 -170.72332764]
[237.62573242 -179.49639893]
[226.40890503 -189.47572327]
[216.27761841 -200.55548096]
[207.33929443 -212.61824036]
[199.68865967 -225.53613281]
[193.40681458 -239.17219543]
[188.56036377 -253.38191223]
[185.20068359 -268.01464844]
[183.36338806 -282.91525269]
[183.06794739 -297.92581177]
[184.31748962 -312.88717651]
[187.09878540 -327.64077759]
[191.38233948 -342.03018188]
[197.12274170 -355.90289307]
[204.25914001 -369.11181641]
[212.71588135 -381.51696777]
[222.40333557 -392.98678589]
[233.21881104 -403.39974976]
[245.04763794 -412.64544678]
[257.76443481 -420.62585449]
[271.23440552 -427.25640869]
[285.31472778 -432.46679688]
[299.85617065 -436.20181274]
[314.70458984 -438.42181396]
[329.70257568 -439.10330200]
[344.69116211 -438.23904419]
[359.51141357 -435.83822632]
[374.00625610 -431.92626953]
[388.02203369 -426.54464722]
[401.41018677 -419.75039673]
[414.02877808 -411.61557007]
[425.74401855 -402.22637939]
[436.43176270 -391.68237305]
[445.97869873 -380.09530640]
[454.28363037 -367.58801270]
[461.25848389 -354.29309082]
[466.82937622 -340.35144043]
[470.93722534 -325.91088867]
[473.53848267 -311.12451172]
[474.60556030 -296.14901733]
[474.12719727 -281.14318848]
[472.10839844 -266.26605225]
[468.57061768 -251.67536926]
[463.55133057 -237.52578735]
[457.10375977 -223.96728516]
[449.29623413 -211.14361572]
[440.21154785 -199.19070435]
[429.94595337 -188.23524475]
[418.60833740 -178.39338684]
[406.31881714 -169.76947021]
[393.20773315 -162.45489502]
[379.41400146 -156.52719116]
[365.08392334 -152.04922485]
[350.36932373 -149.06845093]
[335.42623901 -147.61645508]
[320.41305542 -147.70864868]
[305.48895264 -149.34405518]
[290.81207275 -152.50531006]
[276.53805542 -157.15893555]
[262.81817627 -163.25558472]
[255.35043335 -150.24662781]
[247.88269043 -137.23768616]
[240.41494751 -124.22872925]
[244.54142761 -109.96311188]
[237.15339661 -96.66380310]
[222.16232300 -92.43229675]
[221.55854797 -85.06634521]
[214.48532104 -79.28644562]
[206.82472229 -66.39012146]
[199.16412354 -53.49378967]
[191.59974670 -40.54079056]
[184.13200378 -27.53183937]
[176.66426086 -14.52288723]
[185.65177917 -3.74495649]
[190.43070984 9.48154640]
[190.40782166 23.57476997]
[185.56546021 36.84179306]
[176.46617126 47.68197632]
[164.18733215 54.78007889]
[150.19367981 57.26582336]
[136.16258240 54.82054138]
[128.50198364 67.71687317]
[127.78859711 75.07301331]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.15074158 127.10478973]
[84.29898071 139.88563538]
[76.44722748 152.66647339]
[81.06410980 165.31948853]
[77.60116577 178.13426208]
[67.53891754 186.49090576]
[54.69410324 187.51086426]
[53.82771683 203.30833435]
[40.47332001 209.90449524]
[32.43214798 222.56701660]
[24.39097404 235.22953796]
[17.71077919 248.65991211]
[12.46406174 262.71237183]
[7.21734333 276.76486206]
[1.97062504 290.81732178]
[-3.27609324 304.86981201]
[-8.52281094 318.92227173]
[-6.10130644 334.55706787]
[-17.80161285 343.77401733]
[-4.51633596 350.78326416]
[7.76351357 359.43392944]
[18.83628845 369.58389282]
[28.52016449 381.06652832]
[36.65612411 393.69326782]
[43.11056519 407.25677490]
[47.77750015 421.53430176]
[50.58029938 436.29141235]
[51.47293091 451.28579712]
[50.44073868 466.27124023]
[47.50067902 481.00161743]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 199]
[38 197]
[39 196]
[40 195]
[41 194]
[42 193]
[43 192]
[58 191]
[59 190]
[60 189]
[62 187]
[65 183]
[66 182]
[67 181]
[68 180]
[70 178]
[71 177]
[72 175]
[73 174]
[80 166]
[81 165]
[82 164]
[84 163]
[85 162]
[86 161]
[87 159]
[90 156]
[91 155]
[92 154]
[93 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
