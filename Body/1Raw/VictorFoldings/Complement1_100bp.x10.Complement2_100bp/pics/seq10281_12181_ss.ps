%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[10.72994709 293.60189819]
[12.47800732 308.50967407]
[12.90166378 323.51361084]
[11.99759960 338.49627686]
[9.77289200 353.34042358]
[6.24495173 367.92984009]
[1.44139063 382.15036011]
[-4.60019636 395.89071655]
[-11.83252525 409.04330444]
[-20.19899178 421.50524902]
[-29.63411522 433.17898560]
[-40.06405258 443.97314453]
[-51.40717316 453.80325317]
[-63.57469940 462.59240723]
[-76.47140503 470.27175903]
[-89.99634552 476.78125000]
[-104.04368591 482.06991577]
[-118.50346375 486.09637451]
[-133.26252747 488.82910156]
[-148.20535278 490.24673462]
[-163.21498108 490.33813477]
[-178.17396545 489.10263062]
[-192.96520996 486.54986572]
[-207.47296143 482.69982910]
[-221.58367920 477.58264160]
[-235.18690491 471.23837280]
[-248.17617798 463.71664429]
[-260.44985962 455.07638550]
[-271.91186523 445.38513184]
[-282.47250366 434.71881104]
[-292.04910278 423.16085815]
[-300.56674194 410.80175781]
[-307.95874023 397.73822021]
[-314.16723633 384.07247925]
[-319.14364624 369.91149902]
[-322.84899902 355.36614990]
[-325.25436401 340.55020142]
[-326.34085083 325.57965088]
[-326.09994507 310.57168579]
[-324.53359985 295.64370728]
[-321.65402222 280.91259766]
[-317.48376465 266.49362183]
[-312.05548096 252.49966431]
[-305.41162109 239.04020691]
[-297.60421753 226.22061157]
[-288.69433594 214.14122009]
[-278.75173950 202.89656067]
[-267.85424805 192.57463074]
[-256.08712769 183.25622559]
[-243.54251099 175.01426697]
[-230.31852722 167.91328430]
[-216.51870728 162.00881958]
[-202.25105286 157.34710693]
[-187.62722778 153.96463013]
[-172.76167297 151.88786316]
[-157.77073669 151.13304138]
[-142.77177429 151.70610046]
[-127.88213348 153.60252380]
[-113.21837616 156.80749512]
[-98.89525604 161.29591370]
[-85.02488708 167.03266907]
[-71.71580505 173.97283936]
[-59.07218933 182.06213379]
[-47.19298553 191.23721313]
[-36.17117310 201.42628479]
[-26.09301186 212.54960632]
[-14.13067627 203.49961853]
[-2.16833925 194.44961548]
[9.79399776 185.39961243]
[21.75633430 176.34960938]
[32.71224213 166.10421753]
[42.54282379 154.77462769]
[52.37340546 143.44503784]
[62.20398712 132.11544800]
[64.70105743 117.43164825]
[79.58933258 112.07910156]
[89.41991425 100.74950409]
[98.82206726 89.06192780]
[107.78276062 77.03254700]
[104.93563843 59.77238464]
[115.24943542 46.06324768]
[131.95164490 44.09477615]
[140.73225403 31.93332100]
[149.51284790 19.77186394]
[144.01998901 3.77422237]
[149.09445190 -12.18670559]
[162.54759216 -21.88074875]
[178.96171570 -21.64816856]
[187.56028748 -33.93900681]
[196.15884399 -46.22984314]
[204.75741577 -58.52068329]
[213.35597229 -70.81152344]
[221.95454407 -83.10235596]
[210.51406860 -92.82089996]
[200.03393555 -103.56805420]
[190.60624695 -115.24937439]
[182.31384277 -127.76219177]
[175.22961426 -140.99655151]
[169.41581726 -154.83613586]
[164.92353821 -169.15933228]
[161.79226685 -183.84025574]
[160.04949951 -198.74989319]
[159.71057129 -213.75721741]
[160.77845764 -228.73031616]
[163.24377441 -243.53764343]
[167.08485413 -258.04904175]
[172.26792908 -272.13699341]
[178.74746704 -285.67767334]
[186.46652222 -298.55209351]
[195.35723877 -310.64709473]
[205.34150696 -321.85641479]
[216.33157349 -332.08154297]
[228.23085022 -341.23260498]
[240.93475342 -349.22915649]
[254.33168030 -356.00094604]
[268.30383301 -361.48846436]
[282.72848511 -365.64349365]
[297.47882080 -368.42947388]
[312.42526245 -369.82199097]
[327.43640137 -369.80874634]
[342.38034058 -368.38986206]
[357.12573242 -365.57785034]
[371.54302979 -361.39739990]
[385.50549316 -355.88522339]
[398.89044189 -349.08981323]
[411.58023071 -341.07086182]
[423.46334839 -331.89883423]
[434.43533325 -321.65432739]
[444.39981079 -310.42742920]
[453.26919556 -298.31674194]
[460.96551514 -285.42871094]
[467.42114258 -271.87661743]
[472.57937622 -257.77954102]
[476.39483643 -243.26139832]
[478.83401489 -228.44975281]
[479.87548828 -213.47477722]
[479.51007080 -198.46807861]
[477.74102783 -183.56153870]
[474.58383179 -168.88616943]
[470.06631470 -154.57092285]
[464.22808838 -140.74160767]
[457.12054443 -127.51977539]
[448.80606079 -115.02159882]
[439.35778809 -103.35694122]
[428.85870361 -92.62828827]
[417.40112305 -82.92994690]
[405.08569336 -74.34713745]
[392.02066040 -66.95529175]
[378.32083130 -60.81936646]
[364.10662842 -55.99328995]
[349.50296021 -52.51947021]
[334.63818359 -50.42844009]
[319.64288330 -49.73857880]
[304.64889526 -50.45594025]
[289.78796387 -52.57422638]
[275.19070435 -56.07482147]
[260.98538208 -60.92695999]
[247.29682922 -67.08799744]
[234.24537659 -74.50379181]
[225.64682007 -62.21295547]
[217.04824829 -49.92211914]
[208.44969177 -37.63128281]
[199.85112000 -25.34044266]
[191.25256348 -13.04960537]
[196.75674438 -0.88629514]
[195.52209473 12.51593494]
[187.76460266 23.64657021]
[175.42280579 29.53712273]
[161.67430115 28.55246735]
[152.89370728 40.71392441]
[144.11309814 52.87537766]
[147.92625427 65.18347931]
[143.89395142 77.62625122]
[133.27517700 85.59194183]
[119.81213379 85.99324036]
[110.85144043 98.02262115]
[125.84480286 98.46893311]
[134.96580505 110.37722015]
[131.49076843 124.96914673]
[117.98139191 131.48808289]
[104.39625549 125.12850189]
[100.74950409 110.58008575]
[90.91892242 121.90968323]
[87.71871185 137.40383911]
[73.53357697 141.94602966]
[63.70299911 153.27561951]
[53.87241745 164.60520935]
[44.04183578 175.93479919]
[58.26466370 171.16917419]
[73.23370361 172.13247681]
[86.72837830 178.68180847]
[96.74684143 189.84559631]
[101.80290985 203.96778870]
[101.14655304 218.95343018]
[94.87512970 232.57946777]
[83.91896820 242.82460022]
[69.90335083 248.16899109]
[54.90741348 247.81983948]
[41.15571594 241.82894897]
[30.68823624 231.08502197]
[25.05776405 217.18186951]
[25.09954834 202.18193054]
[30.80633354 188.31195068]
[18.84399796 197.36195374]
[6.88166046 206.41195679]
[-5.08067608 215.46194458]
[-17.04301262 224.51194763]
[-9.08003712 237.23550415]
[-2.27274084 250.61302185]
[3.32559800 264.53985596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 207]
[67 206]
[68 205]
[69 204]
[70 203]
[71 188]
[72 187]
[73 186]
[74 185]
[76 183]
[77 182]
[78 176]
[79 175]
[82 171]
[83 170]
[84 169]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
[93 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
