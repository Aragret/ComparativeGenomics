%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[133.10441589 986.89978027]
[118.18769836 985.30126953]
[103.34918213 983.09173584]
[88.61389160 980.27484131]
[74.00666809 976.85534668]
[59.55215454 972.83911133]
[45.27471161 968.23272705]
[31.19841957 963.04412842]
[17.34701538 957.28198242]
[3.74385333 950.95605469]
[-9.58812714 944.07696533]
[-22.62644386 936.65631104]
[-35.34911346 928.70666504]
[-47.73468399 920.24133301]
[-59.76226807 911.27471924]
[-71.41158295 901.82177734]
[-82.66298676 891.89862061]
[-93.49751282 881.52185059]
[-103.89688110 870.70904541]
[-113.84355927 859.47845459]
[-123.32078552 847.84893799]
[-132.31256104 835.84008789]
[-140.80374146 823.47222900]
[-148.77999878 810.76623535]
[-156.22787476 797.74346924]
[-163.13482666 784.42590332]
[-169.48919678 770.83599854]
[-175.28028870 756.99664307]
[-180.49830627 742.93121338]
[-185.13447571 728.66345215]
[-189.18096924 714.21734619]
[-192.63098145 699.61730957]
[-195.47866821 684.88793945]
[-197.71923828 670.05407715]
[-199.34890747 655.14074707]
[-200.36494446 640.17309570]
[-200.76560974 625.17633057]
[-200.55026245 610.17572021]
[-199.71923828 595.19665527]
[-198.27395630 580.26428223]
[-196.21682739 565.40386963]
[-193.55134583 550.64044189]
[-190.28199768 535.99890137]
[-186.41430664 521.50390625]
[-181.95477295 507.17996216]
[-176.91093445 493.05114746]
[-171.29127502 479.14132690]
[-165.10530090 465.47393799]
[-158.36341858 452.07205200]
[-151.07701111 438.95825195]
[-143.25836182 426.15463257]
[-134.92063904 413.68283081]
[-126.07791901 401.56384277]
[-116.74510956 389.81808472]
[-106.93795013 378.46542358]
[-96.67296600 367.52496338]
[-85.96748352 357.01513672]
[-74.83953857 346.95370483]
[-63.30791092 337.35760498]
[-51.39203262 328.24301147]
[-39.11200333 319.62533569]
[-26.48852348 311.51907349]
[-13.54288673 303.93789673]
[-0.29691911 296.89462280]
[13.22704411 290.40106201]
[27.00619698 284.46823120]
[41.01730728 279.10610962]
[55.23674393 274.32369995]
[69.64053345 270.12915039]
[84.20439148 266.52944946]
[98.90375519 263.53073120]
[113.71383667 261.13800049]
[111.93137360 246.24427795]
[100.67139435 232.78398132]
[108.05881500 215.91662598]
[106.05480194 201.05110168]
[104.05078125 186.18556213]
[102.04676819 171.32003784]
[100.04275513 156.45451355]
[98.03874207 141.58898926]
[88.67043304 130.00952148]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[77.17556000 67.87096405]
[62.19910049 68.71105194]
[50.92369843 58.81836319]
[49.80840683 43.85988617]
[59.49211884 32.40450668]
[74.42756653 31.01439095]
[86.05859375 40.48502731]
[82.67506409 32.00036240]
[85.71862793 25.26548958]
[85.49530029 10.26715183]
[85.27197266 -4.73118544]
[85.04864502 -19.72952271]
[71.36321259 -26.58281326]
[62.43967056 -39.01780319]
[60.32857513 -54.17702103]
[65.51504517 -68.57698822]
[76.80727386 -78.90869904]
[91.61037445 -82.79800415]
[106.52271271 -79.35116577]
[118.11754608 -69.36025238]
[123.73046112 -55.12108612]
[122.07164764 -39.90573120]
[113.52229309 -27.21056938]
[100.04698181 -19.95285034]
[100.27030945 -4.95451355]
[100.49363708 10.04382420]
[100.71696472 25.04216194]
[101.05194092 40.03842163]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[118.87183380 125.93808746]
[112.90427399 139.58497620]
[114.90828705 154.45050049]
[116.91230011 169.31602478]
[118.91631317 184.18154907]
[120.92032623 199.04708862]
[122.92433929 213.91261292]
[132.68948364 222.33905029]
[134.05259705 234.76182556]
[126.82508850 244.46182251]
[128.60755920 259.35552979]
[143.56401062 258.18582153]
[158.55586243 257.63113403]
[173.55786133 257.69241333]
[188.54469299 258.36953735]
[203.49108887 259.66137695]
[218.37185669 261.56576538]
[233.16188049 264.07946777]
[247.83624268 267.19827271]
[262.37017822 270.91690063]
[276.73919678 275.22906494]
[290.91906738 280.12753296]
[304.88589478 285.60400391]
[318.61608887 291.64929199]
[332.08651733 298.25317383]
[345.27444458 305.40451050]
[358.15768433 313.09124756]
[370.71447754 321.30044556]
[382.92364502 330.01821899]
[394.76461792 339.22988892]
[406.21743774 348.91992188]
[417.26275635 359.07199097]
[427.88195801 369.66897583]
[438.05715942 380.69299316]
[447.77120972 392.12545776]
[457.00769043 403.94708252]
[465.75103760 416.13796997]
[473.98651123 428.67752075]
[481.70025635 441.54461670]
[488.87921143 454.71752930]
[495.51132202 468.17410278]
[501.58538818 481.89157104]
[507.09112549 495.84689331]
[512.01928711 510.01644897]
[516.36157227 524.37640381]
[520.11065674 538.90252686]
[523.26025391 553.57031250]
[525.80493164 568.35504150]
[527.74053955 583.23175049]
[529.06365967 598.17541504]
[529.77221680 613.16082764]
[529.86492920 628.16265869]
[529.34167480 643.15563965]
[528.20336914 658.11450195]
[526.45184326 673.01403809]
[524.09008789 687.82910156]
[521.12207031 702.53466797]
[517.55285645 717.10601807]
[513.38836670 731.51855469]
[508.63574219 745.74798584]
[503.30291748 759.77026367]
[497.39889526 773.56176758]
[490.93362427 787.09930420]
[483.91806030 800.35992432]
[476.36395264 813.32141113]
[468.28411865 825.96179199]
[459.69210815 838.25982666]
[450.60247803 850.19470215]
[441.03048706 861.74639893]
[430.99234009 872.89532471]
[420.50494385 883.62280273]
[409.58593750 893.91058350]
[398.25381470 903.74145508]
[386.52758789 913.09881592]
[374.42712402 921.96685791]
[361.97277832 930.33062744]
[349.18554688 938.17602539]
[336.08700562 945.48986816]
[322.69921875 952.25970459]
[309.04479980 958.47424316]
[295.14675903 964.12298584]
[281.02853394 969.19635010]
[266.71389771 973.68585205]
[252.22703552 977.58380127]
[237.59236145 980.88378906]
[222.83453369 983.58007812]
[207.97845459 985.66827393]
[193.04916382 987.14477539]
[178.07185364 988.00714111]
[163.07176208 988.25384521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 131]
[73 130]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[82 120]
[85 118]
[86 117]
[87 116]
[94 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
