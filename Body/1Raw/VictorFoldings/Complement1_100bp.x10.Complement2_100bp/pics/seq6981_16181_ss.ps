%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[49.88227081 938.95330811]
[34.88203049 938.69891357]
[19.90716553 937.79046631]
[4.98617840 936.22967529]
[-9.85252762 934.01959229]
[-24.58070564 931.16430664]
[-39.17031860 927.66925049]
[-53.59359741 923.54119873]
[-67.82308197 918.78796387]
[-81.83169556 913.41851807]
[-95.59275818 907.44311523]
[-109.08007812 900.87322998]
[-122.26799011 893.72125244]
[-135.13137817 886.00079346]
[-147.64576721 877.72662354]
[-159.78733826 868.91442871]
[-171.53295898 859.58105469]
[-182.86029053 849.74420166]
[-193.74775696 839.42266846]
[-204.17463684 828.63598633]
[-214.12109375 817.40478516]
[-223.56819153 805.75042725]
[-232.49792480 793.69506836]
[-240.89332581 781.26165771]
[-248.73838806 768.47393799]
[-256.01818848 755.35614014]
[-262.71887207 741.93328857]
[-268.82766724 728.23095703]
[-274.33297729 714.27514648]
[-279.22430420 700.09252930]
[-283.49234009 685.71008301]
[-287.12896729 671.15509033]
[-290.12722778 656.45538330]
[-292.48144531 641.63885498]
[-294.18713379 626.73370361]
[-295.24105835 611.76837158]
[-295.64120483 596.77130127]
[-295.38677979 581.77105713]
[-294.47833252 566.79620361]
[-292.91751099 551.87524414]
[-290.70736694 537.03656006]
[-287.85205078 522.30834961]
[-284.35702515 507.71875000]
[-280.22894287 493.29547119]
[-275.47564697 479.06600952]
[-270.10620117 465.05740356]
[-264.13079834 451.29635620]
[-257.56085205 437.80905151]
[-250.40882874 424.62115479]
[-242.68838501 411.75775146]
[-234.41418457 399.24337769]
[-225.60200500 387.10183716]
[-216.26858521 375.35623169]
[-206.43173218 364.02893066]
[-196.11013794 353.14147949]
[-185.32345581 342.71459961]
[-174.09223938 332.76815796]
[-162.43785095 323.32110596]
[-150.38247681 314.39138794]
[-137.94906616 305.99600220]
[-125.16129303 298.15097046]
[-112.04349518 290.87118530]
[-98.62064362 284.17053223]
[-84.91828156 278.06173706]
[-70.96250153 272.55645752]
[-56.77987289 267.66516113]
[-42.39738083 263.39715576]
[-27.84241295 259.76055908]
[-13.14267159 256.76232910]
[1.67386055 254.40812683]
[16.57897949 252.70245361]
[31.54431343 251.64855957]
[46.54137039 251.24844360]
[61.54161072 251.50288391]
[76.51647186 252.41137695]
[78.07699585 237.49276733]
[79.63751984 222.57417297]
[81.19804382 207.65556335]
[82.75856781 192.73695374]
[84.31908417 177.81835938]
[77.94785309 164.35519409]
[87.07886505 151.43486023]
[88.63938904 136.51625061]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.54175568 91.69940186]
[92.54175568 76.69940186]
[92.54175568 61.69940567]
[84.80445862 47.89923096]
[92.54175568 35.17195892]
[82.96707153 19.44278526]
[92.32779694 4.59880638]
[92.10446930 -10.39953136]
[91.88114166 -25.39786911]
[91.65781403 -40.39620590]
[91.43448639 -55.39454269]
[91.21115875 -70.39288330]
[90.98783112 -85.39122009]
[76.96830750 -91.33872986]
[66.58465576 -102.47873688]
[61.63591003 -116.88115692]
[62.97946167 -132.05068970]
[70.38253784 -145.35911560]
[82.56250763 -154.50068665]
[97.40911865 -157.89155579]
[112.35011292 -154.94422913]
[124.79685974 -146.16935730]
[132.59289551 -133.08724976]
[134.38751221 -117.96443939]
[129.86976624 -103.42105865]
[119.82239532 -91.97683716]
[105.98616791 -85.61454773]
[106.20949554 -70.61621094]
[106.43282318 -55.61787033]
[106.65615082 -40.61953354]
[106.87947845 -25.62119675]
[107.10280609 -10.62285900]
[107.32613373 4.37547874]
[115.78477478 13.02290249]
[116.09358215 25.51643753]
[107.54175568 35.17195892]
[115.27906036 47.89923096]
[107.54175568 61.69940567]
[107.54175568 76.69940186]
[107.54175568 91.69940186]
[118.08611298 81.03091431]
[133.00891113 79.51099396]
[145.48764038 87.83452606]
[149.81721497 102.19609833]
[144.01818848 116.02980042]
[130.74180603 123.01104736]
[116.05786133 119.94811249]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[103.55799103 138.07676697]
[101.99747467 152.99537659]
[108.25708771 167.52561951]
[99.23769379 179.37887573]
[97.67716980 194.29748535]
[96.11664581 209.21607971]
[94.55612183 224.13468933]
[92.99559784 239.05329895]
[91.43507385 253.97189331]
[106.27378845 256.18197632]
[121.00197601 259.03720093]
[135.59159851 262.53216553]
[150.01489258 266.66018677]
[164.24440002 271.41339111]
[178.25302124 276.78277588]
[192.01411438 282.75808716]
[205.50146484 289.32797241]
[218.68939209 296.47991943]
[231.55281067 304.20031738]
[244.06723022 312.47442627]
[256.20883179 321.28656006]
[267.95446777 330.61990356]
[279.28186035 340.45672607]
[290.16934204 350.77825928]
[300.59628296 361.56488037]
[310.54275513 372.79605103]
[319.98989868 384.45037842]
[328.91967773 396.50570679]
[337.31512451 408.93905640]
[345.16021729 421.72680664]
[352.44006348 434.84457397]
[359.14080811 448.26739502]
[365.24966431 461.96972656]
[370.75500488 475.92547607]
[375.64639282 490.10806274]
[379.91445923 504.49053955]
[383.55114746 519.04547119]
[386.54946899 533.74523926]
[388.90374756 548.56170654]
[390.60946655 563.46685791]
[391.66345215 578.43218994]
[392.06362915 593.42919922]
[391.80929565 608.42944336]
[390.90087891 623.40435791]
[389.34011841 638.32531738]
[387.13000488 653.16406250]
[384.27474976 667.89221191]
[380.77978516 682.48181152]
[376.65173340 696.90515137]
[371.89849854 711.13464355]
[366.52908325 725.14324951]
[360.55374146 738.90429688]
[353.98382568 752.39166260]
[346.83187866 765.57958984]
[339.11148071 778.44299316]
[330.83731079 790.95739746]
[322.02517700 803.09893799]
[312.69180298 814.84460449]
[302.85498047 826.17193604]
[292.53341675 837.05944824]
[281.74679565 847.48632812]
[270.51559448 857.43280029]
[258.86123657 866.87994385]
[246.80590820 875.80969238]
[234.37252808 884.20507812]
[221.58477783 892.05017090]
[208.46699524 899.33001709]
[195.04417419 906.03070068]
[181.34182739 912.13952637]
[167.38607788 917.64489746]
[153.20346069 922.53625488]
[138.82098389 926.80426025]
[124.26602936 930.44091797]
[109.56629181 933.43920898]
[94.74977112 935.79345703]
[79.84465790 937.49920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
[82 136]
[83 135]
[84 134]
[85 133]
[86 125]
[87 124]
[88 123]
[90 121]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
