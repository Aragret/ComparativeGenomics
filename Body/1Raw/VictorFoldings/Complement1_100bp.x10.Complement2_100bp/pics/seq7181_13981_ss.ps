%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[78.29085541 538.73089600]
[63.32475662 537.73394775]
[48.40142059 536.22662354]
[33.53824234 534.21063232]
[18.75255966 531.68847656]
[4.06160545 528.66290283]
[-10.51748848 525.13757324]
[-24.96772385 521.11651611]
[-39.27225113 516.60449219]
[-53.41439438 511.60671997]
[-67.37766266 506.12902832]
[-81.14578247 500.17779541]
[-94.70268250 493.75997925]
[-108.03257751 486.88305664]
[-121.11991119 479.55505371]
[-133.94943237 471.78451538]
[-146.50617981 463.58047485]
[-158.77551270 454.95251465]
[-170.74311829 445.91070557]
[-182.39505005 436.46560669]
[-193.71772766 426.62817383]
[-204.69795227 416.40991211]
[-215.32289124 405.82272339]
[-225.58020020 394.87896729]
[-235.45788574 383.59136963]
[-244.94444275 371.97314453]
[-254.02880859 360.03781128]
[-262.70037842 347.79928589]
[-270.94909668 335.27185059]
[-278.76525879 322.47006226]
[-286.13983154 309.40890503]
[-293.06417847 296.10357666]
[-299.53021240 282.56961060]
[-305.53042603 268.82278442]
[-311.05780029 254.87910461]
[-316.10592651 240.75485229]
[-320.66885376 226.46647644]
[-324.74133301 212.03065491]
[-328.31857300 197.46420288]
[-331.39639282 182.78411865]
[-333.97125244 168.00750732]
[-336.04010010 153.15161133]
[-337.60055542 138.23373413]
[-338.65078735 123.27127838]
[-339.18957520 108.28169250]
[-339.21627808 93.28244781]
[-338.73086548 78.29103851]
[-337.73394775 63.32493973]
[-336.22662354 48.40159988]
[-334.21069336 33.53842545]
[-331.68847656 18.75273895]
[-328.66293335 4.06178427]
[-325.13760376 -10.51731110]
[-321.11657715 -24.96754837]
[-316.60455322 -39.27207947]
[-311.60678101 -53.41422272]
[-306.12908936 -67.37749481]
[-300.17788696 -81.14561462]
[-293.76007080 -94.70252228]
[-286.88314819 -108.03241730]
[-279.55514526 -121.11975861]
[-271.78460693 -133.94927979]
[-263.58059692 -146.50602722]
[-254.95263672 -158.77536011]
[-245.91082764 -170.74298096]
[-236.46571350 -182.39491272]
[-226.62828064 -193.71759033]
[-216.41001892 -204.69781494]
[-205.82284546 -215.32276917]
[-194.87908936 -225.58007812]
[-183.59152222 -235.45776367]
[-171.97329712 -244.94432068]
[-160.03796387 -254.02870178]
[-147.79943848 -262.70028687]
[-135.27198792 -270.94897461]
[-122.47022247 -278.76516724]
[-109.40907288 -286.13973999]
[-96.10375214 -293.06408691]
[-82.56978607 -299.53015137]
[-68.82295227 -305.53036499]
[-54.87928009 -311.05773926]
[-40.75502777 -316.10586548]
[-26.46665764 -320.66882324]
[-12.03083420 -324.74127197]
[2.53561258 -328.31851196]
[17.21569824 -331.39636230]
[31.99230576 -333.97122192]
[46.84820938 -336.04006958]
[45.28768539 -350.95867920]
[43.72716141 -365.87728882]
[42.16663742 -380.79589844]
[40.60611725 -395.71450806]
[25.77354050 -398.62759399]
[12.45936871 -405.78469849]
[1.84748960 -416.54943848]
[-5.11849546 -429.96459961]
[-7.81917667 -444.83731079]
[-6.01441050 -459.84512329]
[0.13532394 -473.65350342]
[10.08319664 -485.03469849]
[22.94464874 -492.97665405]
[37.57604980 -496.77316284]
[52.67638397 -496.08663940]
[66.90294647 -490.97817993]
[78.99070740 -481.90197754]
[87.86484528 -469.66510010]
[92.73626709 -455.35565186]
[93.17182159 -440.24600220]
[89.13276672 -425.67968750]
[80.97825623 -412.95193481]
[69.43338776 -403.19451904]
[55.52471924 -397.27502441]
[57.08524323 -382.35641479]
[58.64576721 -367.43780518]
[60.20629120 -352.51919556]
[61.76681137 -337.60058594]
[76.72927094 -338.65081787]
[91.71885681 -339.18957520]
[106.71810150 -339.21627808]
[121.70951080 -338.73086548]
[136.67561340 -337.73388672]
[151.59893799 -336.22656250]
[166.46211243 -334.21060181]
[181.24780273 -331.68838501]
[195.93875122 -328.66281128]
[210.51783752 -325.13748169]
[224.96807861 -321.11642456]
[239.27259827 -316.60437012]
[253.41473389 -311.60659790]
[267.37799072 -306.12887573]
[281.14611816 -300.17764282]
[294.70300293 -293.75982666]
[308.03289795 -286.88290405]
[321.12023926 -279.55487061]
[333.94973755 -271.78433228]
[346.50646973 -263.58026123]
[358.77581787 -254.95231628]
[370.74340820 -245.91049194]
[382.39532471 -236.46536255]
[393.71801758 -226.62791443]
[404.69821167 -216.40963745]
[415.32315063 -205.82244873]
[425.58044434 -194.87869263]
[435.45812988 -183.59111023]
[444.94467163 -171.97286987]
[454.02902222 -160.03752136]
[462.70059204 -147.79898071]
[470.94927979 -135.27153015]
[478.76547241 -122.46974945]
[486.14001465 -109.40858459]
[493.06433105 -96.10326385]
[499.53036499 -82.56929016]
[505.53057861 -68.82244873]
[511.05795288 -54.87876892]
[516.10601807 -40.75450516]
[520.66894531 -26.46613121]
[524.74139404 -12.03030205]
[528.31866455 2.53614855]
[531.39648438 17.21623802]
[533.97131348 31.99284935]
[536.04016113 46.84875488]
[537.60058594 61.76663208]
[538.65081787 76.72908783]
[539.18957520 91.71867371]
[539.21624756 106.71791840]
[538.73083496 121.70932770]
[537.73388672 136.67543030]
[536.22656250 151.59877014]
[534.21063232 166.46194458]
[531.68841553 181.24761963]
[528.66284180 195.93856812]
[525.13751221 210.51766968]
[521.11645508 224.96789551]
[516.60443115 239.27243042]
[511.60665894 253.41456604]
[506.12893677 267.37783813]
[500.17773438 281.14593506]
[493.75991821 294.70285034]
[486.88299561 308.03274536]
[479.55496216 321.12008667]
[471.78442383 333.94958496]
[463.58038330 346.50631714]
[454.95242310 358.77566528]
[445.91061401 370.74325562]
[436.46548462 382.39520264]
[426.62805176 393.71786499]
[416.40975952 404.69808960]
[405.82257080 415.32302856]
[394.87881470 425.58032227]
[383.59124756 435.45800781]
[371.97302246 444.94454956]
[360.03765869 454.02890015]
[347.79913330 462.70050049]
[335.27166748 470.94918823]
[322.46990967 478.76535034]
[309.40875244 486.13992310]
[296.10342407 493.06427002]
[282.56945801 499.53030396]
[268.82260132 505.53048706]
[254.87893677 511.05786133]
[240.75468445 516.10595703]
[226.46630859 520.66888428]
[212.03048706 524.74139404]
[197.46403503 528.31860352]
[182.78393555 531.39642334]
[168.00732422 533.97125244]
[153.15142822 536.04010010]
[138.23355103 537.60058594]
[123.27109528 538.65081787]
[108.28150940 539.18957520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
