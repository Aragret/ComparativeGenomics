%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[49.10877991 476.02511597]
[55.07892609 489.91210938]
[56.68891144 504.94207764]
[53.79558563 519.77850342]
[46.65621185 533.10223389]
[35.90562820 543.72839355]
[22.49975967 550.71228027]
[7.63065243 553.43273926]
[-7.37954378 551.64794922]
[-21.19613266 545.51666260]
[-32.59055328 535.58392334]
[-40.54961777 522.73309326]
[-44.36561584 508.10675049]
[-43.69923019 493.00549316]
[-38.60971832 478.77215576]
[-29.54962921 466.67230225]
[-17.32458496 457.78189087]
[-3.02162671 452.89141846]
[12.08743572 452.43572998]
[16.05953217 437.97119141]
[20.03162766 423.50668335]
[24.00372505 409.04214478]
[27.97582054 394.57763672]
[23.88499260 380.25582886]
[35.00045776 368.99719238]
[38.97255325 354.53265381]
[42.72885513 340.01058960]
[46.26852798 325.43420410]
[49.80820084 310.85784912]
[53.34787369 296.28146362]
[41.30035019 283.36911011]
[39.39888382 265.65371704]
[48.59251785 250.20843506]
[65.36231995 243.31413269]
[68.46643066 228.63883972]
[71.57054138 213.96353149]
[74.45581818 199.24363708]
[77.12161255 184.48242188]
[79.78740692 169.72120667]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[97.62400818 27.41865730]
[107.50003052 16.26905823]
[109.06055450 1.35045421]
[109.50715637 -13.64289570]
[109.95376587 -28.63624573]
[109.84209442 -43.63582993]
[109.17230988 -58.62086868]
[108.50252533 -73.60591125]
[107.83274078 -88.59095001]
[107.16295624 -103.57598877]
[106.49317169 -118.56102753]
[92.91025543 -120.64168549]
[79.95236969 -125.20192719]
[68.06783295 -132.08222961]
[57.66752243 -141.04281616]
[49.11063766 -151.77204895]
[42.69231033 -163.89723206]
[38.63342285 -176.99755859]
[37.07300949 -190.61872864]
[38.06348419 -204.28869629]
[41.56889725 -217.53407288]
[47.46622849 -229.89640808]
[55.54969406 -240.94818115]
[65.53795624 -250.30752563]
[77.08387756 -257.65142822]
[89.78660583 -262.72686768]
[103.20551300 -265.35952759]
[103.20551300 -280.35952759]
[103.20551300 -295.35952759]
[103.20551300 -310.35952759]
[94.65342712 -314.94125366]
[88.39503479 -322.27902222]
[85.25797272 -331.33746338]
[85.63333893 -340.85845947]
[89.42743683 -349.53573608]
[96.08043671 -356.19418335]
[104.64855957 -359.94885254]
[105.54137421 -374.92227173]
[106.43419647 -389.89566040]
[107.32701111 -404.86907959]
[108.21982574 -419.84246826]
[93.56290436 -423.19277954]
[79.65738678 -428.90997314]
[66.88261414 -436.83810425]
[55.58710861 -446.76086426]
[46.07900620 -458.40759277]
[38.61770248 -471.46051025]
[33.40674210 -485.56353760]
[30.58828926 -500.33197021]
[30.23922920 -515.36285400]
[32.36908722 -530.24621582]
[36.91975784 -544.57592773]
[43.76709366 -557.96112061]
[52.72429657 -570.03668213]
[63.54700851 -580.47308350]
[75.93997955 -588.98565674]
[89.56510925 -595.34222412]
[104.05071259 -599.36926270]
[119.00159454 -600.95703125]
[134.00988770 -600.06213379]
[148.66616821 -596.70898438]
[162.57058716 -590.98913574]
[175.34382629 -583.05853271]
[186.63742065 -573.13360596]
[196.14328003 -561.48504639]
[203.60206604 -548.43072510]
[208.81031799 -534.32666016]
[211.62591553 -519.55767822]
[211.97207642 -504.52673340]
[209.83935547 -489.64379883]
[205.28593445 -475.31494141]
[198.43601990 -461.93106079]
[189.47648621 -449.85726929]
[178.65176392 -439.42291260]
[166.25715637 -430.91271973]
[152.63079834 -424.55880737]
[138.14442444 -420.53451538]
[123.19322968 -418.94967651]
[122.30041504 -403.97625732]
[121.40760040 -389.00283813]
[120.51478577 -374.02944946]
[119.62197113 -359.05603027]
[134.42596436 -344.96231079]
[134.00769043 -324.23260498]
[118.20551300 -310.35952759]
[118.20551300 -295.35952759]
[118.20551300 -280.35952759]
[118.20551300 -265.35952759]
[134.15788269 -261.93020630]
[148.96597290 -255.06199646]
[161.89825439 -245.09101868]
[172.31523132 -232.50672913]
[179.70092773 -217.92790222]
[183.68855286 -202.07221985]
[184.07865906 -185.72091675]
[180.84912109 -169.68031311]
[174.15638733 -154.74205017]
[164.32789612 -141.64401245]
[151.84605408 -131.03385925]
[137.32455444 -123.43706512]
[121.47821045 -119.23081207]
[122.14799500 -104.24577332]
[122.81777954 -89.26073456]
[123.48756409 -74.27569580]
[124.15734863 -59.29065323]
[124.82713318 -44.30561447]
[136.72158813 -53.44465256]
[151.31875610 -49.99174881]
[157.85816956 -36.49225998]
[151.51919556 -22.89750290]
[136.97470093 -19.22902870]
[124.94711304 -28.18964005]
[124.50051117 -13.19629002]
[124.05390167 1.79706025]
[133.25993347 -10.04561329]
[147.11637878 -15.79008007]
[162.00120544 -13.93474865]
[174.02352905 -4.96460009]
[180.04077148 8.77559185]
[178.48001099 23.69417381]
[169.74926758 35.89146042]
[156.13069153 42.17911911]
[141.18417358 40.91356277]
[128.81669617 32.42560577]
[122.26124573 18.93485451]
[127.61349487 32.83459473]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[94.54862213 172.38699341]
[91.88282776 187.14822388]
[89.21703339 201.90943909]
[91.08952332 208.25019836]
[89.68896484 213.75796509]
[86.24584961 217.06764221]
[83.14173889 231.74295044]
[80.03762817 246.41824341]
[89.56192780 254.51487732]
[94.71017456 265.82699585]
[94.56122589 278.18246460]
[89.20471954 289.23727417]
[79.71238708 296.92025757]
[67.92424774 299.82113647]
[64.38457489 314.39752197]
[60.84490204 328.97387695]
[57.30522919 343.55026245]
[58.79699326 349.99124146]
[57.07109070 355.40588379]
[53.43707657 358.50476074]
[49.46498108 372.96926880]
[53.27169800 388.32568359]
[42.44034576 398.54974365]
[38.46824646 413.01425171]
[34.49615097 427.47879028]
[30.52405548 441.94329834]
[26.55195999 456.40783691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 210]
[20 209]
[21 208]
[22 207]
[23 206]
[25 204]
[26 203]
[27 200]
[28 199]
[29 198]
[30 197]
[34 191]
[35 190]
[36 189]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[45 178]
[46 177]
[47 176]
[48 175]
[50 173]
[51 162]
[52 161]
[53 160]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[75 136]
[76 135]
[77 134]
[78 133]
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
