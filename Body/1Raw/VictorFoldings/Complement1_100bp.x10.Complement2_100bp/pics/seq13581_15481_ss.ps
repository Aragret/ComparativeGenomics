%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[192.96266174 381.48049927]
[195.50108337 366.68554688]
[199.41377258 352.19329834]
[204.66636658 338.13110352]
[211.21270752 324.62258911]
[218.99523926 311.78643799]
[227.94558716 299.73550415]
[237.98509216 288.57562256]
[227.82154846 277.54373169]
[217.65800476 266.51187134]
[207.49446106 255.47998047]
[193.18037415 251.36216736]
[189.52026367 235.97015381]
[179.35671997 224.93826294]
[165.04263306 220.82044983]
[161.38252258 205.42843628]
[151.21897888 194.39656067]
[154.10357666 209.11657715]
[150.83108521 223.75524902]
[141.95295715 235.84570312]
[128.96534729 243.35047913]
[114.05685425 245.00489807]
[99.73985291 240.53015137]
[88.42699432 230.68031311]
[82.02469635 217.11526489]
[81.61185455 202.12095642]
[87.25804901 188.22416687]
[98.01179504 177.76678467]
[112.06089020 172.51103210]
[127.03782654 173.34262085]
[140.42001343 180.12243652]
[132.56825256 167.34158325]
[124.71649170 154.56074524]
[116.86473846 141.77990723]
[109.01298523 128.99905396]
[101.16123199 116.21821594]
[90.01712799 112.83438110]
[83.99480438 102.86579132]
[86.18403625 91.42688751]
[78.52343750 78.53056335]
[70.86284637 65.63423157]
[57.16282272 57.72095490]
[57.31510544 42.82712936]
[49.46334839 30.04628563]
[41.32813263 17.44397354]
[33.09932709 4.90257311]
[24.87051773 -7.63882732]
[16.64171028 -20.18022728]
[8.41290283 -32.72162628]
[-5.62680054 -40.01527786]
[-6.13971376 -54.90104675]
[-14.36852169 -67.44245148]
[-22.59733009 -79.98384857]
[-30.82613754 -92.52524567]
[-39.05494690 -105.06665039]
[-52.36425018 -98.12107849]
[-66.29898071 -92.53521729]
[-80.72064972 -88.36457825]
[-95.48591614 -85.65062714]
[-110.44802856 -84.42031860]
[-125.45829773 -84.68589783]
[-140.36752319 -86.44471741]
[-155.02754211 -89.67929077]
[-169.29264832 -94.35747528]
[-183.02105713 -100.43278503]
[-196.07633972 -107.84482574]
[-208.32873535 -116.51993561]
[-219.65646362 -126.37189484]
[-229.94694519 -137.30279541]
[-239.09791565 -149.20397949]
[-247.01841736 -161.95718384]
[-253.62973022 -175.43565369]
[-258.86614990 -189.50543213]
[-262.67562866 -204.02667236]
[-265.02032471 -218.85505676]
[-265.87692261 -233.84321594]
[-265.23687744 -248.84217834]
[-263.10659790 -263.70288086]
[-259.50723267 -278.27761841]
[-254.47456360 -292.42156982]
[-248.05859375 -305.99411011]
[-240.32310486 -318.86038208]
[-231.34498596 -330.89248657]
[-221.21343994 -341.97085571]
[-210.02917480 -351.98541260]
[-197.90335083 -360.83654785]
[-184.95648193 -368.43637085]
[-171.31724548 -374.70932007]
[-157.12120056 -379.59304810]
[-142.50942993 -383.03900146]
[-127.62715149 -385.01296997]
[-112.62228394 -385.49530029]
[-97.64395905 -384.48123169]
[-82.84104156 -381.98080444]
[-68.36064148 -378.01889038]
[-54.34669113 -372.63485718]
[-40.93846130 -365.88223267]
[-28.26921463 -357.82812500]
[-16.46487045 -348.55255127]
[-5.64274406 -338.14773560]
[4.08960342 -326.71707153]
[12.63544559 -314.37417603]
[19.90984917 -301.24169922]
[25.84051323 -287.45019531]
[30.36849785 -273.13671875]
[33.44879913 -258.44351196]
[35.05080032 -243.51660156]
[35.15858459 -228.50437927]
[33.77107620 -213.55601501]
[30.90206909 -198.82009888]
[26.58007431 -184.44306946]
[20.84804726 -170.56781006]
[13.76295948 -157.33226013]
[5.39522505 -144.86791992]
[-4.17198992 -133.29869080]
[-14.84360123 -122.73955536]
[-26.51354408 -113.29545593]
[-18.28473663 -100.75405884]
[-10.05592918 -88.21265411]
[-1.82712126 -75.67125702]
[6.40168667 -63.12985611]
[19.85280991 -56.73325348]
[20.95430183 -40.95043564]
[29.18311119 -28.40903473]
[37.41191864 -15.86763477]
[45.64072800 -3.32623482]
[53.86953354 9.21516514]
[60.16719055 13.08315182]
[62.12587357 22.00511169]
[66.50916290 23.90138245]
[69.74775696 28.57133865]
[70.21143341 35.16653061]
[83.36351776 42.15737915]
[83.75917053 57.97363663]
[91.41976929 70.86996460]
[99.08036804 83.76628876]
[113.91718292 91.59220886]
[113.94207001 108.36646271]
[121.79382324 121.14730835]
[129.64558411 133.92814636]
[137.49734497 146.70898438]
[145.34909058 159.48983765]
[153.20085144 172.27067566]
[162.25085449 184.23301697]
[172.41439819 195.26489258]
[187.45544434 200.17178345]
[190.38859558 214.77471924]
[200.55213928 225.80659485]
[215.59318542 230.71350098]
[218.52633667 245.31643677]
[228.68988037 256.34829712]
[238.85342407 267.38018799]
[249.01696777 278.41207886]
[260.96066284 269.31906128]
[273.70336914 261.38446045]
[287.13308716 254.67797852]
[301.13183594 249.25856018]
[315.57653809 245.17382812]
[330.34027100 242.45967102]
[345.29327393 241.13996887]
[360.30416870 241.22630310]
[375.24102783 242.71792603]
[389.97256470 245.60169983]
[404.36932373 249.85231018]
[418.30480957 255.43238831]
[431.65649414 262.29290771]
[444.30709839 270.37356567]
[456.14538574 279.60333252]
[467.06738281 289.90112305]
[476.97708130 301.17645264]
[485.78738403 313.33016968]
[493.42086792 326.25552368]
[499.81042480 339.83886719]
[504.89993286 353.96090698]
[508.64468384 368.49746704]
[511.01171875 383.32080078]
[511.98025513 398.30065918]
[511.54177856 413.30541992]
[509.70016479 428.20315552]
[506.47155762 442.86297607]
[501.88436890 457.15606689]
[495.97888184 470.95678711]
[488.80703735 484.14385986]
[480.43182373 496.60140991]
[470.92684937 508.21990967]
[460.37567139 518.89733887]
[448.87097168 528.53973389]
[436.51388550 537.06250000]
[423.41302490 544.39062500]
[409.68350220 550.45977783]
[395.44595337 555.21661377]
[380.82556152 558.61926270]
[365.95077515 560.63787842]
[350.95230103 561.25469971]
[335.96197510 560.46435547]
[321.11154175 558.27374268]
[306.53146362 554.70208740]
[292.34994507 549.78088379]
[278.69155884 543.55322266]
[265.67639160 536.07397461]
[253.41876221 527.40881348]
[242.02642822 517.63391113]
[231.59950256 506.83511353]
[222.22961426 495.10739136]
[213.99911499 482.55374146]
[206.98034668 469.28457642]
[201.23497009 455.41644287]
[196.81347656 441.07122803]
[193.75474548 426.37503052]
[192.08564758 411.45697021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 153]
[9 152]
[10 151]
[11 150]
[13 148]
[14 147]
[16 145]
[17 144]
[31 143]
[32 142]
[33 141]
[34 140]
[35 139]
[36 138]
[39 136]
[40 135]
[41 134]
[43 132]
[44 129]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
