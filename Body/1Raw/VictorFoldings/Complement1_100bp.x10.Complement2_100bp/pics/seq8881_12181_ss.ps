%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[95.78398895 657.48474121]
[86.28840637 645.64422607]
[81.71505737 631.17187500]
[82.68245697 616.02496338]
[89.05977631 602.25201416]
[99.98452759 591.71569824]
[113.97922516 585.84094238]
[113.53262329 570.84759521]
[113.08601379 555.85424805]
[112.63941193 540.86090088]
[112.19280243 525.86755371]
[111.74620056 510.87417603]
[101.73199463 496.46298218]
[110.59477997 480.32196045]
[109.92499542 465.33691406]
[96.64335632 458.59426880]
[88.46556854 446.02526855]
[87.67182922 430.95089722]
[94.57532501 417.41433716]
[107.41122437 409.09646606]
[106.74143982 394.11141968]
[106.07165527 379.12640381]
[105.40187073 364.14135742]
[92.89196777 356.10140991]
[87.45073700 342.07086182]
[91.36026764 327.35455322]
[103.32384491 317.64999390]
[102.65406036 302.66494751]
[94.35617828 290.29583740]
[101.46955109 276.16397095]
[100.79976654 261.17892456]
[100.12998199 246.19387817]
[91.41761780 237.80213928]
[90.73697662 225.32333374]
[98.99752808 215.41746521]
[98.55091858 200.42411804]
[98.10430908 185.43077087]
[97.32299042 170.45112610]
[96.20734406 155.49267578]
[95.09169006 140.53422546]
[93.97604370 125.57577515]
[92.86039734 110.61731720]
[87.19524384 124.50638580]
[78.29508972 136.58062744]
[66.70418549 146.10169983]
[53.13130569 152.48738098]
[38.40644455 155.34719849]
[23.43003654 154.50625610]
[9.11789036 150.01599121]
[-3.65479898 142.15098572]
[-14.10697746 131.39216614]
[-21.59949112 118.39746857]
[-25.67416763 103.96150970]
[-26.08184052 88.96704865]
[-22.79758072 74.33100891]
[-16.02222061 60.94839096]
[-6.17007780 49.63754272]
[6.15638685 41.09012985]
[20.20340538 35.82883072]
[35.11199570 34.17537308]
[49.97049332 36.23086548]
[63.87029266 41.86961746]
[75.96141815 50.74681854]
[85.50449371 62.31961823]
[91.91595459 75.88034058]
[94.80374146 90.59976959]
[90.99702454 75.24335480]
[101.82838440 65.01931000]
[105.80047607 50.55478668]
[109.77257538 36.09025955]
[113.74466705 21.62573814]
[117.71676636 7.16121340]
[119.94188690 -7.67283010]
[120.38848877 -22.66617966]
[113.06549835 -36.69060135]
[121.17831421 -49.18186569]
[121.62491608 -64.17521667]
[122.07152557 -79.16856384]
[122.29485321 -94.16690063]
[122.29485321 -109.16690063]
[122.29485321 -124.16690063]
[121.51352692 -139.14654541]
[119.95300293 -154.06513977]
[118.39247894 -168.98374939]
[116.83196259 -183.90235901]
[107.70094299 -196.82269287]
[114.07218170 -210.28584290]
[112.51165771 -225.20445251]
[110.95113373 -240.12306213]
[109.39060974 -255.04165649]
[107.83008575 -269.96026611]
[92.94657898 -272.48687744]
[79.29716492 -278.93637085]
[67.89470673 -288.83013916]
[59.58535385 -301.43399048]
[54.98571396 -315.81265259]
[54.43711090 -330.89913940]
[57.98025131 -345.57391357]
[65.35221100 -358.74798584]
[76.00595093 -369.44381714]
[89.15087891 -376.86764526]
[103.81156158 -380.46862793]
[118.90007782 -379.97949219]
[133.29675293 -375.43658447]
[145.93327332 -367.17697144]
[155.87191772 -355.81359863]
[162.37516785 -342.18972778]
[164.96044922 -327.31628418]
[163.43589783 -312.29702759]
[157.91467285 -298.24645996]
[148.80645752 -286.20721436]
[136.78715515 -277.07272339]
[122.74869537 -271.52078247]
[124.30921173 -256.60217285]
[125.86973572 -241.68357849]
[127.43025970 -226.76498413]
[128.99078369 -211.84637451]
[138.01017761 -199.99311829]
[131.75056458 -185.46287537]
[133.31108093 -170.54426575]
[134.87161255 -155.62567139]
[136.43212891 -140.70706177]
[145.80937195 -152.41464233]
[160.49307251 -155.47880554]
[173.77003479 -148.49867249]
[179.57020569 -134.66545105]
[175.24183655 -120.30351257]
[162.76379395 -111.97893524]
[147.84088135 -113.49761200]
[137.29484558 -124.16690063]
[137.29484558 -109.16690063]
[137.29484558 -94.16690063]
[139.97853088 -90.21634674]
[140.20899963 -84.53797150]
[137.06486511 -78.72195435]
[136.61827087 -63.72860718]
[136.17166138 -48.73525620]
[143.52659607 -35.78326035]
[135.38183594 -22.21957397]
[134.93522644 -7.22622442]
[142.58085632 -20.13143158]
[154.13523865 -29.69680786]
[168.24096680 -34.79862213]
[183.24090576 -34.83751678]
[197.37290955 -29.80892563]
[208.97673035 -20.30360031]
[216.68919373 -7.43821812]
[219.60421753 7.27580976]
[217.37936401 22.10989380]
[210.27600098 35.32133865]
[199.12863159 45.35808182]
[185.24684143 51.04101181]
[170.26142883 51.70250320]
[155.93289185 47.26485062]
[143.94450378 38.24937820]
[135.70466614 25.71522141]
[132.18128967 11.13330936]
[128.20919800 25.59783363]
[124.23709869 40.06235886]
[120.26499939 54.52688217]
[116.29290771 68.99140167]
[120.38373566 83.31321716]
[109.26826477 94.57186127]
[107.81884766 109.50167084]
[108.93450165 124.46012115]
[110.05014801 139.41857910]
[111.16579437 154.37702942]
[112.28144073 169.33547974]
[115.22183228 173.64839172]
[116.12365723 178.20251465]
[115.23641205 182.18093872]
[113.09766388 184.98416138]
[113.54426575 199.97750854]
[113.99087524 214.97087097]
[124.02963257 230.40798950]
[115.11502075 245.52409363]
[115.78480530 260.50912476]
[116.45458984 275.49417114]
[124.80037689 288.93508911]
[117.63909912 301.99514771]
[118.30888367 316.98019409]
[131.09056091 325.57873535]
[136.29742432 339.88754272]
[132.12962341 354.34762573]
[120.38690948 363.47155762]
[121.05669403 378.45660400]
[121.72647858 393.44165039]
[122.39626312 408.42669678]
[135.92306519 415.56622314]
[144.00669861 428.43289185]
[144.56098938 443.51797485]
[137.53717041 456.76641846]
[124.91003418 464.66714478]
[125.57981873 479.65219116]
[134.55426025 488.91619873]
[134.80361938 501.41107178]
[126.73954773 510.42758179]
[127.18615723 525.42089844]
[127.63275909 540.41424561]
[128.07936096 555.40759277]
[128.52597046 570.40093994]
[128.97257996 585.39434814]
[143.29214478 590.42565918]
[154.82466125 600.29309082]
[162.01045227 613.66204834]
[163.87768555 628.72448730]
[160.17385864 643.44342041]
[151.39987183 655.82812500]
[138.74232483 664.20373535]
[123.91307068 667.43756104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[14 194]
[15 193]
[20 188]
[21 187]
[22 186]
[23 185]
[27 181]
[28 180]
[30 178]
[31 177]
[32 176]
[35 174]
[36 173]
[37 172]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[66 163]
[68 161]
[69 160]
[70 159]
[71 158]
[72 157]
[73 140]
[74 139]
[76 137]
[77 136]
[78 135]
[79 132]
[80 131]
[81 130]
[82 122]
[83 121]
[84 120]
[85 119]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
