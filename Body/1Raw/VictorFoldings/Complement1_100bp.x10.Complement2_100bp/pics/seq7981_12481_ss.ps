%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[221.54759216 377.81463623]
[233.35731506 368.51269531]
[226.08409119 355.39398193]
[218.81086731 342.27529907]
[211.53762817 329.15661621]
[204.26440430 316.03790283]
[196.99118042 302.91921997]
[189.71794128 289.80050659]
[182.44471741 276.68182373]
[168.10058594 272.83715820]
[160.53761292 259.63653564]
[164.66751099 244.61717224]
[157.39428711 231.49847412]
[144.45617676 224.11914062]
[144.53160095 208.29811096]
[137.16091919 195.23393250]
[129.69317627 182.22497559]
[124.73966980 196.38345337]
[111.28585815 203.01632690]
[97.03868866 198.32395935]
[90.15959930 184.99436951]
[94.58923340 170.66334534]
[107.79010010 163.54034424]
[122.19940186 167.70516968]
[115.92204285 154.08184814]
[109.64467621 140.45852661]
[103.36731720 126.83521271]
[97.08995819 113.21189880]
[96.68368530 128.20639038]
[93.30793762 142.82160950]
[87.09716797 156.47540283]
[78.29874420 168.62397766]
[67.26310730 178.78344727]
[54.42980194 186.54914856]
[40.30997467 191.61180115]
[25.46601295 193.76976013]
[10.48914337 192.93705750]
[-4.02410889 189.14688110]
[-17.49568748 182.55017090]
[-29.38902283 173.40968323]
[-39.23041153 162.08946228]
[-46.62787247 149.04042053]
[-51.28676605 134.78227234]
[-53.02153397 119.88292694]
[-51.76307678 104.93581390]
[-47.56152344 90.53627014]
[-40.58421707 77.25782013]
[-31.10906029 65.62934113]
[-19.51344681 56.11400223]
[-6.25922489 49.09078217]
[8.12569427 44.83941650]
[23.06836700 43.52923965]
[37.97362900 45.21243286]
[52.24781418 49.82195663]
[65.32238007 57.17420959]
[76.67658234 66.97636414]
[85.85817719 78.83799744]
[92.50000000 92.28275299]
[92.50000000 77.28275299]
[92.50000000 62.28274918]
[92.50000000 47.28274918]
[92.50000000 32.28274918]
[92.50000000 17.28275108]
[92.50000000 2.28275084]
[92.05339050 -12.71059895]
[91.16057587 -27.68400574]
[90.26776123 -42.65740967]
[82.56219482 -29.78790283]
[69.80681610 -21.89484406]
[54.85121918 -20.74156189]
[41.03651428 -26.58570099]
[31.44894791 -38.12166977]
[28.23040390 -52.77230072]
[32.09991455 -67.26460266]
[42.19301605 -78.36096191]
[56.25489426 -83.58242798]
[71.14408112 -81.76250458]
[83.53429413 -73.30776978]
[90.65753937 -60.10700989]
[92.21806335 -75.02561188]
[93.77858734 -89.94422150]
[95.33911133 -104.86282349]
[87.45275879 -121.50274658]
[98.30698395 -135.29232788]
[99.64521790 -150.23251343]
[100.98345184 -165.17269897]
[102.32168579 -180.11288452]
[99.89096832 -186.26132202]
[100.79455566 -191.87207031]
[103.92867279 -195.47572327]
[105.71114349 -210.36944580]
[107.49360657 -225.26316833]
[109.27607727 -240.15687561]
[110.50305176 -255.10661316]
[111.17283630 -270.09164429]
[111.84262085 -285.07669067]
[112.51240540 -300.06173706]
[113.18218994 -315.04675293]
[99.08673096 -320.57821655]
[87.55267334 -330.38861084]
[79.83115387 -343.41384888]
[76.75972748 -358.24102783]
[78.67157745 -373.26181030]
[85.35930634 -386.84683228]
[96.09748840 -397.52252197]
[109.72132111 -404.13082886]
[124.75299835 -405.95495605]
[139.56198120 -402.79705811]
[152.54193115 -394.99963379]
[162.28485107 -383.40850830]
[167.73391724 -369.28097534]
[168.29804993 -354.14953613]
[163.91606140 -339.65551758]
[155.06327820 -327.37109375]
[142.69996643 -318.62881470]
[128.16722107 -314.37698364]
[127.49744415 -299.39193726]
[126.82765961 -284.40689087]
[126.15787506 -269.42187500]
[125.48809052 -254.43682861]
[138.15045166 -262.47824097]
[152.38136292 -257.73681641]
[157.69032288 -243.70774841]
[150.16375732 -230.73274231]
[135.34999084 -228.37648010]
[124.16979218 -238.37442017]
[122.38732147 -223.48069763]
[120.60485840 -208.58697510]
[118.82239532 -193.69326782]
[117.26187134 -178.77465820]
[115.92363739 -163.83447266]
[114.58540344 -148.89428711]
[113.24716949 -133.95410156]
[120.76027679 -124.47360992]
[119.76764679 -112.01573944]
[110.25771332 -103.30229950]
[108.69718933 -88.38369751]
[107.13666534 -73.46508789]
[105.57614136 -58.54648590]
[105.24116516 -43.55022812]
[106.13398743 -28.57682037]
[107.02680206 -13.60341454]
[109.03150940 -11.64400768]
[110.38085938 -8.77244759]
[110.72354889 -5.23437262]
[109.80357361 -1.39794552]
[107.50000000 2.28275084]
[107.50000000 17.28275108]
[107.50000000 32.28274918]
[107.50000000 47.28274918]
[107.50000000 62.28274918]
[107.50000000 77.28275299]
[107.50000000 92.28275299]
[110.71327209 106.93453979]
[116.99063110 120.55785370]
[123.26799774 134.18116760]
[129.54534912 147.80448914]
[135.82272339 161.42779541]
[142.70213318 174.75723267]
[150.16987610 187.76618958]
[157.15626526 193.65075684]
[157.65029907 201.02488708]
[171.10864258 209.34255981]
[170.51298523 224.22525024]
[177.78620911 237.34393311]
[192.71261597 241.79817200]
[199.90182495 255.20599365]
[195.56341553 269.40859985]
[202.83663940 282.52728271]
[210.10986328 295.64599609]
[217.38310242 308.76467896]
[224.65632629 321.88336182]
[231.92955017 335.00207520]
[239.20278931 348.12075806]
[246.47601318 361.23944092]
[260.62188721 356.15118408]
[275.40081787 353.39810181]
[290.42999268 353.05151367]
[305.32012939 355.12039185]
[319.68551636 359.55117798]
[333.15405273 366.22906494]
[345.37692261 374.98107910]
[356.03747559 385.58056641]
[364.85958862 397.75292969]
[371.61474609 411.18289185]
[376.12799072 425.52258301]
[378.28237915 440.40057373]
[378.02215576 455.43148804]
[375.35403442 470.22598267]
[370.34713745 484.40087891]
[363.13113403 497.58895874]
[353.89294434 509.44863892]
[342.87188721 519.67272949]
[330.35339355 527.99639893]
[316.66174316 534.20410156]
[302.15161133 538.13494873]
[287.19879150 539.68713379]
[272.19061279 538.82049561]
[257.51583862 535.55749512]
[243.55458069 529.98260498]
[230.66845703 522.24029541]
[219.19125366 512.53100586]
[209.42025757 501.10629272]
[201.60856628 488.26208496]
[195.95852661 474.33108521]
[192.61647034 459.67410278]
[191.66897583 444.67080688]
[193.14057922 429.70983887]
[196.99316406 415.17871094]
[203.12693787 401.45382690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[12 165]
[13 164]
[15 162]
[16 160]
[17 159]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[63 148]
[64 147]
[65 142]
[66 141]
[67 140]
[79 139]
[80 138]
[81 137]
[82 136]
[84 133]
[85 132]
[86 131]
[87 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
