%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[46.12935638 529.81195068]
[43.94581223 544.70550537]
[38.80859375 558.85449219]
[30.92806816 571.67950439]
[20.62693977 582.65551758]
[8.32703400 591.33288574]
[-5.46797848 597.35638428]
[-20.19319916 600.47930908]
[-35.24563980 600.57385254]
[-50.00891113 597.63604736]
[-63.87846756 591.78619385]
[-76.28636169 583.26397705]
[-86.72449493 572.41821289]
[-94.76543427 559.69311523]
[-100.07990265 545.60974121]
[-102.45027924 530.74481201]
[-101.77950287 515.70703125]
[-98.09503937 501.11215210]
[-91.54776764 487.55789185]
[-82.40578461 475.59927368]
[-71.04345703 465.72595215]
[-57.92606354 458.34225464]
[-43.59075165 453.75054932]
[-28.62454605 452.13885498]
[-13.64030170 453.57318115]
[-9.23930359 439.23333740]
[-4.83830547 424.89349365]
[-0.43730727 410.55364990]
[3.96369076 396.21380615]
[8.36468887 381.87393188]
[3.51949239 365.00708008]
[17.10415459 352.57574463]
[21.29116440 338.17196655]
[25.47817612 323.76815796]
[29.66518784 309.36437988]
[20.94296837 294.98516846]
[25.40707207 278.42056274]
[40.76667404 270.04788208]
[44.73876953 255.58334351]
[48.71086502 241.11882019]
[52.68296051 226.65429688]
[56.65505981 212.18977356]
[52.56423187 197.86795044]
[63.67969513 186.60931396]
[58.08986664 179.71099854]
[56.27351379 170.87948608]
[58.76194763 162.07028198]
[65.11874390 155.29364014]
[74.01043701 152.15596008]
[78.62444305 137.88323975]
[83.23844910 123.61050415]
[82.08364105 121.05618286]
[81.87105560 117.89051819]
[82.83860016 114.47010040]
[85.09085083 111.23097992]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[95.26344299 70.23540497]
[107.09967804 61.19367981]
[112.55503082 47.22088242]
[118.01039124 33.24808121]
[115.82192993 17.57896614]
[127.65817261 8.53724194]
[133.11352539 -5.43555593]
[130.92506409 -21.10467339]
[142.76130676 -30.14639664]
[148.21665955 -44.11919403]
[153.14825439 -58.28533173]
[157.54925537 -72.62517548]
[161.95025635 -86.96502686]
[166.35124207 -101.30487061]
[153.77362061 -109.65251160]
[144.06761169 -121.19442749]
[138.01329041 -134.98973083]
[136.09349060 -149.91697693]
[138.45532227 -164.76533508]
[144.89891052 -178.33279419]
[154.89436340 -189.52349854]
[167.62522888 -197.43620300]
[182.05525208 -201.43692017]
[197.01271057 -201.20964050]
[201.41371155 -215.54948425]
[205.81471252 -229.88932800]
[210.21569824 -244.22917175]
[212.10899353 -259.10922241]
[211.43920898 -274.09423828]
[210.76942444 -289.07928467]
[210.09963989 -304.06433105]
[209.42985535 -319.04937744]
[208.76007080 -334.03439331]
[208.09028625 -349.01943970]
[207.42050171 -364.00448608]
[192.71377563 -367.41250610]
[179.47242737 -374.66299438]
[168.67907715 -385.21789551]
[161.13465881 -398.29400635]
[157.39900208 -412.92092896]
[157.74932861 -428.01330566]
[162.15965271 -442.45117188]
[170.30267334 -455.16311646]
[181.57415771 -465.20584106]
[195.13764954 -471.83413696]
[209.98667908 -474.55609131]
[225.01931763 -473.16973877]
[239.12008667 -467.77798462]
[251.24258423 -458.78088379]
[260.48724365 -446.84609985]
[266.16806030 -432.85931396]
[267.86346436 -417.85836792]
[265.44766235 -402.95645142]
[259.09991455 -389.25942993]
[249.29125977 -377.78369141]
[236.74957275 -369.38076782]
[222.40553284 -364.67425537]
[223.07533264 -349.68923950]
[223.74511719 -334.70419312]
[224.41490173 -319.71914673]
[225.08468628 -304.73410034]
[225.75447083 -289.74908447]
[226.42425537 -274.76403809]
[227.09403992 -259.77899170]
[233.17019653 -273.49322510]
[242.42590332 -285.29711914]
[254.29515076 -294.46887207]
[268.05215454 -300.44760132]
[282.85562134 -302.86773682]
[297.80035400 -301.58126831]
[311.97247314 -296.66687012]
[324.50531006 -288.42504883]
[334.63253784 -277.35983276]
[341.73483276 -264.14779663]
[345.37786865 -249.59692383]
[345.33892822 -234.59696960]
[341.62036133 -220.06520081]
[334.44955444 -206.89024353]
[324.26501465 -195.87774658]
[311.68951416 -187.70112610]
[297.49209595 -182.86039734]
[282.54086304 -181.65155029]
[267.75015259 -184.14852905]
[254.02441406 -190.19863892]
[242.20295715 -199.43188477]
[233.00866699 -211.28369141]
[227.00379944 -225.02929688]
[224.55555725 -239.82818604]
[220.15455627 -225.48832703]
[215.75355530 -211.14848328]
[211.35255432 -196.80863953]
[223.86233521 -188.60603333]
[233.56369019 -177.19923401]
[239.66389465 -163.50714111]
[241.66075134 -148.63592529]
[239.38397217 -133.78962708]
[233.00961304 -120.17274475]
[223.04653931 -108.89244080]
[210.29576111 -100.86855316]
[195.78608704 -96.75859833]
[180.69110107 -96.90387726]
[176.29010010 -82.56402588]
[171.88909912 -68.22418213]
[167.48809814 -53.88433075]
[181.76074219 -58.49862289]
[194.35087585 -50.34456253]
[195.97750854 -35.43302155]
[185.44155884 -24.75623322]
[170.50973511 -26.18472862]
[162.18945312 -38.66383743]
[156.73410034 -24.69104004]
[159.31275940 -10.02135086]
[147.08631897 0.01980096]
[141.63096619 13.99259853]
[144.20962524 28.66228676]
[131.98318481 38.70344162]
[126.52783203 52.67623901]
[121.07247162 66.64903259]
[123.65113831 81.31872559]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[97.51118469 128.22450256]
[92.89717865 142.49723816]
[88.28316498 156.76997375]
[94.03596497 177.41261292]
[78.14421844 190.58140564]
[81.95093536 205.93782043]
[71.11958313 216.16186523]
[67.14748383 230.62638855]
[63.17538834 245.09091187]
[59.20329285 259.55545044]
[55.23119736 274.01995850]
[63.19645691 284.88131714]
[63.44819641 298.15338135]
[56.11852264 308.98654175]
[44.06896973 313.55139160]
[39.88195801 327.95516968]
[35.69494629 342.35897827]
[31.50793648 356.76275635]
[37.02465820 368.42160034]
[33.24075699 380.33233643]
[22.70453644 386.27493286]
[18.30353737 400.61480713]
[13.90254021 414.95465088]
[9.50154209 429.29449463]
[5.10054398 443.63433838]
[0.69954568 457.97418213]
[13.90861702 465.19259644]
[25.39402008 474.92245483]
[34.68543625 486.76535034]
[41.40238571 500.23635864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[32 198]
[33 197]
[34 196]
[35 195]
[38 191]
[39 190]
[40 189]
[41 188]
[42 187]
[44 185]
[49 183]
[50 182]
[51 181]
[56 180]
[58 178]
[60 176]
[61 175]
[62 174]
[64 172]
[65 171]
[67 169]
[68 168]
[69 162]
[70 161]
[71 160]
[72 159]
[82 149]
[83 148]
[84 147]
[85 146]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
