%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[156.06396484 656.12750244]
[155.39418030 641.14245605]
[154.72439575 626.15740967]
[154.05461121 611.17236328]
[153.38482666 596.18731689]
[138.17057800 593.25592041]
[124.08884430 586.77197266]
[111.95640564 577.10699463]
[102.47808075 564.81713867]
[96.20579529 550.61126709]
[93.50638580 535.30981445]
[94.54020691 519.79779053]
[99.25158691 504.97326660]
[107.37179565 491.69555664]
[118.43439484 480.73538208]
[131.80201721 472.73004150]
[146.70307922 468.14645386]
[145.81027222 453.17306519]
[144.91744995 438.19964600]
[144.02462769 423.22625732]
[143.13182068 408.25283813]
[142.23899841 393.27944946]
[131.80015564 379.17279053]
[140.17843628 362.77505493]
[131.51596069 350.65850830]
[138.20542908 336.32107544]
[137.08976746 321.36264038]
[135.97412109 306.40417480]
[134.85847473 291.44570923]
[133.74282837 276.48727417]
[132.62718201 261.52880859]
[130.40206909 246.69477844]
[127.07980347 232.06730652]
[123.75754547 217.43984985]
[108.47023010 211.45857239]
[99.67227936 197.40304565]
[100.99887848 180.70750427]
[112.12469482 167.96731567]
[108.58502197 153.39094543]
[105.04534912 138.81455994]
[100.75122833 124.44235229]
[95.71430969 110.31332397]
[90.57234955 96.22218323]
[85.32563019 82.16971588]
[80.07891083 68.11724091]
[74.83219147 54.06476974]
[69.48101044 40.05174637]
[64.02565002 26.07894897]
[58.36286545 12.18892193]
[52.49390411 -1.61525476]
[46.62494278 -15.41943169]
[40.75598145 -29.22360802]
[36.78206635 -14.75958538]
[25.69054604 -4.66115952]
[10.91825294 -2.05743885]
[-2.95745754 -7.75521421]
[-11.63704681 -19.98896790]
[-12.43104839 -34.96793747]
[-5.09343290 -48.05072784]
[8.10215950 -55.18349457]
[23.06693077 -54.15607071]
[35.16404343 -45.28660965]
[31.19194603 -59.75113297]
[20.07648087 -71.00977325]
[24.16730881 -85.33158875]
[20.19521332 -99.79611206]
[16.26937485 -85.31896210]
[7.16315651 -73.39936829]
[-5.77258921 -65.80552673]
[-20.61892128 -63.66393280]
[-35.17347717 -67.29228973]
[-47.27716827 -76.15234375]
[-55.13449097 -88.92976379]
[-57.57985687 -103.72909546]
[-54.25050735 -118.35494232]
[-45.64033508 -130.63764954]
[-33.02660370 -138.75515747]
[-18.28048897 -141.50326538]
[-3.58948898 -138.47431946]
[8.86707497 -130.11764526]
[17.24060440 -117.67466736]
[16.34778786 -132.64807129]
[15.45497131 -147.62147522]
[14.56215572 -162.59487915]
[13.66934013 -177.56828308]
[12.77652454 -192.54168701]
[4.23154068 -205.85687256]
[11.19758224 -219.02210999]
[2.01209497 -207.16348267]
[-12.35676384 -202.85815430]
[-26.54976463 -207.71188354]
[-35.27326965 -219.91436768]
[-35.27362442 -234.91436768]
[-26.55070114 -247.11726379]
[-12.35793209 -251.97166443]
[2.01113153 -247.66702271]
[11.19758224 -235.80773926]
[12.09039879 -250.78114319]
[12.98321438 -265.75454712]
[13.87602997 -280.72796631]
[0.18808304 -287.33920288]
[-9.92418575 -298.68865967]
[-14.91872883 -313.04565430]
[-14.03391457 -328.22082520]
[-7.40467119 -341.90005493]
[3.95809078 -351.99737549]
[18.32163239 -356.97302246]
[33.49561691 -356.06826782]
[47.16612244 -349.42102051]
[57.24849701 -338.04498291]
[62.20524979 -323.67492676]
[61.28051758 -308.50213623]
[54.61530685 -294.84039307]
[43.22601700 -284.77297974]
[28.84943581 -279.83514404]
[27.95661926 -264.86172485]
[27.06380463 -249.88832092]
[26.17098808 -234.91491699]
[26.17098808 -219.91491699]
[34.65211105 -207.67074585]
[27.74992943 -193.43450928]
[28.64274597 -178.46110535]
[29.53556252 -163.48770142]
[30.42837715 -148.51429749]
[31.32119370 -133.54087830]
[32.21400833 -118.56748199]
[34.65973663 -103.76821136]
[38.63183212 -89.30368805]
[49.46318817 -79.07964325]
[45.65647125 -63.72322845]
[49.62856674 -49.25870514]
[54.56016159 -35.09257126]
[60.42911911 -21.28839302]
[66.29808044 -7.48421574]
[72.16704559 6.31996107]
[76.18248749 8.90554333]
[78.61631775 14.04105663]
[77.99845123 20.62359238]
[83.45380402 34.59638977]
[88.81469727 39.68388748]
[88.88466644 48.81805038]
[94.13138580 62.87052155]
[99.37810516 76.92299652]
[104.62482452 90.97546387]
[110.17043304 96.82514191]
[109.84333801 105.27640533]
[114.88025665 119.40544128]
[121.22993469 105.81568146]
[134.77586365 99.37301636]
[149.32501221 103.02295685]
[158.22572327 115.09678650]
[157.40870667 130.07452393]
[147.24748230 141.10853577]
[132.38763428 143.15423584]
[119.62172699 135.27488708]
[123.16139984 149.85127258]
[126.70107269 164.42764282]
[139.80392456 168.70617676]
[149.00865173 178.82009888]
[151.99008179 192.05567932]
[148.07376099 204.93228149]
[138.38500977 214.11759949]
[141.70726013 228.74505615]
[145.02952576 243.37251282]
[150.97657776 229.60180664]
[162.95300293 220.57043457]
[177.82815552 218.63919067]
[191.71372986 224.31289673]
[200.98005676 236.10845947]
[203.20495605 250.94253540]
[197.80682373 264.93753052]
[186.19673157 274.43521118]
[171.40953064 276.95288086]
[157.31056213 271.83245850]
[147.58563232 260.41317749]
[148.70127869 275.37161255]
[149.81692505 290.33007812]
[150.93257141 305.28851318]
[152.04823303 320.24697876]
[153.16387939 335.20544434]
[161.90615845 348.39190674]
[155.13690186 361.65939331]
[164.38317871 370.65213013]
[165.00445557 383.13403320]
[157.21240234 392.38662720]
[158.10522461 407.36001587]
[158.99803162 422.33343506]
[159.89085388 437.30685425]
[160.78367615 452.28024292]
[161.67648315 467.25366211]
[176.00782776 469.73068237]
[189.41888428 475.33853149]
[201.23544312 483.79165649]
[210.86425781 494.66152954]
[217.82281494 507.39840698]
[221.76356506 521.35913086]
[222.49124146 535.83959961]
[219.97254944 550.11022949]
[214.33764648 563.45288086]
[205.87344360 575.19671631]
[195.00900269 584.75213623]
[182.29379272 591.64044189]
[168.36985779 595.51757812]
[169.03964233 610.50256348]
[169.70944214 625.48760986]
[170.37922668 640.47265625]
[171.04901123 655.45770264]
[180.32579041 668.98077393]
[173.00971985 683.65753174]
[156.62693787 684.38977051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[24 182]
[26 180]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 164]
[33 163]
[34 162]
[38 157]
[39 156]
[40 155]
[41 147]
[42 146]
[43 144]
[44 143]
[45 142]
[46 141]
[47 139]
[48 138]
[49 135]
[50 134]
[51 133]
[52 132]
[62 131]
[63 130]
[65 128]
[66 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[88 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
