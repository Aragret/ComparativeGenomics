%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[89.52767181 518.17315674]
[77.40448761 527.02337646]
[64.54656219 534.76745605]
[51.05451584 541.34484863]
[37.03395081 546.70410156]
[22.59459686 550.80322266]
[7.84946489 553.61010742]
[-7.08604193 555.10284424]
[-22.09503174 555.26971436]
[-37.06003571 554.10943604]
[-51.86393356 551.63110352]
[-66.39085388 547.85406494]
[-80.52711487 542.80786133]
[-94.16207123 536.53210449]
[-107.18900299 529.07574463]
[-119.50596619 520.49731445]
[-131.01655579 510.86383057]
[-141.63069153 500.25073242]
[-151.26528931 488.74105835]
[-159.84495544 476.42495728]
[-167.30253601 463.39874268]
[-173.57966614 449.76440430]
[-178.62721252 435.62863159]
[-182.40567017 421.10208130]
[-184.88548279 406.29843140]
[-186.04722595 391.33352661]
[-185.88180542 376.32452393]
[-184.39053345 361.38885498]
[-181.58505249 346.64346313]
[-177.48735046 332.20370483]
[-172.12948608 318.18261719]
[-165.55339050 304.68994141]
[-157.81053162 291.83123779]
[-148.96151733 279.70721436]
[-139.07557678 268.41268921]
[-128.23011780 258.03610229]
[-116.51000977 248.65864563]
[-104.00697327 240.35372925]
[-90.81887054 233.18634033]
[-77.04891205 227.21257019]
[-62.80487061 222.47918701]
[-48.19823074 219.02322388]
[-33.34330750 216.87173462]
[-18.35636711 216.04154968]
[-3.35470080 216.53918457]
[11.54427910 218.36071777]
[26.22396660 221.49191284]
[40.56946945 225.90826416]
[46.23225784 212.01824951]
[43.87229156 197.31178284]
[56.24687195 187.45378113]
[61.90966034 173.56375122]
[67.57244873 159.67372131]
[73.23523712 145.78370667]
[78.89801788 131.89367676]
[84.56080627 118.00364685]
[90.22359467 104.11361694]
[95.36555481 90.02247620]
[99.97956085 75.74974823]
[104.59357452 61.47701263]
[109.20758057 47.20428085]
[113.82158661 32.93154526]
[118.43560028 18.65881348]
[123.04960632 4.38607931]
[127.66362000 -9.88665390]
[132.27763367 -24.15938759]
[136.24972534 -38.62391281]
[139.57197571 -53.25137329]
[142.89424133 -67.87882996]
[146.21650696 -82.50629425]
[149.53875732 -97.13375092]
[135.18992615 -101.52899933]
[121.20487976 -106.97194672]
[107.66000366 -113.43286133]
[94.62927246 -120.87647247]
[82.18385315 -129.26210022]
[70.39173126 -138.54397583]
[59.31730270 -148.67137146]
[49.02105331 -159.58898926]
[39.55921936 -171.23721313]
[30.98348236 -183.55239868]
[23.34067726 -196.46730042]
[16.67254448 -209.91137695]
[11.01550770 -223.81120300]
[6.40046215 -238.09086609]
[2.85261369 -252.67236328]
[0.39133993 -267.47604370]
[-0.96991622 -282.42108154]
[-1.22372007 -297.42584229]
[-0.36868542 -312.40838623]
[1.59051776 -327.28683472]
[4.64318895 -341.97998047]
[8.77265549 -356.40756226]
[13.95636272 -370.49075317]
[20.16599846 -384.15264893]
[27.36765099 -397.31866455]
[35.52198029 -409.91683960]
[44.58445740 -421.87838745]
[54.50558090 -433.13796997]
[65.23116302 -443.63412476]
[76.70262909 -453.30950928]
[88.85732269 -462.11123657]
[101.62885284 -469.99127197]
[114.94747925 -476.90658569]
[128.74044800 -482.81939697]
[142.93241882 -487.69741821]
[157.44589233 -491.51397705]
[172.20159912 -494.24826050]
[187.11895752 -495.88534546]
[202.11647034 -496.41625977]
[217.11222839 -495.83810425]
[232.02433777 -494.15402222]
[246.77136230 -491.37326050]
[261.27273560 -487.51098633]
[275.44927979 -482.58828735]
[289.22354126 -476.63204956]
[302.52032471 -469.67483521]
[315.26696777 -461.75457764]
[327.39385986 -452.91458130]
[338.83477783 -443.20312500]
[349.52725220 -432.67324829]
[359.41284180 -421.38244629]
[368.43759155 -409.39239502]
[376.55218506 -396.76858521]
[383.71234131 -383.57995605]
[389.87890625 -369.89855957]
[395.01821899 -355.79910278]
[399.10220337 -341.35861206]
[402.10855103 -326.65591431]
[404.02087402 -311.77136230]
[404.82870483 -296.78619385]
[404.52761841 -281.78231812]
[403.11929321 -266.84164429]
[400.61138916 -252.04577637]
[397.01760864 -237.47552490]
[392.35760498 -223.21047974]
[386.65679932 -209.32855225]
[379.94635010 -195.90554810]
[372.26290894 -183.01478577]
[363.64840698 -170.72666931]
[354.14990234 -159.10832214]
[343.81933594 -148.22319031]
[332.71304321 -138.13073730]
[320.89172363 -128.88607788]
[308.41995239 -120.53968811]
[295.36584473 -113.13717651]
[281.80065918 -106.71896362]
[267.79855347 -101.32009888]
[253.43594360 -96.97008514]
[238.79129028 -93.69266510]
[223.94458008 -91.50575256]
[208.97691345 -90.42127991]
[193.97003174 -90.44517517]
[179.00588989 -91.57730865]
[164.16621399 -93.81149292]
[160.84396362 -79.18402863]
[157.52169800 -64.55657196]
[154.19944763 -49.92911148]
[150.87718201 -35.30165100]
[164.11364746 -42.35828400]
[178.50259399 -38.12058258]
[185.80139160 -25.01609612]
[181.82894897 -10.55166626]
[168.86087036 -3.01317883]
[154.32585144 -6.71901989]
[146.55035400 -19.54537773]
[141.93635559 -5.27264500]
[137.32234192 9.00008869]
[132.70832825 23.27282143]
[128.09432983 37.54555511]
[123.48031616 51.81828690]
[118.86630249 66.09101868]
[114.25229645 80.36375427]
[109.63828278 94.63648987]
[123.97805023 90.23520660]
[136.44537354 98.57581329]
[137.84982300 113.50991821]
[127.15608215 124.02865601]
[112.24718475 122.37801361]
[104.11361694 109.77640533]
[98.45083618 123.66643524]
[92.78804779 137.55645752]
[87.12525940 151.44648743]
[81.46247101 165.33651733]
[75.79969025 179.22654724]
[70.13690186 193.11656189]
[72.09182739 208.81652832]
[60.12228394 217.68103027]
[54.45949554 231.57106018]
[67.80370331 238.44345093]
[80.48830414 246.46832275]
[92.41401672 255.58285522]
[103.48751831 265.71575928]
[113.62212372 276.78765869]
[122.73853302 288.71194458]
[130.76538086 301.39529419]
[137.63984680 314.73843384]
[143.30813599 328.63693237]
[147.72589111 342.98199463]
[150.85852051 357.66137695]
[152.68151855 372.56018066]
[153.18060303 387.56179810]
[152.35188293 402.54882812]
[150.20184326 417.40396118]
[146.74729919 432.01092529]
[142.01530457 446.25543213]
[136.04287720 460.02597046]
[128.87677002 473.21478271]
[120.57306671 485.71862793]
[111.19675446 497.43966675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 189]
[49 188]
[51 186]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
