%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[-21.33919334 215.67230225]
[-17.49554253 230.18092346]
[-14.89616489 244.96325684]
[-13.55979061 259.91278076]
[-13.49604797 274.92175293]
[-14.70539665 289.88208008]
[-17.17912483 304.68594360]
[-20.89940453 319.22668457]
[-25.83943558 333.39956665]
[-31.96362114 347.10241699]
[-39.22783661 360.23651123]
[-47.57974243 372.70727539]
[-56.95915985 384.42480469]
[-67.29851532 395.30465698]
[-78.52330780 405.26849365]
[-90.55265808 414.24450684]
[-103.29989624 422.16799927]
[-116.67317200 428.98190308]
[-130.57614136 434.63711548]
[-144.90861511 439.09286499]
[-159.56733704 442.31710815]
[-174.44668579 444.28656006]
[-189.43945312 444.98706055]
[-204.43762207 444.41354370]
[-219.33311462 442.57015991]
[-234.01861572 439.47015381]
[-248.38832092 435.13592529]
[-262.33868408 429.59863281]
[-275.76916504 422.89822388]
[-288.58303833 415.08297729]
[-300.68798828 406.20913696]
[-311.99673462 396.34072876]
[-322.42785645 385.54879761]
[-331.90615845 373.91110229]
[-340.36337280 361.51153564]
[-347.73852539 348.43942261]
[-353.97854614 334.78890991]
[-359.03839111 320.65838623]
[-362.88168335 306.14965820]
[-365.48068237 291.36727905]
[-366.81665039 276.41772461]
[-366.88000488 261.40872192]
[-365.67028809 246.44844055]
[-363.19616699 231.64463806]
[-359.47552490 217.10398865]
[-354.53512573 202.93124390]
[-348.41058350 189.22856140]
[-341.14602661 176.09461975]
[-332.79379272 163.62409973]
[-323.41406250 151.90681458]
[-313.07443237 141.02720642]
[-301.84939575 131.06367493]
[-289.81982422 122.08798218]
[-277.07235718 114.16481781]
[-263.69891357 107.35126495]
[-249.79580688 101.69641113]
[-235.46321106 97.24101257]
[-220.80439758 94.01715851]
[-205.92500305 92.04808044]
[-190.93220520 91.34797668]
[-175.93406677 91.92187500]
[-161.03862000 93.76564789]
[-146.35319519 96.86602020]
[-131.98361206 101.20063782]
[-118.03340149 106.73827362]
[-104.60307312 113.43903351]
[-91.78939819 121.25463104]
[-79.68470001 130.12875366]
[-68.37619781 139.99746704]
[-57.94536209 150.78967285]
[-48.46735764 162.42759705]
[-40.01046753 174.82739258]
[-26.94628334 167.45669556]
[-13.88209915 160.08601379]
[-0.81791371 152.71531677]
[12.24627113 145.34463501]
[25.31045723 137.97393799]
[38.31940842 130.50619507]
[51.27240753 122.94181824]
[63.99444580 114.99514008]
[76.47423553 106.67319489]
[88.95403290 98.35124969]
[101.37152863 89.93663025]
[113.72603607 81.42980194]
[126.08054352 72.92297363]
[138.43505859 64.41615295]
[143.72842407 56.97182465]
[151.03742981 55.87624741]
[163.51722717 47.55430222]
[175.99702454 39.23235703]
[188.47680664 30.91041565]
[200.95660400 22.58847046]
[213.43640137 14.26652718]
[225.91619873 5.94458342]
[237.09817505 -4.05358839]
[246.75898743 -15.52828884]
[256.41979980 -27.00298882]
[266.08059692 -38.47768784]
[275.74142456 -49.95238876]
[265.31103516 -60.75105286]
[256.04626465 -72.56495667]
[248.04536438 -85.26887512]
[241.39311218 -98.72812653]
[236.16001892 -112.80004120]
[232.40158081 -127.33545685]
[230.15763855 -142.18028259]
[229.45196533 -157.17713928]
[230.29203796 -172.16708374]
[232.66897583 -186.99119568]
[236.55755615 -201.49232483]
[241.91658020 -215.51676941]
[248.68922424 -228.91584778]
[256.80368042 -241.54753113]
[266.17398071 -253.27790833]
[276.70074463 -263.98263550]
[288.27239990 -273.54824829]
[300.76629639 -281.87332153]
[314.04995728 -288.86962891]
[327.98260498 -294.46298218]
[342.41650391 -298.59408569]
[357.19869995 -301.21917725]
[372.17245483 -302.31042480]
[387.17904663 -301.85623169]
[402.05938721 -299.86145020]
[416.65576172 -296.34719849]
[430.81341553 -291.35073853]
[444.38229370 -284.92501831]
[457.21853638 -277.13818359]
[469.18609619 -268.07275391]
[480.15808105 -257.82485962]
[490.01818848 -246.50311279]
[498.66192627 -234.22752380]
[505.99761963 -221.12823486]
[511.94754028 -207.34410095]
[516.44860840 -193.02124023]
[519.45312500 -178.31147766]
[520.92919922 -163.37075806]
[520.86120605 -148.35743713]
[519.24987793 -133.43069458]
[516.11230469 -118.74875641]
[511.48168945 -104.46724701]
[505.40716553 -90.73756409]
[497.95312500 -77.70524597]
[489.19857788 -65.50844574]
[479.23632812 -54.27645874]
[468.17196655 -44.12834549]
[456.12280273 -35.17168808]
[443.21655273 -27.50142670]
[429.59005737 -21.19887352]
[415.38772583 -16.33083725]
[400.76010132 -12.94892120]
[385.86230469 -11.08897781]
[370.85223389 -10.77072239]
[355.88897705 -11.99752808]
[341.13116455 -14.75639057]
[326.73526001 -19.01806450]
[312.85385132 -24.73737526]
[299.63409424 -31.85369110]
[287.21612549 -40.29158020]
[277.55529785 -28.81687927]
[267.89450073 -17.34217834]
[258.23367310 -5.86747837]
[248.57287598 5.60722160]
[262.43331909 -0.12754865]
[277.36267090 -1.58186734]
[292.06933594 1.37007880]
[305.28106689 8.47291660]
[315.85488892 19.11218071]
[322.87609863 32.36746597]
[325.73727417 47.09206009]
[324.19088745 62.01213837]
[318.37072754 75.83695984]
[308.78030396 87.37055206]
[296.24926758 95.61512756]
[281.86169434 99.85746002]
[266.86221313 99.73053741]
[252.54849243 95.24534607]
[240.15875244 86.78989410]
[230.76487732 75.09566498]
[225.17950439 61.17433167]
[223.88581848 46.23022079]
[226.99575806 31.55615425]
[234.23814392 18.42437744]
[221.75834656 26.74632072]
[209.27854919 35.06826401]
[196.79875183 43.39020920]
[184.31896973 51.71215057]
[171.83917236 60.03409576]
[159.35937500 68.35604095]
[146.94187927 76.77066040]
[134.58737183 85.27748871]
[122.23286438 93.78430939]
[109.87835693 102.29113770]
[105.55303955 109.09291840]
[97.27597809 110.83103943]
[84.79618073 119.15298462]
[72.31639099 127.47492981]
[70.53211212 131.43350220]
[67.85065460 134.32734680]
[64.71690369 136.00515747]
[61.57919312 136.47563171]
[58.83678818 135.89482117]
[45.88378906 143.45919800]
[40.05138779 150.48919678]
[32.68114471 151.03813171]
[19.61696053 158.40881348]
[6.55277586 165.77951050]
[-6.51140928 173.15019226]
[-19.57559395 180.52088928]
[-32.63977814 187.89157104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 210]
[73 209]
[74 208]
[75 207]
[76 206]
[77 205]
[78 203]
[79 202]
[80 197]
[81 196]
[82 195]
[83 193]
[84 192]
[85 191]
[86 190]
[88 189]
[89 188]
[90 187]
[91 186]
[92 185]
[93 184]
[94 183]
[95 163]
[96 162]
[97 161]
[98 160]
[99 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
