%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[79.63202667 277.25140381]
[83.98051453 262.68572998]
[93.57591248 250.89604187]
[106.95500183 243.68019104]
[105.39447784 228.76158142]
[103.83395386 213.84298706]
[102.27343750 198.92437744]
[100.71291351 184.00576782]
[99.15238953 169.08717346]
[97.59186554 154.16856384]
[96.03134155 139.24995422]
[94.47081757 124.33135223]
[91.39070129 120.68142700]
[90.57074738 115.05784607]
[93.09273529 108.94628906]
[84.08482361 120.94035339]
[69.78165436 125.45914459]
[55.51796722 120.81726074]
[46.61375046 108.74601746]
[46.39006805 93.74768066]
[54.93033981 81.41626740]
[69.04926300 76.35108948]
[83.48081970 80.44132996]
[92.84282684 92.16252136]
[93.51261139 77.17748260]
[94.18239594 62.19244385]
[94.85218048 47.20740509]
[92.10908508 38.49458313]
[95.64513397 32.00473785]
[96.53794861 17.03133202]
[97.43076324 2.05792546]
[98.32357788 -12.91548061]
[99.21640015 -27.88888550]
[100.10921478 -42.86229324]
[85.18492889 -44.38997650]
[70.33892822 -46.54969025]
[55.59796906 -49.33753967]
[40.98861313 -52.74850082]
[26.53718185 -56.77643204]
[12.26972389 -61.41406631]
[-1.78805196 -66.65305328]
[-15.61081219 -72.48394775]
[-29.17364693 -78.89624023]
[-42.45211411 -85.87838745]
[-55.42228699 -93.41779327]
[-68.06079102 -101.50087738]
[-80.34485626 -110.11306763]
[-92.25233459 -119.23885345]
[-103.76177979 -128.86178589]
[-114.85243988 -138.96452332]
[-125.50433350 -149.52885437]
[-135.69827271 -160.53575134]
[-145.41587830 -171.96536255]
[-154.63963318 -183.79711914]
[-163.35293579 -196.00967407]
[-171.54005432 -208.58102417]
[-179.18626404 -221.48852539]
[-186.27777100 -234.70890808]
[-192.80180359 -248.21835327]
[-198.74659729 -261.99252319]
[-204.10144043 -276.00656128]
[-208.85667419 -290.23526001]
[-213.00375366 -304.65295410]
[-216.53518677 -319.23364258]
[-219.44462585 -333.95111084]
[-221.72680664 -348.77877808]
[-223.37762451 -363.68994141]
[-224.39410400 -378.65771484]
[-224.77442932 -393.65518188]
[-224.51788330 -408.65524292]
[-223.62495422 -423.63092041]
[-222.09725952 -438.55520630]
[-219.93751526 -453.40118408]
[-217.14964294 -468.14215088]
[-213.73866272 -482.75149536]
[-209.71070862 -497.20291138]
[-205.07304382 -511.47036743]
[-199.83403015 -525.52813721]
[-194.00311279 -539.35089111]
[-187.59080505 -552.91369629]
[-180.60864258 -566.19219971]
[-173.06921387 -579.16235352]
[-164.98611450 -591.80084229]
[-156.37390137 -604.08489990]
[-147.24809265 -615.99237061]
[-137.62513733 -627.50177002]
[-127.52239227 -638.59240723]
[-116.95803833 -649.24432373]
[-105.95112610 -659.43823242]
[-94.52149200 -669.15582275]
[-82.68972778 -678.37951660]
[-70.47715759 -687.09283447]
[-57.90579224 -695.27990723]
[-44.99827957 -702.92608643]
[-31.77788544 -710.01757812]
[-18.26843071 -716.54162598]
[-4.49426031 -722.48638916]
[9.51980114 -727.84118652]
[23.74850082 -732.59643555]
[38.16619873 -736.74346924]
[52.74691010 -740.27490234]
[67.46436310 -743.18426514]
[82.29203033 -745.46643066]
[97.20320129 -747.11724854]
[112.17098999 -748.13372803]
[127.16844177 -748.51397705]
[142.16851807 -748.25744629]
[157.14418030 -747.36450195]
[172.06846619 -745.83673096]
[186.91445923 -743.67700195]
[201.65541077 -740.88909912]
[216.26475525 -737.47808838]
[230.71617126 -733.45013428]
[244.98361206 -728.81243896]
[259.04138184 -723.57336426]
[272.86410522 -717.74243164]
[286.42694092 -711.33013916]
[299.70538330 -704.34790039]
[312.67553711 -696.80847168]
[325.31399536 -688.72534180]
[337.59802246 -680.11309814]
[349.50549316 -670.98730469]
[361.01489258 -661.36431885]
[372.10552979 -651.26153564]
[382.75738525 -640.69720459]
[392.95129395 -629.69024658]
[402.66885376 -618.26062012]
[411.89257812 -606.42883301]
[420.60583496 -594.21624756]
[428.79290771 -581.64489746]
[436.43908691 -568.73736572]
[443.53054810 -555.51696777]
[450.05453491 -542.00750732]
[455.99929810 -528.23327637]
[461.35409546 -514.21923828]
[466.10928345 -499.99050903]
[470.25631714 -485.57281494]
[473.78768921 -470.99209595]
[476.69708252 -456.27465820]
[478.97921753 -441.44696045]
[480.62997437 -426.53579712]
[481.64642334 -411.56799316]
[482.02670288 -396.57055664]
[481.77011108 -381.57049561]
[480.87713623 -366.59481812]
[479.34936523 -351.67053223]
[477.18960571 -336.82455444]
[474.40167236 -322.08361816]
[470.99063110 -307.47427368]
[466.96264648 -293.02285767]
[462.32495117 -278.75540161]
[457.08587646 -264.69766235]
[451.25491333 -250.87493896]
[444.84255981 -237.31213379]
[437.86035156 -224.03369141]
[430.32089233 -211.06355286]
[422.23773193 -198.42509460]
[413.62548828 -186.14106750]
[404.49963379 -174.23364258]
[394.87664795 -162.72424316]
[384.77386475 -151.63362122]
[374.20950317 -140.98178101]
[363.20254517 -130.78790283]
[351.77288818 -121.07035065]
[339.94110107 -111.84664917]
[327.72848511 -103.13341522]
[315.15710449 -94.94634247]
[302.24957275 -87.30020142]
[289.02914429 -80.20875549]
[275.51965332 -73.68479156]
[261.74548340 -67.74006653]
[247.73139954 -62.38528824]
[233.50268555 -57.63011551]
[219.08497620 -53.48310852]
[204.50424194 -49.95174026]
[189.78678894 -47.04238510]
[174.95910645 -44.76027298]
[160.04794312 -43.10952377]
[145.08013916 -42.09311295]
[130.08268738 -41.71286774]
[115.08261871 -41.96947479]
[114.18980408 -26.99607086]
[113.29698944 -12.02266407]
[112.40417480 2.95074129]
[111.51135254 17.92414665]
[110.61853790 32.89755249]
[109.83721924 47.87718964]
[109.16743469 62.86222839]
[108.49765015 77.84726715]
[107.82786560 92.83230591]
[108.05119324 107.83064270]
[109.38942719 122.77082825]
[110.94994354 137.68943787]
[112.51046753 152.60803223]
[114.07099152 167.52664185]
[115.63151550 182.44525146]
[117.19203949 197.36384583]
[118.75256348 212.28245544]
[120.31308746 227.20106506]
[121.87361145 242.11965942]
[136.45634460 246.41064453]
[148.28379822 255.95944214]
[155.55238342 269.30993652]
[157.15370178 284.42630005]
[152.84355164 299.00338745]
[143.27920532 310.81826782]
[129.91914368 318.06927490]
[114.80068970 319.65072632]
[100.22930145 315.32138062]
[88.42700195 305.74151611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[15 191]
[24 190]
[25 189]
[26 188]
[27 187]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
