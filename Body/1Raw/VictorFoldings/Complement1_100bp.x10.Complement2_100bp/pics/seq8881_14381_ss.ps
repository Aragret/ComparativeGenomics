%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[122.70546722 390.16085815]
[110.57334137 399.02059937]
[97.36854553 406.18417358]
[83.32673645 411.52374268]
[68.69850159 414.94400024]
[53.74490356 416.38394165]
[38.73281097 415.81787109]
[23.93012619 413.25582886]
[9.60102177 408.74359131]
[-3.99878120 402.36169434]
[-16.62657928 394.22399902]
[-28.05701447 384.47573853]
[-38.08609772 373.29086304]
[-46.53484726 360.86904907]
[-53.25248337 347.43188477]
[-58.11912537 333.21926880]
[-61.04792404 318.48474121]
[-61.98660660 303.49133301]
[-60.91842270 288.50659180]
[-57.86243820 273.79794312]
[-52.87318420 259.62789917]
[-46.03970718 246.24928284]
[-37.48395538 233.90089417]
[-27.35861397 222.80311584]
[-15.84438610 213.15396118]
[-3.14675331 205.12567139]
[10.50767899 198.86149597]
[24.87523079 194.47322083]
[39.69949722 192.03918457]
[54.71592331 191.60281372]
[69.65651703 193.17189026]
[73.19618988 178.59550476]
[76.73586273 164.01913452]
[80.27553558 149.44276428]
[83.81520844 134.86637878]
[87.35488129 120.29000854]
[90.89455414 105.71363068]
[91.67588043 90.73399353]
[89.67186737 75.86846924]
[87.66784668 61.00293732]
[85.66383362 46.13740921]
[83.65982056 31.27188110]
[68.70575714 32.48894501]
[53.70829391 32.91510391]
[38.70924377 32.54917145]
[23.75041008 31.39216805]
[8.87348366 29.44731712]
[-5.88007021 26.72004128]
[-20.46913147 23.21793938]
[-34.85303497 18.95077324]
[-48.99169159 13.93043804]
[-62.84569550 8.17092514]
[-76.37643433 1.68828714]
[-89.54618835 -5.49940729]
[-102.31825256 -13.37212467]
[-114.65703583 -21.90792274]
[-126.52814484 -31.08300972]
[-137.89848328 -40.87181473]
[-148.73637390 -51.24705124]
[-159.01159668 -62.17980576]
[-168.69552612 -73.63960266]
[-177.76116943 -85.59449768]
[-186.18324280 -98.01118469]
[-193.93829346 -110.85504150]
[-201.00468445 -124.09027863]
[-207.36273193 -137.67999268]
[-212.99472046 -151.58633423]
[-217.88494873 -165.77052307]
[-222.01979065 -180.19302368]
[-225.38771057 -194.81364441]
[-227.97932434 -209.59162903]
[-229.78741455 -224.48579407]
[-230.80693054 -239.45462036]
[-231.03504944 -254.45640564]
[-230.47113037 -269.44931030]
[-229.11672974 -284.39157104]
[-226.97563171 -299.24151611]
[-224.05380249 -313.95779419]
[-220.35939026 -328.49932861]
[-215.90269470 -342.82565308]
[-210.69612122 -356.89678955]
[-204.75419617 -370.67355347]
[-198.09349060 -384.11752319]
[-190.73254395 -397.19122314]
[-182.69187927 -409.85824585]
[-173.99392700 -422.08325195]
[-164.66290283 -433.83218384]
[-154.72483826 -445.07229614]
[-144.20741272 -455.77224731]
[-133.13995361 -465.90225220]
[-121.55330658 -475.43402100]
[-109.47975159 -484.34103394]
[-96.95295715 -492.59844971]
[-84.00783539 -500.18325806]
[-70.68045807 -507.07427979]
[-57.00797653 -513.25238037]
[-43.02849579 -518.70025635]
[-28.78098488 -523.40277100]
[-14.30515003 -527.34686279]
[0.35866055 -530.52142334]
[15.16957664 -532.91772461]
[30.08631706 -534.52899170]
[45.06730652 -535.35083008]
[60.07078934 -535.38085938]
[75.05494690 -534.61901855]
[89.97801971 -533.06744385]
[104.79840851 -530.73046875]
[119.47481537 -527.61462402]
[133.96632385 -523.72857666]
[148.23254395 -519.08306885]
[162.23371887 -513.69122314]
[175.93081665 -507.56790161]
[189.28567505 -500.73028564]
[202.26106262 -493.19735718]
[214.82081604 -484.99017334]
[226.92993164 -476.13156128]
[238.55464172 -466.64624023]
[249.66256714 -456.56063843]
[260.22274780 -445.90286255]
[270.20571899 -434.70263672]
[279.58370972 -422.99114990]
[288.33053589 -410.80105591]
[296.42184448 -398.16632080]
[303.83505249 -385.12219238]
[310.54953003 -371.70498657]
[316.54656982 -357.95214844]
[321.80941772 -343.90194702]
[326.32342529 -329.59359741]
[330.07601929 -315.06695557]
[333.05676270 -300.36248779]
[335.25726318 -285.52124023]
[336.67147827 -270.58453369]
[337.29544067 -255.59399414]
[337.12738037 -240.59141541]
[336.16778564 -225.61862183]
[334.41934204 -210.71734619]
[331.88690186 -195.92909241]
[328.57754517 -181.29510498]
[324.50045776 -166.85617065]
[319.66705322 -152.65252686]
[314.09078979 -138.72375488]
[307.78720093 -125.10868835]
[300.77383423 -111.84527588]
[293.07028198 -98.97047424]
[284.69796753 -86.52017212]
[275.68026733 -74.52907562]
[266.04229736 -63.03060532]
[255.81091309 -52.05680847]
[245.01463318 -41.63826752]
[233.68357849 -31.80402184]
[221.84928894 -22.58148575]
[209.54478455 -13.99636078]
[196.80433655 -6.07257652]
[183.66345215 1.16778255]
[170.15878296 7.70453548]
[156.32794189 13.51946354]
[142.20950317 18.59635925]
[127.84278870 22.92107391]
[113.26786804 26.48155022]
[98.52535248 29.26786804]
[100.52936554 44.13339615]
[102.53337860 58.99892426]
[104.53739166 73.86444855]
[106.54140472 88.72998047]
[111.32297516 74.51250458]
[119.21403503 61.75588989]
[129.80062866 51.12932587]
[142.52742004 43.19025803]
[156.72677612 38.35515594]
[171.65383911 36.87765503]
[186.52554321 38.83526611]
[200.56176758 44.12529755]
[213.02619934 52.47024155]
[223.26496887 63.43233871]
[230.74096680 76.43654633]
[235.06204224 90.80068207]
[236.00149536 105.77123260]
[233.51005554 120.56287384]
[227.71841431 134.39967346]
[218.93038940 146.55577087]
[207.60699463 156.39347839]
[194.34220886 163.39674377]
[179.83190918 167.19818115]
[164.83724976 167.59837341]
[150.14482117 164.57632446]
[136.52537537 158.29057312]
[124.69335175 149.07086182]
[115.26943207 137.40081787]
[108.74798584 123.89264679]
[105.47093201 109.25330353]
[101.93125916 123.82968140]
[98.39158630 138.40605164]
[94.85191345 152.98243713]
[91.31224060 167.55880737]
[87.77256775 182.13517761]
[84.23289490 196.71156311]
[98.22915649 202.16940308]
[111.37304688 209.44412231]
[123.43000031 218.40589905]
[134.18484497 228.89479065]
[143.44563293 240.72361755]
[151.04711914 253.68127441]
[156.85362244 267.53652954]
[160.76153564 282.04208374]
[162.70112610 296.93911743]
[162.63774109 311.96176147]
[160.57255554 326.84188843]
[156.54240417 341.31396484]
[150.61920166 355.11975098]
[142.90867615 368.01281738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
