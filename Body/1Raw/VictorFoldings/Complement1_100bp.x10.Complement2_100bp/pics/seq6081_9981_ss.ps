%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[102.13283539 842.20123291]
[87.21835327 840.56555176]
[72.41782379 838.10357666]
[57.77699661 834.82287598]
[43.34111786 830.73358154]
[29.15481186 825.84832764]
[15.26192760 820.18225098]
[1.70540762 813.75280762]
[-11.47284508 806.57989502]
[-24.23209763 798.68572998]
[-36.53291321 790.09460449]
[-48.33726883 780.83319092]
[-59.60867691 770.93005371]
[-70.31230164 760.41577148]
[-80.41504669 749.32293701]
[-89.88570404 737.68579102]
[-98.69498444 725.54028320]
[-106.81567383 712.92395020]
[-114.22265625 699.87579346]
[-120.89304352 686.43621826]
[-126.80621338 672.64666748]
[-131.94389343 658.54980469]
[-136.29020691 644.18927002]
[-139.83171082 629.60931396]
[-142.55747986 614.85510254]
[-144.45904541 599.97216797]
[-145.53057861 585.00659180]
[-145.76872253 570.00457764]
[-145.17279053 555.01251221]
[-143.74458313 540.07672119]
[-141.48852539 525.24340820]
[-138.41159058 510.55844116]
[-134.52330017 496.06710815]
[-129.83567810 481.81430054]
[-124.36318207 467.84399414]
[-118.12275696 454.19943237]
[-111.13368225 440.92279053]
[-103.41755676 428.05505371]
[-94.99822998 415.63604736]
[-85.90173340 403.70413208]
[-76.15618134 392.29617310]
[-65.79169464 381.44747925]
[-54.84031677 371.19155884]
[-43.33588409 361.56008911]
[-31.31396675 352.58288574]
[-18.81171989 344.28765869]
[-5.86778927 336.70004272]
[7.47781658 329.84353638]
[21.18384743 323.73931885]
[35.20793533 318.40621948]
[49.50674057 313.86074829]
[64.03605652 310.11697388]
[78.75097656 307.18646240]
[93.60602570 305.07821655]
[108.55527496 303.79882812]
[108.10866547 288.80548096]
[107.66206360 273.81213379]
[107.21545410 258.81878662]
[106.32263947 243.84538269]
[104.98440552 228.90519714]
[103.64617157 213.96501160]
[102.30793762 199.02482605]
[93.46601868 187.03858948]
[99.94127655 172.60316467]
[98.49185944 157.67335510]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[80.57957458 60.80403900]
[86.95080566 47.34088135]
[77.81979370 34.42054367]
[84.19102478 20.95738411]
[82.63050079 6.03877878]
[81.06998444 -8.87982559]
[79.50946045 -23.79843140]
[64.73606110 -26.99282646]
[51.69100571 -34.58684158]
[41.64550781 -45.82589722]
[35.57397079 -59.60092926]
[34.05948257 -74.55783081]
[37.23784637 -89.23056030]
[44.78548813 -102.18482971]
[55.95238113 -112.15833282]
[69.63652802 -118.18370819]
[60.50550842 -131.10404968]
[66.87674713 -144.56719971]
[65.31622314 -159.48580933]
[63.75569916 -174.40441895]
[48.87219238 -176.93103027]
[35.22277451 -183.38052368]
[23.82031822 -193.27429199]
[15.51096630 -205.87814331]
[10.91132641 -220.25680542]
[10.36272144 -235.34327698]
[13.90586281 -250.01805115]
[21.27782440 -263.19213867]
[31.93155861 -273.88796997]
[45.07648849 -281.31179810]
[59.73717117 -284.91275024]
[74.82569122 -284.42364502]
[89.22237396 -279.88070679]
[101.85888672 -271.62112427]
[111.79753113 -260.25775146]
[118.30078125 -246.63386536]
[120.88605499 -231.76043701]
[119.36151123 -216.74116516]
[113.84027863 -202.69059753]
[104.73207092 -190.65136719]
[92.71277618 -181.51686096]
[78.67430115 -175.96493530]
[80.23482513 -161.04632568]
[81.79534912 -146.12773132]
[90.81474304 -134.27445984]
[84.55513000 -119.74423218]
[99.18995667 -116.68109131]
[112.17904663 -109.23436737]
[122.24407196 -98.12242126]
[128.39001465 -84.42503357]
[130.00350952 -69.47849274]
[126.91400909 -54.74519348]
[119.41178131 -41.67060471]
[108.22061920 -31.54141998]
[94.42806244 -25.35895348]
[95.98858643 -10.44034863]
[97.54911041 4.47825575]
[99.10963440 19.39686012]
[108.12902832 31.25012016]
[101.86940765 45.78035736]
[110.88880920 57.63361740]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[113.41046143 156.11283875]
[117.41567993 164.32234192]
[114.88146210 171.26492310]
[123.81909943 184.31977844]
[117.24812317 197.68658447]
[118.58635712 212.62677002]
[119.92459106 227.56695557]
[121.26282501 242.50714111]
[123.88558197 245.96765137]
[125.14415741 249.70669556]
[125.11849213 253.26124573]
[124.03070831 256.24172974]
[122.20880890 258.37219238]
[122.65541077 273.36553955]
[123.10202026 288.35888672]
[123.54862213 303.35223389]
[138.54751587 303.73956299]
[153.50170898 304.95983887]
[168.36497498 307.00933838]
[183.09136963 309.88168335]
[197.63536072 313.56799316]
[211.95202637 318.05691528]
[225.99708557 323.33453369]
[239.72712708 329.38452148]
[253.09973145 336.18823242]
[266.07354736 343.72460938]
[278.60848999 351.97033691]
[290.66580200 360.89999390]
[302.20822144 370.48590088]
[313.20004272 380.69845581]
[323.60733032 391.50610352]
[333.39791870 402.87542725]
[342.54150391 414.77130127]
[351.00982666 427.15695190]
[358.77676392 439.99407959]
[365.81826782 453.24301147]
[372.11257935 466.86279297]
[377.64025879 480.81134033]
[382.38418579 495.04550171]
[386.32971191 509.52133179]
[389.46466064 524.19409180]
[391.77932739 539.01837158]
[393.26657104 553.94836426]
[393.92178345 568.93792725]
[393.74291992 583.94079590]
[392.73056030 598.91046143]
[390.88781738 613.80078125]
[388.22039795 628.56567383]
[384.73654175 643.15948486]
[380.44705200 657.53717041]
[375.36511230 671.65417480]
[369.50650024 685.46697998]
[362.88928223 698.93286133]
[355.53393555 712.01019287]
[347.46319580 724.65850830]
[338.70196533 736.83874512]
[329.27740479 748.51324463]
[319.21856689 759.64593506]
[308.55657959 770.20239258]
[297.32440186 780.15002441]
[285.55676270 789.45806885]
[273.29000854 798.09771729]
[260.56204224 806.04223633]
[247.41224670 813.26721191]
[233.88125610 819.75018311]
[220.01087952 825.47113037]
[205.84399414 830.41241455]
[191.42439270 834.55877686]
[176.79663086 837.89733887]
[162.00595093 840.41778564]
[147.09805298 842.11236572]
[132.11903381 842.97576904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 154]
[56 153]
[57 152]
[58 151]
[59 146]
[60 145]
[61 144]
[62 143]
[64 141]
[65 139]
[66 138]
[67 137]
[68 136]
[70 134]
[71 133]
[73 131]
[75 129]
[76 128]
[77 127]
[78 126]
[87 117]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
