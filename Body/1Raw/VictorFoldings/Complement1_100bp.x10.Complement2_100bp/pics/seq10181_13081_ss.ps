%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[76.65988159 617.75488281]
[62.43982315 622.55590820]
[47.87187195 626.16619873]
[33.05553818 628.56115723]
[18.09203529 629.72436523]
[3.08358169 629.64794922]
[-11.86729908 628.33239746]
[-26.65847588 625.78668213]
[-41.18890762 622.02825928]
[-55.35933685 617.08270264]
[-69.07295990 610.98382568]
[-82.23610687 603.77331543]
[-94.75884247 595.50048828]
[-106.55564117 586.22174072]
[-117.54590607 576.00048828]
[-127.65455627 564.90655518]
[-136.81256104 553.01580811]
[-144.95733643 540.40936279]
[-152.03324890 527.17340088]
[-157.99197388 513.39831543]
[-162.79280090 499.17819214]
[-166.40292358 484.61019897]
[-168.79769897 469.79382324]
[-169.96075439 454.83032227]
[-169.88415527 439.82186890]
[-168.56842041 424.87100220]
[-166.02253723 410.07986450]
[-162.26390076 395.54946899]
[-157.31817627 381.37908936]
[-151.21916199 367.66555786]
[-144.00851440 354.50250244]
[-135.73548889 341.97985840]
[-126.45659637 330.18316650]
[-116.23523712 319.19302368]
[-105.14121246 309.08450317]
[-93.25032043 299.92663574]
[-80.64379120 291.78201294]
[-67.40773773 284.70626831]
[-53.63257599 278.74771118]
[-39.41240311 273.94705200]
[-24.84436607 270.33709717]
[-10.02797508 267.94250488]
[4.93555546 266.77960205]
[19.94400787 266.85638428]
[34.89485931 268.17230225]
[49.68597412 270.71835327]
[53.44227600 256.19628906]
[57.19857407 241.67424011]
[60.95487595 227.15217590]
[64.71117401 212.63012695]
[59.11766815 195.99642944]
[72.13368988 182.97088623]
[75.67336273 168.39451599]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[98.40866852 41.98229218]
[108.93081665 31.44029427]
[112.47048950 16.86392021]
[98.14032745 12.41464329]
[84.11782074 7.07434511]
[70.45830536 0.86410159]
[57.21569061 -6.19157791]
[44.44223785 -14.06484795]
[32.18836212 -22.72463608]
[20.50241661 -32.13676834]
[9.43052769 -42.26409149]
[-0.98361182 -53.06664658]
[-10.69890118 -64.50179291]
[-19.67699814 -76.52441406]
[-27.88246918 -89.08704376]
[-35.28293228 -102.14011383]
[-41.84918213 -115.63210297]
[-47.55529785 -129.50976562]
[-52.37876892 -143.71835327]
[-56.30055618 -158.20175171]
[-59.30517960 -172.90283203]
[-61.38078308 -187.76356506]
[-62.51917267 -202.72529602]
[-62.71585846 -217.72898865]
[-61.97006226 -232.71542358]
[-60.28473282 -247.62545776]
[-57.66651154 -262.40026855]
[-54.12574005 -276.98147583]
[-49.67638779 -291.31161499]
[-44.33601761 -305.33410645]
[-38.12570190 -318.99359131]
[-31.06995392 -332.23617554]
[-23.19661713 -345.00958252]
[-14.53676510 -357.26339722]
[-5.12457418 -368.94931030]
[5.00281000 -380.02114868]
[15.80541801 -390.43521118]
[27.24061775 -400.15045166]
[39.26327896 -409.12847900]
[51.82595444 -417.33389282]
[64.87905884 -424.73428345]
[78.37108612 -431.30047607]
[92.24878693 -437.00650024]
[106.45738983 -441.82989502]
[120.94081116 -445.75161743]
[135.64190674 -448.75616455]
[150.50265503 -450.83169556]
[165.46438599 -451.97000122]
[180.46809387 -452.16659546]
[195.45451355 -451.42074585]
[210.36454773 -449.73532104]
[225.13932800 -447.11703491]
[239.72053528 -443.57617188]
[254.05064392 -439.12677002]
[268.07308960 -433.78631592]
[281.73254395 -427.57592773]
[294.97509766 -420.52011108]
[307.74847412 -412.64669800]
[320.00225830 -403.98678589]
[331.68811035 -394.57452393]
[342.75988770 -384.44708252]
[353.17391968 -373.64443970]
[362.88906860 -362.20916748]
[371.86703491 -350.18646240]
[380.07238770 -337.62374878]
[387.47271729 -324.57061768]
[394.03881836 -311.07855225]
[399.74478149 -297.20083618]
[404.56811523 -282.99218750]
[408.48974609 -268.50875854]
[411.49423218 -253.80763245]
[413.56967163 -238.94688416]
[414.70791626 -223.98513794]
[414.90441895 -208.98144531]
[414.15847778 -193.99501038]
[412.47299194 -179.08499146]
[409.85461426 -164.31024170]
[406.31369019 -149.72903442]
[401.86419678 -135.39894104]
[396.52368164 -121.37652588]
[390.31323242 -107.71710968]
[383.25732422 -94.47460175]
[375.38388062 -81.70127106]
[366.72387695 -69.44753265]
[357.31158447 -57.76173401]
[347.18408203 -46.69000244]
[336.38134766 -36.27603149]
[324.94604492 -26.56092262]
[312.92330933 -17.58301353]
[300.36053467 -9.37773895]
[287.30734253 -1.97747993]
[273.81524658 4.58855724]
[259.93750000 10.29445934]
[245.72885132 15.11770725]
[231.24537659 19.03926659]
[216.54425049 22.04365921]
[201.68348694 24.11902809]
[186.72174072 25.25718498]
[171.71804810 25.45363617]
[156.73161316 24.70760727]
[141.82160950 23.02204132]
[127.04685974 20.40359116]
[123.50718689 34.97996902]
[128.02261353 49.17363358]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[90.24974060 171.93418884]
[86.71006775 186.51055908]
[92.74188232 197.91143799]
[89.49359131 209.97926331]
[79.23323822 216.38641357]
[75.47693634 230.90847778]
[71.72063446 245.43054199]
[67.96433258 259.95260620]
[64.20803070 274.47467041]
[78.37857819 279.41986084]
[92.09235382 285.51840210]
[105.25566101 292.72857666]
[117.77860260 301.00115967]
[129.57562256 310.27963257]
[140.56613159 320.50061035]
[150.67504883 331.59426880]
[159.83332825 343.48483276]
[167.97839355 356.09106445]
[175.05462646 369.32687378]
[181.01368713 383.10180664]
[185.81484985 397.32180786]
[189.42532349 411.88970947]
[191.82044983 426.70602417]
[192.98387146 441.66952515]
[192.90762329 456.67797852]
[191.59225464 471.62887573]
[189.04672241 486.42007446]
[185.28842163 500.95056152]
[180.34304810 515.12103271]
[174.24435425 528.83471680]
[167.03401184 541.99798584]
[158.76129150 554.52081299]
[149.48268127 566.31768799]
[139.26158142 577.30810547]
[128.16780090 587.41687012]
[116.27712250 596.57501221]
[103.67079163 604.71997070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 182]
[47 181]
[48 180]
[49 179]
[50 178]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[59 168]
[60 167]
[61 166]
[63 164]
[64 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
