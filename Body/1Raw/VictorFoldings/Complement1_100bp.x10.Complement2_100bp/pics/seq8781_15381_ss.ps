%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[55.75656128 868.75714111]
[40.78411484 869.75463867]
[25.77847290 869.74987793]
[10.80665970 868.74291992]
[-4.06445885 866.73815918]
[-18.76846504 863.74456787]
[-33.23968506 859.77551270]
[-47.41348648 854.84881592]
[-61.22656631 848.98638916]
[-74.61722565 842.21441650]
[-87.52567291 834.56317139]
[-99.89423370 826.06683350]
[-111.66768646 816.76336670]
[-122.79344177 806.69427490]
[-133.22180176 795.90447998]
[-142.90620422 784.44232178]
[-151.80337524 772.35888672]
[-159.87359619 759.70812988]
[-167.08081055 746.54663086]
[-173.39283752 732.93316650]
[-178.78149414 718.92840576]
[-183.22268677 704.59509277]
[-186.69660950 689.99707031]
[-189.18771362 675.19970703]
[-190.68490601 660.26892090]
[-191.18148804 645.27148438]
[-190.67523193 630.27441406]
[-189.16841125 615.34460449]
[-186.66775513 600.54876709]
[-183.18441772 585.95306396]
[-178.73397827 571.62255859]
[-173.33630371 557.62133789]
[-167.01548767 544.01190186]
[-159.79977417 530.85504150]
[-151.72140503 518.20953369]
[-142.81643677 506.13183594]
[-133.12464905 494.67590332]
[-122.68932343 483.89288330]
[-111.55708313 473.83096313]
[-99.77762604 464.53506470]
[-87.40358734 456.04669189]
[-74.49021149 448.40377808]
[-61.09518051 441.64047241]
[-47.27832031 435.78695679]
[-33.10134506 430.86938477]
[-18.62756920 426.90969849]
[-3.92163515 423.92559814]
[10.95077419 421.93041992]
[25.92323494 420.93307495]
[40.92887497 420.93801880]
[55.90067673 421.94522095]
[57.90468979 407.07968140]
[59.90870285 392.21414185]
[61.91271591 377.34863281]
[63.91672897 362.48309326]
[56.38625717 346.63195801]
[67.76221466 332.15200806]
[69.54467773 317.25827026]
[71.32714844 302.36456299]
[57.18844604 295.43734741]
[46.25790024 284.06817627]
[39.87033844 269.61889648]
[38.81487274 253.82914734]
[43.23744965 238.60673523]
[52.62099838 225.79730225]
[65.84580994 216.96046448]
[81.32312775 213.17993164]
[82.88365173 198.26133728]
[84.44417572 183.34272766]
[86.00469971 168.42411804]
[87.56522369 153.50550842]
[89.01464081 138.57571411]
[90.35287476 123.63552094]
[91.69110870 108.69533539]
[92.80675507 93.73688507]
[93.69956970 78.76348114]
[94.59238434 63.79007339]
[95.48520660 48.81666565]
[81.13970947 37.72772598]
[76.36428070 20.39928627]
[82.88902283 3.81982136]
[97.92573547 -5.44132137]
[98.37234497 -20.43467140]
[98.81894684 -35.42802048]
[99.26555634 -50.42137146]
[99.71216583 -65.41471863]
[100.15876770 -80.40807343]
[92.83577728 -94.43249512]
[100.94858551 -106.92375183]
[101.39519501 -121.91710663]
[88.85395813 -113.68804932]
[74.55403137 -118.21707916]
[69.03678894 -132.16555786]
[76.36933899 -145.25119019]
[91.14639282 -147.82772827]
[102.47419739 -137.99736023]
[104.03472137 -152.91596985]
[105.59524536 -167.83457947]
[91.55677795 -173.38650513]
[79.53748322 -182.52101135]
[70.42927551 -194.56024170]
[64.90804291 -208.61080933]
[63.38349533 -223.63008118]
[65.96877289 -238.50350952]
[72.47202301 -252.12739563]
[82.41065979 -263.49075317]
[95.04718018 -271.75036621]
[109.44386292 -276.29327393]
[124.53237915 -276.78240967]
[139.19305420 -273.18142700]
[152.33799744 -265.75759888]
[162.99172974 -255.06178284]
[170.36369324 -241.88768005]
[173.90682983 -227.21292114]
[173.35823059 -212.12644958]
[168.75859070 -197.74778748]
[160.44923401 -185.14393616]
[149.04678345 -175.25016785]
[135.39735413 -168.80067444]
[120.51385498 -166.27404785]
[118.95333099 -151.35545349]
[117.39280701 -136.43684387]
[116.38854218 -121.47049713]
[115.94194031 -106.47714996]
[123.29686737 -93.52515411]
[115.15211487 -79.96146393]
[114.70551300 -64.96811676]
[114.25890350 -49.97476578]
[113.81230164 -34.98141479]
[113.36569214 -19.98806572]
[112.91909027 -4.99471521]
[123.51824188 0.92417163]
[130.63720703 10.84653759]
[132.87510681 22.92514610]
[129.74693298 34.87897491]
[121.78694916 44.42398071]
[110.45861053 49.70948029]
[109.56579590 64.68288422]
[108.67298126 79.65629578]
[107.78015900 94.62969971]
[110.28328705 99.23928833]
[110.02556610 104.92320251]
[106.63129425 110.03356934]
[105.29306030 124.97375488]
[103.95482635 139.91394043]
[106.30613708 148.74055481]
[102.48382568 155.06604004]
[100.92330170 169.98464966]
[99.36277771 184.90324402]
[97.80225372 199.82185364]
[96.24172974 214.74046326]
[109.26441956 220.71633911]
[119.78916168 230.40744019]
[126.79592133 242.85650635]
[129.61120605 256.83993530]
[127.97275543 270.98791504]
[122.05392456 283.91876221]
[112.44543457 294.37377930]
[100.09646606 301.33969116]
[86.22086334 304.14703369]
[84.43840027 319.04074097]
[82.65592957 333.93444824]
[89.99978638 344.53778076]
[88.20854950 356.90609741]
[78.78225708 364.48712158]
[76.77824402 379.35263062]
[74.77423096 394.21817017]
[72.77021790 409.08370972]
[70.76620483 423.94921875]
[85.47024536 426.94262695]
[99.94151306 430.91143799]
[114.11537933 435.83798218]
[127.92853546 441.70025635]
[141.31927490 448.47204590]
[154.22781372 456.12310791]
[166.59649658 464.61929321]
[178.37005615 473.92263794]
[189.49594116 483.99160767]
[199.92443848 494.78121948]
[209.60897827 506.24328613]
[218.50630188 518.32659912]
[226.57669067 530.97723389]
[233.78407288 544.13867188]
[240.09626770 557.75207520]
[245.48509216 571.75671387]
[249.92646790 586.09002686]
[253.40057373 600.68798828]
[255.89187622 615.48535156]
[257.38925171 630.41607666]
[257.88601685 645.41351318]
[257.37994385 660.41064453]
[255.87332153 675.34045410]
[253.37284851 690.13629150]
[249.88969421 704.73205566]
[245.43943787 719.06262207]
[240.04193115 733.06390381]
[233.72128296 746.67340088]
[226.50575256 759.83032227]
[218.42752075 772.47595215]
[209.52270508 784.55377197]
[199.83106995 796.00982666]
[189.39588928 806.79296875]
[178.26376343 816.85504150]
[166.48443604 826.15112305]
[154.11048889 834.63958740]
[141.19720459 842.28265381]
[127.80226898 849.04614258]
[113.98548126 854.89984131]
[99.80857086 859.81762695]
[85.33483887 863.77746582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[57 162]
[58 161]
[59 160]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[72 145]
[73 144]
[74 143]
[75 140]
[76 139]
[77 138]
[78 137]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[89 124]
[90 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
