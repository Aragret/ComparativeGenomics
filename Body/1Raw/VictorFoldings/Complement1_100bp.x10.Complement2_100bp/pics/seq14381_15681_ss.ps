%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[44.77269745 582.79388428]
[35.97010422 594.95916748]
[25.86075401 606.06237793]
[14.57178307 615.96380615]
[2.24516416 624.53906250]
[-10.96408367 631.68017578]
[-24.88983917 637.29742432]
[-39.35697174 641.32012939]
[-54.18354416 643.69769287]
[-69.18309021 644.40020752]
[-84.16698456 643.41888428]
[-98.94677734 640.76599121]
[-113.33660889 636.47497559]
[-127.15550232 630.59979248]
[-140.22967529 623.21423340]
[-152.39469910 614.41131592]
[-163.49760437 604.30163574]
[-173.39872742 593.01232910]
[-181.97358704 580.68548584]
[-189.11433411 567.47601318]
[-194.73115540 553.55010986]
[-198.75340271 539.08282471]
[-201.13052368 524.25616455]
[-201.83261108 509.25662231]
[-200.85083008 494.27276611]
[-198.19754028 479.49304199]
[-193.90608215 465.10333252]
[-188.03045654 451.28463745]
[-180.64453125 438.21066284]
[-171.84121704 426.04589844]
[-161.73120117 414.94332886]
[-150.44163513 405.04251099]
[-138.11450195 396.46801758]
[-124.90482330 389.32769775]
[-110.97873688 383.71127319]
[-96.51136017 379.68945312]
[-81.68464661 377.31277466]
[-66.68505859 376.61114502]
[-51.70122528 377.59338379]
[-36.92158890 380.24710083]
[-22.53201675 384.53900146]
[-16.66305542 370.73480225]
[-18.80380249 355.99484253]
[-6.28382063 346.32217407]
[-0.41485974 332.51800537]
[5.35117388 318.67050171]
[11.01395988 304.78048706]
[8.65399456 290.07403564]
[21.02857780 280.21603394]
[26.69136429 266.32598877]
[25.66822815 262.95175171]
[26.22860909 258.91430664]
[28.66641426 254.96330261]
[32.92963791 251.95132446]
[39.20699692 238.32800293]
[45.48435974 224.70469666]
[51.76171875 211.08137512]
[58.03908157 197.45805359]
[56.33814621 182.66088867]
[69.14057159 173.36528015]
[75.41793060 159.74195862]
[80.45484924 145.61293030]
[84.21114349 131.09086609]
[79.90753937 116.83155060]
[90.85414886 105.40866089]
[93.62976074 90.66770172]
[95.41222382 75.77398682]
[97.19469452 60.88026428]
[98.97715759 45.98654938]
[100.75962830 31.09283066]
[102.32014465 16.17422676]
[103.65838623 1.23404133]
[104.99662018 -13.70614338]
[98.52136230 -28.14157295]
[107.36328125 -40.12780380]
[108.59025574 -55.07753754]
[101.90079498 -69.41496277]
[110.56327820 -81.53150940]
[111.67892456 -96.48995972]
[112.79457092 -111.44841766]
[110.31210327 -120.23904419]
[114.03981781 -126.62073517]
[115.37805176 -141.56091309]
[116.71628571 -156.50109863]
[118.05451965 -171.44128418]
[119.39275360 -186.38146973]
[109.62400818 -195.65435791]
[107.01757812 -208.67037964]
[112.30529785 -220.63374329]
[123.35177612 -227.26736450]
[117.09215546 -241.79760742]
[126.11155701 -253.65086365]
[127.67208099 -268.56945801]
[129.23260498 -283.48806763]
[114.88172150 -288.03088379]
[101.73924255 -295.36984253]
[90.34333038 -305.20437622]
[81.16065216 -317.13177490]
[74.56721497 -330.66366577]
[70.83303833 -345.24584961]
[70.11101532 -360.28128052]
[72.43072510 -375.15420532]
[77.69716644 -389.25558472]
[85.69468689 -402.00802612]
[96.09580231 -412.88928223]
[108.47457886 -421.45379639]
[122.32411957 -427.35083008]
[137.07728577 -430.33892822]
[152.12995911 -430.29574585]
[166.86573792 -427.22299194]
[180.68119812 -421.24655151]
[193.01060486 -412.61111450]
[203.34909058 -401.67031860]
[211.27326965 -388.87219238]
[216.45867920 -374.74081421]
[218.69297791 -359.85479736]
[217.88465881 -344.82379150]
[214.06681824 -330.26324463]
[207.39581299 -316.76947021]
[198.14482117 -304.89495850]
[186.69264221 -295.12600708]
[173.50825500 -287.86260986]
[159.13153076 -283.40225220]
[144.15119934 -281.92755127]
[142.59068298 -267.00894165]
[141.03016663 -252.09033203]
[147.40139771 -238.62718201]
[138.27038574 -225.70684814]
[149.40922546 -213.10664368]
[147.96003723 -196.01234436]
[134.33293152 -185.04324341]
[132.99470520 -170.10305786]
[131.65646362 -155.16287231]
[130.31823730 -140.22268677]
[128.97999573 -125.28250122]
[127.75302887 -110.33276367]
[126.63737488 -95.37431335]
[125.52172852 -80.41586304]
[132.29098511 -67.14836884]
[123.54870605 -53.96189117]
[126.18601227 -47.05780411]
[122.30346680 -38.78956985]
[128.87443542 -25.42276382]
[119.93679810 -12.36790943]
[118.59856415 2.57227540]
[117.26033020 17.51246071]
[119.58086395 21.68668938]
[119.30380249 27.36297798]
[115.65334320 32.87529755]
[113.87088013 47.76901245]
[112.08840942 62.66273117]
[110.30594635 77.55644989]
[108.52347565 92.45016479]
[119.17082214 81.88446045]
[133.81758118 78.64836884]
[147.92530823 83.74463654]
[157.12257385 95.59412384]
[158.55949402 110.52513885]
[151.79083252 123.91114807]
[138.91394043 131.60433960]
[123.91883087 131.22091675]
[111.45193481 122.87966156]
[105.37621307 109.16496277]
[109.41114044 124.46299744]
[98.73320770 134.84716797]
[94.97690582 149.36923218]
[106.00382233 139.20030212]
[120.32536316 134.74009705]
[135.17625427 136.84979248]
[147.68904114 145.12205505]
[155.44767761 157.95964050]
[156.95410156 172.88380432]
[151.91744995 187.01292419]
[141.31022644 197.61889648]
[127.18049622 202.65386963]
[112.25651550 201.14567566]
[99.41985321 193.38549805]
[91.14907837 180.87173462]
[89.04124451 166.01931763]
[82.76388550 179.64263916]
[84.01582336 195.41423035]
[71.66239929 203.73542786]
[65.38503265 217.35873413]
[59.10767365 230.98205566]
[52.83031464 244.60536194]
[46.55295181 258.22869873]
[40.58139038 271.98880005]
[34.91860580 285.87881470]
[36.87353134 301.57876587]
[24.90398788 310.44326782]
[19.24120140 324.33331299]
[18.89930344 333.46133423]
[13.38931751 338.38696289]
[7.52035618 352.19113159]
[9.24131584 367.91845703]
[-2.85887909 376.60379028]
[-8.72783947 390.40795898]
[4.34677410 397.79269409]
[16.51232910 406.59494019]
[27.61583138 416.70394897]
[37.51764297 427.99261475]
[46.09323502 440.31900024]
[53.23476410 453.52801514]
[58.85241699 467.45361328]
[62.87554169 481.92062378]
[65.25354767 496.74713135]
[65.95652771 511.74664307]
[64.97564697 526.73059082]
[62.32323074 541.51043701]
[58.03264236 555.90039062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 197]
[42 196]
[44 194]
[45 193]
[46 191]
[47 190]
[49 188]
[50 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[60 180]
[61 179]
[62 166]
[63 165]
[65 163]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 146]
[72 145]
[73 144]
[75 142]
[76 140]
[78 138]
[79 137]
[80 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[90 128]
[92 126]
[93 125]
[94 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
