%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[61.02320099 566.50299072]
[47.90467453 573.78601074]
[34.37033844 580.26367188]
[20.46958733 585.91229248]
[6.25313759 590.71130371]
[-8.22713375 594.64324951]
[-22.91839027 597.69366455]
[-37.76702499 599.85150146]
[-52.71885300 601.10882568]
[-67.71932220 601.46112061]
[-82.71369171 600.90704346]
[-97.64725494 599.44866943]
[-112.46551514 597.09124756]
[-127.11440277 593.84344482]
[-141.54046631 589.71710205]
[-155.69105530 584.72723389]
[-169.51455688 578.89208984]
[-182.96052551 572.23297119]
[-195.97987366 564.77410889]
[-208.52513123 556.54278564]
[-220.55049133 547.56896973]
[-232.01210022 537.88549805]
[-242.86810303 527.52764893]
[-253.07891846 516.53320312]
[-262.60726929 504.94232178]
[-271.41839600 492.79727173]
[-279.48016357 480.14239502]
[-286.76312256 467.02383423]
[-293.24069214 453.48947144]
[-298.88928223 439.58868408]
[-303.68826294 425.37219238]
[-307.62008667 410.89190674]
[-310.67044067 396.20065308]
[-312.82821655 381.35198975]
[-314.08551025 366.40017700]
[-314.43771362 351.39968872]
[-313.88357544 336.40533447]
[-312.42510986 321.47177124]
[-310.06765747 306.65353394]
[-306.81976318 292.00466919]
[-302.69332886 277.57861328]
[-297.70339966 263.42803955]
[-291.86819458 249.60456848]
[-285.20898438 236.15863037]
[-277.75006104 223.13931274]
[-269.51867676 210.59410095]
[-260.54483032 198.56877136]
[-250.86129761 187.10722351]
[-240.50340271 176.25125122]
[-229.50892639 166.04049683]
[-217.91799927 156.51219177]
[-205.77290344 147.70112610]
[-193.11798096 139.63943481]
[-179.99937439 132.35653687]
[-166.46498108 125.87900543]
[-152.56417847 120.23048401]
[-138.34768677 115.43158722]
[-123.86737823 111.49981689]
[-109.17609406 108.44951630]
[-94.32743835 106.29182434]
[-79.37560272 105.03461456]
[-64.37512970 104.68246460]
[-49.38076401 105.23667145]
[-34.44721603 106.69520569]
[-19.62897873 109.05274200]
[-4.98012161 112.30068207]
[9.44590282 116.42718506]
[23.59645462 121.41717529]
[37.41989899 127.25245667]
[50.86579895 133.91172791]
[63.88508987 141.37069702]
[72.11389923 128.82929993]
[80.34270477 116.28790283]
[88.57151031 103.74649811]
[96.61268616 91.08397675]
[104.46443939 78.30313110]
[112.31620026 65.52229309]
[120.16795349 52.74144745]
[128.01971436 39.96060562]
[115.80599976 31.24246025]
[104.22287750 21.70244789]
[93.32552338 11.38603020]
[83.16588593 0.34236994]
[73.79237366 -11.37590408]
[65.24966431 -23.71294785]
[57.57844925 -36.60997009]
[50.81530380 -50.00551224]
[44.99244690 -63.83573532]
[40.13763428 -78.03472900]
[36.27399826 -92.53482819]
[33.41994858 -107.26694489]
[31.58909225 -122.16085052]
[30.79014969 -137.14559937]
[31.02692986 -152.14974976]
[32.29830551 -167.10180664]
[34.59821320 -181.93054199]
[37.91569901 -196.56524658]
[42.23494720 -210.93621826]
[47.53538132 -224.97496033]
[53.79173660 -238.61456299]
[60.97420120 -251.79002380]
[69.04854584 -264.43856812]
[77.97629547 -276.49990845]
[87.71489716 -287.91656494]
[98.21794891 -298.63415527]
[109.43539429 -308.60159302]
[121.31378174 -317.77136230]
[133.79649353 -326.09976196]
[146.82406616 -333.54711914]
[160.33438110 -340.07794189]
[174.26309204 -345.66113281]
[188.54380798 -350.27001953]
[203.10845947 -353.88272095]
[217.88764954 -356.48193359]
[232.81095886 -358.05535889]
[247.80726624 -358.59542847]
[262.80508423 -358.09957886]
[277.73297119 -356.57022095]
[292.51977539 -354.01458740]
[307.09503174 -350.44488525]
[321.38925171 -345.87814331]
[335.33438110 -340.33609009]
[348.86392212 -333.84512329]
[361.91339111 -326.43621826]
[374.42062378 -318.14468384]
[386.32601929 -309.00997925]
[397.57281494 -299.07571411]
[408.10742188 -288.38916016]
[417.87966919 -277.00125122]
[426.84295654 -264.96630859]
[434.95458984 -252.34164429]
[442.17587280 -239.18742371]
[448.47244263 -225.56632996]
[453.81427002 -211.54328918]
[458.17590332 -197.18513489]
[461.53652954 -182.56025696]
[463.88018799 -167.73838806]
[465.19564819 -152.79013062]
[465.47668457 -137.78674316]
[464.72195435 -122.79972076]
[462.93505859 -107.90046692]
[460.12448120 -93.16000366]
[456.30361938 -78.64856720]
[451.49072266 -64.43531036]
[445.70867920 -50.58797455]
[438.98507690 -37.17253876]
[431.35195923 -24.25294304]
[422.84567261 -11.89075184]
[413.50677490 -0.14487708]
[403.37976074 10.92870522]
[392.51287842 21.27722549]
[380.95794678 30.85136604]
[368.77001953 39.60550308]
[356.00717163 47.49791718]
[342.73022461 54.49099731]
[329.00244141 60.55141830]
[314.88925171 65.65029907]
[300.45791626 69.76334381]
[285.77719116 72.87094879]
[270.91705322 74.95830536]
[255.94831848 76.01546478]
[240.94230652 76.03739166]
[225.97055054 75.02397919]
[211.10437012 72.98005676]
[196.41464233 69.91536713]
[181.97134399 65.84451294]
[167.84330750 60.78689194]
[154.09788513 54.76661301]
[140.80055237 47.81235886]
[132.94879150 60.59320450]
[125.09703827 73.37404633]
[117.24528503 86.15489197]
[109.39353180 98.93572998]
[109.42570496 104.18100739]
[106.51675415 109.07093048]
[101.11291504 111.97531128]
[92.88410187 124.51670837]
[84.65529633 137.05810547]
[76.42649078 149.59950256]
[88.45193481 158.57318115]
[99.91362762 168.25656128]
[110.76973724 178.61430359]
[120.98065186 189.60864258]
[130.50910950 201.19944763]
[139.32035828 213.34440613]
[147.38221741 225.99922180]
[154.66529846 239.11772156]
[161.14302063 252.65202332]
[166.79173279 266.55276489]
[171.59082031 280.76916504]
[175.52279663 295.24942017]
[178.57330322 309.94067383]
[180.73120117 324.78930664]
[181.98861694 339.74111938]
[182.34097290 354.74157715]
[181.78697205 369.73596191]
[180.32865906 384.66952515]
[177.97131348 399.48779297]
[174.72358704 414.13668823]
[170.59729004 428.56277466]
[165.60748291 442.71340942]
[159.77239990 456.53692627]
[153.11331177 469.98291016]
[145.65452576 483.00231934]
[137.42324829 495.54760742]
[128.44952393 507.57299805]
[118.76609039 519.03466797]
[108.40828705 529.89068604]
[97.41390228 540.10156250]
[85.82306671 549.63000488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 179]
[72 178]
[73 177]
[74 176]
[75 173]
[76 172]
[77 171]
[78 170]
[79 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
