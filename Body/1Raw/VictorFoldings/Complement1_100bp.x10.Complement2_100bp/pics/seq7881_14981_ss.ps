%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[192.41677856 460.82580566]
[199.72439575 447.68624878]
[209.09518433 435.92877197]
[220.27348328 425.87414551]
[232.95434570 417.79666138]
[227.08538818 403.99249268]
[221.21641541 390.18829346]
[215.34745789 376.38412476]
[209.27362061 362.66885376]
[202.99626160 349.04553223]
[196.71890259 335.42224121]
[181.86445618 326.07812500]
[183.70530701 307.75619507]
[177.22579956 294.22784424]
[170.74630737 280.69949341]
[164.16627502 267.21975708]
[157.48608398 253.78938293]
[150.80589294 240.35900879]
[139.44172668 236.21383667]
[133.76643372 225.07943726]
[137.30838013 212.67712402]
[130.82888794 199.14878845]
[124.34938812 185.62043762]
[116.97895813 198.68476868]
[102.19449615 201.21849060]
[90.89456177 191.35382080]
[91.40904236 176.36265564]
[103.35868073 167.29589844]
[117.93337250 170.83619690]
[112.47801208 156.86340332]
[107.02265930 142.89059448]
[103.95761108 141.14767456]
[101.58448029 137.83355713]
[100.63255310 133.28964233]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[78.38047028 62.80841446]
[71.70027924 49.37803650]
[65.02008057 35.94766235]
[51.94656754 27.03734016]
[53.20618057 12.19609165]
[46.52598572 -1.23428440]
[39.84579086 -14.66466045]
[33.16559601 -28.09503555]
[33.20595169 -13.09509087]
[30.26684952 1.61414719]
[24.46535492 15.44681358]
[16.03254128 27.85195923]
[5.30428123 38.33549118]
[-7.29211998 46.47985840]
[-21.25495338 51.96066666]
[-36.02808762 54.55962372]
[-51.02310944 54.17321014]
[-65.64277649 50.81681824]
[-79.30478668 44.62413025]
[-91.46499634 35.84180450]
[-101.63906860 24.81962967]
[-109.42176819 11.99661922]
[-114.50311279 -2.11649179]
[-116.68071747 -16.95758438]
[-115.86785126 -31.93554306]
[-112.09689331 -46.45380020]
[-105.51802826 -59.93410492]
[-96.39329529 -71.83953094]
[-85.08612823 -81.69589996]
[-72.04689026 -89.11063385]
[-57.79492950 -93.78840637]
[-42.89788818 -95.54290009]
[-27.94911957 -94.30424500]
[-13.54402256 -90.12175751]
[-0.25634634 -83.16204071]
[11.38466549 -73.70229340]
[20.91535568 -62.11928940]
[27.95453644 -48.87824631]
[27.50793076 -63.87159729]
[27.06132507 -78.86494446]
[26.61471939 -93.85829926]
[26.16811180 -108.85164642]
[25.72150612 -123.84499359]
[16.88599396 -133.24162292]
[16.82268333 -145.73880005]
[25.02010727 -154.63424683]
[17.07820129 -168.31768799]
[24.62515450 -181.15875244]
[21.36832428 -189.69284058]
[24.51182365 -196.38165283]
[24.51182365 -211.38165283]
[24.51182365 -226.38165283]
[11.31731415 -234.11807251]
[3.81627107 -247.33288574]
[3.93610620 -262.42764282]
[11.54450226 -275.34927368]
[24.51182365 -282.67825317]
[24.51182365 -297.67825317]
[24.51182365 -312.67825317]
[24.51182365 -327.67825317]
[10.73795605 -334.25424194]
[1.18802905 -346.16061401]
[-2.24181056 -361.03335571]
[1.12943399 -375.91949463]
[10.63239956 -387.86340332]
[24.38026619 -394.49356079]
[39.64338303 -394.49356079]
[53.39125061 -387.86340332]
[62.89421463 -375.91949463]
[66.26545715 -361.03335571]
[62.83562088 -346.16061401]
[53.28569412 -334.25424194]
[39.51182556 -327.67825317]
[39.51182556 -312.67825317]
[39.51182556 -297.67825317]
[39.51182556 -282.67825317]
[52.47914505 -275.34927368]
[60.08754349 -262.42764282]
[60.20737839 -247.33288574]
[52.70633316 -234.11807251]
[39.51182556 -226.38165283]
[39.51182556 -211.38165283]
[39.51182556 -196.38165283]
[39.62348938 -181.38208008]
[47.54942322 -168.77140808]
[40.01844406 -154.85757446]
[49.81698227 -140.29887390]
[40.71485519 -124.29160309]
[41.16146088 -109.29824829]
[41.60806656 -94.30490112]
[42.05467606 -79.31155396]
[42.50128174 -64.31819916]
[42.94788742 -49.32485199]
[46.59597397 -34.77523041]
[53.27616882 -21.34485435]
[59.95636368 -7.91447926]
[66.63655853 5.51589680]
[79.23226166 13.46558857]
[78.45045471 29.26746750]
[85.13065338 42.69784164]
[91.81084442 56.12821960]
[94.91680145 41.45330811]
[105.38758850 30.71260643]
[119.97871399 27.23423958]
[134.16896057 32.09601593]
[143.56132507 43.79146194]
[145.24548340 58.69661713]
[138.69958496 72.19295502]
[125.95193481 80.09848785]
[110.95254517 79.96360779]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.99545288 137.43524170]
[126.45081329 151.40803528]
[131.90617371 165.38084412]
[137.87773132 179.14094543]
[144.35722351 192.66928101]
[150.83673096 206.19763184]
[166.26651001 216.24766541]
[164.23626709 233.67881775]
[170.91645813 247.10919189]
[177.59666443 260.53958130]
[184.22039795 266.82955933]
[184.27465820 274.22000122]
[190.75415039 287.74835205]
[197.23364258 301.27670288]
[209.11730957 306.29080200]
[214.23558044 317.69198608]
[210.34222412 329.14486694]
[216.61958313 342.76818848]
[222.89694214 356.39151001]
[228.06600952 360.51367188]
[230.07566833 365.82952881]
[229.15164185 370.51516724]
[235.02059937 384.31933594]
[240.88955688 398.12350464]
[246.75851440 411.92770386]
[261.37374878 408.40002441]
[276.37033081 407.32617188]
[291.33908081 408.73550415]
[305.87167358 412.58950806]
[319.57165527 418.78311157]
[332.06527710 427.14727783]
[343.01168823 437.45388794]
[352.11227417 449.42172241]
[359.11874390 462.72430420]
[363.83999634 476.99874878]
[366.14721680 491.85562134]
[365.97744751 506.88961792]
[363.33532715 521.69061279]
[358.29293823 535.85479736]
[350.98785400 548.99578857]
[341.61932373 560.75506592]
[330.44296265 570.81182861]
[317.76367188 578.89172363]
[303.92733765 584.77441406]
[289.31140137 588.29925537]
[274.31463623 589.37017822]
[259.34616089 587.95800781]
[244.81430054 584.10119629]
[231.11552429 577.90496826]
[218.62351990 569.53839111]
[207.67909241 559.22967529]
[198.58081055 547.26007080]
[191.57687378 533.95611572]
[186.85838318 519.68078613]
[184.55403137 504.82345581]
[184.72668457 489.78948975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[8 176]
[9 173]
[10 172]
[11 171]
[13 168]
[14 167]
[15 166]
[16 164]
[17 163]
[18 162]
[21 160]
[22 159]
[23 158]
[29 157]
[30 156]
[31 155]
[35 154]
[36 153]
[38 151]
[39 150]
[40 140]
[41 139]
[42 138]
[44 136]
[45 135]
[46 134]
[47 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[85 125]
[87 123]
[89 122]
[90 121]
[91 120]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
