%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[8.32940197 684.16326904]
[2.08666039 698.36920166]
[-11.33078957 706.16351318]
[-26.76366425 704.54925537]
[-38.27770615 694.14697266]
[-41.44553375 678.95672607]
[-35.04905319 664.81939697]
[-21.54784012 657.17102051]
[-19.98731804 642.25244141]
[-18.42679405 627.33386230]
[-26.42587852 611.71392822]
[-15.48608398 596.90167236]
[-14.14785004 581.96148682]
[-12.80961609 567.02130127]
[-11.47138214 552.08111572]
[-10.13314724 537.14093018]
[-8.79491329 522.20074463]
[-7.45667934 507.26058960]
[-9.77721024 503.08633423]
[-9.50015163 497.41006470]
[-5.84968853 491.89773560]
[-4.06722260 477.00402832]
[-10.23730469 463.44750977]
[-0.91493833 450.66455078]
[0.86752760 435.77081299]
[2.64999342 420.87710571]
[4.43245935 405.98339844]
[6.21492529 391.08966064]
[-5.52246380 400.42956543]
[-20.52013779 400.16543579]
[-31.92136192 390.41802979]
[-34.51365280 375.64370728]
[-27.11184502 362.59713745]
[-13.09994888 357.24298096]
[1.11598611 362.02914429]
[9.03701496 374.76922607]
[12.35927391 360.14175415]
[15.68153381 345.51431274]
[1.79161847 351.17736816]
[-11.37010860 343.98229980]
[-14.10131168 329.23303223]
[-4.38864994 317.80218506]
[10.60806370 318.11614990]
[19.83345222 329.94186401]
[24.23445129 315.60202026]
[28.63544846 301.26217651]
[33.03644562 286.92233276]
[29.37384605 272.48507690]
[40.81959534 261.56234741]
[45.22059250 247.22251892]
[49.62158966 232.88265991]
[54.02259064 218.54281616]
[48.63401413 207.71278381]
[52.18319702 195.72999573]
[63.29043579 189.17315674]
[67.90444946 174.90043640]
[72.51845551 160.62770081]
[60.46252823 153.55130005]
[50.15034485 144.11308289]
[42.03670883 132.72933960]
[36.47946167 119.90210724]
[33.72369385 106.19712067]
[33.89095306 92.21882629]
[36.97385406 78.58370209]
[42.83643341 65.89311218]
[51.22013092 54.70676422]
[61.75519562 45.51800537]
[73.97698975 38.73209763]
[87.34649658 34.64832306]
[101.27406311 33.44679260]
[115.14544678 35.18049240]
[120.18235779 21.05146408]
[125.21927643 6.92243433]
[122.56526184 -8.67457676]
[134.12704468 -18.06470108]
[137.34031677 -32.71648788]
[138.67855835 -47.65667343]
[140.01678467 -62.59685898]
[141.35502625 -77.53704071]
[142.35928345 -92.50338745]
[143.02906799 -107.48842621]
[143.69885254 -122.47346497]
[144.36863708 -137.45851135]
[144.92684937 -152.44812012]
[137.60386658 -166.47253418]
[145.71667480 -178.96379089]
[146.16326904 -193.95715332]
[146.60987854 -208.95050049]
[147.05648804 -223.94384766]
[147.50309753 -238.93719482]
[147.94969177 -253.93054199]
[148.39630127 -268.92388916]
[148.73127747 -283.92016602]
[148.95460510 -298.91848755]
[139.61517334 -314.78848267]
[149.19586182 -329.49145508]
[141.45855713 -343.29162598]
[149.19586182 -356.01889038]
[149.19586182 -371.01889038]
[135.42199707 -377.59484863]
[125.87206268 -389.50122070]
[122.44222260 -404.37399292]
[125.81346893 -419.26013184]
[135.31643677 -431.20401001]
[149.06430054 -437.83416748]
[164.32742310 -437.83416748]
[178.07528687 -431.20401001]
[187.57824707 -419.26013184]
[190.94949341 -404.37399292]
[187.51965332 -389.50122070]
[177.96972656 -377.59484863]
[164.19586182 -371.01889038]
[164.19586182 -356.01889038]
[171.93316650 -343.29162598]
[164.19586182 -329.49145508]
[172.52481079 -320.71905518]
[172.64758301 -308.22229004]
[163.95294189 -298.69515991]
[163.72961426 -283.69683838]
[166.77317810 -276.96194458]
[163.38964844 -268.47729492]
[162.94305420 -253.48394775]
[162.49644470 -238.49058533]
[162.04983521 -223.49723816]
[161.60322571 -208.50389099]
[161.15661621 -193.51054382]
[160.71002197 -178.51719666]
[168.06495667 -165.56520081]
[159.92019653 -152.00151062]
[162.86315918 -145.22207642]
[159.35366821 -136.78872681]
[158.68388367 -121.80368042]
[158.01409912 -106.81864166]
[157.34431458 -91.83360291]
[159.44110107 -88.99884796]
[160.26901245 -85.00765228]
[159.29948425 -80.46746826]
[156.29521179 -76.19880676]
[154.95697021 -61.25862503]
[153.61874390 -46.31843948]
[152.28050232 -31.37825394]
[160.54978943 -43.89299774]
[172.39427185 -53.09671783]
[186.56394958 -58.01812363]
[201.56346130 -58.13784790]
[215.80990601 -53.44325638]
[227.79977417 -44.42978287]
[236.26779175 -32.04863358]
[240.32028198 -17.60642815]
[239.52958679 -2.62728286]
[233.97914124 11.30801582]
[224.25469971 22.72884369]
[211.38250732 30.42993355]
[196.72100830 33.59856796]
[181.81744385 31.90035820]
[168.24464417 25.51451683]
[157.43495178 15.11495876]
[150.52917480 1.79917276]
[148.25607300 -13.02778530]
[151.27035522 1.55862355]
[139.34831238 11.95935059]
[134.31138611 26.08838081]
[129.27447510 40.21741104]
[142.67140198 48.91082382]
[153.61209106 60.54501724]
[161.46678162 74.45030212]
[165.78334045 89.82627869]
[166.31329346 105.78786469]
[163.02613831 121.41629791]
[156.11109924 135.81196594]
[145.96620178 148.14624023]
[133.17541504 157.70913696]
[118.47499847 163.95019531]
[102.71112061 166.51016235]
[86.79119110 165.24169922]
[82.17717743 179.51443481]
[77.56317139 193.78717041]
[81.83532715 211.69889832]
[68.36243439 222.94381714]
[63.96143723 237.28366089]
[59.56044006 251.62351990]
[55.15944290 265.96334839]
[58.50725555 281.42630005]
[47.37629318 291.32333374]
[42.97529602 305.66317749]
[38.57429886 320.00302124]
[34.17329788 334.34286499]
[30.30899429 348.83654785]
[26.98673439 363.46401978]
[23.66447449 378.09149170]
[21.10864258 392.87213135]
[19.32617760 407.76583862]
[17.54371071 422.65957642]
[15.76124477 437.55328369]
[13.97877884 452.44699097]
[20.02136803 467.06881714]
[10.82649422 478.78649902]
[9.04402924 493.68020630]
[7.48350573 508.59881592]
[6.14527178 523.53900146]
[4.80703735 538.47918701]
[3.46880317 553.41937256]
[2.13056898 568.35955811]
[0.79233491 583.29974365]
[-0.54589927 598.23992920]
[7.11039972 608.61987305]
[5.68820715 621.03607178]
[-3.50818944 628.89434814]
[-5.06871223 643.81298828]
[-6.62923527 658.73156738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[21 198]
[22 197]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[36 190]
[37 189]
[38 188]
[44 187]
[45 186]
[46 185]
[47 184]
[49 182]
[50 181]
[51 180]
[52 179]
[55 177]
[56 176]
[57 175]
[71 163]
[72 162]
[73 161]
[75 159]
[76 141]
[77 140]
[78 139]
[79 138]
[80 134]
[81 133]
[82 132]
[83 131]
[84 129]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 119]
[94 118]
[96 115]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
