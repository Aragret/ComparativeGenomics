%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[29.51263046 214.08450317]
[35.60158539 227.80882263]
[40.19721222 242.10260010]
[43.24744415 256.80389404]
[44.71771622 271.74612427]
[44.59137344 286.76000977]
[42.86984253 301.67538452]
[39.57263184 316.32327271]
[34.73710251 330.53768921]
[28.41804123 344.15759277]
[20.68705177 357.02862549]
[11.63173103 369.00500488]
[1.35468149 379.95095825]
[-10.02764893 389.74252319]
[-22.38628960 398.26873779]
[-35.58121109 405.43295288]
[-49.46289825 411.15405273]
[-63.87406540 415.36715698]
[-78.65142059 418.02456665]
[-93.62752533 419.09616089]
[-108.63269806 418.56979370]
[-123.49690247 416.45144653]
[-138.05172729 412.76507568]
[-152.13224792 407.55249023]
[-165.57893372 400.87277222]
[-178.23941040 392.80154419]
[-189.97021484 383.43032837]
[-200.63845825 372.86523438]
[-210.12324524 361.22604370]
[-218.31710815 348.64459229]
[-225.12719727 335.26345825]
[-230.47634888 321.23425293]
[-234.30395508 306.71594238]
[-236.56666565 291.87301636]
[-237.23881531 276.87368774]
[-236.31280518 261.88787842]
[-233.79911804 247.08538818]
[-229.72622681 232.63395691]
[-224.14030457 218.69732666]
[-217.10462952 205.43341064]
[-208.69892883 192.99250793]
[-199.01843262 181.51556396]
[-188.17285156 171.13262939]
[-176.28504944 161.96136475]
[-163.48973083 154.10566711]
[-149.93188477 147.65455627]
[-135.76512146 142.68112183]
[-121.14996338 139.24172974]
[-106.25202179 137.37535095]
[-91.24009705 137.10311890]
[-76.28427887 138.42811584]
[-61.55403137 141.33535767]
[-47.21626282 145.79187012]
[-33.43343353 151.74716187]
[-20.36170387 159.13377380]
[-8.14919567 167.86801147]
[3.06571937 177.85087585]
[14.17295265 167.76974487]
[25.28018761 157.68859863]
[36.38742065 147.60746765]
[47.49465561 137.52632141]
[51.71892166 123.24330139]
[67.13775635 119.69786835]
[78.24498749 109.61672974]
[89.35222626 99.53559113]
[99.51576996 88.50371552]
[108.65457153 76.60908508]
[117.79337311 64.71444702]
[126.93217468 52.81981659]
[136.07098389 40.92518234]
[145.20977783 29.03055000]
[145.89257812 23.85552597]
[148.25581360 19.85948181]
[151.56903076 17.48509407]
[155.03186035 16.82096100]
[164.69267273 5.34626150]
[174.35348511 -6.12843847]
[168.82287598 -17.79856873]
[168.11933899 -30.64691925]
[172.31210327 -42.76284790]
[180.74490356 -52.35799789]
[192.13847351 -58.03027344]
[204.78442383 -58.96863937]
[216.80152893 -55.06893921]
[226.79969788 -66.25091553]
[236.79786682 -77.43288422]
[246.79603577 -88.61486053]
[256.79421997 -99.79683685]
[246.37619019 -110.59832001]
[236.78433228 -122.13970947]
[228.07104492 -134.35795593]
[220.28390503 -147.18635559]
[213.46543884 -160.55480957]
[207.65289307 -174.39033508]
[202.87802124 -188.61734009]
[199.16690063 -203.15814209]
[196.53977966 -217.93330383]
[195.01103210 -232.86213684]
[194.58898926 -247.86311340]
[195.27597046 -262.85427856]
[197.06820679 -277.75378418]
[199.95593262 -292.48022461]
[203.92337036 -306.95318604]
[208.94882202 -321.09362793]
[215.00488281 -334.82431030]
[222.05844116 -348.07022095]
[230.07099915 -360.75906372]
[238.99877930 -372.82147217]
[248.79302979 -384.19161987]
[259.40023804 -394.80737305]
[270.76248169 -404.61074829]
[282.81771851 -413.54824829]
[295.50009155 -421.57098389]
[308.74032593 -428.63522339]
[322.46612549 -434.70233154]
[336.60250854 -439.73916626]
[351.07229614 -443.71823120]
[365.79641724 -446.61779785]
[380.69445801 -448.42202759]
[395.68508911 -449.12106323]
[410.68637085 -448.71112061]
[425.61645508 -447.19436646]
[440.39370728 -444.57913208]
[454.93750000 -440.87973022]
[469.16833496 -436.11630249]
[483.00854492 -430.31488037]
[496.38247681 -423.50717163]
[509.21713257 -415.73037720]
[521.44238281 -407.02691650]
[532.99151611 -397.44433594]
[543.80133057 -387.03503418]
[553.81292725 -375.85577393]
[562.97155762 -363.96768188]
[571.22723389 -351.43566895]
[578.53479004 -338.32815552]
[584.85437012 -324.71676636]
[590.15142822 -310.67581177]
[594.39709473 -296.28201294]
[597.56817627 -281.61395264]
[599.64727783 -266.75177002]
[600.62304688 -251.77662659]
[600.49023438 -236.77030945]
[599.24951172 -221.81478882]
[596.90771484 -206.99172974]
[593.47753906 -192.38209534]
[588.97778320 -178.06570435]
[583.43298340 -164.12071228]
[576.87347412 -150.62330627]
[569.33502197 -137.64720154]
[560.85888672 -125.26326752]
[551.49127197 -113.53913879]
[541.28338623 -102.53885651]
[530.29095459 -92.32249451]
[518.57403564 -82.94585419]
[506.19665527 -74.46015167]
[493.22634888 -66.91172028]
[479.73400879 -60.34180450]
[465.79330444 -54.78627777]
[451.48037720 -50.27548218]
[436.87338257 -46.83406067]
[422.05215454 -44.48080063]
[407.09759521 -43.22856140]
[392.09136963 -43.08418274]
[377.11547852 -44.04844666]
[362.25167847 -46.11609650]
[347.58120728 -49.27582932]
[333.18414307 -53.51039124]
[319.13909912 -58.79665756]
[305.52285767 -65.10575867]
[292.40972900 -72.40322113]
[279.87133789 -80.64920044]
[267.97619629 -89.79866028]
[257.97802734 -78.61669159]
[247.97984314 -67.43471527]
[237.98167419 -56.25273895]
[227.98348999 -45.07076645]
[233.95108032 -28.92065048]
[230.90135193 -11.88502884]
[219.58566284 1.32706070]
[203.05287170 7.01714611]
[185.82818604 3.53237176]
[176.16737366 15.00707150]
[166.50656128 26.48177147]
[157.10441589 38.16935349]
[147.96560669 50.06398773]
[138.82681274 61.95861816]
[129.68800354 73.85324860]
[120.54920197 85.74788666]
[111.41040039 97.64251709]
[125.53697205 92.59870911]
[140.46189880 94.09757996]
[153.30340576 101.84971619]
[161.58201599 114.35829926]
[163.69923401 129.20812988]
[159.24627686 143.53192139]
[149.08293152 154.56399536]
[135.17160034 160.17420959]
[120.19831085 159.27932739]
[107.05419159 152.05215454]
[98.27716827 139.88810730]
[95.56193542 125.13591003]
[99.43336487 110.64282990]
[88.32612610 120.72396851]
[77.21889496 130.80509949]
[72.20016479 145.80920410]
[57.57579422 148.63356018]
[46.46855927 158.71470642]
[35.36132431 168.79583740]
[24.25409126 178.87698364]
[13.14685822 188.95811462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 210]
[58 209]
[59 208]
[60 207]
[61 206]
[63 204]
[64 203]
[65 202]
[66 189]
[67 188]
[68 187]
[69 186]
[70 185]
[71 184]
[75 183]
[76 182]
[77 181]
[84 176]
[85 175]
[86 174]
[87 173]
[88 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
