%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[35.11773300 461.04397583]
[29.88864708 475.11392212]
[23.41938019 488.65847778]
[15.76202106 501.56857300]
[6.97822380 513.74029541]
[-2.86128783 525.07568359]
[-13.67729092 535.48339844]
[-25.38269997 544.87963867]
[-37.88326645 553.18878174]
[-51.07834625 560.34393311]
[-64.86168671 566.28747559]
[-79.12232971 570.97155762]
[-93.74542999 574.35839844]
[-108.61327362 576.42083740]
[-123.60613251 577.14221191]
[-138.60330200 576.51672363]
[-153.48402405 574.54943848]
[-168.12847900 571.25610352]
[-182.41877747 566.66333008]
[-196.23985291 560.80804443]
[-209.48040771 553.73736572]
[-222.03384399 545.50836182]
[-233.79910278 536.18713379]
[-244.68142700 525.84881592]
[-254.59321594 514.57659912]
[-263.45465088 502.46124268]
[-271.19439697 489.60037231]
[-277.75015259 476.09744263]
[-283.06909180 462.06124878]
[-287.10842896 447.60476685]
[-289.83560181 432.84439087]
[-291.22866821 417.89895630]
[-291.27642822 402.88882446]
[-289.97848511 387.93484497]
[-287.34530640 373.15740967]
[-283.39804077 358.67550659]
[-278.16851807 344.60574341]
[-271.69885254 331.06140137]
[-264.04110718 318.15151978]
[-255.25692749 305.98004150]
[-245.41706848 294.64498901]
[-234.60075378 284.23760986]
[-222.89505005 274.84170532]
[-210.39422607 266.53295898]
[-197.19892883 259.37820435]
[-183.41540527 253.43507385]
[-169.15463257 248.75144958]
[-154.53141785 245.36500549]
[-139.66351318 243.30302429]
[-124.67063904 242.58212280]
[-109.67348480 243.20806885]
[-94.79282379 245.17584229]
[-80.14846039 248.46960449]
[-65.85830688 253.06283569]
[-52.03741837 258.91854858]
[-38.79707718 265.98956299]
[-26.24388885 274.21902466]
[-16.92900467 262.46176147]
[-7.61412239 250.70451355]
[1.70076036 238.94726562]
[11.01564312 227.19000244]
[20.33052635 215.43275452]
[29.64540863 203.67550659]
[31.33518028 196.48062134]
[39.18754959 191.81390381]
[47.60216522 179.39640808]
[54.87539673 166.27772522]
[62.14862442 153.15902710]
[69.42185211 140.04032898]
[76.69508362 126.92163849]
[83.96831512 113.80294800]
[91.24154663 100.68424988]
[90.65303040 97.69374084]
[91.13963318 94.42299652]
[92.80723572 91.26982117]
[95.61330414 88.66554260]
[99.35830688 87.01998138]
[107.39948273 74.35745239]
[108.26586914 58.55998993]
[121.62026978 51.96382523]
[129.66143799 39.30130386]
[137.70260620 26.63877678]
[139.66130066 17.71681786]
[145.95895386 13.84883022]
[154.18775940 1.30743027]
[162.41656494 -11.23396969]
[170.64537048 -23.77536964]
[158.80958557 -33.00395584]
[147.76539612 -43.16656494]
[137.58630371 -54.19556808]
[128.34005737 -66.01757050]
[120.08818817 -78.55389404]
[112.88561249 -91.72111511]
[106.78025818 -105.43160248]
[101.81276703 -119.59411621]
[98.01618195 -134.11441040]
[95.41577911 -148.89584351]
[94.02886200 -163.84004211]
[93.86466217 -178.84756470]
[94.92426300 -193.81854248]
[97.20063019 -208.65333557]
[100.67859650 -223.25321960]
[105.33502960 -237.52102661]
[111.13893127 -251.36181641]
[118.05168915 -264.68347168]
[126.02729034 -277.39733887]
[135.01264954 -289.41882324]
[144.94799805 -300.66790771]
[155.76718140 -311.06973267]
[167.39822388 -320.55508423]
[179.76370239 -329.06082153]
[192.78135681 -336.53033447]
[206.36451721 -342.91394043]
[220.42282104 -348.16912842]
[234.86268616 -352.26095581]
[249.58802795 -355.16217041]
[264.50085449 -356.85348511]
[279.50192261 -357.32360840]
[294.49136353 -356.56942749]
[309.36947632 -354.59597778]
[324.03723145 -351.41638184]
[338.39700317 -347.05181885]
[352.35327148 -341.53128052]
[365.81307983 -334.89157104]
[378.68692017 -327.17681885]
[390.88906860 -318.43841553]
[402.33837891 -308.73446655]
[412.95861816 -298.12957764]
[422.67910767 -286.69433594]
[431.43518066 -274.50485229]
[439.16854858 -261.64218140]
[445.82772827 -248.19198608]
[451.36846924 -234.24374390]
[455.75381470 -219.89030457]
[458.95462036 -205.22717285]
[460.94961548 -190.35192871]
[461.72546387 -175.36357117]
[461.27706909 -160.36184692]
[459.60733032 -145.44659424]
[456.72744751 -130.71705627]
[452.65652466 -116.27128601]
[447.42169189 -102.20539856]
[441.05773926 -88.61300659]
[433.60705566 -75.58456421]
[425.11923218 -63.20678329]
[415.65072632 -51.56202698]
[405.26458740 -40.72779465]
[394.02987671 -30.77618790]
[382.02142334 -21.77343369]
[369.31909180 -13.77944183]
[356.00747681 -6.84741592]
[342.17507935 -1.02348578]
[327.91403198 3.65358996]
[313.31921387 7.15268612]
[298.48773193 9.45051575]
[283.51831055 10.53178787]
[268.51055908 10.38930607]
[253.56434631 9.02401829]
[238.77917480 6.44501114]
[224.25340271 2.66944718]
[210.08372498 -2.27754712]
[196.36441040 -8.36304951]
[183.18678284 -15.54656219]
[174.95796204 -3.00516224]
[166.72915649 9.53623772]
[158.50035095 22.07763863]
[150.36514282 34.67995071]
[142.32395935 47.34247589]
[134.28279114 60.00500107]
[133.99156189 74.89675903]
[120.06200409 82.39862823]
[112.02083588 95.06114960]
[104.36023712 107.95748138]
[97.08700562 121.07617188]
[89.81378174 134.19487000]
[82.54055023 147.31356812]
[75.26731873 160.43225098]
[67.99408722 173.55094910]
[60.72085953 186.66964722]
[73.94293213 179.58609009]
[88.92507935 178.85440063]
[102.77447510 184.61584473]
[112.81702423 195.75798035]
[117.11366272 210.12944031]
[114.83477783 224.95532227]
[106.42039490 237.37297058]
[93.49518585 244.98474121]
[78.55481720 246.32092285]
[64.48403168 241.12350464]
[53.99968719 230.39604187]
[49.12614059 216.20983887]
[50.80480957 201.30281067]
[41.40266037 212.99038696]
[32.08777618 224.74763489]
[22.77289391 236.50489807]
[13.45801163 248.26214600]
[4.14312887 260.01940918]
[-5.17175388 271.77664185]
[-14.48663712 283.53390503]
[-3.60399151 293.87188721]
[6.30814266 305.14379883]
[15.16995621 317.25885010]
[22.91009903 330.11950684]
[29.46625137 343.62222290]
[34.78562546 357.65826416]
[38.82538986 372.11462402]
[41.55302048 386.87490845]
[42.94655228 401.82031250]
[42.99477005 416.83041382]
[41.69728470 431.78445435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 199]
[58 198]
[59 197]
[60 196]
[61 195]
[62 194]
[63 193]
[65 192]
[66 179]
[67 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[77 172]
[78 171]
[80 169]
[81 168]
[82 167]
[84 166]
[85 165]
[86 164]
[87 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
