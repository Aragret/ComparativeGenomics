%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[61.33021545 463.53884888]
[55.92007828 449.50668335]
[53.02898026 434.74819946]
[52.74477768 419.71191406]
[55.07610703 404.85470581]
[59.95211792 390.62814331]
[67.22463989 377.46447754]
[76.67266083 365.76379395]
[88.00907898 355.88165283]
[100.88938141 348.11834717]
[114.92215729 342.70980835]
[112.03688812 327.98992920]
[109.15161133 313.27001953]
[106.26634216 298.55014038]
[101.89493561 292.59088135]
[103.44940186 283.58969116]
[100.78360748 268.82849121]
[98.11781311 254.06726074]
[91.99613953 267.76123047]
[80.26908112 277.11410522]
[65.55649567 280.03640747]
[51.14521408 275.87530518]
[40.25474548 265.56036377]
[35.31805801 251.39601135]
[37.43801498 236.54656982]
[46.14101028 224.32945251]
[59.48278046 217.47399902]
[74.48273468 217.51173401]
[87.78984070 224.43421936]
[96.43127441 236.69499207]
[88.50534058 224.08432007]
[96.03631592 210.17048645]
[95.81298828 195.17214966]
[95.58966064 180.17381287]
[95.36633301 165.17547607]
[95.14300537 150.17712402]
[94.58480072 135.18751526]
[86.10367584 122.94334412]
[93.00585938 108.70710754]
[92.00159454 93.74076843]
[90.88594818 78.78231049]
[89.77030182 63.82386017]
[88.65464783 48.86540604]
[87.53900146 33.90695190]
[86.42335510 18.94849777]
[83.53807831 4.22860670]
[78.92407227 -10.04412651]
[74.31005859 -24.31686020]
[69.69605255 -38.58959198]
[56.07691956 -38.47522354]
[42.99302673 -42.19651031]
[31.50101280 -49.44308472]
[22.52618790 -59.62027740]
[16.78802299 -71.89790344]
[14.74248505 -85.27800751]
[16.54581261 -98.67594147]
[22.04263115 -111.00831604]
[30.77928543 -121.28058624]
[42.04127121 -128.66728210]
[37.85425949 -143.07106018]
[33.66724777 -157.47483826]
[25.51254272 -144.88513184]
[10.87347507 -141.61439514]
[-1.86403120 -149.53627014]
[-5.40335417 -164.11271667]
[2.28299069 -176.99372864]
[16.79191589 -180.80043030]
[29.81146622 -173.35295105]
[26.92619324 -188.07284546]
[24.04092216 -202.79273987]
[21.15564919 -217.51263428]
[17.10530853 -222.73817444]
[16.40683556 -228.37812805]
[18.41047287 -232.71339417]
[15.96474648 -247.51266479]
[13.51901913 -262.31195068]
[3.63516140 -274.66589355]
[9.19375896 -288.48440552]
[6.74803162 -303.28366089]
[1.87616336 -289.09686279]
[-7.28611660 -277.22030640]
[-19.77189064 -268.90734863]
[-34.26350403 -265.03524780]
[-49.23162842 -266.01266479]
[-63.09663391 -271.73645020]
[-74.39531708 -281.60253906]
[-81.93530273 -294.56976318]
[-84.92087555 -309.26962280]
[-83.03695679 -324.15084839]
[-76.48236847 -337.64297485]
[-65.94882965 -348.32214355]
[-52.54797363 -355.06134033]
[-37.69401550 -357.14941406]
[-22.95453453 -354.36593628]
[-9.88502216 -347.00469971]
[0.13526425 -335.84252930]
[6.04890633 -322.05722046]
[7.38714075 -336.99740601]
[8.72537422 -351.93759155]
[10.06360912 -366.87777710]
[-3.67177391 -373.28988647]
[-14.38354778 -384.01525879]
[-20.77821350 -397.75878906]
[-22.08358383 -412.86083984]
[-18.14202881 -427.49777222]
[-9.42951202 -439.90209961]
[3.00188971 -448.57598877]
[17.65102386 -452.47195435]
[32.74893570 -451.11959839]
[46.47247696 -444.68218994]
[57.16446686 -433.93710327]
[63.53379440 -420.18182373]
[64.81133270 -405.07739258]
[60.84280777 -390.44775391]
[52.10744858 -378.05947876]
[39.66008377 -369.40853882]
[25.00379372 -365.53955078]
[23.66555977 -350.59936523]
[22.32732582 -335.65917969]
[20.98909187 -320.71899414]
[21.54730225 -305.72940063]
[23.99303055 -290.93011475]
[33.70195389 -279.63470459]
[28.31828880 -264.75765991]
[30.76401711 -249.95838928]
[33.20974350 -235.15911865]
[35.87554169 -220.39790344]
[38.76081085 -205.67800903]
[41.64608383 -190.95811462]
[44.53135681 -176.23823547]
[48.07102966 -161.66184998]
[52.25804138 -147.25807190]
[56.44505310 -132.85429382]
[72.88603973 -132.08738708]
[88.09461212 -125.72817230]
[100.22583008 -114.52902222]
[107.80155945 -99.83058929]
[109.89055634 -83.40129852]
[106.22289276 -67.22461700]
[97.22471619 -53.25959778]
[83.96878815 -43.20360184]
[88.58279419 -28.93087006]
[93.19680786 -14.65813637]
[97.81081390 -0.38540256]
[100.67900085 -15.10863209]
[108.35047913 -27.99849129]
[119.92399597 -37.54069519]
[134.03991699 -42.61423111]
[149.03991699 -42.62306976]
[163.16180420 -37.56616592]
[174.74656677 -28.03760719]
[182.43321228 -15.15679550]
[185.31875610 -0.43695587]
[183.06417847 14.39263916]
[175.93435669 27.58982468]
[164.76690674 37.60420609]
[150.87374878 43.25930786]
[135.88703918 43.89076996]
[121.56742096 39.42441177]
[109.59712982 30.38493538]
[101.38180542 17.83284950]
[102.49745178 32.79130173]
[103.61310577 47.74975586]
[104.72875214 62.70820999]
[105.84439850 77.66666412]
[106.96005249 92.62511444]
[110.65238953 99.79025269]
[107.97926331 107.81429291]
[116.52424622 121.12946320]
[109.55820465 134.29470825]
[112.43405151 138.65092468]
[113.26797485 143.21795654]
[112.32159424 147.18272400]
[110.14134979 149.95379639]
[110.36467743 164.95214844]
[110.58800507 179.95048523]
[110.81133270 194.94882202]
[111.03466034 209.94715881]
[118.97656250 223.63059998]
[111.42961121 236.47166443]
[112.87902832 251.40145874]
[115.54482269 266.16268921]
[118.21062469 280.92388916]
[120.98622894 295.66485596]
[123.87150574 310.38476562]
[126.75677490 325.10464478]
[129.64204407 339.82452393]
[144.67825317 339.53521729]
[159.53623962 341.86148071]
[173.76448059 346.73266602]
[186.93058777 354.00070190]
[198.63449097 363.44476318]
[208.52049255 374.77780151]
[216.28817749 387.65545654]
[221.70149231 401.68640137]
[224.59593201 416.44421387]
[224.88356018 431.48046875]
[222.55560303 446.33816528]
[217.68281555 460.56585693]
[210.41326904 473.73114014]
[200.96791077 485.43399048]
[189.63372803 495.31869507]
[176.75518799 503.08493042]
[162.72363281 508.49664307]
[147.96548462 511.38940430]
[132.92921448 511.67532349]
[118.07176971 509.34567261]
[103.84463501 504.47128296]
[90.68016815 497.20025635]
[78.97840881 487.75357056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 187]
[12 186]
[13 185]
[14 184]
[16 183]
[17 182]
[18 181]
[30 180]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 170]
[39 168]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 144]
[47 143]
[48 142]
[49 141]
[59 133]
[60 132]
[61 131]
[68 130]
[69 129]
[70 128]
[71 127]
[74 126]
[75 125]
[76 124]
[78 122]
[79 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
