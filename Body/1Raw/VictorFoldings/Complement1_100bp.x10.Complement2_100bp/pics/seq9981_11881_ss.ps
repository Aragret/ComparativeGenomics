%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[45.22002411 450.50955200]
[41.10142136 465.03332520]
[33.21609879 477.90670776]
[22.14920425 488.17443848]
[8.72196960 495.07458496]
[-6.06921339 498.09509277]
[-21.12674141 497.01184082]
[-35.33324432 491.90518188]
[-47.63450623 483.15411377]
[-57.11769104 471.40795898]
[-63.07908630 457.53842163]
[-65.07631683 442.57467651]
[-62.96116638 427.62713623]
[-56.89060211 413.80502319]
[-47.31510162 402.13403320]
[-34.94522095 393.48019409]
[-20.69889832 388.48571777]
[-5.63329744 387.52120972]
[-2.52918744 372.84591675]
[0.57492268 358.17059326]
[3.67903280 343.49530029]
[2.26475120 341.07498169]
[1.72397590 337.94860840]
[2.33043098 334.44610596]
[4.23347425 330.99023438]
[7.42948389 328.05093384]
[11.40157986 313.58642578]
[15.37367630 299.12188721]
[11.28284836 284.80007935]
[22.39831352 273.54144287]
[26.37040901 259.07690430]
[30.34250641 244.61238098]
[34.31460190 230.14785767]
[38.28669739 215.68333435]
[27.10960197 225.68696594]
[12.72324276 229.93345642]
[-2.09459805 227.60287476]
[-14.48282814 219.14523315]
[-22.04947472 206.19355774]
[-23.33353615 191.24862671]
[-18.08708000 177.19604492]
[-7.32311583 166.74917603]
[6.88000441 161.92514038]
[21.77988052 163.65536499]
[34.49958038 171.60578918]
[42.58312607 184.24131775]
[44.46959686 199.12347412]
[50.94908905 185.59512329]
[57.42858505 172.06677246]
[63.90808105 158.53843689]
[70.38758087 145.01008606]
[76.86707306 131.48173523]
[83.34657288 117.95339203]
[89.72517395 104.37718964]
[95.90093994 90.70751953]
[101.97477722 76.99224854]
[108.04861450 63.27698517]
[114.12244415 49.56171799]
[101.55073547 40.50781631]
[91.13330841 29.04818344]
[83.32121277 15.68247223]
[78.45198059 0.99279302]
[76.73500824 -14.38164520]
[78.24259949 -29.77234650]
[82.90690613 -44.51060104]
[90.52295685 -57.95653152]
[100.75769043 -69.52687836]
[113.16450500 -78.72029877]
[127.20276642 -85.13909912]
[142.26133728 -88.50641632]
[157.68519592 -88.67818451]
[172.80393982 -85.64927673]
[178.67291260 -99.45345306]
[184.54187012 -113.25762939]
[190.41082764 -127.06180573]
[196.27978516 -140.86598206]
[202.14875793 -154.67015076]
[208.01771545 -168.47433472]
[213.88667297 -182.27851868]
[219.75563049 -196.08268738]
[224.36964417 -210.35542297]
[227.69190979 -224.98287964]
[231.01416016 -239.61033630]
[226.52554321 -254.78146362]
[236.88957214 -265.47894287]
[232.40093994 -280.65008545]
[242.76496887 -291.34756470]
[246.08723450 -305.97500610]
[231.96035767 -311.07513428]
[218.56732178 -317.87265015]
[206.11116028 -326.26452637]
[194.78070068 -336.12353516]
[184.74772644 -347.30026245]
[176.16430664 -359.62521362]
[169.16058350 -372.91159058]
[163.84272766 -386.95794678]
[160.29136658 -401.55133057]
[158.56031799 -416.47055054]
[158.67584229 -431.48941040]
[160.63616943 -446.38024902]
[164.41159058 -460.91729736]
[169.94488525 -474.88018799]
[177.15214539 -488.05725098]
[185.92413330 -500.24871826]
[196.12785339 -511.26977539]
[207.60861206 -520.95336914]
[220.19238281 -529.15264893]
[233.68840027 -535.74334717]
[247.89205933 -540.62554932]
[262.58801270 -543.72521973]
[277.55352783 -544.99542236]
[292.56167603 -544.41680908]
[307.38497925 -541.99829102]
[321.79870605 -537.77636719]
[335.58432007 -531.81518555]
[348.53289795 -524.20501709]
[360.44805908 -515.06127930]
[371.14926147 -504.52255249]
[380.47421265 -492.74865723]
[388.28155518 -479.91802979]
[394.45297241 -466.22521973]
[398.89486694 -451.87777710]
[401.53994751 -437.09320068]
[402.34805298 -422.09567261]
[401.30694580 -407.11248779]
[398.43246460 -392.37081909]
[393.76812744 -378.09411621]
[387.38467407 -364.49887085]
[379.37884521 -351.79113770]
[369.87203979 -340.16357422]
[359.00839233 -329.79244995]
[346.95254517 -320.83496094]
[333.88726807 -313.42697144]
[320.01068115 -307.68072510]
[305.53308105 -303.68331909]
[290.67398071 -301.49542236]
[275.65863037 -301.15014648]
[260.71469116 -302.65277100]
[257.39242554 -288.02529907]
[262.11868286 -273.90042114]
[251.51702881 -262.15667725]
[256.24328613 -248.03182983]
[245.64161682 -236.28808594]
[242.31936646 -221.66062927]
[238.99710083 -207.03315735]
[249.71636963 -217.52589417]
[263.89877319 -222.41053772]
[278.80587769 -220.74392700]
[291.55941772 -212.84788513]
[299.69683838 -200.24699402]
[301.64694214 -185.37429810]
[297.03320312 -171.10148621]
[286.74645996 -160.18440247]
[272.77288818 -154.73095703]
[257.81063843 -155.79415894]
[244.74861145 -163.16868591]
[236.10891724 -175.43064880]
[233.55981445 -190.21372986]
[227.69085693 -176.40954590]
[221.82188416 -162.60537720]
[215.95292664 -148.80119324]
[210.08396912 -134.99702454]
[204.21501160 -121.19284058]
[198.34603882 -107.38866425]
[192.47708130 -93.58448792]
[186.60812378 -79.78031158]
[198.60621643 -71.56610107]
[208.76878357 -61.15965652]
[216.70162964 -48.96184158]
[222.09651184 -35.44308472]
[224.74305725 -21.12519836]
[224.53709412 -6.56124878]
[221.48463440 7.68579769]
[215.70173645 21.06484795]
[207.41015625 33.05799484]
[196.92878723 43.20056152]
[184.66140747 51.09911728]
[171.08113098 56.44672394]
[156.71214294 59.03487396]
[142.10951233 58.76161194]
[127.83771515 55.63555145]
[121.76387787 69.35081482]
[115.69004059 83.06608582]
[109.61621094 96.78134918]
[109.49119568 104.84093475]
[103.34848785 110.65454865]
[102.59934998 119.75820923]
[96.87491608 124.43289185]
[90.39541626 137.96124268]
[83.91592407 151.48957825]
[77.43642426 165.01792908]
[70.95693207 178.54627991]
[64.47743988 192.07461548]
[57.99794006 205.60296631]
[52.75122070 219.65544128]
[48.77912521 234.11996460]
[44.80702972 248.58448792]
[40.83493423 263.04901123]
[36.86283875 277.51351929]
[40.66955566 292.86993408]
[29.83819962 303.09399414]
[25.86610413 317.55850220]
[21.89400673 332.02304077]
[18.35433578 346.59942627]
[15.25022507 361.27471924]
[12.14611530 375.95001221]
[9.04200459 390.62530518]
[22.42670250 397.60760498]
[33.43046951 407.94296265]
[41.23675537 420.86444092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 207]
[19 206]
[20 205]
[21 204]
[26 203]
[27 202]
[28 201]
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 188]
[54 186]
[55 184]
[56 183]
[57 182]
[58 181]
[72 166]
[73 165]
[74 164]
[75 163]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[81 145]
[82 144]
[83 143]
[85 141]
[87 139]
[88 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
