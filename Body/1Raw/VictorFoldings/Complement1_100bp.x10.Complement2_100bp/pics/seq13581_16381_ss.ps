%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[166.92192078 501.67575073]
[173.63887024 488.20477295]
[182.93029785 476.36187744]
[194.41569519 466.63198853]
[207.62477112 459.41360474]
[203.22377014 445.07373047]
[198.82276917 430.73388672]
[187.69180298 420.83688354]
[191.03962708 405.37393188]
[186.63862610 391.03408813]
[183.71170044 389.06802368]
[181.59164429 385.58657837]
[180.98030090 380.98443604]
[182.37673950 375.95483398]
[178.62043762 361.43276978]
[174.86413574 346.91070557]
[157.19795227 342.87634277]
[143.96331787 330.37402344]
[138.88363647 312.80227661]
[143.44822693 295.00183105]
[156.47709656 281.92224121]
[152.07609558 267.58239746]
[147.67509460 253.24256897]
[143.27410889 238.90270996]
[138.87310791 224.56286621]
[134.47210693 210.22302246]
[130.07110596 195.88317871]
[125.67011261 181.54331970]
[120.52815247 167.45217896]
[114.65918732 153.64801025]
[108.79022980 139.84382629]
[102.92127228 126.03965759]
[97.05230713 112.23548126]
[90.87654114 98.56581116]
[84.39704132 85.03746033]
[77.91754913 71.50911713]
[74.25004578 69.18460083]
[71.76312256 66.12196350]
[70.54385376 62.78298187]
[70.52040100 59.61027908]
[71.48203278 56.97713852]
[65.81924438 43.08711243]
[60.15645981 29.19708633]
[54.49367142 15.30705929]
[37.24803925 16.29564476]
[20.72805214 11.33303642]
[6.92163134 1.03402567]
[-2.51587439 -13.34550858]
[-6.46014738 -30.06172943]
[-4.45182562 -47.09431839]
[3.25007010 -62.39064407]
[15.70139980 -74.11312866]
[9.42403889 -87.73644257]
[3.14667845 -101.35976410]
[-3.13068247 -114.98307800]
[-9.40804291 -128.60639954]
[-15.68540382 -142.22970581]
[-16.07905006 -127.23487854]
[-19.53985786 -112.63957214]
[-25.92067528 -99.06440735]
[-34.95018387 -87.08659363]
[-46.24444199 -77.21543884]
[-59.32321930 -69.87067413]
[-73.63039398 -65.36459351]
[-88.55761719 -63.88879776]
[-103.47017670 -65.50605011]
[-117.73398590 -70.14756775]
[-130.74253845 -77.61600494]
[-141.94270325 -87.59379578]
[-150.85824585 -99.65667725]
[-157.11007690 -113.29173279]
[-160.43235779 -127.91918945]
[-160.68382263 -142.91708374]
[-157.85377502 -157.64768982]
[-152.06256104 -171.48466492]
[-143.55642700 -183.83964539]
[-132.69705200 -194.18730164]
[-119.94618225 -202.08764648]
[-105.84599304 -207.20472717]
[-90.99602509 -209.32099915]
[-76.02771759 -208.34645081]
[-61.57752609 -204.32254028]
[-48.25987625 -197.42034912]
[-36.64104462 -187.93336487]
[-27.21506882 -176.26499939]
[-20.38268471 -162.91120911]
[-28.32459068 -176.59465027]
[-20.77763939 -189.43569946]
[-31.97507095 -179.45484924]
[-46.95765686 -180.17739868]
[-57.14269638 -191.18943787]
[-56.69572830 -206.18276978]
[-45.87280273 -216.56854248]
[-30.87378120 -216.39730835]
[-20.29114914 -205.76803589]
[-19.17550087 -220.72648621]
[-18.05985069 -235.68493652]
[-16.94420242 -250.64338684]
[-15.82855415 -265.60183716]
[-29.75307083 -271.55050659]
[-40.98992157 -281.69998169]
[-48.32021332 -294.94934082]
[-50.94881439 -309.86138916]
[-48.59059143 -324.81857300]
[-41.50135040 -338.19845581]
[-30.45007324 -348.54971313]
[-16.63552475 -354.74945068]
[-1.55620301 -356.12524414]
[13.15220165 -352.52780151]
[25.89422989 -344.34738159]
[35.28772354 -332.47131348]
[40.31374359 -318.18780518]
[40.42710876 -303.04629517]
[35.61552048 -288.68914795]
[26.40090370 -276.67376709]
[13.78278923 -268.30346680]
[-0.87010074 -264.48620605]
[-1.98574936 -249.52774048]
[-3.10139799 -234.56929016]
[-4.21704674 -219.61083984]
[-5.33269548 -204.65238953]
[-5.77930117 -189.65902710]
[2.14663148 -177.04837036]
[-5.38434696 -163.13453674]
[-2.06208754 -148.50706482]
[4.21527290 -134.88375854]
[10.49263382 -121.26043701]
[16.76999474 -107.63712311]
[23.04735565 -94.01380920]
[29.32471657 -80.39048767]
[42.03805161 -82.33457184]
[54.83449173 -80.91789246]
[66.83986664 -76.23019409]
[77.23222351 -68.58490753]
[85.29812622 -58.49821472]
[90.48158264 -46.65420151]
[92.42240143 -33.85844803]
[90.98120880 -20.98325348]
[86.24941254 -8.90816689]
[78.54346466 1.54009974]
[68.38369751 9.64427280]
[74.04648590 23.53429985]
[79.70927429 37.42432785]
[85.37206268 51.31435394]
[91.44589233 65.02961731]
[97.92539215 78.55796814]
[104.40488434 92.08631134]
[107.82390594 93.87031555]
[110.43996429 97.15270233]
[111.60150146 101.54108429]
[110.85648346 106.36651611]
[116.72544861 120.17069244]
[122.59440613 133.97486877]
[128.46336365 147.77905273]
[134.33232117 161.58322144]
[139.86187744 147.63961792]
[153.00030518 140.40211487]
[167.74092102 143.17959595]
[177.34449768 154.70223999]
[177.42041016 169.70204163]
[167.93395996 181.32130432]
[153.22221375 184.24784851]
[140.00996399 177.14233398]
[144.41094971 191.48217773]
[148.81195068 205.82202148]
[153.21295166 220.16186523]
[157.61395264 234.50170898]
[162.01495361 248.84156799]
[166.41593933 263.18139648]
[170.81694031 277.52127075]
[182.77867126 278.68969727]
[193.61457825 283.80834961]
[202.06539917 292.25662231]
[207.15777588 303.02838135]
[208.31634521 314.85198975]
[205.42861938 326.34024048]
[198.85545349 336.15319824]
[189.38619995 343.15441895]
[193.14250183 357.67648315]
[196.89880371 372.19851685]
[200.97846985 386.63308716]
[205.37947083 400.97293091]
[216.82521057 411.89562988]
[213.16261292 426.33288574]
[217.56361389 440.67272949]
[221.96461487 455.01260376]
[236.94885254 453.57827759]
[251.91506958 455.18997192]
[266.25036621 459.78167725]
[279.36776733 467.16534424]
[290.73010254 477.03866577]
[299.87207031 488.99731445]
[306.41934204 502.55157471]
[310.10382080 517.14642334]
[310.77459717 532.18420410]
[308.40420532 547.04913330]
[303.08975220 561.13250732]
[295.04879761 573.85760498]
[284.61068726 584.70336914]
[272.20278931 593.22564697]
[258.33322144 599.07543945]
[243.56994629 602.01324463]
[228.51751709 601.91876221]
[213.79229736 598.79577637]
[199.99728394 592.77227783]
[187.69737244 584.09490967]
[177.39624023 573.11895752]
[169.51571655 560.29388428]
[164.37849426 546.14489746]
[162.19496155 531.25134277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 186]
[6 185]
[7 184]
[9 182]
[10 181]
[14 180]
[15 179]
[16 178]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[34 147]
[35 146]
[36 145]
[41 144]
[42 143]
[43 142]
[44 141]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[86 124]
[88 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
