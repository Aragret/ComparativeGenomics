%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[27.87570000 758.29736328]
[13.07792377 760.77276611]
[-1.82839024 762.47680664]
[-16.80305862 763.40484619]
[-31.80570984 763.55438232]
[-46.79590225 762.92504883]
[-61.73322296 761.51849365]
[-76.57740021 759.33850098]
[-91.28842926 756.39105225]
[-105.82662964 752.68395996]
[-120.15283203 748.22729492]
[-134.22840881 743.03302002]
[-148.01539612 737.11517334]
[-161.47665405 730.48974609]
[-174.57586670 723.17456055]
[-187.27774048 715.18927002]
[-199.54803467 706.55554199]
[-211.35366821 697.29650879]
[-222.66279602 687.43719482]
[-233.44494629 677.00427246]
[-243.67105103 666.02569580]
[-253.31355286 654.53112793]
[-262.34643555 642.55163574]
[-270.74536133 630.11944580]
[-278.48767090 617.26800537]
[-285.55252075 604.03210449]
[-291.92086792 590.44732666]
[-297.57550049 576.55029297]
[-302.50122070 562.37854004]
[-306.68472290 547.97015381]
[-310.11471558 533.36413574]
[-312.78201294 518.59973145]
[-314.67935181 503.71676636]
[-315.80166626 488.75543213]
[-316.14590454 473.75598145]
[-315.71118164 458.75888062]
[-314.49859619 443.80456543]
[-312.51147461 428.93334961]
[-309.75515747 414.18530273]
[-306.23706055 399.60018921]
[-301.96670532 385.21737671]
[-296.95556641 371.07556152]
[-291.21716309 357.21292114]
[-284.76699829 343.66680908]
[-277.62240601 330.47375488]
[-269.80267334 317.66931152]
[-261.32888794 305.28802490]
[-252.22387695 293.36322021]
[-242.51220703 281.92706299]
[-232.22003174 271.01043701]
[-221.37512207 260.64270020]
[-210.00669861 250.85183716]
[-198.14543152 241.66423035]
[-185.82325745 233.10466003]
[-173.07344055 225.19619751]
[-159.93031311 217.96015930]
[-146.42932129 211.41606140]
[-132.60687256 205.58152771]
[-118.50021362 200.47230530]
[-104.14738464 196.10215759]
[-89.58707428 192.48286438]
[-74.85853577 189.62419128]
[-60.00146866 187.53384399]
[-45.05593491 186.21745300]
[-30.06221771 185.67855835]
[-15.06074142 185.91862488]
[-0.09194653 186.93701172]
[14.80381393 188.73095703]
[29.58638191 191.29563904]
[44.21590805 194.62414551]
[58.65295410 198.70747375]
[63.47895050 184.50502014]
[68.30494690 170.30256653]
[73.13095093 156.10011292]
[69.89981842 141.56019592]
[81.66570282 130.98312378]
[86.49170685 116.78067017]
[91.31770325 102.57820892]
[90.12055969 98.91225433]
[90.54512024 94.73641968]
[92.78288269 90.78680420]
[96.68931580 87.85771179]
[94.50086212 72.18859100]
[106.33709717 63.14686966]
[111.79245758 49.17407227]
[117.24781036 35.20127487]
[122.70317078 21.22847557]
[128.15852356 7.25567818]
[114.80843353 0.38697574]
[102.23535919 -7.81801081]
[90.57257843 -17.27230263]
[79.94373322 -27.87568092]
[70.46148682 -39.51574326]
[62.22636032 -52.06909943]
[55.32564926 -65.40267181]
[49.83250809 -79.37512207]
[45.80516052 -93.83834076]
[43.28630447 -108.63899231]
[42.30263901 -123.62019348]
[42.86459351 -138.62313843]
[44.96620560 -153.48876953]
[48.58520508 -168.05952454]
[53.68322372 -182.18093872]
[60.20621872 -195.70330811]
[68.08504486 -208.48330688]
[77.23618317 -220.38543701]
[87.56262207 -231.28353882]
[98.95489502 -241.06208801]
[111.29225159 -249.61743164]
[124.44388580 -256.85885620]
[138.27040100 -262.70962524]
[152.62522888 -267.10772705]
[167.35618591 -270.00650024]
[182.30712891 -271.37521362]
[197.31954956 -271.19940186]
[212.23434448 -269.48089600]
[226.89337158 -266.23794556]
[241.14125061 -261.50488281]
[254.82696533 -255.33192444]
[267.80538940 -247.78446960]
[279.93902588 -238.94255066]
[291.09915161 -228.89987183]
[301.16754150 -217.76292419]
[310.03741455 -205.64974976]
[317.61480713 -192.68875122]
[323.81930542 -179.01731873]
[328.58523560 -164.78039551]
[331.86199951 -150.12887573]
[333.61489868 -135.21809387]
[333.82534790 -120.20610809]
[332.49108887 -105.25205231]
[329.62631226 -90.51445007]
[325.26135254 -76.14952087]
[319.44247437 -62.30954361]
[312.23141479 -49.14123535]
[303.70455933 -36.78418350]
[293.95230103 -25.36938095]
[283.07803345 -15.01782990]
[271.19705200 -5.83926344]
[258.43527222 2.06902075]
[244.92797852 8.62319088]
[230.81837463 13.75376797]
[216.25599670 17.40636635]
[201.39524841 19.54226494]
[186.39364624 20.13882446]
[171.41021729 19.18971825]
[156.60379028 16.70500946]
[142.13131714 12.71103477]
[136.67596436 26.68383217]
[131.22061157 40.65663147]
[125.76525116 54.62942886]
[120.30989838 68.60222626]
[122.88855743 83.27191925]
[110.66211700 93.31306458]
[105.52015686 107.40420532]
[100.69416046 121.60666656]
[95.86816406 135.80911255]
[98.75409698 151.36488342]
[87.33340454 160.92611694]
[82.50740814 175.12857056]
[77.68140411 189.33102417]
[72.85540771 203.53347778]
[86.79141998 209.09130859]
[100.42017365 215.36499023]
[113.70493317 222.33758545]
[126.60987854 229.99032593]
[139.10021973 238.30256653]
[151.14228821 247.25189209]
[162.70361328 256.81417847]
[173.75303650 266.96368408]
[184.26077271 277.67300415]
[194.19848633 288.91326904]
[203.53939819 300.65420532]
[212.25831604 312.86413574]
[220.33172607 325.51016235]
[227.73789978 338.55816650]
[234.45683289 351.97299194]
[240.47041321 365.71850586]
[245.76246643 379.75759888]
[250.31869507 394.05242920]
[254.12681580 408.56451416]
[257.17657471 423.25466919]
[259.45974731 438.08334351]
[260.97018433 453.01049805]
[261.70379639 467.99594116]
[261.65859985 482.99929810]
[260.83477783 497.98004150]
[259.23446655 512.89782715]
[256.86203003 527.71246338]
[253.72386169 542.38403320]
[249.82839966 556.87286377]
[245.18617249 571.14001465]
[239.80967712 585.14703369]
[233.71340942 598.85601807]
[226.91381836 612.23016357]
[219.42921448 625.23333740]
[211.27978516 637.83050537]
[202.48748779 649.98773193]
[193.07604980 661.67218018]
[183.07081604 672.85241699]
[172.49877930 683.49822998]
[161.38842773 693.58099365]
[149.76971436 703.07348633]
[137.67398071 711.95013428]
[125.13379669 720.18701172]
[112.18300629 727.76190186]
[98.85649872 734.65435791]
[85.19020844 740.84582520]
[71.22097778 746.31964111]
[56.98646545 751.06103516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 162]
[72 161]
[73 160]
[74 159]
[76 157]
[77 156]
[78 155]
[82 154]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
