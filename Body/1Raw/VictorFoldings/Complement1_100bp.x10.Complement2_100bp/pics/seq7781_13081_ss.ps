%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[67.75753784 989.35803223]
[52.76926804 988.68811035]
[37.83416748 987.25988770]
[22.99057388 985.07702637]
[8.27659035 982.14520264]
[-6.27001095 978.47186279]
[-20.61189079 974.06646729]
[-34.71223068 968.94030762]
[-48.53483963 963.10656738]
[-62.04423141 956.58020020]
[-75.20573425 949.37799072]
[-87.98554993 941.51837158]
[-100.35088348 933.02160645]
[-112.26998901 923.90942383]
[-123.71226501 914.20520020]
[-134.64834595 903.93395996]
[-145.05017090 893.12194824]
[-154.89102173 881.79699707]
[-164.14562988 869.98815918]
[-172.79025269 857.72570801]
[-180.80270386 845.04113770]
[-188.16239929 831.96704102]
[-194.85046387 818.53698730]
[-200.84971619 804.78540039]
[-206.14476013 790.74761963]
[-210.72201538 776.45965576]
[-214.56970215 761.95819092]
[-217.67797852 747.28045654]
[-220.03884888 732.46411133]
[-221.64624023 717.54724121]
[-222.49604797 702.56811523]
[-222.58609009 687.56512451]
[-221.91612244 672.57690430]
[-220.48785400 657.64178467]
[-218.30499268 642.79821777]
[-215.37309265 628.08422852]
[-211.69972229 613.53759766]
[-207.29428101 599.19573975]
[-202.16809082 585.09545898]
[-196.33432007 571.27282715]
[-189.80792236 557.76348877]
[-182.60566711 544.60198975]
[-174.74603271 531.82220459]
[-166.24919128 519.45690918]
[-157.13697815 507.53781128]
[-147.43275452 496.09555054]
[-137.16145325 485.15948486]
[-126.34942627 474.75769043]
[-115.02443695 464.91690063]
[-103.21555328 455.66229248]
[-90.95308685 447.01770020]
[-78.26852417 439.00531006]
[-65.19441223 431.64562988]
[-51.76431656 424.95761108]
[-38.01272202 418.95840454]
[-23.97491646 413.66339111]
[-9.68694210 409.08618164]
[4.81452560 405.23852539]
[19.49226189 402.13027954]
[34.30858994 399.76947021]
[49.22547150 398.16210938]
[64.20462036 397.31234741]
[79.20758820 397.22235107]
[79.87737274 382.23730469]
[80.54715729 367.25225830]
[81.21694183 352.26724243]
[81.88672638 337.28219604]
[82.55651093 322.29714966]
[83.22629547 307.31210327]
[83.89608002 292.32708740]
[84.56587219 277.34204102]
[71.00605774 271.09216309]
[60.84460449 260.09716797]
[55.65281677 246.01135254]
[56.25106430 230.97041321]
[62.57929993 217.26759338]
[73.70146942 207.00405884]
[87.94385529 201.76666260]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[90.34955597 81.44002533]
[91.00171661 75.79451752]
[93.97179413 72.05451202]
[95.08744812 57.09605789]
[96.20309448 42.13760376]
[81.64340973 38.36196899]
[67.99196625 32.04708862]
[55.68758774 23.39595604]
[45.12581635 12.68667030]
[36.64617157 0.26349032]
[30.52123642 -13.47422981]
[26.94790077 -28.08487892]
[26.04103470 -43.09878540]
[27.82979012 -58.03331375]
[32.25666428 -72.40837860]
[39.17935562 -85.76188660]
[48.37532043 -97.66457367]
[59.54895401 -107.73381805]
[72.34107208 -115.64593506]
[86.34044647 -121.14658356]
[101.09706879 -124.05894470]
[116.13657379 -124.28939056]
[130.97549438 -121.83052063]
[145.13684082 -116.76136780]
[158.16535950 -109.24488831]
[169.64225769 -99.52271271]
[179.19857788 -87.90736389]
[186.52714539 -74.77222443]
[191.39236450 -60.53953552]
[193.63784790 -45.66682434]
[193.19140625 -30.63218117]
[190.06739807 -15.91891098]
[184.36624146 -1.99998319]
[176.27119446 10.67716599]
[166.04251099 21.70501900]
[154.00895691 30.72907448]
[140.55740356 37.45924759]
[126.12022400 41.67919159]
[111.16154480 43.25325394]
[110.04589844 58.21170425]
[108.93025208 73.17015839]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[102.92889404 202.43644714]
[116.64722443 208.92359924]
[126.80937958 220.13848877]
[131.88987732 234.35122681]
[131.14384460 249.38555908]
[124.71609497 262.95202637]
[113.61422729 272.99661255]
[99.55091095 278.01181030]
[98.88111877 292.99685669]
[98.21133423 307.98190308]
[97.54154968 322.96694946]
[96.87176514 337.95196533]
[96.20198059 352.93701172]
[95.53219604 367.92205811]
[94.86241150 382.90710449]
[94.19262695 397.89212036]
[109.12773132 399.32025146]
[123.97134399 401.50302124]
[138.68533325 404.43478394]
[153.23196411 408.10803223]
[167.57386780 412.51336670]
[181.67424011 417.63943481]
[195.49687195 423.47311401]
[209.00630188 429.99938965]
[222.16784668 437.20153809]
[234.94770813 445.06106567]
[247.31307983 453.55780029]
[259.23223877 462.66992188]
[270.67456055 472.37405396]
[281.61071777 482.64526367]
[292.01257324 493.45718384]
[301.85348511 504.78210449]
[311.10818481 516.59094238]
[319.75286865 528.85333252]
[327.76538086 541.53784180]
[335.12515259 554.61187744]
[341.81329346 568.04193115]
[347.81262207 581.79345703]
[353.10772705 595.83123779]
[357.68505859 610.11914062]
[361.53283691 624.62060547]
[364.64120483 639.29827881]
[367.00213623 654.11462402]
[368.60961914 669.03149414]
[369.45950317 684.01062012]
[369.54962158 699.01354980]
[368.87973022 714.00183105]
[367.45156860 728.93695068]
[365.26876831 743.78057861]
[362.33697510 758.49456787]
[358.66366577 773.04113770]
[354.25830078 787.38305664]
[349.13220215 801.48339844]
[343.29849243 815.30603027]
[336.77215576 828.81542969]
[329.56997681 841.97692871]
[321.71041870 854.75677490]
[313.21365356 867.12213135]
[304.10150146 879.04125977]
[294.39733887 890.48358154]
[284.12609863 901.41967773]
[273.31411743 911.82153320]
[261.98919678 921.66241455]
[250.18035889 930.91705322]
[237.91793823 939.56170654]
[225.23341370 947.57421875]
[212.15934753 954.93395996]
[198.72929382 961.62207031]
[184.97772217 967.62133789]
[170.93995667 972.91644287]
[156.65200806 977.49371338]
[142.15055847 981.34143066]
[127.47283936 984.44976807]
[112.65652466 986.81066895]
[97.73964691 988.41809082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[86 128]
[89 127]
[90 126]
[91 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
