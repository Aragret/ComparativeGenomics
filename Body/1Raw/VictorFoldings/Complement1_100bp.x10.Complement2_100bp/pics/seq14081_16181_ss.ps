%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[75.26764679 264.02911377]
[74.24108124 249.05664062]
[74.37786102 234.04966736]
[75.67716217 219.09840393]
[78.13117981 204.29278564]
[81.72513580 189.72187805]
[86.43743896 175.47326660]
[92.23973083 161.63269043]
[99.09712219 148.28337097]
[106.96837616 135.50558472]
[115.80614471 123.37619019]
[104.40367889 113.63022614]
[90.69329071 110.88854980]
[85.85035706 97.77223969]
[74.44789124 88.02627563]
[63.04542923 78.28030396]
[51.64296722 68.53433990]
[40.24050522 58.78837585]
[24.72294235 55.70359421]
[20.07529068 41.55267334]
[8.67282867 31.80670547]
[-1.69980991 42.64771271]
[-12.66399193 52.89006424]
[-24.18521881 62.50153351]
[-36.22724152 71.45188141]
[-48.75217438 79.71294403]
[-61.72060013 87.25872803]
[-75.09172821 94.06549835]
[-88.82347107 100.11183167]
[-102.87263489 105.37870789]
[-117.19502258 109.84955597]
[-131.74554443 113.51029968]
[-146.47845459 116.34943390]
[-161.34736633 118.35800934]
[-176.30551147 119.52972412]
[-191.30583191 119.86088562]
[-206.30110168 119.35044098]
[-221.24418640 118.00001526]
[-236.08802795 115.81384277]
[-250.78593445 112.79880524]
[-265.29165649 108.96439362]
[-279.55957031 104.32266235]
[-293.54479980 98.88822937]
[-307.20327759 92.67819214]
[-320.49209595 85.71207428]
[-333.36938477 78.01181030]
[-345.79467773 69.60162354]
[-357.72885132 60.50796890]
[-369.13436890 50.75946808]
[-379.97534180 40.38679123]
[-390.21765137 29.42256927]
[-399.82907104 17.90130615]
[-408.77938843 5.85925055]
[-417.04040527 -6.66571045]
[-424.58612061 -19.63416672]
[-431.39285278 -33.00531387]
[-437.43914795 -46.73708344]
[-442.70596313 -60.78627014]
[-447.17675781 -75.10866547]
[-450.83743286 -89.65921783]
[-453.67651367 -104.39212799]
[-455.68502808 -119.26104736]
[-456.85668945 -134.21919250]
[-457.18780518 -149.21951294]
[-456.67730713 -164.21479797]
[-455.32681274 -179.15785217]
[-453.14059448 -194.00169373]
[-450.12551880 -208.69960022]
[-446.29104614 -223.20532227]
[-441.64926147 -237.47322083]
[-436.21478271 -251.45840454]
[-430.00466919 -265.11688232]
[-423.03851318 -278.40563965]
[-415.33819580 -291.28292847]
[-406.92797852 -303.70819092]
[-397.83425903 -315.64233398]
[-388.08572388 -327.04779053]
[-377.71301270 -337.88873291]
[-366.74874878 -348.13101196]
[-355.22744751 -357.74237061]
[-343.18536377 -366.69262695]
[-330.66036987 -374.95361328]
[-317.69189453 -382.49929810]
[-304.32070923 -389.30596924]
[-290.58892822 -395.35220337]
[-276.53970337 -400.61898804]
[-262.21731567 -405.08972168]
[-247.66674805 -408.75033569]
[-232.93382263 -411.58938599]
[-218.06489563 -413.59783936]
[-203.10673523 -414.76943970]
[-188.10641479 -415.10049438]
[-173.11114502 -414.58993530]
[-158.16807556 -413.23941040]
[-143.32424927 -411.05313110]
[-128.62635803 -408.03796387]
[-114.12065887 -404.20346069]
[-99.85277557 -399.56161499]
[-85.86761475 -394.12707520]
[-72.20916748 -387.91693115]
[-58.92041397 -380.95071411]
[-46.04316711 -373.25036621]
[-33.61794281 -364.84008789]
[-21.68383408 -355.74633789]
[-10.27839184 -345.99777222]
[0.56249875 -335.62500000]
[10.80472755 -324.66070557]
[20.41606903 -313.13937378]
[29.36628342 -301.09725952]
[37.62720871 -288.57223511]
[45.17285156 -275.60369873]
[51.97946930 -262.23251343]
[58.02565002 -248.50070190]
[63.29236984 -234.45147705]
[67.76305389 -220.12904358]
[71.42363739 -205.57847595]
[74.26260376 -190.84553528]
[76.27101898 -175.97659302]
[77.44256592 -161.01843262]
[77.77355957 -146.01812744]
[77.26295471 -131.02284241]
[75.91235352 -116.07978821]
[73.72602081 -101.23596954]
[70.71082306 -86.53809357]
[66.87624359 -72.03240204]
[62.23435974 -57.76453781]
[56.79977036 -43.77939224]
[50.58957672 -30.12096977]
[43.62331390 -16.83224297]
[35.92290497 -3.95502448]
[27.51257896 8.47016907]
[18.41879463 20.40424347]
[29.82125664 30.15020943]
[44.52323914 32.53789520]
[49.98646927 47.38591385]
[61.38893127 57.13187790]
[72.79139709 66.87784576]
[84.19385529 76.62380981]
[95.59632111 86.36977386]
[109.30670929 89.11145020]
[114.14964294 102.22776031]
[125.55210876 111.97372437]
[136.15754700 101.35520172]
[147.55395508 91.59045410]
[159.67279053 82.73821259]
[172.44116211 74.85171509]
[185.78228760 67.97839355]
[199.61593628 62.15958023]
[213.85890198 57.43027496]
[228.42552185 53.81891632]
[243.22819519 51.34723282]
[258.17788696 50.03007889]
[273.18469238 49.87538147]
[288.15835571 50.88407516]
[303.00885010 53.05008316]
[317.64682007 56.36038971]
[331.98425293 60.79507828]
[345.93490601 66.32747650]
[359.41488647 72.92432404]
[372.34313965 80.54592896]
[384.64187622 89.14646912]
[396.23715210 98.67420959]
[407.05923462 109.07184601]
[417.04302979 120.27685547]
[426.12847900 132.22184753]
[434.26098633 144.83496094]
[441.39157104 158.04037476]
[447.47741699 171.75863647]
[452.48187256 185.90727234]
[456.37487793 200.40115356]
[459.13302612 215.15313721]
[460.73965454 230.07450867]
[461.18518066 245.07550049]
[460.46688843 260.06591797]
[458.58911133 274.95556641]
[455.56314087 289.65496826]
[451.40716553 304.07565308]
[446.14620972 318.13092041]
[439.81185913 331.73620605]
[432.44226074 344.80975342]
[424.08169556 357.27288818]
[414.78048706 369.05062866]
[404.59454346 380.07220459]
[393.58514404 390.27130127]
[381.81848145 399.58657837]
[369.36535645 407.96197510]
[356.30062866 415.34719849]
[342.70291138 421.69778442]
[328.65393066 426.97552490]
[314.23822021 431.14871216]
[299.54244995 434.19223022]
[284.65502930 436.08779907]
[269.66549683 436.82397461]
[254.66398621 436.39636230]
[239.74070740 434.80752563]
[224.98544312 432.06701660]
[210.48692322 428.19131470]
[196.33232117 423.20373535]
[182.60679626 417.13427734]
[169.39289856 410.01943970]
[156.77006531 401.90200806]
[144.81423950 392.83081055]
[133.59732056 382.86041260]
[123.18677521 372.05075073]
[113.64519501 360.46685791]
[105.02998352 348.17840576]
[97.39294434 335.25924683]
[90.78001404 321.78717041]
[85.23096466 307.84310913]
[80.77915955 293.51098633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 142]
[12 141]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[20 133]
[21 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
