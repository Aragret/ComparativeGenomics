%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[28.66791725 893.89324951]
[13.69829464 894.89257812]
[-1.30212820 895.16748047]
[-16.29831505 894.71740723]
[-31.25524521 893.54327393]
[-46.13798141 891.64788818]
[-60.91176605 889.03570557]
[-75.54209137 885.71282959]
[-89.99479675 881.68695068]
[-104.23611450 876.96752930]
[-118.23279572 871.56555176]
[-131.95214844 865.49365234]
[-145.36210632 858.76599121]
[-158.43139648 851.39837646]
[-171.12944031 843.40789795]
[-183.42663574 834.81329346]
[-195.29421997 825.63458252]
[-206.70448303 815.89318848]
[-217.63079834 805.61199951]
[-228.04762268 794.81481934]
[-237.93063354 783.52703857]
[-247.25675964 771.77496338]
[-256.00421143 759.58599854]
[-264.15255737 746.98864746]
[-271.68276978 734.01239014]
[-278.57723999 720.68743896]
[-284.81988525 707.04492188]
[-290.39614868 693.11676025]
[-295.29296875 678.93548584]
[-299.49893188 664.53417969]
[-303.00418091 649.94641113]
[-305.80059814 635.20642090]
[-307.88156128 620.34851074]
[-309.24227905 605.40740967]
[-309.87954712 590.41796875]
[-309.79190063 575.41528320]
[-308.97949219 560.43438721]
[-307.44427490 545.51019287]
[-305.18978882 530.67761230]
[-302.22134399 515.97125244]
[-298.54583740 501.42550659]
[-294.17187500 487.07431030]
[-289.10968018 472.95120239]
[-283.37103271 459.08914185]
[-276.96939087 445.52053833]
[-269.91964722 432.27706909]
[-262.23831177 419.38964844]
[-253.94332886 406.88839722]
[-245.05403137 394.80252075]
[-235.59121704 383.16021729]
[-225.57696533 371.98867798]
[-215.03466797 361.31402588]
[-203.98896790 351.16116333]
[-192.46563721 341.55380249]
[-180.49159241 332.51440430]
[-168.09481812 324.06408691]
[-155.30424500 316.22253418]
[-142.14976501 309.00811768]
[-128.66209412 302.43768311]
[-114.87272644 296.52651978]
[-100.81388092 291.28848267]
[-86.51837921 286.73580933]
[-72.01961517 282.87908936]
[-57.35145569 279.72738647]
[-42.54815292 277.28802490]
[-27.64428139 275.56671143]
[-12.67465401 274.56747437]
[2.32576966 274.29260254]
[17.32195473 274.74279785]
[32.27887726 275.91699219]
[47.16160583 277.81243896]
[61.93537903 280.42468262]
[65.25763702 265.79724121]
[68.57989502 251.16976929]
[71.90215302 236.54231262]
[75.22441864 221.91484070]
[78.54667664 207.28738403]
[81.86893463 192.65992737]
[84.31465912 177.86065674]
[77.94342804 164.39749146]
[87.07444000 151.47715759]
[88.63496399 136.55854797]
[90.19548798 121.63995361]
[91.75601196 106.72134399]
[92.20261383 91.72799683]
[91.53282928 76.74295807]
[90.86304474 61.75791931]
[87.63268280 55.98935699]
[87.77857208 50.30818558]
[90.40314484 46.31811142]
[90.17981720 31.31977272]
[86.92298126 22.78567314]
[90.06648254 16.09686089]
[90.06648254 1.09686124]
[90.06648254 -13.90313911]
[80.49179840 -29.63231277]
[89.85252380 -44.47629166]
[89.62919617 -59.47462845]
[89.40586853 -74.47296906]
[75.72043610 -81.32625580]
[66.79689789 -93.76124573]
[64.68579865 -108.92046356]
[69.87227631 -123.32043457]
[81.16449738 -133.65214539]
[95.96759796 -137.54144287]
[110.87994385 -134.09461975]
[122.47476959 -124.10369110]
[128.08767700 -109.86452484]
[126.42887115 -94.64917755]
[117.87952423 -81.95401001]
[104.40420532 -74.69629669]
[104.62753296 -59.69795609]
[104.85086060 -44.69961929]
[113.30950165 -36.05219650]
[113.61830902 -23.55866051]
[105.06648254 -13.90313911]
[105.06648254 1.09686124]
[105.06648254 16.09686089]
[105.17815399 31.09644508]
[105.40148163 46.09478378]
[105.84808350 61.08813477]
[106.51786804 76.07317352]
[107.18765259 91.05821228]
[115.48737335 78.56362152]
[128.87818909 71.80447388]
[143.85977173 72.54758453]
[156.51597595 80.59870911]
[163.53848267 93.85330200]
[163.09165955 108.84664154]
[155.29226685 121.65951538]
[142.17907715 128.94265747]
[127.17983246 128.79228210]
[114.21530151 121.24768066]
[106.67461395 108.28186798]
[105.11408997 123.20046997]
[103.55356598 138.11907959]
[101.99304962 153.03768921]
[108.25266266 167.56791687]
[99.23326874 179.42117310]
[110.22936249 169.21893311]
[125.10791779 167.31404114]
[138.31959534 174.41696167]
[144.93676758 187.87849426]
[142.49139404 202.67782593]
[131.89553833 213.29516602]
[117.10118866 215.77050781]
[103.62627411 209.18060303]
[96.49639893 195.98219299]
[93.17413330 210.60964966]
[89.85187531 225.23710632]
[86.52961731 239.86456299]
[83.20735931 254.49203491]
[79.88510132 269.11947632]
[76.56283569 283.74694824]
[91.01555634 287.77276611]
[105.25690460 292.49212646]
[119.25360870 297.89401245]
[132.97297668 303.96585083]
[146.38298035 310.69338989]
[159.45230103 318.06097412]
[172.15039062 326.05139160]
[184.44761658 334.64596558]
[196.31524658 343.82461548]
[207.72555542 353.56591797]
[218.65191650 363.84710693]
[229.06880188 374.64419556]
[238.95187378 385.93194580]
[248.27804565 397.68399048]
[257.02554321 409.87289429]
[265.17395020 422.47018433]
[272.70422363 435.44644165]
[279.59875488 448.77136230]
[285.84149170 462.41381836]
[291.41781616 476.34194946]
[296.31469727 490.52322388]
[300.52072144 504.92453003]
[304.02606201 519.51220703]
[306.82250977 534.25225830]
[308.90356445 549.11016846]
[310.26434326 564.05126953]
[310.90170288 579.04064941]
[310.81411743 594.04333496]
[310.00177002 609.02429199]
[308.46661377 623.94848633]
[306.21221924 638.78106689]
[303.24383545 653.48742676]
[299.56842041 668.03320312]
[295.19451904 682.38439941]
[290.13238525 696.50756836]
[284.39379883 710.36962891]
[277.99221802 723.93823242]
[270.94253540 737.18176270]
[263.26129150 750.06921387]
[254.96633911 762.57049561]
[246.07710266 774.65643311]
[236.61433411 786.29876709]
[226.60014343 797.47033691]
[216.05790710 808.14508057]
[205.01223755 818.29797363]
[193.48895264 827.90539551]
[181.51495361 836.94482422]
[169.11822510 845.39520264]
[156.32769775 853.23681641]
[143.17324829 860.45129395]
[129.68560791 867.02185059]
[115.89626312 872.93304443]
[101.83744049 878.17114258]
[87.54196167 882.72387695]
[73.04321289 886.58068848]
[58.37506866 889.73242188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 139]
[81 137]
[82 136]
[83 135]
[84 134]
[85 123]
[86 122]
[87 121]
[90 120]
[91 119]
[93 118]
[94 117]
[95 116]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
