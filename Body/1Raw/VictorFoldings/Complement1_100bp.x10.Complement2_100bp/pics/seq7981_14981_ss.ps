%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[177.77015686 517.54168701]
[172.25773621 531.53906250]
[164.26693726 544.28515625]
[154.06996155 555.34570312]
[142.01406860 564.34405518]
[128.50991821 570.97369385]
[114.01744080 575.00891113]
[99.03023529 576.31213379]
[84.05877686 574.83905029]
[69.61297607 570.63983154]
[56.18485260 563.85748291]
[44.23176956 554.72302246]
[34.16084290 543.54754639]
[26.31508064 530.71173096]
[20.96170998 516.65270996]
[18.28306198 501.84933472]
[18.37037468 486.80581665]
[21.22067070 472.03454590]
[26.73686981 458.03860474]
[34.73109436 445.29470825]
[44.93106461 434.23690796]
[56.98936844 425.24179077]
[70.49530792 418.61578369]
[84.98887634 414.58450317]
[99.97643280 413.28530884]
[114.94749451 414.76242065]
[119.13450623 400.35864258]
[123.32151794 385.95486450]
[127.50852966 371.55108643]
[131.69554138 357.14730835]
[135.88255310 342.74349976]
[130.78677368 325.95065308]
[144.18484497 313.31842041]
[145.85638428 298.41186523]
[137.55850220 286.04275513]
[144.67187500 271.91085815]
[144.00209045 256.92584229]
[143.33230591 241.94079590]
[142.66252136 226.95574951]
[141.99273682 211.97071838]
[138.34465027 197.42109680]
[131.86514282 183.89274597]
[125.38565063 170.36441040]
[118.90615845 156.83605957]
[112.42665863 143.30770874]
[105.94716644 129.77937317]
[99.46766663 116.25102234]
[88.73607635 111.72617340]
[83.78350830 101.18514252]
[87.15090942 90.03606415]
[80.87355042 76.41275024]
[74.59619141 62.78943253]
[68.31883240 49.16611862]
[62.04146957 35.54280090]
[55.56197357 22.01445580]
[48.88177872 8.58408070]
[42.20158386 -4.84629536]
[35.52138901 -18.27667236]
[34.68006134 -3.30028462]
[28.55189896 10.39079380]
[17.94316864 20.99526787]
[4.24963284 27.11793518]
[-10.72709084 27.95325470]
[-25.01655579 23.39132690]
[-36.73873520 14.03234768]
[-44.35137939 1.10765612]
[-46.85291290 -13.68228436]
[-43.91421127 -28.39160347]
[-35.92191696 -41.08503342]
[-23.92754936 -50.09254074]
[-9.50917625 -54.22903061]
[5.43621683 -52.95027542]
[18.94230843 -46.42451859]
[29.23342896 -35.50833511]
[25.69375610 -50.08470917]
[22.15408516 -64.66108704]
[18.61441231 -79.23745728]
[15.07473946 -93.81383514]
[10.71960354 -79.45999146]
[1.26253152 -67.81681061]
[-11.89357662 -60.61147308]
[-26.79709053 -58.91286469]
[-41.23716354 -62.97295380]
[-53.07169342 -72.18945312]
[-60.54510117 -85.19515228]
[-62.54874802 -100.06072998]
[-58.78541183 -114.58096313]
[-49.81335068 -126.60187531]
[-36.96352386 -134.34020996]
[-22.14212799 -136.64805603]
[-7.54782295 -133.18305969]
[4.65440893 -124.45920563]
[12.65375137 -111.77243042]
[12.20714569 -126.76577759]
[11.76053905 -141.75912476]
[3.61578679 -155.32281494]
[10.97071838 -168.27481079]
[-3.25247192 -173.63851929]
[-14.33696651 -184.04055786]
[-20.59246063 -197.89469910]
[-21.06503487 -213.08828735]
[-15.68262863 -227.30441284]
[-5.26601696 -238.37521362]
[8.59634113 -244.61247253]
[23.79053688 -245.06506348]
[37.99956894 -239.66395569]
[49.05665588 -229.23278809]
[55.27568054 -215.36224365]
[55.70827866 -200.16746521]
[50.28849030 -185.96554565]
[39.84278870 -174.92219543]
[25.96406937 -168.72142029]
[34.07687759 -156.23016357]
[26.75388908 -142.20573425]
[27.20049477 -127.21238708]
[27.64710045 -112.21903992]
[29.65111542 -97.35350800]
[33.19078827 -82.77713013]
[36.73046112 -68.20075989]
[40.27013397 -53.62438202]
[43.80980301 -39.04800797]
[48.95176315 -24.95686531]
[55.63195801 -11.52649021]
[62.31215286 1.90388584]
[68.99234772 15.33426189]
[73.15457153 17.67625618]
[75.88975525 22.65780067]
[75.66478729 29.26544189]
[81.94214630 42.88875580]
[88.21950531 56.51207352]
[94.49686432 70.13539124]
[100.77422333 83.75870514]
[114.71636963 93.08570099]
[112.99600983 109.77152252]
[119.47550964 123.29987335]
[125.95500183 136.82821655]
[132.43449402 150.35656738]
[138.91400146 163.88490295]
[145.39349365 177.41325378]
[151.87298584 190.94160461]
[152.03752136 175.94250488]
[155.37924194 161.31947327]
[161.74613953 147.73777771]
[170.84854126 135.81526184]
[182.27236938 126.09435272]
[195.49790955 119.01727295]
[209.92349243 114.90598297]
[224.89283752 113.94751740]
[239.72494507 116.18547821]
[253.74505615 121.51805878]
[266.31536865 129.70266724]
[276.86395264 140.36694336]
[284.91101074 153.02574158]
[290.09036255 167.10317993]
[292.16644287 181.95881653]
[291.04479980 196.91680908]
[286.77642822 211.29670715]
[279.55554199 224.44427490]
[269.71063232 235.76141357]
[257.68957520 244.73327637]
[244.03924561 250.95167542]
[229.38066101 254.13372803]
[214.38066101 254.13467407]
[199.72164917 250.95448303]
[186.07054138 244.73780823]
[174.04833984 235.76748657]
[164.20199585 224.45158386]
[156.97776794 211.30093384]
[157.64755249 226.28596497]
[158.31733704 241.27101135]
[158.98712158 256.25604248]
[159.65690613 271.24108887]
[168.00270081 284.68200684]
[160.84141541 297.74206543]
[167.00596619 284.06732178]
[176.58886719 272.52749634]
[188.89831543 263.95559692]
[203.04571533 258.97048950]
[218.00971985 257.93203735]
[232.71008301 260.91522217]
[246.08557129 267.70465088]
[257.17059326 277.81021118]
[265.16491699 290.50234985]
[269.49142456 304.86486816]
[269.83776855 319.86087036]
[266.17895508 334.40777588]
[258.77911377 347.45547485]
[248.17243958 358.06204224]
[235.12466431 365.46173096]
[220.57769775 369.12039185]
[205.58171082 368.77386475]
[191.21925354 364.44723511]
[178.52717590 356.45275879]
[168.42173767 345.36764526]
[161.63244629 331.99209595]
[158.64936829 317.29052734]
[164.33906555 328.86593628]
[160.73291016 340.83169556]
[150.28633118 346.93051147]
[146.09931946 361.33432007]
[141.91230774 375.73809814]
[137.72529602 390.14187622]
[133.53828430 404.54565430]
[129.35127258 418.94943237]
[142.78121948 425.72814941]
[154.73677063 434.85940552]
[164.81071472 446.03216553]
[172.65992737 458.86587524]
[178.01708984 472.92346191]
[180.69972229 487.72610474]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[31 199]
[33 196]
[34 174]
[36 172]
[37 171]
[38 170]
[39 169]
[40 168]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 125]
[56 124]
[57 123]
[58 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[93 116]
[94 115]
[95 114]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
