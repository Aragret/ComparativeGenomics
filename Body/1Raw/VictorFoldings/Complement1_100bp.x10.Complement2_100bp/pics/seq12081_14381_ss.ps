%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[110.65557861 673.48852539]
[96.55357361 668.36364746]
[82.77664185 662.42004395]
[69.37226868 655.67816162]
[56.38667297 648.16119385]
[43.86461258 639.89508057]
[31.84925461 630.90832520]
[20.38201714 621.23193359]
[9.50243282 610.89916992]
[-0.75199461 599.94580078]
[-10.34591675 588.40942383]
[-19.24625969 576.32995605]
[-27.42234421 563.74890137]
[-34.84598160 550.70971680]
[-41.49158478 537.25738525]
[-47.33624649 523.43817139]
[-52.35981369 509.29977417]
[-56.54496765 494.89089966]
[-59.87728882 480.26129150]
[-62.34528351 465.46130371]
[-63.94044876 450.54199219]
[-64.65727997 435.55477905]
[-64.49331665 420.55130005]
[-63.44910812 405.58334351]
[-61.52826691 390.70245361]
[-58.73740768 375.95996094]
[-55.08615494 361.40664673]
[-50.58709335 347.09268188]
[-45.25573349 333.06747437]
[-39.11045456 319.37930298]
[-32.17243958 306.07537842]
[-24.46560478 293.20153809]
[-16.01651764 280.80221558]
[-6.85430336 268.92013550]
[2.98945236 257.59622192]
[13.48081589 246.86952209]
[24.58362198 236.77703857]
[36.25959778 227.35356140]
[48.46849060 218.63154602]
[61.16821289 210.64108276]
[74.31499481 203.40971375]
[87.86350250 196.96237183]
[101.76704407 191.32125854]
[115.97768402 186.50584412]
[112.00558472 172.04132080]
[108.03348541 157.57679749]
[104.06139374 143.11227417]
[100.08929443 128.64775085]
[85.78415680 124.87190247]
[75.27060699 114.46231842]
[71.35277557 100.19541168]
[75.07561493 85.87638092]
[85.44618225 75.32434845]
[81.47408295 60.85982132]
[77.50199127 46.39529800]
[73.52989197 31.93077469]
[69.55779266 17.46624947]
[54.81860733 20.29299164]
[39.90307236 21.95458603]
[24.90315056 22.44079399]
[9.91131973 21.74861336]
[-4.97998667 19.88231468]
[-19.67895889 16.85340118]
[-34.09497070 12.68055153]
[-48.13914490 7.38949013]
[-61.72488785 1.01283920]
[-74.76844025 -6.41008615]
[-87.18938446 -14.83352089]
[-98.91113281 -24.20553207]
[-109.86143494 -34.46833420]
[-119.97275543 -45.55865479]
[-129.18276978 -57.40811920]
[-137.43467712 -69.94367218]
[-144.67762756 -83.08802032]
[-150.86692810 -96.76012421]
[-155.96446228 -110.87569427]
[-159.93876648 -125.34770203]
[-162.76536560 -140.08691406]
[-164.42680359 -155.00247192]
[-164.91285706 -170.00239563]
[-164.22052002 -184.99421692]
[-162.35408020 -199.88551331]
[-159.32501221 -214.58444214]
[-155.15200806 -229.00041199]
[-149.86080933 -243.04454041]
[-143.48402405 -256.63021851]
[-136.06095886 -269.67367554]
[-127.63739777 -282.09454346]
[-118.26526642 -293.81619263]
[-108.00235748 -304.76638794]
[-96.91192627 -314.87759399]
[-85.06237030 -324.08749390]
[-72.52674103 -332.33929443]
[-59.38231659 -339.58209229]
[-45.71014786 -345.77127075]
[-31.59452438 -350.86865234]
[-17.12247849 -354.84280396]
[-2.38323402 -357.66925049]
[12.53233528 -359.33053589]
[27.53226852 -359.81643677]
[42.52408600 -359.12396240]
[57.41535187 -357.25735474]
[72.11426544 -354.22814941]
[86.53018951 -350.05499268]
[100.57425690 -344.76364136]
[114.15986633 -338.38671875]
[127.20326996 -330.96353149]
[139.62403870 -322.53982544]
[151.34559631 -313.16757202]
[162.29568481 -302.90457153]
[172.40678406 -291.81402588]
[181.61654663 -279.96438599]
[189.86820984 -267.42864990]
[197.11088562 -254.28416443]
[203.29992676 -240.61193848]
[208.39715576 -226.49626160]
[212.37117004 -212.02416992]
[215.19746399 -197.28489685]
[216.85859680 -182.36930847]
[217.34434509 -167.36936951]
[216.65170288 -152.37756348]
[214.78495789 -137.48631287]
[211.75558472 -122.78743744]
[207.58229065 -108.37155151]
[202.29080200 -94.32754517]
[195.91374207 -80.74199677]
[188.49041748 -67.69866943]
[180.06660461 -55.27798462]
[170.69422913 -43.55651474]
[160.43109131 -32.60653687]
[149.34045410 -22.49555206]
[137.49070740 -13.28590488]
[124.95491028 -5.03437424]
[111.81034088 2.20816517]
[98.13804626 8.39706039]
[84.02231598 13.49415398]
[87.99441528 27.95867729]
[91.96651459 42.42320251]
[95.93860626 56.88772583]
[99.91070557 71.35224915]
[114.21584320 75.12809753]
[124.72939301 85.53768158]
[128.64721680 99.80458832]
[124.92438507 114.12361908]
[114.55381775 124.67565155]
[118.52591705 139.14018250]
[122.49800873 153.60470581]
[126.47010803 168.06922913]
[130.44219971 182.53375244]
[145.11914062 179.41636658]
[159.95372009 177.16571045]
[174.89483643 175.78953552]
[189.89094543 175.29260254]
[204.89038086 175.67660522]
[219.84143066 176.94023132]
[234.69253540 179.07913208]
[249.39253235 182.08592224]
[263.89071655 185.95022583]
[278.13714600 190.65875244]
[292.08267212 196.19525146]
[305.67922974 202.54063416]
[318.87997437 209.67303467]
[331.63934326 217.56785583]
[343.91342163 226.19790649]
[355.65988159 235.53340149]
[366.83819580 245.54219055]
[377.40985107 256.18975830]
[387.33837891 267.43939209]
[396.58959961 279.25231934]
[405.13162231 291.58782959]
[412.93493652 304.40338135]
[419.97271729 317.65481567]
[426.22064209 331.29641724]
[431.65722656 345.28121948]
[436.26370239 359.56094360]
[440.02416992 374.08642578]
[442.92572021 388.80755615]
[444.95828247 403.67358398]
[446.11492920 418.63330078]
[446.39160156 433.63507080]
[445.78738403 448.62725830]
[444.30435181 463.55813599]
[441.94760132 478.37625122]
[438.72528076 493.03048706]
[434.64849854 507.47039795]
[429.73129272 521.64611816]
[423.99060059 535.50885010]
[417.44625854 549.01074219]
[410.12078857 562.10534668]
[402.03942871 574.74743652]
[393.23010254 586.89343262]
[383.72311401 598.50152588]
[373.55126953 609.53167725]
[362.74960327 619.94586182]
[351.35540771 629.70812988]
[339.40789795 638.78491211]
[326.94827271 647.14483643]
[314.01953125 654.75915527]
[300.66616821 661.60156250]
[286.93429565 667.64849854]
[272.87118530 672.87915039]
[258.52532959 677.27545166]
[243.94622803 680.82220459]
[229.18408203 683.50726318]
[214.28979492 685.32135010]
[199.31472778 686.25817871]
[184.31047058 686.31457520]
[169.32878113 685.49023438]
[154.42129517 683.78814697]
[139.63940430 681.21405029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 149]
[45 148]
[46 147]
[47 146]
[48 145]
[53 140]
[54 139]
[55 138]
[56 137]
[57 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
