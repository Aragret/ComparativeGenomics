%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[91.46445465 534.20147705]
[88.27178955 548.91955566]
[81.98941040 562.60699463]
[72.91114807 574.62359619]
[61.46162796 584.40740967]
[48.17634583 591.50073242]
[33.67668915 595.57183838]
[18.64083099 596.43035889]
[3.77202344 594.03607178]
[-10.23429108 588.50097656]
[-22.72301102 580.08398438]
[-33.11001968 569.17871094]
[-40.90949249 556.29528809]
[-45.75663757 542.03631592]
[-47.42474365 527.06860352]
[-45.83579254 512.09234619]
[-41.06409836 497.80789185]
[-33.33284760 484.88342285]
[-23.00364113 473.92343140]
[-10.55959415 465.44052124]
[3.41726112 459.83145142]
[18.27320290 457.35861206]
[33.31338882 458.13757324]
[37.28548813 443.67306519]
[41.25758362 429.20852661]
[45.22967911 414.74401855]
[49.20177460 400.27947998]
[47.94173431 392.99703979]
[53.34218216 385.63000488]
[57.52919388 371.22622681]
[61.71620560 356.82244873]
[65.47250366 342.30038452]
[68.79476929 327.67294312]
[72.11702728 313.04547119]
[66.03074646 296.58569336]
[78.65318298 283.17840576]
[73.71716309 269.12545776]
[84.14279175 257.22518921]
[87.24690247 242.54988098]
[90.35101318 227.87457275]
[93.45512390 213.19927979]
[96.55923462 198.52397156]
[99.66334534 183.84867859]
[102.76744843 169.17337036]
[102.87911987 154.17378235]
[99.99384308 139.45388794]
[97.10857391 124.73400116]
[94.22330475 110.01411438]
[88.30619049 123.79771423]
[76.71968079 133.32414246]
[62.05223846 136.46517944]
[47.58059692 132.51907349]
[36.53776550 122.36743927]
[31.39073563 108.27814484]
[33.28937149 93.39879608]
[41.80950928 81.05345917]
[55.04772949 74.00012970]
[70.04658508 73.81452942]
[83.45528412 80.53812408]
[92.27830505 92.66886902]
[91.83169556 77.67552185]
[91.38508606 62.68217087]
[83.24033356 49.11848450]
[90.59526825 36.16648483]
[90.14866638 21.17313576]
[82.00391388 7.60945082]
[89.35884094 -5.34254694]
[88.91223907 -20.33589745]
[88.46562958 -35.32924652]
[77.24443054 -46.13306427]
[77.00509644 -61.34481430]
[87.37403870 -71.97592926]
[86.92742920 -86.96928406]
[86.48082733 -101.96263123]
[83.09729767 -110.44729614]
[86.14086151 -117.18216705]
[85.91753387 -132.18051147]
[77.97562408 -145.86395264]
[85.52258301 -158.70501709]
[85.29925537 -173.70335388]
[82.24207306 -179.56553650]
[82.55704498 -185.23983765]
[85.29925537 -189.15000916]
[85.52258301 -204.14834595]
[85.74591064 -219.14668274]
[85.96923828 -234.14501953]
[86.19256592 -249.14335632]
[86.41589355 -264.14169312]
[71.63423157 -266.90039062]
[57.53146744 -272.11767578]
[44.51337433 -279.64346313]
[32.95450211 -289.26116943]
[23.18742752 -300.69412231]
[15.49316692 -313.61334229]
[10.09309864 -327.64712524]
[7.14259338 -342.39172363]
[6.72654390 -357.42285156]
[8.85692024 -372.30804443]
[13.47242832 -386.61907959]
[20.44026947 -399.94412231]
[29.55996513 -411.89984131]
[40.56912231 -422.14224243]
[53.15098953 -430.37658691]
[66.94355774 -436.36599731]
[81.54998779 -439.93814087]
[96.55002594 -440.99023438]
[111.51209259 -439.49200439]
[126.00569153 -435.48654175]
[139.61381531 -429.08914185]
[151.94493103 -420.48382568]
[162.64425659 -409.91821289]
[171.40394592 -397.69625854]
[177.97195435 -384.16964722]
[182.15933228 -369.72756958]
[183.84558105 -354.78552246]
[182.98217773 -339.77343750]
[179.59397888 -325.12322998]
[173.77847290 -311.25643921]
[165.70295715 -298.57205200]
[155.59982300 -287.43496704]
[143.75971985 -278.16564941]
[130.52331543 -271.03082275]
[116.27147675 -266.23574829]
[101.41423035 -263.91836548]
[101.19090271 -248.92002869]
[100.96757507 -233.92169189]
[100.74424744 -218.92335510]
[100.52091980 -203.92501831]
[100.29759216 -188.92668152]
[100.29759216 -173.92668152]
[100.52091980 -158.92834473]
[108.44685364 -146.31767273]
[100.91587067 -132.40383911]
[101.13919830 -117.40549469]
[101.47417450 -102.40924072]
[101.92078400 -87.41588593]
[102.36738586 -72.42253876]
[113.35072327 -62.42744064]
[114.01722717 -47.22841263]
[103.45897675 -35.77585220]
[103.90558624 -20.78250313]
[104.35219574 -5.78915310]
[112.46500397 6.70210838]
[105.14201355 20.72653008]
[105.58861542 35.71987915]
[113.70142365 48.21114349]
[106.37844086 62.23556519]
[106.82504272 77.22891235]
[107.27165222 92.22226715]
[108.94319153 107.12883759]
[111.82846832 121.84873199]
[114.71373749 136.56861877]
[117.59900665 151.28851318]
[121.51437378 136.80853271]
[128.41151428 123.48826599]
[137.97666931 111.93370819]
[149.77468872 102.67051697]
[163.26884460 96.12009430]
[177.84521484 92.58044434]
[192.84071350 92.21260834]
[207.57310486 95.03330231]
[221.37219238 100.91421509]
[233.61021423 109.58780670]
[243.73039246 120.65947723]
[251.27233887 133.62554932]
[255.89295959 147.89614868]
[257.38201904 162.82205200]
[255.67181396 177.72424316]
[250.84011841 191.92475891]
[243.10675049 204.77757263]
[232.82351685 215.69798279]
[220.45825195 224.18916321]
[206.57348633 229.86483765]
[191.80088806 232.46678162]
[176.81250000 231.87664795]
[162.29019165 228.12126160]
[148.89465332 221.37149048]
[137.23527527 211.93438721]
[127.84249878 200.23927307]
[121.14360809 186.81820679]
[117.44275665 172.27748108]
[114.33864594 186.95278931]
[111.23453522 201.62808228]
[108.13042450 216.30339050]
[105.02631378 230.97868347]
[101.92220306 245.65399170]
[98.81809235 260.32928467]
[103.53208923 275.43191528]
[93.32848358 286.28250122]
[99.69707489 297.49874878]
[96.80953217 309.65792847]
[86.74448395 316.36773682]
[83.42222595 330.99520874]
[80.09996796 345.62265015]
[81.53111267 349.72213745]
[81.57852936 353.66705322]
[80.46073151 357.04135132]
[78.50888824 359.54272461]
[76.11998749 361.00946045]
[71.93297577 375.41323853]
[67.74596405 389.81701660]
[63.66629791 404.25158691]
[59.69420242 418.71609497]
[55.72210693 433.18063354]
[51.75001144 447.64514160]
[47.77791595 462.10968018]
[61.10662460 469.12106323]
[72.61618805 478.83413696]
[81.76827240 490.79464722]
[88.13483429 504.44311523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 206]
[24 205]
[25 204]
[26 203]
[27 202]
[29 201]
[30 200]
[31 199]
[32 194]
[33 193]
[34 192]
[36 189]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 153]
[46 152]
[47 151]
[48 150]
[60 149]
[61 148]
[62 147]
[64 145]
[65 144]
[67 142]
[68 141]
[69 140]
[72 137]
[73 136]
[74 135]
[76 134]
[77 133]
[79 131]
[80 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
