%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[133.08822632 367.28094482]
[130.80328369 352.44747925]
[129.73500061 337.47711182]
[129.89051819 322.46948242]
[131.26878357 307.52447510]
[133.86062622 292.74154663]
[137.64880371 278.21905518]
[142.60810852 264.05368042]
[148.70552063 250.33966064]
[155.90046692 237.16827393]
[164.14508057 224.62716675]
[173.38447571 212.79981995]
[183.55717468 201.76492310]
[173.39363098 190.73304749]
[163.23008728 179.70117188]
[153.06654358 168.66929626]
[138.22026062 168.31809998]
[127.75582123 157.27499390]
[128.22483826 141.70521545]
[118.06129456 130.67333984]
[107.89774323 119.64146423]
[95.26165009 120.63273621]
[84.32411957 114.22772980]
[79.00595856 102.72248077]
[81.21358490 90.24129486]
[71.21541595 79.05931854]
[63.16249847 74.74789429]
[61.15314484 67.63563538]
[51.32256317 56.30604172]
[41.49198151 44.97644806]
[31.66140175 33.64685440]
[21.83082008 22.31726265]
[12.00024033 10.98766899]
[2.16965914 -0.34192434]
[-7.66092157 -11.67151737]
[-17.49150276 -23.00111008]
[-27.32208252 -34.33070374]
[-39.31461716 -25.31051445]
[-51.90715790 -17.14885712]
[-65.03835297 -9.88549805]
[-78.64423370 -3.55582166]
[-92.65850830 1.80933297]
[-107.01290131 6.18382740]
[-121.63747406 9.54634953]
[-136.46098328 11.88051796]
[-151.41120911 13.17495918]
[-166.41529846 13.42336845]
[-181.40017700 12.62453365]
[-196.29283142 10.78234863]
[-211.02070618 7.90578699]
[-225.51203918 4.00886393]
[-239.69622803 -0.88943517]
[-253.50418091 -6.76524591]
[-266.86862183 -13.58994198]
[-279.72442627 -21.33027458]
[-292.00900269 -29.94853210]
[-303.66244507 -39.40272522]
[-314.62802124 -49.64679718]
[-324.85229492 -60.63083649]
[-334.28543091 -72.30133057]
[-342.88150024 -84.60142517]
[-350.59863281 -97.47119141]
[-357.39916992 -110.84792328]
[-363.25006104 -124.66645813]
[-368.12274170 -138.85946655]
[-371.99353027 -153.35781860]
[-374.84350586 -168.09085083]
[-376.65878296 -182.98680115]
[-377.43057251 -197.97309875]
[-377.15509033 -212.97673035]
[-375.83367920 -227.92459106]
[-373.47274780 -242.74386597]
[-370.08383179 -257.36233521]
[-365.68344116 -271.70880127]
[-360.29299927 -285.71337891]
[-353.93878174 -299.30780029]
[-346.65173340 -312.42587280]
[-338.46737671 -325.00366211]
[-329.42556763 -336.97991943]
[-319.57034302 -348.29623413]
[-308.94973755 -358.89755249]
[-297.61547852 -368.73214722]
[-285.62283325 -377.75216675]
[-273.03018188 -385.91363525]
[-259.89886475 -393.17681885]
[-246.29289246 -399.50628662]
[-232.27854919 -404.87124634]
[-217.92410278 -409.24554443]
[-203.29946899 -412.60784912]
[-188.47593689 -414.94180298]
[-173.52569580 -416.23605347]
[-158.52159119 -416.48422241]
[-143.53672791 -415.68518066]
[-128.64408875 -413.84277344]
[-113.91626740 -410.96600342]
[-99.42498779 -407.06887817]
[-85.24086761 -402.17037964]
[-71.43299866 -396.29437256]
[-58.06865311 -389.46948242]
[-45.21295166 -381.72897339]
[-32.92851639 -373.11053467]
[-21.27519989 -363.65618896]
[-10.30977631 -353.41195679]
[-0.08566924 -342.42776489]
[9.34731007 -330.75714111]
[17.94320679 -318.45690918]
[25.66013908 -305.58703613]
[32.46051025 -292.21020508]
[38.31119537 -278.39157104]
[43.18368149 -264.19851685]
[47.05423737 -249.70010376]
[49.90400314 -234.96702576]
[51.71909332 -220.07104492]
[52.49066544 -205.08474731]
[52.21496201 -190.08111572]
[50.89332581 -175.13327026]
[48.53219604 -160.31404114]
[45.14307785 -145.69560242]
[40.74247742 -131.34919739]
[35.35183716 -117.34470367]
[28.99741936 -103.75036621]
[21.71018600 -90.63240051]
[13.52563477 -78.05473328]
[4.48364353 -66.07862091]
[-5.37173653 -54.76243210]
[-15.99248981 -44.16128540]
[-6.16190910 -32.83169174]
[3.66867161 -21.50209808]
[13.49925232 -10.17250538]
[23.32983398 1.15708792]
[33.16041565 12.48668098]
[42.99099350 23.81627464]
[52.82157516 35.14586639]
[62.65215683 46.47546005]
[72.48273468 57.80505371]
[82.39739227 69.06114960]
[92.39556122 80.24312592]
[108.89015198 80.78733063]
[119.98180389 93.00792694]
[118.92962646 109.47792053]
[129.09317017 120.50979614]
[139.25671387 131.54167175]
[154.81268311 132.34780884]
[164.96281433 143.68048096]
[164.09841919 158.50575256]
[174.26196289 169.53762817]
[184.42550659 180.56950378]
[194.58906555 191.60137939]
[206.41908264 182.36540222]
[218.96257019 174.12442017]
[232.13604736 166.93328857]
[245.85182190 160.83984375]
[260.01864624 155.88464355]
[274.54223633 152.10066223]
[289.32589722 149.51310730]
[304.27130127 148.13916016]
[319.27899170 147.98799133]
[334.24902344 149.06059265]
[349.08181763 151.34983826]
[363.67868042 154.84048462]
[377.94244385 159.50930786]
[391.77819824 165.32522583]
[405.09384155 172.24954224]
[417.80078125 180.23619080]
[429.81445312 189.23197937]
[441.05493164 199.17709351]
[451.44735718 210.00531006]
[460.92257690 221.64457703]
[469.41757202 234.01744080]
[476.87579346 247.04156494]
[483.24758911 260.63027954]
[488.49057007 274.69314575]
[492.56985474 289.13653564]
[495.45828247 303.86441040]
[497.13662720 318.77868652]
[497.59375000 333.78015137]
[496.82656860 348.76895142]
[494.84017944 363.64535522]
[491.64785767 378.31033325]
[487.27081299 392.66632080]
[481.73815918 406.61776733]
[475.08676147 420.07180786]
[467.36083984 432.93893433]
[458.61184692 445.13351440]
[448.89794922 456.57437134]
[438.28387451 467.18539429]
[426.84017944 476.89596558]
[414.64306641 485.64144897]
[401.77371216 493.36364746]
[388.31774902 500.01116943]
[374.36468506 505.53976440]
[360.00744629 509.91265869]
[345.34155273 513.10070801]
[330.46456909 515.08282471]
[315.47555542 515.84564209]
[300.47421265 515.38421631]
[285.56042480 513.70153809]
[270.83340454 510.80883789]
[256.39117432 506.72537231]
[242.32981873 501.47833252]
[228.74296570 495.10260010]
[215.72099304 487.64059448]
[203.35058594 479.14202881]
[191.71406555 469.66342163]
[180.88885498 459.26785278]
[170.94700623 448.02453613]
[161.95468140 436.00823975]
[153.97172546 423.29901123]
[147.05125427 409.98135376]
[141.23933411 396.14392090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 148]
[14 147]
[15 146]
[16 145]
[19 142]
[20 141]
[21 140]
[25 137]
[26 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 128]
[36 127]
[37 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
