%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[102.57349396 270.53509521]
[111.58934021 258.48889160]
[122.72220612 248.36683655]
[135.56962585 240.53483582]
[130.32290649 226.48237610]
[125.07619476 212.42990112]
[113.37588501 203.21295166]
[115.79739380 187.57815552]
[109.65074158 201.26094055]
[96.20223999 207.90457153]
[81.60035706 204.47164917]
[72.52087402 192.53167725]
[73.11480713 177.54344177]
[83.11062622 166.35935974]
[97.93836975 164.09265137]
[110.82017517 171.78105164]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[76.34758759 82.01330566]
[72.74504089 67.23236847]
[80.50183105 54.56872940]
[76.74553680 40.04666901]
[61.82844925 37.00661850]
[49.75973511 27.82875633]
[42.90073013 14.37609005]
[42.56415939 -0.65879393]
[48.76323318 -14.29261017]
[60.21963501 -23.84333229]
[56.46333694 -38.36539078]
[52.70703506 -52.88745117]
[48.95073318 -67.40950775]
[45.19443512 -81.93157196]
[41.43813324 -96.45362854]
[37.68183136 -110.97568512]
[33.92553329 -125.49774933]
[22.97892380 -136.92063904]
[27.28252792 -151.17996216]
[23.52622795 -165.70201111]
[19.76992607 -180.22407532]
[16.01362610 -194.74613953]
[12.25732517 -209.26818848]
[8.50102520 -223.79025269]
[-6.22760344 -220.92523193]
[-21.10349846 -218.96345520]
[-36.07132339 -217.91221619]
[-51.07539368 -217.77543640]
[-66.05989838 -218.55363464]
[-80.96908569 -220.24388123]
[-95.74749756 -222.83992004]
[-110.34014893 -226.33209229]
[-124.69277191 -230.70739746]
[-138.75195312 -235.94953918]
[-152.46540833 -242.03906250]
[-165.78210449 -248.95327759]
[-178.65251160 -256.66647339]
[-191.02876282 -265.14993286]
[-202.86479187 -274.37216187]
[-214.11659241 -284.29879761]
[-224.74229431 -294.89291382]
[-234.70236206 -306.11511230]
[-243.95974731 -317.92364502]
[-252.48002625 -330.27459717]
[-260.23150635 -343.12197876]
[-267.18530273 -356.41806030]
[-273.31561279 -370.11331177]
[-278.59957886 -384.15682983]
[-283.01757812 -398.49636841]
[-286.55316162 -413.07855225]
[-289.19317627 -427.84918213]
[-290.92779541 -442.75326538]
[-291.75057983 -457.73538208]
[-291.65844727 -472.73980713]
[-290.65176392 -487.71069336]
[-288.73428345 -502.59234619]
[-285.91308594 -517.32946777]
[-282.19873047 -531.86712646]
[-277.60498047 -546.15136719]
[-272.14898682 -560.12890625]
[-265.85098267 -573.74786377]
[-258.73443604 -586.95758057]
[-250.82580566 -599.70880127]
[-242.15451050 -611.95422363]
[-232.75282288 -623.64819336]
[-222.65570068 -634.74725342]
[-211.90072632 -645.21008301]
[-200.52789307 -654.99780273]
[-188.57951355 -664.07397461]
[-176.10003662 -672.40484619]
[-163.13587952 -679.95947266]
[-149.73529053 -686.70959473]
[-135.94810486 -692.63031006]
[-121.82560730 -697.69940186]
[-107.42034912 -701.89813232]
[-92.78591156 -705.21087646]
[-77.97673798 -707.62524414]
[-63.04792023 -709.13232422]
[-48.05499268 -709.72644043]
[-33.05373383 -709.40545654]
[-18.09994507 -708.17053223]
[-3.24925852 -706.02624512]
[11.44307995 -702.98059082]
[25.92241478 -699.04486084]
[40.13488007 -694.23376465]
[54.02760315 -688.56518555]
[67.54890442 -682.06018066]
[80.64848328 -674.74291992]
[93.27761078 -666.64068604]
[105.38929749 -657.78363037]
[116.93849182 -648.20465088]
[127.88223267 -637.93939209]
[138.17980957 -627.02606201]
[147.79289246 -615.50524902]
[156.68574524 -603.41979980]
[164.82528687 -590.81469727]
[172.18122864 -577.73675537]
[178.72619629 -564.23480225]
[184.43585205 -550.35888672]
[189.28895569 -536.16070557]
[193.26745605 -521.69305420]
[196.35655212 -507.00979614]
[198.54475403 -492.16552734]
[199.82389832 -477.21545410]
[200.18925476 -462.21520996]
[199.63946533 -447.22058105]
[198.17654419 -432.28738403]
[195.80596924 -417.47113037]
[192.53652954 -402.82696533]
[188.38041687 -388.40933228]
[183.35305786 -374.27191162]
[177.47319031 -360.46728516]
[170.76266479 -347.04678345]
[163.24645996 -334.06036377]
[154.95251465 -321.55630493]
[145.91171265 -309.58114624]
[136.15766907 -298.17941284]
[125.72666168 -287.39352417]
[114.65750885 -277.26364136]
[102.99138641 -267.82742310]
[90.77169037 -259.11996460]
[78.04387665 -251.17364502]
[64.85530853 -244.01806641]
[51.25502777 -237.67982483]
[37.29364014 -232.18251038]
[23.02308464 -227.54655457]
[26.77938461 -213.02449036]
[30.53568459 -198.50242615]
[34.29198456 -183.98037720]
[38.04828644 -169.45831299]
[41.80458832 -154.93624878]
[52.48252106 -144.55207825]
[48.44758987 -129.25404358]
[52.20389175 -114.73198700]
[55.96019363 -100.20993042]
[59.71649170 -85.68787384]
[63.47279358 -71.16580963]
[67.22909546 -56.64375305]
[70.98539734 -42.12169266]
[74.74169922 -27.59963417]
[89.39220428 -24.80176926]
[101.42457581 -15.88373089]
[108.42036438 -2.57133102]
[108.94458008 12.51990414]
[102.83970642 26.39857674]
[91.26759338 36.29036713]
[95.02389526 50.81242752]
[107.94819641 58.12665558]
[111.96449280 72.80058289]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[125.34223175 168.02474976]
[129.84986877 182.33143616]
[141.92544556 192.55351257]
[139.12866211 207.18318176]
[144.37538147 221.23565674]
[149.62210083 235.28811646]
[164.45870972 232.78382874]
[179.50114441 233.13291931]
[194.20561218 236.32275391]
[208.04055786 242.23802185]
[220.50587463 250.66491699]
[231.15093994 261.29876709]
[239.59094238 273.75521851]
[245.52076721 287.58395386]
[248.72607422 302.28506470]
[249.09098816 317.32711792]
[246.60231018 332.16635132]
[241.35000610 346.26632690]
[233.52395630 359.11737061]
[223.40704346 370.25491333]
[211.36502075 379.27633667]
[197.83317566 385.85549927]
[183.30067444 389.75460815]
[168.29286194 390.83270264]
[153.35227966 389.05078125]
[139.01898193 384.47329712]
[125.81114960 377.26568604]
[114.20621490 367.68850708]
[104.62369537 356.08801270]
[97.40998840 342.88351440]
[92.82586670 328.55233765]
[91.03704834 313.61257935]
[92.10818481 298.60427856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[8 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[22 172]
[25 169]
[26 168]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
