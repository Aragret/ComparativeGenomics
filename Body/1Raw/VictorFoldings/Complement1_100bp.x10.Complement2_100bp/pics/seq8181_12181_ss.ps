%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[140.24952698 543.01092529]
[150.36949158 531.74749756]
[163.59959412 524.38244629]
[160.93379211 509.62124634]
[151.05776978 498.47164917]
[156.21934509 483.51608276]
[153.55354309 468.75485229]
[150.88775635 453.99365234]
[141.01173401 442.84405518]
[146.17330933 427.88848877]
[143.50750732 413.12725830]
[140.84170532 398.36605835]
[138.17591858 383.60482788]
[135.51011658 368.84362793]
[132.84432983 354.08239746]
[123.08892822 346.92987061]
[120.74720001 334.65386963]
[127.61026764 323.73318481]
[125.16454315 308.93392944]
[122.71881104 294.13464355]
[108.94007111 291.47274780]
[96.87187195 284.25216675]
[87.97432709 273.32269287]
[83.33202362 259.98434448]
[83.52185822 245.83265686]
[88.54141998 232.56776428]
[97.80681610 221.79031372]
[110.22054291 214.80816650]
[107.99542999 199.97412109]
[105.77030945 185.14007568]
[96.23063660 173.70138550]
[101.83519745 158.90612793]
[87.89593506 149.49679565]
[85.01818085 132.58427429]
[95.46420288 118.55216217]
[83.74656677 110.02906799]
[81.38407135 95.73344421]
[89.73652649 83.89356232]
[87.29079437 69.09429169]
[84.84506989 54.29502106]
[82.39934540 39.49575043]
[79.95361328 24.69647980]
[77.50788879 9.89720821]
[62.47019958 9.38752365]
[47.82559967 5.95486069]
[34.13650894 -0.26702648]
[21.92827606 -9.03730297]
[11.66901207 -20.01737404]
[3.75165081 -32.78395462]
[-1.52110565 -46.84539413]
[-3.94835997 -61.66059875]
[-3.43867207 -76.65986633]
[-0.01350314 -91.26677704]
[6.19368124 -104.92036438]
[14.94261169 -117.09665680]
[25.89551163 -127.32875061]
[38.63014603 -135.22476196]
[52.65608597 -140.48281860]
[50.21035767 -155.28208923]
[47.76462936 -170.08135986]
[45.31890106 -184.88063049]
[42.43363190 -199.60052490]
[39.00256729 -214.20285034]
[35.46289825 -228.77922058]
[31.92322350 -243.35559082]
[28.38355255 -257.93197632]
[24.84387970 -272.50833130]
[21.19579124 -287.05795288]
[17.43949127 -301.58001709]
[13.68319035 -316.10208130]
[2.73658156 -327.52496338]
[7.04018641 -341.78430176]
[3.28388572 -356.30636597]
[-0.47241485 -370.82839966]
[-4.22871542 -385.35046387]
[-7.98501635 -399.87252808]
[-13.51943684 -385.93084717]
[-25.22164345 -376.54690552]
[-40.03270721 -374.17364502]
[-54.08104706 -379.43139648]
[-63.69446945 -390.94583130]
[-66.36003876 -405.70709229]
[-61.38098907 -419.85662842]
[-50.05883026 -429.69577026]
[-35.35314560 -432.65258789]
[-21.10796738 -427.95419312]
[-11.04735756 -416.82952881]
[-12.60788059 -431.74813843]
[-14.16840363 -446.66674805]
[-25.49780273 -436.83593750]
[-40.27461624 -439.41387939]
[-47.60592651 -452.50018311]
[-42.08736420 -466.44815063]
[-27.78701019 -470.97583008]
[-15.24740887 -462.74700928]
[-15.69401455 -477.74035645]
[-16.14062119 -492.73370361]
[-16.58722687 -507.72705078]
[-30.55077934 -513.89001465]
[-40.45096970 -525.50677490]
[-44.32210541 -540.27081299]
[-41.39557266 -555.25073242]
[-32.25243378 -567.47222900]
[-18.70806694 -574.50878906]
[-3.45171595 -574.96325684]
[10.48745918 -568.74536133]
[20.34182549 -557.08966064]
[24.15479279 -542.31048584]
[21.16929054 -527.34222412]
[11.97809505 -515.15679932]
[-1.59387636 -508.17364502]
[-1.14727044 -493.18029785]
[-0.70066446 -478.18695068]
[-0.25405854 -463.19360352]
[0.75020158 -448.22726440]
[2.31072450 -433.30865479]
[3.87124753 -418.39004517]
[6.53704309 -403.62884521]
[10.29334354 -389.10678101]
[14.04964447 -374.58471680]
[17.80594444 -360.06265259]
[21.56224632 -345.54058838]
[32.24017715 -335.15643311]
[28.20524979 -319.85839844]
[31.96154976 -305.33633423]
[35.71784973 -290.81427002]
[40.43620300 -285.12576294]
[39.42025375 -276.04800415]
[42.95992661 -261.47164917]
[46.49959946 -246.89526367]
[50.03927231 -232.31889343]
[53.57894516 -217.74252319]
[58.21208191 -211.98440552]
[57.06108856 -202.92277527]
[59.35845184 -201.31646729]
[61.15795135 -198.70333862]
[62.07292557 -195.26847839]
[61.79078674 -191.33338928]
[60.11817169 -187.32635498]
[62.56389999 -172.52708435]
[65.00962830 -157.72781372]
[67.45535278 -142.92854309]
[82.42723083 -142.46267700]
[97.02517700 -139.08363342]
[110.68772125 -132.91949463]
[122.88899231 -124.20543671]
[133.15895081 -113.27485657]
[141.10153198 -100.54657745]
[146.40988159 -86.50880432]
[148.87823486 -71.70038605]
[148.40985107 -56.69017029]
[145.02088928 -42.05510330]
[138.83976746 -28.35809517]
[130.10232544 -16.12633705]
[119.14286804 -5.83103037]
[106.38131714 2.13077235]
[92.30715942 7.45148087]
[94.75288391 22.25075150]
[97.19861603 37.05002213]
[99.64434052 51.84929276]
[102.09006500 66.64856720]
[104.53579712 81.44783783]
[116.25343323 89.97093201]
[118.61592865 104.26655579]
[110.26347351 116.10643768]
[122.04307556 122.63756561]
[127.82593536 134.58616638]
[125.70255280 147.49249268]
[116.66924286 156.68101501]
[126.36807251 169.18074036]
[120.60435486 182.91496277]
[122.82947540 197.74900818]
[125.05458832 212.58305359]
[140.68193054 216.36386108]
[153.63081360 225.82943726]
[161.93588257 239.50646973]
[164.35073853 255.28532410]
[160.53482056 270.74539185]
[151.10115051 283.52642822]
[137.51808167 291.68893433]
[139.96380615 306.48818970]
[142.40953064 321.28747559]
[154.42071533 335.24502563]
[147.60554504 351.41659546]
[150.27133179 366.17782593]
[152.93713379 380.93902588]
[155.60293579 395.70025635]
[158.26872253 410.46148682]
[160.93452454 425.22268677]
[171.00122070 437.42810059]
[165.64897156 451.32785034]
[168.31475830 466.08908081]
[170.98056030 480.85028076]
[181.04725647 493.05569458]
[175.69500732 506.95544434]
[178.36080933 521.71667480]
[193.33131409 523.98883057]
[206.75175476 531.00097656]
[217.16639709 541.99249268]
[223.44551086 555.77117920]
[224.90802002 570.84234619]
[221.39524841 585.57116699]
[213.28825378 598.36004639]
[201.46641541 607.82171631]
[187.21208191 612.92980957]
[172.07145691 613.13024902]
[157.68687439 608.40136719]
[145.61868286 599.25598145]
[137.17593384 586.68627930]
[133.27444458 572.05554199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[6 193]
[7 192]
[8 191]
[10 189]
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[18 182]
[19 181]
[20 180]
[28 173]
[29 172]
[30 171]
[32 169]
[35 165]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[58 142]
[59 141]
[60 140]
[61 139]
[62 134]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 126]
[69 125]
[70 124]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[87 117]
[88 116]
[89 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
