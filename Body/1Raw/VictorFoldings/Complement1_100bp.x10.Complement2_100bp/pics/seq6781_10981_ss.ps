%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[169.93226624 499.89288330]
[173.89230347 485.31570435]
[181.79998779 472.44537354]
[193.01426697 462.32525635]
[206.62605286 455.77575684]
[204.18032837 440.97647095]
[201.73460388 426.17721558]
[199.28886414 411.37792969]
[196.84313965 396.57867432]
[194.39741516 381.77938843]
[190.85774231 367.20303345]
[179.58065796 357.47283936]
[182.69789124 341.96176147]
[178.08387756 327.68902588]
[173.46986389 313.41629028]
[162.19279480 303.68609619]
[165.31001282 288.17501831]
[160.69599915 273.90228271]
[156.08198547 259.62954712]
[151.46798706 245.35681152]
[146.85397339 231.08407593]
[141.60725403 217.03160095]
[129.50706482 208.34629822]
[131.22801208 192.61895752]
[125.35905457 178.81478882]
[119.49009705 165.01060486]
[113.62113190 151.20643616]
[107.75217438 137.40225220]
[92.86261749 137.52442932]
[79.05765533 131.94438171]
[68.43510437 121.51005554]
[62.60915756 107.80705261]
[62.46513748 92.91769409]
[68.02492523 79.10456085]
[78.44364929 68.46670532]
[72.57469177 54.66252518]
[66.70572662 40.85834885]
[60.83676529 27.05417252]
[54.96780777 13.24999619]
[49.92376709 8.97574902]
[48.07327271 3.60241628]
[49.13639832 -1.05363452]
[36.90995789 -11.09478664]
[39.48862076 -25.76447487]
[27.26218033 -35.80562592]
[29.84084129 -50.47531509]
[24.38548470 -64.44811249]
[22.87847900 -49.52400970]
[17.28131866 -35.60740662]
[8.03541756 -23.79583168]
[-4.13005352 -15.02079201]
[-18.25567436 -9.97432423]
[-33.22743988 -9.05441475]
[-47.86461258 -12.33361053]
[-61.01284790 -19.55330086]
[-71.63521576 -30.14410973]
[-78.89399719 -43.27080536]
[-82.21673584 -57.89815521]
[-81.34137726 -72.87259674]
[-76.33696747 -87.01316833]
[-67.59815979 -99.20469666]
[-55.81415176 -108.48570251]
[-41.91426468 -114.12424469]
[-26.99471092 -115.67565155]
[-12.23210239 -113.01757050]
[1.20931649 -106.35961914]
[12.26950073 -96.22688293]
[20.07756805 -83.41528320]
[11.33528996 -96.60176086]
[18.10454750 -109.86925507]
[16.98889923 -124.82770538]
[15.87325096 -139.78616333]
[14.75760269 -154.74461365]
[13.64195347 -169.70306396]
[12.52630520 -184.66151428]
[5.64628601 -171.33239746]
[-6.00925159 -161.89056396]
[-20.47614479 -157.92709351]
[-35.31646729 -160.10993958]
[-48.02936554 -168.07124329]
[-56.47249222 -180.46936035]
[-59.22303391 -195.21502686]
[-55.81747055 -209.82331848]
[-46.82970428 -221.83248901]
[-33.77433014 -229.21876526]
[-18.85140991 -230.73745728]
[-4.57571507 -226.13261414]
[6.64704800 -216.18025208]
[12.92601681 -202.55589294]
[14.70848274 -217.44961548]
[16.49094963 -232.34332275]
[18.27341461 -247.23704529]
[20.05588150 -262.13076782]
[21.83834648 -277.02447510]
[23.62081337 -291.91818237]
[25.40327835 -306.81192017]
[27.18574524 -321.70562744]
[28.96821022 -336.59933472]
[14.95720863 -342.19882202]
[2.87345648 -351.23461914]
[-6.45915747 -363.09060669]
[-12.40431881 -376.95846558]
[-14.55667686 -391.89266968]
[-12.76948071 -406.87490845]
[-7.16458464 -420.88375854]
[1.87586141 -432.96401978]
[13.73546410 -442.29205322]
[27.60561562 -448.23187256]
[42.54062653 -450.37844849]
[57.52220154 -448.58547974]
[71.52887726 -442.97515869]
[83.60564423 -433.93005371]
[92.92910004 -422.06686401]
[98.86355591 -408.19442749]
[101.00437927 -393.25857544]
[99.20561218 -378.27767944]
[93.58989716 -364.27319336]
[84.54013062 -352.19992065]
[72.67332458 -342.88104248]
[58.79859161 -336.95193481]
[43.86192703 -334.81689453]
[42.07946014 -319.92315674]
[40.29699707 -305.02944946]
[38.51453018 -290.13574219]
[36.73206329 -275.24200439]
[34.94959641 -260.34829712]
[33.16713333 -245.45457458]
[31.38466644 -230.56086731]
[29.60219955 -215.66714478]
[27.81973457 -200.77342224]
[27.48475838 -185.77716064]
[28.60040665 -170.81871033]
[29.71605492 -155.86026001]
[30.83170509 -140.90180969]
[31.94735336 -125.94335175]
[33.06300354 -110.98490143]
[41.72548294 -98.86835480]
[35.03602219 -84.53092957]
[38.35828018 -69.90347290]
[43.81364059 -55.93067551]
[55.64987564 -46.88895035]
[53.46141815 -31.21983337]
[65.29765320 -22.17810822]
[63.10919571 -6.50899172]
[68.77198029 7.38103533]
[74.64094543 21.18521309]
[80.50990295 34.98938751]
[86.37886810 48.79356766]
[92.24782562 62.59774399]
[107.13738251 62.47557068]
[120.94234467 68.05561829]
[131.56489563 78.48994446]
[137.39083862 92.19294739]
[137.53486633 107.08230591]
[131.97508240 120.89543915]
[121.55635071 131.53329468]
[127.42530823 145.33747864]
[133.29426575 159.14164734]
[139.16323853 172.94583130]
[145.03219604 186.75000000]
[157.55216980 196.42268372]
[155.41142273 211.16264343]
[162.01231384 197.69309998]
[176.15898132 192.70596313]
[189.74760437 199.05809021]
[194.99398804 213.11068726]
[188.89276123 226.81379700]
[174.93899536 232.31764221]
[161.12670898 226.47006226]
[165.74070740 240.74279785]
[170.35472107 255.01553345]
[174.96873474 269.28826904]
[179.58274841 283.56100464]
[191.18984985 294.31207275]
[187.74259949 308.80227661]
[192.35661316 323.07501221]
[196.97061157 337.34774780]
[208.57772827 348.09881592]
[205.13047791 362.58901978]
[209.82525635 348.34265137]
[220.94818115 338.27880859]
[235.59172058 335.02816772]
[249.92810059 339.44046021]
[260.20983887 350.36227417]
[263.74929810 364.93869019]
[259.62124634 379.35949707]
[248.90480042 389.85510254]
[234.40118408 393.68197632]
[219.90161133 389.83981323]
[209.19668579 379.33367920]
[211.64241028 394.13293457]
[214.08813477 408.93222046]
[216.53387451 423.73147583]
[218.97959900 438.53076172]
[221.42532349 453.33001709]
[236.42056274 455.15194702]
[250.29455566 461.12594604]
[261.92260742 470.76779175]
[270.36206055 483.29586792]
[274.92880249 497.69451904]
[275.25256348 512.79656982]
[271.30718994 527.37774658]
[263.41244507 540.25598145]
[252.20832825 550.38739014]
[238.60311890 556.95056152]
[223.69975281 559.41351318]
[208.70634460 557.57653809]
[194.83836365 551.58856201]
[183.22000122 541.93505859]
[174.79313660 529.39849854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[10 190]
[11 179]
[13 177]
[14 176]
[15 175]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 162]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[42 144]
[44 142]
[46 140]
[47 139]
[68 138]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
