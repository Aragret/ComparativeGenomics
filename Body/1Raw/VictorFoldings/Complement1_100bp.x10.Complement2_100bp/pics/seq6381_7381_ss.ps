%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[41.78834915 872.48052979]
[26.79616356 873.06658936]
[11.79413605 872.84698486]
[-3.17447877 871.82250977]
[-18.06652260 869.99603271]
[-32.83905792 867.37280273]
[-47.44948959 863.96038818]
[-61.85569382 859.76873779]
[-76.01613617 854.80981445]
[-89.88997650 849.09790039]
[-103.43723297 842.64959717]
[-116.61882782 835.48339844]
[-129.39675903 827.61993408]
[-141.73419189 819.08197021]
[-153.59553528 809.89410400]
[-164.94660950 800.08276367]
[-175.75468445 789.67626953]
[-185.98858643 778.70465088]
[-195.61882019 767.19958496]
[-204.61761475 755.19409180]
[-212.95901489 742.72296143]
[-220.61898804 729.82202148]
[-227.57542419 716.52850342]
[-233.80828857 702.88079834]
[-239.29960632 688.91815186]
[-244.03353882 674.68096924]
[-247.99642944 660.21014404]
[-251.17686462 645.54748535]
[-253.56567383 630.73522949]
[-255.15597534 615.81610107]
[-255.94316101 600.83312988]
[-255.92497253 585.82952881]
[-255.10147095 570.84851074]
[-253.47502136 555.93328857]
[-251.05032349 541.12683105]
[-247.83435059 526.47192383]
[-243.83639526 512.01074219]
[-239.06797791 497.78503418]
[-233.54283142 483.83578491]
[-227.27690125 470.20321655]
[-220.28826904 456.92660522]
[-212.59704590 444.04428101]
[-204.22544861 431.59338379]
[-195.19758606 419.60977173]
[-185.53948975 408.12802124]
[-175.27902222 397.18127441]
[-164.44575500 386.80102539]
[-153.07093811 377.01724243]
[-141.18734741 367.85812378]
[-128.82926941 359.35006714]
[-116.03231049 351.51763916]
[-102.83338928 344.38339233]
[-89.27054596 337.96792603]
[-75.38289642 332.28970337]
[-61.21047974 327.36508179]
[-46.79415894 323.20834351]
[-32.17549896 319.83139038]
[-17.39664841 317.24395752]
[-2.50022125 315.45358276]
[12.47083282 314.46536255]
[27.47334862 314.28216553]
[42.46406937 314.90451050]
[57.39977264 316.33062744]
[59.62489319 301.49658203]
[61.85000992 286.66253662]
[52.81669617 277.47402954]
[50.69332123 264.56768799]
[56.47618103 252.61909485]
[68.25577545 246.08796692]
[70.70150757 231.28869629]
[73.14723206 216.48942566]
[75.59295654 201.69015503]
[78.03868866 186.89088440]
[80.48441315 172.09161377]
[82.93014526 157.29234314]
[74.07448578 145.37123108]
[76.34397888 130.32781982]
[88.90798187 121.12002563]
[91.35370636 106.32075500]
[91.80031586 91.32740021]
[90.23979187 76.40879822]
[88.67926788 61.49019241]
[87.11874390 46.57158661]
[77.60881042 37.85814667]
[76.61618042 25.40028000]
[84.12928772 15.91978645]
[75.19165039 2.86493254]
[81.76262665 -10.50187492]
[80.42439270 -25.44206047]
[79.08615875 -40.38224411]
[77.74792480 -55.32242966]
[76.40969086 -70.26261902]
[75.07145691 -85.20279694]
[73.73322296 -100.14298248]
[59.07693481 -104.01197052]
[46.62957001 -112.66291809]
[37.89420700 -125.05118561]
[33.92568588 -139.68083191]
[35.20322037 -154.78526306]
[41.57254791 -168.54052734]
[52.26453781 -179.28562927]
[65.98808289 -185.72303772]
[81.08599091 -187.07539368]
[95.73512268 -183.17941284]
[108.16652679 -174.50553894]
[116.87904358 -162.10119629]
[120.82060242 -147.46424866]
[119.51522827 -132.36221313]
[113.12055969 -118.61869812]
[102.40879059 -107.89332581]
[88.67340851 -101.48121643]
[90.01164246 -86.54103088]
[91.34987640 -71.60085297]
[92.68811035 -56.66066360]
[94.02634430 -41.72047806]
[95.36457825 -26.78029442]
[96.70281219 -11.84010983]
[105.54473114 0.14612253]
[99.06947327 14.58155251]
[109.92369843 28.37114143]
[102.03734589 45.01106262]
[103.59786987 59.92966843]
[105.15839386 74.84827423]
[106.71891785 89.76687622]
[112.30560303 75.84606934]
[121.87228394 64.29277802]
[134.50714111 56.20819473]
[149.00588989 52.36288452]
[163.98658752 53.12336731]
[178.02140808 58.41714859]
[189.77259827 67.73966217]
[198.12014771 80.20235443]
[202.26838684 94.61734772]
[201.82196045 109.61070251]
[196.82339478 123.75334930]
[187.74914551 135.69729614]
[175.46409607 144.30412292]
[161.13919067 148.75349426]
[146.13977051 148.62130737]
[131.89549255 143.92016602]
[119.76403809 135.09815979]
[110.90169525 122.99613953]
[106.15297699 108.76647949]
[103.70725250 123.56575012]
[112.64076996 136.32623291]
[109.94963837 151.29995728]
[97.72941589 159.73806763]
[95.28368378 174.53733826]
[92.83795929 189.33660889]
[90.39222717 204.13587952]
[87.94650269 218.93515015]
[85.50077820 233.73442078]
[83.05504608 248.53369141]
[93.50106812 262.56579590]
[90.62332153 279.47833252]
[76.68405151 288.88766479]
[74.45893860 303.72171021]
[72.23381805 318.55575562]
[86.93061829 321.57452393]
[101.44419098 325.37783813]
[115.73269653 329.95471191]
[129.75492859 335.29196167]
[143.47045898 341.37414551]
[156.83975220 348.18380737]
[169.82423401 355.70123291]
[182.38650513 363.90481567]
[194.49031067 372.77087402]
[206.10076904 382.27383423]
[217.18440247 392.38629150]
[227.70925903 403.07913208]
[237.64498901 414.32147217]
[246.96292114 426.08093262]
[255.63623047 438.32360840]
[263.63989258 451.01416016]
[270.95080566 464.11605835]
[277.54794312 477.59149170]
[283.41223145 491.40158081]
[288.52679443 505.50656128]
[292.87686157 519.86572266]
[296.44992065 534.43768311]
[299.23562622 549.18048096]
[301.22598267 564.05151367]
[302.41525269 579.00793457]
[302.79998779 594.00659180]
[302.37908936 609.00433350]
[301.15377808 623.95788574]
[299.12756348 638.82403564]
[296.30630493 653.56005859]
[292.69815063 668.12335205]
[288.31347656 682.47198486]
[283.16491699 696.56463623]
[277.26736450 710.36053467]
[270.63775635 723.82000732]
[263.29528809 736.90423584]
[255.26104736 749.57550049]
[246.55825806 761.79718018]
[237.21199036 773.53417969]
[227.24919128 784.75256348]
[216.69859314 795.41998291]
[205.59062195 805.50567627]
[193.95727539 814.98065186]
[181.83213806 823.81744385]
[169.25012207 831.99072266]
[156.24754333 839.47686768]
[142.86189270 846.25427246]
[129.13172913 852.30334473]
[115.09667206 857.60681152]
[100.79718018 862.14916992]
[86.27447510 865.91748047]
[71.57044220 868.90087891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 158]
[64 157]
[65 156]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[78 144]
[79 143]
[80 124]
[81 123]
[82 122]
[83 121]
[86 119]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
