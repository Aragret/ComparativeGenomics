%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[158.45323181 795.92395020]
[143.80278015 792.69372559]
[129.30487061 788.83624268]
[114.98633575 784.35852051]
[100.87371063 779.26898193]
[86.99311066 773.57696533]
[73.37023926 767.29309082]
[60.03033829 760.42889404]
[46.99809647 752.99719238]
[34.29765320 745.01165771]
[21.95252419 736.48712158]
[9.98556995 727.43933105]
[-1.58104956 717.88513184]
[-12.72591496 707.84210205]
[-23.42838860 697.32891846]
[-33.66865158 686.36505127]
[-43.42774200 674.97076416]
[-52.68758774 663.16711426]
[-61.43104172 650.97607422]
[-69.64191437 638.42016602]
[-77.30499268 625.52258301]
[-84.40610504 612.30725098]
[-90.93208313 598.79870605]
[-96.87084961 585.02185059]
[-102.21141052 571.00231934]
[-106.94387054 556.76593018]
[-111.05946350 542.33917236]
[-114.55057526 527.74871826]
[-117.41074371 513.02154541]
[-119.63466644 498.18496704]
[-121.21822357 483.26644897]
[-122.15849304 468.29360962]
[-122.45372009 453.29418945]
[-122.10336304 438.29592896]
[-121.10807800 423.32666016]
[-119.46969604 408.41406250]
[-117.19126129 393.58575439]
[-114.27698517 378.86920166]
[-110.73226929 364.29165649]
[-106.56367493 349.88009644]
[-101.77892303 335.66125488]
[-96.38687897 321.66140747]
[-90.39751434 307.90649414]
[-83.82192993 294.42199707]
[-76.67230225 281.23287964]
[-68.96186829 268.36358643]
[-60.70490265 255.83790588]
[-51.91670227 243.67906189]
[-42.61353683 231.90956116]
[-32.81263351 220.55120850]
[-22.53214455 209.62503052]
[-11.79110432 199.15124512]
[-0.60940331 189.14927673]
[10.99225235 179.63763428]
[22.99238014 170.63391113]
[35.36875534 162.15481567]
[48.09846497 154.21601868]
[61.15793228 146.83222961]
[74.52297211 140.01713562]
[88.16883850 133.78334045]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[73.72686768 48.63646317]
[68.68995667 34.50743484]
[60.00037003 46.73408890]
[45.03253937 47.71596146]
[34.82019043 36.72924423]
[36.89148712 21.87294197]
[49.71954346 14.09856510]
[63.84683228 19.13592720]
[59.87473297 4.67140245]
[55.90263748 -9.79312134]
[40.97954178 -8.01581764]
[25.95823097 -8.48263836]
[11.17429161 -11.18315601]
[-3.04199910 -16.05703926]
[-16.37304306 -22.99540329]
[-28.52102280 -31.84324455]
[-39.21454239 -42.40289688]
[-48.21471024 -54.43845367]
[-55.32045746 -67.68103790]
[-60.37303925 -81.83480072]
[-63.25957870 -96.58354950]
[-63.91558838 -111.59778595]
[-62.32641220 -126.54209137]
[-58.52755737 -141.08259583]
[-52.60388565 -154.89447021]
[-44.68774033 -167.66914368]
[-34.95596695 -179.12123108]
[-23.62597656 -188.99487305]
[-10.95088673 -197.06951904]
[2.78613544 -203.16474915]
[17.27820206 -207.14440918]
[32.20155334 -208.91958618]
[47.22279358 -208.45062256]
[62.00634766 -205.74800110]
[76.22194672 -200.87210083]
[89.55200195 -193.93183899]
[101.69872284 -185.08226013]
[112.39073944 -174.52108765]
[121.38919067 -162.48425293]
[128.49305725 -149.24064636]
[133.54362488 -135.08616638]
[136.42805481 -120.33700562]
[137.08192444 -105.32267761]
[135.49061584 -90.37860107]
[131.68969727 -75.83863831]
[125.76406097 -62.02760696]
[117.84609222 -49.25406265]
[108.11268616 -37.80336380]
[96.78128815 -27.93132591]
[84.10504913 -19.85849380]
[70.36716461 -13.76521778]
[74.33925629 0.69930637]
[78.31135559 15.16382980]
[82.81898499 29.47051620]
[87.85589600 43.59954834]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[130.53416443 118.68035126]
[145.04612732 114.87604523]
[159.70832825 111.69959259]
[174.49360657 109.15689087]
[189.37458801 107.25263214]
[204.32371521 105.99035645]
[219.31332397 105.37239075]
[234.31562805 105.39987946]
[249.30285645 106.07278442]
[264.24725342 107.38984680]
[279.12115479 109.34863281]
[293.89703369 111.94551849]
[308.54748535 115.17568970]
[323.04541016 119.03316498]
[337.36395264 123.51079559]
[351.47659302 128.60031128]
[365.35720825 134.29226685]
[378.98010254 140.57612610]
[392.32003784 147.44024658]
[405.35229492 154.87193298]
[418.05276489 162.85742188]
[430.39791870 171.38191223]
[442.36492920 180.42962646]
[453.93157959 189.98381042]
[465.07647705 200.02677917]
[475.77896118 210.53993225]
[486.01928711 221.50378418]
[495.77841187 232.89805603]
[505.03829956 244.70162964]
[513.78179932 256.89266968]
[521.99267578 269.44857788]
[529.65582275 282.34609985]
[536.75695801 295.56137085]
[543.28302002 309.06994629]
[549.22180176 322.84674072]
[554.56243896 336.86630249]
[559.29492188 351.10263062]
[563.41058350 365.52938843]
[566.90173340 380.11984253]
[569.76196289 394.84701538]
[571.98590088 409.68359375]
[573.56951904 424.60208130]
[574.50982666 439.57492065]
[574.80511475 454.57434082]
[574.45483398 469.57260132]
[573.45959473 484.54187012]
[571.82122803 499.45446777]
[569.54284668 514.28277588]
[566.62866211 528.99932861]
[563.08398438 543.57690430]
[558.91540527 557.98846436]
[554.13073730 572.20733643]
[548.73870850 586.20721436]
[542.74938965 599.96215820]
[536.17388916 613.44665527]
[529.02429199 626.63580322]
[521.31390381 639.50512695]
[513.05694580 652.03082275]
[504.26879883 664.18969727]
[494.96566772 675.95922852]
[485.16482544 687.31762695]
[474.88436890 698.24383545]
[464.14334106 708.71765137]
[452.96170044 718.71966553]
[441.36007690 728.23132324]
[429.35995483 737.23510742]
[416.98361206 745.71423340]
[404.25393677 753.65307617]
[391.19448853 761.03692627]
[377.82946777 767.85205078]
[364.18362427 774.08587646]
[350.28222656 779.72686768]
[336.15100098 784.76458740]
[321.81613159 789.18963623]
[307.30413818 792.99395752]
[292.64193726 796.17034912]
[277.85662842 798.71301270]
[262.97564697 800.61718750]
[248.02651978 801.87939453]
[233.03691101 802.49731445]
[218.03460693 802.46978760]
[203.04737854 801.79681396]
[188.10298157 800.47973633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 127]
[62 126]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[74 119]
[75 118]
[76 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
