%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[60.83043671 771.59338379]
[45.83289337 772.05072021]
[30.83483887 771.61041260]
[15.88996601 770.27386475]
[1.05177152 768.04595947]
[-13.62662697 764.93469238]
[-28.09268379 760.95111084]
[-42.29461288 756.10955811]
[-56.18157959 750.42736816]
[-69.70386505 743.92480469]
[-82.81306458 736.62518311]
[-95.46225739 728.55462646]
[-107.60615540 719.74206543]
[-119.20128632 710.21905518]
[-130.20614624 700.01959229]
[-140.58132935 689.18023682]
[-150.28971863 677.73986816]
[-159.29652405 665.73931885]
[-167.56954956 653.22161865]
[-175.07913208 640.23156738]
[-181.79843140 626.81567383]
[-187.70335388 613.02191162]
[-192.77279663 598.89971924]
[-196.98860168 584.49963379]
[-200.33566284 569.87322998]
[-202.80201721 555.07275391]
[-204.37881470 540.15136719]
[-205.06044006 525.16229248]
[-204.84442139 510.15936279]
[-203.73155212 495.19616699]
[-201.72581482 480.32632446]
[-198.83438110 465.60302734]
[-195.06761169 451.07901001]
[-190.43898010 436.80627441]
[-184.96507263 422.83587646]
[-178.66546631 409.21786499]
[-171.56271362 396.00094604]
[-163.68225098 383.23248291]
[-155.05227661 370.95816040]
[-145.70370483 359.22189331]
[-135.66998291 348.06573486]
[-124.98702240 337.52960205]
[-113.69308472 327.65121460]
[-101.82859802 318.46594238]
[-89.43601990 310.00665283]
[-76.55972290 302.30364990]
[-63.24580002 295.38446045]
[-49.54190826 289.27389526]
[-35.49710846 283.99383545]
[-21.16167831 279.56317139]
[-6.58693123 275.99774170]
[8.17495632 273.31033325]
[23.07114220 271.51052856]
[38.04829788 270.60482788]
[53.05281067 270.59646606]
[68.03097534 271.48544312]
[69.81343842 256.59170532]
[71.59590149 241.69799805]
[73.37837219 226.80427551]
[67.20829010 213.24775696]
[76.53065491 200.46479797]
[78.31311798 185.57107544]
[80.09558868 170.67736816]
[78.47101593 168.39286804]
[77.65347290 165.32720947]
[77.94503021 161.78456116]
[79.53216553 158.17269897]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[99.67910767 57.06260681]
[101.46157074 42.16889191]
[103.24404144 27.27517319]
[105.02650452 12.38145542]
[106.80896759 -2.51226163]
[108.59143829 -17.40597916]
[94.72467804 -22.00703812]
[82.03044128 -29.22975349]
[70.99842072 -38.79326248]
[62.05375671 -50.32643127]
[55.54065323 -63.38228989]
[51.70911789 -77.45531464]
[50.70537186 -92.00104523]
[52.56626892 -106.45711517]
[57.21794891 -120.26499939]
[64.47877502 -132.89161682]
[74.06640625 -143.84988403]
[85.60879517 -152.71751404]
[98.65859985 -159.15327454]
[112.71056366 -162.91018677]
[127.22103119 -163.84489441]
[129.22505188 -178.71041870]
[131.22906494 -193.57594299]
[133.23307800 -208.44148254]
[119.25389862 -214.10128784]
[107.12192535 -223.06042480]
[97.59979248 -234.75570679]
[91.28605652 -248.45196533]
[88.57760620 -263.28823853]
[89.64470673 -278.33190918]
[94.42027283 -292.63732910]
[102.60410309 -305.30523682]
[113.68177032 -315.53930664]
[126.95690918 -322.69622803]
[141.59503174 -326.32611084]
[156.67597961 -326.20077515]
[171.25175476 -322.32809448]
[184.40611267 -314.95153809]
[195.31214905 -304.53475952]
[203.28430176 -291.73257446]
[207.82145691 -277.34979248]
[208.63836670 -262.29043579]
[205.68371582 -247.50123596]
[199.14321899 -233.91180420]
[189.42800903 -222.37638855]
[177.14881897 -213.62013245]
[163.07749939 -208.19345093]
[148.09860229 -206.43746948]
[146.09458923 -191.57192993]
[144.09057617 -176.70640564]
[142.08656311 -161.84088135]
[156.63186646 -156.72375488]
[169.80488586 -148.69902039]
[181.03186035 -138.11343384]
[189.82321167 -125.42540741]
[195.79489136 -111.18507385]
[198.68521118 -96.01046753]
[198.36621094 -80.56069183]
[194.84945679 -65.50731659]
[188.28549194 -51.50513840]
[178.95748901 -39.16375732]
[167.26901245 -29.02098083]
[153.72657776 -21.51942825]
[138.91763306 -16.98719597]
[123.48515320 -15.62351322]
[121.70269012 -0.72979575]
[119.92021942 14.16392136]
[118.13775635 29.05763817]
[116.35529327 43.95135498]
[114.57282257 58.84507370]
[116.19739532 61.12956619]
[117.01493835 64.19522095]
[116.72338104 67.73787689]
[115.13623810 71.34973145]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[94.98930359 172.45982361]
[93.20684052 187.35354614]
[91.42436981 202.24726868]
[97.46695709 216.86907959]
[88.27208710 228.58674622]
[86.48962402 243.48046875]
[84.70715332 258.37417603]
[82.92469025 273.26788330]
[97.68962097 275.93853760]
[112.26840210 279.48742676]
[126.60885620 283.90182495]
[140.65963745 289.16595459]
[154.37045288 295.26095581]
[167.69223022 302.16500854]
[180.57725525 309.85342407]
[192.97943115 318.29864502]
[204.85433960 327.47042847]
[216.15948486 337.33599854]
[226.85438538 347.85998535]
[236.90077209 359.00476074]
[246.26266479 370.73037720]
[254.90655518 382.99490356]
[262.80151367 395.75442505]
[269.91925049 408.96325684]
[276.23431396 422.57412720]
[281.72409058 436.53829956]
[286.36889648 450.80578613]
[290.15216064 465.32550049]
[293.06030273 480.04550171]
[295.08291626 494.91305542]
[296.21276855 509.87496948]
[296.44580078 524.87768555]
[295.78121948 539.86749268]
[294.22134399 554.79071045]
[291.77178955 569.59393311]
[288.44134521 584.22412109]
[284.24188232 598.62902832]
[279.18847656 612.75695801]
[273.29922485 626.55737305]
[266.59515381 639.98089600]
[259.10031128 652.97949219]
[250.84150696 665.50653076]
[241.84832764 677.51727295]
[232.15293884 688.96868896]
[221.79005432 699.81982422]
[210.79678345 710.03173828]
[199.21246338 719.56793213]
[187.07858276 728.39428711]
[174.43855286 736.47918701]
[161.33764648 743.79364014]
[147.82275391 750.31158447]
[133.94224548 756.00958252]
[119.74581909 760.86724854]
[105.28429413 764.86718750]
[90.60943604 767.99517822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 163]
[57 162]
[58 161]
[59 160]
[61 158]
[62 157]
[63 156]
[68 155]
[69 154]
[70 153]
[71 152]
[73 150]
[74 149]
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[95 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
