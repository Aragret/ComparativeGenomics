%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[208.79536438 394.45434570]
[203.96936035 380.25189209]
[199.14337158 366.04943848]
[194.31736755 351.84698486]
[189.49137878 337.64453125]
[184.36299133 332.32272339]
[184.70095825 323.19454956]
[180.08694458 308.92181396]
[175.47294617 294.64907837]
[170.12174988 280.63607788]
[164.04792786 266.92080688]
[157.97409058 253.20553589]
[151.90025330 239.49026489]
[145.82641602 225.77499390]
[139.75257874 212.05973816]
[133.67875671 198.34446716]
[127.60491943 184.62919617]
[116.43718719 179.98072815]
[111.26472473 168.60401917]
[115.35692596 156.37222290]
[109.48796844 142.56805420]
[98.39068604 137.75381470]
[93.38818359 126.30136108]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[81.70973969 92.60230255]
[77.68476105 107.05220032]
[70.87050629 120.41506195]
[61.53839493 132.15864563]
[50.06012344 141.81520081]
[36.89286041 149.00013733]
[22.56105804 153.42726135]
[7.63554239 154.92024231]
[-7.28920698 153.41961670]
[-21.61874199 148.98516846]
[-34.78232574 141.79348755]
[-46.25565720 132.13105774]
[-55.58175278 120.38269806]
[-62.38916397 107.01635742]
[-66.40675354 92.56439972]
[-67.47449493 77.60245514]
[-65.54987335 62.72643661]
[-60.70953751 48.52886200]
[-53.14627457 35.57521057]
[-43.16133118 24.38142204]
[-31.15240288 15.39334106]
[-17.59779739 8.96895885]
[-3.03739190 5.36415625]
[11.94887829 4.72251129]
[26.76411629 7.06958008]
[40.81823730 12.31188011]
[53.55146790 20.24061203]
[64.45664978 30.53997803]
[73.09944153 42.79975891]
[79.13430023 56.52767944]
[79.80408478 41.54264069]
[80.47386932 26.55760193]
[70.08730316 14.94911289]
[70.98003387 -0.23830561]
[82.11095428 -10.06877041]
[82.78074646 -25.05380821]
[75.66737366 -39.18570709]
[83.96525574 -51.55479431]
[84.63504028 -66.53983307]
[85.30482483 -81.52487183]
[85.97460938 -96.50991058]
[73.93515778 -109.20127869]
[74.78278351 -126.33593750]
[87.50516510 -137.33502197]
[87.95176697 -152.32836914]
[88.28674316 -167.32463074]
[88.51007080 -182.32296753]
[88.73339844 -197.32130432]
[88.95672607 -212.31964111]
[89.18005371 -227.31797791]
[74.27604675 -229.13526917]
[59.64963913 -232.52648926]
[45.46657181 -237.45323181]
[31.88754272 -243.85963440]
[19.06641388 -251.67314148]
[7.14846134 -260.80520630]
[-3.73127842 -271.15234375]
[-13.44952869 -282.59732056]
[-21.89617348 -295.01046753]
[-28.97550774 -308.25112915]
[-34.60731506 -322.16928101]
[-38.72778320 -336.60720825]
[-41.29022598 -351.40133667]
[-42.26560593 -366.38400269]
[-41.64287186 -381.38549805]
[-39.42908096 -396.23577881]
[-35.64931870 -410.76663208]
[-30.34641075 -424.81338501]
[-23.58044243 -438.21688843]
[-15.42807865 -450.82525635]
[-5.98169184 -462.49563599]
[4.65168381 -473.09579468]
[16.35156441 -482.50561523]
[28.98537827 -490.61849976]
[42.40998077 -497.34249878]
[56.47325134 -502.60144043]
[71.01585388 -506.33572388]
[85.87300110 -508.50305176]
[100.87635040 -509.07885742]
[115.85591125 -508.05661011]
[130.64193726 -505.44787598]
[145.06690979 -501.28228760]
[158.96736145 -495.60696411]
[172.18582153 -488.48623657]
[184.57247925 -480.00079346]
[195.98701477 -470.24679565]
[206.30006409 -459.33471680]
[215.39479065 -447.38827515]
[223.16815186 -434.54275513]
[229.53204346 -420.94375610]
[234.41436768 -406.74533081]
[237.75982666 -392.10839844]
[239.53048706 -377.19876099]
[239.70628357 -362.18539429]
[238.28524780 -347.23840332]
[235.28347778 -332.52713013]
[230.73495483 -318.21829224]
[224.69125366 -304.47399902]
[217.22084045 -291.44998169]
[208.40834045 -279.29382324]
[198.35365295 -268.14324951]
[187.17065430 -258.12463379]
[174.98608398 -249.35147095]
[161.93800354 -241.92315674]
[148.17425537 -235.92388916]
[133.85078430 -231.42163086]
[119.12990570 -228.46739197]
[104.17839050 -227.09465027]
[103.95506287 -212.09631348]
[103.73173523 -197.09797668]
[103.50840759 -182.09963989]
[103.28507996 -167.10130310]
[106.32864380 -160.36642456]
[102.94511414 -151.88175964]
[102.49851227 -136.88841248]
[112.55970001 -128.83843994]
[116.20169830 -116.27587891]
[111.87968445 -103.72476196]
[100.95964813 -95.84012604]
[100.28986359 -80.85508728]
[99.62007904 -65.87004852]
[98.95029449 -50.88500977]
[106.11157227 -37.82494354]
[97.76578522 -24.38402367]
[97.09599304 -9.39898491]
[107.30550385 1.38533151]
[106.83971405 16.59183311]
[95.45890808 27.22738647]
[94.78912354 42.21242523]
[94.11933899 57.19746399]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[126.35630798 119.41968536]
[123.29214478 136.69909668]
[129.16110229 150.50326538]
[144.12673950 161.23225403]
[141.32019043 178.55535889]
[147.39401245 192.27062988]
[153.46784973 205.98590088]
[159.54168701 219.70117188]
[165.61552429 233.41642761]
[171.68936157 247.13169861]
[177.76318359 260.84695435]
[183.83702087 274.56222534]
[189.15835571 260.53784180]
[202.18757629 253.10552979]
[216.96791077 255.66323853]
[226.74197388 267.04162598]
[227.04121399 282.03863525]
[217.72880554 293.79785156]
[203.06225586 296.94311523]
[189.74568176 290.03509521]
[194.35968018 304.30780029]
[198.97369385 318.58053589]
[203.69383240 332.81854248]
[208.51982117 347.02099609]
[213.34582520 361.22344971]
[218.17181396 375.42590332]
[222.99781799 389.62835693]
[238.03475952 388.47033691]
[252.88714600 391.08905029]
[266.62133789 397.31988525]
[278.37396240 406.77114868]
[287.40628052 418.84872437]
[293.15048218 432.79342651]
[295.24551392 447.72866821]
[293.55963135 462.71563721]
[288.19885254 476.81219482]
[279.50018311 489.13223267]
[268.01034546 498.90130615]
[254.45167542 505.50534058]
[239.67645264 508.52917480]
[224.61346436 507.78274536]
[210.20957947 503.31295776]
[197.37023926 495.40081787]
[186.90254211 484.54364014]
[179.46449280 471.42395020]
[175.52365112 456.86645508]
[175.32772827 441.78625488]
[178.88906860 427.13131714]
[185.98377991 413.82281494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[7 183]
[8 182]
[9 181]
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[20 164]
[21 163]
[24 161]
[26 159]
[27 158]
[57 157]
[58 156]
[59 155]
[62 152]
[63 151]
[65 149]
[66 148]
[67 147]
[68 146]
[71 142]
[72 141]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
