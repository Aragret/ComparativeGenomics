%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[73.27191925 174.56781006]
[76.00320435 189.32585144]
[77.50643158 204.25903320]
[77.77135468 219.26533508]
[76.79614258 234.24226379]
[74.58747101 249.08750916]
[71.16042328 263.69967651]
[66.53840637 277.97891235]
[60.75300217 291.82766724]
[53.84372330 305.15139771]
[45.85777283 317.85903931]
[36.84970474 329.86380005]
[26.88104820 341.08364868]
[16.01990509 351.44198608]
[4.34046793 360.86804199]
[-8.07747936 369.29739380]
[-21.14910889 376.67248535]
[-34.78512573 382.94293213]
[-48.89238358 388.06591797]
[-63.37451172 392.00640869]
[-78.13258362 394.73751831]
[-93.06578064 396.24057007]
[-108.07209015 396.50531006]
[-123.04901123 395.52990723]
[-137.89422607 393.32107544]
[-152.50633240 389.89385986]
[-166.78552246 385.27166748]
[-180.63423157 379.48608398]
[-193.95785522 372.57666016]
[-206.66540527 364.59054565]
[-218.67005920 355.58233643]
[-229.88980103 345.61355591]
[-240.24801636 334.75228882]
[-249.67391968 323.07272339]
[-258.10311890 310.65469360]
[-265.47805786 297.58297729]
[-271.74835205 283.94686890]
[-276.87115479 269.83956909]
[-280.81149292 255.35737610]
[-283.54241943 240.59927368]
[-285.04528809 225.66606140]
[-285.30984497 210.65974426]
[-284.33428955 195.68284607]
[-282.12524414 180.83764648]
[-278.69784546 166.22558594]
[-274.07550049 151.94645691]
[-268.28976440 138.09782410]
[-261.38015747 124.77426910]
[-253.39392090 112.06681824]
[-244.38555908 100.06227112]
[-234.41664124 88.84264374]
[-223.55525208 78.48456573]
[-211.87557983 69.05879974]
[-199.45744324 60.62973785]
[-186.38563538 53.25495529]
[-172.74946594 46.98482895]
[-158.64208984 41.86219406]
[-144.15986633 37.92204285]
[-129.40173340 35.19129181]
[-114.46849823 33.68859482]
[-99.46217346 33.42421341]
[-84.48527527 34.39995575]
[-69.64011383 36.60916138]
[-55.02808762 40.03673172]
[-40.74901962 44.65925598]
[-26.90044785 50.44515610]
[-13.57697868 57.35491180]
[-0.86962366 65.34131622]
[11.13481140 74.34981537]
[22.35432434 84.31887054]
[32.71226883 95.18038177]
[42.13789749 106.86016083]
[50.56681061 119.27840424]
[63.63099670 111.90771484]
[76.69518280 104.53702545]
[89.75936890 97.16633606]
[102.30076599 88.93753052]
[114.26310730 79.88752747]
[126.22544098 70.83753204]
[138.18777466 61.78753281]
[150.15011597 52.73752975]
[162.11245728 43.68753052]
[153.75773621 31.22469711]
[146.12814331 18.30522728]
[139.24855042 4.97126198]
[133.14140320 -8.73370552]
[127.82661438 -22.76497269]
[123.32151794 -37.07677078]
[119.64082336 -51.62242126]
[116.79652405 -66.35447693]
[114.79790497 -81.22487640]
[113.65147400 -96.18512726]
[113.36098480 -111.18643188]
[113.92737579 -126.17984772]
[115.34880066 -141.11648560]
[117.62062073 -155.94760132]
[120.73543549 -170.62484741]
[124.68307495 -185.10032654]
[129.45066833 -199.32684326]
[135.02265930 -213.25796509]
[141.38087463 -226.84826660]
[148.50457764 -240.05343628]
[156.37054443 -252.83036804]
[164.95309448 -265.13742065]
[174.22424316 -276.93441772]
[184.15374756 -288.18289185]
[194.70922852 -298.84616089]
[205.85623169 -308.88943481]
[217.55844116 -318.27996826]
[229.77764893 -326.98712158]
[242.47399902 -334.98248291]
[255.60610962 -342.23999023]
[269.13110352 -348.73596191]
[283.00491333 -354.44918823]
[297.18225098 -359.36108398]
[311.61688232 -363.45559692]
[326.26171875 -366.71936035]
[341.06896973 -369.14175415]
[355.99041748 -370.71487427]
[370.97729492 -371.43356323]
[385.98077393 -371.29550171]
[400.95190430 -370.30111694]
[415.84185791 -368.45367432]
[430.60202026 -365.75921631]
[445.18432617 -362.22650146]
[459.54116821 -357.86703491]
[473.62570190 -352.69506836]
[487.39199829 -346.72747803]
[500.79519653 -339.98373413]
[513.79150391 -332.48577881]
[526.33856201 -324.25811768]
[538.39550781 -315.32757568]
[549.92291260 -305.72329712]
[560.88317871 -295.47659302]
[571.24066162 -284.62088013]
[580.96148682 -273.19155884]
[590.01397705 -261.22595215]
[598.36859131 -248.76304626]
[605.99804688 -235.84352112]
[612.87756348 -222.50949097]
[618.98461914 -208.80448914]
[624.29925537 -194.77317810]
[628.80426025 -180.46133423]
[632.48480225 -165.91566467]
[635.32904053 -151.18359375]
[637.32751465 -136.31317139]
[638.47381592 -121.35290527]
[638.76422119 -106.35160065]
[638.19769287 -91.35818481]
[636.77618408 -76.42156982]
[634.50421143 -61.59045792]
[631.38928223 -46.91324234]
[627.44152832 -32.43779373]
[622.67382812 -18.21132278]
[617.10174561 -4.28023958]
[610.74340820 9.31001949]
[603.61956787 22.51512337]
[595.75354004 35.29199982]
[587.17089844 47.59897614]
[577.89965820 59.39590454]
[567.97003174 70.64430237]
[557.41448975 81.30749512]
[546.26739502 91.35068512]
[534.56512451 100.74111938]
[522.34588623 109.44817352]
[509.64944458 117.44343567]
[496.51727295 124.70083618]
[482.99221802 131.19670105]
[469.11837769 136.90983582]
[454.94100952 141.82160950]
[440.50634766 145.91600037]
[425.86148071 149.17965698]
[411.05419922 151.60194397]
[396.13275146 153.17492676]
[381.14584351 153.89350891]
[366.14239502 153.75532532]
[351.17126465 152.76083374]
[336.28134155 150.91328430]
[321.52114868 148.21868896]
[306.93890381 144.68585205]
[292.58209229 140.32629395]
[278.49758911 135.15422058]
[264.73132324 129.18652344]
[251.32821655 122.44265747]
[238.33195496 114.94461060]
[225.78494263 106.71685791]
[213.72810364 97.78622437]
[202.20077515 88.18184662]
[191.24055481 77.93504333]
[180.88317871 67.07924652]
[171.16244507 55.64986801]
[159.20011902 64.69986725]
[147.23777771 73.74987030]
[135.27543640 82.79986572]
[123.31310272 91.84986877]
[111.35076904 100.89986420]
[126.34698486 101.23673248]
[138.83972168 109.53923035]
[144.95797729 123.23474121]
[142.80592346 138.07955933]
[133.05043030 149.47386169]
[118.71430969 153.88699341]
[104.23978424 149.95150757]
[94.11193848 138.88684082]
[91.46899414 124.12152100]
[97.13005829 110.23052216]
[84.06587219 117.60121155]
[71.00168610 124.97190094]
[57.93750000 132.34259033]
[64.20811462 145.97853088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 209]
[74 208]
[75 207]
[76 206]
[77 196]
[78 195]
[79 194]
[80 193]
[81 192]
[82 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
