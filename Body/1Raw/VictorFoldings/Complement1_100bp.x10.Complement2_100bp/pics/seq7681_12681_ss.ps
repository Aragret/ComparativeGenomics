%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-38.07282639 307.45199585]
[-30.16763878 320.25451660]
[-24.82845116 334.32183838]
[-22.24827385 349.14544678]
[-22.52037811 364.18945312]
[-25.63492775 378.91006470]
[-31.47933197 392.77508545]
[-39.84232330 405.28338623]
[-50.42157745 415.98269653]
[-62.83466721 424.48632812]
[-76.63286591 430.48684692]
[-91.31738281 433.76733398]
[-106.35736847 434.20922852]
[-121.20914459 431.79650879]
[-135.33583069 426.61642456]
[-148.22676086 418.85623169]
[-159.41592407 408.79644775]
[-168.49884033 396.80075073]
[-175.14717102 383.30273438]
[-179.12059021 368.79037476]
[-180.27545166 353.78829956]
[-178.57000732 338.83877563]
[-174.06591797 324.48226929]
[-166.92599487 311.23770142]
[-157.40834045 299.58392334]
[-145.85702515 289.94216919]
[-132.68960571 282.66098022]
[-118.38208008 278.00357056]
[-103.45166779 276.13833618]
[-88.43807983 277.13265991]
[-73.88404846 280.95062256]
[-67.40455627 267.42227173]
[-60.92506027 253.89393616]
[-54.44556427 240.36558533]
[-47.96606827 226.83724976]
[-59.76747131 236.09613037]
[-73.17246246 242.82711792]
[-87.64710999 246.76214600]
[-102.61491394 247.74446106]
[-117.47969818 245.73495483]
[-131.64941406 240.81364441]
[-144.55967712 233.17655945]
[-155.69628906 223.12788391]
[-164.61566162 211.06784058]
[-170.96257019 197.47677612]
[-174.48419189 182.89602661]
[-175.04026794 167.90634155]
[-172.60867310 153.10475159]
[-167.28622437 139.08078003]
[-159.28492737 126.39301300]
[-148.92347717 115.54680634]
[-136.61456299 106.97414398]
[-122.84844208 101.01647949]
[-108.17340088 97.91110229]
[-93.17396545 97.78170013]
[-78.44753265 100.63343048]
[-64.58067322 106.35269928]
[-52.12567902 114.71171570]
[-41.57864380 125.37754822]
[-33.35964203 137.92538452]
[-27.79603577 151.85543823]
[-25.10942268 166.61286926]
[-25.40680885 181.60992432]
[-28.67634773 196.24925232]
[-34.78574371 209.94416809]
[-23.23944283 200.36904907]
[-11.69314098 190.79393005]
[-0.36354780 180.96334839]
[10.74368572 170.88221741]
[21.85091972 160.80107117]
[32.95815277 150.71994019]
[44.06538773 140.63879395]
[55.17261887 130.55766296]
[59.39688492 116.27462769]
[74.81571960 112.72920227]
[85.92295837 102.64806366]
[90.37322235 89.39337158]
[103.99590302 86.24470520]
[114.87523651 75.91803741]
[125.52124786 65.35099030]
[136.16725159 54.78393936]
[146.65475464 44.05956268]
[156.98143005 33.18022537]
[167.30809021 22.30089188]
[177.63476562 11.42155838]
[187.96142578 0.54222387]
[198.28810120 -10.33711052]
[208.61477661 -21.21644402]
[218.94143677 -32.09577942]
[228.85609436 -43.35187531]
[238.34498596 -54.96913910]
[247.83389282 -66.58640289]
[250.57136536 -82.16898346]
[264.61495972 -87.13148499]
[274.10385132 -98.74874878]
[263.40362549 -109.27632141]
[253.72041321 -120.74627686]
[245.13684082 -133.06077576]
[237.72612000 -146.11473083]
[231.55149841 -159.79679871]
[226.66566467 -173.99021912]
[223.11027527 -188.57389832]
[220.91567993 -203.42343140]
[220.10060120 -218.41209412]
[220.67201233 -233.41203308]
[222.62500000 -248.29525757]
[225.94293213 -262.93481445]
[230.59748840 -277.20574951]
[236.54895020 -290.98632812]
[243.74656677 -304.15899658]
[252.12890625 -316.61135864]
[261.62445068 -328.23715210]
[272.15219116 -338.93719482]
[283.62231445 -348.62023926]
[295.93695068 -357.20361328]
[308.99102783 -364.61410522]
[322.67318726 -370.78848267]
[336.86669922 -375.67410278]
[351.45043945 -379.22924805]
[366.30001831 -381.42358398]
[381.28869629 -382.23840332]
[396.28863525 -381.66677856]
[411.17181396 -379.71353149]
[425.81130981 -376.39535522]
[440.08215332 -371.74053955]
[453.86264038 -365.78884888]
[467.03518677 -358.59103394]
[479.48739624 -350.20849609]
[491.11303711 -340.71273804]
[501.81292725 -330.18481445]
[511.49575806 -318.71453857]
[520.07891846 -306.39974976]
[527.48919678 -293.34555054]
[533.66339111 -279.66326904]
[538.54876709 -265.46969604]
[542.10363770 -250.88589478]
[544.29772949 -236.03630066]
[545.11230469 -221.04759216]
[544.54040527 -206.04768372]
[542.58691406 -191.16452026]
[539.26849365 -176.52508545]
[534.61346436 -162.25430298]
[528.66156006 -148.47390747]
[521.46350098 -135.30148315]
[513.08074951 -122.84941864]
[503.58480835 -111.22393036]
[493.05673218 -100.52422333]
[481.58627319 -90.84158325]
[469.27136230 -82.25862122]
[456.21701050 -74.84855652]
[442.53466797 -68.67462158]
[428.34100342 -63.78948593]
[413.75714111 -60.23482895]
[398.90750122 -58.04097748]
[383.91876221 -57.22665405]
[368.91885376 -57.79880142]
[354.03573608 -59.75254059]
[339.39636230 -63.07120132]
[325.12567139 -67.72647095]
[311.34536743 -73.67862701]
[298.17306519 -80.87689209]
[285.72113037 -89.25985718]
[276.23223877 -77.64259338]
[274.17346191 -62.89095688]
[259.45114136 -57.09750366]
[249.96224976 -45.48023987]
[240.47335815 -33.86297607]
[255.43182373 -32.74762344]
[264.01199341 -20.44393539]
[259.88888550 -6.02173471]
[246.10188293 -0.11253026]
[232.81427002 -7.07236767]
[229.82077026 -21.76910973]
[219.49411011 -10.88977623]
[209.16743469 -0.01044193]
[198.84075928 10.86889267]
[188.51409912 21.74822617]
[178.18742371 32.62755966]
[167.86076355 43.50689697]
[157.53408813 54.38623047]
[156.76080322 59.09909058]
[153.01870728 63.37620926]
[146.73429871 65.42994690]
[136.08830261 75.99699402]
[125.44228363 86.56404877]
[125.06363678 90.06961060]
[122.96821594 93.56593323]
[119.17887878 96.24812317]
[114.07704163 97.35193634]
[109.62677765 110.60662842]
[96.00409698 113.75529480]
[84.89685822 123.83643341]
[79.87812805 138.84053040]
[65.25376129 141.66488647]
[54.14652634 151.74603271]
[43.03929138 161.82716370]
[31.93205833 171.90830994]
[20.82482529 181.98944092]
[9.71759129 192.07058716]
[8.12596416 197.04188538]
[5.09016371 200.55432129]
[1.40772474 202.30209351]
[-2.11802125 202.34024048]
[-13.66432285 211.91535950]
[-25.21062469 221.49047852]
[-34.43772125 233.31674194]
[-40.91721725 246.84509277]
[-47.39671326 260.37344360]
[-53.87620926 273.90176392]
[-60.35570526 287.43011475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 210]
[32 209]
[33 208]
[34 207]
[35 206]
[65 205]
[66 204]
[67 203]
[68 199]
[69 198]
[70 197]
[71 196]
[72 195]
[73 194]
[75 192]
[76 191]
[78 189]
[79 185]
[80 184]
[81 183]
[82 180]
[83 179]
[84 178]
[85 177]
[86 176]
[87 175]
[88 174]
[89 173]
[90 167]
[91 166]
[92 165]
[94 163]
[95 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
