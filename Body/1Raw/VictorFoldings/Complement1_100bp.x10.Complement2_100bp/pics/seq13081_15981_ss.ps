%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[97.13755035 867.42004395]
[82.37025452 864.73797607]
[67.87918091 860.82958984]
[53.76596832 855.72235107]
[40.12962723 849.45208740]
[27.06579590 842.06268311]
[14.66611767 833.60607910]
[3.01756358 824.14154053]
[-7.79815674 813.73541260]
[-17.70517921 802.46081543]
[-26.63400841 790.39666748]
[-34.52201843 777.62774658]
[-41.31387711 764.24353027]
[-46.96194458 750.33795166]
[-51.42660522 736.00848389]
[-54.67653656 721.35565186]
[-56.68894577 706.48229980]
[-57.44971848 691.49273682]
[-56.95351410 676.49206543]
[-55.20381927 661.58551025]
[-52.21290207 646.87762451]
[-48.00174332 632.47167969]
[-42.59988022 618.46856689]
[-36.04520798 604.96661377]
[-28.38369942 592.06048584]
[-19.66909599 579.84075928]
[-9.96252823 568.39306641]
[0.66792184 557.79779053]
[12.14768600 548.12921143]
[24.39624214 539.45513916]
[37.32767105 531.83642578]
[50.85126877 525.32653809]
[64.87217712 519.97106934]
[79.29204559 515.80767822]
[94.00972748 512.86553955]
[108.92198944 511.16522217]
[108.47538757 496.17187500]
[108.02877808 481.17852783]
[107.58216858 466.18518066]
[107.13556671 451.19183350]
[106.68895721 436.19848633]
[106.24235535 421.20513916]
[105.79574585 406.21176147]
[105.34914398 391.21841431]
[104.90253448 376.22506714]
[101.56127930 369.63281250]
[104.56257629 361.00552368]
[104.33924866 346.00720215]
[90.03824615 338.48431396]
[81.43294525 324.69647217]
[80.95238495 308.35675049]
[88.82237244 293.92211914]
[102.97805023 285.37759399]
[102.53144073 270.38424683]
[101.86165619 255.39921570]
[100.96884155 240.42581177]
[100.07602692 225.45240784]
[99.18321228 210.47900391]
[98.29039764 195.50559998]
[97.39758301 180.53219604]
[96.50476074 165.55877686]
[95.61194611 150.58537292]
[94.71913147 135.61196899]
[93.82631683 120.63856506]
[92.93350220 105.66516113]
[90.44097137 102.72242737]
[89.25765991 98.69531250]
[89.83877563 94.19316864]
[92.35035706 90.00606537]
[92.12702942 75.00772858]
[91.90370178 60.00938797]
[91.68037415 45.01105118]
[77.39566803 39.99382782]
[65.71134186 30.41006470]
[58.02537918 17.43138313]
[55.24881363 2.63406038]
[57.69779587 -12.19240189]
[65.05770111 -25.26169014]
[76.42342377 -35.00589371]
[90.41062164 -40.26360321]
[90.18729401 -55.26194382]
[89.96396637 -70.26027679]
[77.80268097 -61.47943497]
[63.31478500 -65.36541748]
[57.18021393 -79.05362701]
[63.92114639 -92.45362091]
[78.56841278 -95.68742371]
[90.32387543 -86.37268066]
[91.21669006 -101.34608459]
[88.60361481 -110.09878540]
[92.23590088 -116.53526306]
[93.35154724 -131.49371338]
[94.46720123 -146.45217896]
[95.58284760 -161.41062927]
[87.20455933 -177.80836487]
[97.64340210 -191.91500854]
[98.53622437 -206.88841248]
[99.42903900 -221.86181641]
[100.32185364 -236.83523560]
[101.21466827 -251.80863953]
[87.52672577 -258.41989136]
[77.41445160 -269.76934814]
[72.41990662 -284.12634277]
[73.30472565 -299.30148315]
[79.93396759 -312.98074341]
[91.29673004 -323.07806396]
[105.66027069 -328.05371094]
[120.83425903 -327.14892578]
[134.50476074 -320.50170898]
[144.58714294 -309.12567139]
[149.54388428 -294.75558472]
[148.61915588 -279.58282471]
[141.95394897 -265.92105103]
[130.56465149 -255.85366821]
[116.18807220 -250.91581726]
[115.29525757 -235.94241333]
[114.40244293 -220.96900940]
[113.50962830 -205.99560547]
[112.61681366 -191.02220154]
[120.40885925 -181.76959229]
[119.78758240 -169.28770447]
[110.54129791 -160.29498291]
[109.42565155 -145.33651733]
[108.31000519 -130.37806702]
[107.19435120 -115.41961670]
[106.19009399 -100.45326996]
[105.29727936 -85.47986603]
[104.96230316 -70.48360443]
[105.18563080 -55.48527145]
[105.40895844 -40.48693085]
[119.54650116 -35.64800262]
[131.19729614 -26.24651909]
[138.94306946 -13.40215683]
[141.83239746 1.34481657]
[139.49763489 16.21824837]
[132.20150757 29.42001534]
[120.80770111 39.34741592]
[106.67871094 44.78772354]
[106.90203857 59.78606033]
[107.12536621 74.78440094]
[107.34869385 89.78273773]
[107.90690613 104.77234650]
[108.79972076 119.74575043]
[109.69253540 134.71916199]
[110.58535004 149.69256592]
[111.47817230 164.66596985]
[112.37098694 179.63937378]
[113.26380157 194.61277771]
[114.15661621 209.58618164]
[115.04943085 224.55958557]
[115.94224548 239.53300476]
[116.83506775 254.50640869]
[120.15095520 260.22622681]
[120.08966827 265.90893555]
[117.52479553 269.93765259]
[117.97139740 284.93099976]
[130.61566162 290.91308594]
[139.40698242 301.70794678]
[142.67395020 315.17291260]
[139.83438110 328.66683960]
[131.49821472 339.56808472]
[119.33758545 345.78387451]
[119.56091309 360.78219604]
[119.89588928 375.77847290]
[120.34249115 390.77182007]
[120.78910065 405.76516724]
[121.23570251 420.75851440]
[121.68231201 435.75186157]
[122.12891388 450.74520874]
[122.57552338 465.73855591]
[123.02212524 480.73193359]
[123.46873474 495.72528076]
[123.91533661 510.71862793]
[138.90235901 511.52832031]
[153.76907349 513.58923340]
[168.41119385 516.88696289]
[182.72599792 521.39837646]
[196.61309814 527.09179688]
[209.97506714 533.92730713]
[222.71820068 541.85693359]
[234.75309753 550.82513428]
[245.99534607 560.76885986]
[256.36608887 571.61853027]
[265.79257202 583.29791260]
[274.20867920 595.72509766]
[281.55538940 608.81298828]
[287.78112793 622.46972656]
[292.84228516 636.59948730]
[296.70333862 651.10327148]
[299.33718872 665.87921143]
[300.72537231 680.82379150]
[300.85812378 695.83209229]
[299.73455811 710.79882812]
[297.36254883 725.61907959]
[293.75872803 740.18890381]
[288.94833374 754.40600586]
[282.96514893 768.17077637]
[275.85116577 781.38659668]
[267.65621948 793.96075439]
[258.43783569 805.80505371]
[248.26068115 816.83648682]
[237.19612122 826.97760010]
[225.32177734 836.15722656]
[212.72093201 844.31109619]
[199.48197937 851.38195801]
[185.69778442 857.32012939]
[171.46502686 862.08410645]
[156.88354492 865.64038086]
[142.05563354 867.96398926]
[127.08527374 869.03875732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[47 163]
[48 162]
[53 156]
[54 155]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[69 141]
[70 140]
[71 139]
[72 138]
[80 130]
[81 129]
[82 128]
[88 127]
[89 126]
[91 125]
[92 124]
[93 123]
[94 122]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
