%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[143.45469666 703.02862549]
[132.34838867 692.93511963]
[122.05766296 682.01135254]
[112.64438629 670.32293701]
[104.16519165 657.94024658]
[96.67105865 644.93768311]
[90.20706940 631.39349365]
[84.81210327 617.38909912]
[80.51859283 603.00878906]
[77.35237122 588.33898926]
[75.33247375 573.46789551]
[74.47105408 558.48504639]
[74.77328491 543.48046875]
[76.23735809 528.54449463]
[78.85446930 513.76684570]
[82.60887146 499.23641968]
[87.47798157 485.04061890]
[93.43252563 471.26486206]
[100.43669128 457.99197388]
[108.44834900 445.30172729]
[117.41931915 433.27053833]
[127.29563904 421.97067261]
[138.01792908 411.47015381]
[149.52168274 401.83212280]
[161.73771667 393.11450195]
[174.59257507 385.36978149]
[188.00894165 378.64450073]
[182.34616089 364.75445557]
[176.68338013 350.86444092]
[173.59271240 349.16732788]
[171.17051697 345.88891602]
[170.15103149 341.35968018]
[171.09318542 336.22555542]
[166.05627441 322.09652710]
[161.01934814 307.96749878]
[155.98243713 293.83847046]
[150.84048462 279.74731445]
[145.59376526 265.69485474]
[140.34704590 251.64237976]
[128.64672852 242.42543030]
[131.06823730 226.79063416]
[125.82152557 212.73815918]
[123.33014679 211.45317078]
[121.19766998 209.10388184]
[119.83199310 205.82206726]
[119.58587646 201.88456726]
[120.70814514 197.68998718]
[116.30715179 183.35014343]
[111.33950043 177.87800598]
[111.94908905 168.76394653]
[107.76207733 154.36015320]
[103.57507324 139.95637512]
[99.38806152 125.55259705]
[95.20104980 111.14881134]
[92.04953003 125.81400299]
[84.36347198 138.69517517]
[72.95400238 148.43293762]
[59.02519608 153.99964905]
[44.04698563 154.80783081]
[29.60005569 150.77221680]
[17.20903206 142.31866455]
[8.18156433 130.33930969]
[3.47034478 116.09836578]
[3.57255888 101.09871674]
[8.47741985 86.92330170]
[17.66730690 75.06809235]
[30.17238617 66.78419495]
[44.67296982 62.94583130]
[59.63877869 63.95806885]
[73.49043274 69.71408844]
[84.76612854 79.60643768]
[92.27599335 92.59133911]
[91.82938385 77.59799194]
[91.38278198 62.60463715]
[90.93617249 47.61128998]
[90.26638794 32.62625122]
[89.37357330 17.65284348]
[88.48075867 2.67943835]
[87.58794403 -12.29396725]
[79.04296112 -25.60914040]
[86.00900269 -38.77437973]
[85.11618805 -53.74778748]
[84.22336578 -68.72119141]
[75.67838287 -82.03636169]
[82.64442444 -95.20160675]
[73.53305817 -104.33099365]
[73.09768677 -116.82075500]
[81.02662659 -125.95632172]
[80.35684204 -140.94136047]
[79.68705750 -155.92639160]
[79.01727295 -170.91143799]
[78.34748840 -185.89646912]
[70.00169373 -199.33738708]
[77.16297913 -212.39746094]
[76.49318695 -227.38249207]
[75.82340240 -242.36753845]
[61.43051910 -247.18513489]
[49.75237274 -256.87973022]
[42.36833572 -270.14022827]
[40.27703857 -285.17321777]
[43.76131439 -299.94564819]
[52.34994125 -312.45962524]
[64.88137817 -321.02276611]
[79.66085052 -324.47698975]
[94.68955994 -322.35510254]
[107.93499756 -314.94409180]
[117.60581970 -303.24624634]
[122.39412689 -288.84359741]
[121.65235138 -273.68399048]
[115.48079681 -259.81759644]
[104.71412659 -249.11978149]
[90.80844116 -243.03732300]
[91.47822571 -228.05227661]
[92.14801788 -213.06724548]
[100.44589996 -200.69815063]
[93.33252716 -186.56625366]
[94.00231171 -171.58122253]
[94.67209625 -156.59617615]
[95.34188080 -141.61114502]
[96.01166534 -126.62610626]
[106.23932648 -112.36560059]
[97.61783600 -96.09442139]
[106.09895325 -83.85024261]
[99.19677734 -69.61400604]
[100.08959198 -54.64060211]
[100.98240662 -39.66719437]
[109.46353149 -27.42302132]
[102.56134796 -13.18678379]
[103.45416260 1.78662241]
[104.34697723 16.76002884]
[105.23979187 31.73343468]
[108.15386200 35.51725006]
[108.72189331 41.17183685]
[105.92952728 47.16468430]
[106.37612915 62.15803146]
[106.82273865 77.15138245]
[107.26934052 92.14472961]
[109.60482788 106.96179962]
[113.79183960 121.36558533]
[117.97885132 135.76936340]
[122.16586304 150.17314148]
[126.35287476 164.57693481]
[130.64700317 178.94914246]
[135.04798889 193.28898621]
[139.87399292 207.49143982]
[145.12071228 221.54391479]
[157.19630432 231.76599121]
[154.39950562 246.39566040]
[159.64622498 260.44812012]
[164.89294434 274.50061035]
[170.82637024 281.44555664]
[170.11146545 288.80154419]
[175.14837646 302.93057251]
[180.18530273 317.05960083]
[185.22221375 331.18862915]
[190.57339478 345.20166016]
[196.23619080 359.09167480]
[201.89897156 372.98171997]
[216.19322205 368.40972900]
[230.79876709 364.95919800]
[245.62779236 362.65087891]
[260.59109497 361.49862671]
[275.59869385 361.50939941]
[290.56033325 362.68313599]
[305.38604736 365.01275635]
[319.98663330 368.48425293]
[334.27429199 373.07675171]
[348.16308594 378.76263428]
[361.56951904 385.50772095]
[374.41293335 393.27139282]
[386.61611938 402.00701904]
[398.10565186 411.66201782]
[408.81240845 422.17834473]
[418.67205811 433.49276733]
[427.62527466 445.53720093]
[435.61819458 458.23922729]
[442.60275269 471.52243042]
[448.53698730 485.30697632]
[453.38513184 499.50991821]
[457.11810303 514.04583740]
[459.71340942 528.82733154]
[461.15542603 543.76550293]
[461.43554688 558.77050781]
[460.55200195 573.75207520]
[458.51016235 588.62017822]
[455.32232666 603.28527832]
[451.00759888 617.65924072]
[445.59197998 631.65570068]
[439.10800171 645.19030762]
[431.59469604 658.18176270]
[423.09722900 670.55200195]
[413.66671753 682.22650146]
[403.35989380 693.13507080]
[392.23870850 703.21215820]
[380.37005615 712.39709473]
[367.82534790 720.63470459]
[354.67999268 727.87542725]
[341.01306152 734.07568359]
[326.90673828 739.19824219]
[312.44589233 743.21221924]
[297.71746826 746.09350586]
[282.81005859 747.82482910]
[267.81329346 748.39569092]
[252.81741333 747.80267334]
[237.91256714 746.04937744]
[223.18841553 743.14636230]
[208.73350525 739.11102295]
[194.63476562 733.96771240]
[180.97700500 727.74731445]
[167.84233093 720.48718262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 158]
[28 157]
[29 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 150]
[38 149]
[39 148]
[41 146]
[42 145]
[47 144]
[48 143]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[72 137]
[73 136]
[74 135]
[75 134]
[76 131]
[77 130]
[78 129]
[79 128]
[81 126]
[82 125]
[83 124]
[85 122]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
