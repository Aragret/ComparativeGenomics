%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[188.82572937 477.66198730]
[189.78469849 492.89492798]
[184.03140259 507.03219604]
[172.70817566 517.26678467]
[158.06323242 521.56665039]
[143.00436401 519.07806396]
[130.52151489 510.29504395]
[123.09314728 496.96154785]
[122.19418335 481.72491455]
[128.00311279 467.61041260]
[139.36654663 457.42050171]
[154.02830505 453.17834473]
[156.47402954 438.37905884]
[158.91975403 423.57980347]
[161.36547852 408.78051758]
[163.81120300 393.98126221]
[166.25694275 379.18197632]
[168.70266724 364.38269043]
[171.14839172 349.58343506]
[170.25556946 334.61001587]
[166.06857300 320.20623779]
[161.88156128 305.80245972]
[157.69454956 291.39868164]
[153.50753784 276.99490356]
[149.32052612 262.59112549]
[134.40629578 261.66864014]
[120.68183136 255.68798828]
[109.81130219 245.35327148]
[103.12002563 231.89785767]
[101.43285370 216.93711853]
[104.97261810 202.27458191]
[113.33084106 189.68441772]
[125.51481628 180.69686890]
[121.32780457 166.29309082]
[110.34543610 156.23144531]
[113.92309570 140.82005310]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[71.51814270 67.96612549]
[56.40773392 64.18283844]
[48.62700272 51.10939407]
[52.32691193 36.72724152]
[44.47515869 23.94639969]
[36.62340164 11.16555691]
[22.80708122 3.45712757]
[22.73760033 -11.43731594]
[14.88584614 -24.21815872]
[15.73027039 -9.24194527]
[11.72960949 5.21470404]
[3.30606484 17.62614632]
[-8.65140820 26.68257141]
[-22.88090897 31.42823410]
[-37.88076401 31.36231232]
[-52.06800461 26.49176216]
[-63.94541168 17.33058739]
[-72.25954437 4.84558582]
[-76.13298035 -9.64566898]
[-75.15695953 -24.61388206]
[-69.43447113 -38.47941971]
[-59.56943130 -49.77902222]
[-46.60291672 -57.32020950]
[-31.90331841 -60.30714798]
[-17.02191734 -58.42461777]
[-3.52918506 -51.87128448]
[7.15107250 -41.33858490]
[2.75007463 -55.67843246]
[-1.75755394 -69.98512268]
[-6.37156343 -84.25785065]
[-10.98557281 -98.53058624]
[-15.59958172 -112.80332184]
[-20.21359062 -127.07604980]
[-24.82760048 -141.34878540]
[-39.66664505 -138.96064758]
[-54.69633102 -138.86578369]
[-69.56433868 -141.06642151]
[-83.92214203 -145.51095581]
[-97.43317413 -152.09521484]
[-109.78071594 -160.66484070]
[-120.67532349 -171.01896667]
[-129.86161804 -182.91487122]
[-137.12423706 -196.07369995]
[-142.29296875 -210.18698120]
[-145.24662781 -224.92388916]
[-145.91596985 -239.93896484]
[-144.28532410 -254.88021851]
[-140.39291382 -269.39743042]
[-134.32997131 -283.15029907]
[-126.23862457 -295.81640625]
[-116.30854034 -307.09887695]
[-104.77250671 -316.73321533]
[-91.90093994 -324.49356079]
[-77.99556732 -330.19802856]
[-63.38234711 -333.71289062]
[-48.40383911 -334.95574951]
[-33.41115570 -333.89749146]
[-18.75575256 -330.56286621]
[-4.78117180 -325.03012085]
[8.18500328 -317.42886353]
[19.83882713 -307.93734741]
[29.90711594 -296.77807617]
[38.15385818 -284.21255493]
[44.38573456 -270.53543091]
[48.45666122 -256.06726074]
[50.27120972 -241.14720154]
[49.78684998 -226.12503052]
[47.01492691 -211.35285950]
[42.02042770 -197.17698669]
[34.92042160 -183.92971802]
[25.88134956 -171.92156982]
[15.11509800 -161.43403625]
[2.87404299 -152.71296692]
[-10.55486679 -145.96279907]
[-5.94085741 -131.69006348]
[-1.32684839 -117.41732788]
[3.28716087 -103.14459229]
[7.90117025 -88.87186432]
[12.51517963 -74.59912872]
[17.56375122 -69.20156097]
[17.08992195 -60.07942963]
[21.49091911 -45.73958206]
[27.66668892 -32.06991196]
[35.51844406 -19.28907204]
[48.77315521 -12.49481297]
[49.40424347 3.31380153]
[57.25600052 16.09464455]
[65.10775757 28.87548637]
[79.60925293 32.07582474]
[87.75411987 44.92556381]
[84.29898071 60.11436844]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[119.65534973 104.28473663]
[123.29281616 89.73245239]
[131.19578552 76.98322296]
[142.61102295 67.25220490]
[156.45046997 61.46691132]
[171.39505005 60.17875671]
[186.02035522 63.51051331]
[198.93237305 71.14462280]
[208.90042114 82.35345459]
[214.97442627 96.06864929]
[216.57542419 110.98297119]
[213.55082703 125.67486572]
[206.18893433 138.74400330]
[195.19142151 148.94471741]
[181.60649109 155.30474854]
[166.72900391 157.21789551]
[151.97695923 154.50180054]
[138.75643921 147.41534424]
[128.32687378 136.63304138]
[139.60873413 147.72494507]
[135.73158264 162.10607910]
[139.91859436 176.50985718]
[155.02195740 177.56529236]
[168.82701111 183.71284485]
[179.67544556 194.19291687]
[186.27131653 207.72674561]
[187.83589172 222.67243958]
[184.19955444 237.22412109]
[175.81990051 249.63018799]
[163.72430420 258.40411377]
[167.91131592 272.80789185]
[172.09832764 287.21166992]
[176.28533936 301.61544800]
[180.47235107 316.01922607]
[184.65936279 330.42300415]
[187.30390930 315.65798950]
[192.74053955 301.67788696]
[200.76599121 289.00537109]
[211.08021545 278.11425781]
[223.29762268 269.41165161]
[236.96144104 263.22296143]
[251.56085205 259.77954102]
[266.55004883 259.21008301]
[281.36862183 261.53594971]
[295.46258545 266.67013550]
[308.30505371 274.42068481]
[319.41586304 284.49789429]
[328.37963867 296.52496338]
[334.86126709 310.05230713]
[338.61843872 324.57412720]
[339.51065063 339.54757690]
[337.50460815 354.41284180]
[332.67523193 368.61413574]
[325.20315552 381.62060547]
[315.36764526 392.94592285]
[303.53646851 402.16671753]
[290.15191650 408.93829346]
[275.71441650 413.00741577]
[260.76367188 414.22204590]
[245.85864258 412.53668213]
[231.55657959 408.01440430]
[218.39216614 400.82424927]
[206.85757446 391.23501587]
[197.38401794 379.60525513]
[190.32568359 366.36968994]
[185.94766235 352.02917480]
[183.50193787 366.82843018]
[181.05621338 381.62771606]
[178.61048889 396.42697144]
[176.16474915 411.22625732]
[173.71902466 426.02551270]
[171.27330017 440.82479858]
[168.82757568 455.62405396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[19 203]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[33 159]
[34 158]
[36 156]
[37 137]
[38 136]
[40 134]
[41 133]
[42 132]
[45 129]
[46 128]
[47 127]
[49 125]
[50 124]
[68 123]
[69 122]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
