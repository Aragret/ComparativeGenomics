%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[84.55271912 970.30773926]
[69.57904816 969.38421631]
[54.65592194 967.84667969]
[39.80850220 965.69781494]
[25.06181908 962.94116211]
[10.44074535 959.58142090]
[-4.03006744 955.62426758]
[-18.32621765 951.07635498]
[-32.42359924 945.94531250]
[-46.29843903 940.23980713]
[-59.92734146 933.96954346]
[-73.28733063 927.14495850]
[-86.35586548 919.77770996]
[-99.11092377 911.88006592]
[-111.53099060 903.46545410]
[-123.59512329 894.54803467]
[-135.28297424 885.14288330]
[-146.57484436 875.26574707]
[-157.45169067 864.93341064]
[-167.89517212 854.16314697]
[-177.88768005 842.97326660]
[-187.41235352 831.38256836]
[-196.45314026 819.41064453]
[-204.99479675 807.07757568]
[-213.02291870 794.40429688]
[-220.52395630 781.41204834]
[-227.48529053 768.12280273]
[-233.89515686 754.55902100]
[-239.74275208 740.74346924]
[-245.01823425 726.69952393]
[-249.71267700 712.45080566]
[-253.81817627 698.02136230]
[-257.32781982 683.43554688]
[-260.23568726 668.71795654]
[-262.53686523 653.89337158]
[-264.22747803 638.98681641]
[-265.30468750 624.02337646]
[-265.76666260 609.02838135]
[-265.61260986 594.02703857]
[-264.84283447 579.04467773]
[-263.45858765 564.10656738]
[-261.46221924 549.23785400]
[-258.85711670 534.46368408]
[-255.64762878 519.80889893]
[-251.83921814 505.29821777]
[-247.43826294 490.95611572]
[-242.45220947 476.80682373]
[-236.88946533 462.87414551]
[-230.75939941 449.18157959]
[-224.07235718 435.75225830]
[-216.83959961 422.60879517]
[-209.07334900 409.77331543]
[-200.78666687 397.26754761]
[-191.99356079 385.11251831]
[-182.70883179 373.32873535]
[-172.94816589 361.93606567]
[-162.72798157 350.95373535]
[-152.06553650 340.40023804]
[-140.97882080 330.29339600]
[-129.48651123 320.65023804]
[-117.60797882 311.48703003]
[-105.36327362 302.81924438]
[-92.77304077 294.66143799]
[-79.85849762 287.02743530]
[-66.64142609 279.93005371]
[-53.14411545 273.38128662]
[-39.38932800 267.39218140]
[-25.40025139 261.97283936]
[-11.20047855 257.13235474]
[3.18604803 252.87895203]
[17.73506927 249.21977234]
[32.42205048 246.16098022]
[47.22222900 243.70774841]
[62.11064911 241.86421204]
[77.06220245 240.63346863]
[92.05167389 240.01759338]
[92.05167389 225.01759338]
[92.05167389 210.01759338]
[92.05167389 195.01759338]
[92.05167389 180.01759338]
[88.90817261 173.32878113]
[92.16500854 164.79467773]
[92.38833618 149.79634094]
[92.50000000 134.79675293]
[92.50000000 119.79676056]
[80.56659698 108.39669037]
[80.44373322 91.89357758]
[92.20608521 80.31710052]
[91.98275757 65.31876373]
[84.04085541 51.63531494]
[91.58780670 38.79425812]
[91.36447906 23.79592133]
[88.30729675 17.93373871]
[88.62227631 12.25942707]
[91.36447906 8.34926510]
[91.58780670 -6.64907217]
[91.81113434 -21.64740944]
[77.55723572 -26.75672150]
[65.73619843 -36.21937561]
[57.63028717 -49.00893784]
[54.11876297 -63.73809052]
[55.58253860 -78.80912781]
[61.86282730 -92.58724976]
[72.27838898 -103.57791138]
[85.69943237 -110.58893585]
[100.67013550 -112.85980988]
[115.56658173 -110.14421082]
[128.77293396 -102.73670197]
[138.85664368 -91.44079590]
[144.72392273 -77.48179626]
[145.73832703 -62.37386322]
[141.78982544 -47.75579071]
[133.30670166 -35.21324158]
[121.20917511 -26.10673714]
[106.80947113 -21.42408180]
[106.58614349 -6.42574453]
[106.36281586 8.57259274]
[106.36281586 23.57259369]
[106.58614349 38.57093048]
[114.51207733 51.18159485]
[106.98109436 65.09543610]
[107.20442200 80.09377289]
[117.28491974 87.77734375]
[121.16924286 99.84239960]
[117.46498108 111.96395111]
[107.50000000 119.79676056]
[107.50000000 134.79675293]
[110.62940979 143.37840271]
[107.38667297 150.01966858]
[107.16334534 165.01800537]
[107.05167389 180.01759338]
[107.05167389 195.01759338]
[107.05167389 210.01759338]
[107.05167389 225.01759338]
[107.05167389 240.01759338]
[122.04115295 240.63346863]
[136.99270630 241.86421204]
[151.88111877 243.70774841]
[166.68130493 246.16098022]
[181.36828613 249.21977234]
[195.91729736 252.87895203]
[210.30383301 257.13235474]
[224.50360107 261.97283936]
[238.49267578 267.39218140]
[252.24746704 273.38128662]
[265.74478149 279.93005371]
[278.96185303 287.02743530]
[291.87640381 294.66143799]
[304.46661377 302.81924438]
[316.71133423 311.48703003]
[328.58984375 320.65023804]
[340.08218384 330.29339600]
[351.16888428 340.40023804]
[361.83132935 350.95373535]
[372.05151367 361.93606567]
[381.81219482 373.32873535]
[391.09692383 385.11251831]
[399.89001465 397.26754761]
[408.17669678 409.77331543]
[415.94296265 422.60879517]
[423.17568970 435.75225830]
[429.86276245 449.18157959]
[435.99282837 462.87414551]
[441.55557251 476.80682373]
[446.54162598 490.95611572]
[450.94256592 505.29821777]
[454.75097656 519.80889893]
[457.96044922 534.46368408]
[460.56558228 549.23785400]
[462.56195068 564.10656738]
[463.94616699 579.04467773]
[464.71597290 594.02703857]
[464.87002563 609.02838135]
[464.40805054 624.02337646]
[463.33084106 638.98681641]
[461.64022827 653.89337158]
[459.33905029 668.71795654]
[456.43118286 683.43554688]
[452.92153931 698.02136230]
[448.81604004 712.45080566]
[444.12158203 726.69952393]
[438.84609985 740.74346924]
[432.99850464 754.55902100]
[426.58865356 768.12280273]
[419.62731934 781.41204834]
[412.12625122 794.40429688]
[404.09814453 807.07757568]
[395.55648804 819.41064453]
[386.51568604 831.38256836]
[376.99102783 842.97326660]
[366.99853516 854.16314697]
[356.55505371 864.93341064]
[345.67819214 875.26574707]
[334.38632202 885.14288330]
[322.69848633 894.54803467]
[310.63433838 903.46545410]
[298.21426392 911.88006592]
[285.45922852 919.77770996]
[272.39068604 927.14495850]
[259.03070068 933.96954346]
[245.40179443 940.23980713]
[231.52694702 945.94531250]
[217.42956543 951.07635498]
[203.13342285 955.62426758]
[188.66261292 959.58142090]
[174.04153442 962.94116211]
[159.29484558 965.69781494]
[144.44743347 967.84667969]
[129.52430725 969.38421631]
[114.55063629 970.30773926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[82 130]
[83 129]
[84 127]
[85 126]
[88 122]
[89 121]
[91 119]
[92 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
