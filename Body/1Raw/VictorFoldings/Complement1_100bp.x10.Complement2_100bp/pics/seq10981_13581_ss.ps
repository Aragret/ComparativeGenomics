%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[94.93717194 433.43777466]
[91.30300140 418.86016846]
[89.68772888 403.92349243]
[90.12144470 388.90597534]
[92.59608459 374.08740234]
[97.06552887 359.74383545]
[103.44652557 346.14248657]
[111.62020111 333.53674316]
[121.43428040 322.16143799]
[132.70593262 312.22848511]
[145.22518921 303.92294312]
[158.75880432 297.39950562]
[154.14479065 283.12677002]
[142.86770630 273.39657593]
[145.98492432 257.88549805]
[141.37092590 243.61276245]
[136.75691223 229.34002686]
[132.14289856 215.06729126]
[120.86582184 205.33709717]
[123.98304749 189.82601929]
[119.36903381 175.55328369]
[114.54303741 161.35083008]
[109.50611877 147.22180176]
[104.36415863 133.13066101]
[99.11743927 119.07819366]
[85.97918701 112.96815491]
[80.91102600 99.39392090]
[86.83008575 86.16852570]
[81.58336639 72.11605835]
[76.33664703 58.06358337]
[69.45723724 44.73415756]
[61.04261780 32.31666183]
[46.89588165 25.23285103]
[46.16139603 10.35636616]
[37.74677658 -2.06112957]
[29.33215904 -14.47862530]
[20.91754150 -26.89612007]
[15.56663132 -12.88299179]
[1.32159722 -8.18416309]
[-11.31665325 -16.26343536]
[-13.03167057 -31.16506958]
[-2.55920959 -41.90413666]
[12.37940025 -40.56503296]
[4.91165876 -53.57398605]
[-2.55608249 -66.58293915]
[-10.02382374 -79.59188843]
[-26.15835953 -88.46647644]
[-25.43021011 -106.00035095]
[-33.09080887 -118.89667511]
[-40.75140381 -131.79299927]
[-54.24391556 -125.21944427]
[-68.23318481 -119.78253937]
[-82.62364960 -115.51944733]
[-97.31700897 -112.45927429]
[-112.21289825 -110.62293243]
[-127.20954895 -110.02296448]
[-142.20452881 -110.66346741]
[-157.09539795 -112.54006958]
[-171.78042603 -115.63995361]
[-186.15931702 -119.94193268]
[-200.13383484 -125.41662598]
[-213.60853577 -132.02664185]
[-226.49134827 -139.72680664]
[-238.69427490 -148.46455383]
[-250.13395691 -158.18016052]
[-260.73226929 -168.80728149]
[-270.41677856 -180.27330017]
[-279.12133789 -192.49990845]
[-286.78649902 -205.40357971]
[-293.35992432 -218.89616394]
[-298.79666138 -232.88549805]
[-303.05957031 -247.27601624]
[-306.11956787 -261.96942139]
[-307.95571899 -276.86532593]
[-308.55551147 -291.86199951]
[-307.91482544 -306.85696411]
[-306.03805542 -321.74780273]
[-302.93801880 -336.43280029]
[-298.63586426 -350.81164551]
[-293.16098022 -364.78610229]
[-286.55081177 -378.26071167]
[-278.85049438 -391.14343262]
[-270.11260986 -403.34625244]
[-260.39685059 -414.78582764]
[-249.76962280 -425.38400269]
[-238.30348206 -435.06835938]
[-226.07676697 -443.77279663]
[-213.17300415 -451.43780518]
[-199.68034363 -458.01104736]
[-185.69093323 -463.44763184]
[-171.30036926 -467.71035767]
[-156.60693359 -470.77020264]
[-141.71101379 -472.60617065]
[-126.71434021 -473.20578003]
[-111.71938324 -472.56494141]
[-96.82855988 -470.68795776]
[-82.14360046 -467.58773804]
[-67.76480865 -463.28543091]
[-53.79042053 -457.81039429]
[-40.31588745 -451.20004272]
[-27.43325806 -443.49957275]
[-15.23053646 -434.76153564]
[-3.79108071 -425.04565430]
[6.80696630 -414.41830444]
[16.49120712 -402.95202637]
[25.19548798 -390.72521973]
[32.86034775 -377.82138062]
[39.43342972 -364.32861328]
[44.86982727 -350.33917236]
[49.13241196 -335.94854736]
[52.19205856 -321.25506592]
[54.02786636 -306.35913086]
[54.62729645 -291.36245728]
[53.98625565 -276.36749268]
[52.10912323 -261.47668457]
[49.00872040 -246.79177856]
[44.70622253 -232.41304016]
[39.23102951 -218.43870544]
[32.62053299 -204.96424866]
[24.91989899 -192.08172607]
[16.18172455 -179.87910461]
[6.46570635 -168.43975830]
[-4.16178751 -157.84184265]
[-15.62815857 -148.15773010]
[-27.85507774 -139.45359802]
[-20.19448090 -126.55727386]
[-12.53388309 -113.66094971]
[-0.89289737 -110.37248230]
[5.59481716 -99.69103241]
[2.98512864 -87.05963135]
[10.45286942 -74.05068207]
[17.92061043 -61.04172897]
[25.38835144 -48.03277588]
[33.33503723 -35.31073761]
[41.74965668 -22.89324379]
[50.16427231 -10.47574806]
[58.57889175 1.94174731]
[72.12376404 8.13737488]
[73.46011353 23.90204239]
[81.87473297 36.31953812]
[80.51916504 21.38091469]
[84.28771210 6.86203003]
[92.73765564 -5.53145456]
[104.87630463 -14.34356308]
[119.27761841 -18.53906059]
[134.24974060 -17.62506104]
[148.03378296 -11.70894051]
[159.01037598 -1.48572135]
[165.89002991 11.84358501]
[167.86451721 26.71306419]
[164.70187378 41.37586212]
[156.77365112 54.10941315]
[145.01124573 63.41778946]
[130.79649353 68.20745087]
[115.79933929 67.91571808]
[101.78161621 62.57685852]
[90.38912201 52.81686783]
[95.63584137 66.86933899]
[100.88256073 80.92180634]
[114.02081299 87.03184509]
[119.08897400 100.60607910]
[113.16991425 113.83147430]
[118.41663361 127.88394165]
[124.35005951 134.82888794]
[123.63514709 142.18489075]
[128.67207336 156.31391907]
[133.45275879 160.88081360]
[134.98014832 166.35476685]
[133.64176941 170.93928528]
[138.25578308 185.21200562]
[149.86288452 195.96308899]
[146.41563416 210.45329285]
[151.02964783 224.72602844]
[155.64366150 238.99874878]
[160.25765991 253.27148438]
[171.86476135 264.02258301]
[168.41752625 278.51275635]
[173.03152466 292.78549194]
[187.82273865 290.15225220]
[202.83473206 289.55764771]
[217.78787231 291.01278687]
[232.40357971 294.49057007]
[246.40956116 299.92620850]
[259.54492188 307.21841431]
[271.56491089 316.23135376]
[282.24566650 326.79711914]
[291.38815308 338.71890259]
[298.82211304 351.77456665]
[304.40899658 365.72088623]
[308.04473877 380.29809570]
[309.66162109 395.23461914]
[309.22952271 410.25216675]
[306.75650024 425.07101440]
[302.28860474 439.41506958]
[295.90908813 453.01708984]
[287.73678589 465.62371826]
[277.92391968 477.00009155]
[266.65335083 486.93426514]
[254.13499451 495.24118042]
[240.60209656 501.76605225]
[226.30673218 506.38739014]
[211.51524353 509.01904297]
[196.50317383 509.61203003]
[181.55020142 508.15524292]
[166.93487549 504.67587280]
[152.92947388 499.23873901]
[139.79492188 491.94509888]
[127.77587891 482.93087769]
[117.09628296 472.36395264]
[107.95507812 460.44119263]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 178]
[13 177]
[15 175]
[16 174]
[17 173]
[18 172]
[20 170]
[21 169]
[22 166]
[23 165]
[24 163]
[25 162]
[28 159]
[29 158]
[30 157]
[31 140]
[32 139]
[34 137]
[35 136]
[36 135]
[37 134]
[43 133]
[44 132]
[45 131]
[46 130]
[48 127]
[49 126]
[50 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
