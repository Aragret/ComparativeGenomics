%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[81.70496368 807.87524414]
[67.68555450 813.24395752]
[53.20742035 817.21258545]
[38.41000366 819.74304199]
[23.43580818 820.81091309]
[8.42905235 820.40588379]
[-6.46573925 818.53186035]
[-21.10511780 815.20690918]
[-35.34809494 810.46301270]
[-49.05749512 804.34588623]
[-62.10129166 796.91442871]
[-74.35385895 788.24029541]
[-85.69719696 778.40692139]
[-96.02206421 767.50903320]
[-105.22901917 755.65155029]
[-113.22938538 742.94879150]
[-119.94612885 729.52294922]
[-125.31454468 715.50347900]
[-129.28294373 701.02526855]
[-131.81309509 686.22778320]
[-132.88064575 671.25354004]
[-132.47531128 656.24682617]
[-130.60098267 641.35205078]
[-127.27572632 626.71276855]
[-122.53155518 612.46984863]
[-116.41416931 598.76055908]
[-108.98247528 585.71691895]
[-100.30805206 573.46453857]
[-90.47444153 562.12139893]
[-79.57634735 551.79675293]
[-67.71872711 542.59002686]
[-55.01577759 534.58990479]
[-41.58983994 527.87347412]
[-27.57021332 522.50531006]
[-13.09192276 518.53723145]
[1.70559680 516.00732422]
[16.67983437 514.94012451]
[31.68657303 515.34576416]
[46.58129120 517.22033691]
[49.90354919 502.59289551]
[53.22581100 487.96542358]
[48.49955750 473.84057617]
[59.10121155 462.09683228]
[62.42347336 447.46936035]
[64.42748260 432.60385132]
[65.09727478 417.61880493]
[65.76705933 402.63375854]
[66.43684387 387.64871216]
[67.10662842 372.66369629]
[67.77641296 357.67864990]
[68.44619751 342.69360352]
[69.11598206 327.70855713]
[67.32599640 325.55123901]
[66.28270721 322.55487061]
[66.30996704 319.00033569]
[67.62406921 315.28045654]
[70.29806519 311.85937500]
[71.85858917 296.94076538]
[57.60514450 292.34347534]
[44.61404037 284.88009644]
[33.45433044 274.87472534]
[24.61544609 262.76293945]
[18.48569870 249.07267761]
[15.33524418 234.40138245]
[15.30417156 219.38981628]
[18.39626884 204.69415283]
[24.47875977 190.95724487]
[33.28799820 178.78053284]
[44.44089508 168.69767761]
[57.45158005 161.15122986]
[71.75257111 156.47315979]
[86.71952057 154.87023926]
[88.28004456 139.95162964]
[81.90880585 126.48847198]
[91.03981781 113.56813049]
[84.26443481 104.09525299]
[85.56227875 92.52127838]
[94.26747894 84.78430939]
[96.04994202 69.89059448]
[97.83241272 54.99687576]
[99.61487579 40.10315704]
[101.39733887 25.20944023]
[95.35475159 10.58761692]
[104.54962921 -1.13004422]
[106.33209229 -16.02376175]
[100.28950500 -30.64558411]
[109.48437500 -42.36324692]
[103.44178772 -56.98506927]
[112.63665771 -68.70272827]
[114.41912842 -83.59644318]
[116.20159149 -98.49016571]
[110.15900421 -113.11198425]
[119.35387421 -124.82965088]
[120.46952820 -139.78810120]
[120.91613007 -154.78144836]
[121.36273956 -169.77479553]
[114.03974915 -183.79922485]
[122.15255737 -196.29048157]
[122.59916687 -211.28382874]
[123.04576874 -226.27719116]
[109.47380066 -233.26033020]
[100.28260040 -245.44575500]
[97.29710388 -260.41403198]
[101.11006927 -275.19320679]
[110.96443176 -286.84887695]
[124.90361023 -293.06677246]
[140.15995789 -292.61233521]
[153.70433044 -285.57577515]
[162.84747314 -273.35424805]
[165.77400208 -258.37432861]
[161.90286255 -243.61027527]
[152.00267029 -231.99353027]
[138.03912354 -225.83058167]
[137.59251404 -210.83723450]
[137.14590454 -195.84387207]
[144.50083923 -182.89187622]
[136.35609436 -169.32820129]
[135.90948486 -154.33483887]
[135.46287537 -139.34149170]
[147.09480286 -148.81240845]
[162.03018188 -147.42156982]
[171.71334839 -135.96572876]
[170.59735107 -121.00730896]
[159.32147217 -111.11515808]
[144.34504700 -111.95597076]
[134.24758911 -123.04718018]
[140.41767883 -109.49065399]
[131.09530640 -96.70769501]
[129.31285095 -81.81398010]
[127.53038025 -66.92026520]
[133.70045471 -53.36373901]
[124.37809753 -40.58078003]
[130.54817200 -27.02425575]
[121.22580719 -14.24129581]
[119.44334412 0.65242165]
[125.61342621 14.20894623]
[116.29106140 26.99190521]
[114.50859070 41.88562393]
[112.72612762 56.77933884]
[110.94366455 71.67305756]
[109.16119385 86.56677246]
[116.15846252 101.81192017]
[105.95842743 115.12865448]
[112.21804047 129.65888977]
[103.19864655 141.51214600]
[101.63812256 156.43075562]
[115.94937897 161.09625244]
[128.97271729 168.63252258]
[140.14010620 178.70805359]
[148.96502686 190.88063049]
[155.06372070 204.61676025]
[158.17181396 219.31501770]
[158.15585327 234.33245850]
[155.01895142 249.01263428]
[148.90060425 262.71441650]
[140.07046509 274.83981323]
[128.91648865 284.86032104]
[115.92783356 292.33969116]
[101.67346191 296.95312500]
[86.77719116 298.50128174]
[85.21666718 313.41989136]
[84.10102081 328.37835693]
[83.43123627 343.36340332]
[82.76145172 358.34841919]
[82.09166718 373.33346558]
[81.42188263 388.31851196]
[80.75209808 403.30355835]
[80.08231354 418.28857422]
[79.41252136 433.27362061]
[88.09638214 421.04290771]
[101.18491364 413.71551514]
[116.15092468 412.70629883]
[130.10472107 418.21011353]
[140.35202026 429.16421509]
[144.91426086 443.45358276]
[142.91052246 458.31915283]
[134.72770691 470.89062500]
[121.94578552 478.74060059]
[107.03273773 480.35342407]
[92.86805725 475.41766357]
[82.18670654 464.88635254]
[77.05093384 450.79162598]
[73.72867584 465.41909790]
[78.21729279 480.59020996]
[67.85327148 491.28768921]
[64.53101349 505.91516113]
[61.20875168 520.54260254]
[75.45191956 525.28594971]
[89.16156006 531.40246582]
[102.20565796 538.83337402]
[114.45857239 547.50708008]
[125.80230713 557.34002686]
[136.12760925 568.23748779]
[145.33503723 580.09454346]
[153.33590698 592.79705811]
[160.05319214 606.22259521]
[165.42216492 620.24188232]
[169.39114380 634.71990967]
[171.92189026 649.51727295]
[172.99003601 664.49145508]
[172.58529663 679.49822998]
[170.71156311 694.39306641]
[167.38690186 709.03253174]
[162.64329529 723.27557373]
[156.52645874 736.98510742]
[149.09529114 750.02905273]
[140.42135620 762.28179932]
[130.58819580 773.62530518]
[119.69051361 783.95037842]
[107.83326721 793.15759277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 187]
[40 186]
[41 185]
[43 183]
[44 182]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[57 161]
[58 160]
[72 146]
[73 145]
[75 143]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[84 135]
[85 134]
[87 132]
[89 130]
[90 129]
[91 128]
[93 126]
[94 119]
[95 118]
[96 117]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
