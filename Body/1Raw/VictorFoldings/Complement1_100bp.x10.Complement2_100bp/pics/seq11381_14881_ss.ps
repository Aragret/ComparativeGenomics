%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[154.58526611 520.16876221]
[161.37544250 506.65026855]
[172.01214600 495.89315796]
[185.45332336 488.95126343]
[183.00759888 474.15197754]
[180.56187439 459.35272217]
[178.11614990 444.55343628]
[175.67041016 429.75418091]
[173.22468567 414.95489502]
[163.57685852 407.65792847]
[161.41816711 395.34841919]
[168.44306946 384.53112793]
[166.21795654 369.69708252]
[163.99282837 354.86303711]
[154.45315552 343.42434692]
[160.05772400 328.62908936]
[156.40963745 314.07946777]
[151.37271118 299.95043945]
[139.81092834 290.56033325]
[142.46495056 274.96331787]
[137.42803955 260.83428955]
[132.39111328 246.70524597]
[127.35420227 232.57621765]
[119.96330261 245.62898254]
[105.54486847 249.76525879]
[92.35842896 242.61558533]
[87.95777893 228.27563477]
[94.86380005 214.95997620]
[109.12042236 210.29641724]
[122.56017303 216.95576477]
[118.80387115 202.43370056]
[115.04756927 187.91163635]
[111.29127502 173.38958740]
[100.61333466 163.00541687]
[104.64826965 147.70736694]
[93.97033691 137.32319641]
[98.00526428 122.02516937]
[94.24896240 107.50310516]
[90.44928741 103.88697815]
[88.94613647 98.39936066]
[90.60388947 92.49269104]
[87.28163147 77.86523438]
[83.95937347 63.23777008]
[80.63710785 48.61030960]
[77.31484985 33.98284912]
[73.99259186 19.35539055]
[63.39093781 7.61164618]
[68.11718750 -6.51321936]
[64.79492950 -21.14067841]
[60.18091965 -35.41341400]
[54.31195831 -49.21759033]
[48.44299698 -63.02176666]
[35.92301559 -72.69444275]
[38.06376266 -87.43440247]
[32.19480133 -101.23857880]
[26.32584190 -115.04275513]
[13.80585861 -124.71543121]
[15.94660568 -139.45539856]
[10.07764530 -153.25956726]
[5.03360415 -157.53381348]
[3.18311238 -162.90715027]
[4.24623728 -167.56320190]
[-1.20911956 -181.53599548]
[-6.66447687 -195.50878906]
[-12.11983395 -209.48159790]
[-17.57519150 -223.45439148]
[-23.03054810 -237.42718506]
[-35.25698853 -247.46833801]
[-32.67832565 -262.13803101]
[-38.13368225 -276.11083984]
[-44.16985321 -282.96667480]
[-43.56454468 -290.33248901]
[-48.81126022 -304.38494873]
[-60.88684845 -314.60702515]
[-58.09006119 -329.23669434]
[-72.84824371 -326.36514282]
[-87.87779236 -325.96200562]
[-102.76869202 -328.03833008]
[-117.11470795 -332.53741455]
[-130.52445984 -339.33654785]
[-142.63212585 -348.25024414]
[-153.10740662 -359.03533936]
[-161.66453552 -371.39761353]
[-168.07003784 -384.99978638]
[-172.14920044 -399.47082520]
[-173.79071045 -414.41589355]
[-172.94981384 -429.42730713]
[-169.64942932 -444.09555054]
[-163.97961426 -458.02044678]
[-156.09503174 -470.82214355]
[-146.21076965 -482.15136719]
[-134.59649658 -491.69906616]
[-121.56905365 -499.20477295]
[-107.48384094 -504.46371460]
[-92.72509766 -507.33242798]
[-77.69547272 -507.73266602]
[-62.80497742 -505.65350342]
[-48.45983505 -501.15164185]
[-35.05138779 -494.34991455]
[-22.94543457 -485.43386841]
[-12.47223186 -474.64675903]
[-3.91749573 -462.28283691]
[2.48539376 -448.67944336]
[6.56176090 -434.20764160]
[8.20039940 -419.26223755]
[7.35660696 -404.25097656]
[4.05340147 -389.58337402]
[-1.61910224 -375.65957642]
[-9.50615406 -362.85940552]
[-19.39259148 -351.53207397]
[-31.00870132 -341.98660278]
[-44.03759003 -334.48342896]
[-32.33728409 -325.26647949]
[-34.75878906 -309.63168335]
[-29.51207161 -295.57919312]
[-24.16088486 -281.56619263]
[-18.70552826 -267.59338379]
[-6.86929226 -258.55166626]
[-9.05774975 -242.88253784]
[-3.60239291 -228.90974426]
[1.85296416 -214.93695068]
[7.30832100 -200.96415710]
[12.76367855 -186.99134827]
[18.21903610 -173.01855469]
[23.88182259 -159.12852478]
[29.75078201 -145.32435608]
[41.85097885 -136.63903809]
[40.13001633 -120.91172028]
[45.99897766 -107.10753632]
[51.86793900 -93.30335999]
[63.96813583 -84.61805725]
[62.24717331 -68.89072418]
[68.11613464 -55.08655167]
[73.98509979 -41.28237534]
[76.53372192 -56.06427383]
[85.17295074 -68.32656097]
[98.23469543 -75.70157623]
[113.19692993 -76.76532745]
[127.17067719 -71.31241608]
[137.45783997 -60.39571381]
[142.07211304 -46.12306976]
[140.12255859 -31.25029945]
[131.98561096 -18.64910889]
[119.23237610 -10.75258636]
[104.32531738 -9.08542919]
[90.14273834 -13.96953773]
[79.42238617 -24.46293831]
[82.74465179 -9.83547878]
[93.10867310 0.86201096]
[88.62004852 16.03313065]
[91.94231415 30.66059113]
[95.26457214 45.28805161]
[98.58683014 59.91551208]
[101.90908813 74.54296875]
[105.23134613 89.17043304]
[108.77101898 103.74680328]
[112.52732086 118.26886749]
[123.47393036 129.69175720]
[119.17032623 143.95108032]
[130.11692810 155.37396240]
[125.81333160 169.63328552]
[129.56962585 184.15533447]
[133.32592773 198.67739868]
[137.08222961 213.19946289]
[141.48323059 227.53930664]
[146.52014160 241.66833496]
[151.55706787 255.79736328]
[156.59397888 269.92639160]
[168.51603699 280.32711792]
[165.50173950 294.91354370]
[170.53866577 309.04257202]
[173.64344788 294.36740112]
[182.38262939 282.17614746]
[195.28353882 274.52325439]
[210.17210388 272.69836426]
[224.53938293 277.00900269]
[235.96420288 286.72872925]
[242.52130127 300.21963501]
[243.10568237 315.20825195]
[237.61886597 329.16873169]
[226.98548889 339.74847412]
[212.99745178 345.16464233]
[198.01197815 344.50448608]
[184.55439758 337.87927246]
[174.89176941 326.40399170]
[184.59059143 338.90371704]
[178.82687378 352.63793945]
[181.05198669 367.47198486]
[183.27711487 382.30603027]
[195.07914734 396.44085693]
[188.02395630 412.50918579]
[190.46968079 427.30844116]
[192.91542053 442.10772705]
[195.36114502 456.90698242]
[197.80686951 471.70626831]
[200.25259399 486.50552368]
[215.21255493 488.75387573]
[228.74462891 495.51684570]
[239.52311707 506.13189697]
[246.49201965 519.55908203]
[248.96861267 534.48297119]
[246.71025085 549.44140625]
[239.93820190 562.96893311]
[229.31591797 573.74029541]
[215.88406372 580.70025635]
[200.95854187 583.16680908]
[186.00161743 580.89843750]
[172.47860718 574.11730957]
[161.71437073 563.48785400]
[154.76345825 550.05133057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[12 189]
[13 188]
[14 187]
[16 185]
[17 171]
[18 170]
[20 168]
[21 167]
[22 166]
[23 165]
[30 164]
[31 163]
[32 162]
[33 161]
[35 159]
[37 157]
[38 156]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[48 148]
[49 147]
[50 134]
[51 133]
[52 132]
[54 130]
[55 129]
[56 128]
[58 126]
[59 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[69 117]
[70 116]
[72 115]
[73 114]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
