%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[95.05972290 515.75695801]
[80.13755035 517.38299561]
[65.12934113 517.64538574]
[50.15945053 516.54187012]
[35.35193634 514.08166504]
[20.82949448 510.28506470]
[6.71246672 505.18362427]
[-6.88216639 498.81958008]
[-19.84175301 491.24563599]
[-32.05890656 482.52459717]
[-43.43238449 472.72872925]
[-53.86794281 461.93917847]
[-63.27910995 450.24539185]
[-71.58789825 437.74420166]
[-78.72545624 424.53927612]
[-84.63264465 410.73995972]
[-89.26050568 396.46069336]
[-92.57069397 381.81970215]
[-94.53578186 366.93838501]
[-95.13948059 351.94003296]
[-94.37679291 336.94891357]
[-92.25402832 322.08926392]
[-88.78879547 307.48422241]
[-84.00979614 293.25482178]
[-77.95662689 279.51892090]
[-70.67945862 266.39041138]
[-62.23859406 253.97802734]
[-52.70396805 242.38465881]
[-42.15459442 231.70637512]
[-30.67789268 222.03163147]
[-18.36896133 213.44062805]
[-5.32979774 206.00453186]
[8.33154774 199.78497314]
[22.50187111 194.83349609]
[37.06375122 191.19111633]
[51.89651871 188.88803101]
[66.87726593 187.94331360]
[81.88185120 188.36479187]
[83.66431427 173.47106934]
[77.49423218 159.91455078]
[86.81660461 147.13159180]
[80.64652252 133.57507324]
[89.96888733 120.79210663]
[91.75135040 105.89839172]
[89.50618744 98.15682983]
[93.67283630 90.79680634]
[95.67684937 75.93128204]
[97.68086243 61.06575012]
[99.68487549 46.20022202]
[101.68888855 31.33469391]
[103.69290161 16.46916580]
[105.69691467 1.60363758]
[96.59906006 13.52962112]
[83.84561920 21.42580605]
[69.11452484 24.25331306]
[54.34390259 21.64013290]
[41.47708511 13.93007755]
[32.20692062 2.13753510]
[27.75305939 -12.18598175]
[28.70148468 -27.15596771]
[34.92741394 -40.80286407]
[45.61172104 -51.33118820]
[59.34870148 -57.35575485]
[74.33101654 -58.08393097]
[88.58748627 -53.41991425]
[100.24242401 -43.97733307]
[107.76242828 -30.99852180]
[110.15805817 -16.18868828]
[115.40477753 -30.24115944]
[104.92455292 -41.28317642]
[100.29667664 -55.72166061]
[102.38805389 -70.67646790]
[110.73083496 -83.18882751]
[123.62570190 -90.80668640]
[138.48779297 -92.06520081]
[143.73451233 -106.11767578]
[148.98123169 -120.17014313]
[154.22793579 -134.22261047]
[140.62324524 -140.55873108]
[127.55761719 -147.94271851]
[115.11161041 -156.32908630]
[103.36196136 -165.66610718]
[92.38111115 -175.89620972]
[82.23676300 -186.95632935]
[72.99146271 -198.77827454]
[64.70220184 -211.28916931]
[57.42009735 -224.41184998]
[51.19004440 -238.06544495]
[46.05044937 -252.16575623]
[42.03300476 -266.62585449]
[39.16247559 -281.35656738]
[37.45656204 -296.26708984]
[36.92578125 -311.26550293]
[37.57340622 -326.25933838]
[39.39544678 -341.15612793]
[42.38066483 -355.86401367]
[46.51065826 -370.29235840]
[51.75996017 -384.35220337]
[58.09621048 -397.95684814]
[65.48033905 -411.02239990]
[73.86682892 -423.46832275]
[83.20396423 -435.21786499]
[93.43418121 -446.19860840]
[104.49440765 -456.34283447]
[116.31645203 -465.58801270]
[128.82742310 -473.87716675]
[141.95018005 -481.15911865]
[155.60383606 -487.38903809]
[169.70419312 -492.52850342]
[184.16433716 -496.54577637]
[198.89508057 -499.41616821]
[213.80563354 -501.12191772]
[228.80404663 -501.65255737]
[243.79786682 -501.00479126]
[258.69464111 -499.18258667]
[273.40249634 -496.19720459]
[287.83081055 -492.06707764]
[301.89059448 -486.81762695]
[315.49517822 -480.48123169]
[328.56063843 -473.09698486]
[341.00646973 -464.71035767]
[352.75592041 -455.37310791]
[363.73657227 -445.14279175]
[373.88070679 -434.08245850]
[383.12576294 -422.26031494]
[391.41476440 -409.74926758]
[398.69659424 -396.62640381]
[404.92636108 -382.97268677]
[410.06567383 -368.87228394]
[414.08282471 -354.41210938]
[416.95306396 -339.68133545]
[418.65866089 -324.77078247]
[419.18914795 -309.77233887]
[418.54119873 -294.77853394]
[416.71887207 -279.88177490]
[413.73333740 -265.17395020]
[409.60305786 -250.74568176]
[404.35345459 -236.68594360]
[398.01693726 -223.08145142]
[390.63253784 -210.01603699]
[382.24578857 -197.57029724]
[372.90841675 -185.82093811]
[362.67797852 -174.84039307]
[351.61755371 -164.69638062]
[339.79531860 -155.45144653]
[327.28417969 -147.16256714]
[314.16125488 -139.88087463]
[300.50747681 -133.65122986]
[286.40701294 -128.51206970]
[271.94680786 -124.49506378]
[257.21600342 -121.62499237]
[242.30541992 -119.91953278]
[227.30699158 -119.38921356]
[212.31318665 -120.03730011]
[197.41645813 -121.85979462]
[182.70863342 -124.84546661]
[168.28041077 -128.97589111]
[163.03369141 -114.92342377]
[157.78697205 -100.87095642]
[152.54025269 -86.81848145]
[162.94088745 -76.12772369]
[167.68792725 -61.92296600]
[165.78903198 -47.00468445]
[157.56770325 -34.33859253]
[144.60966492 -26.46609688]
[129.45724487 -24.99444008]
[124.21053314 -10.94196892]
[120.56244659 3.60765123]
[118.55843353 18.47317886]
[116.55441284 33.33870697]
[114.55039978 48.20423508]
[112.54638672 63.06976318]
[110.54237366 77.93529510]
[108.53836060 92.80081940]
[106.64507294 107.68085480]
[104.86260223 122.57456970]
[110.90518951 137.19639587]
[101.71031952 148.91406250]
[107.75290680 163.53587341]
[98.55803680 175.25354004]
[96.77556610 190.14726257]
[111.45586395 193.27842712]
[125.79059601 197.73159790]
[139.66098022 203.46986389]
[152.95208740 210.44564819]
[165.55377197 218.60118103]
[177.36161804 227.86886597]
[188.27778625 238.17190552]
[198.21180725 249.42492676]
[207.08135986 261.53469849]
[214.81295776 274.40084839]
[221.34252930 287.91674805]
[226.61596680 301.97042847]
[230.58956909 316.44543457]
[233.23040771 331.22180176]
[234.51661682 346.17712402]
[234.43751526 361.18740845]
[232.99375916 376.12832642]
[230.19734192 390.87603760]
[226.07141113 405.30834961]
[220.65014648 419.30569458]
[213.97850037 432.75204468]
[206.11174011 445.53598022]
[197.11505127 457.55160522]
[187.06298828 468.69931030]
[176.03884888 478.88671875]
[164.13398743 488.02944946]
[151.44703674 496.05172729]
[138.08316040 502.88705444]
[124.15306854 508.47882080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 181]
[39 180]
[41 178]
[43 176]
[44 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[68 167]
[69 166]
[75 160]
[76 159]
[77 158]
[78 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
