%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[66.50307465 678.50317383]
[51.58563232 680.11083984]
[36.60227203 680.89434814]
[21.59850502 680.85125732]
[6.61989594 679.98168945]
[-8.28806591 678.28826904]
[-23.08010674 675.77624512]
[-37.71129990 672.45312500]
[-52.13721466 668.32904053]
[-66.31403351 663.41656494]
[-80.19871521 657.73059082]
[-93.74907684 651.28833008]
[-106.92397308 644.10937500]
[-119.68338776 636.21557617]
[-131.98858643 627.63085938]
[-143.80216980 618.38134766]
[-155.08828735 608.49505615]
[-165.81265259 598.00207520]
[-175.94268799 586.93420410]
[-185.44764709 575.32513428]
[-194.29866028 563.21008301]
[-202.46882629 550.62585449]
[-209.93334961 537.61065674]
[-216.66955566 524.20397949]
[-222.65699768 510.44659424]
[-227.87747192 496.38027954]
[-232.31513977 482.04772949]
[-235.95651245 467.49249268]
[-238.79055786 452.75872803]
[-240.80862427 437.89123535]
[-242.00462341 422.93515015]
[-242.37490845 407.93591309]
[-241.91835022 392.93902588]
[-240.63633728 377.99005127]
[-238.53276062 363.13442993]
[-235.61401367 348.41723633]
[-231.88896179 333.88317871]
[-227.36892700 319.57638550]
[-222.06761169 305.54034424]
[-216.00112915 291.81762695]
[-209.18791199 278.44995117]
[-201.64863586 265.47787476]
[-193.40620422 252.94085693]
[-184.48565674 240.87690735]
[-174.91407776 229.32270813]
[-164.72053528 218.31332397]
[-153.93597412 207.88218689]
[-142.59318542 198.06100464]
[-130.72657776 188.87957764]
[-118.37220001 180.36579895]
[-105.56758118 172.54553223]
[-92.35160828 165.44252014]
[-78.76441193 159.07832336]
[-64.84725189 153.47229004]
[-50.64240646 148.64143372]
[-36.19300461 144.60041809]
[-21.54293633 141.36154175]
[-6.73669100 138.93461609]
[8.18076611 137.32702637]
[23.16412926 136.54364014]
[38.16789627 136.58685303]
[53.14649963 137.45651245]
[68.05445099 139.15000916]
[82.84647369 141.66217041]
[86.16873169 127.03470612]
[89.49098969 112.40724945]
[84.11772156 96.51686859]
[95.64781189 84.33355713]
[98.75192261 69.65824890]
[101.85603333 54.98294830]
[104.96014404 40.30764771]
[90.55098724 36.11380005]
[76.49552917 30.85487747]
[62.87237167 24.56028938]
[49.75770569 17.26523590]
[37.22487640 9.01051617]
[25.34397316 -0.15770680]
[14.18143559 -10.18815899]
[3.79969239 -21.02474594]
[-5.74319744 -32.60686493]
[-14.39386559 -44.86974335]
[-22.10393333 -57.74479675]
[-28.83028221 -71.16002655]
[-34.53529739 -85.04041290]
[-39.18706894 -99.30831909]
[-42.75958633 -113.88396454]
[-45.23286819 -128.68582153]
[-46.59308243 -143.63111877]
[-46.83262634 -158.63629150]
[-45.95015717 -173.61738586]
[-43.95060730 -188.49064636]
[-40.84516144 -203.17289734]
[-36.65119171 -217.58203125]
[-31.39214325 -231.63743591]
[-25.09743500 -245.26054382]
[-17.80226517 -258.37515259]
[-9.54743576 -270.90789795]
[-0.37910795 -282.78872681]
[9.65144253 -293.95117188]
[20.48812103 -304.33282471]
[32.07032394 -313.87561035]
[44.33327866 -322.52615356]
[57.20840073 -330.23611450]
[70.62369537 -336.96234131]
[84.50412750 -342.66723633]
[98.77207184 -347.31887817]
[113.34774780 -350.89126587]
[128.14962769 -353.36444092]
[143.09494019 -354.72451782]
[158.10011292 -354.96392822]
[173.08120728 -354.08132935]
[187.95445251 -352.08163452]
[202.63667297 -348.97607422]
[217.04576111 -344.78195190]
[231.10112000 -339.52279663]
[244.72416687 -333.22796631]
[257.83871460 -325.93267822]
[270.37139893 -317.67773438]
[282.25213623 -308.50930786]
[293.41448975 -298.47866821]
[303.79605103 -287.64187622]
[313.33871460 -276.05960083]
[321.98916626 -263.79656982]
[329.69903564 -250.92138672]
[336.42514038 -237.50602722]
[342.12991333 -223.62554932]
[346.78143311 -209.35755920]
[350.35369873 -194.78184509]
[352.82669067 -179.97994995]
[354.18664551 -165.03462219]
[354.42593384 -150.02944946]
[353.54321289 -135.04837036]
[351.54339600 -120.17514038]
[348.43768311 -105.49294281]
[344.24346924 -91.08389282]
[338.98416138 -77.02857971]
[332.68920898 -63.40558624]
[325.39382935 -50.29111481]
[317.13876343 -37.75850677]
[307.97021484 -25.87784195]
[297.93948364 -14.71557045]
[287.10263062 -4.33411360]
[275.52023315 5.20846987]
[263.25714111 13.85881329]
[250.38188171 21.56854057]
[236.96647644 28.29453468]
[223.08593750 33.99917984]
[208.81790161 38.65057755]
[194.24217224 42.22270966]
[179.44024658 44.69559860]
[164.49490356 46.05541992]
[149.48974609 46.29456711]
[134.50866699 45.41169739]
[119.63544464 43.41175461]
[116.53134155 58.08705902]
[113.42723083 72.76235962]
[110.32312012 87.43766022]
[116.07622528 97.56401825]
[113.58132935 108.94016266]
[104.11845398 115.72950745]
[100.79619598 130.35696411]
[97.47393036 144.98442078]
[111.89987946 149.10838318]
[126.07673645 154.02078247]
[139.96145630 159.70669556]
[153.51185608 166.14884949]
[166.68679810 173.32768250]
[179.44627380 181.22138977]
[191.75152588 189.80601501]
[203.56518555 199.05546570]
[214.85136414 208.94166565]
[225.57580566 219.43458557]
[235.70593262 230.50234985]
[245.21096802 242.11135864]
[254.06205750 254.22636414]
[262.23229980 266.81054688]
[269.69692993 279.82571411]
[276.43322754 293.23229980]
[282.42077637 306.98965454]
[287.64135742 321.05593872]
[292.07910156 335.38845825]
[295.72058105 349.94366455]
[298.55471802 364.67739868]
[300.57290649 379.54486084]
[301.76901245 394.50094604]
[302.13940430 409.50021362]
[301.68295288 424.49710083]
[300.40103149 439.44604492]
[298.29757690 454.30169678]
[295.37893677 469.01892090]
[291.65399170 483.55300903]
[287.13403320 497.85983276]
[281.83282471 511.89593506]
[275.76644897 525.61865234]
[268.95330811 538.98638916]
[261.41412354 551.95849609]
[253.17179871 564.49560547]
[244.25132751 576.55963135]
[234.67982483 588.11389160]
[224.48635864 599.12335205]
[213.70188904 609.55456543]
[202.35914612 619.37579346]
[190.49261475 628.55731201]
[178.13829041 637.07116699]
[165.33374023 644.89154053]
[152.11781311 651.99462891]
[138.53065491 658.35894775]
[124.61353302 663.96508789]
[110.40872192 668.79602051]
[95.95935059 672.83715820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 162]
[65 161]
[66 160]
[68 157]
[69 156]
[70 155]
[71 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
