%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[16.11043739 732.46258545]
[1.39632130 735.39227295]
[-13.44215584 737.60760498]
[-28.37033653 739.10351562]
[-43.35335541 739.87640381]
[-58.35622025 739.92449951]
[-73.34388733 739.24774170]
[-88.28135681 737.84765625]
[-103.13374329 735.72753906]
[-117.86634827 732.89227295]
[-132.44477844 729.34857178]
[-146.83496094 725.10467529]
[-161.00331116 720.17053223]
[-174.91673279 714.55755615]
[-188.54272461 708.27899170]
[-201.84945679 701.34942627]
[-214.80586243 693.78503418]
[-227.38166809 685.60351562]
[-239.54751587 676.82397461]
[-251.27499390 667.46691895]
[-262.53668213 657.55419922]
[-273.30633545 647.10894775]
[-283.55874634 636.15557861]
[-293.26998901 624.71966553]
[-302.41738892 612.82794189]
[-310.97958374 600.50811768]
[-318.93655396 587.78906250]
[-326.26971436 574.70037842]
[-332.96197510 561.27276611]
[-338.99768066 547.53747559]
[-344.36276245 533.52655029]
[-349.04461670 519.27288818]
[-353.03240967 504.80960083]
[-356.31674194 490.17056274]
[-358.88998413 475.38995361]
[-360.74612427 460.50225830]
[-361.88079834 445.54229736]
[-362.29141235 430.54498291]
[-361.97695923 415.54531860]
[-360.93817139 400.57839966]
[-359.17752075 385.67910767]
[-356.69906616 370.88232422]
[-353.50863647 356.22253418]
[-349.61367798 341.73400879]
[-345.02325439 327.45056152]
[-339.74813843 313.40560913]
[-333.80059814 299.63189697]
[-327.19454956 286.16162109]
[-319.94540405 273.02621460]
[-312.07012939 260.25640869]
[-303.58709717 247.88197327]
[-294.51611328 235.93185425]
[-284.87838745 224.43392944]
[-274.69641113 213.41505432]
[-263.99392700 202.90098572]
[-252.79600525 192.91627502]
[-241.12875366 183.48422241]
[-229.01943970 174.62687683]
[-216.49632263 166.36491394]
[-203.58868408 158.71763611]
[-190.32664490 151.70289612]
[-176.74118042 145.33709717]
[-162.86402893 139.63507080]
[-148.72760010 134.61016846]
[-134.36491394 130.27410889]
[-119.80950165 126.63703918]
[-105.09537506 123.70742035]
[-90.25688934 121.49212646]
[-75.32869720 119.99630737]
[-60.34567261 119.22347260]
[-45.34281158 119.17542267]
[-30.35514450 119.85227203]
[-15.41768074 121.25242615]
[-0.56530744 123.37263489]
[14.16728687 126.20793152]
[28.74569321 129.75170898]
[43.13586426 133.99566650]
[57.30419159 138.92991638]
[71.21758270 144.54292297]
[77.49494171 130.91961670]
[83.77230072 117.29629517]
[90.04965973 103.67298126]
[95.81569672 89.82549286]
[101.06241608 75.77301788]
[106.30912781 61.72055054]
[111.55584717 47.66807938]
[116.80256653 33.61560822]
[122.04928589 19.56313705]
[108.60945129 12.87070370]
[95.94281006 4.81006813]
[84.18814087 -4.53045464]
[73.47422791 -15.04852486]
[63.91846085 -26.62889862]
[55.62554169 -39.14469910]
[48.68633270 -52.45879364]
[43.17686462 -66.42530060]
[39.15749359 -80.89120483]
[36.67226791 -95.69800568]
[35.74840927 -110.68347168]
[36.39604568 -125.68341827]
[38.60808182 -140.53349304]
[42.36027527 -155.07098389]
[47.61151886 -169.13662720]
[54.30427933 -182.57629395]
[62.36522293 -195.24273682]
[71.70603180 -206.99717712]
[82.22435760 -217.71084595]
[93.80496979 -227.26632690]
[106.32096863 -235.55892944]
[119.63523102 -242.49781799]
[133.60188293 -248.00695801]
[148.06787109 -252.02597046]
[162.87474060 -254.51083374]
[177.86022949 -255.43432617]
[192.86015320 -254.78633118]
[207.71017456 -252.57392883]
[222.24757385 -248.82138062]
[236.31307983 -243.56980896]
[249.75259399 -236.87670898]
[262.41885376 -228.81546021]
[274.17306519 -219.47436523]
[284.88647461 -208.95578003]
[294.44165039 -197.37493896]
[302.73397827 -184.85873413]
[309.67254639 -171.54431152]
[315.18133545 -157.57752991]
[319.19998169 -143.11143494]
[321.68450928 -128.30450439]
[322.60763550 -113.31900024]
[321.95925903 -98.31908417]
[319.74652100 -83.46912384]
[315.99362183 -68.93180847]
[310.74166870 -54.86642838]
[304.04827881 -41.42708588]
[295.98672485 -28.76103020]
[286.64532471 -17.00703812]
[276.12649536 -6.29389143]
[264.54541016 3.26102877]
[252.02900696 11.55303478]
[238.71441650 18.49127388]
[224.74749756 23.99972725]
[210.28129578 28.01804161]
[195.47431946 30.50218964]
[180.48878479 31.42495346]
[165.48889160 30.77622414]
[150.63897705 28.56310844]
[136.10176086 24.80985451]
[130.85504150 38.86232376]
[125.60832214 52.91479874]
[120.36160278 66.96726990]
[115.11488342 81.01973724]
[109.86816406 95.07221222]
[124.39015198 91.31562042]
[136.47262573 100.20460510]
[137.20881653 115.18652344]
[126.05606079 125.21727753]
[111.23573303 122.90255737]
[103.67298126 109.95034027]
[97.39561462 123.57365417]
[91.11825562 137.19697571]
[84.84089661 150.82028198]
[98.14766693 157.74980164]
[111.10410309 165.31411743]
[123.67995453 173.49557495]
[135.84584045 182.27505493]
[147.57336426 191.63206482]
[158.83511353 201.54475403]
[169.60479736 211.98994446]
[179.85726929 222.94326782]
[189.56857300 234.37911987]
[198.71601868 246.27081299]
[207.27825928 258.59057617]
[215.23529053 271.30960083]
[222.56854248 284.39822388]
[229.26086426 297.82583618]
[235.29663086 311.56112671]
[240.66175842 325.57196045]
[245.34370422 339.82565308]
[249.33154297 354.28887939]
[252.61595154 368.92791748]
[255.18925476 383.70852661]
[257.04547119 398.59619141]
[258.18023682 413.55615234]
[258.59091187 428.55346680]
[258.27651978 443.55313110]
[257.23782349 458.52005005]
[255.47721863 473.41934204]
[252.99885559 488.21615601]
[249.80848694 502.87597656]
[245.91358948 517.36450195]
[241.32324219 531.64794922]
[236.04817200 545.69293213]
[230.10070801 559.46667480]
[223.49472046 572.93701172]
[216.24565125 586.07244873]
[208.37043762 598.84228516]
[199.88746643 611.21673584]
[190.81654358 623.16693115]
[181.17886353 634.66491699]
[170.99691772 645.68377686]
[160.29450989 656.19793701]
[149.09663391 666.18267822]
[137.42942810 675.61480713]
[125.32014465 684.47222900]
[112.79707336 692.73425293]
[99.88946533 700.38159180]
[86.62745667 707.39636230]
[73.04202271 713.76226807]
[59.16490173 719.46429443]
[45.02849960 724.48931885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 161]
[80 160]
[81 159]
[82 158]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
