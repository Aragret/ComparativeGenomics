%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[17.75586128 421.78869629]
[21.57150459 436.33795166]
[22.72774696 451.33471680]
[21.18742371 466.29690552]
[17.00004578 480.74356079]
[10.30022430 494.21026611]
[1.30332685 506.26412964]
[-9.70143127 516.51770020]
[-22.36029434 524.64129639]
[-36.26633072 530.37384033]
[-50.97251892 533.53100586]
[-66.00611115 534.01135254]
[-80.88385010 531.79937744]
[-95.12747192 526.96630859]
[-108.27910614 519.66735840]
[-119.91597748 510.13723755]
[-129.66401672 498.68231201]
[-137.20985413 485.67077637]
[-142.31092834 471.52090454]
[-144.80325317 456.68756104]
[-144.60671997 441.64755249]
[-141.72764587 426.88439941]
[-136.25857544 412.87265015]
[-128.37532043 400.06274414]
[-118.33130646 388.86642456]
[-106.44938660 379.64364624]
[-93.11152649 372.69085693]
[-78.74647522 368.23156738]
[-63.81602097 366.40914917]
[-48.80010605 367.28216553]
[-34.18143845 370.82254028]
[-28.10760307 357.10726929]
[-22.03376961 343.39199829]
[-23.95482254 328.62179565]
[-11.29221630 319.13659668]
[-5.21838188 305.42132568]
[0.85545188 291.70608521]
[6.92928600 277.99081421]
[6.04648113 275.33020020]
[6.16438437 272.15960693]
[7.48252487 268.85839844]
[10.05953121 265.87118530]
[13.79461956 263.65689087]
[20.67403221 250.32745361]
[27.55344391 236.99801636]
[34.43285751 223.66859436]
[33.39434814 208.81024170]
[46.59907150 200.09555054]
[44.82857895 182.63610840]
[60.40628433 172.81690979]
[66.68364716 159.19358826]
[72.55260468 145.38941956]
[78.42156982 131.58523560]
[84.29052734 117.78105927]
[90.15948486 103.97688293]
[95.19640350 89.84785461]
[99.38341522 75.44406891]
[103.57042694 61.04028702]
[107.75743866 46.63650513]
[111.18849945 32.03418350]
[113.85429382 17.27296638]
[116.52008820 2.51174879]
[118.85557556 -12.30531883]
[120.85958862 -27.17084694]
[122.86360168 -42.03637695]
[124.86761475 -56.90190506]
[126.87163544 -71.76743317]
[128.87564087 -86.63295746]
[130.87965393 -101.49848938]
[132.88366699 -116.36401367]
[134.88768005 -131.22953796]
[136.89169312 -146.09507751]
[138.45222473 -161.01367188]
[139.56787109 -175.97213745]
[132.87841797 -190.30955505]
[141.54089355 -202.42610168]
[140.09147644 -217.35591125]
[136.11938477 -231.82043457]
[132.14727783 -246.28495789]
[128.17518616 -260.74948120]
[124.20308685 -275.21401978]
[109.19257355 -274.13201904]
[94.25943756 -275.99954224]
[79.97766113 -280.74478149]
[66.89620972 -288.18533325]
[55.51789856 -298.03521729]
[46.28007126 -309.91580200]
[39.53780746 -323.37048340]
[35.55026627 -337.88204956]
[34.47071457 -352.89273071]
[36.34064865 -367.82559204]
[41.08819199 -382.10659790]
[48.53086472 -395.18682861]
[58.38258743 -406.56353760]
[70.26468658 -415.79946899]
[83.72044373 -422.53955078]
[98.23266602 -426.52474976]
[113.24353027 -427.60186768]
[128.17605591 -425.72949219]
[142.45629883 -420.97964478]
[155.53533936 -413.53485107]
[166.91046143 -403.68130493]
[176.14443970 -391.79769897]
[182.88235474 -378.34085083]
[186.86520386 -363.82800293]
[187.93989563 -348.81695557]
[186.06512451 -333.88473511]
[181.31295776 -319.60525513]
[173.86604309 -306.52740479]
[164.01065063 -295.15390015]
[152.12554932 -285.92181396]
[138.66761780 -279.18609619]
[142.63970947 -264.72158813]
[146.61180115 -250.25704956]
[150.58390808 -235.79252625]
[154.55599976 -221.32800293]
[157.44377136 -236.04740906]
[163.85522461 -249.60812378]
[173.39830017 -261.18093872]
[185.48942566 -270.05813599]
[199.38922119 -275.69689941]
[214.24771118 -277.75241089]
[229.15631104 -276.09893799]
[243.20332336 -270.83764648]
[255.52980042 -262.29025269]
[265.38195801 -250.97940063]
[272.15731812 -237.59678650]
[275.44158936 -222.96075439]
[275.03390503 -207.96629333]
[270.95922852 -193.53031921]
[263.46673584 -180.53562927]
[253.01455688 -169.77680969]
[240.24188232 -161.91178894]
[225.92973328 -157.42152405]
[210.95332336 -156.58058167]
[196.22846985 -159.44038391]
[182.65557861 -165.82606506]
[171.06466675 -175.34712219]
[162.16450500 -187.42135620]
[156.49934387 -201.31045532]
[163.26860046 -188.04295349]
[154.52632141 -174.85647583]
[153.41067505 -159.89802551]
[155.13563538 -157.68835449]
[156.08924866 -154.66226196]
[155.95617676 -151.11012268]
[154.53189087 -147.43099976]
[151.75723267 -144.09106445]
[149.75321960 -129.22552490]
[147.74920654 -114.36000061]
[145.74519348 -99.49447632]
[143.74118042 -84.62894440]
[141.73716736 -69.76342010]
[139.73313904 -54.89788818]
[137.72912598 -40.03236008]
[135.72511292 -25.16683388]
[133.72109985 -10.30130577]
[135.55662537 -7.29078579]
[136.02514648 -3.24164677]
[134.65443420 1.19393933]
[131.28131104 5.17754459]
[128.61550903 19.93876076]
[125.94971466 34.69997787]
[138.22221375 26.07526207]
[153.17758179 27.23160934]
[163.97840881 37.64035416]
[165.68672180 52.54275894]
[157.52149963 65.12564850]
[143.21575928 69.63628387]
[129.30990601 64.01247406]
[122.16121674 50.82351685]
[117.97421265 65.22730255]
[113.78720093 79.63108063]
[109.60018921 94.03486633]
[122.23438263 85.94924927]
[137.21461487 86.71888733]
[148.95365906 96.05671692]
[153.07310486 110.47996521]
[148.03652954 124.60911560]
[135.72242737 133.17434692]
[120.72367859 132.98103333]
[108.63442993 124.10127258]
[103.96366882 109.84584045]
[98.09470367 123.65001678]
[92.22574615 137.45419312]
[86.35678101 151.25837708]
[80.48782349 165.06254578]
[81.16762543 169.35112000]
[80.51319885 173.24165344]
[78.81351471 176.36358643]
[76.44819641 178.47827148]
[73.83666229 179.49710083]
[77.19355774 191.95077515]
[71.35311890 202.99943542]
[59.92850113 206.97496033]
[60.47494888 222.78672791]
[47.76228714 230.54800415]
[40.88287354 243.87744141]
[34.00345993 257.20687866]
[27.12404823 270.53628540]
[20.64455223 284.06463623]
[14.57071877 297.77990723]
[8.49688435 311.49517822]
[2.42305064 325.21044922]
[3.90966272 340.96163940]
[-8.31850243 349.46585083]
[-14.39233589 363.18109131]
[-20.46616936 376.89636230]
[-8.01972675 385.34182739]
[2.71855211 395.87411499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 208]
[32 207]
[33 206]
[35 204]
[36 203]
[37 202]
[38 201]
[43 200]
[44 199]
[45 198]
[46 197]
[48 195]
[50 192]
[51 187]
[52 186]
[53 185]
[54 184]
[55 183]
[56 174]
[57 173]
[58 172]
[59 171]
[60 163]
[61 162]
[62 161]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 143]
[74 142]
[76 140]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
