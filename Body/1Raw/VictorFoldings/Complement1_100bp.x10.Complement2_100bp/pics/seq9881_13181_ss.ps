%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[132.50619507 589.98645020]
[119.86171722 581.89349365]
[108.08587646 572.58178711]
[97.29571533 562.14379883]
[87.59847260 550.68334961]
[79.09052277 538.31427002]
[71.85643005 525.15960693]
[65.96809387 511.34994507]
[61.48403168 497.02264404]
[58.44881058 482.32003784]
[56.89259720 467.38830566]
[56.83085632 452.37582397]
[58.26420212 437.43179321]
[61.17839432 422.70474243]
[65.54446411 408.34103394]
[71.31901550 394.48342896]
[78.44466400 381.26965332]
[86.85058594 368.83105469]
[96.45323944 357.29119873]
[107.15718842 346.76486206]
[118.85604095 337.35659790]
[131.43353271 329.15994263]
[144.76466370 322.25631714]
[158.71691895 316.71438599]
[173.15165710 312.58923340]
[170.48585510 297.82800293]
[167.82006836 283.06680298]
[165.15426636 268.30557251]
[155.27824402 257.15597534]
[160.43981934 242.20042419]
[157.77403259 227.43919373]
[155.10823059 212.67797852]
[149.86151123 198.62551880]
[142.20091248 185.72918701]
[129.04882812 178.73834229]
[128.65318298 162.92207336]
[120.99257660 150.02575684]
[113.33197784 137.12942505]
[100.17989349 130.13858032]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.65883636 80.44194794]
[71.99823761 67.54562378]
[67.44479370 64.99351501]
[64.60917664 61.31756973]
[63.63180161 57.36032486]
[64.29834747 53.89794540]
[57.22124100 40.67242050]
[50.14413452 27.44689178]
[43.33604813 21.35691643]
[43.06177902 13.97135258]
[36.18236923 0.64192313]
[24.72179031 0.90540111]
[14.03876972 -3.10877037]
[5.66320038 -10.78482723]
[0.77922302 -20.98558998]
[0.05788823 -32.22082520]
[3.56519675 -42.86492538]
[10.75808144 -51.39212418]
[4.48072100 -65.01544189]
[-1.79663992 -78.63875580]
[-8.23017311 -85.12315369]
[-8.06435871 -92.51195526]
[-14.13819313 -106.22721863]
[-20.21202660 -119.94248199]
[-26.28586006 -133.65774536]
[-32.35969543 -147.37301636]
[-46.77096558 -143.13388062]
[-61.61227417 -140.81211853]
[-76.62966156 -140.44744873]
[-91.56616974 -142.04612732]
[-106.16621399 -145.58079529]
[-120.17995453 -150.99095154]
[-133.36761475 -158.18405151]
[-145.50354004 -167.03700256]
[-156.38003540 -177.39830017]
[-165.81103516 -189.09066772]
[-173.63513184 -201.91401672]
[-179.71846008 -215.64894104]
[-183.95690918 -230.06042480]
[-186.27796936 -244.90184021]
[-186.64192200 -259.91925049]
[-185.04252625 -274.85568237]
[-181.50717163 -289.45553589]
[-176.09632874 -303.46902466]
[-168.90261841 -316.65634155]
[-160.04908752 -328.79183960]
[-149.68727112 -339.66787720]
[-137.99446106 -349.09829712]
[-125.17073059 -356.92178345]
[-111.43550873 -363.00445557]
[-97.02383423 -367.24221802]
[-82.18231201 -369.56259155]
[-67.16488647 -369.92581177]
[-52.22852707 -368.32571411]
[-37.62882614 -364.78967285]
[-23.61559296 -359.37814331]
[-10.42861748 -352.18380737]
[1.70645499 -343.32971191]
[12.58197784 -332.96737671]
[22.01185608 -321.27410889]
[29.83473206 -308.45001221]
[35.91674805 -294.71450806]
[40.15382767 -280.30261230]
[42.47347641 -265.46099854]
[42.83599472 -250.44354248]
[41.23518372 -235.50726318]
[37.69843674 -220.90773010]
[32.28626633 -206.89476013]
[25.09128761 -193.70811462]
[16.23661423 -181.57347107]
[5.87375975 -170.69844055]
[-5.81995249 -161.26911926]
[-18.64442825 -153.44685364]
[-12.57059383 -139.73158264]
[-6.49676037 -126.01631927]
[-0.42292622 -112.30105591]
[5.65090752 -98.58578491]
[11.82667637 -84.91611481]
[18.10403633 -71.29280090]
[24.38139725 -57.66948318]
[42.89149094 -55.08697510]
[56.21140289 -41.76373672]
[58.83073425 -22.95553017]
[49.51179504 -6.23748922]
[56.39120865 7.09193993]
[63.36966324 20.36978531]
[70.44676971 33.59531403]
[77.52387238 46.82084274]
[84.89456177 59.88502502]
[92.55516052 72.78135681]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[126.38059235 114.57500458]
[126.22830963 129.46882629]
[133.88890076 142.36515808]
[141.54949951 155.26148987]
[155.24952698 163.17475891]
[155.09724426 178.06858826]
[162.75784302 190.96492004]
[161.61485291 176.00852966]
[164.03578186 161.20516968]
[169.88368225 147.39207458]
[178.82786560 135.35040283]
[190.36245728 125.76119232]
[203.83514404 119.16674805]
[218.48397827 115.94002533]
[233.48048401 116.26350403]
[247.97656250 120.11889648]
[261.15234375 127.28816223]
[272.26272583 137.36584473]
[280.67935181 149.78198242]
[285.92617798 163.83441162]
[287.70651245 178.72837830]
[285.91964722 193.62158203]
[280.66665649 207.67170715]
[272.24462891 220.08416748]
[261.12985229 230.15698242]
[247.95089722 237.32048035]
[233.45315552 241.16952515]
[218.45649719 241.48643494]
[203.80908203 238.25329590]
[190.33927917 231.65296936]
[178.80888367 222.05870056]
[169.86944580 210.01219177]
[172.53524780 224.77340698]
[175.20103455 239.53462219]
[185.26773071 251.74003601]
[179.91548157 265.63977051]
[182.58128357 280.40100098]
[185.24708557 295.16220093]
[187.91287231 309.92343140]
[202.87869263 308.73901367]
[217.88807678 309.05062866]
[232.79183960 310.85516357]
[247.44186401 314.13470459]
[261.69256592 318.85659790]
[275.40228271 324.97399902]
[288.43475342 332.42602539]
[300.66049194 341.13870239]
[311.95794678 351.02536011]
[322.21484375 361.98776245]
[331.32928467 373.91696167]
[339.21063232 386.69439697]
[345.78057861 400.19308472]
[350.97381592 414.27883911]
[354.73876953 428.81170654]
[357.03796387 443.64721680]
[357.84857178 458.63790894]
[357.16253662 473.63485718]
[354.98669434 488.48895264]
[351.34262085 503.05258179]
[346.26660156 517.18103027]
[339.80905151 530.73382568]
[332.03411865 543.57629395]
[323.01913452 555.58081055]
[312.85366821 566.62805176]
[301.63873291 576.60827637]
[289.48583984 585.42218018]
[276.51571655 592.98223877]
[262.85729980 599.21337891]
[248.64634705 604.05352783]
[234.02406311 607.45465088]
[219.13580322 609.38293457]
[204.12953186 609.81927490]
[189.15438843 608.75921631]
[174.35920715 606.21343994]
[159.89103699 602.20715332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 174]
[26 173]
[27 172]
[28 171]
[30 169]
[31 168]
[32 167]
[33 142]
[34 141]
[36 139]
[37 138]
[38 137]
[40 135]
[42 133]
[43 132]
[44 131]
[48 130]
[49 129]
[50 128]
[52 127]
[53 126]
[60 122]
[61 121]
[62 120]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
