%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[114.30221558 497.70309448]
[104.27860260 486.53735352]
[94.96855164 474.77005005]
[86.40808105 462.44668579]
[78.63031006 449.61499023]
[71.66532898 436.32455444]
[65.54008484 422.62683105]
[60.27828217 408.57476807]
[55.90026474 394.22277832]
[52.42297745 379.62637329]
[49.85987473 364.84204102]
[48.22087097 349.92694092]
[47.51230621 334.93878174]
[47.73692322 319.93557739]
[48.89384842 304.97537231]
[50.97861481 290.11602783]
[53.98315048 275.41503906]
[57.89583206 260.92926025]
[62.70152283 246.71476746]
[68.38162994 232.82653809]
[74.91417694 219.31831360]
[82.27389526 206.24234009]
[90.43230438 193.64920044]
[99.35784149 181.58764648]
[109.01598358 170.10432434]
[119.36936188 159.24365234]
[130.37791443 149.04765320]
[120.88901520 137.43038940]
[111.40011597 125.81313324]
[101.91121674 114.19586945]
[88.90633392 109.06123352]
[86.47151947 95.29302979]
[76.98262024 83.67576599]
[67.49372101 72.05850220]
[58.00482178 60.44124222]
[48.51592255 48.82397842]
[39.02702713 37.20671463]
[29.53812790 25.58945084]
[20.04922867 13.97218800]
[10.56033039 2.35492468]
[0.98521060 -9.19137669]
[-8.67560005 -20.66607666]
[-18.33641052 -32.14077759]
[-30.54871941 -23.41727066]
[-43.41551208 -15.69161606]
[-56.85544205 -9.01266098]
[-70.78353119 -3.42263031]
[-85.11171722 1.04313254]
[-99.74942780 4.35639334]
[-114.60409546 6.49620438]
[-129.58181763 7.44903660]
[-144.58790588 7.20886660]
[-159.52746582 5.77721167]
[-174.30604553 3.16312432]
[-188.83023071 -0.61686844]
[-203.00816345 -5.53886795]
[-216.75022888 -11.57175541]
[-229.96954346 -18.67738914]
[-242.58250427 -26.81084251]
[-254.50939941 -35.92069626]
[-265.67480469 -45.94934845]
[-276.00811768 -56.83339691]
[-285.44403076 -68.50402832]
[-293.92288208 -80.88745880]
[-301.39105225 -93.90539551]
[-307.80133057 -107.47552490]
[-313.11315918 -121.51206207]
[-317.29302979 -135.92625427]
[-320.31442261 -150.62696838]
[-322.15832520 -165.52127075]
[-322.81301880 -180.51498413]
[-322.27438354 -195.51332092]
[-320.54580688 -210.42143250]
[-317.63824463 -225.14509583]
[-313.57006836 -239.59121704]
[-308.36700439 -253.66842651]
[-302.06195068 -267.28778076]
[-294.69476318 -280.36309814]
[-286.31201172 -292.81176758]
[-276.96670532 -304.55508423]
[-266.71789551 -315.51876831]
[-255.63044739 -325.63354492]
[-243.77442932 -334.83541870]
[-231.22477722 -343.06625366]
[-218.06085205 -350.27395630]
[-204.36589050 -356.41302490]
[-190.22645569 -361.44461060]
[-175.73197937 -365.33688354]
[-160.97406006 -368.06527710]
[-146.04602051 -369.61248779]
[-131.04225159 -369.96878052]
[-116.05760956 -369.13189697]
[-101.18682098 -367.10711670]
[-86.52391052 -363.90722656]
[-72.16159058 -359.55249023]
[-58.19065475 -354.07040405]
[-44.69944382 -347.49566650]
[-31.77324677 -339.86981201]
[-19.49379158 -331.24108887]
[-7.93871403 -321.66400146]
[2.81893158 -311.19915771]
[12.71113014 -299.91268921]
[21.67533875 -287.87594604]
[29.65488243 -275.16503906]
[36.59931183 -261.86035156]
[42.46472168 -248.04597473]
[47.21402359 -233.80924988]
[50.81719971 -219.24020386]
[53.25146103 -204.43093872]
[54.50142288 -189.47508240]
[54.55917740 -174.46717834]
[53.42436218 -159.50215149]
[51.10415268 -144.67459106]
[47.61321640 -130.07823181]
[42.97362518 -115.80538177]
[37.21471405 -101.94626617]
[30.37289047 -88.58851624]
[22.49141312 -75.81658173]
[13.62011147 -63.71120453]
[3.81507325 -52.34892654]
[-6.86171007 -41.80158615]
[2.79910016 -30.32688713]
[12.45991039 -18.85218811]
[19.17258072 -15.75996494]
[22.17759323 -7.13397360]
[31.66649246 4.48328972]
[41.15539169 16.10055351]
[50.64428711 27.71781540]
[60.13318634 39.33507919]
[69.62208557 50.95234299]
[79.11098480 62.56960678]
[88.59988403 74.18686676]
[98.08878326 85.80413055]
[111.09366608 90.93876648]
[113.52848053 104.70697021]
[123.01737976 116.32423401]
[132.50628662 127.94149780]
[141.99517822 139.55876160]
[154.18377686 130.80749512]
[166.89285278 122.83090973]
[180.07324219 115.65988159]
[193.67396545 109.32214355]
[207.64239502 103.84223175]
[221.92449951 99.24132538]
[236.46499634 95.53723907]
[251.20765686 92.74429321]
[266.09542847 90.87330627]
[281.07073975 89.93150330]
[296.07562256 89.92253876]
[311.05203247 90.84644318]
[325.94201660 92.69963837]
[340.68801880 95.47495270]
[355.23294067 99.16165924]
[369.52050781 103.74549103]
[383.49548340 109.20870972]
[397.10375977 115.53018188]
[410.29272461 122.68545532]
[423.01132202 130.64683533]
[435.21038818 139.38352966]
[446.84265137 148.86174011]
[457.86318970 159.04479980]
[468.22930908 169.89329529]
[477.90093994 181.36526489]
[486.84063721 193.41633606]
[495.01385498 205.99986267]
[502.38891602 219.06718445]
[508.93734741 232.56773376]
[514.63372803 246.44927979]
[519.45611572 260.65811157]
[523.38586426 275.13928223]
[526.40765381 289.83673096]
[528.50988770 304.69363403]
[529.68438721 319.65246582]
[529.92663574 334.65539551]
[529.23565674 349.64434814]
[527.61419678 364.56137085]
[525.06848145 379.34872437]
[521.60833740 393.94921875]
[517.24719238 408.30633545]
[512.00189209 422.36453247]
[505.89273071 436.06945801]
[498.94335938 449.36807251]
[491.18069458 462.20892334]
[482.63470459 474.54229736]
[473.33847046 486.32052612]
[463.32800293 497.49804688]
[452.64196777 508.03158569]
[441.32174683 517.88037109]
[429.41113281 527.00634766]
[416.95617676 535.37420654]
[404.00509644 542.95153809]
[390.60797119 549.70904541]
[376.81668091 555.62060547]
[362.68453979 560.66333008]
[348.26620483 564.81768799]
[333.61752319 568.06762695]
[318.79510498 570.40057373]
[303.85632324 571.80749512]
[288.85897827 572.28295898]
[273.86108398 571.82513428]
[258.92065430 570.43572998]
[244.09552002 568.12023926]
[229.44300842 564.88751221]
[215.01982117 560.75006104]
[200.88175964 555.72399902]
[187.08351135 549.82861328]
[173.67848206 543.08685303]
[160.71850586 535.52471924]
[148.25373840 527.17156982]
[136.33239746 518.05957031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 138]
[28 137]
[29 136]
[30 135]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 123]
[42 122]
[43 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
