%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[86.54192352 680.51892090]
[71.74538422 683.05926514]
[56.76775360 684.08959961]
[41.76272964 683.59942627]
[26.88429070 681.59362793]
[12.28511238 678.09295654]
[-1.88499558 673.13317871]
[-15.48062325 666.76531982]
[-28.36225700 659.05462646]
[-40.39770889 650.08032227]
[-51.46347809 639.93438721]
[-61.44601059 628.72100830]
[-70.24286652 616.55517578]
[-77.76378632 603.56182861]
[-83.93157959 589.87426758]
[-88.68295288 575.63299561]
[-91.96916962 560.98400879]
[-93.75648499 546.07775879]
[-94.02657318 531.06713867]
[-92.77664948 516.10626221]
[-90.01955414 501.34857178]
[-85.78357697 486.94552612]
[-80.11217499 473.04495239]
[-73.06356049 459.78945923]
[-64.71005249 447.31509399]
[-55.13737869 435.74984741]
[-44.44376373 425.21240234]
[-32.73894882 415.81088257]
[-20.14303970 407.64178467]
[-6.78529453 400.78894043]
[7.19721699 395.32263184]
[21.66101074 391.29901123]
[36.45766449 388.75930786]
[51.43533707 387.72961426]
[66.44033813 388.22048950]
[68.44435120 373.35494995]
[70.44836426 358.48944092]
[64.48080444 344.84252930]
[73.99245453 332.19979858]
[75.99646759 317.33425903]
[78.00048065 302.46875000]
[80.00450134 287.60321045]
[82.00851440 272.73767090]
[84.01252747 257.87216187]
[86.01654053 243.00662231]
[88.02055359 228.14109802]
[90.02456665 213.27557373]
[92.02857971 198.41004944]
[94.03259277 183.54450989]
[96.03660583 168.67898560]
[96.48321533 153.68563843]
[95.36756134 138.72718811]
[94.25191498 123.76873016]
[93.13626862 108.81027985]
[91.90929413 93.86054230]
[90.57106018 78.92035675]
[87.13999939 64.31803894]
[81.68463898 50.34523773]
[76.22928619 36.37244034]
[70.77392578 22.39964294]
[65.31856537 8.42684460]
[53.84075165 2.54275060]
[49.58463287 -9.20753479]
[54.31903839 -20.33910942]
[49.07231903 -34.39157867]
[43.82560349 -48.44404984]
[29.25874138 -44.79898071]
[14.37534904 -42.80783081]
[-0.63739693 -42.49564362]
[-15.59069729 -43.86634827]
[-30.29649734 -46.90270233]
[-44.56985855 -51.56652069]
[-58.23127365 -57.79915619]
[-71.10894012 -65.52221680]
[-83.04090881 -74.63858795]
[-93.87711334 -85.03361511]
[-103.48128510 -96.57657623]
[-111.73264313 -109.12229919]
[-118.52741241 -122.51300812]
[-123.78014374 -136.58030701]
[-127.42478180 -151.14727783]
[-129.41548157 -166.03071594]
[-129.72721863 -181.04347229]
[-128.35607910 -195.99673462]
[-125.31928253 -210.70245361]
[-120.65503693 -224.97566223]
[-114.42198944 -238.63690186]
[-106.69853973 -251.51432800]
[-97.58181763 -263.44601440]
[-87.18646240 -274.28192139]
[-75.64321899 -283.88574219]
[-63.09725189 -292.13671875]
[-49.70633698 -298.93109131]
[-35.63888550 -304.18341064]
[-21.07180595 -307.82760620]
[-6.18829489 -309.81787109]
[8.82446957 -310.12915039]
[23.77768898 -308.75756836]
[38.48330688 -305.72033691]
[52.75638580 -301.05566406]
[66.41743469 -294.82220459]
[79.29463196 -287.09835815]
[91.22605896 -277.98129272]
[102.06164551 -267.58560181]
[111.66512299 -256.04208374]
[119.91573334 -243.49586487]
[126.70970154 -230.10475159]
[131.96159363 -216.03713989]
[135.60536194 -201.46995544]
[137.59516907 -186.58638000]
[137.90600586 -171.57360840]
[136.53396606 -156.62043762]
[133.49629211 -141.91490173]
[128.83119202 -127.64196014]
[122.59733582 -113.98110199]
[114.87311554 -101.10413361]
[105.75567627 -89.17298126]
[95.35967255 -78.33770752]
[83.81585693 -68.73457336]
[71.26939392 -60.48434067]
[57.87807465 -53.69076920]
[63.12479019 -39.63829803]
[68.37151337 -25.58582687]
[82.48983002 -15.16277218]
[79.29136658 2.97148728]
[84.74672699 16.94428444]
[90.20207977 30.91708374]
[95.65744019 44.88988113]
[101.11279297 58.86267853]
[102.70697784 43.94763184]
[108.57141113 30.14153099]
[118.19875336 18.63873672]
[130.75614929 10.43435955]
[145.15725708 6.23815823]
[160.15623474 6.41314602]
[174.45552063 10.94418621]
[186.81808472 19.43929672]
[196.17445374 31.16356659]
[201.71519470 45.10272980]
[202.96096802 60.05090714]
[199.80401611 74.71493530]
[192.51745605 87.82622528]
[181.73162842 98.25051880]
[168.37962341 105.08602142]
[153.61653137 107.74137878]
[138.71948242 105.98687744]
[124.97724915 99.97431183]
[113.57865906 90.22381592]
[105.51124573 77.58212280]
[106.84947968 92.52230835]
[110.64808655 99.63167572]
[108.09471893 107.69462585]
[109.21037292 122.65308380]
[110.32601929 137.61154175]
[111.44166565 152.56999207]
[118.07889557 139.11833191]
[129.30781555 129.17291260]
[143.46269226 124.20908356]
[158.44372559 124.96319580]
[172.02856445 131.32339478]
[182.20199585 142.34616089]
[187.45483398 156.39634705]
[187.00785828 171.38967896]
[180.92736816 185.10200500]
[170.11538696 195.49916077]
[156.17579651 201.03880310]
[141.17643738 200.89916992]
[127.34240723 195.10095215]
[116.72586823 184.50428772]
[110.90213776 170.68299866]
[108.89812469 185.54852295]
[106.89411163 200.41406250]
[104.89009094 215.27958679]
[102.88607788 230.14511108]
[100.88206482 245.01063538]
[98.87805176 259.87615967]
[96.87403870 274.74169922]
[94.87002563 289.60723877]
[92.86601257 304.47274780]
[90.86199951 319.33828735]
[88.85798645 334.20379639]
[94.68220520 348.91397095]
[85.31389618 360.49343872]
[83.30988312 375.35897827]
[81.30587006 390.22448730]
[95.90519714 393.72457886]
[110.07552338 398.68368530]
[123.67143250 405.05096436]
[136.55340576 412.76107788]
[148.58924866 421.73489380]
[159.65547180 431.88034058]
[169.63848877 443.09329224]
[178.43588257 455.25866699]
[185.95738220 468.25167847]
[192.12577820 481.93896484]
[196.87777710 496.18008423]
[200.16462708 510.82891846]
[201.95260620 525.73510742]
[202.22335815 540.74566650]
[200.97409058 555.70660400]
[198.21765137 570.46441650]
[193.98229980 584.86767578]
[188.31150818 598.76849365]
[181.26347351 612.02429199]
[172.91052246 624.49902344]
[163.33834839 636.06469727]
[152.64520264 646.60260010]
[140.94081116 656.00463867]
[128.34526062 664.17425537]
[114.98780823 671.02770996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 185]
[36 184]
[37 183]
[39 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 155]
[52 154]
[53 153]
[54 152]
[55 150]
[56 149]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[64 123]
[65 122]
[66 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
