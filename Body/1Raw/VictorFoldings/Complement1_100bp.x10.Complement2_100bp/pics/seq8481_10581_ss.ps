%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[136.29605103 596.43542480]
[124.07447815 587.73156738]
[112.36973572 578.34423828]
[101.21998596 568.30395508]
[90.66162109 557.64355469]
[80.72905731 546.39776611]
[71.45470428 534.60327148]
[62.86881256 522.29858398]
[54.99938583 509.52377319]
[47.87209702 496.32055664]
[41.51018524 482.73196411]
[35.93441010 468.80236816]
[31.16295433 454.57714844]
[27.21138382 440.10275269]
[24.09258652 425.42636108]
[21.81673622 410.59585571]
[20.39125443 395.65960693]
[19.82079315 380.66632080]
[20.10721016 365.66494751]
[21.24957466 350.70437622]
[23.24415970 335.83343506]
[26.08445740 321.10061646]
[29.76120377 306.55398560]
[34.26240921 292.24093628]
[39.57338715 278.20825195]
[45.67681503 264.50161743]
[52.55278778 251.16578674]
[60.17887497 238.24423218]
[68.53019714 225.77914429]
[77.57952881 213.81112671]
[87.29733276 202.37925720]
[97.65192413 191.52081299]
[108.60952759 181.27120972]
[120.13439941 171.66387939]
[132.18894958 162.73016357]
[123.96014404 150.18876648]
[115.73133087 137.64736938]
[107.50252533 125.10596466]
[99.27371979 112.56456757]
[90.76689148 100.21006012]
[81.98628998 88.04859924]
[73.20568085 75.88714600]
[64.42507935 63.72568893]
[50.07370377 57.06622314]
[48.89661789 42.21820068]
[40.11601257 30.05674362]
[31.33540916 17.89528847]
[22.55480766 5.73383284]
[13.77420330 -6.42762327]
[4.99360037 -18.58907890]
[-3.78700304 -30.75053406]
[-16.71582222 -23.12359047]
[-30.29322243 -16.72211838]
[-44.40336227 -11.60072994]
[-58.92585373 -7.80312204]
[-73.73680115 -5.36169577]
[-88.70983124 -4.29728031]
[-103.71720123 -4.61895704]
[-118.63086700 -6.32398176]
[-133.32359314 -9.39780712]
[-147.67002869 -13.81420803]
[-161.54776001 -19.53550529]
[-174.83839417 -26.51288414]
[-187.42852783 -34.68681717]
[-199.21073914 -43.98756027]
[-210.08453369 -54.33576965]
[-219.95710754 -65.64315033]
[-228.74424744 -77.81323242]
[-236.37097168 -90.74217224]
[-242.77221680 -104.31967926]
[-247.89337158 -118.42990875]
[-251.69075012 -132.95246887]
[-254.13192749 -147.76344299]
[-255.19609070 -162.73649597]
[-254.87416077 -177.74386597]
[-253.16888428 -192.65750122]
[-250.09481812 -207.35017395]
[-245.67817688 -221.69653320]
[-239.95664978 -235.57417297]
[-232.97904968 -248.86468506]
[-224.80490112 -261.45468140]
[-215.50396729 -273.23675537]
[-205.15557861 -284.11035156]
[-193.84803772 -293.98275757]
[-181.67781067 -302.76968384]
[-168.74873352 -310.39620972]
[-155.17112732 -316.79721069]
[-141.06080627 -321.91815186]
[-126.53819275 -325.71527100]
[-111.72716522 -328.15618896]
[-96.75409698 -329.22012329]
[-81.74673462 -328.89794922]
[-66.83312225 -327.19241333]
[-52.14049911 -324.11810303]
[-37.79421616 -319.70123291]
[-23.91667747 -313.97946167]
[-10.62628078 -307.00164795]
[1.96358120 -298.82730103]
[13.74549389 -289.52615356]
[24.61893654 -279.17758179]
[34.49113846 -267.86987305]
[43.27787018 -255.69950867]
[50.90416718 -242.77029419]
[57.30496216 -229.19258118]
[62.42564774 -215.08218384]
[66.22252655 -200.55950928]
[68.66321564 -185.74842834]
[69.72688293 -170.77534485]
[69.40445709 -155.76799011]
[67.69868469 -140.85441589]
[64.62412262 -126.16184235]
[60.20700455 -111.81562805]
[54.48501587 -97.93818665]
[47.50697327 -84.64790344]
[39.33241272 -72.05818176]
[30.03107643 -60.27642059]
[19.68232536 -49.40315247]
[8.37445259 -39.53113937]
[17.15505600 -27.36968231]
[25.93565941 -15.20822620]
[34.71626282 -3.04677057]
[43.49686432 9.11468506]
[52.27746964 21.27614021]
[61.05807114 33.43759537]
[74.78140259 39.22719574]
[76.58653259 54.94508743]
[85.36714172 67.10654449]
[94.14774323 79.26799774]
[102.92834473 91.42945099]
[106.60999298 92.57743073]
[109.76775360 95.34264374]
[111.69069672 99.45473480]
[111.81511688 104.33575439]
[120.04392242 116.87715912]
[128.27273560 129.41856384]
[136.50154114 141.95996094]
[144.73034668 154.50135803]
[157.72457886 146.99978638]
[171.12586975 140.25227356]
[184.89050293 134.28083801]
[198.97360229 129.10494995]
[213.32920837 124.74148560]
[227.91052246 121.20468903]
[242.66995239 118.50608826]
[257.55938721 116.65449524]
[272.53024292 115.65593719]
[287.53366089 115.51368713]
[302.52075195 116.22819519]
[317.44262695 117.79712677]
[332.25057983 120.21538544]
[346.89633179 123.47506714]
[361.33209229 127.56553650]
[375.51080322 132.47346497]
[389.38619995 138.18283081]
[402.91302490 144.67501831]
[416.04714966 151.92884827]
[428.74572754 159.92066956]
[440.96737671 168.62440491]
[452.67218018 178.01165771]
[463.82202148 188.05181885]
[474.38046265 198.71214294]
[484.31311035 209.95785522]
[493.58755493 221.75225830]
[502.17355347 234.05690002]
[510.04309082 246.83164978]
[517.17047119 260.03482056]
[523.53247070 273.62335205]
[529.10839844 287.55291748]
[533.87994385 301.77810669]
[537.83160400 316.25247192]
[540.95056152 330.92883301]
[543.22650146 345.75933838]
[544.65209961 360.69555664]
[545.22265625 375.68881226]
[544.93640137 390.69021606]
[543.79412842 405.65078735]
[541.79968262 420.52172852]
[538.95947266 435.25457764]
[535.28283691 449.80126953]
[530.78173828 464.11431885]
[525.47088623 478.14706421]
[519.36755371 491.85375977]
[512.49169922 505.18963623]
[504.86572266 518.11120605]
[496.51449585 530.57641602]
[487.46527100 542.54449463]
[477.74752808 553.97644043]
[467.39303589 564.83496094]
[456.43551636 575.08465576]
[444.91070557 584.69207764]
[432.85623169 593.62585449]
[420.31140137 601.85693359]
[407.31710815 609.35839844]
[393.91577148 616.10583496]
[380.15109253 622.07714844]
[366.06793213 627.25292969]
[351.71231079 631.61627197]
[337.13095093 635.15295410]
[322.37149048 637.85144043]
[307.48205566 639.70294189]
[292.51119995 640.70135498]
[277.50778198 640.84350586]
[262.52069092 640.12884521]
[247.59883118 638.55981445]
[232.79089355 636.14141846]
[218.14517212 632.88165283]
[203.70944214 628.79107666]
[189.53077698 623.88299561]
[175.65542603 618.17352295]
[162.12866211 611.68127441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[40 129]
[41 128]
[42 127]
[43 126]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
