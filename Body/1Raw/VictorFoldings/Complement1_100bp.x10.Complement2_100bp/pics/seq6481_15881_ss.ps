%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[127.59889221 468.60415649]
[122.64538574 454.43420410]
[119.02046967 439.86764526]
[116.75505066 425.02877808]
[115.86847687 410.04415894]
[116.36830902 395.04165649]
[118.25027466 380.14929199]
[121.49832153 365.49407959]
[126.08473206 351.20111084]
[131.97038269 337.39227295]
[139.10507202 324.18542480]
[147.42790222 311.69323730]
[156.86787415 300.02224731]
[167.34445190 289.27209473]
[178.76824951 279.53445435]
[191.04179382 270.89242554]
[183.57405090 257.88348389]
[176.10630798 244.87451172]
[168.63856506 231.86557007]
[161.17082214 218.85661316]
[148.12428284 211.67073059]
[147.96415710 195.85032654]
[132.33529663 187.86872864]
[132.53419495 169.45562744]
[119.38211060 162.46478271]
[118.98645782 146.64852905]
[105.83437347 139.65768433]
[105.43872070 123.84142303]
[97.77812195 110.94509125]
[90.02172852 98.10615540]
[82.16997528 85.32530975]
[74.31822205 72.54446411]
[60.50189972 64.83603668]
[60.43241882 49.94159698]
[52.58066559 37.16075134]
[36.98876953 40.43680573]
[21.24422836 38.17962646]
[7.24806118 30.68031693]
[-3.31618381 18.86178780]
[-9.18491840 4.16523266]
[-9.66563988 -11.62562084]
[-4.71859598 -26.60099030]
[5.04063177 -38.95601654]
[-3.00054121 -51.61854172]
[-11.04171467 -64.28106689]
[-19.08288765 -76.94358826]
[-27.12405968 -89.60611725]
[-35.16523361 -102.26863861]
[-43.20640564 -114.93116760]
[-51.24757767 -127.59368896]
[-65.17713165 -135.09556580]
[-65.46836090 -149.98731995]
[-73.69717407 -162.52871704]
[-82.11179352 -174.94621277]
[-90.52640533 -187.36370850]
[-98.94102478 -199.78120422]
[-107.35564423 -212.19869995]
[-115.77026367 -224.61619568]
[-124.18488312 -237.03369141]
[-137.51011658 -230.10876465]
[-151.54919434 -224.77766418]
[-166.11227417 -221.11247253]
[-181.00236511 -219.16278076]
[-196.01814270 -218.95494080]
[-210.95649719 -220.49176025]
[-225.61543274 -223.75247192]
[-239.79669189 -228.69296265]
[-253.30848694 -235.24642944]
[-265.96807861 -243.32424927]
[-277.60427856 -252.81715393]
[-288.05972290 -263.59677124]
[-297.19299316 -275.51733398]
[-304.88058472 -288.41763306]
[-311.01855469 -302.12319946]
[-315.52383423 -316.44863892]
[-318.33554077 -331.20028687]
[-319.41561890 -346.17858887]
[-318.74951172 -361.18103027]
[-316.34619141 -376.00466919]
[-312.23815918 -390.44906616]
[-306.48095703 -404.31887817]
[-299.15249634 -417.42651367]
[-290.35183716 -429.59469604]
[-280.19802856 -440.65890503]
[-268.82836914 -450.46948242]
[-256.39663696 -458.89373779]
[-243.07092285 -465.81777954]
[-229.03149414 -471.14794922]
[-214.46817017 -474.81216431]
[-199.57794189 -476.76086426]
[-184.56216431 -476.96771240]
[-169.62390137 -475.42987061]
[-154.96517944 -472.16818237]
[-140.78425598 -467.22674561]
[-127.27289581 -460.67239380]
[-114.61383820 -452.59371948]
[-102.97826385 -443.10003662]
[-92.52355194 -432.31973267]
[-83.39107513 -420.39855957]
[-75.70433807 -407.49774170]
[-69.56731415 -393.79177856]
[-65.06297302 -379.46603394]
[-62.25225449 -364.71420288]
[-61.17316055 -349.73580933]
[-61.84028244 -334.73342896]
[-64.24459839 -319.90994263]
[-68.35359955 -305.46582031]
[-74.11170197 -291.59640503]
[-81.44105530 -278.48925781]
[-90.24252319 -266.32165527]
[-100.39707184 -255.25813293]
[-111.76738739 -245.44830322]
[-103.35276794 -233.03080750]
[-94.93814850 -220.61331177]
[-86.52352905 -208.19581604]
[-78.10890961 -195.77833557]
[-69.69429779 -183.36083984]
[-61.27967453 -170.94334412]
[-56.84187317 -169.17842102]
[-53.46566772 -164.60694885]
[-52.80583954 -158.02848816]
[-39.45144272 -151.43232727]
[-38.58505249 -135.63485718]
[-30.54388046 -122.97233582]
[-22.50270844 -110.30981445]
[-14.46153545 -97.64728546]
[-6.42036247 -84.98476410]
[1.62081063 -72.32223511]
[9.66198349 -59.65971375]
[17.70315742 -46.99718857]
[31.43009186 -50.45907211]
[45.57654953 -49.51091766]
[58.75855255 -44.23220825]
[69.68238068 -35.12673950]
[77.27153778 -23.07456779]
[80.77281952 -9.24696255]
[79.83107758 5.00741196]
[74.52515411 18.29404449]
[65.36151123 29.30899811]
[73.21326447 42.08983994]
[86.46797180 48.88409805]
[87.09906006 64.69271088]
[94.95082092 77.47355652]
[102.80257416 90.25439453]
[109.36981964 94.92813110]
[110.67445374 103.28449249]
[118.33504486 116.18082428]
[132.03506470 124.09410095]
[131.88278198 138.98793030]
[145.58280945 146.90121460]
[145.43052673 161.79502869]
[157.71414185 165.72894287]
[163.82916260 176.62803650]
[160.97309875 188.38258362]
[174.55378723 196.49896240]
[174.17977905 211.38887024]
[181.64752197 224.39782715]
[189.11526489 237.40676880]
[196.58299255 250.41572571]
[204.05073547 263.42468262]
[217.70286560 257.18417358]
[231.87257385 252.22996521]
[246.43894958 248.60430908]
[261.27770996 246.33815002]
[276.26229858 245.45082092]
[291.26480103 245.94990540]
[306.15728760 247.83113098]
[320.81265259 251.07844543]
[335.10586548 255.66413879]
[348.91497803 261.54910278]
[362.12219238 268.68313599]
[374.61480713 277.00534058]
[386.28625488 286.44473267]
[397.03692627 296.92077637]
[406.77514648 308.34405518]
[415.41778564 320.61718750]
[422.89114380 333.63540649]
[429.13140869 347.28762817]
[434.08538818 361.45739746]
[437.71078491 376.02383423]
[439.97671509 390.86267090]
[440.86376953 405.84722900]
[440.36444092 420.84976196]
[438.48297119 435.74218750]
[435.23541260 450.39749146]
[430.64947510 464.69064331]
[424.76428223 478.49966431]
[417.63003540 491.70675659]
[409.30764771 504.19921875]
[399.86804199 515.87054443]
[389.39184570 526.62103271]
[377.96835327 536.35906982]
[365.69509888 545.00146484]
[352.67675781 552.47460938]
[339.02444458 558.71466064]
[324.85455322 563.66839600]
[310.28805542 567.29357910]
[295.44921875 569.55920410]
[280.46463013 570.44604492]
[265.46212769 569.94647217]
[250.56971741 568.06475830]
[235.91445923 564.81695557]
[221.62139893 560.23077393]
[207.81246948 554.34533691]
[194.60549927 547.21087646]
[182.11315918 538.88830566]
[170.44203186 529.44848633]
[159.69169617 518.97210693]
[149.95387268 507.54846191]
[141.31163025 495.27505493]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[22 154]
[24 151]
[26 149]
[28 147]
[29 146]
[30 144]
[31 143]
[32 142]
[34 140]
[35 139]
[43 130]
[44 129]
[45 128]
[46 127]
[47 126]
[48 125]
[49 124]
[50 123]
[52 121]
[53 118]
[54 117]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
