%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[305.22058105 184.72248840]
[299.03283691 198.38356018]
[291.93692017 211.59573364]
[283.96524048 224.29873657]
[275.15420532 236.43458557]
[265.54397583 247.94792175]
[255.17839050 258.78619385]
[244.10478210 268.89999390]
[232.37364197 278.24310303]
[220.03852844 286.77297974]
[207.15570068 294.45062256]
[193.78396606 301.24105835]
[179.98429871 307.11325073]
[165.81968689 312.04046631]
[151.35476685 316.00018311]
[136.65551758 318.97433472]
[121.78901672 320.94937134]
[106.82310486 321.91629028]
[91.82605743 321.87063599]
[76.86631012 320.81265259]
[62.01210785 318.74713135]
[47.33124161 315.68353271]
[32.89068604 311.63583374]
[18.75633430 306.62249756]
[4.99267864 300.66638184]
[-8.33748245 293.79467773]
[-21.17332649 286.03875732]
[-33.45628738 277.43395996]
[-45.13032150 268.01959229]
[-56.14215851 257.83856201]
[-66.44155884 246.93739319]
[-75.98152924 235.36576843]
[-84.71853638 223.17649841]
[-92.61272430 210.42521667]
[-99.62806702 197.17007446]
[-105.73255157 183.47158813]
[-110.89833069 169.39222717]
[-115.10183716 154.99626160]
[-118.32388306 140.34934998]
[-120.54977417 125.51834106]
[-121.76934814 110.57089233]
[-121.97705078 95.57521820]
[-121.17192078 80.59973145]
[-119.35764313 65.71276093]
[-116.54248047 50.98223114]
[-112.73929596 36.47536087]
[-107.96543884 22.25833893]
[-102.24268341 8.39603138]
[-95.59714508 -5.04830980]
[-88.05914307 -18.01334190]
[-79.66307068 -30.43990707]
[-70.44725037 -42.27130890]
[-60.45371246 -53.45355988]
[-49.72806931 -63.93564224]
[-38.31925201 -73.66972351]
[-26.27931786 -82.61139679]
[-13.66320324 -90.71986389]
[-0.52847159 -97.95811462]
[13.06494617 -104.29313660]
[27.05502701 -109.69601440]
[41.37793732 -114.14211273]
[55.96832657 -117.61112213]
[70.75962067 -120.08723450]
[85.68433380 -121.55913544]
[100.67436218 -122.02011871]
[115.66131592 -121.46808624]
[130.57681274 -119.90554047]
[145.35278320 -117.33963013]
[159.92182922 -113.78204346]
[174.21746826 -109.24903107]
[188.17446899 -103.76126099]
[201.72915649 -97.34378052]
[214.81967163 -90.02587128]
[227.38630676 -81.84091949]
[239.37168884 -72.82627106]
[250.72117615 -63.02305984]
[261.38293457 -52.47601700]
[271.30834961 -41.23326492]
[280.45214844 -29.34609604]
[292.93194580 -37.66804123]
[305.41174316 -45.98998260]
[317.89151001 -54.31192780]
[330.37130737 -62.63387299]
[342.85110474 -70.95581818]
[335.25302124 -83.89383698]
[328.40591431 -97.24452209]
[322.33218384 -110.96432495]
[317.05160522 -125.00849915]
[312.58139038 -139.33123779]
[308.93612671 -153.88580322]
[306.12774658 -168.62474060]
[304.16534424 -183.49996948]
[303.05535889 -198.46296692]
[302.80142212 -213.46493530]
[303.40432739 -228.45693970]
[304.86215210 -243.39006042]
[307.17010498 -258.21560669]
[310.32064819 -272.88522339]
[314.30355835 -287.35104370]
[319.10580444 -301.56588745]
[324.71170044 -315.48339844]
[331.10302734 -329.05816650]
[338.25888062 -342.24594116]
[346.15594482 -355.00366211]
[354.76843262 -367.28976440]
[364.06829834 -379.06414795]
[374.02517700 -390.28842163]
[384.60659790 -400.92593384]
[395.77804565 -410.94201660]
[407.50311279 -420.30401611]
[419.74346924 -428.98135376]
[432.45928955 -436.94577026]
[445.60903931 -444.17126465]
[459.14981079 -450.63424683]
[473.03750610 -456.31369019]
[487.22674561 -461.19100952]
[501.67132568 -465.25033569]
[516.32403564 -468.47842407]
[531.13720703 -470.86474609]
[546.06237793 -472.40148926]
[561.05102539 -473.08367920]
[576.05407715 -472.90905762]
[591.02276611 -471.87820435]
[605.90814209 -469.99450684]
[620.66174316 -467.26409912]
[635.23535156 -463.69583130]
[649.58154297 -459.30142212]
[663.65344238 -454.09518433]
[677.40515137 -448.09405518]
[690.79187012 -441.31765747]
[703.76989746 -433.78808594]
[716.29687500 -425.52987671]
[728.33197021 -416.57000732]
[739.83599854 -406.93765259]
[750.77130127 -396.66427612]
[761.10223389 -385.78335571]
[770.79522705 -374.33041382]
[779.81848145 -362.34277344]
[788.14276123 -349.85955811]
[795.74072266 -336.92147827]
[802.58770752 -323.57073975]
[808.66137695 -309.85089111]
[813.94183350 -295.80667114]
[818.41192627 -281.48388672]
[822.05706787 -266.92929077]
[824.86535645 -252.19033813]
[826.82763672 -237.31509399]
[827.93750000 -222.35208130]
[828.19128418 -207.35011292]
[827.58825684 -192.35812378]
[826.13037109 -177.42500305]
[823.82226562 -162.59948730]
[820.67163086 -147.92990112]
[816.68859863 -133.46411133]
[811.88623047 -119.24929810]
[806.28021240 -105.33182526]
[799.88879395 -91.75709534]
[792.73284912 -78.56938934]
[784.83569336 -65.81171417]
[776.22308350 -53.52568436]
[766.92315674 -41.75138092]
[756.96618652 -30.52720070]
[746.38464355 -19.88975906]
[735.21313477 -9.87375546]
[723.48803711 -0.51185685]
[711.24755859 8.16539860]
[698.53167725 16.12970734]
[685.38189697 23.35509300]
[671.84106445 29.81798553]
[657.95330811 35.49730682]
[643.76403809 40.37452698]
[629.31945801 44.43374252]
[614.66668701 47.66171265]
[599.85351562 50.04790497]
[584.92828369 51.58454132]
[569.93969727 52.26660156]
[554.93658447 52.09186935]
[539.96795654 51.06090927]
[525.08258057 49.17708588]
[510.32901001 46.44654465]
[495.75540161 42.87819290]
[481.40927124 38.48366547]
[467.33740234 33.27730179]
[453.58572388 27.27607918]
[440.19906616 20.49957657]
[427.22109985 12.96989536]
[414.69418335 4.71159601]
[402.65914917 -4.24838352]
[391.15524292 -13.88081837]
[380.22003174 -24.15428925]
[369.88912964 -35.03528595]
[360.19625854 -46.48831558]
[351.17306519 -58.47602081]
[338.69326782 -50.15407944]
[326.21347046 -41.83213425]
[313.73367310 -33.51018906]
[301.25387573 -25.18824768]
[288.77407837 -16.86630249]
[296.23303223 -3.85562253]
[302.79660034 9.62892532]
[308.43484497 23.52581406]
[313.12207031 37.77163696]
[316.83688354 52.30138779]
[319.56231689 67.04878235]
[321.28591919 81.94651794]
[321.99987793 96.92663574]
[321.70089722 111.92076874]
[320.39035034 126.86051178]
[318.07421875 141.67770386]
[314.76306152 156.30471802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 198]
[80 197]
[81 196]
[82 195]
[83 194]
[84 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
