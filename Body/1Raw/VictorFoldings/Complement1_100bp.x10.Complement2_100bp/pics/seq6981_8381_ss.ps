%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[61.29259872 829.79449463]
[46.29095840 829.61712646]
[31.31352043 828.74707031]
[16.39224243 827.18627930]
[1.55897105 824.93804932]
[-13.15464115 822.00714111]
[-27.71719360 818.39984131]
[-42.09761047 814.12377930]
[-56.26520157 809.18823242]
[-70.18973541 803.60357666]
[-83.84149170 797.38183594]
[-97.19133759 790.53625488]
[-110.21078491 783.08142090]
[-122.87204742 775.03326416]
[-135.14811707 766.40893555]
[-147.01277161 757.22686768]
[-158.44071960 747.50665283]
[-169.40754700 737.26898193]
[-179.88986206 726.53576660]
[-189.86531067 715.32995605]
[-199.31257629 703.67535400]
[-208.21151733 691.59686279]
[-216.54313660 679.12030029]
[-224.28965759 666.27227783]
[-231.43453979 653.08013916]
[-237.96253967 639.57220459]
[-243.85972595 625.77709961]
[-249.11351013 611.72442627]
[-253.71269226 597.44409180]
[-257.64746094 582.96655273]
[-260.90939331 568.32275391]
[-263.49154663 553.54400635]
[-265.38842773 538.66168213]
[-266.59594727 523.70770264]
[-267.11154175 508.71383667]
[-266.93414307 493.71221924]
[-266.06408691 478.73477173]
[-264.50323486 463.81350708]
[-262.25497437 448.98022461]
[-259.32403564 434.26663208]
[-255.71669006 419.70407104]
[-251.44064331 405.32366943]
[-246.50503540 391.15609741]
[-240.92037964 377.23156738]
[-234.69860840 363.57983398]
[-227.85298157 350.23001099]
[-220.39811707 337.21057129]
[-212.34991455 324.54931641]
[-203.72557068 312.27328491]
[-194.54348755 300.40863037]
[-184.82322693 288.98071289]
[-174.58557129 278.01388550]
[-163.85235596 267.53158569]
[-152.64648438 257.55618286]
[-140.99185181 248.10893250]
[-128.91336060 239.21002197]
[-116.43678284 230.87843323]
[-103.58872986 223.13194275]
[-90.39662170 215.98709106]
[-76.88861847 209.45910645]
[-63.09354019 203.56195068]
[-49.04083252 198.30818176]
[-34.76048279 193.70903015]
[-20.28296471 189.77430725]
[-5.63917446 186.51240540]
[9.13963604 183.93026733]
[24.02192879 182.03343201]
[38.97594452 180.82594299]
[53.96976852 180.31037903]
[68.97140503 180.48780823]
[83.94884491 181.35789490]
[85.50936890 166.43928528]
[87.06988525 151.52069092]
[88.63040924 136.60208130]
[90.19093323 121.68347931]
[91.75145721 106.76487732]
[91.86312103 91.76528931]
[90.52488708 76.82510376]
[77.54698944 71.60621643]
[68.12872314 61.35377502]
[64.06611633 48.10713577]
[66.09747314 34.46812057]
[73.76999664 23.09002304]
[85.53910065 16.16143799]
[84.42345428 1.20298529]
[83.30780792 -13.75546837]
[82.19215393 -28.71392059]
[81.07650757 -43.67237473]
[66.14672852 -45.59244537]
[51.90918732 -50.47888184]
[38.94689941 -58.13158798]
[27.79065514 -68.23719025]
[18.89730453 -80.38186646]
[12.63102055 -94.06830597]
[9.24840546 -108.73605347]
[8.88797379 -123.78446960]
[11.56448555 -138.59733582]
[17.16833878 -152.56808472]
[25.47006035 -165.12461853]
[36.12969971 -175.75273132]
[48.71075058 -184.01724243]
[62.69802856 -189.57969666]
[77.51876068 -192.21234131]
[92.56604767 -191.80735779]
[107.22371674 -188.38131714]
[120.89153290 -182.07453918]
[133.00982666 -173.14526367]
[143.08235168 -161.95915222]
[150.69664001 -148.97425842]
[155.54089355 -134.72230530]
[157.41674805 -119.78691101]
[156.24739075 -104.77966309]
[152.08070374 -90.31510162]
[145.08729553 -76.98554230]
[135.55355835 -65.33681488]
[123.86989594 -55.84593964]
[110.51473236 -48.90155029]
[96.03495789 -44.78802490]
[97.15061188 -29.82957077]
[98.26625824 -14.87111664]
[99.38190460 0.08733667]
[100.49755859 15.04578972]
[115.22097015 21.70413971]
[124.63168335 34.95534134]
[126.08394623 51.23747253]
[119.08708191 66.11495209]
[105.46507263 75.48686981]
[106.80330658 90.42705536]
[113.48411560 76.99698639]
[124.99778748 67.38265228]
[139.40406799 63.20424271]
[154.27523804 65.16589355]
[167.10527039 72.93702698]
[175.73204041 85.20807648]
[178.70182800 99.91115570]
[175.51412964 114.56852722]
[166.70616150 126.71017456]
[153.76220703 134.29002380]
[138.86355591 136.03071594]
[124.52087402 131.63893127]
[113.15118408 121.85476685]
[106.67005920 108.32539368]
[105.10954285 123.24400330]
[103.54901886 138.16261292]
[101.98849487 153.08120728]
[100.42797089 167.99981689]
[98.86744690 182.91842651]
[113.70072937 185.16661072]
[128.41435242 188.09745789]
[142.97692871 191.70471191]
[157.35736084 195.98065186]
[171.52496338 200.91618347]
[185.44952393 206.50074768]
[199.10130310 212.72244263]
[212.45117188 219.56799316]
[225.47065735 227.02276611]
[238.13195801 235.07087708]
[250.40805054 243.69515991]
[262.27276611 252.87718201]
[273.70074463 262.59735107]
[284.66760254 272.83493042]
[295.14996338 283.56808472]
[305.12545776 294.77392578]
[314.57278442 306.42846680]
[323.47177124 318.50689697]
[331.80343628 330.98342896]
[339.55001831 343.83145142]
[346.69494629 357.02349854]
[353.22299194 370.53146362]
[359.12023926 384.32650757]
[364.37408447 398.37918091]
[368.97332764 412.65951538]
[372.90817261 427.13699341]
[376.17016602 441.78076172]
[378.75238037 456.55957031]
[380.64929199 471.44186401]
[381.85687256 486.39584351]
[382.37255859 501.38967896]
[382.19519043 516.39129639]
[381.32522583 531.36877441]
[379.76443481 546.29003906]
[377.51620483 561.12329102]
[374.58532715 575.83691406]
[370.97805786 590.39947510]
[366.70208740 604.77990723]
[361.76654053 618.94750977]
[356.18194580 632.87207031]
[349.96020508 646.52380371]
[343.11465454 659.87371826]
[335.65982056 672.89312744]
[327.61169434 685.55444336]
[318.98739624 697.83050537]
[309.80535889 709.69519043]
[300.08514404 721.12316895]
[289.84753418 732.09002686]
[279.11434937 742.57238770]
[267.90853882 752.54785156]
[256.25393677 761.99511719]
[244.17549133 770.89410400]
[231.69894409 779.22570801]
[218.85092163 786.97229004]
[205.65884399 794.11718750]
[192.15086365 800.64520264]
[178.35580444 806.54241943]
[164.30313110 811.79626465]
[150.02279663 816.39544678]
[135.54528809 820.33026123]
[120.90151978 823.59222412]
[106.12271881 826.17437744]
[91.24043274 828.07128906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 128]
[78 127]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
