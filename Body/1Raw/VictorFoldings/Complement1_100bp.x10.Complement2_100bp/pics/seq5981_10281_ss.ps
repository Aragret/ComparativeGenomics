%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[30.12265396 536.09259033]
[29.01200294 520.93225098]
[33.79224014 506.50253296]
[43.73440933 495.00375366]
[57.32240677 488.18945312]
[56.20676041 473.23098755]
[47.54427719 461.11444092]
[54.23373795 446.77703857]
[53.11809158 431.81857300]
[52.00244141 416.86013794]
[50.88679123 401.90167236]
[49.77114487 386.94320679]
[46.13885880 380.50674438]
[48.75193024 371.75402832]
[47.85911560 356.78063965]
[46.96630096 341.80722046]
[45.96203995 326.84088135]
[44.84638977 311.88241577]
[41.21410751 305.44595337]
[43.82717896 296.69326782]
[42.93436432 281.71984863]
[37.06305313 295.52301025]
[27.98411942 307.46340942]
[16.25273895 316.81085205]
[2.58629203 322.99377441]
[-12.17951298 325.63403320]
[-27.14174080 324.57019043]
[-41.38544846 319.86734009]
[-54.03962326 311.81304932]
[-64.33045959 300.89981079]
[-71.62866974 287.79501343]
[-75.48796844 273.29995728]
[-75.67234802 258.30111694]
[-72.17054749 243.71559143]
[-65.19668579 230.43531799]
[-55.17723465 219.27241516]
[-42.72488022 210.90946960]
[-28.60108566 205.85789490]
[-13.66952896 204.42658997]
[1.15671778 206.70307922]
[14.97102547 212.54814148]
[26.92864418 221.60438538]
[36.29835892 233.31797791]
[42.50721359 246.97265625]
[45.17552567 261.73345947]
[49.36253738 247.32966614]
[53.54954910 232.92588806]
[57.73656082 218.52209473]
[61.92357254 204.11831665]
[66.11058044 189.71453857]
[70.29759216 175.31076050]
[56.26208115 168.12442017]
[43.88586807 158.35363770]
[33.63847351 146.36906433]
[25.90865707 132.62538147]
[20.98966789 117.64397430]
[19.06811714 101.99320221]
[20.21690559 86.26681519]
[24.39245033 71.06143188]
[31.43634224 56.95389557]
[41.08135605 44.47941208]
[52.96158218 34.11123276]
[66.62631989 26.24269485]
[81.55716705 21.17231178]
[97.18768311 19.09243965]
[112.92489624 20.08198166]
[116.68119812 5.55992317]
[120.43750000 -8.96213627]
[119.12904358 -13.10241604]
[119.19910431 -17.04698372]
[120.41687012 -20.38651085]
[122.44232178 -22.82867050]
[124.87383270 -24.22362709]
[129.48783875 -38.49636078]
[134.10185242 -52.76909256]
[130.98463440 -68.28017426]
[142.26170349 -78.01036835]
[146.87571716 -92.28310394]
[151.48973083 -106.55583954]
[156.10374451 -120.82856750]
[155.04403687 -125.03939056]
[155.34875488 -128.97279358]
[156.76313782 -132.23391724]
[158.93035889 -134.55119324]
[161.44059753 -135.79895020]
[166.89595032 -149.77174377]
[172.35130310 -163.74453735]
[169.15284729 -181.87879944]
[183.27116394 -192.30186462]
[188.51788330 -206.35432434]
[193.76460266 -220.40679932]
[193.04879761 -226.97940063]
[195.40589905 -232.15058899]
[199.38240051 -234.79566956]
[205.04518127 -248.68569946]
[203.09025574 -264.38565063]
[215.05979919 -273.25015259]
[220.72259521 -287.14016724]
[226.38537598 -301.03021240]
[232.04815674 -314.92022705]
[219.24844360 -322.80801392]
[207.92169189 -332.69509888]
[198.37689209 -344.31176758]
[190.87445068 -357.34106445]
[185.61901855 -371.42761230]
[182.75398254 -386.18707275]
[182.35751343 -401.21679688]
[184.44039917 -416.10678101]
[188.94584656 -430.45077515]
[195.75091553 -443.85754395]
[204.66998291 -455.96124268]
[215.45971680 -466.43176270]
[227.82575989 -474.98339844]
[241.43077087 -481.38290405]
[255.90359497 -485.45565796]
[270.84939575 -487.09054565]
[285.86044312 -486.24301147]
[300.52722168 -482.93615723]
[314.44961548 -477.26016235]
[327.24783325 -469.36990356]
[338.57266235 -459.48065186]
[348.11523438 -447.86215210]
[355.61517334 -434.83139038]
[360.86788940 -420.74383545]
[363.73007202 -405.98382568]
[364.12365723 -390.95404053]
[362.03787231 -376.06445312]
[357.52969360 -361.72131348]
[350.72201538 -348.31588745]
[341.80062866 -336.21386719]
[331.00888062 -325.74545288]
[318.64117432 -317.19616699]
[305.03494263 -310.79931641]
[290.56134033 -306.72933960]
[275.61520386 -305.09732056]
[260.60433960 -305.94775391]
[245.93818665 -309.25744629]
[240.27540588 -295.36743164]
[234.61260986 -281.47738647]
[228.94982910 -267.58737183]
[231.30979919 -252.88090515]
[218.93521118 -243.02290344]
[213.27243042 -229.13287354]
[207.81706238 -215.16007996]
[202.57034302 -201.10760498]
[197.32363892 -187.05514526]
[202.05804443 -175.92356873]
[197.80191040 -164.17327881]
[186.32409668 -158.28918457]
[180.86874390 -144.31639099]
[175.41339111 -130.34359741]
[170.37646484 -116.21456146]
[165.76246643 -101.94182587]
[161.14845276 -87.66909027]
[156.53443909 -73.39636230]
[159.98168945 -58.90616608]
[148.37458801 -48.15508270]
[143.76057434 -33.88235092]
[139.14656067 -19.60961723]
[134.95954895 -5.20583534]
[131.20326233 9.31622410]
[127.44695282 23.83828354]
[140.33280945 29.80593109]
[151.97766113 37.93337631]
[162.02320862 47.97054672]
[170.16036987 59.60860443]
[176.13877869 72.48947144]
[179.77447510 86.21679688]
[180.95558167 100.36822510]
[179.64578247 114.50832367]
[175.88536072 128.20201111]
[169.79003906 141.02795410]
[161.54733276 152.59152222]
[151.41088867 162.53688049]
[139.69259644 170.55805969]
[126.75299072 176.40824890]
[112.99022675 179.90742493]
[98.82776642 180.94793701]
[84.70137787 179.49777222]
[80.51436615 193.90155029]
[76.32735443 208.30532837]
[72.14034271 222.70910645]
[67.95333099 237.11289978]
[63.76631927 251.51667786]
[59.57931137 265.92047119]
[57.90776825 280.82702637]
[58.80058289 295.80044556]
[59.80484390 310.76678467]
[60.92049408 325.72521973]
[64.67950439 334.05035400]
[61.93970490 340.91439819]
[62.83252335 355.88781738]
[63.72533798 370.86123657]
[64.72959900 385.82757568]
[65.84524536 400.78601074]
[66.96089172 415.74447632]
[68.07654572 430.70294189]
[69.19219208 445.66137695]
[77.93447113 458.84786987]
[71.16521454 472.11535645]
[72.28086090 487.07379150]
[86.72937012 491.79705811]
[98.26728058 501.69378662]
[105.13515472 515.25476074]
[106.28569031 530.41210938]
[101.54343414 544.85437012]
[91.63154602 556.37927246]
[78.06152344 563.22930908]
[62.90269470 564.35986328]
[48.46666336 559.59863281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[14 193]
[15 192]
[16 191]
[17 189]
[18 188]
[20 187]
[21 186]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[51 179]
[66 162]
[67 161]
[68 160]
[73 159]
[74 158]
[75 157]
[77 155]
[78 154]
[79 153]
[80 152]
[85 151]
[86 150]
[87 149]
[89 146]
[90 145]
[91 144]
[94 143]
[95 142]
[97 140]
[98 139]
[99 138]
[100 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
