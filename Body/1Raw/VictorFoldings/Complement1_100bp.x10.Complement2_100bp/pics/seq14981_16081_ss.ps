%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[195.61566162 514.05688477]
[202.47117615 500.65957642]
[211.80889893 488.85733032]
[223.26989746 479.10375977]
[236.41365051 471.77383423]
[231.79963684 457.50109863]
[227.18563843 443.22836304]
[222.57162476 428.95562744]
[208.75071716 427.75125122]
[196.39373779 421.34991455]
[187.38153076 410.68881226]
[183.09996033 397.35617065]
[184.22689819 383.35491943]
[190.62510681 370.80154419]
[201.35801697 361.60635376]
[196.95701599 347.26651001]
[192.55601501 332.92666626]
[188.15502930 318.58682251]
[183.75402832 304.24697876]
[178.61206055 290.15582275]
[172.74310303 276.35165405]
[166.87414551 262.54748535]
[160.69837952 248.87780762]
[154.21888733 235.34945679]
[147.73937988 221.82110596]
[136.43820190 217.50720215]
[130.92930603 206.28953552]
[134.65550232 193.94132996]
[128.37814331 180.31802368]
[122.10079193 166.69470215]
[115.82342529 153.07138062]
[109.54606628 139.44807434]
[103.26870728 125.82475281]
[96.99134827 112.20143890]
[96.44544220 127.19149780]
[91.92817688 141.49514771]
[83.76564026 154.07978821]
[72.54710388 164.03691101]
[59.08243942 170.64772034]
[44.34367371 173.43496704]
[29.39480972 172.19744873]
[15.31501865 167.02449036]
[3.12073493 158.28953552]
[-6.30772734 146.62316895]
[-12.28971958 132.86759949]
[-14.39339542 118.01583862]
[-12.46688938 103.14006805]
[-6.64927721 89.31417847]
[2.63946223 77.53625488]
[14.72876740 68.65657806]
[28.74589920 63.31616974]
[43.67895126 61.90055466]
[58.44989395 64.51193237]
[71.99239349 70.96178436]
[83.32881927 80.78449249]
[91.64128113 93.27198792]
[89.85881042 78.37827301]
[88.07634735 63.48455429]
[78.75398254 50.70159531]
[84.92406464 37.14507294]
[83.03076935 22.26503563]
[81.02675629 7.39950752]
[79.02274323 -7.46602058]
[69.25759888 -15.89245129]
[67.89448547 -28.31524086]
[75.12199402 -38.01522446]
[73.33953094 -52.90894318]
[71.55706024 -67.80265808]
[60.18110275 -82.28261566]
[67.71157837 -98.13375854]
[65.70756531 -112.99929047]
[52.20973587 -120.42322540]
[45.74706650 -134.21043396]
[48.60817337 -148.98468018]
[59.49007416 -159.11987305]
[57.48606110 -173.98539734]
[55.48204422 -188.85093689]
[53.47803116 -203.71646118]
[38.45526886 -203.71023560]
[23.56572723 -205.70648193]
[9.07512665 -209.66955566]
[-4.75792980 -215.52873230]
[-17.68657494 -223.17945862]
[-29.48008347 -232.48518372]
[-39.92798615 -243.27986145]
[-48.84382248 -255.37080383]
[-56.06848907 -268.54229736]
[-61.47304153 -282.55920410]
[-64.96103668 -297.17144775]
[-66.47023010 -312.11819458]
[-65.97368622 -327.13275146]
[-63.48025513 -341.94714355]
[-59.03445053 -356.29699707]
[-52.71560669 -369.92623901]
[-44.63648987 -382.59158325]
[-34.94128036 -394.06704712]
[-23.80300522 -404.14782715]
[-11.42043591 -412.65405273]
[1.98544371 -419.43383789]
[16.17539024 -424.36627197]
[30.89616966 -427.36331177]
[45.88507080 -428.37142944]
[60.87459564 -427.37268066]
[75.59724426 -424.38485718]
[89.79026794 -419.46127319]
[103.20038605 -412.68984985]
[115.58826447 -404.19140625]
[126.73284149 -394.11758423]
[136.43522644 -382.64816284]
[144.52224731 -369.98785400]
[150.84960938 -356.36257935]
[155.30438232 -342.01553345]
[157.80706787 -327.20269775]
[158.31300354 -312.18844604]
[156.81315613 -297.24075317]
[153.33428955 -282.62634277]
[147.93849182 -268.60601807]
[140.72206116 -255.43003845]
[131.81378174 -243.33351135]
[121.37262726 -232.53231812]
[109.58493805 -223.21922302]
[96.66107178 -215.56042480]
[82.83168030 -209.69259644]
[68.34355927 -205.72047424]
[70.34757233 -190.85494995]
[72.35158539 -175.98941040]
[74.35559845 -161.12388611]
[87.53289795 -154.23210144]
[94.20418549 -140.74291992]
[91.62316132 -125.73652649]
[80.57308960 -115.00330353]
[82.57710266 -100.13777161]
[92.00339508 -92.55677032]
[93.79463196 -80.18845367]
[86.45078278 -69.58512878]
[88.23324585 -54.69141006]
[90.01570892 -39.79769135]
[101.27568817 -26.33738518]
[93.88826752 -9.47003460]
[95.89228058 5.39549398]
[97.89629364 20.26102257]
[101.90525055 26.46989632]
[99.81777954 35.36260605]
[109.01264954 47.08026505]
[102.97006226 61.70208740]
[104.75252533 76.59580994]
[106.53499603 91.48952484]
[110.61466217 105.92407990]
[116.89202118 119.54739380]
[123.16938019 133.17071533]
[129.44674683 146.79402161]
[135.72410583 160.41734314]
[142.00146484 174.04066467]
[148.27882385 187.66397095]
[163.55726624 197.94262695]
[161.26773071 215.34161377]
[167.74722290 228.86996460]
[174.22671509 242.39830017]
[178.53431702 245.34648132]
[181.03067017 249.26074219]
[181.65110779 253.28941345]
[180.67831421 256.67849731]
[186.54728699 270.48269653]
[192.41624451 284.28686523]
[197.94578552 270.34326172]
[211.08422852 263.10574341]
[225.82482910 265.88323975]
[235.42840576 277.40588379]
[235.50433350 292.40570068]
[226.01786804 304.02496338]
[211.30613708 306.95150757]
[198.09387207 299.84597778]
[202.49487305 314.18582153]
[206.89587402 328.52566528]
[211.29685974 342.86550903]
[215.69786072 357.20535278]
[231.80247498 359.52383423]
[245.23570251 368.60086060]
[253.33657837 382.57711792]
[254.52722168 398.62911987]
[248.61987305 413.53939819]
[236.84436035 424.34161377]
[241.45837402 438.61434937]
[246.07237244 452.88708496]
[250.68638611 467.15982056]
[265.63360596 465.40866089]
[280.63525391 466.60751343]
[295.11465454 470.71029663]
[308.51528931 477.55932617]
[320.32208252 486.89129639]
[330.08120728 498.34756470]
[337.41751099 511.48776245]
[342.04907227 525.80682373]
[343.79779053 540.75433350]
[342.59652710 555.75573730]
[338.49139404 570.23449707]
[331.64019775 583.63403320]
[322.30630493 595.43933105]
[310.84844971 605.19659424]
[297.70709229 612.53076172]
[283.38729858 617.15997314]
[268.43948364 618.90631104]
[253.43824768 617.70257568]
[238.96015930 613.59515381]
[225.56173706 606.74176025]
[213.75798035 597.40594482]
[204.00257874 585.94653320]
[196.67050171 572.80395508]
[192.04359436 558.48345947]
[190.29969788 543.53533936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[8 182]
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[20 164]
[21 163]
[22 162]
[23 158]
[24 157]
[25 156]
[28 154]
[29 153]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[56 147]
[57 146]
[58 145]
[60 143]
[61 141]
[62 140]
[63 139]
[66 137]
[67 136]
[68 135]
[70 132]
[71 131]
[75 127]
[76 126]
[77 125]
[78 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
