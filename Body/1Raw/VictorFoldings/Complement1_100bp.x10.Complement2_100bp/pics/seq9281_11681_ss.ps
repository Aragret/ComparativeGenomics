%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[182.37973022 175.77876282]
[186.26129150 161.28253174]
[191.20283508 147.11254883]
[177.44273376 141.14099121]
[163.68263245 135.16941833]
[149.92253113 129.19786072]
[136.16241455 123.22629547]
[122.40232086 117.25473022]
[108.55483246 111.48870087]
[94.69132996 113.30388641]
[85.88594055 102.44309998]
[71.95413971 96.88387299]
[58.02234268 91.32464600]
[44.09054565 85.76541901]
[30.15874672 80.20619202]
[15.78076458 86.19880676]
[1.73113346 80.36249542]
[-3.89329839 66.61835480]
[-17.82509613 61.05913162]
[-31.75689507 55.49990463]
[-38.25627518 69.02524567]
[-45.66350937 82.07551575]
[-53.94406128 94.58988190]
[-63.05932236 106.50997925]
[-72.96678925 117.78023529]
[-83.62027740 128.34811401]
[-94.97010803 138.16432190]
[-106.96336365 147.18312073]
[-119.54412842 155.36242676]
[-132.65374756 162.66412354]
[-146.23107910 169.05415344]
[-160.21284485 174.50274658]
[-174.53384399 178.98448181]
[-189.12728882 182.47845459]
[-203.92515564 184.96839905]
[-218.85844421 186.44268799]
[-233.85754395 186.89445496]
[-248.85249329 186.32157898]
[-263.77337646 184.72676086]
[-278.55065918 182.11740112]
[-293.11544800 178.50569153]
[-307.39978027 173.90846252]
[-321.33706665 168.34713745]
[-334.86236572 161.84767151]
[-347.91259766 154.44035339]
[-360.42691040 146.15971375]
[-372.34692383 137.04437256]
[-383.61712646 127.13682556]
[-394.18493652 116.48326874]
[-404.00106812 105.13336945]
[-413.01977539 93.14005280]
[-421.19900513 80.55923462]
[-428.50061035 67.44956970]
[-434.89056396 53.87219238]
[-440.33905029 39.89039230]
[-444.82067871 25.56937218]
[-448.31457520 10.97589588]
[-450.80441284 -3.82199001]
[-452.27859497 -18.75529289]
[-452.73025513 -33.75438309]
[-452.15728760 -48.74933243]
[-450.56237793 -63.67021942]
[-447.95291138 -78.44748688]
[-444.34109497 -93.01222229]
[-439.74377441 -107.29652405]
[-434.18237305 -121.23379517]
[-427.68280029 -134.75904846]
[-420.27539062 -147.80921936]
[-411.99468994 -160.32347107]
[-402.87927246 -172.24343872]
[-392.97164917 -183.51358032]
[-382.31799316 -194.08129883]
[-370.96804810 -203.89736938]
[-358.97467041 -212.91600037]
[-346.39379883 -221.09513855]
[-333.28408813 -228.39665222]
[-319.70666504 -234.78651428]
[-305.72482300 -240.23490906]
[-291.40377808 -244.71644592]
[-276.81027222 -248.21023560]
[-262.01235962 -250.69998169]
[-247.07905579 -252.17407227]
[-232.07995605 -252.62562561]
[-217.08502197 -252.05256653]
[-202.16413879 -250.45753479]
[-187.38690186 -247.84797668]
[-172.82217407 -244.23606873]
[-158.53790283 -239.63864136]
[-144.60067749 -234.07714844]
[-131.07546997 -227.57749939]
[-118.02534485 -220.16999817]
[-105.51114655 -211.88919067]
[-93.59123230 -202.77369690]
[-82.32117462 -192.86599731]
[-71.75351715 -182.21229553]
[-61.93752670 -170.86227417]
[-52.91897964 -158.86883545]
[-44.73992538 -146.28790283]
[-37.43849182 -133.17814636]
[-31.04872513 -119.60066986]
[-25.60041809 -105.61880493]
[-21.11897469 -91.29772186]
[-17.62528610 -76.70420074]
[-15.13564491 -61.90627670]
[-13.66165638 -46.97295761]
[-13.21019554 -31.97385979]
[-13.78336525 -16.97891998]
[-15.37849522 -2.05805135]
[-17.98814583 12.71917629]
[-21.60015106 27.28386497]
[-26.19766998 41.56810760]
[-12.26587105 47.12733459]
[1.66592741 52.68655777]
[15.20734406 46.59019852]
[29.41536140 52.02957916]
[35.71797180 66.27439880]
[49.64977264 71.83362579]
[63.58156967 77.39284515]
[77.51336670 82.95207214]
[91.44516754 88.51129913]
[105.30867004 86.69611359]
[114.11405945 97.55690002]
[120.70101166 96.98805237]
[125.81826782 99.46004486]
[128.37388611 103.49462891]
[142.13398743 109.46619415]
[155.89408875 115.43775940]
[169.65419006 121.40931702]
[183.41429138 127.38088226]
[197.17439270 133.35244751]
[204.14886475 120.06470490]
[212.08561707 107.32833099]
[220.94131470 95.21289825]
[230.66758728 83.78456116]
[241.21131897 73.10575104]
[252.51492310 63.23479080]
[264.51666260 54.22558975]
[277.15097046 46.12735367]
[290.34884644 38.98431396]
[304.03823853 32.83548355]
[318.14431763 27.71444702]
[332.59011841 23.64916992]
[347.29669189 20.66185951]
[362.18371582 18.76882935]
[377.16989136 17.98041916]
[392.17337036 18.30093575]
[407.11221313 19.72862816]
[421.90481567 22.25569916]
[436.47039795 25.86834717]
[450.72940063 30.54683876]
[464.60394287 36.26562119]
[478.01821899 42.99346542]
[490.89901733 50.69361877]
[503.17596436 59.32402802]
[514.78198242 68.83755493]
[525.65374756 79.18224335]
[535.73181152 90.30159760]
[544.96112061 102.13487244]
[553.29132080 114.61744690]
[560.67694092 127.68115234]
[567.07757568 141.25462341]
[572.45831299 155.26373291]
[576.78967285 169.63197327]
[580.04809570 184.28085327]
[582.21582031 199.13037109]
[583.28088379 214.09944153]
[583.23754883 229.10627747]
[582.08599854 244.06893921]
[579.83258057 258.90570068]
[576.48962402 273.53552246]
[572.07525635 287.87847900]
[566.61376953 301.85629272]
[560.13482666 315.39257812]
[552.67388916 328.41339111]
[544.27172852 340.84765625]
[534.97418213 352.62741089]
[524.83209229 363.68835449]
[513.90075684 373.97009277]
[502.23995972 383.41641235]
[489.91339111 391.97576904]
[476.98834229 399.60140991]
[463.53540039 406.25164795]
[449.62805176 411.89019775]
[435.34228516 416.48623657]
[420.75607300 420.01470947]
[405.94912720 422.45629883]
[391.00228882 423.79766846]
[375.99722290 424.03152466]
[361.01583862 423.15655518]
[346.13998413 421.17758179]
[331.45092773 418.10537720]
[317.02883911 413.95672607]
[302.95254517 408.75430298]
[289.29891968 402.52648926]
[276.14251709 395.30734253]
[263.55520630 387.13626099]
[251.60569763 378.05789185]
[240.35929871 368.12182617]
[229.87742615 357.38229370]
[220.21733093 345.89794922]
[211.43174744 333.73156738]
[203.56869507 320.94958496]
[196.67109680 307.62176514]
[190.77664185 293.82095337]
[185.91751099 279.62249756]
[182.12023926 265.10397339]
[179.40557861 250.34463501]
[177.78834534 235.42512512]
[177.27738953 220.42691040]
[177.87547302 205.43193054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 130]
[4 129]
[5 128]
[6 127]
[7 126]
[8 125]
[9 122]
[11 120]
[12 119]
[13 118]
[14 117]
[15 116]
[18 113]
[19 112]
[20 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
