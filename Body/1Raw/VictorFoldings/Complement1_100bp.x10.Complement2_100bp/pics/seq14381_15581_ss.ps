%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[79.16870117 612.51672363]
[65.13143921 617.82556152]
[50.72499847 622.03063965]
[36.03601074 625.10662842]
[21.15282631 627.03515625]
[6.16495085 627.80450439]
[-8.83747387 627.41009521]
[-23.76422119 625.85430908]
[-38.52551651 623.14642334]
[-53.03258514 619.30285645]
[-67.19818115 614.34661865]
[-80.93710327 608.30755615]
[-94.16672516 601.22198486]
[-106.80748749 593.13250732]
[-118.78335571 584.08776855]
[-130.02230835 574.14221191]
[-140.45675659 563.35559082]
[-150.02394104 551.79284668]
[-158.66633606 539.52349854]
[-166.33193970 526.62127686]
[-172.97467041 513.16387939]
[-178.55458069 499.23214722]
[-183.03808594 484.90991211]
[-186.39823914 470.28329468]
[-188.61482239 455.44027710]
[-189.67453003 440.47012329]
[-189.57095337 425.46289062]
[-188.30474854 410.50878906]
[-185.88351440 395.69778442]
[-182.32179260 381.11892700]
[-177.64105225 366.85995483]
[-171.86940002 353.00656128]
[-165.04156494 339.64208984]
[-157.19860840 326.84692383]
[-148.38771057 314.69799805]
[-138.66184998 303.26840210]
[-128.07951355 292.62683105]
[-116.70436096 282.83734131]
[-104.60479736 273.95877075]
[-91.85359192 266.04455566]
[-78.52743530 259.14224243]
[-64.70647430 253.29336548]
[-50.47382736 248.53311157]
[-35.91509247 244.89010620]
[-21.11782646 242.38624573]
[-6.17102909 241.03659058]
[8.83541012 240.84927368]
[23.81123924 241.82542419]
[38.66639328 243.95915222]
[53.31152344 247.23762512]
[57.71252060 232.89778137]
[62.11352158 218.55792236]
[66.51451874 204.21807861]
[70.48661041 189.75355530]
[65.97118378 175.55989075]
[76.74651337 163.97529602]
[80.28618622 149.39891052]
[83.82585907 134.82254028]
[87.36553192 120.24616241]
[90.90520477 105.66979218]
[92.35462189 90.73998260]
[91.68483734 75.75494385]
[83.33904266 62.31402206]
[90.50032043 49.25395584]
[89.83053589 34.26891708]
[89.16075134 19.28388023]
[88.49096680 4.29884052]
[79.51653290 -4.96519232]
[79.26716614 -17.46005440]
[87.33123779 -26.47655106]
[86.88463593 -41.46990204]
[86.43802643 -56.46325302]
[85.99142456 -71.45660400]
[85.54481506 -86.44995117]
[83.76235199 -101.34366608]
[80.65824127 -116.01897430]
[77.55413055 -130.69427490]
[74.45001984 -145.36958313]
[59.44759369 -144.48365784]
[44.48070145 -145.84373474]
[29.88371086 -149.41941833]
[15.98272419 -155.13082886]
[3.08829308 -162.85037231]
[-8.51151466 -172.40559387]
[-18.55755615 -183.58300781]
[-26.82539749 -196.13293457]
[-33.13033295 -209.77497864]
[-37.33150864 -224.20437622]
[-39.33506775 -239.09878540]
[-39.09625244 -254.12545776]
[-36.62039566 -268.94866943]
[-31.96280670 -283.23727417]
[-25.22754288 -296.67208862]
[-16.56506920 -308.95294189]
[-6.16890812 -319.80548096]
[5.72868443 -328.98724365]
[18.86191177 -336.29312134]
[32.93737411 -341.55990601]
[47.64062119 -344.66992188]
[62.64317322 -345.55371094]
[77.60987091 -344.19149780]
[92.20635223 -340.61373901]
[106.10652161 -334.90036011]
[118.99985504 -327.17898560]
[130.59829712 -317.62210083]
[140.64274597 -306.44326782]
[148.90881348 -293.89215088]
[155.21179199 -280.24920654]
[159.41091919 -265.81921387]
[161.41235352 -250.92451477]
[161.17140198 -235.89788818]
[158.69343567 -221.07502747]
[154.03381348 -206.78706360]
[147.29663086 -193.35322571]
[138.63241577 -181.07360840]
[128.23469543 -170.22256470]
[116.33580017 -161.04248047]
[103.20153809 -153.73846436]
[89.12532043 -148.47367859]
[92.22943115 -133.79838562]
[95.33354187 -119.12308502]
[98.43765259 -104.44777679]
[103.78200531 -118.46340942]
[114.61857605 -128.83494568]
[128.85499573 -133.55979919]
[143.74244690 -131.72567749]
[156.40637207 -123.68671417]
[164.40159607 -110.99512482]
[166.18434143 -96.10144043]
[161.41038513 -81.88140106]
[151.00152588 -71.08068085]
[136.96754456 -65.78472137]
[122.01816559 -67.01609039]
[109.03990173 -74.53703308]
[100.53816986 -86.89656067]
[100.98477173 -71.90320587]
[101.43138123 -56.90985870]
[101.87798309 -41.91650772]
[102.32459259 -26.92315674]
[112.33879852 -12.51196194]
[103.47600555 3.62905550]
[104.14579010 18.61409378]
[104.81557465 33.59913254]
[105.48535919 48.58417130]
[113.78324890 60.95326233]
[106.66987610 75.08515930]
[107.33966064 90.07019806]
[113.64774323 76.46108246]
[123.64225006 65.27582550]
[136.45854187 57.48206711]
[150.98788452 53.75404358]
[165.97334290 54.41426468]
[180.11853027 59.40562057]
[192.19975281 68.29630280]
[201.17184448 80.31717682]
[206.25865173 94.42832184]
[207.02009583 109.40898895]
[203.39030457 123.96318054]
[195.68331909 136.83183289]
[184.56582642 146.90167236]
[170.99964905 153.30155945]
[156.15835571 155.47782898]
[141.32588196 153.24221802]
[127.78540039 146.78814697]
[116.70827484 136.67391968]
[109.05280304 123.77455902]
[105.48157501 109.20946503]
[101.94190216 123.78583527]
[98.40222931 138.36221313]
[94.86255646 152.93858337]
[91.32288361 167.51496887]
[95.58513641 182.75123596]
[85.06298828 193.29322815]
[86.43293762 197.41357422]
[86.42162323 201.35874939]
[85.25370789 204.71603394]
[83.26483917 207.18807983]
[80.85436249 208.61907959]
[76.45336914 222.95892334]
[72.05236816 237.29876709]
[67.65136719 251.63862610]
[81.61423492 257.14013672]
[95.10878754 263.70712280]
[108.05386353 271.30010986]
[120.37161255 279.87341309]
[131.98794556 289.37545776]
[142.83300781 299.74911499]
[152.84158325 310.93200684]
[161.95344543 322.85687256]
[170.11383057 335.45196533]
[177.27365112 348.64154053]
[183.38983154 362.34631348]
[188.42559814 376.48382568]
[192.35066223 390.96908569]
[195.14143372 405.71490479]
[196.78109741 420.63269043]
[197.25982666 435.63265991]
[196.57470703 450.62463379]
[194.72988892 465.51840210]
[191.73645020 480.22445679]
[187.61241150 494.65429688]
[182.38255310 508.72116089]
[176.07833862 522.34045410]
[168.73767090 535.43029785]
[160.40472412 547.91186523]
[151.12959290 559.71020508]
[140.96807861 570.75427246]
[129.98127747 580.97772217]
[118.23526764 590.31896973]
[105.80069733 598.72192383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 181]
[51 180]
[52 179]
[53 178]
[54 173]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 147]
[62 146]
[64 144]
[65 143]
[66 142]
[67 141]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 122]
[76 121]
[77 120]
[78 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
