%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[85.33154297 776.01629639]
[70.34007263 775.34625244]
[55.43459702 773.60839844]
[40.69107819 770.81158447]
[26.18464661 766.97015381]
[11.98922157 762.10363770]
[-1.82285821 756.23681641]
[-15.18120956 749.39959717]
[-28.01775932 741.62677002]
[-40.26709747 732.95806885]
[-51.86679840 723.43756104]
[-62.75775909 713.11376953]
[-72.88447571 702.03930664]
[-82.19534302 690.27069092]
[-90.64292145 677.86779785]
[-98.18416595 664.89385986]
[-104.78063202 651.41497803]
[-110.39871979 637.49987793]
[-115.00978851 623.21942139]
[-118.59035492 608.64642334]
[-121.12216187 593.85510254]
[-122.59231567 578.92083740]
[-122.99332428 563.91973877]
[-122.32313538 548.92828369]
[-120.58516693 534.02282715]
[-117.78828430 519.27935791]
[-113.94673157 504.77291870]
[-109.08008575 490.57754517]
[-103.21315002 476.76550293]
[-96.37581635 463.40722656]
[-88.60292816 450.57070923]
[-79.93409729 438.32144165]
[-70.41349792 426.72183228]
[-60.08964157 415.83093262]
[-49.01514053 405.70431519]
[-37.24642563 396.39352417]
[-24.84347153 387.94604492]
[-11.86947918 380.40490723]
[1.60943878 373.80853271]
[15.52459526 368.19055176]
[29.80508041 363.57958984]
[44.37812424 359.99914551]
[59.16946793 357.46743774]
[74.10372925 355.99740601]
[89.10481262 355.59652710]
[89.77459717 340.61148071]
[90.44438934 325.62643433]
[91.11417389 310.64141846]
[91.78395844 295.65637207]
[92.45374298 280.67132568]
[93.12352753 265.68627930]
[93.79331207 250.70124817]
[94.46309662 235.71621704]
[95.13288116 220.73117065]
[95.80266571 205.74613953]
[96.47245026 190.76109314]
[97.03066254 175.77148438]
[97.47727203 160.77813721]
[97.92387390 145.78479004]
[98.37048340 130.79142761]
[96.58801270 115.89772034]
[84.35319519 104.42228699]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[80.39710999 59.43269348]
[76.21009827 45.02891159]
[62.92925644 41.33972168]
[53.28210068 31.64689636]
[49.71265793 18.55764008]
[53.05009079 5.51901674]
[62.31904602 -4.08976078]
[58.34695053 -18.55428505]
[54.37485123 -33.01881027]
[50.40275574 -47.48333359]
[46.43066025 -61.94785690]
[36.85577011 -50.40136719]
[21.85636711 -50.53547287]
[12.48945904 -62.25131607]
[15.65997791 -76.91241455]
[29.03073692 -83.71115112]
[42.74423218 -77.63700104]
[39.85895920 -92.35689545]
[35.13729477 -100.17633820]
[37.04202271 -107.31733704]
[34.37622833 -122.07855225]
[31.71043205 -136.83976746]
[16.66108894 -137.52168274]
[2.14094162 -141.53579712]
[-11.12168407 -148.68075562]
[-22.46154022 -158.59819031]
[-31.30982399 -170.79061890]
[-37.22270966 -184.64651489]
[-39.90361023 -199.47082520]
[-39.21805573 -214.52000427]
[-35.20042419 -229.03918457]
[-28.05224800 -242.30007935]
[-18.13207054 -253.63752747]
[-5.93748760 -262.48284912]
[7.91982841 -268.39239502]
[22.74479866 -271.06970215]
[37.79381180 -270.38049316]
[52.31200790 -266.35934448]
[65.57117462 -259.20794678]
[76.90621948 -249.28503418]
[85.74859619 -237.08830261]
[91.65476990 -223.22955322]
[94.32848358 -208.40393066]
[93.63563538 -193.35508728]
[89.61096954 -178.83787537]
[82.45636749 -165.58044434]
[72.53069305 -154.24780273]
[60.33182526 -145.40837097]
[46.47164917 -139.50556946]
[49.13744354 -124.74434662]
[51.80323792 -109.98313141]
[54.57884979 -95.24216461]
[57.46412277 -80.52227783]
[60.89518356 -65.91995239]
[64.86727905 -51.45542908]
[68.83937836 -36.99090576]
[72.81147003 -22.52638054]
[76.78356934 -8.06185722]
[92.32270813 -2.76916146]
[101.73950195 10.87949371]
[101.15972137 27.61762810]
[90.61387634 40.84189987]
[94.80088806 55.24568176]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[113.02512360 90.26731110]
[116.19271851 101.47479248]
[111.05253601 111.92562103]
[114.10399628 97.23928070]
[121.11859131 83.98049164]
[131.54313660 73.19490814]
[144.55551147 65.73311615]
[159.12948608 62.18359375]
[174.11570740 62.82625961]
[188.33230591 67.61043549]
[200.65809631 76.15882874]
[210.12101746 87.79726410]
[215.97477722 101.60789490]
[217.75772095 116.50155640]
[215.32925415 131.30366516]
[208.88087463 144.84687805]
[198.92115784 156.06311035]
[186.23553467 164.06781006]
[171.82447815 168.22967529]
[156.82447815 168.22050476]
[142.41850281 164.04103088]
[129.74269104 156.02082825]
[119.79667664 144.79243469]
[113.36383057 131.23803711]
[112.91722870 146.23138428]
[112.47061920 161.22474670]
[112.02400970 176.21809387]
[114.89653015 184.88909912]
[111.45748901 191.43087769]
[110.78770447 206.41592407]
[110.11791992 221.40095520]
[109.44813538 236.38600159]
[108.77835083 251.37103271]
[108.10856628 266.35607910]
[107.43878174 281.34112549]
[106.76899719 296.32614136]
[106.09921265 311.31118774]
[105.42942810 326.29623413]
[104.75963593 341.28128052]
[104.08985138 356.26629639]
[118.99535370 358.00393677]
[133.73892212 360.80047607]
[148.24540710 364.64169312]
[162.44090271 369.50802612]
[176.25308228 375.37463379]
[189.61152649 382.21166992]
[202.44819641 389.98425293]
[214.69767761 398.65280151]
[226.29751587 408.17312622]
[237.18864441 418.49673462]
[247.31552124 429.57101440]
[256.62658691 441.33950806]
[265.07434082 453.74227905]
[272.61578369 466.71609497]
[279.21246338 480.19485474]
[284.83074951 494.10989380]
[289.44204712 508.39025879]
[293.02282715 522.96319580]
[295.55487061 537.75451660]
[297.02526855 552.68872070]
[297.42648315 567.68981934]
[296.75653076 582.68127441]
[295.01879883 597.58679199]
[292.22213745 612.33032227]
[288.38079834 626.83679199]
[283.51437378 641.03222656]
[277.64764404 654.84436035]
[270.81051636 668.20275879]
[263.03784180 681.03936768]
[254.36918640 693.28875732]
[244.84877014 704.88854980]
[234.52508545 715.77960205]
[223.45072937 725.90637207]
[211.68215942 735.21734619]
[199.27934265 743.66503906]
[186.30546570 751.20635986]
[172.82664490 757.80291748]
[158.91157532 763.42114258]
[144.63116455 768.03228760]
[130.05816650 771.61297607]
[115.26686859 774.14489746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[57 156]
[58 155]
[59 154]
[60 153]
[61 132]
[63 129]
[64 128]
[65 127]
[66 126]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[81 117]
[82 116]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
