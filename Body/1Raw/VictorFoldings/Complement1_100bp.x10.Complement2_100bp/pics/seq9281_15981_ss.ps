%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[77.94482422 430.30148315]
[66.24307251 439.74816895]
[53.07860565 447.01919556]
[38.85147095 451.89358521]
[23.99401665 454.22323608]
[8.95774841 453.93731689]
[-5.80040169 451.04455566]
[-19.83194923 445.63284302]
[-32.71049118 437.86660767]
[-44.04466629 427.98190308]
[-53.49003601 416.27905273]
[-60.75957108 403.11376953]
[-65.63235474 388.88607788]
[-67.96031189 374.02838135]
[-67.67269897 358.99212646]
[-64.77825165 344.23431396]
[-59.36493683 330.20336914]
[-51.59725189 317.32571411]
[-41.71125031 305.99267578]
[-30.00735474 296.54861450]
[-16.84123421 289.28057861]
[-2.61299491 284.40939331]
[12.24498558 282.08312988]
[27.28118896 282.37243652]
[30.16646194 267.65255737]
[33.05173492 252.93266296]
[35.93700790 238.21276855]
[29.45096970 228.00210571]
[31.73426819 215.71510315]
[42.09909439 208.03831482]
[45.20320511 193.36300659]
[48.30731583 178.68769836]
[38.95780563 190.41743469]
[26.92263794 199.37036133]
[13.00006485 204.95265198]
[-1.88647962 206.79405212]
[-16.74962616 204.77244568]
[-30.60355377 199.02191162]
[-42.52938080 189.92385864]
[-51.73611450 178.08172607]
[-57.61309814 164.28096008]
[-59.77053833 149.43692017]
[-58.06533813 134.53416443]
[-52.61059570 120.56111908]
[-43.76810837 108.44458771]
[-32.12436295 98.98820496]
[-18.45164680 92.81918335]
[-3.65682483 90.34668732]
[11.27881718 91.73470306]
[25.36465073 96.89118958]
[37.66641617 105.47411346]
[47.36817551 116.91420746]
[53.82645035 130.45269775]
[56.61288834 145.19161987]
[55.54164886 160.15841675]
[63.20224762 147.26210022]
[70.86284637 134.36576843]
[78.52343750 121.46943665]
[86.18403625 108.57311249]
[85.95917511 91.80034637]
[100.67783356 83.75439453]
[108.14557648 70.74544525]
[115.61331940 57.73649216]
[115.14030457 39.32840347]
[130.64859009 31.11499405]
[137.92181396 17.99629974]
[145.19503784 4.87760496]
[145.10261536 -0.34145051]
[146.84693909 -4.64385033]
[149.77127075 -7.48345327]
[153.09727478 -8.65391922]
[160.94903564 -21.43476295]
[168.80078125 -34.21560287]
[176.65254211 -46.99644852]
[164.38047791 -55.63028336]
[152.66893005 -65.01036835]
[141.56318665 -75.10041809]
[131.10623169 -85.86138153]
[121.33850098 -97.25164795]
[112.29779816 -109.22713470]
[104.01910400 -121.74150848]
[96.53443909 -134.74636841]
[89.87275696 -148.19139099]
[84.05984497 -162.02455139]
[79.11817932 -176.19235229]
[75.06687927 -190.63996887]
[71.92162323 -205.31149292]
[69.69458008 -220.15019226]
[68.39436340 -235.09863281]
[68.02600098 -250.09899902]
[68.59092712 -265.09323120]
[70.08694458 -280.02334595]
[72.50827789 -294.83157349]
[75.84555054 -309.46063232]
[80.08584595 -323.85391235]
[85.21277618 -337.95571899]
[91.20648956 -351.71151733]
[98.04380798 -365.06808472]
[105.69827271 -377.97372437]
[114.14027405 -390.37854004]
[123.33715057 -402.23449707]
[133.25331116 -413.49575806]
[143.85041809 -424.11874390]
[155.08744812 -434.06237793]
[166.92092896 -443.28817749]
[179.30508423 -451.76043701]
[192.19200134 -459.44638062]
[205.53182983 -466.31628418]
[219.27296448 -472.34353638]
[233.36221313 -477.50488281]
[247.74510193 -481.78030396]
[262.36596680 -485.15328979]
[277.16824341 -487.61074829]
[292.09466553 -489.14321899]
[307.08746338 -489.74472046]
[322.08868408 -489.41299438]
[337.04025269 -488.14926147]
[351.88433838 -485.95843506]
[366.56350708 -482.84899902]
[381.02096558 -478.83300781]
[395.20080566 -473.92593384]
[409.04809570 -468.14678955]
[422.50933838 -461.51794434]
[435.53244019 -454.06506348]
[448.06698608 -445.81692505]
[460.06451416 -436.80548096]
[471.47857666 -427.06558228]
[482.26504517 -416.63491821]
[492.38217163 -405.55386353]
[501.79080200 -393.86523438]
[510.45455933 -381.61428833]
[518.33996582 -368.84841919]
[525.41638184 -355.61700439]
[531.65655518 -341.97125244]
[537.03631592 -327.96392822]
[541.53485107 -313.64926147]
[545.13470459 -299.08261108]
[547.82202148 -284.32031250]
[549.58636475 -269.41952515]
[550.42089844 -254.43786621]
[550.32238770 -239.43330383]
[549.29125977 -224.46389771]
[547.33148193 -209.58755493]
[544.45068359 -194.86181641]
[540.65991211 -180.34365845]
[535.97387695 -166.08927917]
[530.41070557 -152.15377808]
[523.99194336 -138.59111023]
[516.74243164 -125.45372772]
[508.69018555 -112.79246521]
[499.86636353 -100.65629578]
[490.30508423 -89.09217834]
[480.04336548 -78.14485931]
[469.12094116 -67.85668182]
[457.57998657 -58.26745224]
[445.46520996 -49.41426849]
[432.82348633 -41.33138657]
[419.70370483 -34.05007553]
[406.15658569 -27.59850502]
[392.23461914 -22.00163269]
[377.99160767 -17.28111649]
[363.48266602 -13.45521641]
[348.76397705 -10.53873539]
[333.89239502 -8.54295635]
[318.92553711 -7.47559977]
[303.92126465 -7.34079647]
[288.93762207 -8.13906765]
[274.03259277 -9.86732483]
[259.26385498 -12.51888084]
[244.68852234 -16.08347893]
[230.36300659 -20.54732704]
[216.34271240 -25.89315414]
[202.68188477 -32.10028076]
[189.43338013 -39.14469147]
[181.58163452 -26.36384964]
[173.72987366 -13.58300686]
[165.87811279 -0.80216402]
[158.31373596 12.15083408]
[151.04051208 25.26952934]
[143.76727295 38.38822174]
[146.79803467 50.09894943]
[140.84594727 61.08787155]
[128.62226868 65.20423126]
[121.15453339 78.21318817]
[113.68679047 91.22213745]
[116.04608917 102.62718201]
[110.17284393 112.68433380]
[99.08036804 116.23371124]
[91.41976929 129.13003540]
[83.75917053 142.02636719]
[76.09857178 154.92268372]
[68.43797302 167.81901550]
[62.98261642 181.79180908]
[59.87850952 196.46711731]
[56.77439880 211.14242554]
[62.88682175 228.51249695]
[50.65689850 241.09805298]
[47.77162552 255.81793213]
[44.88635254 270.53784180]
[42.00107956 285.25772095]
[56.03385544 290.66625977]
[68.91416168 298.42956543]
[80.25057220 308.31170654]
[89.69860077 320.01239014]
[96.97112274 333.17605591]
[101.84712982 347.40261841]
[104.17845917 362.25982666]
[103.89425659 377.29611206]
[101.00315857 392.05459595]
[95.59302521 406.08676147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 200]
[25 199]
[26 198]
[27 197]
[30 195]
[31 194]
[32 193]
[55 192]
[56 191]
[57 190]
[58 189]
[59 188]
[61 185]
[62 184]
[63 183]
[65 180]
[66 179]
[67 178]
[71 177]
[72 176]
[73 175]
[74 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
