%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-25.30937576 462.32882690]
[-19.98991203 476.41415405]
[-17.71558952 491.29776001]
[-18.58583260 506.32891846]
[-22.56259727 520.85058594]
[-29.47203827 534.22796631]
[-39.01210022 545.87615967]
[-50.76573944 555.28601074]
[-64.21913147 562.04620361]
[-78.78414917 565.86114502]
[-93.82408142 566.56408691]
[-108.68144226 564.12432861]
[-122.70673370 558.64849854]
[-135.28681946 550.37591553]
[-145.87178040 539.66833496]
[-153.99885559 526.99377441]
[-159.31277466 512.90637207]
[-161.58123779 498.02185059]
[-160.70507812 482.99102783]
[-156.72261047 468.47091675]
[-149.80790710 455.09628296]
[-140.26325989 443.45184326]
[-128.50592041 434.04660034]
[-115.04986572 427.29171753]
[-100.48334503 423.48248291]
[-85.44313812 422.78546143]
[-70.58673859 425.23107910]
[-65.13138580 411.25827026]
[-59.67602539 397.28549194]
[-64.24417877 386.08465576]
[-59.81358337 374.39904785]
[-48.24943542 368.68649292]
[-42.58664703 354.79644775]
[-36.92386246 340.90643311]
[-31.26107407 327.01641846]
[-25.59828758 313.12637329]
[-19.93550110 299.23635864]
[-32.70234680 307.11083984]
[-47.69281006 307.64572144]
[-60.98841095 300.70114136]
[-69.11372375 288.09243774]
[-69.94479370 273.11547852]
[-63.26439667 259.68521118]
[-50.81876755 251.31227112]
[-35.86116028 250.18531799]
[-22.30146217 256.59893799]
[-13.68414307 268.87664795]
[-12.26160622 283.80816650]
[-4.60100889 270.91183472]
[3.05958843 258.01550293]
[10.72018623 245.11918640]
[18.38078308 232.22285461]
[26.04137993 219.32653809]
[33.70197678 206.43020630]
[40.97520828 193.31150818]
[47.85462189 179.98208618]
[54.73403168 166.65264893]
[54.16106796 161.91127014]
[56.56053162 156.75961304]
[62.02187347 153.03330994]
[69.29510498 139.91461182]
[76.56832886 126.79592133]
[83.84156036 113.67722321]
[78.92437744 101.99497986]
[81.56222534 89.59758759]
[90.80950928 80.92916870]
[103.35132599 79.09712219]
[110.81906891 66.08817291]
[118.28681183 53.07921982]
[125.75455475 40.07026672]
[130.68614197 25.90413094]
[132.91127014 11.07008743]
[135.13638306 -3.76395631]
[124.31525421 -10.81256294]
[116.99032593 -21.39181137]
[114.22071075 -33.90996552]
[116.38335419 -46.49973297]
[123.12214661 -57.29679108]
[133.40603638 -64.71586609]
[145.68656921 -67.68344879]
[148.35237122 -82.44466400]
[151.01815796 -97.20588684]
[153.68395996 -111.96710205]
[152.12948608 -120.96829224]
[156.50088501 -126.92754364]
[158.83638000 -141.74461365]
[160.61885071 -156.63832092]
[162.40130615 -171.53204346]
[164.18377686 -186.42576599]
[165.96624756 -201.31947327]
[167.74870300 -216.21319580]
[168.41848755 -231.19824219]
[167.97189331 -246.19158936]
[167.52528381 -261.18493652]
[152.90788269 -264.99389648]
[139.95639038 -272.76794434]
[129.72074890 -283.87686157]
[123.03070831 -297.42013550]
[120.42859650 -312.29983521]
[122.12536621 -327.30975342]
[127.98345184 -341.23309326]
[137.52796936 -352.94116211]
[149.98519897 -361.48483276]
[164.34527588 -366.17150879]
[179.44409180 -366.62124634]
[194.05766296 -362.79760742]
[207.00132751 -355.01055908]
[217.22581482 -343.89135742]
[223.90223694 -330.34136963]
[226.48939514 -315.45904541]
[224.77755737 -300.45086670]
[218.90548706 -286.53341675]
[209.34921265 -274.83493042]
[196.88340759 -266.30377197]
[182.51863098 -261.63153076]
[182.96524048 -246.63818359]
[183.41184998 -231.64483643]
[191.89666748 -244.01446533]
[205.38662720 -250.57350159]
[220.35548401 -249.60742188]
[232.89041138 -241.36875916]
[239.71481323 -228.01107788]
[239.04479980 -213.02604675]
[231.05552673 -200.33071899]
[217.83534241 -193.24362183]
[202.83999634 -193.61730957]
[189.98922729 -201.35408020]
[182.64242554 -214.43072510]
[180.85995483 -199.53701782]
[179.07749939 -184.64329529]
[177.29502869 -169.74957275]
[175.51255798 -154.85586548]
[173.73010254 -139.96214294]
[186.95549011 -147.03950500]
[200.79432678 -141.25276184]
[205.04515076 -126.86769104]
[196.57440186 -114.48841858]
[181.62640381 -113.24049377]
[171.22077942 -124.04226685]
[168.44517517 -109.30130768]
[165.77937317 -94.54009247]
[163.11358643 -79.77886963]
[160.44778442 -65.01765442]
[173.98629761 -54.38058472]
[180.30505371 -38.26889420]
[177.57933044 -21.08825493]
[166.47091675 -7.58587933]
[149.97042847 -1.53883910]
[147.74530029 13.29520416]
[145.52018738 28.12924767]
[154.08027649 15.81158638]
[165.21849060 5.76468468]
[178.35054016 -1.48441577]
[192.78753662 -5.55544186]
[207.77214050 -6.23483610]
[222.51829529 -3.48695803]
[236.25244141 2.54404354]
[248.25413513 11.54179478]
[257.89376831 23.03429031]
[264.66567993 36.41865921]
[268.21459961 50.99278259]
[268.35440063 65.99213409]
[265.07772827 80.62986755]
[258.55645752 94.13813019]
[249.13270569 105.80829620]
[237.30081177 115.02818298]
[223.68144226 121.31411743]
[208.98905945 124.33636475]
[193.99440002 123.93637848]
[179.48403931 120.13513947]
[166.21916199 113.13206482]
[154.89562988 103.29450226]
[146.10743713 91.13852692]
[140.31561279 77.30181122]
[137.82395935 62.51020432]
[138.76350403 47.53800583]
[131.29576111 60.54695892]
[123.82801819 73.55591583]
[116.36028290 86.56486511]
[121.03417206 102.39276886]
[112.92465973 116.76647949]
[96.96025848 120.95045471]
[89.68702698 134.06915283]
[82.41379547 147.18785095]
[75.14056396 160.30653381]
[68.06346130 173.53205872]
[61.18404770 186.86149597]
[54.30463791 200.19091797]
[54.66358948 204.51817322]
[53.72161102 208.34925842]
[51.79443741 211.33613586]
[49.27838516 213.26902771]
[46.59830475 214.09080505]
[38.93770599 226.98713684]
[31.27711105 239.88345337]
[23.61651230 252.77978516]
[15.95591545 265.67611694]
[8.29531765 278.57244873]
[0.63472056 291.46875000]
[-6.04547405 304.89913940]
[-11.70826054 318.78915405]
[-17.37104797 332.67919922]
[-23.03383446 346.56921387]
[-28.69662094 360.45925903]
[-34.35940552 374.34927368]
[-31.43129349 392.52914429]
[-45.70322800 402.74084473]
[-51.15858459 416.71365356]
[-56.61394119 430.68643188]
[-44.03059769 438.95404053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 209]
[28 208]
[29 207]
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[37 200]
[48 199]
[49 198]
[50 197]
[51 196]
[52 195]
[53 194]
[54 193]
[55 188]
[56 187]
[57 186]
[60 185]
[61 184]
[62 183]
[63 182]
[67 179]
[68 178]
[69 177]
[70 176]
[71 150]
[72 149]
[73 148]
[80 143]
[81 142]
[82 141]
[83 140]
[85 139]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
