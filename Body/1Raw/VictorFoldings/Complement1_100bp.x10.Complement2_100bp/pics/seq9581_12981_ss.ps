%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[94.27772522 695.56622314]
[79.66719818 692.14538574]
[65.31778717 687.75634766]
[51.29357910 682.41870117]
[37.65720749 676.15618896]
[24.46957588 668.99688721]
[11.78958416 660.97271729]
[-0.32613397 652.11956787]
[-11.82346725 642.47692871]
[-22.65106583 632.08789062]
[-32.76057053 620.99884033]
[-42.10682678 609.25927734]
[-50.64809418 596.92169189]
[-58.34622574 584.04113770]
[-65.16683960 570.67523193]
[-71.07946777 556.88354492]
[-76.05770874 542.72778320]
[-80.07933044 528.27105713]
[-83.12635803 513.57806396]
[-85.18519592 498.71432495]
[-86.24665070 483.74627686]
[-86.30596924 468.74075317]
[-85.36289215 453.76477051]
[-83.42163849 438.88522339]
[-80.49086761 424.16857910]
[-76.58367157 409.68054199]
[-71.71750641 395.48583984]
[-65.91410065 381.64785767]
[-59.19937515 368.22839355]
[-51.60332108 355.28741455]
[-43.15986252 342.88269043]
[-33.90671539 331.06961060]
[-23.88520050 319.90097046]
[-13.14007950 309.42663574]
[-1.71934247 299.69338989]
[10.32600212 290.74472046]
[22.94215584 282.62054443]
[36.07277298 275.35720825]
[49.65920639 268.98712158]
[63.64077377 263.53872681]
[77.95503998 259.03637695]
[92.53805542 255.50016785]
[107.32470703 252.94589233]
[105.76418304 238.02728271]
[104.20365906 223.10868835]
[102.64313507 208.19007874]
[101.08261108 193.27146912]
[99.52209473 178.35287476]
[97.96157074 163.43426514]
[96.40104675 148.51565552]
[94.84052277 133.59706116]
[92.34642792 131.10469055]
[90.93562317 127.28047943]
[91.22092438 122.64669800]
[93.55874634 117.97961426]
[82.79138947 108.28372192]
[81.92896271 93.81989288]
[91.46784973 82.91320038]
[90.57503510 67.93979645]
[89.68222046 52.96639252]
[88.34398651 38.02620697]
[86.56151581 23.13248825]
[84.77905273 8.23877144]
[82.99658203 -6.65494633]
[81.21411896 -21.54866409]
[79.43165588 -36.44237900]
[70.10928345 -49.22534180]
[76.27936554 -62.78186417]
[61.27391815 -62.38044739]
[46.29544449 -63.36528397]
[31.47173500 -65.72797394]
[16.92926788 -69.44835663]
[2.79211330 -74.49469757]
[-10.81910992 -80.82393646]
[-23.78827477 -88.38207245]
[-36.00473022 -97.10462189]
[-47.36424637 -106.91716003]
[-57.76990891 -117.73598480]
[-67.13293457 -129.46878052]
[-75.37344360 -142.01542664]
[-82.42112732 -155.26892090]
[-88.21585083 -169.11614990]
[-92.70819092 -183.43898010]
[-95.85979462 -198.11521912]
[-97.64379883 -213.01965332]
[-98.04496765 -228.02510071]
[-97.05987549 -243.00357056]
[-94.69693756 -257.82723999]
[-90.97631073 -272.36962891]
[-85.92974091 -286.50671387]
[-79.60027313 -300.11782837]
[-72.04192352 -313.08685303]
[-63.31917191 -325.30316162]
[-53.50643921 -336.66253662]
[-42.68744659 -347.06802368]
[-30.95450020 -356.43084717]
[-18.40770340 -364.67114258]
[-5.15410233 -371.71859741]
[8.69322395 -377.51309204]
[23.01613426 -382.00518799]
[37.69242477 -385.15655518]
[52.59688187 -386.94030762]
[67.60234833 -387.34121704]
[82.58078766 -386.35589600]
[97.40441895 -383.99270630]
[111.94676208 -380.27185059]
[126.08374786 -375.22503662]
[139.69476318 -368.89532471]
[152.66368103 -361.33676147]
[164.87983704 -352.61383057]
[176.23902893 -342.80090332]
[186.64433289 -331.98171997]
[196.00697327 -320.24862671]
[204.24705505 -307.70169067]
[211.29429626 -294.44796753]
[217.08856201 -280.60055542]
[221.58041382 -266.27755737]
[224.73153687 -251.60122681]
[226.51504517 -236.69673157]
[226.91571045 -221.69126892]
[225.93013000 -206.71284485]
[223.56669617 -191.88925171]
[219.84558105 -177.34696960]
[214.79853821 -163.21006775]
[208.46862793 -149.59915161]
[200.90983582 -136.63037109]
[192.18667603 -124.41435242]
[182.37356567 -113.05532074]
[171.55422974 -102.65019989]
[159.82096863 -93.28776550]
[147.27389526 -85.04788208]
[134.02006531 -78.00086212]
[120.17253876 -72.20682526]
[105.84947968 -67.71520996]
[91.17308807 -64.56433105]
[100.36795807 -52.84666824]
[94.32537079 -38.22484589]
[96.10783386 -23.33112907]
[97.89030457 -8.43741226]
[99.67276764 6.45630503]
[101.45523071 21.35002327]
[103.23770142 36.24374008]
[105.35548401 38.08035278]
[106.87335968 40.86650467]
[107.42602539 44.37791061]
[106.73603058 48.26229477]
[104.65562439 52.07357407]
[105.54843903 67.04698181]
[106.44125366 82.02038574]
[117.20861053 91.71627808]
[118.07103729 106.18010712]
[108.53215027 117.08679962]
[109.75912476 132.03652954]
[111.31964874 146.95513916]
[112.88017273 161.87373352]
[114.44069672 176.79234314]
[116.00122070 191.71095276]
[117.56174469 206.62956238]
[119.12226105 221.54815674]
[120.68278503 236.46676636]
[122.24330902 251.38537598]
[137.23846436 250.82438660]
[152.23759460 251.26623535]
[167.17372131 252.70892334]
[181.98013306 255.14601135]
[196.59069824 258.56661987]
[210.94017029 262.95550537]
[224.96444702 268.29299927]
[238.60089111 274.55529785]
[251.78862000 281.71444702]
[264.46871948 289.73843384]
[276.58453369 298.59146118]
[288.08200073 308.23394775]
[298.90972900 318.62286377]
[309.01937866 329.71179199]
[318.36578369 341.45123291]
[326.90719604 353.78869629]
[334.60549927 366.66912842]
[341.42626953 380.03500366]
[347.33908081 393.82659912]
[352.31747437 407.98229980]
[356.33929443 422.43896484]
[359.38650513 437.13192749]
[361.44552612 451.99563599]
[362.50717163 466.96368408]
[362.56668091 481.96920776]
[361.62377930 496.94519043]
[359.68270874 511.82476807]
[356.75213623 526.54144287]
[352.84512329 541.02954102]
[347.97912598 555.22430420]
[342.17590332 569.06237793]
[335.46133423 582.48187256]
[327.86544800 595.42297363]
[319.42214966 607.82781982]
[310.16915894 619.64099121]
[300.14779663 630.80975342]
[289.40280151 641.28424072]
[277.98217773 651.01763916]
[265.93695068 659.96643066]
[253.32089233 668.09075928]
[240.19036865 675.35424805]
[226.60401917 681.72454834]
[212.62251282 687.17309570]
[198.30830383 691.67565918]
[183.72532654 695.21203613]
[168.93872070 697.76647949]
[154.01449585 699.32757568]
[139.01934814 699.88836670]
[124.02021027 699.44635010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[55 152]
[58 149]
[59 148]
[60 147]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[66 137]
[68 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
