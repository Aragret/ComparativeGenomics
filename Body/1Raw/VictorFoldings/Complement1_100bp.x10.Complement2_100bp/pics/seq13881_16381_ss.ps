%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[134.44422913 428.47610474]
[135.75367737 443.44378662]
[134.96720886 458.44802856]
[132.10014343 473.19680786]
[127.20826721 487.40298462]
[120.38681030 500.79006958]
[111.76855469 513.09747314]
[101.52126312 524.08557129]
[89.84439087 533.54058838]
[76.96524048 541.27838135]
[63.13450241 547.14837646]
[48.62139893 551.03631592]
[33.70843124 552.86645508]
[18.68588829 552.60327148]
[3.84618211 550.25183105]
[-10.52182484 545.85791016]
[-24.13845444 539.50708008]
[-36.73865509 531.32287598]
[-48.07716370 521.46466064]
[-57.93326950 510.12429810]
[-66.11511993 497.52258301]
[-72.46345520 483.90478516]
[-76.85469818 469.53594971]
[-79.20338440 454.69580078]
[-79.46378326 439.67321777]
[-77.63082886 424.76058960]
[-73.74019623 410.24819946]
[-67.86763000 396.41857910]
[-60.12743759 383.54086304]
[-50.67027664 371.86575317]
[-39.68023682 361.62048340]
[-27.37124443 353.00451660]
[-13.98289680 346.18554688]
[0.22419766 341.29632568]
[14.97349453 338.43200684]
[29.97789383 337.64831543]
[44.94533157 338.96057129]
[59.58445740 342.34317017]
[73.61032104 347.73031616]
[80.88355255 334.61160278]
[88.15678406 321.49291992]
[95.43001556 308.37423706]
[102.70323944 295.25552368]
[109.97647095 282.13684082]
[114.16348267 267.73306274]
[115.05629730 252.75964355]
[115.94911194 237.78623962]
[116.84192657 222.81283569]
[117.73474884 207.83943176]
[116.28532410 192.90962219]
[112.52902985 178.38757324]
[108.77272797 163.86550903]
[105.01642609 149.34344482]
[101.26012421 134.82138062]
[90.58219147 124.43721771]
[94.61711884 109.13918304]
[90.21612549 94.79933167]
[78.29406738 84.39860535]
[81.30835724 69.81219482]
[76.16639709 55.72105789]
[70.91967773 41.66858673]
[54.58577728 39.10039520]
[41.84880066 28.70496368]
[36.12525558 13.39294434]
[38.88860703 -2.62328911]
[49.29131699 -14.98840427]
[43.83596039 -28.96120262]
[38.38060379 -42.93400192]
[32.92524719 -56.90679932]
[27.46988869 -70.87959290]
[22.01453209 -84.85239410]
[16.55917549 -98.82519531]
[11.10381794 -112.79798889]
[5.64846087 -126.77079010]
[-9.05039406 -123.61803436]
[-24.06464577 -122.86411285]
[-39.00539017 -124.52854156]
[-53.48562622 -128.56820679]
[-67.13027954 -134.87849426]
[-79.58592224 -143.29591370]
[-90.52992249 -153.60247803]
[-99.67880249 -165.53118896]
[-106.79559326 -178.77307129]
[-111.69593811 -192.98513794]
[-114.25291443 -207.79924011]
[-114.40029144 -222.83169556]
[-112.13425446 -237.69309998]
[-107.51348877 -251.99850464]
[-100.65769196 -265.37738037]
[-91.74444580 -277.48315430]
[-81.00462341 -288.00231934]
[-68.71640778 -296.66232300]
[-55.19809341 -303.23892212]
[-40.79984283 -307.56170654]
[-25.89460373 -309.51873779]
[-10.86845684 -309.05932617]
[3.88938546 -306.19537354]
[17.99665833 -301.00103760]
[31.08795166 -293.61090088]
[42.82416534 -284.21636963]
[52.90130615 -273.06076050]
[61.05835342 -260.43307495]
[67.08401489 -246.66035461]
[70.82221985 -232.09938049]
[72.17612457 -217.12730408]
[71.11067963 -202.13194275]
[67.65346527 -187.50169373]
[61.89404297 -173.61553955]
[53.98159027 -160.83316040]
[44.12106323 -149.48564148]
[32.56786728 -139.86692810]
[19.62125969 -132.22615051]
[25.07661629 -118.25334930]
[30.53197289 -104.28054810]
[35.98733139 -90.30775452]
[41.44268799 -76.33495331]
[46.89804459 -62.36215591]
[52.35340118 -48.38935852]
[57.80875778 -34.41656113]
[63.26411438 -20.44376183]
[76.87146759 -19.27879906]
[88.70619202 -12.33128262]
[96.42984772 -0.90787679]
[98.48792267 12.79404259]
[94.42240143 26.10898399]
[84.97214508 36.42186737]
[90.21886444 50.47433853]
[95.50341797 55.64109039]
[95.43738556 64.77528381]
[106.99916840 74.16540527]
[104.34515381 89.76242065]
[111.73604584 76.70965576]
[126.15447998 72.57337952]
[139.34092712 79.72305298]
[143.74157715 94.06300354]
[136.83555603 107.37866211]
[122.57892609 112.04221344]
[109.13918304 105.38288116]
[120.08579254 116.80576324]
[115.78218079 131.06509399]
[119.53848267 145.58714294]
[123.29478455 160.10920715]
[127.05108643 174.63127136]
[130.80738831 189.15332031]
[134.00862122 174.49890137]
[140.99603271 161.22576904]
[151.26515198 150.29209900]
[164.07469177 142.48722839]
[178.49987793 138.37460327]
[193.49937439 138.25108337]
[207.99034119 142.12562561]
[220.92665100 149.71849060]
[231.37445068 160.48155212]
[238.57948303 173.63783264]
[242.02160645 188.23754883]
[241.45234680 203.22674561]
[236.91279602 217.52333069]
[228.73065186 230.09523010]
[217.49661255 240.03486633]
[204.02166748 246.62467957]
[189.27856445 249.38896179]
[174.33164978 248.12814331]
[160.25993347 242.93324280]
[148.07928467 234.17929077]
[138.66900635 222.49824524]
[132.70814514 208.73225403]
[131.81533813 223.70565796]
[130.92251587 238.67906189]
[130.02970886 253.65246582]
[129.13688660 268.62588501]
[136.58590698 255.60618591]
[146.40129089 244.26342773]
[158.21609497 235.02165222]
[171.58860779 228.22637939]
[186.01890564 224.13163757]
[200.96746826 222.89051819]
[215.87545776 224.54942322]
[230.18551636 229.04634094]
[243.36265564 236.21313477]
[254.91423035 245.78189087]
[264.40838623 257.39483643]
[271.49020386 270.61785889]
[275.89486694 284.95657349]
[277.45773315 299.87493896]
[276.12039185 314.81521606]
[271.93283081 329.21881104]
[265.05157471 342.54730225]
[255.73390198 354.30233765]
[244.32818604 364.04449463]
[231.26080322 371.40951538]
[217.02029419 376.12207031]
[202.13906860 378.00598145]
[187.17346191 376.99081421]
[172.68298340 373.11453247]
[159.20933533 366.52200317]
[147.25628662 357.45974731]
[137.27067566 346.26657104]
[129.62583923 333.36090088]
[124.60758209 319.22521973]
[122.40351105 304.38803101]
[123.09516907 289.41006470]
[115.82193756 302.52874756]
[108.54870605 315.64746094]
[101.27547455 328.76614380]
[94.00225067 341.88485718]
[86.72901917 355.00354004]
[98.72864532 364.04537964]
[109.35306549 374.66931152]
[118.39545441 386.66854858]
[125.67980957 399.80947876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 206]
[40 205]
[41 204]
[42 203]
[43 202]
[44 201]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 144]
[51 143]
[52 142]
[53 141]
[54 140]
[56 138]
[57 131]
[59 129]
[60 127]
[61 126]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
