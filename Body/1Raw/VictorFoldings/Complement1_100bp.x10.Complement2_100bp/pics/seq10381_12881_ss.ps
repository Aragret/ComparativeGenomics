%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[74.56761169 632.28509521]
[75.64798737 617.16528320]
[81.83732605 603.32806396]
[92.38822174 592.44439697]
[106.02661896 585.82855225]
[104.46609497 570.90991211]
[102.90557098 555.99133301]
[101.34504700 541.07269287]
[92.32565308 529.21948242]
[98.58526611 514.68920898]
[97.02474976 499.77059937]
[95.46422577 484.85202026]
[93.90370178 469.93341064]
[92.34317780 455.01480103]
[84.30040741 467.67630005]
[70.73415375 474.07604980]
[55.84806061 472.23098755]
[44.25474930 462.71286011]
[39.54653168 448.47091675]
[43.18230438 433.91821289]
[54.03547668 423.56405640]
[68.74308014 420.61679077]
[82.74780273 425.98965454]
[91.71022034 438.01806641]
[92.15682983 423.02471924]
[92.60343170 408.03137207]
[82.23448944 397.40023804]
[82.47383118 382.18847656]
[93.69502258 371.38467407]
[94.14163208 356.39132690]
[83.77268982 345.76019287]
[84.01202393 330.54846191]
[95.23322296 319.74462891]
[95.67983246 304.75128174]
[96.12643433 289.75793457]
[96.57304382 274.76458740]
[97.01964569 259.77124023]
[97.46625519 244.77789307]
[95.64434814 242.64744568]
[94.55656433 239.66694641]
[94.53089905 236.11241150]
[95.78947449 232.37335205]
[98.41223145 228.91285706]
[99.75046539 213.97267151]
[93.17949677 200.60586548]
[102.11713409 187.55101013]
[103.45536804 172.61082458]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[77.71810150 62.35702896]
[83.07034302 48.45729065]
[80.40454865 33.69607162]
[71.92404938 46.06866837]
[57.50892639 50.21646881]
[43.74958420 44.24316025]
[36.93660355 30.87965393]
[40.18479156 16.23556709]
[52.00911713 7.00597811]
[67.00366211 7.41053200]
[78.31401825 17.26589012]
[66.62159729 6.97390079]
[65.70326233 -8.21199131]
[75.58715820 -19.29550171]
[74.47150421 -34.25395584]
[65.72922516 -47.44042969]
[72.49848938 -60.70792389]
[71.38283539 -75.66637421]
[70.26718903 -90.62483215]
[69.15154266 -105.58328247]
[68.03588867 -120.54174042]
[66.80891418 -135.49147034]
[65.47068024 -150.43165588]
[64.13244629 -165.37184143]
[62.79421616 -180.31202698]
[61.45597839 -195.25221252]
[49.98147202 -185.59117126]
[35.24467850 -188.38883972]
[28.10901451 -201.58285522]
[33.83462906 -215.44711304]
[48.20080948 -219.76136780]
[60.61650467 -211.34675598]
[52.67459869 -225.03019714]
[60.22154999 -237.87126160]
[59.99822235 -252.86959839]
[52.05631638 -266.55303955]
[59.60327148 -279.39410400]
[59.37994003 -294.39242554]
[44.66467285 -297.64169312]
[31.09564781 -304.19744873]
[19.40462494 -313.70623779]
[10.22208595 -325.65518188]
[4.04323530 -339.39996338]
[1.20128965 -354.19927979]
[1.84951210 -369.25506592]
[5.95294428 -383.75537109]
[13.29029369 -396.91818237]
[23.46586609 -408.03369141]
[35.93090439 -416.50244141]
[50.01318741 -421.86770630]
[64.95327759 -423.84014893]
[79.94546509 -422.31338501]
[94.18125153 -417.36978149]
[106.89290619 -409.27593994]
[117.39492035 -398.46832275]
[125.12092590 -385.52978516]
[129.65426636 -371.15811157]
[130.75047302 -356.12829590]
[128.35041809 -341.25091553]
[122.58353424 -327.32827759]
[113.76083374 -315.11120605]
[102.35810089 -305.25857544]
[88.99028015 -298.30169678]
[74.37828064 -294.61575317]
[74.60160828 -279.61743164]
[82.52754211 -267.00677490]
[74.99655914 -253.09292603]
[75.21988678 -238.09458923]
[83.14582062 -225.48391724]
[75.61484528 -211.57008362]
[76.39616394 -196.59043884]
[77.73439789 -181.65025330]
[79.07263184 -166.71008301]
[80.41086578 -151.76989746]
[81.74909973 -136.82971191]
[85.47681427 -130.44801331]
[82.99434662 -121.65738678]
[84.10999298 -106.69893646]
[85.22564697 -91.74047852]
[86.34129333 -76.78202820]
[87.45693970 -61.82357407]
[96.11942291 -49.70702744]
[89.42996216 -35.36960220]
[90.54560852 -20.41114998]
[101.96429443 -10.91645336]
[103.30880737 4.23765326]
[93.27247620 16.15024185]
[95.16576385 31.03027534]
[97.83155823 45.79149246]
[107.70758057 56.94108963]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[122.08262634 140.66221619]
[130.76351929 128.42938232]
[142.76206970 119.42745972]
[156.93466187 114.51443481]
[171.93043518 114.15859222]
[186.32009888 118.39385223]
[198.73213196 126.81653595]
[207.98348999 138.62384033]
[213.19238281 152.69038391]
[213.86233521 167.67541504]
[209.92950439 182.15065002]
[201.76873779 194.73643494]
[190.15786743 204.23315430]
[176.20355225 209.73562622]
[161.23585510 210.71942139]
[146.68138123 207.09074402]
[133.92736816 199.19546509]
[124.18946838 187.78611755]
[118.39555359 173.94905090]
[117.05731964 188.88923645]
[123.53256989 203.32467651]
[114.69065094 215.31089783]
[113.35241699 230.25108337]
[112.45960236 245.22448730]
[112.01300049 260.21783447]
[111.56639099 275.21118164]
[111.11978912 290.20452881]
[110.67317963 305.19790649]
[110.22657776 320.19125366]
[120.78482056 331.64379883]
[120.11831665 346.84283447]
[109.13497925 356.83792114]
[108.68837738 371.83126831]
[119.24662781 383.28384399]
[118.58011627 398.48287964]
[107.59678650 408.47796631]
[107.15017700 423.47131348]
[106.70357513 438.46466064]
[107.26177979 453.45428467]
[108.82230377 468.37286377]
[110.38282776 483.29147339]
[111.94335175 498.21008301]
[113.50387573 513.12872314]
[122.63488770 526.04901123]
[116.26365662 539.51220703]
[117.82418060 554.43078613]
[119.38469696 569.34942627]
[120.94522095 584.26800537]
[135.65748596 587.91833496]
[148.23226929 596.38299561]
[157.15110779 608.63983154]
[161.33700562 623.20880127]
[160.28450012 638.33056641]
[154.12066650 652.17913818]
[143.58984375 663.08221436]
[129.96366882 669.72326660]
[114.88755798 671.30023193]
[100.18204498 667.62280273]
[87.62287903 659.13500977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 199]
[6 198]
[7 197]
[8 196]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[24 189]
[25 188]
[26 187]
[29 184]
[30 183]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[43 174]
[44 173]
[46 171]
[47 170]
[48 151]
[49 150]
[50 149]
[51 148]
[53 146]
[54 145]
[56 143]
[57 142]
[65 141]
[68 138]
[69 137]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[86 124]
[88 122]
[89 121]
[91 119]
[92 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
