%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[62.94372559 404.39138794]
[68.55274963 390.39843750]
[77.34808350 378.15484619]
[88.81838226 368.37243652]
[102.29677582 361.61993408]
[98.97451782 346.99246216]
[95.65225983 332.36499023]
[85.28823853 321.66751099]
[89.77685547 306.49639893]
[86.45459747 291.86892700]
[82.28430176 306.27755737]
[73.49343872 318.43161011]
[61.11475754 326.90322876]
[46.60248947 330.69717407]
[31.66151810 329.36773682]
[18.04709625 323.07110596]
[7.35863400 312.54699707]
[0.85179907 299.03179932]
[-0.70899111 284.11322021]
[2.85962343 269.54388428]
[11.13840485 257.03543091]
[23.15477180 248.05728149]
[37.49705124 243.66423035]
[52.48032761 244.37232971]
[66.34438324 250.09840393]
[77.46047974 260.16976929]
[84.52319336 273.40475464]
[84.74652100 258.40640259]
[84.96984863 243.40806580]
[82.78959656 240.63699341]
[81.84322357 236.67222595]
[82.67714691 232.10517883]
[85.55299377 227.74897766]
[86.44580841 212.77555847]
[87.33862305 197.80215454]
[88.23144531 182.82875061]
[89.12425995 167.85534668]
[90.01707458 152.88194275]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[78.02688599 82.28571320]
[72.73764038 65.10713959]
[78.76585388 48.34075546]
[93.52016449 38.63602066]
[93.52016449 23.63602066]
[93.52016449 8.63602066]
[86.75116730 22.02185822]
[76.66254425 33.12229538]
[63.98260498 41.13598251]
[49.62672806 45.48440170]
[34.63127518 45.85364151]
[20.07877731 42.21704483]
[7.01979542 34.83713913]
[-3.60293126 24.24668694]
[-11.02254009 11.21022224]
[-14.70340252 -3.33114147]
[-14.37979412 -18.32765007]
[-10.07507610 -32.69669342]
[-2.10001063 -45.40095901]
[8.96967602 -55.52331161]
[22.33485413 -62.33301163]
[37.03067780 -65.33846283]
[51.99624634 -64.32269287]
[66.15117645 -59.35904312]
[78.47362518 -50.80583191]
[88.07400513 -39.28052902]
[94.25926971 -25.61515236]
[96.58292389 -10.79505634]
[101.19692993 -25.06779099]
[105.81093597 -39.34052277]
[110.42494965 -53.61325836]
[115.03895569 -67.88599396]
[119.65296936 -82.15872192]
[124.26697540 -96.43145752]
[111.43428802 -109.70357513]
[107.13522339 -127.56999969]
[112.47596741 -145.06417847]
[125.89527130 -157.36804199]
[143.61956787 -161.13896179]
[147.59165955 -175.60348511]
[151.56375122 -190.06800842]
[147.75703430 -205.42442322]
[158.58839417 -215.64845276]
[162.56048584 -230.11297607]
[148.59606934 -235.63043213]
[135.31007385 -242.62538147]
[122.85825348 -251.01582336]
[111.38661194 -260.70336914]
[101.02964783 -271.57446289]
[91.90879822 -283.50164795]
[84.13098145 -296.34503174]
[77.78740692 -309.95407104]
[72.95243835 -324.16921997]
[69.68276215 -338.82379150]
[68.01672363 -353.74597168]
[67.97385406 -368.76083374]
[69.55464935 -383.69226074]
[72.74057770 -398.36529541]
[77.49429321 -412.60781860]
[83.76004791 -426.25286865]
[91.46439362 -439.14047241]
[100.51699066 -451.11950684]
[110.81170654 -462.04956055]
[122.22783661 -471.80249023]
[134.63153076 -480.26388550]
[147.87738037 -487.33459473]
[161.81005859 -492.93170166]
[176.26622009 -496.98959351]
[191.07638550 -499.46066284]
[206.06690979 -500.31597900]
[221.06202698 -499.54547119]
[235.88594055 -497.15823364]
[250.36482239 -493.18218994]
[264.32894897 -487.66397095]
[277.61456299 -480.66830444]
[290.06594849 -472.27719116]
[301.53704834 -462.58901978]
[311.89343262 -451.71737671]
[321.01364136 -439.78973389]
[328.79077148 -426.94592285]
[335.13360596 -413.33651733]
[339.96783447 -399.12112427]
[343.23669434 -384.46636963]
[344.90194702 -369.54409790]
[344.94400024 -354.52926636]
[343.36239624 -339.59786987]
[340.17568970 -324.92504883]
[335.42120361 -310.68276978]
[329.15472412 -297.03805542]
[321.44967651 -284.15087891]
[312.39642334 -272.17230225]
[302.10113525 -261.24279785]
[290.68447876 -251.49050903]
[278.28033447 -243.02976990]
[265.03411865 -235.95977783]
[251.10112000 -230.36341858]
[236.64472961 -226.30630493]
[221.83444214 -223.83602905]
[206.84387207 -222.98152161]
[191.84880066 -223.75282288]
[177.02500916 -226.14088440]
[173.05291748 -211.67636108]
[177.14375305 -197.35455322]
[166.02828979 -186.09590149]
[162.05618286 -171.63137817]
[158.08409119 -157.16685486]
[167.44805908 -150.02543640]
[173.87438965 -140.11570740]
[176.59075928 -128.58573914]
[175.25628662 -116.78068542]
[170.00408936 -106.08592224]
[161.42842102 -97.76442719]
[150.51751709 -92.80765533]
[138.53970337 -91.81745148]
[133.92570496 -77.54471588]
[129.31169128 -63.27198029]
[124.69768524 -48.99924850]
[120.08367157 -34.72651291]
[115.46966553 -20.45378113]
[110.85565186 -6.18104744]
[108.52016449 8.63602066]
[108.52016449 23.63602066]
[108.52016449 38.63602066]
[119.29084778 44.23670578]
[126.70207977 53.94271469]
[129.29861450 65.94934082]
[126.52774048 77.99100494]
[118.85547638 87.76877594]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[108.52653503 147.28491211]
[104.99047852 153.77476501]
[104.09766388 168.74816895]
[103.20484924 183.72157288]
[102.31203461 198.69497681]
[101.41921234 213.66838074]
[100.52639771 228.64178467]
[99.96818542 243.63139343]
[99.74485779 258.62973022]
[99.52153015 273.62808228]
[101.08205414 288.54666138]
[104.40431213 303.17413330]
[115.00596619 314.91787720]
[110.27971649 329.04275513]
[113.60198212 343.67019653]
[116.92424011 358.29766846]
[131.99711609 358.56546021]
[146.56773376 362.43334961]
[159.78898621 369.67642212]
[170.89218140 379.87359619]
[179.23181152 392.43203735]
[184.32301331 406.62155151]
[185.86981201 421.61724854]
[183.78224182 436.54727173]
[178.18170166 450.54360962]
[169.39379883 462.79254150]
[157.92942810 472.58190918]
[144.45513916 479.34259033]
[129.75428772 482.68151855]
[114.68156433 482.40457153]
[100.11329651 478.52786255]
[86.89644623 471.27676392]
[75.79943085 461.07284546]
[67.46741486 448.50936890]
[62.38481140 434.31677246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[9 187]
[10 186]
[27 185]
[28 184]
[29 183]
[33 182]
[34 181]
[35 180]
[36 179]
[37 178]
[38 177]
[39 175]
[40 174]
[41 173]
[42 171]
[46 165]
[47 164]
[48 163]
[70 162]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[81 148]
[82 147]
[83 146]
[85 144]
[86 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
