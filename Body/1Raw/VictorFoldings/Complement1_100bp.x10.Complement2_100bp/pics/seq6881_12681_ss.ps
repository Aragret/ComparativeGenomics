%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[86.40391541 324.86145020]
[84.03224182 339.69158936]
[79.89024353 354.12768555]
[74.03833008 367.95925903]
[66.56183624 380.98458862]
[57.56978226 393.01376343]
[47.19330978 403.87127686]
[35.58373260 413.39889526]
[22.91035461 421.45761108]
[9.35799122 427.92990112]
[-4.87572479 432.72143555]
[-19.58322334 435.76229858]
[-34.55002594 437.00814819]
[-49.55787659 436.44082642]
[-64.38790894 434.06860352]
[-78.82386017 429.92605591]
[-92.65522003 424.07363892]
[-105.68027496 416.59664917]
[-117.70908356 407.60412598]
[-128.56623840 397.22726440]
[-138.09339905 385.61734009]
[-146.15164185 372.94366455]
[-152.62344360 359.39105225]
[-157.41442871 345.15713501]
[-160.45474243 330.44952393]
[-161.70002747 315.48269653]
[-161.13214111 300.47485352]
[-158.75936890 285.64492798]
[-154.61628723 271.20910645]
[-148.76335144 257.37799072]
[-141.28587341 244.35321045]
[-132.29292297 232.32472229]
[-121.91563416 221.46797180]
[-110.30535126 211.94123840]
[-97.63137054 203.88346863]
[-84.07852173 197.41217041]
[-69.84444427 192.62171936]
[-55.13671875 189.58195496]
[-40.16982269 188.33721924]
[-25.16201591 188.90567017]
[-10.33216000 191.27900696]
[4.10348415 195.42262268]
[17.93440247 201.27609253]
[25.40214348 188.26713562]
[32.86988449 175.25817871]
[40.33762360 162.24922180]
[47.80536652 149.24028015]
[34.63256454 156.41503906]
[19.68708992 157.69285583]
[5.48751879 152.85838318]
[-5.57327223 142.72630310]
[-11.63134575 129.00407410]
[-11.66580868 114.00410461]
[-5.67085552 100.25418091]
[5.34326077 90.07138824]
[19.52046585 85.17171478]
[34.47165298 86.38082886]
[47.67728806 93.49499512]
[56.91198349 105.31533051]
[60.61953354 119.84991455]
[58.17454910 134.65095520]
[68.00513458 123.32135773]
[68.12200165 119.79734039]
[69.95156860 116.15485382]
[73.53092957 113.19824982]
[78.53652954 111.71804047]
[88.86319733 100.83869934]
[99.10858917 89.88278961]
[109.27213287 78.85091400]
[119.43568420 67.81903839]
[128.39637756 55.78966141]
[136.05697632 42.89333344]
[143.71757507 29.99700737]
[151.37817383 17.10067940]
[159.03877258 4.20435333]
[145.88929749 11.42179108]
[130.98735046 13.13411713]
[116.54354858 9.08731937]
[104.70053864 -0.11828572]
[97.21517181 -13.11709976]
[95.19783783 -27.98082733]
[98.94781494 -42.50452042]
[107.90880585 -54.53367996]
[120.75150299 -62.28384781]
[135.57077026 -64.60533142]
[150.16825867 -61.15375900]
[162.37850952 -52.44114304]
[170.39021301 -39.75995255]
[173.01489258 -24.99136734]
[169.86390686 -10.32797337]
[180.02746582 -21.35985184]
[190.19100952 -32.39172745]
[192.00946045 -38.74820328]
[196.14434814 -42.64687347]
[200.82518005 -43.59501648]
[211.31266785 -54.31939697]
[221.80017090 -65.04377747]
[232.28767395 -75.76815796]
[242.77517700 -86.49253845]
[233.08843994 -97.96039581]
[224.53567505 -110.29712677]
[217.19432068 -123.39099884]
[211.13088989 -137.12341309]
[206.40026855 -151.37002563]
[203.04530334 -166.00181580]
[201.09640503 -180.88624573]
[200.57119751 -195.88854980]
[201.47444153 -210.87283325]
[203.79795837 -225.70341492]
[207.52070618 -240.24597168]
[212.60896301 -254.36880493]
[219.01666260 -267.94400024]
[226.68577576 -280.84863281]
[235.54682922 -292.96582031]
[245.51957703 -304.18585205]
[256.51373291 -314.40707397]
[268.42968750 -323.53695679]
[281.15954590 -331.49279785]
[294.58801270 -338.20254517]
[308.59350586 -343.60543823]
[323.04916382 -347.65255737]
[337.82403564 -350.30722046]
[352.78439331 -351.54541016]
[367.79467773 -351.35589600]
[382.71896362 -349.74041748]
[397.42214966 -346.71359253]
[411.77099609 -342.30282593]
[425.63562012 -336.54809570]
[438.89044189 -329.50146484]
[451.41537476 -321.22677612]
[463.09704590 -311.79898071]
[473.82965088 -301.30343628]
[483.51596069 -289.83523560]
[492.06826782 -277.49819946]
[499.40914917 -264.40405273]
[505.47207642 -250.67140198]
[510.20217896 -236.42462158]
[513.55657959 -221.79272461]
[515.50500488 -206.90820312]
[516.02966309 -191.90589905]
[515.12585449 -176.92163086]
[512.80181885 -162.09114075]
[509.07852173 -147.54872131]
[503.98974609 -133.42608643]
[497.58154297 -119.85111237]
[489.91195679 -106.94675446]
[481.05047607 -94.82988739]
[471.07730103 -83.61022949]
[460.08279419 -73.38939667]
[448.16650391 -64.25994873]
[435.43634033 -56.30457687]
[422.00762939 -49.59531403]
[408.00195312 -44.19293213]
[393.54614258 -40.14635086]
[378.77114868 -37.49222183]
[363.81079102 -36.25457764]
[348.80050659 -36.44462967]
[333.87625122 -38.06065750]
[319.17318726 -41.08802032]
[304.82449341 -45.49930573]
[290.96008301 -51.25456619]
[277.70553589 -58.30167389]
[265.18087769 -66.57681274]
[253.49955750 -76.00503540]
[243.01205444 -65.28065491]
[232.52455139 -54.55627441]
[222.03704834 -43.83189392]
[211.54956055 -33.10751724]
[201.22288513 -22.22818184]
[191.05934143 -11.19630432]
[180.89579773 -0.16442682]
[171.93508911 11.86495113]
[164.27449036 24.76127815]
[156.61390686 37.65760422]
[148.95330811 50.55393219]
[141.29270935 63.45026016]
[154.44216919 56.23282242]
[169.34411621 54.52049255]
[183.78791809 58.56729126]
[195.63093567 67.77289581]
[203.11630249 80.77171326]
[205.13363647 95.63543701]
[201.38366699 110.15913391]
[192.42266846 122.18829346]
[179.57997131 129.93846130]
[164.76069641 132.25994873]
[150.16322327 128.80836487]
[137.95295715 120.09575653]
[129.94125366 107.41456604]
[127.31658936 92.64598083]
[130.46755981 77.98258209]
[120.30401611 89.01446533]
[110.14046478 100.04634094]
[107.42906189 107.63717651]
[99.74253082 111.16537476]
[89.41586304 122.04470825]
[79.33472443 133.15193176]
[69.50414276 144.48153687]
[60.81431961 156.70802307]
[53.34657669 169.71696472]
[45.87883759 182.72592163]
[38.41109467 195.73487854]
[30.94335365 208.74382019]
[42.97283554 217.73542786]
[53.83076477 228.11149597]
[63.35879517 239.72071838]
[71.41798401 252.39379883]
[77.89080048 265.94592285]
[82.68285370 280.17944336]
[85.72426605 294.88684082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 203]
[44 202]
[45 201]
[46 200]
[47 199]
[61 198]
[62 197]
[66 196]
[67 195]
[68 193]
[69 192]
[70 191]
[71 176]
[72 175]
[73 174]
[74 173]
[75 172]
[90 171]
[91 170]
[92 169]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
