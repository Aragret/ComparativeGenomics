%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[137.93960571 214.99220276]
[142.56875610 200.71424866]
[148.42469788 186.89405823]
[155.46287537 173.63687134]
[163.62973022 161.04353333]
[151.80345154 151.81643677]
[139.97718811 142.58934021]
[128.15090942 133.36224365]
[116.32464600 124.13513947]
[115.54361725 139.11479187]
[103.43460846 147.96759033]
[88.92392731 144.16757202]
[82.70831299 130.51597595]
[89.36967468 117.07624054]
[103.99590302 113.75529480]
[90.37322235 110.60662842]
[85.92295837 97.35193634]
[74.81571960 87.27079773]
[63.70848846 77.18965912]
[52.60125351 67.10852051]
[41.49402237 57.02738190]
[26.07518578 53.48195267]
[21.85091972 39.19892883]
[6.43208361 35.65349579]
[2.20781803 21.37047005]
[-8.89941597 11.28933144]
[-20.00664902 1.20819306]
[-31.11388397 -8.87294579]
[-41.87602234 1.58295190]
[-53.27346039 11.34245396]
[-65.26121521 20.36704445]
[-77.79197693 28.62110710]
[-90.81628418 36.07206726]
[-104.28274536 42.69051743]
[-118.13821411 48.45034027]
[-132.32800293 53.32880020]
[-146.79611206 57.30664825]
[-161.48544312 60.36818314]
[-176.33802795 62.50132370]
[-191.29524231 63.69765091]
[-206.29806519 63.95244217]
[-221.28727722 63.26469421]
[-236.20372009 61.63711548]
[-250.98854065 59.07613754]
[-265.58337402 55.59186172]
[-279.93063354 51.19804382]
[-293.97369385 45.91201782]
[-307.65713501 39.75465012]
[-320.92694092 32.75024033]
[-333.73074341 24.92643166]
[-346.01800537 16.31410217]
[-357.74026489 6.94723892]
[-368.85125732 -3.13719010]
[-379.30709839 -13.89938545]
[-389.06652832 -25.29687500]
[-398.09106445 -37.28467560]
[-406.34506226 -49.81547546]
[-413.79595947 -62.83982849]
[-420.41433716 -76.30632019]
[-426.17407227 -90.16181946]
[-431.05245972 -104.35163116]
[-435.03024292 -118.81976318]
[-438.09170532 -133.50910950]
[-440.22476196 -148.36170959]
[-441.42102051 -163.31892395]
[-441.67572021 -178.32174683]
[-440.98788452 -193.31095886]
[-439.36022949 -208.22740173]
[-436.79919434 -223.01220703]
[-433.31481934 -237.60702515]
[-428.92092896 -251.95425415]
[-423.63482666 -265.99728394]
[-417.47741699 -279.68069458]
[-410.47293091 -292.95043945]
[-402.64904785 -305.75421143]
[-394.03665161 -318.04144287]
[-384.66973877 -329.76367188]
[-374.58523560 -340.87457275]
[-363.82299805 -351.33038330]
[-352.42544556 -361.08975220]
[-340.43759155 -370.11422729]
[-327.90676880 -378.36816406]
[-314.88238525 -385.81896973]
[-301.41583252 -392.43728638]
[-287.56030273 -398.19696045]
[-273.37048340 -403.07528687]
[-258.90231323 -407.05297852]
[-244.21296692 -410.11434937]
[-229.36035156 -412.24734497]
[-214.40312195 -413.44351196]
[-199.40031433 -413.69815063]
[-184.41110229 -413.01025391]
[-169.49467468 -411.38250732]
[-154.70988464 -408.82138062]
[-140.11508179 -405.33694458]
[-125.76786041 -400.94299316]
[-111.72486115 -395.65679932]
[-98.04149628 -389.49929810]
[-84.77176666 -382.49475098]
[-71.96804047 -374.67080688]
[-59.68084717 -366.05834961]
[-47.95868683 -356.69137573]
[-36.84781647 -346.60681152]
[-26.39208794 -335.84451294]
[-16.63276291 -324.44692993]
[-7.60836029 -312.45901489]
[0.64550626 -299.92813110]
[8.09626198 -286.90371704]
[14.71450233 -273.43713379]
[20.47410774 -259.58160400]
[25.35234642 -245.39172363]
[29.32996750 -230.92355347]
[32.39127350 -216.23417664]
[34.52418137 -201.38156128]
[35.72027206 -186.42433167]
[35.97483063 -171.42150879]
[35.28684616 -156.43229675]
[33.65903473 -141.51588440]
[31.09782600 -126.73110199]
[27.61332321 -112.13631439]
[23.21927834 -97.78912354]
[17.93303299 -83.74615479]
[11.77545166 -70.06282043]
[4.77083445 -56.79312134]
[-3.05317473 -43.98943710]
[-11.66569710 -31.70229149]
[-21.03274345 -19.98017883]
[-9.92551041 -9.89904022]
[1.18172312 0.18209815]
[12.28895664 10.26323700]
[26.91332817 13.08759594]
[31.93205833 28.09169388]
[46.55643082 30.91605377]
[51.57516098 45.92015076]
[62.68239212 56.00128937]
[73.78962708 66.08242798]
[84.89685822 76.16356659]
[96.00409698 86.24470520]
[109.62677765 89.39337158]
[114.07704163 102.64806366]
[125.55174255 112.30886841]
[137.37802124 121.53597260]
[149.20428467 130.76306152]
[161.03054810 139.99017334]
[172.85682678 149.21726990]
[183.08581543 138.23286438]
[194.23323059 128.18177795]
[206.21424866 119.14050293]
[218.93768311 111.17786407]
[232.30670166 104.35446167]
[246.21954346 98.72221375]
[260.57031250 94.32399750]
[275.24984741 91.19328308]
[290.14636230 89.35389709]
[305.14648438 88.81983948]
[320.13607788 89.59516907]
[335.00106812 91.67399597]
[349.62832642 95.04048920]
[363.90646362 99.66903687]
[377.72689819 105.52439880]
[390.98440552 112.56201935]
[403.57806396 120.72834015]
[415.41207886 129.96119690]
[426.39633179 140.19033813]
[436.44726562 151.33790588]
[445.48837280 163.31906128]
[453.45083618 176.04260254]
[460.27404785 189.41171265]
[465.90609741 203.32463074]
[470.30410767 217.67547607]
[473.43460083 232.35502625]
[475.27380371 247.25157166]
[475.80764771 262.25170898]
[475.03210449 277.24130249]
[472.95306396 292.10626221]
[469.58636475 306.73345947]
[464.95761108 321.01156616]
[459.10205078 334.83187866]
[452.06427002 348.08929443]
[443.89776611 360.68286133]
[434.66473389 372.51672363]
[424.43542480 383.50085449]
[413.28771973 393.55160522]
[401.30645752 402.59255981]
[388.58279419 410.55484009]
[375.21359253 417.37786865]
[361.30059814 423.00970459]
[346.94967651 427.40753174]
[332.27008057 430.53784180]
[317.37353516 432.37680054]
[302.37338257 432.91043091]
[287.38378906 432.13467407]
[272.51885986 430.05545044]
[257.89172363 426.68853760]
[243.61369324 422.05960083]
[229.79342651 416.20382690]
[216.53613281 409.16586304]
[203.94268799 400.99917603]
[192.10894775 391.76599121]
[181.12496948 381.53652954]
[171.07435608 370.38867188]
[162.03358459 358.40728760]
[154.07148743 345.68350220]
[147.24864197 332.31420898]
[141.61698914 318.40112305]
[137.21937561 304.05017090]
[134.08927917 289.37051392]
[132.25051880 274.47393799]
[131.71708679 259.47378540]
[132.49304199 244.48420715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[15 140]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[23 132]
[25 130]
[26 129]
[27 128]
[28 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
