%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[30.85136032 265.24291992]
[36.60549545 279.11627197]
[40.61110687 293.59158325]
[42.80746078 308.44943237]
[43.16126633 323.46456909]
[41.66716003 338.40936279]
[38.34778976 353.05728149]
[33.25347519 367.18624878]
[26.46145058 380.58206177]
[18.07467651 393.04168701]
[8.22029495 404.37615967]
[-2.95230222 414.41372681]
[-15.27374268 423.00219727]
[-28.55723763 430.01135254]
[-42.60140991 435.33496094]
[-57.19335556 438.89233398]
[-72.11186218 440.62948608]
[-87.13077545 440.52011108]
[-102.02239990 438.56588745]
[-116.56099701 434.79641724]
[-130.52615356 429.26885986]
[-143.70617676 422.06701660]
[-155.90122986 413.30001831]
[-166.92648315 403.10083008]
[-176.61476135 391.62402344]
[-184.81919861 379.04360962]
[-191.41543579 365.55029297]
[-196.30345154 351.34866333]
[-199.40916443 336.65396118]
[-200.68547058 321.68896484]
[-200.11305237 306.68057251]
[-197.70056152 291.85629272]
[-193.48458862 277.44085693]
[-187.52902222 263.65277100]
[-179.92417908 250.70109558]
[-170.78532410 238.78216553]
[-160.25100708 228.07666016]
[-148.48092651 218.74688721]
[-135.65350342 210.93426514]
[-121.96321869 204.75724792]
[-107.61759949 200.30946350]
[-92.83412170 197.65834045]
[-77.83689880 196.84408569]
[-62.85329056 197.87902832]
[-48.11044312 200.74748230]
[-33.83185196 205.40596008]
[-20.23397636 211.78385925]
[-7.52295971 219.78445435]
[1.96593869 208.16719055]
[11.45483685 196.54992676]
[20.94373512 184.93266296]
[14.53567696 171.46409607]
[14.61117458 156.48733521]
[21.20881271 142.97317505]
[33.06812286 133.62561035]
[47.87002945 130.34072876]
[62.69027710 133.82235718]
[72.17917633 122.20509338]
[81.66807556 110.58782959]
[78.90533447 98.21766663]
[83.70445251 86.48642731]
[94.34507751 79.59942627]
[107.01283264 80.02546692]
[116.67364502 68.55077362]
[126.33444977 57.07606888]
[135.99526978 45.60137177]
[145.65606689 34.12667084]
[155.31687927 22.65196991]
[164.97769165 11.17726994]
[174.63850403 -0.29743034]
[183.59919739 -12.32680798]
[191.82800293 -24.86820793]
[200.05682373 -37.40960693]
[208.28562927 -49.95100784]
[209.38711548 -65.73382568]
[222.83824158 -72.13043213]
[231.06704712 -84.67182922]
[239.29585266 -97.21322632]
[227.32121277 -106.25610352]
[215.97039795 -116.07061005]
[205.29304504 -126.61385345]
[195.33584595 -137.83972168]
[186.14234924 -149.69911194]
[177.75276184 -162.14019775]
[170.20375061 -175.10853577]
[163.52832031 -188.54745483]
[157.75569153 -202.39817810]
[152.91108704 -216.60012817]
[149.01568604 -231.09121704]
[146.08653259 -245.80807495]
[144.13642883 -260.68634033]
[143.17391968 -275.66094971]
[143.20318604 -290.66644287]
[144.22412109 -305.63720703]
[146.23225403 -320.50775146]
[149.21879578 -335.21307373]
[153.17070007 -349.68884277]
[158.07067871 -363.87179565]
[163.89730835 -377.69985962]
[170.62512207 -391.11264038]
[178.22467041 -404.05145264]
[186.66273499 -416.45968628]
[195.90243530 -428.28314209]
[205.90335083 -439.47006226]
[216.62174988 -449.97155762]
[228.01077271 -459.74172974]
[240.02061462 -468.73779297]
[252.59875488 -476.92047119]
[265.69018555 -484.25396729]
[279.23767090 -490.70617676]
[293.18197632 -496.24893188]
[307.46212769 -500.85797119]
[322.01565552 -504.51315308]
[336.77893066 -507.19848633]
[351.68743896 -508.90222168]
[366.67593384 -509.61694336]
[381.67889404 -509.33947754]
[396.63070679 -508.07107544]
[411.46600342 -505.81726074]
[426.11990356 -502.58789062]
[440.52832031 -498.39709473]
[454.62829590 -493.26318359]
[468.35812378 -487.20864868]
[481.65777588 -480.25991821]
[494.46911621 -472.44738770]
[506.73608398 -463.80523682]
[518.40509033 -454.37124634]
[529.42504883 -444.18667603]
[539.74786377 -433.29605103]
[549.32830811 -421.74697876]
[558.12451172 -409.58999634]
[566.09802246 -396.87823486]
[573.21392822 -383.66726685]
[579.44122314 -370.01492310]
[584.75256348 -355.98083496]
[589.12481689 -341.62643433]
[592.53875732 -327.01443481]
[594.97955322 -312.20874023]
[596.43646240 -297.27410889]
[596.90313721 -282.27584839]
[596.37756348 -267.27954102]
[594.86206055 -252.35073853]
[592.36315918 -237.55476379]
[588.89184570 -222.95626831]
[584.46331787 -208.61912537]
[579.09692383 -194.60601807]
[572.81610107 -180.97821045]
[565.64831543 -167.79530334]
[557.62500000 -155.11494446]
[548.78112793 -142.99258423]
[539.15539551 -131.48121643]
[528.78997803 -120.63119507]
[517.73004150 -110.48995972]
[506.02413940 -101.10184479]
[493.72329712 -92.50791931]
[480.88140869 -84.74575806]
[467.55456543 -77.84928894]
[453.80108643 -71.84868622]
[439.68106079 -66.77018738]
[425.25628662 -62.63599014]
[410.58984375 -59.46417618]
[395.74578857 -57.26861954]
[380.78912354 -56.05891800]
[365.78518677 -55.84035873]
[350.79962158 -56.61389923]
[335.89794922 -58.37615967]
[321.14529419 -61.11943054]
[306.60623169 -64.83171844]
[292.34429932 -69.49678802]
[278.42184448 -75.09423828]
[264.89981079 -81.59960175]
[251.83724976 -88.98442078]
[243.60844421 -76.44302368]
[235.37963867 -63.90162277]
[234.86672974 -49.01585007]
[220.82702637 -41.72220230]
[212.59822083 -29.18080139]
[204.36941528 -16.63940048]
[196.14059448 -4.09800005]
[210.59107971 -8.12089539]
[224.68623352 -2.98992968]
[233.16889954 9.38117409]
[232.87527466 24.37829971]
[223.91487122 36.40789032]
[209.62968445 40.98320770]
[195.34774780 36.39776611]
[186.39585876 24.36182976]
[186.11320496 9.36338043]
[176.45239258 20.83807945]
[166.79158020 32.31277847]
[157.13076782 43.78747940]
[147.46997070 55.26218033]
[137.80915833 66.73687744]
[128.14834595 78.21157837]
[118.48753357 89.68627930]
[120.27408600 106.09286499]
[109.73918152 118.79654694]
[93.28533936 120.07672882]
[83.79644012 131.69398499]
[74.30754089 143.31124878]
[80.67795563 157.13801575]
[80.41442871 172.29774475]
[73.62278748 185.78454590]
[61.69795227 194.94747925]
[47.03778076 198.01158142]
[32.56099701 194.42156982]
[23.07209969 206.03883362]
[13.58320236 217.65609741]
[4.09430361 229.27336121]
[14.47160625 240.13113403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 209]
[49 208]
[50 207]
[51 206]
[57 200]
[58 199]
[59 198]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 179]
[72 178]
[73 177]
[74 176]
[76 174]
[77 173]
[78 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
