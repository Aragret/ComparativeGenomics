%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[110.11280060 489.96783447]
[121.02381897 479.58691406]
[133.91157532 471.79461670]
[129.08557129 457.59216309]
[124.25958252 443.38970947]
[119.43358612 429.18725586]
[117.26168823 444.02917480]
[111.04869843 457.68197632]
[101.28460693 469.06890869]
[88.73944092 477.29199219]
[74.40257263 481.70266724]
[59.40466309 481.95315552]
[44.92851257 478.02365112]
[32.11576843 470.22406006]
[21.97689819 459.16949463]
[15.31149387 445.73175049]
[12.64521885 430.97064209]
[14.18834686 416.05023193]
[19.81917763 402.14721680]
[29.09364510 390.35806274]
[41.28032303 381.61248779]
[55.41811752 376.60021973]
[70.39206696 375.71655273]
[85.02125549 379.03118896]
[98.15197754 386.28268433]
[108.74868011 396.89916992]
[115.97689056 410.04663086]
[115.53028870 395.05328369]
[115.08367920 380.05993652]
[114.63707733 365.06658936]
[114.19046783 350.07324219]
[113.74386597 335.07989502]
[103.22137451 327.64303589]
[98.83808899 315.31951904]
[102.40538788 302.53341675]
[112.83676147 294.01278687]
[112.61343384 279.01443481]
[111.94364929 264.02941895]
[110.82799530 249.07095337]
[109.71234894 234.11250305]
[108.59670258 219.15405273]
[107.48104858 204.19560242]
[105.80950928 189.28901672]
[103.58439636 174.45497131]
[91.49115753 165.83586121]
[89.02325439 150.82373047]
[98.14577484 138.19766235]
[95.92065430 123.36362457]
[93.69553375 108.52957916]
[90.81026459 93.80969238]
[87.27059174 79.23331451]
[83.73091888 64.65693665]
[80.19124603 50.08056259]
[76.65157318 35.50418854]
[73.11190033 20.92781258]
[67.81616211 34.96188354]
[56.66658783 44.99617767]
[42.15402603 48.78900528]
[27.52062035 45.49304199]
[16.03550720 35.84461212]
[10.26449203 21.99920082]
[11.49683475 7.04990959]
[19.45722771 -5.66355371]
[32.36729813 -13.30096912]
[47.34289932 -14.15611649]
[61.03845215 -8.03795624]
[70.39434052 3.68672109]
[69.27868652 -11.27173233]
[68.16304016 -26.23018646]
[56.47061920 -36.52217484]
[55.55228043 -51.70806503]
[65.43617249 -62.79157639]
[64.32052612 -77.75003052]
[63.20487976 -92.70848083]
[52.62137222 -82.07884216]
[37.62234116 -81.90832520]
[26.79991150 -92.29461670]
[26.35366440 -107.28797150]
[36.53923035 -118.29952240]
[51.52185059 -119.02135468]
[62.71838760 -109.04080963]
[55.18740845 -122.95465088]
[63.11334229 -135.56530762]
[63.33666992 -150.56364441]
[63.55999756 -165.56199646]
[56.02901840 -179.47583008]
[63.95495224 -192.08648682]
[64.17828369 -207.08482361]
[64.40161133 -222.08316040]
[64.62493896 -237.08151245]
[64.84826660 -252.07984924]
[65.07159424 -267.07818604]
[50.79026794 -275.41098022]
[42.70623779 -289.72683716]
[42.94347763 -306.07189941]
[51.34254456 -319.98632812]
[65.52995300 -327.72131348]
[65.52995300 -342.72131348]
[65.52995300 -357.72131348]
[65.52995300 -372.72131348]
[52.18882370 -380.33117676]
[44.45385361 -393.60015869]
[44.40571213 -408.95898438]
[52.05734634 -422.27618408]
[65.35050201 -429.96951294]
[80.70939636 -429.96951294]
[94.00255585 -422.27618408]
[101.65419006 -408.95898438]
[101.60604858 -393.60015869]
[93.87107849 -380.33117676]
[80.52995300 -372.72131348]
[80.52995300 -357.72131348]
[80.52995300 -342.72131348]
[80.52995300 -327.72131348]
[92.78178406 -321.68725586]
[101.27931976 -310.91134644]
[104.31947327 -297.46118164]
[101.25335693 -283.94906616]
[92.62372589 -273.02453613]
[80.06993103 -266.85485840]
[79.84660339 -251.85652161]
[79.62327576 -236.85818481]
[79.39994812 -221.85983276]
[79.17662048 -206.86149597]
[78.95329285 -191.86315918]
[86.50024414 -179.02210999]
[78.55833435 -165.33866882]
[78.33500671 -150.34031677]
[78.11167908 -135.34197998]
[85.65863037 -122.50093079]
[77.71672821 -108.81748199]
[78.16333008 -93.82413483]
[79.27898407 -78.86567688]
[80.39463043 -63.90722656]
[91.81330872 -54.41252899]
[93.15782928 -39.25842285]
[83.12149048 -27.34583473]
[84.23714447 -12.38738155]
[85.35279083 2.57107234]
[87.68827820 17.38813972]
[91.22795105 31.96451569]
[94.76762390 46.54088974]
[98.30729675 61.11726761]
[101.84696960 75.69364166]
[105.38664246 90.27001953]
[114.09537506 78.05699158]
[128.86589050 75.44318390]
[141.23695374 83.92591095]
[144.12187195 98.64587402]
[135.86802673 111.17080688]
[121.20359802 114.32586670]
[108.52957916 106.30446625]
[110.75469971 121.13850403]
[112.97981262 135.97254944]
[125.40533447 145.36639404]
[127.45059967 160.44192505]
[118.41843414 172.22985840]
[120.64355469 187.06390381]
[131.52268982 176.73701477]
[146.39987183 178.65257263]
[154.30821228 191.39848328]
[149.41795349 205.57894897]
[135.33403015 210.74064636]
[122.43950653 203.07994080]
[123.55515289 218.03840637]
[124.67079926 232.99685669]
[125.78645325 247.95530701]
[126.90209961 262.91375732]
[129.47305298 266.41293335]
[130.67581177 270.17031860]
[130.59722900 273.72406006]
[129.46519470 276.68804932]
[127.61177063 278.79110718]
[127.83509827 293.78945923]
[140.60861206 305.74172974]
[140.78236389 322.89645386]
[128.73721313 334.63327026]
[129.18382263 349.62664795]
[129.63043213 364.61999512]
[130.07702637 379.61334229]
[130.52363586 394.60668945]
[130.97024536 409.60003662]
[133.63603210 424.36123657]
[138.46203613 438.56372070]
[143.28804016 452.76617432]
[148.11402893 466.96862793]
[163.08119202 465.29580688]
[178.05798340 466.88003540]
[192.34391785 471.64724731]
[205.27081299 479.37445068]
[216.23405457 489.70019531]
[224.72087097 502.14157104]
[230.33433533 516.11663818]
[232.81187439 530.97180176]
[232.03761292 546.01226807]
[228.04777527 560.53448486]
[221.02896118 573.85931396]
[211.30946350 585.36346436]
[199.34387207 594.50885010]
[185.69184875 600.86779785]
[170.99191284 604.14288330]
[155.93161011 604.18084717]
[141.21534729 600.97998047]
[127.53141022 594.69000244]
[115.51984406 585.60504150]
[105.74244690 574.15002441]
[98.65650940 560.86083984]
[94.59347534 546.35888672]
[93.74336243 531.32257080]
[96.14594269 516.45507812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[6 183]
[27 182]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[36 174]
[37 173]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[43 158]
[44 157]
[47 154]
[48 153]
[49 152]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[67 139]
[68 138]
[69 137]
[72 134]
[73 133]
[74 132]
[81 131]
[83 129]
[84 128]
[85 127]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
