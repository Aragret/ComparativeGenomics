%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[162.13783264 433.99221802]
[172.90606689 423.42306519]
[186.04336548 416.00189209]
[182.28707886 401.47982788]
[178.53077698 386.95776367]
[167.85284424 376.57357788]
[171.88777161 361.27554321]
[168.13146973 346.75350952]
[164.37516785 332.23144531]
[160.61886597 317.70938110]
[156.86256409 303.18731689]
[152.67555237 288.78353882]
[148.06153870 274.51080322]
[136.78446960 264.78060913]
[139.90168762 249.26953125]
[128.62460327 239.53932190]
[131.74182129 224.02825928]
[127.12781525 209.75552368]
[122.51380920 195.48278809]
[117.89980316 181.21005249]
[112.85122681 175.81248474]
[113.32505798 166.69035339]
[108.92405701 152.35050964]
[104.41642761 138.04382324]
[99.80242157 123.77108765]
[95.18841553 109.49835205]
[89.42237854 95.65086365]
[82.54296875 82.32144165]
[75.66355133 68.99201202]
[63.85094070 67.65082550]
[54.25075531 60.84366989]
[49.18102264 50.35597610]
[49.79706955 38.84354019]
[55.83033752 29.16025925]
[49.35084152 15.63191319]
[42.87134552 2.10356784]
[36.39184952 -11.42477798]
[29.91235352 -24.95312309]
[16.97295189 -34.05710220]
[18.45339012 -48.87795258]
[11.97389317 -62.40629578]
[5.49439764 -75.93464661]
[-1.28559375 -89.31491852]
[-8.36269951 -102.54044342]
[-21.69570923 -111.05757141]
[-20.87853432 -125.92974091]
[-27.95563889 -139.15527344]
[-35.03274536 -152.38079834]
[-42.10985184 -165.60632324]
[-49.18695450 -178.83184814]
[-56.75133514 -191.78485107]
[-64.79251099 -204.44737244]
[-72.03469086 -210.01411438]
[-72.85750580 -217.35882568]
[-80.70926666 -230.13966370]
[-88.56101990 -242.92051697]
[-96.41277313 -255.70135498]
[-104.26453400 -268.48220825]
[-117.82023621 -262.02658081]
[-131.98535156 -257.04846191]
[-146.59934998 -253.60420227]
[-161.49667358 -251.73287964]
[-176.50851440 -251.45565796]
[-191.46476746 -252.77569580]
[-206.19598389 -255.67803955]
[-220.53523254 -260.12979126]
[-234.32003784 -266.08050537]
[-247.39421082 -273.46279907]
[-259.60961914 -282.19296265]
[-270.82785034 -292.17211914]
[-280.92178345 -303.28717041]
[-289.77706909 -315.41220093]
[-297.29333496 -328.40979004]
[-303.38543701 -342.13272095]
[-307.98434448 -356.42544556]
[-311.03796387 -371.12603760]
[-312.51168823 -386.06793213]
[-312.38879395 -401.08181763]
[-310.67068481 -415.99758911]
[-307.37683105 -430.64624023]
[-302.54458618 -444.86175537]
[-296.22863770 -458.48312378]
[-288.50061035 -471.35592651]
[-279.44805908 -483.33438110]
[-269.17352295 -494.28271484]
[-257.79342651 -504.07690430]
[-245.43675232 -512.60595703]
[-232.24348450 -519.77319336]
[-218.36309814 -525.49749756]
[-203.95291138 -529.71392822]
[-189.17616272 -532.37469482]
[-174.20030212 -533.44976807]
[-159.19500732 -532.92681885]
[-144.33032227 -530.81188965]
[-129.77464294 -527.12884521]
[-115.69293213 -521.91955566]
[-102.24471283 -515.24285889]
[-89.58238220 -507.17459106]
[-77.84941101 -497.80603027]
[-67.17874908 -487.24343872]
[-57.69128799 -475.60641479]
[-49.49453735 -463.02685547]
[-42.68137360 -449.64727783]
[-37.32899475 -435.61929321]
[-33.49804306 -421.10186768]
[-31.23192787 -406.25946045]
[-30.55632973 -391.26028442]
[-31.47889900 -376.27426147]
[-33.98918533 -361.47119141]
[-38.05874634 -347.01882935]
[-43.64146423 -333.08090210]
[-50.67409134 -319.81539917]
[-59.07693481 -307.37255859]
[-68.75479126 -295.89337158]
[-79.59799194 -285.50796509]
[-91.48368835 -276.33395386]
[-83.63193512 -263.55310059]
[-75.78017426 -250.77226257]
[-67.92842102 -237.99142456]
[-60.07666779 -225.21058655]
[-52.12998199 -212.48854065]
[-44.08880997 -199.82601929]
[-38.32304764 -213.67361450]
[-23.94442940 -217.94624329]
[-11.55233192 -209.49426270]
[-10.28175068 -194.54817200]
[-21.06931114 -184.12567139]
[-35.96142960 -185.90895081]
[-28.88432312 -172.68342590]
[-21.80721664 -159.45790100]
[-14.73011208 -146.23237610]
[-7.65300655 -133.00685120]
[5.17380190 -125.43569946]
[4.86282825 -109.61754608]
[11.93993378 -96.39202118]
[15.19038010 -95.02566528]
[17.94050980 -92.01703644]
[19.42565346 -87.61843872]
[19.02274323 -82.41413879]
[25.50223923 -68.88579559]
[31.98173523 -55.35744858]
[44.45767975 -47.22110748]
[43.44070053 -31.43261909]
[49.92019653 -17.90427399]
[56.39969254 -4.37592793]
[62.87918854 9.15241718]
[69.35868073 22.68076324]
[86.95950317 27.71334457]
[95.43773651 44.29744720]
[88.99298096 62.11259460]
[95.87239838 75.44202423]
[102.75180817 88.77145386]
[104.58625031 73.88404846]
[113.05307007 61.50208664]
[126.26074982 54.39172745]
[141.25866699 54.14144135]
[154.69622803 60.80714798]
[163.57147217 72.89970398]
[165.90164185 87.71761322]
[161.16616821 101.95050812]
[150.42295837 112.41872406]
[136.07209778 116.78363800]
[121.31957245 114.07011414]
[109.46114349 104.88434601]
[114.07515717 119.15707397]
[118.68916321 133.42980957]
[124.30656433 140.63276672]
[123.26390839 147.94950867]
[127.66490173 162.28935242]
[132.17253113 176.59603882]
[136.78654480 190.86877441]
[141.40055847 205.14151001]
[146.01455688 219.41424561]
[157.62165833 230.16532898]
[154.17442322 244.65551758]
[165.78152466 255.40660095]
[162.33427429 269.89678955]
[166.94828796 284.16952515]
[170.27235413 286.96319580]
[172.32781982 290.33062744]
[173.09005737 293.80255127]
[172.68942261 296.94995117]
[171.38462830 299.43103027]
[175.14093018 313.95306396]
[178.89723206 328.47512817]
[182.65351868 342.99719238]
[186.40982056 357.51925659]
[197.35643005 368.94213867]
[193.05282593 383.20147705]
[196.80912781 397.72351074]
[200.56542969 412.24557495]
[215.65344238 412.36593628]
[230.19592285 416.38821411]
[243.20135498 424.03811646]
[253.78298950 434.79412842]
[261.21939087 447.92282104]
[265.00347900 462.52908325]
[264.87728882 477.61703491]
[260.84939575 492.15795898]
[253.19447327 505.16043091]
[242.43440247 515.73791504]
[229.30284119 523.16925049]
[214.69511414 526.94769287]
[199.60719299 526.81567383]
[185.06782532 522.78216553]
[172.06831360 515.12225342]
[161.49497986 504.35806274]
[154.06872559 491.22363281]
[150.29591370 476.61447144]
[150.43376160 461.52661133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 178]
[13 177]
[15 175]
[17 173]
[18 172]
[19 171]
[20 170]
[22 169]
[23 168]
[24 166]
[25 165]
[26 164]
[27 152]
[28 151]
[29 150]
[34 147]
[35 146]
[36 145]
[37 144]
[38 143]
[40 141]
[41 140]
[42 139]
[43 135]
[44 134]
[46 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 122]
[52 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
