%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[85.13604736 799.78314209]
[70.17081451 798.70367432]
[55.29161835 796.77154541]
[40.54698944 793.99322510]
[25.98502350 790.37762451]
[11.65321732 785.93658447]
[-2.40168190 780.68457031]
[-16.13382912 774.63879395]
[-29.49843407 767.81890869]
[-42.45190048 760.24719238]
[-54.95198059 751.94830322]
[-66.95790100 742.94934082]
[-78.43049622 733.27966309]
[-89.33235168 722.97076416]
[-99.62789917 712.05633545]
[-109.28356171 700.57189941]
[-118.26785278 688.55499268]
[-126.55145264 676.04479980]
[-134.10734558 663.08209229]
[-140.91088867 649.70916748]
[-146.93989563 635.96966553]
[-152.17468262 621.90832520]
[-156.59820557 607.57110596]
[-160.19599915 593.00476074]
[-162.95635986 578.25671387]
[-164.87025452 563.37518311]
[-165.93147278 548.40863037]
[-166.13652039 533.40594482]
[-165.48475647 518.41595459]
[-163.97828674 503.48767090]
[-161.62203979 488.66973877]
[-158.42369080 474.01046753]
[-154.39367676 459.55770874]
[-149.54513550 445.35858154]
[-143.89390564 431.45941162]
[-137.45838928 417.90554810]
[-130.25959778 404.74114990]
[-122.32099915 392.00921631]
[-113.66850281 379.75125122]
[-104.33032227 368.00726318]
[-94.33691406 356.81549072]
[-83.72087860 346.21252441]
[-72.51684570 336.23287964]
[-60.76136398 326.90914917]
[-48.49276733 318.27172852]
[-35.75107574 310.34881592]
[-22.57785797 303.16619873]
[-9.01607513 296.74737549]
[4.89003420 291.11322021]
[19.09511185 286.28216553]
[33.55282211 282.26992798]
[48.21600723 279.08959961]
[63.03683853 276.75158691]
[77.96697998 275.26348877]
[92.95771790 274.63015747]
[93.18104553 259.63180542]
[93.40437317 244.63346863]
[93.62770081 229.63513184]
[93.85102844 214.63679504]
[91.22646332 210.64672852]
[91.08056641 204.96554565]
[94.31093597 199.19699097]
[94.98072052 184.21194458]
[95.65050507 169.22691345]
[96.32028961 154.24186707]
[95.98531342 139.24562073]
[87.14339447 127.25938416]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.65351105 58.64428711]
[87.09298706 43.72568130]
[77.96197510 30.80534363]
[84.33320618 17.34218597]
[82.77268982 2.42358088]
[81.21216583 -12.49502373]
[79.54062653 -27.40159798]
[77.75815582 -42.29531479]
[75.97569275 -57.18903351]
[73.52996063 -71.98830414]
[70.42584991 -86.66360474]
[67.32174683 -101.33890533]
[64.21763611 -116.01421356]
[61.11352158 -130.68951416]
[46.05054855 -130.92304993]
[31.41732407 -134.50305176]
[17.94784737 -141.24998474]
[6.31773949 -150.82537842]
[-2.88963675 -162.74896240]
[-9.21244335 -176.42266846]
[-12.33353138 -191.16058350]
[-12.09634781 -206.22351074]
[-8.51278973 -220.85586548]
[-1.76260781 -234.32369995]
[7.81561279 -245.95149231]
[19.74143219 -255.15597534]
[33.41665649 -261.47546387]
[48.15534210 -264.59298706]
[63.21820068 -264.35214233]
[77.84968567 -260.76504517]
[91.31589508 -254.01161194]
[102.94136047 -244.43057251]
[112.14295959 -232.50251770]
[118.45913696 -218.82575989]
[121.57308197 -204.08633423]
[121.32859802 -189.02352905]
[117.73795319 -174.39291382]
[110.98123932 -160.92834473]
[101.39738464 -149.30519104]
[89.46710968 -140.10649109]
[75.78882599 -133.79362488]
[78.89293671 -119.11832428]
[81.99704742 -104.44301605]
[85.10115814 -89.76771545]
[88.20526886 -75.09241486]
[97.27376556 -87.04073334]
[112.11555481 -89.21360779]
[124.22857666 -80.36631012]
[126.67395020 -65.56697845]
[118.05084991 -53.29334641]
[103.29898071 -50.57629776]
[90.86940765 -58.97149658]
[92.65187073 -44.07778168]
[94.43434143 -29.18406296]
[98.35040283 -22.91619110]
[96.13076782 -14.05554676]
[97.69129181 0.86305791]
[99.25181580 15.78166294]
[108.27120972 27.63492203]
[102.01159668 42.16516113]
[103.57211304 57.08376312]
[107.39443207 63.40924454]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[117.49647522 124.54057312]
[110.92549896 137.90737915]
[119.15588379 125.36701965]
[132.81591797 119.16996765]
[147.67289734 121.23645020]
[159.12321472 130.92614746]
[163.61886597 145.23660278]
[159.76683044 159.73356628]
[148.76069641 169.92498779]
[134.01084900 172.65295410]
[120.08766174 167.07217407]
[111.30532837 154.91165161]
[110.63554382 169.89669800]
[109.96575928 184.88172913]
[109.29597473 199.86677551]
[108.84936523 214.86012268]
[108.62603760 229.85845947]
[108.40270996 244.85679626]
[108.17938232 259.85513306]
[107.95605469 274.85348511]
[122.92129517 275.93286133]
[137.80050659 277.86483765]
[152.54515076 280.64309692]
[167.10714722 284.25857544]
[181.43899536 288.69949341]
[195.49392700 293.95135498]
[209.22612000 299.99703979]
[222.59078979 306.81680298]
[235.54431152 314.38842773]
[248.04444885 322.68722534]
[260.05044556 331.68609619]
[271.52313232 341.35568237]
[282.42504883 351.66448975]
[292.72067261 362.57885742]
[302.37643433 374.06317139]
[311.36080933 386.08001709]
[319.64453125 398.59017944]
[327.20053101 411.55282593]
[334.00418091 424.92568970]
[340.03326416 438.66516113]
[345.26818848 452.72644043]
[349.69180298 467.06362915]
[353.28973389 481.62997437]
[356.05020142 496.37796021]
[357.96420288 511.25949097]
[359.02554321 526.22601318]
[359.23071289 541.22875977]
[358.57907104 556.21868896]
[357.07272339 571.14697266]
[354.71658325 585.96496582]
[351.51834106 600.62426758]
[347.48843384 615.07702637]
[342.64001465 629.27618408]
[336.98889160 643.17541504]
[330.55346680 656.72937012]
[323.35479736 669.89379883]
[315.41629028 682.62579346]
[306.76388550 694.88378906]
[297.42581177 706.62786865]
[287.43249512 717.81970215]
[276.81652832 728.42279053]
[265.61257935 738.40252686]
[253.85716248 747.72631836]
[241.58863831 756.36383057]
[228.84701538 764.28686523]
[215.67384338 771.46960449]
[202.11212158 777.88854980]
[188.20605469 783.52276611]
[174.00100708 788.35394287]
[159.54333496 792.36627197]
[144.88017273 795.54675293]
[130.05935669 797.88488770]
[115.12923431 799.37310791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 139]
[68 137]
[70 135]
[71 134]
[72 132]
[73 131]
[75 129]
[76 128]
[77 127]
[78 125]
[79 124]
[80 123]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
