%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[101.83251190 317.90539551]
[86.80017090 321.37417603]
[72.28654480 316.14367676]
[62.92286682 303.88296509]
[61.69705963 288.50436401]
[69.00027466 274.91516113]
[82.50208282 267.45159912]
[83.39489746 252.47819519]
[84.28771210 237.50479126]
[85.18052673 222.53138733]
[72.10096741 215.36265564]
[63.39516830 203.17584229]
[60.83346939 188.35697937]
[64.97675323 173.83618164]
[75.05471802 162.50827026]
[89.10848236 156.65567017]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[92.45834351 72.39208984]
[82.57448578 60.03814697]
[88.13307953 46.21963501]
[85.68735504 31.42036438]
[83.24162292 16.62109375]
[80.79589844 1.82182348]
[78.35017395 -12.97744751]
[75.90444183 -27.77671814]
[73.45871735 -42.57598877]
[58.56271362 -40.79159927]
[43.60200500 -39.67255020]
[28.60630226 -39.22106552]
[13.60537243 -39.43804169]
[-1.37100077 -40.32304764]
[-16.29308319 -41.87432861]
[-31.13124657 -44.08879852]
[-45.85603333 -46.96206284]
[-60.43820572 -50.48842239]
[-74.84881592 -54.66086960]
[-89.05924988 -59.47112656]
[-103.04129028 -64.90963745]
[-116.76718903 -70.96560669]
[-130.20968628 -77.62700653]
[-143.34208679 -84.88061523]
[-156.13833618 -92.71203613]
[-168.57301331 -101.10571289]
[-180.62142944 -110.04498291]
[-192.25967407 -119.51210022]
[-203.46463013 -129.48826599]
[-214.21406555 -139.95367432]
[-224.48661804 -150.88754272]
[-234.26190186 -162.26817322]
[-243.52050781 -174.07296753]
[-252.24406433 -186.27848816]
[-260.41525269 -198.86048889]
[-268.01782227 -211.79400635]
[-275.03668213 -225.05335999]
[-281.45794678 -238.61221313]
[-287.26879883 -252.44364929]
[-292.45776367 -266.52023315]
[-297.01449585 -280.81396484]
[-300.92996216 -295.29650879]
[-304.19641113 -309.93908691]
[-306.80731201 -324.71264648]
[-308.75750732 -339.58786011]
[-310.04312134 -354.53518677]
[-310.66159058 -369.52493286]
[-310.61172485 -384.52734375]
[-309.89358521 -399.51263428]
[-308.50860596 -414.45108032]
[-306.45953369 -429.31298828]
[-303.75045776 -444.06884766]
[-300.38674927 -458.68942261]
[-296.37506104 -473.14559937]
[-291.72338867 -487.40872192]
[-286.44094849 -501.45046997]
[-280.53823853 -515.24298096]
[-274.02697754 -528.75885010]
[-266.92010498 -541.97125244]
[-259.23168945 -554.85388184]
[-250.97703552 -567.38128662]
[-242.17251587 -579.52856445]
[-232.83561707 -591.27148438]
[-222.98487854 -602.58691406]
[-212.63984680 -613.45220947]
[-201.82107544 -623.84594727]
[-190.55003357 -633.74737549]
[-178.84909058 -643.13690186]
[-166.74150085 -651.99584961]
[-154.25129700 -660.30664062]
[-141.40325928 -668.05279541]
[-128.22291565 -675.21893311]
[-114.73641968 -681.79083252]
[-100.97055817 -687.75537109]
[-86.95265961 -693.10083008]
[-72.71055603 -697.81646729]
[-58.27252197 -701.89300537]
[-43.66722488 -705.32232666]
[-28.92366028 -708.09759521]
[-14.07109928 -710.21337891]
[0.86096686 -711.66540527]
[15.84289360 -712.45080566]
[30.84493446 -712.56805420]
[45.83730698 -712.01684570]
[60.79023743 -710.79833984]
[75.67404938 -708.91497803]
[90.45918274 -706.37042236]
[105.11628723 -703.16973877]
[119.61626434 -699.31933594]
[133.93032837 -694.82678223]
[148.03004456 -689.70111084]
[161.88743591 -683.95239258]
[175.47497559 -677.59204102]
[188.76570129 -670.63281250]
[201.73321533 -663.08837891]
[214.35177612 -654.97375488]
[226.59632874 -646.30505371]
[238.44256592 -637.09954834]
[249.86697388 -627.37542725]
[260.84686279 -617.15209961]
[271.36041260 -606.44976807]
[281.38677979 -595.28967285]
[290.90603638 -583.69409180]
[299.89932251 -571.68591309]
[308.34872437 -559.28900146]
[316.23751831 -546.52807617]
[323.55001831 -533.42834473]
[330.27169800 -520.01593018]
[336.38922119 -506.31732178]
[341.89044189 -492.35983276]
[346.76443481 -478.17114258]
[351.00155640 -463.77941895]
[354.59332275 -449.21322632]
[357.53268433 -434.50149536]
[359.81375122 -419.67340088]
[361.43197632 -404.75845337]
[362.38421631 -389.78619385]
[362.66854858 -374.78637695]
[362.28439331 -359.78881836]
[361.23251343 -344.82324219]
[359.51501465 -329.91937256]
[357.13528442 -315.10681152]
[354.09808350 -300.41494751]
[350.40942383 -285.87298584]
[346.07659912 -271.50979614]
[341.10827637 -257.35385132]
[335.51425171 -243.43328857]
[329.30566406 -229.77574158]
[322.49487305 -216.40832520]
[315.09533691 -203.35758972]
[307.12176514 -190.64942932]
[298.59002686 -178.30906677]
[289.51702881 -166.36103821]
[279.92077637 -154.82904053]
[269.82034302 -143.73596191]
[259.23577881 -133.10385132]
[248.18807983 -122.95379639]
[236.69920349 -113.30596924]
[224.79194641 -104.17950439]
[212.48995972 -95.59252930]
[199.81767273 -87.56209564]
[186.80021667 -80.10414886]
[173.46347046 -73.23348999]
[159.83387756 -66.96376801]
[145.93853760 -61.30741882]
[131.80500793 -56.27568436]
[117.46135712 -51.87854767]
[102.93607330 -48.12474060]
[88.25798798 -45.02171707]
[90.70371246 -30.22244644]
[93.14944458 -15.42317486]
[95.59516907 -0.62390387]
[98.04089355 14.17536736]
[100.48662567 28.97463799]
[102.93235016 43.77391052]
[112.64127350 55.06930923]
[107.25761414 69.94636536]
[112.45598602 55.87593460]
[122.33140564 44.58540726]
[135.58459473 37.56023788]
[150.47186279 35.72471237]
[165.03454590 39.32032394]
[177.35665894 47.87400818]
[185.81701660 60.26038361]
[189.30252075 74.84980774]
[187.35459900 89.72278595]
[180.22950745 102.92253113]
[168.86471558 112.71237946]
[154.75541687 117.80432129]
[139.75794983 117.52841187]
[125.84549713 111.92095947]
[114.84846497 101.71971893]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.08188629 157.54849243]
[117.34060669 165.02964783]
[126.00106049 177.47486877]
[128.38946533 192.38513184]
[124.08497620 206.79458618]
[113.99269104 217.86053467]
[100.15393066 223.42419434]
[99.26111603 238.39759827]
[98.36830139 253.37100220]
[97.47548676 268.34442139]
[109.99472046 277.35952759]
[115.63137054 291.72030640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[16 199]
[17 198]
[18 197]
[19 196]
[21 194]
[22 178]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
