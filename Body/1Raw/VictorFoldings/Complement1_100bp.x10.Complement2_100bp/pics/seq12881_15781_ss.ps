%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[100.40726471 860.91528320]
[85.46849060 859.53540039]
[70.60351562 857.50970459]
[55.84025192 854.84197998]
[41.20640564 851.53723145]
[26.72945404 847.60162354]
[12.43657589 843.04260254]
[-1.64539421 837.86877441]
[-15.49001980 832.08972168]
[-29.07130814 825.71636963]
[-42.36376190 818.76068115]
[-55.34242630 811.23571777]
[-67.98293304 803.15557861]
[-80.26155853 794.53546143]
[-92.15524292 785.39154053]
[-103.64165497 775.74102783]
[-114.69924164 765.60192871]
[-125.30722809 754.99340820]
[-135.44570923 743.93524170]
[-145.09565735 732.44836426]
[-154.23893738 720.55419922]
[-162.85839844 708.27508545]
[-170.93785095 695.63415527]
[-178.46212769 682.65509033]
[-185.41709900 669.36224365]
[-191.78971863 655.78063965]
[-197.56802368 641.93572998]
[-202.74114990 627.85345459]
[-207.29939270 613.56036377]
[-211.23420715 599.08319092]
[-214.53817749 584.44915771]
[-217.20513916 569.68572998]
[-219.23004150 554.82067871]
[-220.60911560 539.88183594]
[-221.33976746 524.89727783]
[-221.42062378 509.89511108]
[-220.85151672 494.90356445]
[-219.63352966 479.95071411]
[-217.76895142 465.06466675]
[-215.26127625 450.27337646]
[-212.11521912 435.60458374]
[-208.33666992 421.08587646]
[-203.93273926 406.74444580]
[-198.91169739 392.60726929]
[-193.28294373 378.70086670]
[-187.05708313 365.05133057]
[-180.24577332 351.68432617]
[-172.86183167 338.62490845]
[-164.91908264 325.89764404]
[-156.43246460 313.52636719]
[-147.41792297 301.53433228]
[-137.89233398 289.94406128]
[-127.87363434 278.77731323]
[-117.38059235 268.05505371]
[-106.43293762 257.79739380]
[-95.05120087 248.02359009]
[-83.25675964 238.75201416]
[-71.07176208 230.00006104]
[-58.51907349 221.78417969]
[-45.62226486 214.11975098]
[-32.40555191 207.02120972]
[-18.89374352 200.50186157]
[-5.11220980 194.57394409]
[8.91317844 189.24859619]
[23.15608788 184.53579712]
[37.58978271 180.44442749]
[52.18716049 176.98213196]
[66.92081451 174.15542603]
[81.76309204 171.96963501]
[96.68612671 170.42883301]
[95.79330444 155.45542908]
[94.90048981 140.48202515]
[94.00767517 125.50861359]
[93.11486053 110.53520966]
[91.88788605 95.58547974]
[90.32736206 80.66687012]
[88.76683807 65.74826813]
[87.20631409 50.82966232]
[85.64579010 35.91105652]
[84.08526611 20.99245262]
[69.06977844 20.46229935]
[54.27420807 17.84747887]
[39.98656464 13.19888496]
[26.48496246 6.60700607]
[14.03221130 -1.79984426]
[2.87070966 -11.85802555]
[-6.78228188 -23.37175179]
[-14.73886490 -36.11690521]
[-20.84416199 -49.84539413]
[-24.97933197 -64.28999329]
[-27.06388092 -79.16954041]
[-27.05723572 -94.19438934]
[-24.95952415 -109.07208252]
[-20.81157684 -123.51301575]
[-14.69413757 -137.23609924]
[-6.72628212 -149.97421265]
[2.93689132 -161.47940063]
[14.10728741 -171.52769470]
[26.56747055 -179.92352295]
[40.07489777 -186.50346375]
[54.36664581 -191.13940430]
[69.16452026 -193.74114990]
[84.18048096 -194.25801086]
[99.12223053 -192.67996216]
[113.69892883 -189.03768921]
[127.62683105 -183.40211487]
[140.63482666 -175.88293457]
[152.46971130 -166.62651062]
[162.90112305 -155.81300354]
[171.72601318 -143.65292358]
[178.77258301 -130.38296509]
[183.90368652 -116.26142120]
[187.01943970 -101.56318665]
[188.05920410 -86.57435608]
[187.00271606 -71.58669281]
[183.87055969 -56.89194107]
[178.72370911 -42.77613831]
[171.66232300 -29.51404572]
[162.82386780 -17.36382103]
[152.38040161 -6.56196833]
[140.53518677 2.68124962]
[127.51880646 10.18591118]
[113.58462524 15.80593681]
[99.00387573 19.43192863]
[100.56439972 34.35053253]
[102.12492371 49.26913834]
[103.68544006 64.18774414]
[105.24596405 79.10634613]
[106.80648804 94.02495575]
[109.42793274 96.85345459]
[110.78987885 100.82371521]
[110.41037750 105.34732056]
[108.08826447 109.64239502]
[108.98107910 124.61579895]
[109.87389374 139.58920288]
[110.76671600 154.56260681]
[111.65953064 169.53601074]
[126.65991974 169.29257202]
[141.65676880 169.69917297]
[156.62193298 170.75502014]
[171.52731323 172.45816040]
[186.34490967 174.80537415]
[201.04693604 177.79228210]
[215.60575867 181.41323853]
[229.99406433 185.66148376]
[244.18482971 190.52902222]
[258.15142822 196.00671387]
[271.86761475 202.08427429]
[285.30767822 208.75032043]
[298.44635010 215.99229431]
[311.25897217 223.79663086]
[323.72149658 232.14866638]
[335.81051636 241.03273010]
[347.50332642 250.43212891]
[358.77801514 260.32922363]
[369.61337280 270.70544434]
[379.98907471 281.54129028]
[389.88565063 292.81640625]
[399.28451538 304.50967407]
[408.16799927 316.59912109]
[416.51947021 329.06201172]
[424.32321167 341.87500000]
[431.56457520 355.01400757]
[438.22998047 368.45434570]
[444.30691528 382.17083740]
[449.78396606 396.13769531]
[454.65084839 410.32867432]
[458.89840698 424.71719360]
[462.51870728 439.27618408]
[465.50491333 453.97833252]
[467.85147095 468.79605103]
[469.55389404 483.70150757]
[470.60906982 498.66671753]
[471.01495361 513.66357422]
[470.77081299 528.66394043]
[469.87713623 543.63970947]
[468.33554077 558.56262207]
[466.14895630 573.40478516]
[463.32147217 588.13830566]
[459.85839844 602.73547363]
[455.76623535 617.16894531]
[451.05270386 631.41162109]
[445.72659302 645.43670654]
[439.79794312 659.21795654]
[433.27789307 672.72943115]
[426.17861938 685.94573975]
[418.51351929 698.84216309]
[410.29696655 711.39440918]
[401.54437256 723.57891846]
[392.27215576 735.37286377]
[382.49777222 746.75408936]
[372.23953247 757.70123291]
[361.51669312 768.19366455]
[350.34942627 778.21179199]
[338.75863647 787.73675537]
[326.76614380 796.75067139]
[314.39440918 805.23663330]
[301.66671753 813.17871094]
[288.60690308 820.56195068]
[275.23953247 827.37255859]
[261.58969116 833.59765625]
[247.68298340 839.22570801]
[233.54553223 844.24597168]
[219.20387268 848.64916992]
[204.68493652 852.42694092]
[190.01599121 855.57220459]
[175.22456360 858.07910156]
[160.33842468 859.94287109]
[145.38551331 861.16009521]
[130.39392090 861.72839355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
