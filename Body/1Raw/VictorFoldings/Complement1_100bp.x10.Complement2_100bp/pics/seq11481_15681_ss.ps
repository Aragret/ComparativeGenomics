%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[27.71232986 277.51959229]
[33.46646881 291.39294434]
[37.47207642 305.86825562]
[39.66843033 320.72610474]
[40.02223587 335.74124146]
[38.52812958 350.68603516]
[35.20875931 365.33395386]
[30.11444664 379.46292114]
[23.32242012 392.85873413]
[14.93564701 405.31832886]
[5.08126640 416.65283203]
[-6.09133148 426.69039917]
[-18.41277122 435.27886963]
[-31.69626617 442.28802490]
[-45.74044037 447.61163330]
[-60.33238602 451.16900635]
[-75.25089264 452.90615845]
[-90.26980591 452.79678345]
[-105.16143036 450.84255981]
[-119.70002747 447.07308960]
[-133.66519165 441.54553223]
[-146.84519958 434.34368896]
[-159.04026794 425.57669067]
[-170.06550598 415.37750244]
[-179.75378418 403.90069580]
[-187.95822144 391.32028198]
[-194.55445862 377.82696533]
[-199.44247437 363.62533569]
[-202.54818726 348.93063354]
[-203.82450867 333.96563721]
[-203.25207520 318.95724487]
[-200.83959961 304.13296509]
[-196.62361145 289.71752930]
[-190.66806030 275.92944336]
[-183.06320190 262.97775269]
[-173.92434692 251.05883789]
[-163.39002991 240.35333252]
[-151.61994934 231.02355957]
[-138.79254150 223.21093750]
[-125.10224915 217.03392029]
[-110.75662231 212.58613586]
[-95.97314453 209.93501282]
[-80.97592926 209.12075806]
[-65.99231720 210.15570068]
[-51.24946976 213.02415466]
[-36.97087860 217.68263245]
[-23.37300491 224.06053162]
[-10.66198921 232.06112671]
[-1.17309046 220.44386292]
[8.31580830 208.82659912]
[17.80470657 197.20933533]
[27.29360390 185.59207153]
[36.78250122 173.97480774]
[46.27140045 162.35754395]
[55.76029968 150.74028015]
[64.72099304 138.71090698]
[73.13561249 126.29341125]
[81.55023193 113.87591553]
[89.96485138 101.45841980]
[91.52022552 93.54935455]
[98.59833527 88.91996765]
[107.19689941 76.62912750]
[96.94277954 65.60951233]
[89.20703888 52.70366287]
[84.32571411 38.47694397]
[82.50988007 23.55201149]
[83.83648682 8.58153343]
[88.24513245 -5.78033304]
[95.54077911 -18.90653419]
[105.40240479 -30.22449684]
[117.39712524 -39.24110413]
[130.99917603 -45.56417465]
[145.61297607 -48.91953278]
[160.59919739 -49.16287994]
[175.30274963 -46.28601456]
[189.08140564 -40.41706848]
[197.67997742 -52.70790482]
[206.27853394 -64.99874115]
[214.87710571 -77.28958130]
[223.47566223 -89.58042145]
[232.07423401 -101.87125397]
[220.40109253 -111.30091858]
[209.40632629 -121.51345825]
[199.14234924 -132.46020508]
[189.65805054 -144.08900452]
[180.99864197 -156.34442139]
[173.20538330 -169.16806030]
[166.31541443 -182.49880981]
[160.36158752 -196.27316284]
[155.37223816 -210.42544556]
[151.37117004 -224.88822937]
[148.37744141 -239.59259033]
[146.40533447 -254.46846008]
[145.46421814 -269.44494629]
[145.55859375 -284.45065308]
[146.68801880 -299.41412354]
[148.84710693 -314.26400757]
[152.02555847 -328.92953491]
[156.20823669 -343.34085083]
[161.37519836 -357.42926025]
[167.50184631 -371.12762451]
[174.55894470 -384.37063599]
[182.51289368 -397.09524536]
[191.32577515 -409.24078369]
[200.95559692 -420.74932861]
[211.35647583 -431.56610107]
[222.47882080 -441.63952637]
[234.26965332 -450.92163086]
[246.67277527 -459.36810303]
[259.62908936 -466.93878174]
[273.07681274 -473.59753418]
[286.95190430 -479.31262207]
[301.18823242 -484.05685425]
[315.71795654 -487.80758667]
[330.47183228 -490.54693604]
[345.37951660 -492.26190186]
[360.37002563 -492.94427490]
[375.37188721 -492.59078979]
[390.31359863 -491.20315552]
[405.12399292 -488.78796387]
[419.73245239 -485.35675049]
[434.06939697 -480.92584229]
[448.06646729 -475.51635742]
[461.65701294 -469.15411377]
[474.77621460 -461.86938477]
[487.36154175 -453.69689941]
[499.35308838 -444.67559814]
[510.69366455 -434.84848022]
[521.32922363 -424.26239014]
[531.20910645 -412.96774292]
[540.28619385 -401.01840210]
[548.51727295 -388.47128296]
[555.86303711 -375.38616943]
[562.28857422 -361.82546997]
[567.76324463 -347.85372925]
[572.26092529 -333.53762817]
[575.76025391 -318.94531250]
[578.24444580 -304.14633179]
[579.70172119 -289.21124268]
[580.12512207 -274.21118164]
[579.51263428 -259.21768188]
[577.86718750 -244.30213928]
[575.19665527 -229.53565979]
[571.51367188 -214.98861694]
[566.83587646 -200.73033142]
[561.18548584 -186.82875061]
[554.58953857 -173.35011292]
[547.07934570 -160.35865784]
[538.69073486 -147.91630554]
[529.46374512 -136.08233643]
[519.44226074 -124.91313934]
[508.67407227 -114.46196747]
[497.21054077 -104.77860260]
[485.10623169 -95.90919495]
[472.41882324 -87.89601898]
[459.20883179 -80.77725220]
[445.53918457 -74.58683014]
[431.47503662 -69.35424805]
[417.08337402 -65.10443878]
[402.43280029 -61.85765457]
[387.59313965 -59.62937164]
[372.63513184 -58.43020630]
[357.63000488 -58.26587677]
[342.64929199 -59.13716507]
[327.76440430 -61.03991318]
[313.04623413 -63.96506119]
[298.56497192 -67.89866638]
[284.38955688 -72.82198334]
[270.58761597 -78.71154785]
[257.22488403 -85.53929901]
[244.36506653 -93.27269745]
[235.76649475 -80.98185730]
[227.16793823 -68.69101715]
[218.56936646 -56.40018082]
[209.97080994 -44.10934067]
[201.37223816 -31.81850433]
[211.60887146 -20.88656807]
[219.35176086 -8.06009197]
[224.26040649 6.10152864]
[226.11791992 20.98007774]
[224.84071350 35.92550278]
[220.48219299 50.28432083]
[213.23052979 63.42819595]
[203.40057373 74.78142548]
[191.42018127 83.84615326]
[177.81152344 90.22422028]
[163.16844177 93.63463593]
[148.13041687 93.92595673]
[133.35475159 91.08301544]
[119.48773956 85.22769165]
[110.88917542 97.51853180]
[102.38234711 109.87303925]
[93.96772766 122.29053497]
[85.55310822 134.70802307]
[77.13848877 147.12551880]
[92.03495026 145.36610413]
[103.89733124 154.54673767]
[105.93032074 169.40832520]
[96.96933746 181.43748474]
[82.14763641 183.74337769]
[69.95575714 175.00506592]
[67.37756348 160.22918701]
[57.88866425 171.84645081]
[48.39976501 183.46371460]
[38.91086960 195.08097839]
[29.42197037 206.69824219]
[19.93307114 218.31550598]
[10.44417286 229.93276978]
[0.95527452 241.55003357]
[11.33257675 252.40779114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 209]
[49 208]
[50 207]
[51 206]
[52 205]
[53 204]
[54 203]
[55 202]
[56 195]
[57 194]
[58 193]
[59 192]
[61 191]
[62 190]
[76 176]
[77 175]
[78 174]
[79 173]
[80 172]
[81 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
