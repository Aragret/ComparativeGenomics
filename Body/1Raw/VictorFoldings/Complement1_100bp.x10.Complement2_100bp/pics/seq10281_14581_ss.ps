%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[87.52384949 967.82128906]
[72.56774902 966.64398193]
[57.67668533 964.81994629]
[42.87861633 962.35253906]
[28.20132065 959.24645996]
[13.67235756 955.50744629]
[-0.68099916 951.14257812]
[-14.83180141 946.16003418]
[-28.75348282 940.56921387]
[-42.41990662 934.38055420]
[-55.80541611 927.60565186]
[-68.88488007 920.25726318]
[-81.63374329 912.34924316]
[-94.02807617 903.89630127]
[-106.04460144 894.91442871]
[-117.66075897 885.42047119]
[-128.85475159 875.43218994]
[-139.60556030 864.96838379]
[-149.89299011 854.04870605]
[-159.69773865 842.69360352]
[-169.00138855 830.92449951]
[-177.78648376 818.76336670]
[-186.03652954 806.23309326]
[-193.73602295 793.35717773]
[-200.87052917 780.15985107]
[-207.42665100 766.66583252]
[-213.39207458 752.90051270]
[-218.75559998 738.88964844]
[-223.50714111 724.65966797]
[-227.63781738 710.23712158]
[-231.13983154 695.64923096]
[-234.00663757 680.92333984]
[-236.23284912 666.08709717]
[-237.81427002 651.16827393]
[-238.74795532 636.19500732]
[-239.03213501 621.19537354]
[-238.66627502 606.19744873]
[-237.65107727 591.22949219]
[-235.98841858 576.31951904]
[-233.68145752 561.49560547]
[-230.73449707 546.78552246]
[-227.15309143 532.21691895]
[-222.94393921 517.81713867]
[-218.11497498 503.61318970]
[-212.67523193 489.63177490]
[-206.63493347 475.89910889]
[-200.00543213 462.44100952]
[-192.79916382 449.28271484]
[-185.02966309 436.44894409]
[-176.71150208 423.96377563]
[-167.86030579 411.85067749]
[-158.49270630 400.13238525]
[-148.62626648 388.83084106]
[-138.27952576 377.96734619]
[-127.47189331 367.56225586]
[-116.22367859 357.63507080]
[-104.55599213 348.20449829]
[-92.49073029 339.28820801]
[-80.05055237 330.90292358]
[-67.25881195 323.06442261]
[-54.13952637 315.78738403]
[-40.71731949 309.08547974]
[-27.01739693 302.97134399]
[-13.06547642 297.45635986]
[1.11224926 292.55096436]
[15.48916245 288.26434326]
[30.03827286 284.60452271]
[44.73226547 281.57836914]
[59.54355240 279.19158936]
[74.44432831 277.44866943]
[89.40661621 276.35287476]
[88.96000671 261.35952759]
[88.51340485 246.36618042]
[88.06679535 231.37283325]
[87.62019348 216.37947083]
[85.67471313 214.36125183]
[84.41145325 211.45079041]
[84.17426300 207.90408325]
[85.20805359 204.09674072]
[87.62019348 200.48626709]
[88.06679535 185.49291992]
[88.51340485 170.49957275]
[85.94853210 166.47085571]
[85.88724518 160.78814697]
[89.20313263 155.06831360]
[90.09594727 140.09490967]
[90.98876190 125.12150574]
[91.88158417 110.14810181]
[92.32818604 95.15474701]
[92.32818604 80.15474701]
[92.32818604 65.15474701]
[92.32818604 50.15475082]
[84.59088898 36.35457993]
[92.32818604 23.62730598]
[84.59088898 9.82713413]
[92.32818604 -2.90013790]
[92.32818604 -17.90013695]
[92.32818604 -32.90013885]
[78.27099609 -38.68494034]
[67.50112915 -49.41239166]
[61.66089630 -63.44664383]
[61.64089966 -78.64756775]
[67.44418335 -92.69712830]
[78.18579865 -103.45288086]
[92.22772217 -109.27464294]
[107.42865753 -109.27464294]
[121.47057343 -103.45288086]
[132.21218872 -92.69712830]
[138.01547241 -78.64756775]
[137.99548340 -63.44664383]
[132.15524292 -49.41239166]
[121.38537598 -38.68494034]
[107.32818604 -32.90013885]
[107.32818604 -17.90013695]
[107.32818604 -2.90013790]
[115.06549072 9.82713413]
[107.32818604 23.62730598]
[115.06549072 36.35457993]
[107.32818604 50.15475082]
[107.32818604 65.15474701]
[107.32818604 80.15474701]
[107.32818604 95.15474701]
[109.29293823 97.48483276]
[110.45328522 100.58129883]
[110.52375031 104.14759827]
[109.33238983 107.78585052]
[106.85498810 111.04091644]
[105.96217346 126.01432037]
[105.06935120 140.98773193]
[104.17653656 155.96113586]
[103.50675201 170.94616699]
[103.06015015 185.93952942]
[102.61354065 200.93287659]
[102.61354065 215.93287659]
[103.06015015 230.92622375]
[103.50675201 245.91957092]
[103.95336151 260.91293335]
[104.39996338 275.90628052]
[119.40094757 276.10955811]
[134.37904358 276.96249390]
[149.30613708 278.46343994]
[164.15419006 280.60961914]
[178.89535522 283.39697266]
[193.50192261 286.82028198]
[207.94648743 290.87310791]
[222.20191956 295.54785156]
[236.24148560 300.83575439]
[250.03878784 306.72683716]
[263.56796265 313.21011353]
[276.80355835 320.27334595]
[289.72079468 327.90328979]
[302.29537964 336.08566284]
[314.50369263 344.80502319]
[326.32284546 354.04510498]
[337.73062134 363.78845215]
[348.70562744 374.01684570]
[359.22726440 384.71109009]
[369.27575684 395.85104370]
[378.83221436 407.41583252]
[387.87875366 419.38375854]
[396.39837646 431.73233032]
[404.37506104 444.43835449]
[411.79385376 457.47799683]
[418.64080811 470.82678223]
[424.90310669 484.45965576]
[430.56893921 498.35098267]
[435.62771606 512.47473145]
[440.06991577 526.80432129]
[443.88720703 541.31292725]
[447.07241821 555.97320557]
[449.61959839 570.75781250]
[451.52389526 585.63879395]
[452.78179932 600.58831787]
[453.39093018 615.57830811]
[453.35012817 630.58062744]
[452.65948486 645.56707764]
[451.32028198 660.50958252]
[449.33508301 675.38000488]
[446.70755005 690.15045166]
[443.44262695 704.79327393]
[439.54650879 719.28088379]
[435.02642822 733.58612061]
[429.89089966 747.68212891]
[424.14959717 761.54241943]
[417.81326294 775.14099121]
[410.89379883 788.45233154]
[403.40417480 801.45147705]
[395.35852051 814.11395264]
[386.77185059 826.41595459]
[377.66036987 838.33453369]
[368.04113770 849.84716797]
[357.93218994 860.93231201]
[347.35256958 871.56915283]
[336.32208252 881.73773193]
[324.86148071 891.41888428]
[312.99224854 900.59454346]
[300.73669434 909.24737549]
[288.11779785 917.36120605]
[275.15927124 924.92083740]
[261.88543701 931.91198730]
[248.32121277 938.32153320]
[234.49205017 944.13751221]
[220.42395020 949.34893799]
[206.14329529 953.94610596]
[191.67689514 957.92034912]
[177.05192566 961.26416016]
[162.29583740 963.97125244]
[147.43632507 966.03668213]
[132.50129700 967.45642090]
[117.51877594 968.22784424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[80 133]
[81 132]
[82 131]
[85 130]
[86 129]
[87 128]
[88 127]
[89 122]
[90 121]
[91 120]
[92 119]
[94 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
