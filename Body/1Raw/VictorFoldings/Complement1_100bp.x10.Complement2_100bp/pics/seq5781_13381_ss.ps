%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[68.70265961 704.91180420]
[53.88648987 707.31567383]
[38.91584015 708.40069580]
[23.90787888 708.15838623]
[8.98006535 706.59057617]
[-5.75076675 703.70953369]
[-20.16932678 699.53790283]
[-34.16276932 694.10821533]
[-47.62157440 687.46307373]
[-60.44040298 679.65441895]
[-72.51893616 670.74334717]
[-83.76263428 660.79968262]
[-94.08349609 649.90118408]
[-103.40075684 638.13311768]
[-111.64147949 625.58770752]
[-118.74118805 612.36303711]
[-124.64429474 598.56262207]
[-129.30461121 584.29455566]
[-132.68566895 569.67034912]
[-134.76100159 554.80462646]
[-135.51435852 539.81359863]
[-134.93983459 524.81469727]
[-133.04196167 509.92526245]
[-129.83555603 495.26181030]
[-125.34574127 480.93911743]
[-119.60764313 467.06930542]
[-112.66616821 453.76089478]
[-104.57565308 441.11807251]
[-95.39940643 429.23977661]
[-85.20925903 418.21893311]
[-74.08495331 408.14187622]
[-62.11355972 399.08740234]
[-49.38877106 391.12640381]
[-36.01017761 384.32119751]
[-22.08248901 378.72503662]
[-7.71470737 374.38171387]
[6.98071671 371.32522583]
[21.88876915 369.57946777]
[36.89277267 369.15817261]
[51.87529755 370.06457520]
[54.10041428 355.23052979]
[56.32553101 340.39648438]
[58.55064774 325.56243896]
[44.96249008 319.30630493]
[33.67636871 309.46481323]
[25.61256027 296.82913208]
[21.43177795 282.41864014]
[21.48105431 267.39886475]
[25.76494408 252.98706055]
[33.94445801 240.35362244]
[45.36389160 230.52703857]
[59.10335541 224.31018066]
[74.05289459 222.21463013]
[76.27800751 207.38058472]
[78.50312805 192.54655457]
[80.72824097 177.71250916]
[82.95336151 162.87846375]
[85.17848206 148.04441833]
[79.41475677 134.31019592]
[89.11359406 121.81046295]
[91.33870697 106.97642517]
[78.66375732 114.99799347]
[63.99947357 111.84223175]
[55.74622726 99.31689453]
[58.63185501 84.59707642]
[71.00333405 76.11494446]
[85.77371979 78.72945404]
[94.48165131 90.94197845]
[98.02132416 76.36560059]
[101.56099701 61.78922653]
[105.10066223 47.21284866]
[108.64033508 32.63647461]
[104.37808990 17.40020752]
[114.90023804 6.85820866]
[118.43991089 -7.71816683]
[104.46721649 -2.26253414]
[91.41407013 -9.65275955]
[88.90277100 -24.44104385]
[98.78453827 -35.72601318]
[113.77491760 -35.18880844]
[122.82321930 -23.22705650]
[127.43722534 -37.49979019]
[132.05123901 -51.77252197]
[136.66523743 -66.04525757]
[141.27925110 -80.31799316]
[145.89326477 -94.59072113]
[132.15800476 -100.65263367]
[119.11885071 -108.09471130]
[106.91402435 -116.83806610]
[95.67289734 -126.79000092]
[85.51463318 -137.84503174]
[76.54692078 -149.88597107]
[68.86481476 -162.78517151]
[62.54975510 -176.40588379]
[57.66868210 -190.60374451]
[54.27334213 -205.22824097]
[52.39972305 -220.12432861]
[52.06769180 -235.13410950]
[53.28076172 -250.09849548]
[56.02607346 -264.85882568]
[60.27453232 -279.25863647]
[65.98109436 -293.14529419]
[73.08527374 -306.37158203]
[81.51176453 -318.79730225]
[91.17122650 -330.29071045]
[101.96127319 -340.73001099]
[113.76753235 -350.00451660]
[126.46483612 -358.01589966]
[139.91859436 -364.67926025]
[153.98619080 -369.92398071]
[168.51849365 -373.69439697]
[183.36145020 -375.95059204]
[198.35772705 -376.66867065]
[213.34835815 -375.84094238]
[228.17442322 -373.47625732]
[242.67877197 -369.59963989]
[256.70764160 -364.25219727]
[270.11230469 -357.49063110]
[282.75067139 -349.38659668]
[294.48876953 -340.02600098]
[305.20220947 -329.50805664]
[314.77734375 -317.94430542]
[323.11273193 -305.45730591]
[330.11999512 -292.17941284]
[335.72485352 -278.25140381]
[339.86788940 -263.82089233]
[342.50518799 -249.04087830]
[343.60876465 -234.06803894]
[343.16699219 -219.06108093]
[341.18447876 -204.17907715]
[337.68228149 -189.57981873]
[332.69747925 -175.41802979]
[326.28298950 -161.84385681]
[318.50674438 -149.00119019]
[309.45123291 -137.02615356]
[299.21237183 -126.04571533]
[287.89877319 -116.17625427]
[275.63031006 -107.52239227]
[262.53707886 -100.17588043]
[248.75787354 -94.21457672]
[234.43872070 -89.70169067]
[219.73146057 -86.68504333]
[204.79194641 -85.19663239]
[189.77859497 -85.25222778]
[174.85052490 -86.85123444]
[160.16600037 -89.97671509]
[155.55198669 -75.70397949]
[150.93797302 -61.43124771]
[146.32397461 -47.15851593]
[141.70996094 -32.88578033]
[137.09594727 -18.61304665]
[133.01628113 -4.17849445]
[129.47660828 10.39788055]
[133.99203491 24.59154701]
[123.21671295 36.17614746]
[119.67704010 50.75252151]
[116.13736725 65.32889557]
[112.59769440 79.90527344]
[109.05802155 94.48165131]
[106.17275238 109.20153809]
[103.94763184 124.03558350]
[109.55220032 138.83084106]
[100.01251984 150.26953125]
[97.78740692 165.10357666]
[95.56228638 179.93762207]
[93.33717346 194.77166748]
[91.11205292 209.60571289]
[88.88694000 224.43975830]
[102.56371307 230.82925415]
[113.87447357 240.80368042]
[121.90821838 253.54824829]
[126.02110291 268.02554321]
[125.88803101 283.05999756]
[121.52833557 297.43319702]
[113.30352020 309.98281860]
[101.88729095 319.69650269]
[88.21038055 325.79351807]
[73.38468933 327.78756714]
[71.15957642 342.62158203]
[68.93445587 357.45562744]
[66.70934296 372.28967285]
[81.29842377 375.81903076]
[95.51847839 380.62399292]
[109.25823212 386.66693115]
[122.41013336 393.90051270]
[134.87124634 402.26821899]
[146.54406738 411.70446777]
[157.33721924 422.13546753]
[167.16622925 433.47952271]
[175.95417786 445.64791870]
[183.63229370 458.54537964]
[190.14045715 472.07095337]
[195.42776489 486.11880493]
[199.45281982 500.57897949]
[202.18411255 515.33831787]
[203.60026550 530.28125000]
[203.69021606 545.29089355]
[202.45324707 560.24975586]
[199.89904785 575.04077148]
[196.04759216 589.54815674]
[190.92903137 603.65832520]
[184.58343506 617.26098633]
[177.06045532 630.24951172]
[168.41897583 642.52233887]
[158.72662354 653.98339844]
[148.05926514 664.54302979]
[136.50038147 674.11846924]
[124.14044189 682.63488770]
[111.07617950 690.02563477]
[97.40984344 696.23278809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 181]
[41 180]
[42 179]
[43 178]
[53 168]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[60 161]
[61 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[74 153]
[75 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
