%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[171.68272400 474.11746216]
[163.83366394 460.91564941]
[163.65313721 445.55780029]
[171.18968201 432.17514038]
[184.41603088 424.36749268]
[184.19270325 409.36917114]
[183.96937561 394.37081909]
[183.74604797 379.37249756]
[183.52272034 364.37414551]
[183.29939270 349.37579346]
[175.37345886 336.76513672]
[182.90444946 322.85131836]
[182.68112183 307.85296631]
[179.46784973 293.20117188]
[173.39401245 279.48590088]
[167.32017517 265.77066040]
[155.09201050 257.26644897]
[156.57862854 241.51524353]
[150.50479126 227.79998779]
[144.43095398 214.08471680]
[138.35711670 200.36944580]
[121.72512054 201.16467285]
[106.02883911 195.49822998]
[93.68580627 184.21284485]
[86.60859680 169.01893616]
[85.90853119 152.23544312]
[91.72120667 136.43591309]
[103.18143463 124.05386353]
[96.70193481 110.52552032]
[89.33150482 123.58985138]
[74.54704285 126.12357330]
[63.24710846 116.25891113]
[63.76159286 101.26773834]
[75.71123505 92.20098114]
[90.28591919 95.74127960]
[84.83056641 81.76847839]
[79.37520599 67.79568481]
[73.91985321 53.82288742]
[61.69341278 43.78173447]
[64.27207184 29.11204529]
[58.81671524 15.13924694]
[57.22253036 30.05429268]
[51.35810089 43.86039352]
[41.73075867 55.36318970]
[29.17336273 63.56756592]
[14.77225494 67.76377106]
[-0.22672445 67.58877563]
[-14.52601433 63.05773926]
[-26.88858223 54.56262970]
[-36.24494171 42.83835983]
[-41.78567886 28.89919662]
[-43.03145981 13.95101738]
[-39.87451172 -0.71300918]
[-32.58794403 -13.82429981]
[-21.80211639 -24.24859619]
[-8.45011425 -31.08409309]
[6.31298447 -33.73944855]
[21.21002197 -31.98495293]
[34.95225906 -25.97238350]
[46.35084915 -16.22189140]
[54.41826630 -3.58019853]
[53.08003235 -18.52038383]
[44.14239502 -31.57523727]
[50.71337128 -44.94204712]
[49.37513733 -59.88222885]
[48.03690338 -74.82241821]
[46.47637939 -89.74102020]
[44.69391251 -104.63473511]
[42.91144943 -119.52845764]
[41.12898254 -134.42216492]
[39.34651566 -149.31588745]
[30.02414894 -162.09884644]
[36.19423294 -175.65538025]
[21.18021202 -175.49270630]
[6.23662138 -176.95433044]
[-8.46133518 -180.02308655]
[-22.74133110 -184.66302490]
[-36.43593979 -190.81971741]
[-49.38460159 -198.42098999]
[-61.43550110 -207.37773132]
[-72.44734192 -217.58491516]
[-82.29101562 -228.92286682]
[-90.85112000 -241.25866699]
[-98.02728271 -254.44767761]
[-103.73537445 -268.33526611]
[-107.90846252 -282.75860596]
[-110.49762726 -297.54858398]
[-111.47250366 -312.53179932]
[-110.82167053 -327.53256226]
[-108.55274963 -342.37506104]
[-104.69235229 -356.88522339]
[-99.28573608 -370.89291382]
[-92.39628601 -384.23391724]
[-84.10478210 -396.75186157]
[-74.50843811 -408.29989624]
[-63.71976471 -418.74267578]
[-51.86525345 -427.95776367]
[-39.08389282 -435.83712769]
[-25.52554131 -442.28833008]
[-11.34915733 -447.23580933]
[3.27904415 -450.62149048]
[18.18755722 -452.40573120]
[33.20158386 -452.56759644]
[48.14509583 -451.10516357]
[62.84288788 -448.03561401]
[77.12263489 -443.39492798]
[90.81690979 -437.23748779]
[103.76516724 -429.63549805]
[115.81558228 -420.67813110]
[126.82687378 -410.47033691]
[136.66993713 -399.13186646]
[145.22938538 -386.79559326]
[152.40483093 -373.60620117]
[158.11218262 -359.71832275]
[162.28448486 -345.29476929]
[164.87284851 -330.50463867]
[165.84692383 -315.52136230]
[165.19528198 -300.52062988]
[162.92556763 -285.67825317]
[159.06439209 -271.16830444]
[153.65701294 -257.16091919]
[146.76684570 -243.82026672]
[138.47467041 -231.30279541]
[128.87770081 -219.75526428]
[118.08847046 -209.31304932]
[106.23346710 -200.09860229]
[93.45168304 -192.21994019]
[79.89298248 -185.76945496]
[65.71633148 -180.82275391]
[51.08794785 -177.43783569]
[60.28282166 -165.72018433]
[54.24023438 -151.09835815]
[56.02269745 -136.20463562]
[57.80516434 -121.31092072]
[59.58763123 -106.41720581]
[61.37009811 -91.52348328]
[64.50421143 -87.91983032]
[65.40780640 -82.30907440]
[62.97708893 -76.16065216]
[64.31532288 -61.22046280]
[65.65355682 -46.28028107]
[74.49547577 -34.29404831]
[68.02021790 -19.85861778]
[69.35845184 -4.91843271]
[72.78951263 9.68388939]
[78.24487305 23.65668678]
[90.08110809 32.69841003]
[87.89264679 48.36752701]
[93.34800720 62.34032822]
[98.80335999 76.31312561]
[104.25872040 90.28591919]
[110.23028564 104.04602814]
[116.70977783 117.57437134]
[130.06965637 116.10038757]
[143.21136475 118.81018829]
[154.85881042 125.42632294]
[163.88548279 135.29272461]
[169.42327881 147.43977356]
[170.94607544 160.67955017]
[168.31961060 173.72198486]
[161.81323242 185.30064392]
[152.07238770 194.29560852]
[158.14622498 208.01087952]
[164.22006226 221.72615051]
[170.29388428 235.44140625]
[182.95649719 244.92660522]
[181.03544617 259.69680786]
[187.10928345 273.41207886]
[193.18310547 287.12734985]
[193.79414368 272.13980103]
[197.56976318 257.62274170]
[204.33821106 244.23663330]
[213.79156494 232.59042358]
[225.49975586 223.21395874]
[238.93014526 216.53378296]
[253.47174072 212.85382080]
[268.46298218 212.34147644]
[283.22189331 215.02005005]
[297.07702637 220.76770020]
[309.39804077 229.32293701]
[319.62448120 240.29655457]
[327.29104614 253.18933105]
[332.04898071 267.41473389]
[333.68182373 282.32559204]
[332.11532593 297.24359131]
[327.42071533 311.48999023]
[319.81158447 324.41674805]
[309.63406372 335.43576050]
[297.35122681 344.04571533]
[283.52178955 349.85494995]
[268.77496338 352.59915161]
[253.78157043 352.15350342]
[239.22375488 348.53826904]
[225.76377869 341.91790771]
[214.01399231 332.59359741]
[204.50892639 320.98956299]
[197.67945862 307.62963867]
[197.90278625 322.62799072]
[205.84469604 336.31143188]
[198.29772949 349.15246582]
[198.52105713 364.15081787]
[198.74438477 379.14916992]
[198.96771240 394.14749146]
[199.19104004 409.14584351]
[199.41436768 424.14416504]
[212.86732483 431.55453491]
[220.79899597 444.70690918]
[221.07580566 460.06329346]
[213.62329102 473.49295044]
[200.44613647 481.38336182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[12 198]
[13 197]
[14 169]
[15 168]
[16 167]
[18 165]
[19 164]
[20 163]
[21 162]
[28 153]
[29 152]
[35 151]
[36 150]
[37 149]
[38 148]
[40 146]
[41 145]
[61 144]
[62 143]
[64 141]
[65 140]
[66 139]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[73 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
