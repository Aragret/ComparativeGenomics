%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[81.21820068 608.92602539]
[66.81923676 613.16204834]
[52.11290741 616.16168213]
[37.20516968 617.90325928]
[22.20343781 618.37432861]
[7.21580219 617.57141113]
[-7.64974928 615.50036621]
[-22.28610802 612.17608643]
[-36.58781815 607.62255859]
[-50.45183182 601.87249756]
[-63.77825928 594.96740723]
[-76.47107697 586.95703125]
[-88.43883514 577.89910889]
[-99.59530640 567.85882568]
[-109.86010742 556.90856934]
[-119.15927124 545.12725830]
[-127.42580414 532.59973145]
[-134.60014343 519.41632080]
[-140.63058472 505.67196655]
[-145.47369385 491.46569824]
[-149.09457397 476.89987183]
[-151.46711731 462.07946777]
[-152.57426453 447.11120605]
[-152.40800476 432.10302734]
[-150.96954346 417.16296387]
[-148.26925659 402.39874268]
[-144.32659912 387.91671753]
[-139.16996765 373.82122803]
[-132.83651733 360.21383667]
[-125.37189484 347.19256592]
[-116.82987213 334.85125732]
[-107.27199554 323.27883911]
[-96.76714325 312.55868530]
[-85.39098358 302.76803589]
[-73.22550201 293.97741699]
[-60.35834503 286.25018311]
[-46.88222122 279.64202881]
[-32.89422989 274.20053101]
[-18.49515533 269.96490479]
[-3.78874493 266.96566772]
[11.11903763 265.22445679]
[26.12078094 264.75378418]
[41.10839462 265.55703735]
[55.97389221 267.62847900]
[59.29615402 253.00102234]
[62.61841202 238.37356567]
[65.94067383 223.74609375]
[59.85439682 207.28633118]
[72.47682953 193.87902832]
[75.58094025 179.20372009]
[78.68505096 164.52842712]
[81.78916168 149.85311890]
[84.89327240 135.17781067]
[87.99738312 120.50251007]
[91.10149384 105.82720947]
[93.10550690 90.96168518]
[93.99832153 75.98827362]
[94.89113617 61.01486969]
[95.78395081 46.04146576]
[93.44613647 41.37437820]
[93.16082764 36.74060059]
[94.57164001 32.91638184]
[97.06572723 30.42402458]
[98.62625122 15.50541973]
[100.18677521 0.58681536]
[101.74729919 -14.33178902]
[86.97365570 -16.96566582]
[72.42858124 -20.65871429]
[58.18791199 -25.39167976]
[44.32588196 -31.13988876]
[30.91476822 -37.87337112]
[18.02448845 -45.55702209]
[5.72225094 -54.15077972]
[-5.92780828 -63.60984039]
[-16.86495018 -73.88489532]
[-27.03215408 -84.92236328]
[-36.37640762 -96.66470337]
[-44.84899902 -109.05070496]
[-52.40575790 -122.01577759]
[-59.00727844 -135.49234009]
[-64.61914825 -149.41012573]
[-69.21210480 -163.69656372]
[-72.76220703 -178.27719116]
[-75.25094604 -193.07597351]
[-76.66534424 -208.01576233]
[-76.99802399 -223.01866150]
[-76.24726105 -238.00645447]
[-74.41696167 -252.90101624]
[-71.51667786 -267.62466431]
[-67.56151581 -282.10067749]
[-62.57210159 -296.25354004]
[-56.57445145 -310.00946045]
[-49.59983444 -323.29678345]
[-41.68461227 -336.04617310]
[-32.87004852 -348.19119263]
[-23.20210457 -359.66848755]
[-12.73118114 -370.41824341]
[-1.51187038 -380.38442993]
[10.39733505 -389.51507568]
[22.93434525 -397.76257324]
[36.03379822 -405.08392334]
[49.62739944 -411.44094849]
[63.64427185 -416.80050659]
[78.01134491 -421.13467407]
[92.65370941 -424.42083740]
[107.49503326 -426.64187622]
[122.45793152 -427.78619385]
[137.46438599 -427.84783936]
[152.43618774 -426.82647705]
[167.29525757 -424.72744751]
[181.96412659 -421.56170654]
[196.36631775 -417.34573364]
[210.42674255 -412.10150146]
[224.07211304 -405.85635376]
[237.23127747 -398.64288330]
[249.83563232 -390.49865723]
[261.81945801 -381.46618652]
[273.12023926 -371.59249878]
[283.67913818 -360.92913818]
[293.44104004 -349.53164673]
[302.35510254 -337.45944214]
[310.37478638 -324.77551270]
[317.45834351 -311.54595947]
[323.56881714 -297.83975220]
[328.67431641 -283.72836304]
[332.74829102 -269.28533936]
[335.76943970 -254.58601379]
[337.72204590 -239.70700073]
[338.59591675 -224.72587585]
[338.38650513 -209.72074890]
[337.09487915 -194.76985168]
[334.72781372 -179.95111084]
[331.29763794 -165.34182739]
[326.82220459 -151.01812744]
[321.32485962 -137.05470276]
[314.83428955 -123.52436829]
[307.38430786 -110.49764252]
[299.01376343 -98.04245758]
[289.76626587 -86.22373962]
[279.69009399 -75.10311127]
[268.83773804 -64.73854828]
[257.26577759 -55.18409348]
[245.03457642 -46.48955536]
[232.20785522 -38.70026016]
[218.85250854 -31.85682487]
[205.03817749 -25.99492645]
[190.83686829 -21.14512253]
[176.32263184 -17.33270264]
[161.57112122 -14.57753944]
[146.65927124 -12.89400005]
[131.66479492 -12.29086113]
[116.66590118 -12.77126598]
[115.10537720 2.14733839]
[113.54485321 17.06594276]
[111.98433685 31.98454857]
[110.75735474 46.93428040]
[109.86454010 61.90768814]
[108.97172546 76.88109589]
[108.07891083 91.85449982]
[117.63346863 80.29117584]
[131.65480042 74.96181488]
[146.47778320 77.25949860]
[158.22770691 86.58361816]
[163.83317566 100.49687195]
[161.82893372 115.36237335]
[152.73889160 127.29430389]
[138.93916321 133.17370605]
[124.03694916 131.46368408]
[111.92766571 122.61127472]
[105.77679443 108.93132019]
[102.67268372 123.60662079]
[99.56857300 138.28192139]
[96.46446228 152.95722961]
[93.36035156 167.63253784]
[90.25624084 182.30783081]
[87.15213013 196.98313904]
[93.52072144 208.19937134]
[90.63317871 220.35855103]
[80.56813049 227.06835938]
[77.24587250 241.69581604]
[73.92361450 256.32327271]
[70.60135651 270.95074463]
[84.90318298 275.50393677]
[98.76734161 281.25363159]
[112.09394836 288.15835571]
[124.78697205 296.16839600]
[136.75497437 305.22604370]
[147.91169739 315.26602173]
[158.17677307 326.21600342]
[167.47624207 337.99707031]
[175.74310303 350.52438354]
[182.91778564 363.70761108]
[188.94857788 377.45181274]
[193.79205322 391.65795898]
[197.41331482 406.22369385]
[199.78623962 421.04406738]
[200.89376831 436.01226807]
[200.72789001 451.02047729]
[199.28982544 465.96054077]
[196.58992004 480.72482300]
[192.64762878 495.20697021]
[187.49136353 509.30261230]
[181.15827942 522.91015625]
[173.69398499 535.93164062]
[165.15228271 548.27313232]
[155.59471130 559.84582520]
[145.09011841 570.56622314]
[133.71421814 580.35717773]
[121.54896545 589.14813232]
[108.68200684 596.87567139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 182]
[45 181]
[46 180]
[47 179]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[56 159]
[57 158]
[58 157]
[59 156]
[63 155]
[64 154]
[65 153]
[66 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
