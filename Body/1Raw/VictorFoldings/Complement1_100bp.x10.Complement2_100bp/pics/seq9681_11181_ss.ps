%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[66.77761078 817.87567139]
[51.79886627 817.00469971]
[36.89339447 815.28771973]
[22.10893250 812.73016357]
[7.49284172 809.34033203]
[-6.90805674 805.12902832]
[-21.04763222 800.10968018]
[-34.88059235 794.29846191]
[-48.36262512 787.71392822]
[-61.45054626 780.37719727]
[-74.10242462 772.31176758]
[-86.27774048 763.54345703]
[-97.93748474 754.10040283]
[-109.04430389 744.01281738]
[-119.56263733 733.31298828]
[-129.45877075 722.03521729]
[-138.70101929 710.21569824]
[-147.25976562 697.89215088]
[-155.10760498 685.10418701]
[-162.21939087 671.89270020]
[-168.57234192 658.29998779]
[-174.14610291 644.36962891]
[-178.92283630 630.14630127]
[-182.88722229 615.67547607]
[-186.02656555 601.00354004]
[-188.33082581 586.17749023]
[-189.79260254 571.24481201]
[-190.40721130 556.25335693]
[-190.17269897 541.25115967]
[-189.08981323 526.28625488]
[-187.16201782 511.40655518]
[-184.39547729 496.65979004]
[-180.79908752 482.09313965]
[-176.38432312 467.75329590]
[-171.16537476 453.68618774]
[-165.15892029 439.93685913]
[-158.38421631 426.54937744]
[-150.86297607 413.56661987]
[-142.61926270 401.03018188]
[-133.67950439 388.98019409]
[-124.07234955 377.45529175]
[-113.82854462 366.49237061]
[-102.98092651 356.12652588]
[-91.56422424 346.39102173]
[-79.61502838 337.31701660]
[-67.17160034 328.93356323]
[-54.27380753 321.26751709]
[-40.96296692 314.34344482]
[-27.28171158 308.18353271]
[-13.27387428 302.80749512]
[1.01567769 298.23257446]
[15.54117012 294.47341919]
[30.25607300 291.54205322]
[45.11324692 289.44790649]
[60.06510544 288.19763184]
[75.06375122 287.79528809]
[75.51035309 272.80194092]
[75.95696259 257.80859375]
[76.40356445 242.81523132]
[76.85017395 227.82188416]
[65.21823883 237.29280090]
[50.28286362 235.90196228]
[40.59969711 224.44612122]
[41.71570206 209.48770142]
[52.99158478 199.59555054]
[67.96800232 200.43635559]
[78.06545258 211.52757263]
[79.84792328 196.63385010]
[81.63038635 181.74012756]
[74.40287781 172.04014587]
[75.76599121 159.61735535]
[85.53113556 151.19093323]
[87.53514862 136.32540894]
[89.53916168 121.45987701]
[91.54317474 106.59434509]
[91.31984711 91.59600830]
[88.87412262 76.79673767]
[78.99026489 64.44279480]
[84.54885864 50.62428284]
[74.66500092 38.27033615]
[80.22360229 24.45182610]
[77.77787018 9.65255547]
[75.33214569 -5.14671564]
[72.88642120 -19.94598579]
[66.56153870 -6.34466600]
[54.69653320 2.83256698]
[39.94207001 5.53549528]
[25.59433556 1.16027808]
[14.85865116 -9.31564999]
[10.13339520 -23.55194092]
[12.47420216 -38.36816788]
[21.35812950 -50.45435333]
[34.80048752 -57.11040497]
[49.79821396 -56.84934998]
[63.00078201 -49.72950745]
[71.45871735 -37.34144592]
[71.45871735 -52.34144592]
[71.45871735 -67.34144592]
[71.45871735 -82.34144592]
[57.68484497 -88.91741180]
[48.13491821 -100.82378387]
[44.70507812 -115.69654083]
[48.07632446 -130.58268738]
[57.57928848 -142.52658081]
[71.32715607 -149.15672302]
[86.59027100 -149.15672302]
[100.33814240 -142.52658081]
[109.84110260 -130.58268738]
[113.21234894 -115.69654083]
[109.78250885 -100.82378387]
[100.23258209 -88.91741180]
[86.45871735 -82.34144592]
[86.45871735 -67.34144592]
[86.45871735 -52.34144592]
[86.45871735 -37.34144592]
[87.68569183 -22.39171410]
[90.13141632 -7.59244299]
[92.57714081 7.20682764]
[95.02287292 22.00609779]
[104.73179626 33.30149841]
[99.34812927 48.17855453]
[109.05705261 59.47395706]
[103.67339325 74.35101318]
[106.11911774 89.15028381]
[110.68190765 74.86109161]
[119.03781891 62.40401459]
[130.52787781 52.76147079]
[144.24591064 46.69391251]
[159.11009216 44.67984772]
[173.94813538 46.87811661]
[187.58985901 53.11535645]
[198.95944214 62.89966965]
[207.16020203 75.45942688]
[211.54541016 89.80410767]
[211.76922607 104.80244446]
[207.81399536 119.27158356]
[199.99165344 132.07044983]
[188.91909790 142.18966675]
[175.46954346 148.83117676]
[160.70370483 151.47120667]
[145.78605652 149.90156555]
[131.89306641 144.24604797]
[120.12040710 134.95063782]
[111.39651489 122.74844360]
[106.40870667 108.59835815]
[104.40469360 123.46389008]
[102.40068054 138.32942200]
[100.39665985 153.19494629]
[107.78408051 170.06230164]
[96.52410126 183.52259827]
[94.74163818 198.41632080]
[92.95917511 213.31002808]
[91.84352112 228.26849365]
[91.39691925 243.26184082]
[90.95030975 258.25518799]
[90.50370789 273.24853516]
[90.05709839 288.24188232]
[105.00520325 289.53625488]
[119.85613251 291.67425537]
[134.56231689 294.64901733]
[149.07666016 298.45101929]
[163.35264587 303.06808472]
[177.34455872 308.48544312]
[191.00758362 314.68569946]
[204.29792786 321.64901733]
[217.17304993 329.35308838]
[229.59167480 337.77322388]
[241.51405334 346.88244629]
[252.90197754 356.65161133]
[263.71896362 367.04940796]
[273.93035889 378.04251099]
[283.50347900 389.59573364]
[292.40762329 401.67202759]
[300.61431885 414.23275757]
[308.09722900 427.23764038]
[314.83239746 440.64505005]
[320.79824829 454.41204834]
[325.97567749 468.49450684]
[330.34808350 482.84729004]
[333.90148926 497.42449951]
[336.62448120 512.17938232]
[338.50836182 527.06469727]
[339.54708862 542.03271484]
[339.73733521 557.03552246]
[339.07849121 572.02514648]
[337.57266235 586.95343018]
[335.22467041 601.77258301]
[332.04202271 616.43518066]
[328.03497314 630.89428711]
[323.21627808 645.10345459]
[317.60144043 659.01727295]
[311.20840454 672.59118652]
[304.05767822 685.78161621]
[296.17211914 698.54638672]
[287.57705688 710.84460449]
[278.29995728 722.63684082]
[268.37060547 733.88537598]
[257.82073975 744.55407715]
[246.68418884 754.60888672]
[234.99662781 764.01745605]
[222.79550171 772.74981689]
[210.11987305 780.77789307]
[197.01036072 788.07592773]
[183.50895691 794.62066650]
[169.65892029 800.39105225]
[155.50459290 805.36865234]
[141.09132385 809.53747559]
[126.46529388 812.88415527]
[111.67334747 815.39801025]
[96.76287842 817.07104492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[67 152]
[68 151]
[69 150]
[72 148]
[73 147]
[74 146]
[75 145]
[76 124]
[77 123]
[79 121]
[81 119]
[82 118]
[83 117]
[84 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
