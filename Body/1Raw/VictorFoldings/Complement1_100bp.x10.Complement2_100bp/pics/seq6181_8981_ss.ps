%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[83.55103302 872.93225098]
[68.61804962 871.47448730]
[53.79029465 869.18176270]
[39.11442184 866.06121826]
[24.63660812 862.12268066]
[10.40240765 857.37860107]
[-3.54339576 851.84381104]
[-17.15692329 845.53582764]
[-30.39533806 838.47442627]
[-43.21699142 830.68182373]
[-55.58153915 822.18261719]
[-67.45008087 813.00341797]
[-78.78526306 803.17327881]
[-89.55143738 792.72296143]
[-99.71471405 781.68542480]
[-109.24312592 770.09545898]
[-118.10668182 757.98937988]
[-126.27751160 745.40539551]
[-133.72988892 732.38305664]
[-140.44036865 718.96337891]
[-146.38784790 705.18853760]
[-151.55360413 691.10186768]
[-155.92138672 676.74768066]
[-159.47746277 662.17126465]
[-162.21061707 647.41833496]
[-164.11227417 632.53533936]
[-165.17643738 617.56915283]
[-165.39978027 602.56683350]
[-164.78157043 587.57562256]
[-163.32376099 572.64263916]
[-161.03096008 557.81488037]
[-157.91035461 543.13903809]
[-153.97177124 528.66125488]
[-149.22761536 514.42706299]
[-143.69279480 500.48129272]
[-137.38473511 486.86776733]
[-130.32328796 473.62939453]
[-122.53066254 460.80776978]
[-114.03138733 448.44323730]
[-104.85218811 436.57473755]
[-95.02195740 425.23959351]
[-84.57162476 414.47344971]
[-73.53407288 404.31021118]
[-61.94401932 394.78186035]
[-49.83794403 385.91833496]
[-37.25392914 377.74755859]
[-24.23156929 370.29522705]
[-10.81184196 363.58480835]
[2.96303272 357.63735962]
[17.04971123 352.47167969]
[31.40387535 348.10394287]
[45.98035812 344.54791260]
[60.73329544 341.81481934]
[75.61627197 339.91320801]
[90.58245850 338.84909058]
[90.35913086 323.85076904]
[90.13580322 308.85241699]
[89.91246796 293.85409546]
[89.68914032 278.85574341]
[81.23049927 270.20834351]
[80.92169952 257.71478271]
[89.47351837 248.05926514]
[89.47351837 233.05926514]
[89.47351837 218.05926514]
[81.14456177 209.28686523]
[81.02180481 196.79011536]
[89.71643829 187.26300049]
[89.93976593 172.26466370]
[90.16309357 157.26632690]
[87.53852081 153.27624512]
[87.39263153 147.59507751]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.16878510 57.49539185]
[94.39211273 42.49705505]
[94.61544037 27.49871635]
[94.83876801 12.50037861]
[94.72710419 -2.49920535]
[94.28049469 -17.49255562]
[93.83389282 -32.48590469]
[84.99837494 -41.88252640]
[84.93506622 -54.37971878]
[93.13249207 -63.27515411]
[92.90916443 -78.27349091]
[92.68583679 -93.27182770]
[92.46250916 -108.27016449]
[76.91782379 -116.46747589]
[67.71293640 -131.33290100]
[67.30699921 -148.72367859]
[75.72164154 -163.84674072]
[90.55989838 -172.57969666]
[89.89011383 -187.56472778]
[89.22032928 -202.54977417]
[75.02994537 -208.07722473]
[64.31922150 -218.90313721]
[58.94384766 -233.15182495]
[59.83515167 -248.35464478]
[66.83870697 -261.87759399]
[78.74109650 -271.37774658]
[93.48017120 -275.20913696]
[108.50228882 -272.70797729]
[121.20478058 -264.30758667]
[129.38685608 -251.46339417]
[131.63093567 -236.40072632]
[127.54821014 -221.72927856]
[117.84603119 -209.99098206]
[104.20536804 -203.21955872]
[104.87515259 -188.23451233]
[105.54493713 -173.24948120]
[117.31891632 -168.66780090]
[126.51940918 -159.94129944]
[131.75529480 -148.34072876]
[132.21655273 -135.57489014]
[127.79932404 -123.53898621]
[119.12666321 -114.03319550]
[107.46084595 -108.49349213]
[107.68417358 -93.49515533]
[107.90750122 -78.49681854]
[108.13082886 -63.49848175]
[117.92936707 -48.93978500]
[108.82723999 -32.93251038]
[109.27384949 -17.93916130]
[109.72045135 -2.94581127]
[112.02226257 -0.27485594]
[113.14473724 3.64370394]
[112.51557159 8.24342728]
[109.83710480 12.72370720]
[109.61377716 27.72204399]
[109.39044952 42.72038269]
[109.16712189 57.71871948]
[111.79169464 61.70879364]
[111.93758392 67.38996887]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[105.16143036 157.48965454]
[104.93810272 172.48799133]
[104.71477509 187.48632812]
[114.05421448 203.35630798]
[104.47351837 218.05926514]
[104.47351837 233.05926514]
[104.47351837 248.05926514]
[114.04821014 263.78845215]
[104.68748474 278.63241577]
[104.91081238 293.63076782]
[105.13414001 308.62908936]
[105.35746765 323.62744141]
[105.58079529 338.62576294]
[120.57202148 339.24380493]
[135.50502014 340.70144653]
[150.33279419 342.99411011]
[165.00868225 346.11453247]
[179.48652649 350.05294800]
[193.72076416 354.79696655]
[207.66661072 360.33160400]
[221.28018188 366.63952637]
[234.51864624 373.70083618]
[247.34036255 381.49331665]
[259.70498657 389.99246216]
[271.57357788 399.17150879]
[282.90884399 409.00161743]
[293.67507935 419.45184326]
[303.83843994 430.48925781]
[313.36694336 442.07922363]
[322.23059082 454.18518066]
[330.40151978 466.76910400]
[337.85400391 479.79138184]
[344.56457520 493.21105957]
[350.51214600 506.98587036]
[355.67800903 521.07244873]
[360.04589844 535.42657471]
[363.60208130 550.00305176]
[366.33535767 564.75592041]
[368.23712158 579.63891602]
[369.30139160 594.60504150]
[369.52484131 609.60736084]
[368.90673828 624.59863281]
[367.44903564 639.53161621]
[365.15634155 654.35937500]
[362.03585815 669.03521729]
[358.09738159 683.51306152]
[353.35333252 697.74731445]
[347.81860352 711.69311523]
[341.51065063 725.30664062]
[334.44931030 738.54510498]
[326.65676880 751.36676025]
[318.15759277 763.73138428]
[308.97848511 775.59991455]
[299.14834595 786.93518066]
[288.69808960 797.70135498]
[277.66061401 807.86468506]
[266.07061768 817.39312744]
[253.96461487 826.25677490]
[241.38066101 834.42761230]
[228.35835266 841.88006592]
[214.93867493 848.59057617]
[201.16384888 854.53808594]
[187.07720947 859.70391846]
[172.72308350 864.07177734]
[158.14662170 867.62786865]
[143.39370728 870.36108398]
[128.51074219 872.26281738]
[113.54456329 873.32702637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[62 149]
[63 148]
[64 147]
[67 145]
[68 144]
[69 143]
[72 142]
[73 141]
[74 140]
[76 138]
[77 137]
[78 134]
[79 133]
[80 132]
[81 131]
[82 127]
[83 126]
[84 125]
[87 123]
[88 122]
[89 121]
[90 120]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
