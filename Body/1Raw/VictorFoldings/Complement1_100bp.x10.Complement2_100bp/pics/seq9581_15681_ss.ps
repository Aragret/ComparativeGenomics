%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[73.94470978 586.01745605]
[64.48412323 574.28027344]
[58.10797501 560.61981201]
[55.18695068 545.83026123]
[55.89088440 530.77142334]
[60.17884827 516.31884766]
[67.80154419 503.31280518]
[78.31580353 492.50936890]
[91.11032867 484.53671265]
[105.44127655 479.85830688]
[104.32563019 464.89987183]
[103.20997620 449.94140625]
[102.09432983 434.98294067]
[95.45709991 448.43463135]
[84.22817993 458.38003540]
[70.07330322 463.34387207]
[55.09227371 462.58975220]
[41.50743103 456.22955322]
[31.33400536 445.20678711]
[26.08116722 431.15661621]
[26.52814102 416.16326904]
[32.60861969 402.45095825]
[43.42060852 392.05377197]
[57.36020279 386.51412964]
[72.35955048 386.65377808]
[86.19359589 392.45199585]
[96.81012726 403.04867554]
[102.63385773 416.86993408]
[104.63787079 402.00442505]
[106.64189148 387.13888550]
[108.64590454 372.27334595]
[106.42420959 365.22454834]
[110.79200745 357.20205688]
[113.01712799 342.36801147]
[115.24224091 327.53396606]
[115.68885040 312.54061890]
[106.84693146 300.55438232]
[113.32218933 286.11895752]
[111.98395538 271.17877197]
[110.53453827 256.24896240]
[108.97401428 241.33035278]
[107.41349030 226.41175842]
[96.35516357 212.78529358]
[103.99289703 196.02980042]
[102.21042633 181.13609314]
[100.42796326 166.24237061]
[98.64549255 151.34864807]
[96.86302948 136.45494080]
[95.08056641 121.56121826]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[87.67640686 46.48410797]
[78.73876953 33.42925262]
[85.30974579 20.06244659]
[73.46538544 9.94568062]
[72.32105255 -5.22485495]
[82.03883362 -16.45429420]
[80.70059967 -31.39447784]
[79.36236572 -46.33466339]
[77.69082642 -61.24123764]
[75.68681335 -76.10676575]
[73.68280029 -90.97229767]
[62.65112305 -80.80853271]
[47.80410385 -82.94536591]
[40.08641434 -95.80760956]
[45.18724823 -109.91368866]
[59.34645844 -114.86512756]
[72.12550354 -107.01329803]
[71.23268890 -121.98670959]
[70.33987427 -136.96011353]
[69.44705200 -151.93351746]
[62.08274078 -138.86573792]
[49.82753372 -130.21646118]
[35.04772949 -127.65573120]
[20.59707069 -131.67797852]
[9.26575756 -141.50657654]
[3.24168634 -155.24377441]
[3.68801212 -170.23713684]
[10.51855659 -183.59167480]
[22.41444778 -192.72883606]
[37.07877350 -195.88438416]
[51.68008804 -192.44903564]
[63.39910126 -183.08609009]
[69.97335052 -169.60214233]
[71.75581360 -184.49586487]
[65.71322632 -199.11769104]
[74.90810394 -210.83535767]
[76.69056702 -225.72906494]
[78.47303009 -240.62278748]
[80.25550079 -255.51651001]
[82.03796387 -270.41021729]
[67.78518677 -275.26327515]
[54.85307312 -282.97390747]
[43.80696106 -293.20510864]
[35.12973404 -305.50955200]
[29.20073128 -319.34936523]
[26.27913666 -334.11953735]
[26.49267387 -349.17437744]
[29.83200455 -363.85574341]
[36.15114975 -377.52182007]
[45.17386246 -389.57522583]
[56.50571060 -399.48901367]
[69.65131378 -406.82977295]
[84.03599548 -411.27661133]
[99.03092957 -412.63516235]
[113.98059845 -410.84600830]
[128.23146057 -405.98733521]
[141.16055298 -398.27160645]
[152.20263672 -388.03607178]
[160.87501526 -375.72821045]
[166.79858398 -361.88607788]
[169.71435547 -347.11474609]
[169.49490356 -332.05999756]
[166.14979553 -317.37994385]
[159.82527161 -303.71633911]
[150.79782104 -291.66650391]
[139.46206665 -281.75717163]
[126.31358337 -274.42160034]
[111.92714691 -269.98040771]
[96.93167877 -268.62774658]
[95.14921570 -253.73403931]
[93.36675262 -238.84031677]
[91.58428192 -223.94660950]
[89.80181885 -209.05288696]
[95.97190094 -195.49635315]
[86.64953613 -182.71339417]
[84.86706543 -167.81968689]
[84.42046356 -152.82633972]
[85.31327820 -137.85292053]
[86.20609283 -122.87952423]
[87.09890747 -107.90611267]
[88.54832458 -92.97631073]
[90.55233765 -78.11077881]
[92.55635834 -63.24525070]
[95.12355042 -60.82825851]
[96.64759827 -57.04773712]
[96.50038147 -52.40752029]
[94.30255127 -47.67289734]
[95.64078522 -32.73271179]
[96.97901917 -17.79252815]
[108.53780365 -8.46889019]
[110.10778809 6.66351843]
[100.24993134 18.72421265]
[109.09184265 30.71044350]
[102.61659241 45.14587402]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[109.97428131 119.77874756]
[111.75674438 134.67247009]
[113.53921509 149.56619263]
[115.32167816 164.45989990]
[117.10414124 179.35362244]
[118.88661194 194.24734497]
[128.52522278 202.81822205]
[129.70321655 215.25993347]
[122.33209229 224.85122681]
[123.89261627 239.76983643]
[125.45314026 254.68844604]
[129.45835876 262.89794922]
[126.92414093 269.84054565]
[128.26237488 284.78073120]
[137.20001221 297.83557129]
[130.62902832 311.20239258]
[136.68695068 297.48007202]
[147.02279663 286.60946655]
[160.42231750 279.86758423]
[175.31137085 278.04650879]
[189.94078064 281.36016846]
[202.59191895 289.41925049]
[211.77853394 301.27697754]
[216.42138672 315.54037476]
[215.97505188 330.53372192]
[210.49194336 344.49566650]
[200.61624146 355.78594971]
[187.50811768 363.07818604]
[172.70748901 365.51571655]
[157.95314026 362.81219482]
[144.97837830 355.28518677]
[135.30747986 343.81900024]
[130.07629395 329.75909424]
[127.85117340 344.59313965]
[125.62605286 359.42718506]
[123.51142883 374.27737427]
[121.50741577 389.14291382]
[119.50340271 404.00842285]
[117.49938965 418.87396240]
[117.05278015 433.86730957]
[118.16843414 448.82577515]
[119.28408051 463.78421021]
[120.39972687 478.74267578]
[135.26611328 481.24343872]
[149.10177612 487.22994995]
[161.10229492 496.35412598]
[170.56997681 508.08557129]
[176.95442200 521.74212646]
[179.88439941 536.52990723]
[179.18960571 551.58917236]
[174.91040039 566.04431152]
[167.29559326 579.05505371]
[156.78788757 589.86480713]
[143.99819946 597.84527588]
[129.67008972 602.53234863]
[114.63658142 603.65356445]
[99.77171326 601.14379883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 196]
[11 195]
[12 194]
[13 193]
[28 192]
[29 191]
[30 190]
[31 189]
[33 188]
[34 187]
[35 186]
[36 169]
[38 167]
[39 166]
[40 164]
[41 163]
[42 162]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[53 152]
[54 151]
[55 150]
[56 149]
[58 147]
[61 144]
[62 143]
[63 142]
[64 138]
[65 137]
[66 136]
[72 135]
[73 134]
[74 133]
[75 132]
[88 131]
[89 130]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
