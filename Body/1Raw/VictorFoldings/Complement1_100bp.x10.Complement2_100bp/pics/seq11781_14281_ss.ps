%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[111.27927399 561.90515137]
[101.72914886 550.32830811]
[93.10487366 538.04620361]
[85.45831299 525.13269043]
[78.83544159 511.66546631]
[73.27610779 497.72552490]
[68.81373596 483.39669800]
[65.47515869 468.76513672]
[63.28047180 453.91888428]
[62.24285889 438.94717407]
[62.36856842 423.94009399]
[63.65684128 408.98788452]
[66.09992981 394.18048096]
[69.68314362 379.60690308]
[74.38493347 365.35482788]
[80.17701721 351.50997925]
[87.02455902 338.15557861]
[94.88638306 325.37200928]
[103.71519470 313.23608398]
[113.45791626 301.82086182]
[124.05593109 291.19491577]
[135.44551086 281.42221069]
[147.55816650 272.56152344]
[160.32102966 264.66610718]
[153.44161987 251.33666992]
[146.56221008 238.00724792]
[139.68278503 224.67781067]
[132.80337524 211.34838867]
[129.91625977 226.06791687]
[119.60654449 236.96331787]
[105.06881714 240.65853882]
[90.80776215 236.00857544]
[81.24230957 224.45426941]
[79.33641815 209.57583618]
[85.68065643 195.98353577]
[98.30918884 187.88908386]
[113.30892944 187.80062866]
[126.03221893 195.74578857]
[120.99530029 181.61676025]
[115.95838165 167.48773193]
[110.92147064 153.35870361]
[105.88455200 139.22967529]
[100.84763336 125.10063934]
[95.81072235 110.97161102]
[92.70594025 125.64677429]
[83.96675110 137.83801270]
[71.06584930 145.49090576]
[56.17727280 147.31581116]
[41.81000137 143.00517273]
[30.38517761 133.28543091]
[23.82808113 119.79453278]
[23.24370193 104.80591583]
[28.73051453 90.84544373]
[39.36389542 80.26568604]
[53.35193253 74.84953308]
[68.33740234 75.50968933]
[81.79498291 82.13491058]
[91.45761871 93.61019135]
[81.75878906 81.11045837]
[87.52250671 67.37623596]
[85.29738617 52.54219437]
[83.07227325 37.70815277]
[73.37344360 25.20842171]
[79.13716125 11.47420025]
[76.91204071 -3.35984302]
[74.68692780 -18.19388771]
[72.46180725 -33.02793121]
[57.47496414 -32.17992401]
[42.47380447 -32.71835709]
[27.58632278 -34.63864517]
[12.93953228 -37.92439651]
[-1.34160197 -42.54758072]
[-15.13523579 -48.46875763]
[-28.32368469 -55.63740158]
[-40.79442596 -63.99235153]
[-52.44106293 -73.46233368]
[-63.16423035 -83.96653748]
[-72.87243652 -95.41535950]
[-81.48284912 -107.71110535]
[-88.92201233 -120.74887085]
[-95.12645721 -134.41743469]
[-100.04324341 -148.60015869]
[-103.63042450 -163.17605591]
[-105.85739136 -178.02076721]
[-106.70514679 -193.00762939]
[-106.16646576 -208.00877380]
[-104.24592590 -222.89622498]
[-100.95993042 -237.54296875]
[-96.33650970 -251.82402039]
[-90.41510773 -265.61755371]
[-83.24623871 -278.80587769]
[-74.89108276 -291.27648926]
[-65.42090607 -302.92297363]
[-54.91652298 -313.64596558]
[-43.46754456 -323.35397339]
[-31.17165375 -331.96417236]
[-18.13375854 -339.40313721]
[-4.46509504 -345.60733032]
[9.71771812 -350.52389526]
[24.29367447 -354.11083984]
[39.13841629 -356.33755493]
[54.12528992 -357.18505859]
[69.12642670 -356.64611816]
[84.01384735 -354.72534180]
[98.66053009 -351.43908691]
[112.94151306 -346.81542969]
[126.73494720 -340.89379883]
[139.92315674 -333.72473145]
[152.39361572 -325.36935425]
[164.03994751 -315.89898682]
[174.76275635 -305.39440918]
[184.47058105 -293.94528198]
[193.08058167 -281.64926147]
[200.51931763 -268.61123657]
[206.72329712 -254.94245911]
[211.63961792 -240.75956726]
[215.22630310 -226.18354797]
[217.45278931 -211.33877563]
[218.30004883 -196.35188293]
[217.76086426 -181.35075378]
[215.83982849 -166.46336365]
[212.55334473 -151.81674194]
[207.92944336 -137.53584290]
[202.00758362 -123.74250031]
[194.83827209 -110.55441284]
[186.48269653 -98.08408356]
[177.01214600 -86.43791962]
[166.50740051 -75.71527863]
[155.05809021 -66.00765228]
[142.76191711 -57.39784622]
[129.72377014 -49.95933533]
[116.05490875 -43.75557709]
[101.87192535 -38.83950043]
[87.29585266 -35.25304794]
[89.52097321 -20.41900444]
[91.74608612 -5.58496046]
[93.97120667 9.24908352]
[103.51087952 20.68778419]
[97.90631866 35.48303604]
[100.13143158 50.31707764]
[102.35655212 65.15112305]
[111.89622498 76.58982086]
[106.29166412 91.38507080]
[109.93975067 105.93469238]
[114.97666168 120.06372070]
[120.01358032 134.19274902]
[125.05049896 148.32177734]
[130.08741760 162.45080566]
[135.12432861 176.57983398]
[140.16123962 190.70887756]
[146.13281250 204.46897888]
[153.01222229 217.79840088]
[159.89163208 231.12783813]
[166.77104187 244.45726013]
[173.65045166 257.78668213]
[187.47981262 251.95767212]
[201.71928406 247.21786499]
[216.28323364 243.59576416]
[231.08407593 241.11315918]
[246.03279114 239.78497314]
[261.03948975 239.61921692]
[276.01388550 240.61685181]
[290.86596680 242.77191162]
[305.50637817 246.07141113]
[319.84707642 250.49552917]
[333.80181885 256.01763916]
[347.28665161 262.60452271]
[360.22052002 270.21661377]
[372.52560425 278.80807495]
[384.12789917 288.32723999]
[394.95764160 298.71688843]
[404.94970703 309.91455078]
[414.04397583 321.85281372]
[422.18576050 334.45993042]
[429.32611084 347.66009521]
[435.42208862 361.37387085]
[440.43698120 375.51879883]
[444.34066772 390.00979614]
[447.10968018 404.75976562]
[448.72732544 419.67993164]
[449.18392944 434.68057251]
[448.47668457 449.67150879]
[446.60989380 464.56256104]
[443.59478760 479.26419067]
[439.44943237 493.68792725]
[434.19882202 507.74707031]
[427.87454224 521.35705566]
[420.51455688 534.43603516]
[412.16320801 546.90527344]
[402.87069702 558.68994141]
[392.69290161 569.71899414]
[381.69100952 579.92620850]
[369.93124390 589.25018311]
[357.48428345 597.63476562]
[344.42501831 605.02960205]
[330.83197021 611.39019775]
[316.78689575 616.67834473]
[302.37426758 620.86212158]
[287.68075562 623.91650391]
[272.79473877 625.82305908]
[257.80572510 626.57031250]
[242.80390930 626.15374756]
[227.87947083 624.57592773]
[213.12219238 621.84631348]
[198.62080383 617.98126221]
[184.46253967 613.00415039]
[170.73254395 606.94482422]
[157.51338196 599.83972168]
[144.88458252 591.73162842]
[132.92205811 582.66925049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[58 143]
[60 141]
[61 140]
[62 139]
[64 137]
[65 136]
[66 135]
[67 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
