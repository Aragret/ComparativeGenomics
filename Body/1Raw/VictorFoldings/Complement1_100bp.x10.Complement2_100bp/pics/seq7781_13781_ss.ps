%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[98.29669189 779.82489014]
[83.39458466 778.08911133]
[68.59194946 775.64624023]
[53.92231369 772.50183105]
[39.41891479 768.66296387]
[25.11460495 764.13830566]
[11.04178619 758.93817139]
[-2.76765895 753.07434082]
[-16.28244972 746.56005859]
[-29.47196770 739.41003418]
[-42.30633926 731.64056396]
[-54.75648499 723.26922607]
[-66.79420471 714.31500244]
[-78.39222717 704.79809570]
[-89.52427673 694.74011230]
[-100.16514587 684.16381836]
[-110.29071808 673.09320068]
[-119.87805939 661.55334473]
[-128.90545654 649.57037354]
[-137.35244751 637.17144775]
[-145.19990540 624.38458252]
[-152.43005371 611.23883057]
[-159.02651978 597.76397705]
[-164.97433472 583.99047852]
[-170.26005554 569.94958496]
[-174.87170410 555.67309570]
[-178.79881287 541.19335938]
[-182.03250122 526.54309082]
[-184.56542969 511.75561523]
[-186.39189148 496.86437988]
[-187.50772095 481.90307617]
[-187.91038513 466.90560913]
[-187.59899902 451.90600586]
[-186.57424927 436.93817139]
[-184.83847046 422.03607178]
[-182.39556885 407.23345947]
[-179.25111389 392.56381226]
[-175.41220093 378.06042480]
[-170.88752747 363.75613403]
[-165.68736267 349.68331909]
[-159.82348633 335.87390137]
[-153.30915833 322.35913086]
[-146.15914917 309.16961670]
[-138.38964844 296.33526611]
[-130.01828003 283.88513184]
[-121.06398773 271.84744263]
[-111.54705811 260.24942017]
[-101.48904419 249.11740112]
[-90.91275024 238.47656250]
[-79.84211731 228.35101318]
[-68.30223083 218.76370239]
[-56.31923294 209.73632812]
[-43.92026901 201.28936768]
[-31.13342285 193.44194031]
[-17.98766327 186.21182251]
[-4.51277113 179.61538696]
[9.26072979 173.66758728]
[23.30163765 168.38191223]
[37.57814407 163.77029419]
[52.05791092 159.84321594]
[66.70813751 156.60957336]
[81.49562836 154.07666016]
[96.38689423 152.25024414]
[95.27124786 137.29179382]
[94.15560150 122.33333588]
[93.03994751 107.37488556]
[89.34761047 100.20974731]
[92.02073669 92.18570709]
[91.12792206 77.21230316]
[90.23510742 62.23889542]
[89.34229279 47.26548767]
[88.44947815 32.29208374]
[73.44842529 31.71305847]
[58.57636261 29.66644478]
[43.97652435 26.17194939]
[29.78951454 21.26322937]
[16.15196609 14.98755836]
[3.19521761 7.40537786]
[-8.95594501 -1.41029191]
[-20.18449783 -11.37454796]
[-30.38230133 -22.39142609]
[-39.45114136 -34.35482788]
[-47.30367661 -47.14953232]
[-53.86428452 -60.65231705]
[-59.06977844 -74.73313904]
[-62.87002563 -89.25639343]
[-65.22842407 -104.08220673]
[-66.12226868 -119.06779480]
[-65.54294586 -134.06883240]
[-63.49603271 -148.94085693]
[-60.00124359 -163.54061890]
[-55.09224319 -177.72753906]
[-48.81629944 -191.36495972]
[-41.23386002 -204.32156372]
[-32.41794586 -216.47254944]
[-22.45346451 -227.70089722]
[-11.43638229 -237.89848328]
[0.52719897 -246.96707153]
[13.32206059 -254.81936646]
[26.82497787 -261.37969971]
[40.90590668 -266.58489990]
[55.42923737 -270.38485718]
[70.25509644 -272.74298096]
[85.24069977 -273.63650513]
[100.24172974 -273.05688477]
[115.11370850 -271.00967407]
[129.71340942 -267.51458740]
[143.90022278 -262.60531616]
[157.53752136 -256.32910156]
[170.49395752 -248.74639893]
[182.64477539 -239.93023682]
[193.87292480 -229.96553040]
[204.07029724 -218.94825745]
[213.13865662 -206.98448181]
[220.99067688 -194.18946838]
[227.55073547 -180.68641663]
[232.75567627 -166.60539246]
[236.55534363 -152.08198547]
[238.91314697 -137.25607300]
[239.80639648 -122.27045441]
[239.22647095 -107.26943207]
[237.17895508 -92.39749908]
[233.68359375 -77.79786682]
[228.77401733 -63.61115265]
[222.49752808 -49.97397995]
[214.91456604 -37.01768875]
[206.09817505 -24.86705399]
[196.13323975 -13.63909817]
[185.11575317 -3.44195700]
[173.15180969 5.62616491]
[160.35662842 13.47793293]
[146.85345459 20.03772926]
[132.77232361 25.24237823]
[118.24883270 29.04175568]
[103.42288208 31.39926720]
[104.31569672 46.37267303]
[105.20851135 61.34608078]
[106.10132599 76.31948853]
[106.99414062 91.29289246]
[107.99840546 106.25923157]
[109.11405182 121.21768951]
[110.22969818 136.17614746]
[111.34535217 151.13459778]
[126.34279633 150.73181152]
[141.34242249 151.04310608]
[156.31024170 152.06774902]
[171.21235657 153.80343628]
[186.01499939 156.24623108]
[200.68464661 159.39059448]
[215.18806458 163.22940063]
[229.49240112 167.75396729]
[243.56523132 172.95404053]
[257.37472534 178.81784058]
[270.88952637 185.33207703]
[284.07907104 192.48199463]
[296.91348267 200.25138855]
[309.36367798 208.62268066]
[321.40142822 217.57690430]
[332.99948120 227.09375000]
[344.13159180 237.15168762]
[354.77252197 247.72790527]
[364.89813232 258.79846191]
[374.48553467 270.33828735]
[383.51296997 282.32122803]
[391.96002197 294.72012329]
[399.80752563 307.50692749]
[407.03775024 320.65264893]
[413.63427734 334.12747192]
[419.58215332 347.90093994]
[424.86795044 361.94183350]
[429.47964478 376.21829224]
[433.40682983 390.69802856]
[436.64056396 405.34823608]
[439.17358398 420.13571167]
[441.00009155 435.02697754]
[442.11599731 449.98825073]
[442.51873779 464.98571777]
[442.20742798 479.98532104]
[441.18273926 494.95315552]
[439.44702148 509.85525513]
[437.00418091 524.65789795]
[433.85980225 539.32751465]
[430.02093506 553.83093262]
[425.49633789 568.13525391]
[420.29623413 582.20812988]
[414.43243408 596.01757812]
[407.91815186 609.53234863]
[400.76821899 622.72192383]
[392.99877930 635.55627441]
[384.62744141 648.00646973]
[375.67321777 660.04418945]
[366.15634155 671.64221191]
[356.09838867 682.77429199]
[345.52212524 693.41522217]
[334.45153809 703.54077148]
[322.91171265 713.12817383]
[310.92874146 722.15557861]
[298.52981567 730.60260010]
[285.74301147 738.45007324]
[272.59729004 745.68029785]
[259.12240601 752.27679443]
[245.34893799 758.22460938]
[231.30805969 763.51037598]
[217.03157043 768.12207031]
[202.55181885 772.04919434]
[187.90161133 775.28289795]
[173.11413574 777.81585693]
[158.22286987 779.64239502]
[143.26158142 780.75823975]
[128.26412964 781.16094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 143]
[64 142]
[65 141]
[66 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
