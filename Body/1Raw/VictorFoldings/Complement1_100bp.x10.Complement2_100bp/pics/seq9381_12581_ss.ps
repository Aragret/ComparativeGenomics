%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[105.02021790 733.11370850]
[90.64214325 728.81909180]
[76.58680725 723.56353760]
[62.91833496 717.37115479]
[49.69909668 710.27014160]
[36.98940659 702.29284668]
[24.84725952 693.47576904]
[13.32805443 683.85906982]
[2.48435283 673.48663330]
[-7.63436747 662.40582275]
[-16.98193741 650.66717529]
[-25.51570511 638.32427979]
[-33.19673157 625.43341064]
[-39.98997116 612.05334473]
[-45.86442947 598.24523926]
[-50.79329681 584.07208252]
[-54.75408936 569.59844971]
[-57.72873306 554.89050293]
[-59.70365524 540.01525879]
[-60.66984558 525.04064941]
[-60.62289047 510.03494263]
[-59.56301117 495.06668091]
[-57.49503708 480.20407104]
[-54.42840958 465.51501465]
[-50.37712097 451.06649780]
[-45.35964966 436.92440796]
[-39.39889908 423.15335083]
[-32.52206039 409.81610107]
[-24.76051140 396.97354126]
[-16.14966965 384.68426514]
[-6.72882223 373.00436401]
[3.45904398 361.98709106]
[14.36744404 351.68270874]
[25.94660378 342.13830566]
[38.14369202 333.39736938]
[50.90305328 325.49978638]
[64.16647339 318.48162842]
[77.87342834 312.37487793]
[91.96138000 307.20742798]
[106.36604309 303.00283813]
[121.02169800 299.78030396]
[118.79658508 284.94625854]
[116.57146454 270.11221313]
[114.34635162 255.27816772]
[111.10633087 251.76942444]
[110.03607941 246.18806458]
[112.28266144 239.97000122]
[110.50019836 225.07627869]
[108.71772766 210.18255615]
[106.71371460 195.31703186]
[97.17404175 183.87832642]
[102.77860260 169.08308411]
[100.55348969 154.24903870]
[91.01380920 142.81033325]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[78.78398132 85.59740448]
[63.83917999 86.88301849]
[52.27423096 77.33042908]
[50.71406555 62.41178894]
[60.05241394 50.67317200]
[74.93984985 48.83898926]
[86.84769440 57.95912552]
[85.95487976 42.98572159]
[85.06206512 28.01231384]
[84.05780029 13.04596996]
[82.94215393 -1.91248333]
[81.82650757 -16.87093735]
[80.71085358 -31.82938957]
[79.59520721 -46.78784180]
[78.36823273 -61.73757553]
[77.02999878 -76.67776489]
[67.47948456 -65.11109924]
[52.75180054 -62.26588821]
[39.58023453 -69.44292450]
[33.98665619 -83.36096954]
[38.52837372 -97.65686798]
[51.12897110 -105.79473877]
[66.02762604 -104.05405426]
[76.41363525 -93.22893524]
[76.63696289 -108.22727203]
[76.86029053 -123.22560883]
[77.08361816 -138.22395325]
[77.30694580 -153.22229004]
[77.53027344 -168.22062683]
[67.09890747 -176.74125671]
[63.53160477 -189.52737427]
[67.91488647 -201.85087585]
[78.43737793 -209.28771973]
[78.88398743 -224.28106689]
[79.33058929 -239.27442932]
[79.77719879 -254.26777649]
[80.22380066 -269.26113892]
[80.67041016 -284.25448608]
[66.42228699 -289.33837891]
[54.44376755 -298.57800293]
[45.90839386 -311.06808472]
[41.65236282 -325.58502197]
[42.09264755 -340.70657349]
[47.18610764 -354.95129395]
[56.43373871 -366.92361450]
[68.92955017 -375.45062256]
[83.44934082 -379.69692993]
[98.57058716 -379.24649048]
[112.81188965 -374.14349365]
[124.77800751 -364.88784790]
[133.29664612 -352.38632202]
[137.53320312 -337.86370850]
[137.07266235 -322.74273682]
[131.96011353 -308.50488281]
[122.69644928 -296.54495239]
[110.18921661 -288.03469849]
[95.66375732 -283.80786133]
[95.21715546 -268.81451416]
[94.77054596 -253.82116699]
[94.32393646 -238.82781982]
[93.87733459 -223.83447266]
[93.43072510 -208.84112549]
[105.47587585 -197.10429382]
[105.30212402 -179.94955444]
[92.52861023 -167.99729919]
[92.30528259 -152.99896240]
[92.08195496 -138.00062561]
[91.85862732 -123.00228119]
[91.63529968 -108.00394440]
[91.41197205 -93.00560760]
[91.97018433 -78.01599884]
[93.30841827 -63.07580948]
[97.03613281 -56.69412231]
[94.55366516 -47.90349197]
[95.66931152 -32.94503784]
[96.78495789 -17.98658562]
[97.90060425 -3.02813196]
[99.01625824 11.93032169]
[102.64854431 18.36680412]
[100.03546906 27.11949921]
[100.92828369 42.09290314]
[101.82109833 57.06631088]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[121.15125275 138.28970337]
[115.38753510 152.02392578]
[117.61264801 166.85795593]
[127.31147766 179.35769653]
[121.54776001 193.09191895]
[125.36072540 198.49310303]
[125.80666351 204.15863037]
[123.61145020 208.40010071]
[125.39391327 223.29380798]
[127.17637634 238.18753052]
[129.18038940 253.05305481]
[131.40551758 267.88711548]
[133.63063049 282.72113037]
[135.85574341 297.55517578]
[150.81188965 296.33593750]
[165.81623840 296.12915039]
[180.80029297 296.93579102]
[195.69572449 298.75213623]
[210.43455505 301.56994629]
[224.94950867 305.37634277]
[239.17439270 310.15399170]
[253.04429626 315.88101196]
[266.49591064 322.53137207]
[279.46786499 330.07464600]
[291.90100098 338.47644043]
[303.73852539 347.69845581]
[314.92651367 357.69857788]
[325.41384888 368.43118286]
[335.15267944 379.84729004]
[344.09860229 391.89483643]
[352.21081543 404.51882935]
[359.45223999 417.66168213]
[365.78988647 431.26342773]
[371.19482422 445.26199341]
[375.64236450 459.59350586]
[379.11224365 474.19256592]
[381.58865356 488.99258423]
[383.06024170 503.92602539]
[383.52029419 518.92474365]
[382.96676636 533.92028809]
[381.40213013 548.84423828]
[378.83355713 563.62854004]
[375.27276611 578.20568848]
[370.73599243 592.50921631]
[365.24392700 606.47381592]
[358.82162476 620.03582764]
[351.49844360 633.13323975]
[343.30773926 645.70648193]
[334.28689575 657.69799805]
[324.47708130 669.05322266]
[313.92306519 679.72027588]
[302.67300415 689.65045166]
[290.77819824 698.79852295]
[278.29296875 707.12268066]
[265.27426147 714.58496094]
[251.78144836 721.15136719]
[237.87612915 726.79187012]
[223.62174988 731.48071289]
[209.08334351 735.19659424]
[194.32725525 737.92248535]
[179.42079163 739.64599609]
[164.43199158 740.35925293]
[149.42922974 740.05895996]
[134.48097229 738.74652100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 160]
[42 159]
[43 158]
[44 157]
[47 156]
[48 155]
[49 154]
[50 151]
[52 149]
[53 148]
[55 146]
[56 145]
[58 143]
[59 142]
[66 141]
[67 140]
[68 139]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 131]
[75 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
