%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[45.48059082 723.45800781]
[31.21748352 728.12292480]
[16.65494537 731.74645996]
[1.86889863 734.30981445]
[-13.06356716 735.79949951]
[-28.06460190 736.20782471]
[-43.05599594 735.53265381]
[-57.95958710 733.77746582]
[-72.69767761 730.95141602]
[-87.19343567 727.06927490]
[-101.37126923 722.15130615]
[-115.15727997 716.22308350]
[-128.47956848 709.31555176]
[-141.26870728 701.46472168]
[-153.45800781 692.71148682]
[-164.98391724 683.10150146]
[-175.78633118 672.68493652]
[-185.80895996 661.51599121]
[-194.99951172 649.65301514]
[-203.31011963 637.15771484]
[-210.69740295 624.09533691]
[-217.12289429 610.53393555]
[-222.55305481 596.54431152]
[-226.95959473 582.19927979]
[-230.31954956 567.57366943]
[-232.61537170 552.74371338]
[-233.83511353 537.78674316]
[-233.97242737 522.78082275]
[-233.02656555 507.80404663]
[-231.00247192 492.93460083]
[-227.91072083 478.24993896]
[-223.76739502 463.82669067]
[-218.59411621 449.73999023]
[-212.41786194 436.06329346]
[-205.27081299 422.86795044]
[-197.19026184 410.22268677]
[-188.21829224 398.19348145]
[-178.40173340 386.84304810]
[-167.79171753 376.23052979]
[-156.44358826 366.41128540]
[-144.41650391 357.43649292]
[-131.77316284 349.35293579]
[-118.57948303 342.20278931]
[-104.90425873 336.02331543]
[-90.81878662 330.84671021]
[-76.39649963 326.69998169]
[-61.71258163 323.60476685]
[-46.84360123 321.57714844]
[-31.86707306 320.62777710]
[-16.86107826 320.76153564]
[-1.90385389 321.97775269]
[12.92662048 324.27008057]
[27.55302429 327.62658691]
[31.95402336 313.28674316]
[36.35502243 298.94686890]
[40.75601959 284.60702515]
[45.15701675 270.26718140]
[39.76844025 259.43713379]
[43.31762695 247.45436096]
[54.42486572 240.89753723]
[59.03887558 226.62480164]
[63.22588348 212.22100830]
[66.98218536 197.69895935]
[55.00925064 188.77830505]
[47.34307098 175.91847229]
[45.17859268 161.06317139]
[48.87647247 146.47163391]
[57.90339661 134.37500000]
[70.90875244 126.63526154]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.30757141 57.26306915]
[97.44616699 45.77364731]
[100.87376404 33.75552368]
[111.22837830 27.50184250]
[107.42166138 12.14542866]
[118.25302124 1.92138660]
[122.22511292 -12.54313755]
[126.19721222 -27.00766182]
[130.16931152 -41.47218704]
[134.14140320 -55.93671036]
[137.68107605 -70.51308441]
[140.78518677 -85.18838501]
[129.47726440 -95.48781586]
[124.87328339 -109.96884155]
[128.11424255 -124.71206665]
[138.23194885 -135.77949524]
[152.43524170 -140.26637268]
[155.53935242 -154.94166565]
[158.64346313 -169.61697388]
[161.74757385 -184.29228210]
[164.85168457 -198.96757507]
[167.95579529 -213.64288330]
[171.05990601 -228.31817627]
[174.16401672 -242.99348450]
[177.26812744 -257.66879272]
[163.58984375 -263.98165894]
[151.65956116 -273.18035889]
[142.07571411 -284.80349731]
[135.31900024 -298.26806641]
[131.72834778 -312.89868164]
[131.48387146 -327.96148682]
[134.59780884 -342.70092773]
[140.91400146 -356.37768555]
[150.11558533 -368.30572510]
[161.74105835 -377.88677979]
[175.20726013 -384.64022827]
[189.83874512 -388.22732544]
[204.90161133 -388.46817017]
[219.64028931 -385.35064697]
[233.31552124 -379.03115845]
[245.24133301 -369.82666016]
[254.81956482 -358.19888306]
[261.56973267 -344.73101807]
[265.15328979 -330.09866333]
[265.39047241 -315.03576660]
[262.26940918 -300.29782104]
[255.94659424 -286.62414551]
[246.73921204 -274.70053101]
[235.10910034 -265.12515259]
[221.63963318 -258.37823486]
[207.00640869 -254.79821777]
[191.94342041 -254.56468201]
[188.83932495 -239.88937378]
[185.73521423 -225.21408081]
[182.63110352 -210.53877258]
[179.52699280 -195.86346436]
[176.42288208 -181.18817139]
[173.31877136 -166.51286316]
[170.21466064 -151.83755493]
[167.11054993 -137.16226196]
[178.28050232 -127.30844879]
[183.05020142 -113.09204865]
[180.04371643 -98.29923248]
[169.97036743 -86.92274475]
[155.46049500 -82.08427429]
[152.35638428 -67.40897369]
[153.77066040 -64.98865509]
[154.31143188 -61.86228561]
[153.70498657 -58.35977173]
[151.80194092 -54.90391541]
[148.60592651 -51.96461105]
[144.63383484 -37.50008774]
[140.66172791 -23.03556442]
[136.68963623 -8.57104111]
[132.71754456 5.89348269]
[136.80836487 20.21529770]
[125.69290161 31.47393990]
[131.03814697 48.18906403]
[117.82963562 61.01936722]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[112.52764893 137.40046692]
[120.14900970 150.47555542]
[122.17833710 165.43200684]
[118.33724976 179.98652649]
[109.24118042 191.92915344]
[96.30099487 199.45889282]
[81.50424194 201.45526123]
[77.74794769 215.97731018]
[79.05639648 220.11759949]
[78.98634338 224.06216431]
[77.76856995 227.40168762]
[75.74311829 229.84385681]
[73.31160736 231.23880005]
[68.69760132 245.51153564]
[72.96975708 263.42327881]
[59.49686432 274.66818237]
[55.09586716 289.00802612]
[50.69486618 303.34786987]
[46.29386902 317.68771362]
[41.89287186 332.02758789]
[55.88399887 337.45401001]
[69.44709778 343.87585449]
[82.51145172 351.25964355]
[95.00894165 359.56689453]
[106.87442017 368.75427246]
[118.04602814 378.77392578]
[128.46551514 389.57354736]
[138.07855225 401.09689331]
[146.83503723 413.28384399]
[154.68930054 426.07086182]
[161.60040283 439.39132690]
[167.53231812 453.17575073]
[172.45410156 467.35226440]
[176.34011841 481.84698486]
[179.17008972 496.58432007]
[180.92926025 511.48742676]
[181.60845947 526.47863770]
[181.20414734 541.47979736]
[179.71844482 556.41265869]
[177.15908813 571.19940186]
[173.53941345 585.76287842]
[168.87831116 600.02722168]
[163.20005798 613.91809082]
[156.53427124 627.36297607]
[148.91571045 640.29180908]
[140.38409424 652.63720703]
[130.98388672 664.33483887]
[120.76409912 675.32360840]
[109.77803040 685.54632568]
[98.08294678 694.94970703]
[85.73982239 703.48461914]
[72.81301117 711.10662842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 178]
[54 177]
[55 176]
[56 175]
[57 174]
[60 172]
[61 171]
[62 166]
[63 165]
[70 158]
[71 157]
[73 155]
[74 154]
[75 153]
[78 151]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 140]
[86 139]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
