%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[3.03497624 395.24978638]
[9.18471241 408.96572876]
[13.11296940 423.47488403]
[14.72300816 438.41992188]
[13.97518253 453.43280029]
[10.88790607 468.14385986]
[5.53720713 482.19082642]
[-1.94514883 495.22772217]
[-11.37490177 506.93353271]
[-22.51983643 517.02001953]
[-35.10549927 525.23876953]
[-48.82195282 531.38732910]
[-63.33142471 535.31439209]
[-78.27659607 536.92321777]
[-93.28943634 536.17413330]
[-108.00024414 533.08563232]
[-122.04673767 527.73382568]
[-135.08302307 520.25036621]
[-146.78807068 510.81964111]
[-156.87362671 499.67388916]
[-165.09132385 487.08755493]
[-171.23878479 473.37057495]
[-175.16465759 458.86077881]
[-176.77223206 443.91549683]
[-176.02192688 428.90270996]
[-172.93222046 414.19216919]
[-167.57920837 400.14608765]
[-160.09469604 387.11044312]
[-150.66300964 375.40615845]
[-139.51640320 365.32153320]
[-126.92938995 357.10488892]
[-113.21192169 350.95852661]
[-98.70180511 347.03387451]
[-83.75636292 345.42752075]
[-68.74365234 346.17907715]
[-54.03335571 349.26998901]
[-39.98773956 354.62417603]
[-32.52000046 341.61520386]
[-25.05225945 328.60626221]
[-17.58451843 315.59732056]
[-10.11677647 302.58834839]
[-2.64903522 289.57940674]
[4.81870604 276.57043457]
[4.25554562 273.08975220]
[5.35030985 269.16336060]
[8.29411793 265.57348633]
[12.92152500 263.15808105]
[20.96269798 250.49555969]
[29.00387001 237.83302307]
[36.17923737 224.66055298]
[42.45659637 211.03723145]
[48.63236618 197.36756897]
[54.70619965 183.65229797]
[52.78514862 168.88209534]
[65.44775391 159.39689636]
[71.52158356 145.68164062]
[77.59542084 131.96636963]
[83.66925812 118.25109863]
[89.74308777 104.53583527]
[75.78193665 110.02093506]
[61.52181244 105.36810303]
[53.48225021 92.70455933]
[55.33882523 77.81990051]
[66.24274445 67.51918793]
[81.20887756 66.51177979]
[93.39491272 75.25823975]
[97.22939301 89.76165009]
[104.69713593 76.75270081]
[112.16487885 63.74374771]
[119.63262177 50.73479462]
[113.45223236 36.62419510]
[116.72740173 21.75386810]
[127.99744415 11.78140068]
[142.80142212 10.37427139]
[150.26916504 -2.63468099]
[157.73690796 -15.64363289]
[165.20465088 -28.65258598]
[172.67239380 -41.66153717]
[180.14013672 -54.67049026]
[187.60787964 -67.67944336]
[181.42749023 -81.79003906]
[184.70265198 -96.66036987]
[195.97270203 -106.63283539]
[210.77668762 -108.03997040]
[218.24443054 -121.04891968]
[218.40455627 -136.86930847]
[231.45109558 -144.05520630]
[238.91883850 -157.06416321]
[239.07896423 -172.88455200]
[252.12551880 -180.07043457]
[251.96014404 -184.40940857]
[253.07225037 -188.19461060]
[255.13087463 -191.09243774]
[257.73071289 -192.91107178]
[260.44482422 -193.61235046]
[268.67361450 -206.15374756]
[276.90243530 -218.69514465]
[285.13125610 -231.23655701]
[293.36004639 -243.77795410]
[281.86560059 -253.44302368]
[271.59497070 -264.39978027]
[262.69235229 -276.49441528]
[255.28271484 -289.55709839]
[249.47009277 -303.40444946]
[245.33609009 -317.84213257]
[242.93872070 -332.66741943]
[242.31166077 -347.67218018]
[243.46368408 -362.64581299]
[246.37866211 -377.37805176]
[251.01564026 -391.66213989]
[257.30950928 -405.29751587]
[265.17196655 -418.09274292]
[274.49258423 -429.86825562]
[285.14056396 -440.45867920]
[296.96636963 -449.71539307]
[309.80401611 -457.50839233]
[323.47326660 -463.72833252]
[337.78225708 -468.28787231]
[352.53009033 -471.12301636]
[367.50973511 -472.19390869]
[382.51086426 -471.48559570]
[397.32296753 -469.00793457]
[411.73800659 -464.79580688]
[425.55371094 -458.90826416]
[438.57604980 -451.42797852]
[450.62228394 -442.45996094]
[461.52325439 -432.13012695]
[471.12591553 -420.58349609]
[479.29550171 -407.98214722]
[485.91729736 -394.50296021]
[490.89837646 -380.33520508]
[494.16876221 -365.67776489]
[495.68258667 -350.73638916]
[495.41857910 -335.72082520]
[493.38046265 -320.84191895]
[489.59680176 -306.30850220]
[484.12078857 -292.32458496]
[477.02920532 -279.08654785]
[468.42169189 -266.78015137]
[458.41903687 -255.57821655]
[447.16168213 -245.63798523]
[434.80767822 -237.09899902]
[421.53039551 -230.08113098]
[407.51626587 -224.68289185]
[392.96203613 -220.98008728]
[378.07202148 -219.02468872]
[363.05523682 -218.84413147]
[348.12252808 -220.44097900]
[333.48345947 -223.79278564]
[319.34359741 -228.85252380]
[305.90145874 -235.54914856]
[297.67263794 -223.00773621]
[289.44384766 -210.46633911]
[281.21502686 -197.92494202]
[272.98620605 -185.38354492]
[265.13446045 -172.60269165]
[265.50848389 -157.71278381]
[251.92779541 -149.59642029]
[244.46005249 -136.58746338]
[244.83406067 -121.69755554]
[231.25337219 -113.58117676]
[223.78564453 -100.57222748]
[230.03607178 -87.07888794]
[227.10789490 -72.31779480]
[215.91851807 -61.99059296]
[200.61682129 -60.21170044]
[193.14909363 -47.20274734]
[185.68135071 -34.19379807]
[178.21360779 -21.18484497]
[170.74586487 -8.17589188]
[163.27812195 4.83306026]
[155.81037903 17.84201241]
[162.06080627 31.33535004]
[159.13264465 46.09644318]
[147.94326782 56.42364502]
[132.64157104 58.20253754]
[125.17382812 71.21148682]
[117.70608521 84.22044373]
[110.23834991 97.22939301]
[103.45835876 110.60966492]
[97.38452148 124.32493591]
[91.31068420 138.04020691]
[85.23685455 151.75546265]
[79.16301727 165.47073364]
[80.64963531 181.22193909]
[68.42147064 189.72613525]
[62.34763336 203.44140625]
[61.73411179 212.55520630]
[56.07991409 217.31459045]
[49.80255127 230.93791199]
[63.18368149 224.15960693]
[78.11573029 225.58576965]
[89.97183990 234.77449036]
[95.07826996 248.87855530]
[91.85273743 263.52764893]
[81.29470062 274.18258667]
[66.67568970 277.54183960]
[52.52556610 272.56451416]
[43.22889328 260.79284668]
[41.66639709 245.87420654]
[33.62522125 258.53671265]
[25.58404922 271.19924927]
[17.82765770 284.03817749]
[10.35991764 297.04714966]
[2.89217615 310.05609131]
[-4.57556534 323.06503296]
[-12.04330635 336.07400513]
[-19.51104736 349.08294678]
[-26.97878838 362.09191895]
[-15.27219009 371.52069092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 209]
[38 208]
[39 207]
[40 206]
[41 205]
[42 204]
[43 203]
[47 202]
[48 201]
[49 200]
[50 190]
[51 189]
[52 187]
[53 186]
[55 184]
[56 183]
[57 182]
[58 181]
[59 180]
[67 179]
[68 178]
[69 177]
[70 176]
[74 172]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[84 162]
[85 161]
[87 159]
[88 158]
[90 156]
[95 155]
[96 154]
[97 153]
[98 152]
[99 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
