%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[146.49667358 565.47485352]
[135.27851868 555.51086426]
[124.65871429 544.91143799]
[114.67317200 533.71246338]
[105.35568237 521.95184326]
[96.73778534 509.66931152]
[88.84863281 496.90652466]
[81.71492004 483.70657349]
[75.36078644 470.11419678]
[69.80773163 456.17535400]
[65.07454681 441.93719482]
[61.17724991 427.44790649]
[58.12902451 412.75653076]
[55.94018173 397.91278076]
[54.61813354 382.96685791]
[54.16735458 367.96939087]
[54.58936691 352.97103882]
[55.88274002 338.02261353]
[58.04310226 323.17471313]
[61.06314087 308.47750854]
[64.93264008 293.98077393]
[69.63850403 279.73358154]
[75.16481018 265.78408813]
[81.49285889 252.17953491]
[88.60123444 238.96594238]
[96.46588898 226.18803406]
[105.06021118 213.88902283]
[114.35511780 202.11053467]
[124.31916046 190.89242554]
[134.91862488 180.27265930]
[146.11763000 170.28715515]
[132.14947510 165.11611938]
[129.64430237 149.49450684]
[120.32941437 137.73724365]
[111.01453400 125.98000336]
[101.69965363 114.22274780]
[88.77265167 108.89505768]
[86.54309845 95.09213257]
[81.68951416 93.17124939]
[78.38820648 89.90709686]
[76.89089966 86.11590576]
[77.08889008 82.59552002]
[68.30828857 70.43405914]
[59.52768707 58.27260590]
[50.74708176 46.11114883]
[36.39570236 39.45168304]
[35.21861649 24.60366058]
[26.43801498 12.44220543]
[17.65741158 0.28074950]
[4.76888371 7.97329235]
[-8.74105358 14.51324272]
[-22.76958084 19.85082626]
[-37.20992661 23.94542313]
[-51.95219421 26.76586533]
[-66.88418579 28.29069138]
[-81.89225006 28.50829506]
[-96.86216736 27.41701889]
[-111.68000793 25.02517128]
[-126.23300171 21.35095215]
[-140.41036987 16.42232895]
[-154.10424805 10.27680779]
[-167.21037292 2.96116424]
[-179.62902832 -5.46892595]
[-191.26568604 -14.94930267]
[-202.03178406 -25.40781403]
[-211.84538269 -36.76486206]
[-220.63180542 -48.93401337]
[-228.32417297 -61.82264709]
[-234.86393738 -75.33267975]
[-240.20132446 -89.36128235]
[-244.29571533 -103.80168152]
[-247.11595154 -118.54399109]
[-248.64056396 -133.47599792]
[-248.85795593 -148.48406982]
[-247.76646423 -163.45397949]
[-245.37442017 -178.27177429]
[-241.69999695 -192.82472229]
[-236.77116394 -207.00202942]
[-230.62545776 -220.69580078]
[-223.30963135 -233.80183411]
[-214.87936401 -246.22036743]
[-205.39881897 -257.85690308]
[-194.94015503 -268.62286377]
[-183.58297729 -278.43627930]
[-171.41369629 -287.22253418]
[-158.52496338 -294.91473389]
[-145.01483154 -301.45428467]
[-130.98616028 -306.79147339]
[-116.54570007 -310.88568115]
[-101.80335236 -313.70571899]
[-86.87132263 -315.23010254]
[-71.86325073 -315.44729614]
[-56.89336014 -314.35559082]
[-42.07558823 -311.96334839]
[-27.52270126 -308.28869629]
[-13.34546280 -303.35968018]
[0.34822997 -297.21377563]
[13.45415783 -289.89776611]
[25.87257385 -281.46734619]
[37.50896835 -271.98663330]
[48.27477264 -261.52780151]
[58.08805847 -250.17048645]
[66.87413788 -238.00109863]
[74.56613922 -225.11224365]
[81.10551453 -211.60203552]
[86.44251251 -197.57327271]
[90.53649902 -183.13276672]
[93.35632324 -168.39038086]
[94.88052368 -153.45832825]
[95.09749603 -138.45024109]
[94.00558472 -123.48037720]
[91.61311340 -108.66263580]
[87.93828583 -94.10980225]
[83.00906372 -79.93263245]
[76.86296844 -66.23902130]
[69.54677582 -53.13319778]
[61.11616135 -40.71489716]
[51.63529205 -29.07863998]
[41.17633057 -18.31297874]
[29.81886673 -8.49985409]
[38.59947205 3.66160202]
[47.38007355 15.82305813]
[61.10340500 21.61265755]
[62.90853882 37.33054733]
[71.68914032 49.49200439]
[80.46974182 61.65345764]
[89.25035095 73.81491089]
[98.30034637 85.77725220]
[111.22734833 91.10494232]
[113.45690155 104.90786743]
[122.77178955 116.66511536]
[132.08666992 128.42236328]
[141.40155029 140.17962646]
[156.03598022 146.19161987]
[157.87489319 160.97227478]
[170.15728760 152.35421753]
[182.91999817 144.46490479]
[196.11984253 137.33103943]
[209.71215820 130.97673035]
[223.65093994 125.42350769]
[237.88903809 120.69014740]
[252.37826538 116.79266357]
[267.06958008 113.74425507]
[281.91333008 111.55523682]
[296.85922241 110.23300171]
[311.85668945 109.78203583]
[326.85504150 110.20385742]
[341.80346680 111.49704742]
[356.65142822 113.65722656]
[371.34866333 116.67707825]
[385.84542847 120.54640198]
[400.09268188 125.25208282]
[414.04223633 130.77821350]
[427.64688110 137.10609436]
[440.86056519 144.21430969]
[453.63858032 152.07881165]
[465.93768311 160.67297363]
[477.71630859 169.96774292]
[488.93453979 179.93164062]
[499.55444336 190.53097534]
[509.54006958 201.72985840]
[518.85766602 213.49041748]
[527.47564697 225.77285767]
[535.36492920 238.53559875]
[542.49871826 251.73547363]
[548.85296631 265.32781982]
[554.40612793 279.26660156]
[559.13946533 293.50473022]
[563.03686523 307.99398804]
[566.08520508 322.68533325]
[568.27416992 337.52905273]
[569.59637451 352.47494507]
[570.04724121 367.47244263]
[569.62536621 382.47079468]
[568.33209229 397.41921997]
[566.17187500 412.26715088]
[563.15197754 426.96438599]
[559.28259277 441.46112061]
[554.57684326 455.70837402]
[549.05065918 469.65789795]
[542.72271729 483.26251221]
[535.61444092 496.47616577]
[527.74987793 509.25415039]
[519.15563965 521.55322266]
[509.86087036 533.33178711]
[499.89691162 544.54998779]
[489.29754639 555.16986084]
[478.09860229 565.15545654]
[466.33801270 574.47296143]
[454.05554199 583.09088135]
[441.29275513 590.98010254]
[428.09286499 598.11389160]
[414.50048828 604.46807861]
[400.56167603 610.02117920]
[386.32351685 614.75445557]
[371.83425903 618.65179443]
[357.14291382 621.70007324]
[342.29916382 623.88897705]
[327.35327148 625.21105957]
[312.35577393 625.66192627]
[297.35742188 625.23999023]
[282.40899658 623.94665527]
[267.56106567 621.78637695]
[252.86387634 618.76635742]
[238.36712646 614.89697266]
[224.11990356 610.19116211]
[210.17039490 604.66491699]
[196.56582642 598.33691406]
[183.35220337 591.22857666]
[170.57424927 583.36395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 135]
[33 133]
[34 132]
[35 131]
[36 130]
[38 128]
[42 127]
[43 126]
[44 125]
[45 124]
[47 122]
[48 121]
[49 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
