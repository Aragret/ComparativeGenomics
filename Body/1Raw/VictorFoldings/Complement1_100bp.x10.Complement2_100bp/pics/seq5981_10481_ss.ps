%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[97.37569427 578.46820068]
[92.71785736 564.08776855]
[92.50731659 548.97332764]
[96.76279449 534.46875000]
[105.10589600 521.86383057]
[116.79475403 512.27935791]
[130.79000854 506.56759644]
[129.45178223 491.62744141]
[128.11354065 476.68725586]
[126.77531433 461.74707031]
[125.43708038 446.80688477]
[124.09883881 431.86669922]
[122.76060486 416.92651367]
[121.42237091 401.98632812]
[120.08413696 387.04614258]
[118.74590302 372.10595703]
[117.40766907 357.16577148]
[103.83819580 351.02288818]
[95.10733032 338.83157349]
[93.64128876 323.80767822]
[99.93344879 309.97637939]
[112.38513184 301.09365845]
[111.04689789 286.15347290]
[95.71656799 283.60379028]
[81.55578613 277.17425537]
[69.52902985 267.29650879]
[60.45706558 254.63716125]
[54.96091843 240.05296326]
[53.41939163 224.53273010]
[55.94294357 209.13034058]
[62.36580658 194.89320374]
[72.25685120 182.79095459]
[84.94853210 173.64945984]
[99.58193207 168.09448242]
[98.02140808 153.17587280]
[96.46088409 138.25726318]
[94.90036011 123.33866119]
[93.33983612 108.42005920]
[89.36774445 93.95553589]
[83.09038544 80.33222198]
[76.81301880 66.70890045]
[70.53565979 53.08558655]
[57.73323822 43.78996658]
[59.43417358 28.99280167]
[53.15681076 15.36948586]
[46.87945175 1.74616992]
[40.09946060 -11.63410378]
[32.82622910 -24.75279808]
[25.55299950 -37.87149048]
[18.27976990 -50.99018478]
[11.00654125 -64.10887909]
[3.73331189 -77.22757721]
[-9.96310806 -71.08901215]
[-24.13077545 -66.13411713]
[-38.66761398 -62.39857864]
[-53.46887589 -59.90931702]
[-68.42792511 -58.68427277]
[-83.43697357 -58.73226547]
[-98.38787842 -60.05295181]
[-113.17292023 -62.63681793]
[-127.68556976 -66.46524048]
[-141.82125854 -71.51064301]
[-155.47814941 -77.73667145]
[-168.55781555 -85.09846497]
[-180.96604919 -93.54297638]
[-192.61341858 -103.00936890]
[-203.41601562 -113.42942810]
[-213.29600525 -124.72808075]
[-222.18220520 -136.82391357]
[-230.01058960 -149.62979126]
[-236.72474670 -163.05342102]
[-242.27629089 -176.99810791]
[-246.62524414 -191.36335754]
[-249.74026489 -206.04568481]
[-251.59889221 -220.93928528]
[-252.18775940 -235.93684387]
[-251.50260925 -250.93032837]
[-249.54838562 -265.81167603]
[-246.33915710 -280.47369385]
[-241.89805603 -294.81072998]
[-236.25708008 -308.71948242]
[-229.45686340 -322.09973145]
[-221.54641724 -334.85507202]
[-212.58273315 -346.89358521]
[-202.63040161 -358.12857056]
[-191.76110840 -368.47906494]
[-180.05319214 -377.87045288]
[-167.59100342 -386.23513794]
[-154.46432495 -393.51278687]
[-140.76776123 -399.65100098]
[-126.59996033 -404.60552979]
[-112.06302643 -408.34069824]
[-97.26169586 -410.82955933]
[-82.30261993 -412.05422974]
[-67.29357147 -412.00582886]
[-52.34269714 -410.68478394]
[-37.55772018 -408.10052490]
[-23.04516983 -404.27172852]
[-8.90960979 -399.22595215]
[4.74711132 -392.99957275]
[17.82659531 -385.63745117]
[30.23460197 -377.19262695]
[41.88173294 -367.72592163]
[52.68406296 -357.30557251]
[62.56376266 -346.00668335]
[71.44964600 -333.91061401]
[79.27769470 -321.10452271]
[85.99150085 -307.68072510]
[91.54269409 -293.73590088]
[95.89127350 -279.37054443]
[99.00591278 -264.68814087]
[100.86416626 -249.79449463]
[101.45263672 -234.79690552]
[100.76709747 -219.80343628]
[98.81248474 -204.92213440]
[95.60288239 -190.26020813]
[91.16140747 -175.92327881]
[85.52007294 -162.01467896]
[78.71952057 -148.63461304]
[70.80874634 -135.87947083]
[61.84475327 -123.84117889]
[51.89212418 -112.60645294]
[41.02257156 -102.25624847]
[29.31441307 -92.86514282]
[16.85200500 -84.50080109]
[24.12523460 -71.38211060]
[31.39846420 -58.26341629]
[38.67169571 -45.14472198]
[45.94492340 -32.02602768]
[53.21815491 -18.90733337]
[59.79791641 -32.38719559]
[74.40535736 -35.79640961]
[86.27240753 -26.62182617]
[86.65113068 -11.62660694]
[75.26233673 -1.86467147]
[60.50276566 -4.53119087]
[66.78012848 9.09212494]
[73.05748749 22.71544075]
[85.41091156 31.03663063]
[84.15897369 46.80822372]
[90.43634033 60.43154144]
[96.71369934 74.05485535]
[102.99105835 87.67817688]
[103.48187256 72.68620300]
[107.78528595 58.31677246]
[115.61586761 45.52294540]
[126.45423889 35.15328979]
[139.58152771 27.89559364]
[154.12705994 24.23123169]
[169.12606812 24.40324593]
[183.58374023 28.40023041]
[196.54113770 35.95707703]
[207.13883972 46.57256699]
[214.67395020 59.54261780]
[218.64668274 74.00696564]
[218.79354858 89.00624847]
[215.10479736 103.54560852]
[207.82508850 116.66071320]
[197.43728638 127.48168182]
[184.63034058 135.29080200]
[170.25370789 139.57009888]
[155.26094055 140.03578186]
[140.64643860 136.65693665]
[127.37955475 129.65766907]
[116.34021759 119.50222778]
[108.25844574 106.85953522]
[109.81896973 121.77813721]
[111.37949371 136.69674683]
[112.94001007 151.61535645]
[114.50053406 166.53395081]
[128.85183716 168.62495422]
[142.27456665 174.09194946]
[153.98756409 182.61190796]
[163.31031799 193.68420410]
[169.70257568 206.66014099]
[172.79556274 220.78091431]
[172.41329956 235.22192383]
[168.58264160 249.14105225]
[161.53137207 261.72763062]
[151.67471313 272.24981689]
[139.59086609 280.09698486]
[125.98708344 284.81521606]
[127.32531738 299.75540161]
[141.15742493 306.28381348]
[149.80752563 318.77673340]
[151.03485107 333.82199097]
[144.60960388 347.37088013]
[132.34785461 355.82751465]
[133.68609619 370.76770020]
[135.02432251 385.70788574]
[136.36256409 400.64807129]
[137.70079041 415.58825684]
[139.03903198 430.52844238]
[140.37725830 445.46862793]
[141.71549988 460.40881348]
[143.05372620 475.34899902]
[144.39196777 490.28918457]
[145.73019409 505.22937012]
[160.51776123 508.36297607]
[173.72389221 515.71752930]
[184.17433167 526.63903809]
[190.93980408 540.15643311]
[193.41876221 555.06774902]
[191.39074707 570.04699707]
[185.03610229 583.76232910]
[174.91989136 594.99414062]
[161.94161987 602.74371338]
[147.25531006 606.32196045]
[132.16687012 605.41070557]
[118.01795197 600.09100342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[22 183]
[23 182]
[34 170]
[35 169]
[36 168]
[37 167]
[38 166]
[39 143]
[40 142]
[41 141]
[42 140]
[44 138]
[45 137]
[46 136]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
