%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[24.23266029 656.99578857]
[14.48658562 668.44665527]
[2.94538736 678.08557129]
[-10.05887222 685.63519287]
[-24.15203285 690.87835693]
[-38.92860794 693.66418457]
[-53.96344757 693.91253662]
[-68.82396698 691.61621094]
[-83.08259583 686.84136963]
[-96.32908630 679.72528076]
[-108.18231964 670.47277832]
[-118.30124664 659.35003662]
[-126.39472198 646.67706299]
[-132.22988892 632.81854248]
[-135.63885498 618.17315674]
[-136.52352905 603.16235352]
[-134.85847473 588.21789551]
[-130.69158936 573.76989746]
[-124.14276123 560.23400879]
[-115.40040588 547.99963379]
[-104.71607208 537.41888428]
[-92.39716339 528.79608154]
[-78.79811859 522.37939453]
[-64.31021881 518.35339355]
[-49.35029221 516.83392334]
[-34.34877777 517.86474609]
[-30.80910683 503.28839111]
[-27.26943398 488.71200562]
[-28.78178978 485.52688599]
[-28.82652855 481.45095825]
[-27.00179100 477.18203735]
[-23.23253441 473.57098389]
[-19.04552460 459.16720581]
[-14.85851288 444.76342773]
[-10.67150116 430.35961914]
[-6.48449039 415.95584106]
[-2.29747915 401.55206299]
[1.88953209 387.14828491]
[6.07654333 372.74450684]
[-1.64819300 362.43151855]
[-2.02823567 349.35720825]
[5.29912472 338.28829956]
[17.84568596 333.38949585]
[22.24668312 319.04965210]
[26.64768219 304.70980835]
[31.04867935 290.36996460]
[35.44967651 276.03009033]
[30.06110191 265.20007324]
[33.61028671 253.21728516]
[44.71752548 246.66044617]
[49.33153534 232.38771057]
[45.88428879 217.89752197]
[57.49139404 207.14643860]
[50.50210190 194.04356384]
[54.97804260 179.50325012]
[68.76893616 172.26107788]
[73.38294220 157.98834229]
[77.99695587 143.71560669]
[74.54971313 129.22541809]
[86.15681458 118.47433472]
[90.77082062 104.20160675]
[90.05668640 96.17274475]
[95.56123352 89.75162506]
[100.38722992 75.54917145]
[104.46689606 61.11461639]
[107.78916168 46.48715591]
[111.11141968 31.85969734]
[114.43367767 17.23223686]
[117.75593567 2.60477710]
[121.07819366 -12.02268314]
[124.29147339 -26.67447090]
[127.39558411 -41.34977341]
[115.39775848 -32.34686661]
[100.40177155 -32.00019073]
[88.00073242 -40.43905258]
[82.81993866 -54.51596069]
[86.79169464 -68.98057556]
[98.43462372 -78.43795776]
[113.40621185 -79.36074066]
[126.12242889 -71.40473938]
[131.84053040 -57.53618240]
[136.66651917 -71.73863983]
[141.49252319 -85.94109344]
[141.29049683 -95.07328796]
[146.49754333 -100.31814575]
[151.53445435 -114.44718170]
[156.57136536 -128.57620239]
[161.50296021 -142.74234009]
[166.32896423 -156.94479370]
[171.15495300 -171.14724731]
[174.69462585 -185.72363281]
[176.91975403 -200.55767822]
[179.14486694 -215.39172363]
[181.36997986 -230.22575378]
[183.04151917 -245.13233948]
[184.15716553 -260.09078979]
[185.27282715 -275.04925537]
[186.38847351 -290.00769043]
[172.30972290 -295.51043701]
[160.47946167 -304.91983032]
[151.94961548 -317.39913940]
[147.47865295 -331.83871460]
[147.46414185 -346.95465088]
[151.90736389 -361.40280151]
[160.41322327 -373.89846802]
[172.22540283 -383.33053589]
[186.29354858 -388.86032104]
[201.36676025 -389.99612427]
[216.10470581 -386.63693237]
[229.19691467 -379.08142090]
[239.47923279 -368.00149536]
[246.03736877 -354.38229370]
[248.28817749 -339.43487549]
[246.03150940 -324.48834229]
[239.46803284 -310.87173462]
[229.18136597 -299.79580688]
[216.08619690 -292.24545288]
[201.34692383 -288.89205933]
[200.23127747 -273.93359375]
[199.11563110 -258.97512817]
[197.99998474 -244.01669312]
[210.89614868 -251.67753601]
[224.97958374 -246.51451111]
[229.86849976 -232.33358765]
[221.95895386 -219.58842468]
[207.08158875 -217.67427063]
[196.20402527 -228.00064087]
[193.97891235 -213.16659546]
[191.75379944 -198.33255005]
[189.52867126 -183.49851990]
[199.43783569 -194.75944519]
[213.21765137 -200.68539429]
[228.20744324 -200.13214111]
[241.51292419 -193.20654297]
[250.56501770 -181.24578857]
[253.61590576 -166.55932617]
[250.07650757 -151.98287964]
[240.63021851 -140.33094788]
[227.10098267 -133.85330200]
[212.10107422 -133.80072021]
[198.52674866 -140.18330383]
[188.99897766 -151.76872253]
[185.35742188 -166.32125854]
[180.53141785 -152.11880493]
[175.70541382 -137.91635132]
[176.52976990 -130.57180786]
[170.70039368 -123.53929138]
[165.66348267 -109.41026306]
[160.62657166 -95.28123474]
[155.69497681 -81.11509705]
[150.86897278 -66.91264343]
[146.04298401 -52.71018600]
[142.07087708 -38.24566269]
[138.96676636 -23.57036018]
[140.65803528 -16.37582016]
[135.70565796 -8.70042324]
[132.38339233 5.92703676]
[129.06114197 20.55449677]
[125.73887634 35.18195724]
[122.41661835 49.80941772]
[119.09436035 64.43687439]
[131.73973083 56.36875916]
[146.62854004 58.19174576]
[156.95382690 69.07238770]
[157.99501038 84.03620911]
[149.27606201 96.24195099]
[134.78318787 100.10930634]
[121.14231873 93.87017822]
[114.58969116 80.37516785]
[109.76368713 94.57762146]
[105.04355621 108.81561279]
[100.42955017 123.08834839]
[103.54676819 138.59942627]
[92.26969147 148.32962036]
[87.65567780 162.60235596]
[83.04167175 176.87509155]
[89.98345184 190.81959534]
[85.10086823 205.22845459]
[71.76412964 211.76045227]
[74.88134766 227.27153015]
[63.60426712 237.00172424]
[58.99026108 251.27445984]
[63.26242065 269.18618774]
[49.78952408 280.43109131]
[45.38852692 294.77093506]
[40.98752975 309.11080933]
[36.58653259 323.45065308]
[32.18553162 337.79049683]
[40.66320419 353.09240723]
[35.55172729 369.46884155]
[20.48032570 376.93151855]
[16.29331398 391.33529663]
[12.10630322 405.73907471]
[7.91929150 420.14285278]
[3.73228049 434.54663086]
[-0.45473081 448.95043945]
[-4.64174223 463.35421753]
[-8.82875347 477.75799561]
[-12.69305897 492.25167847]
[-16.23273087 506.82806396]
[-19.77240372 521.40441895]
[-5.96886539 527.36853027]
[6.62809277 535.57977295]
[17.65603065 545.80194092]
[26.79765511 557.74090576]
[33.78993988 571.05316162]
[38.43170547 585.35565186]
[40.58939743 600.23693848]
[40.20093918 615.26879883]
[37.27750015 630.01879883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 201]
[27 200]
[28 199]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[43 188]
[44 187]
[45 186]
[46 185]
[47 184]
[50 182]
[51 181]
[53 179]
[56 176]
[57 175]
[58 174]
[60 172]
[61 171]
[63 170]
[64 169]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 154]
[72 153]
[81 152]
[82 151]
[83 150]
[85 149]
[86 148]
[87 147]
[88 145]
[89 144]
[90 143]
[91 130]
[92 129]
[93 128]
[94 127]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
