%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[66.23599243 918.43280029]
[51.24665833 917.82171631]
[36.29092407 916.64721680]
[21.38994980 914.91107178]
[6.56482649 912.61560059]
[-8.16346073 909.76409912]
[-22.77406502 906.36065674]
[-37.24631119 902.40997314]
[-51.55970764 897.91778564]
[-65.69400024 892.89031982]
[-79.62918854 887.33477783]
[-93.34553528 881.25903320]
[-106.82363892 874.67163086]
[-120.04441833 867.58184814]
[-132.98916626 859.99981689]
[-145.63954163 851.93627930]
[-157.97766113 843.40258789]
[-169.98605347 834.41076660]
[-181.64772034 824.97369385]
[-192.94616699 815.10461426]
[-203.86538696 804.81750488]
[-214.38992310 794.12701416]
[-224.50488281 783.04815674]
[-234.19596863 771.59667969]
[-243.44944763 759.78875732]
[-252.25221252 747.64117432]
[-260.59182739 735.17102051]
[-268.45645142 722.39599609]
[-275.83499146 709.33422852]
[-282.71701050 696.00408936]
[-289.09271240 682.42456055]
[-294.95312500 668.61486816]
[-300.28994751 654.59442139]
[-305.09561157 640.38317871]
[-309.36331177 626.00128174]
[-313.08700562 611.46899414]
[-316.26144409 596.80688477]
[-318.88211060 582.03582764]
[-320.94534302 567.17657471]
[-322.44815063 552.25024414]
[-323.38845825 537.27795410]
[-323.76489258 522.28094482]
[-323.57696533 507.28033447]
[-322.82492065 492.29739380]
[-321.50982666 477.35339355]
[-319.63354492 462.46939087]
[-317.19873047 447.66653442]
[-314.20883179 432.96569824]
[-310.66806030 418.38775635]
[-306.58145142 403.95333862]
[-301.95480347 389.68283081]
[-296.79461670 375.59643555]
[-291.10824585 361.71414185]
[-284.90368652 348.05554199]
[-278.18978882 334.64001465]
[-270.97598267 321.48651123]
[-263.27252197 308.61367798]
[-255.09030151 296.03970337]
[-246.44091797 283.78240967]
[-237.33657837 271.85913086]
[-227.79019165 260.28674316]
[-217.81526184 249.08164978]
[-207.42591858 238.25967407]
[-196.63685608 227.83616638]
[-185.46334839 217.82586670]
[-173.92121887 208.24293518]
[-162.02679443 199.10095215]
[-149.79690552 190.41284180]
[-137.24887085 182.19091797]
[-124.40043640 174.44679260]
[-111.26981354 167.19145203]
[-97.87556458 160.43515015]
[-84.23666382 154.18745422]
[-70.37240601 148.45719910]
[-56.30241394 143.25251770]
[-42.04660797 138.58074951]
[-27.62516022 134.44853210]
[-13.05848598 130.86169434]
[1.63279891 127.82532501]
[16.42790031 125.34371948]
[31.30587578 123.42038727]
[46.24567032 122.05804443]
[61.22613525 121.25862885]
[76.22606659 121.02327728]
[91.22423553 121.35230255]
[92.11705780 106.37889862]
[89.41508484 98.78469849]
[93.13626862 91.18972015]
[94.25191498 76.23126984]
[95.36756134 61.27281570]
[96.48321533 46.31436157]
[97.59886169 31.35590935]
[83.07592010 27.42137527]
[69.56015778 20.80921364]
[57.54016113 11.75845528]
[47.45045090 0.59627539]
[39.65576172 -12.27381897]
[34.43786621 -26.38658142]
[31.98538780 -41.23184586]
[32.38698196 -56.27296066]
[35.62813568 -70.96620941]
[41.59167480 -84.78042603]
[50.06202698 -97.21624756]
[60.73299408 -107.82411957]
[73.21882629 -116.22058105]
[87.06816864 -122.10209656]
[101.78037262 -125.25605774]
[116.82360840 -125.56845093]
[131.65406799 -123.02798462]
[145.73564148 -117.72649384]
[158.55928040 -109.85562134]
[169.66143799 -99.69989777]
[178.64076233 -87.62644196]
[185.17265320 -74.07170868]
[189.02099609 -59.52568436]
[190.04667664 -44.51420593]
[188.21261597 -29.57992554]
[183.58509827 -15.26270962]
[176.33143616 -2.08011556]
[166.71382141 9.49131393]
[155.07992554 19.03327942]
[141.85031128 26.20084381]
[127.50323486 30.73490334]
[112.55731201 32.47155762]
[111.44166565 47.43001175]
[110.32601929 62.38846588]
[109.21037292 77.34691620]
[108.09471893 92.30537415]
[107.09046173 107.27171326]
[106.19764709 122.24512482]
[121.12864685 123.70066833]
[135.99432373 125.71681976]
[150.77365112 128.29071045]
[165.44570923 131.41871643]
[179.98971558 135.09638977]
[194.38508606 139.31852722]
[208.61146545 144.07916260]
[222.64869690 149.37155151]
[236.47692871 155.18821716]
[250.07656860 161.52090454]
[263.42837524 168.36067200]
[276.51348877 175.69781494]
[289.31332397 183.52197266]
[301.80981445 191.82205200]
[313.98522949 200.58631897]
[325.82238770 209.80235291]
[337.30447388 219.45712280]
[348.41531372 229.53697205]
[359.13909912 240.02760315]
[369.46072388 250.91419983]
[379.36550903 262.18133545]
[388.83947754 273.81304932]
[397.86923218 285.79290771]
[406.44195557 298.10397339]
[414.54556274 310.72875977]
[422.16851807 323.64941406]
[429.30007935 336.84768677]
[435.93014526 350.30487061]
[442.04931641 364.00189209]
[447.64895630 377.91943359]
[452.72113037 392.03775024]
[457.25863647 406.33685303]
[461.25509644 420.79650879]
[464.70480347 435.39627075]
[467.60290527 450.11544800]
[469.94528198 464.93322754]
[471.72863770 479.82861328]
[472.95046997 494.78057861]
[473.60897827 509.76788330]
[473.70327759 524.76934814]
[473.23324585 539.76379395]
[472.19952393 554.72991943]
[470.60360718 569.64654541]
[468.44769287 584.49261475]
[465.73489380 599.24707031]
[462.46902466 613.88903809]
[458.65469360 628.39782715]
[454.29730225 642.75286865]
[449.40304565 656.93377686]
[443.97885132 670.92065430]
[438.03237915 684.69354248]
[431.57202148 698.23303223]
[424.60696411 711.51989746]
[417.14706421 724.53540039]
[409.20285034 737.26104736]
[400.78558350 749.67889404]
[391.90716553 761.77136230]
[382.58016968 773.52130127]
[372.81781006 784.91204834]
[362.63391113 795.92755127]
[352.04284668 806.55218506]
[341.05966187 816.77093506]
[329.69982910 826.56933594]
[317.97949219 835.93347168]
[305.91522217 844.85009766]
[293.52410889 853.30664062]
[280.82363892 861.29113770]
[267.83181763 868.79223633]
[254.56706238 875.79931641]
[241.04811096 882.30249023]
[227.29411316 888.29254150]
[213.32452393 893.76098633]
[199.15913391 898.70013428]
[184.81797791 903.10296631]
[170.32135010 906.96319580]
[155.68978882 910.27539062]
[140.94400024 913.03491211]
[126.10484314 915.23779297]
[111.19332123 916.88098145]
[96.23054504 917.96209717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 130]
[86 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
