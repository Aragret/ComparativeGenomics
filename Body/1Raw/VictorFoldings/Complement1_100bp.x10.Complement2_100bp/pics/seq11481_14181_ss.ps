%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[47.37408829 694.30328369]
[32.80292130 697.88330078]
[18.04373550 700.58551025]
[3.14936185 702.40020752]
[-11.82687950 703.32092285]
[-26.83137894 703.34436035]
[-41.81042099 702.47039795]
[-56.71038437 700.70220947]
[-71.47793579 698.04608154]
[-86.06020355 694.51153564]
[-100.40499878 690.11126709]
[-114.46095276 684.86096191]
[-128.17776489 678.77947998]
[-141.50631714 671.88854980]
[-154.39891052 664.21282959]
[-166.80938721 655.77978516]
[-178.69332886 646.61968994]
[-190.00816345 636.76525879]
[-200.71342468 626.25177002]
[-210.77076721 615.11694336]
[-220.14419556 603.40051270]
[-228.80017090 591.14447021]
[-236.70767212 578.39276123]
[-243.83840942 565.19091797]
[-250.16687012 551.58630371]
[-255.67037964 537.62756348]
[-260.32925415 523.36462402]
[-264.12677002 508.84863281]
[-267.04940796 494.13153076]
[-269.08666992 479.26596069]
[-270.23123169 464.30514526]
[-270.47903442 449.30267334]
[-269.82919312 434.31225586]
[-268.28402710 419.38751221]
[-265.84902954 404.58187866]
[-262.53298950 389.94839478]
[-258.34771729 375.53939819]
[-253.30821228 361.40649414]
[-247.43252563 347.60025024]
[-240.74168396 334.17013550]
[-233.25962830 321.16421509]
[-225.01316833 308.62899780]
[-216.03179932 296.60940552]
[-206.34768677 285.14843750]
[-195.99549866 274.28717041]
[-185.01228333 264.06442261]
[-173.43734741 254.51681519]
[-161.31216431 245.67854309]
[-148.68009949 237.58122253]
[-135.58639526 230.25384521]
[-122.07792664 223.72264099]
[-108.20303345 218.01098633]
[-94.01139832 213.13934326]
[-79.55381012 209.12513733]
[-64.88204193 205.98274231]
[-50.04860306 203.72340393]
[-35.10659409 202.35522461]
[-20.10950851 201.88308716]
[-5.11102867 202.30868530]
[9.83515263 203.63047791]
[24.67553329 205.84378052]
[39.35698700 208.94061279]
[53.82695770 212.90992737]
[58.65295410 198.70747375]
[63.47895050 184.50502014]
[68.30494690 170.30256653]
[73.13095093 156.10011292]
[77.95694733 141.89765930]
[74.72582245 127.35774231]
[86.49170685 116.78067017]
[91.31770325 102.57820892]
[90.12055969 98.91225433]
[90.54512024 94.73641968]
[92.78288269 90.78680420]
[96.68931580 87.85771179]
[102.14467621 73.88491058]
[107.60003662 59.91211319]
[113.05538940 45.93931580]
[113.26134491 36.80720901]
[118.69738770 31.80008888]
[124.36017609 17.91006279]
[130.02296448 4.02003527]
[135.68574524 -9.86999130]
[122.33335876 -16.72586632]
[109.62931061 -24.71939850]
[97.67029572 -33.78975296]
[86.54733276 -43.86789703]
[76.34506989 -54.87713242]
[67.14115143 -66.73366547]
[59.00564194 -79.34725952]
[52.00044250 -92.62191772]
[46.17887497 -106.45661163]
[41.58524323 -120.74604034]
[38.25450897 -135.38146973]
[36.21202087 -150.25149536]
[35.47332764 -165.24293518]
[36.04404831 -180.24172974]
[37.91983795 -195.13369751]
[41.08642197 -209.80551147]
[45.51969910 -224.14550781]
[51.18593216 -238.04454041]
[58.04199219 -251.39683533]
[66.03570557 -264.10076904]
[75.10622406 -276.05966187]
[85.18452454 -287.18249512]
[96.19390106 -297.38458252]
[108.05056763 -306.58834839]
[120.66427612 -314.72366333]
[133.93902588 -321.72869873]
[147.77380371 -327.55004883]
[162.06330872 -332.14349365]
[176.69877625 -335.47402954]
[191.56881714 -337.51629639]
[206.56028748 -338.25479126]
[221.55906677 -337.68383789]
[236.45100403 -335.80786133]
[251.12278748 -332.64105225]
[265.46270752 -328.20758057]
[279.36166382 -322.54116821]
[292.71386719 -315.68490601]
[305.41769409 -307.69100952]
[317.37643433 -298.62033081]
[328.49914551 -288.54187012]
[338.70108032 -277.53234863]
[347.90466309 -265.67556763]
[356.03982544 -253.06173706]
[363.04464722 -239.78688049]
[368.86584473 -225.95202637]
[373.45907593 -211.66247559]
[376.78939819 -197.02694702]
[378.83145142 -182.15687561]
[379.56973267 -167.16539001]
[378.99859619 -152.16662598]
[377.12237549 -137.27470398]
[373.95538330 -122.60298157]
[369.52169800 -108.26311493]
[363.85507202 -94.36423492]
[356.99865723 -81.01213074]
[349.00457764 -68.30842590]
[339.93371582 -56.34979248]
[329.85510254 -45.22724915]
[318.84545898 -35.02545166]
[306.98852539 -25.82203674]
[294.37460327 -17.68705368]
[281.09963989 -10.68241405]
[267.26470947 -4.86142778]
[252.97506714 -0.26839766]
[238.33950806 3.06172013]
[223.46940613 5.10358095]
[208.47792053 5.84164476]
[193.47915649 5.27029419]
[178.58726501 3.39387774]
[163.91557312 0.22667642]
[149.57577515 -4.20720530]
[143.91299438 9.68282223]
[138.25019836 23.57284927]
[132.58741760 37.46287537]
[127.02819061 51.39467239]
[121.57283020 65.36746979]
[116.11747742 79.34027100]
[110.66211700 93.31306458]
[105.52015686 107.40420532]
[100.69416046 121.60666656]
[103.58010101 137.16242981]
[92.15940094 146.72364807]
[87.33340454 160.92611694]
[82.50740814 175.12857056]
[77.68140411 189.33102417]
[72.85540771 203.53347778]
[68.02941132 217.73593140]
[81.92206573 223.40423584]
[95.45085907 229.89324951]
[108.56737518 237.17971802]
[121.22464752 245.23756409]
[133.37736511 254.03796387]
[144.98204041 263.54937744]
[155.99711609 273.73779297]
[166.38316345 284.56671143]
[176.10299683 295.99737549]
[185.12184143 307.98889160]
[193.40739441 320.49829102]
[200.93000793 333.48080444]
[207.66273499 346.88998413]
[213.58149719 360.67779541]
[218.66508484 374.79489136]
[222.89530945 389.19073486]
[226.25703430 403.81381226]
[228.73820496 418.61178589]
[230.32997131 433.53161621]
[231.02661133 448.51995850]
[230.82563782 463.52313232]
[229.72776794 478.48742676]
[227.73692322 493.35928345]
[224.86026001 508.08544922]
[221.10804749 522.61322021]
[216.49371338 536.89062500]
[211.03381348 550.86645508]
[204.74784851 564.49078369]
[197.65835571 577.71484375]
[189.79069519 590.49121094]
[181.17303467 602.77416992]
[171.83621216 614.51977539]
[161.81367493 625.68597412]
[151.14129639 636.23278809]
[139.85725403 646.12249756]
[128.00198364 655.31970215]
[115.61788177 663.79138184]
[102.74931335 671.50732422]
[89.44232941 678.43981934]
[75.74457550 684.56408691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 170]
[64 169]
[65 168]
[66 167]
[67 166]
[68 165]
[70 163]
[71 162]
[75 161]
[76 160]
[77 159]
[78 158]
[80 157]
[81 156]
[82 155]
[83 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
