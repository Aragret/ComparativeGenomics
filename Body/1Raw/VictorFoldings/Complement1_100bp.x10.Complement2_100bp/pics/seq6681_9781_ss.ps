%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[73.89889526 528.56750488]
[59.60756683 523.89764404]
[46.27985382 516.93902588]
[34.27935410 507.88156128]
[23.93344879 496.97229004]
[15.52437973 484.50885010]
[9.28155327 470.83123779]
[5.37527847 456.31259155]
[3.91212106 441.34899902]
[4.93199778 426.34869385]
[8.40708447 411.72085571]
[14.24257946 397.86456299]
[22.27928543 385.15780640]
[32.29795456 373.94729614]
[44.02527237 364.53878784]
[57.14130783 357.18899536]
[71.28824615 352.09841919]
[86.08014679 349.40591431]
[85.85681915 334.40756226]
[85.63349152 319.40924072]
[77.70755768 306.79858398]
[85.23854065 292.88473511]
[85.01521301 277.88638306]
[83.09999084 275.83941650]
[81.88020325 272.91049194]
[81.69584656 269.36062622]
[82.78620911 265.56912231]
[85.25183868 261.99493408]
[85.92162323 247.00990295]
[86.59140778 232.02487183]
[87.26119232 217.03982544]
[75.51847076 207.91587830]
[71.35067749 193.45581055]
[76.55754089 179.14700317]
[89.33921051 170.54846191]
[90.00899506 155.56341553]
[90.67877960 140.57838440]
[83.51750183 127.51831818]
[91.86329651 114.07740021]
[84.53608704 105.02458954]
[85.14273071 93.39389038]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[91.65173340 61.42639160]
[95.28401947 54.98991013]
[96.39966583 40.03145599]
[97.51531219 25.07300186]
[98.63096619 10.11454773]
[99.74661255 -4.84390545]
[89.05915070 5.68121290]
[74.24390411 8.02825832]
[60.82660675 1.32183945]
[53.81156921 -11.93671417]
[55.81522751 -26.80228996]
[66.09027100 -37.73039627]
[80.80435944 -40.64511871]
[94.46949768 -34.45933914]
[101.98918915 -21.47905731]
[104.87445831 -36.19894791]
[107.75973511 -50.91883850]
[110.64500427 -65.63873291]
[110.64500427 -80.63873291]
[107.75973511 -95.35861969]
[104.87445831 -110.07851410]
[101.98918915 -124.79840851]
[99.10391235 -139.51829529]
[86.87220764 -140.06004333]
[75.03277588 -143.15148926]
[64.11075592 -148.65235901]
[54.58991241 -156.31556702]
[46.89123535 -165.79832458]
[41.35430908 -176.67749023]
[38.22235107 -188.46842957]
[37.63151550 -200.64657593]
[39.60498428 -212.67088318]
[44.05207062 -224.00770569]
[50.77238464 -234.15458679]
[59.46485138 -242.66252136]
[69.74121857 -249.15577698]
[81.14337158 -253.34851074]
[79.36090851 -268.24221802]
[77.57843781 -283.13592529]
[73.45143890 -291.28491211]
[75.88201141 -298.26446533]
[74.32148743 -313.18307495]
[72.76096344 -328.10165405]
[71.20043945 -343.02026367]
[69.63992310 -357.93887329]
[54.67398453 -359.62258911]
[40.42004395 -364.48461914]
[27.54477501 -372.29751587]
[16.65037918 -382.69589233]
[8.24640846 -395.19338989]
[2.72593069 -409.20547485]
[0.34714821 -424.07675171]
[1.22132146 -439.11172485]
[5.30756378 -453.60711670]
[12.41475391 -466.88500977]
[22.21047592 -478.32431030]
[34.23656845 -487.39001465]
[47.93054581 -493.65811157]
[62.65191650 -496.83544922]
[77.71213531 -496.77334595]
[92.40680695 -493.47476196]
[106.04864502 -487.09399414]
[117.99958038 -477.92944336]
[127.70066071 -466.40972900]
[134.69813538 -453.07373047]
[138.66473389 -438.54513550]
[139.41491699 -423.50347900]
[136.91360474 -408.65228271]
[131.27778625 -394.68621826]
[122.77107239 -382.25842285]
[111.79131317 -371.95022583]
[98.85206604 -364.24374390]
[84.55852509 -359.49938965]
[86.11904907 -344.58078003]
[87.67957306 -329.66220093]
[89.24009705 -314.74359131]
[90.80061340 -299.82498169]
[92.47216034 -284.91839600]
[94.25462341 -270.02468872]
[96.03708649 -255.13096619]
[113.70520782 -252.20011902]
[129.63629150 -243.98098755]
[142.28819275 -231.25761414]
[150.43267822 -215.25059509]
[153.27456665 -197.49998474]
[150.52944946 -179.71717834]
[142.45207214 -163.61985779]
[129.81271362 -150.76611328]
[113.82380676 -142.40356445]
[116.70907593 -127.68367767]
[119.59435272 -112.96378326]
[122.47962189 -98.24389648]
[125.36489868 -83.52400208]
[129.28204346 -98.00350189]
[136.28244019 -111.26979828]
[146.02450562 -122.67559052]
[158.03291321 -131.66436768]
[171.72174072 -137.79756165]
[186.42308044 -140.77589417]
[201.41963196 -140.45407104]
[215.97966003 -136.84777832]
[229.39277649 -130.13298035]
[241.00450134 -120.63729858]
[250.24827576 -108.82406616]
[256.67309570 -95.26966095]
[259.96545410 -80.63544464]
[259.96472168 -65.63544464]
[256.67092896 -51.00154495]
[250.24479675 -37.44776917]
[240.99986267 -25.63543510]
[229.38722229 -16.14089203]
[215.97344971 -9.42739964]
[201.41307068 -5.82252455]
[186.41648865 -5.50215626]
[171.71543884 -8.48192692]
[158.02720642 -14.61644554]
[146.01966858 -23.60639763]
[136.27871704 -35.01314163]
[129.27961731 -48.28011703]
[125.36489868 -62.75345993]
[122.47962189 -48.03356934]
[119.59435272 -33.31367493]
[116.70907593 -18.59378433]
[114.70506287 -3.72825670]
[113.58941650 11.23019695]
[112.47377014 26.18865013]
[111.35811615 41.14710236]
[110.24246979 56.10555649]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[116.23766327 100.84693909]
[106.84833527 114.74718475]
[113.96170807 128.87907410]
[105.66381836 141.24816895]
[104.99403381 156.23320007]
[104.32424927 171.21824646]
[116.28782654 180.92283630]
[120.19736481 195.63911438]
[114.75612640 209.66967773]
[102.24623108 217.70960999]
[101.57644653 232.69465637]
[100.90666199 247.67968750]
[100.23687744 262.66473389]
[100.01354980 277.66305542]
[100.23687744 292.66140747]
[108.17877960 306.34484863]
[100.63182831 319.18591309]
[100.85515594 334.18423462]
[101.07848358 349.18258667]
[115.94399261 351.43347168]
[130.23622131 356.10058594]
[143.56527710 363.05661011]
[155.56752014 372.11178589]
[165.91552734 383.01904297]
[174.32699585 395.48086548]
[180.57246399 409.15728760]
[184.48153687 423.67517090]
[185.94757080 438.63848877]
[184.93058777 453.63900757]
[181.45831299 468.26748657]
[175.62548828 482.12490845]
[167.59123230 494.83319092]
[157.57472229 506.04568481]
[145.84921265 515.45642090]
[132.73460388 522.80877686]
[118.58864594 527.90203857]
[103.79726410 530.59741211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 192]
[19 191]
[20 190]
[22 188]
[23 187]
[28 186]
[29 185]
[30 184]
[31 183]
[35 179]
[36 178]
[37 177]
[39 175]
[42 173]
[43 172]
[45 171]
[46 170]
[47 169]
[48 168]
[49 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[80 123]
[81 122]
[82 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
