%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[120.26646423 663.49786377]
[116.32709503 678.41381836]
[104.93350983 688.81524658]
[89.72135925 691.38311768]
[75.54478455 685.29797363]
[66.92747498 672.50170898]
[66.61919403 657.07739258]
[74.71830750 643.94696045]
[88.64041138 637.30029297]
[90.42287445 622.40655518]
[92.20534515 607.51287842]
[93.98780823 592.61914062]
[87.81772614 579.06262207]
[97.14009094 566.27966309]
[98.92256165 551.38592529]
[100.70502472 536.49224854]
[102.48749542 521.59851074]
[104.26995850 506.70480347]
[105.16277313 491.73138428]
[105.16277313 476.73138428]
[105.16277313 461.73138428]
[105.16277313 446.73138428]
[105.16277313 431.73138428]
[91.67971039 425.35388184]
[82.26397705 413.70684814]
[78.82478333 399.06674194]
[82.09642792 384.32507324]
[91.48227692 372.41738892]
[105.16277313 365.73867798]
[105.16277313 350.73867798]
[105.16277313 335.73867798]
[105.16277313 320.73867798]
[105.16277313 305.73867798]
[97.42547607 293.01141357]
[105.16277313 279.21124268]
[105.16277313 264.21124268]
[105.16277313 249.21122742]
[104.49298859 234.22619629]
[103.15475464 219.28601074]
[101.81652069 204.34582520]
[100.47828674 189.40563965]
[91.63636780 177.41940308]
[98.11162567 162.98397827]
[96.77339172 148.04379272]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.62465668 68.23462677]
[88.06413269 53.31602097]
[86.28166962 38.42230606]
[84.49920654 23.52858734]
[82.71673584 8.63486958]
[68.69638824 2.52118683]
[59.67816925 -9.70863056]
[58.00342560 -24.71068382]
[64.02242279 -38.44486237]
[76.02695465 -47.26284790]
[74.24448395 -62.15656281]
[72.46202087 -77.05028534]
[57.46208954 -78.23092651]
[42.98537445 -82.31407928]
[29.58776093 -89.14101410]
[17.78331566 -98.44766998]
[8.02457047 -109.87488556]
[0.68516427 -122.98226166]
[-3.95445681 -137.26512146]
[-5.71775675 -152.17393494]
[-4.53882456 -167.13546753]
[-0.46483928 -181.57487488]
[6.34581900 -194.93768311]
[15.62972260 -206.71116638]
[27.02858543 -216.44398499]
[40.10309219 -223.76348877]
[54.34982681 -228.39001465]
[52.56735992 -243.28372192]
[50.78489685 -258.17742920]
[49.00242996 -273.07116699]
[47.21996307 -287.96487427]
[43.09296036 -296.11386108]
[45.52353668 -303.09338379]
[43.96301270 -318.01199341]
[34.83199692 -330.93234253]
[41.20323181 -344.39550781]
[29.87383461 -334.56469727]
[15.09702015 -337.14263916]
[7.76570940 -350.22894287]
[13.28427029 -364.17691040]
[27.58462524 -368.70458984]
[40.12422943 -360.47576904]
[39.67761993 -375.46911621]
[39.23101425 -390.46246338]
[38.78440857 -405.45581055]
[35.64028931 -411.27182007]
[35.87075043 -416.95019531]
[38.55443192 -420.90075684]
[38.55443192 -435.90075684]
[24.49724388 -441.68554688]
[13.72737217 -452.41299438]
[7.88714123 -466.44726562]
[7.86714458 -481.64819336]
[13.67043209 -495.69775391]
[24.41204453 -506.45349121]
[38.45396423 -512.27526855]
[53.65489960 -512.27526855]
[67.69681549 -506.45349121]
[78.43843079 -495.69775391]
[84.24172211 -481.64819336]
[84.22172546 -466.44726562]
[78.38149261 -452.41299438]
[67.61161804 -441.68554688]
[53.55443192 -435.90075684]
[53.55443192 -420.90075684]
[53.77775955 -405.90240479]
[54.22436523 -390.90905762]
[54.67097092 -375.91571045]
[55.11757660 -360.92236328]
[56.12183762 -345.95602417]
[65.14123535 -334.10275269]
[58.88161850 -319.57250977]
[60.44213867 -304.65393066]
[62.11368179 -289.74734497]
[63.89614487 -274.85363770]
[65.67861176 -259.95989990]
[67.46107483 -245.06619263]
[69.24354553 -230.17247009]
[84.17968750 -229.03852844]
[98.61219025 -225.01103210]
[111.98586273 -218.24298096]
[123.78585815 -208.99279785]
[133.55751038 -197.61454773]
[140.92381287 -184.54431152]
[145.60005188 -170.28349304]
[147.40470886 -155.37963867]
[146.26655579 -140.40530396]
[142.22747803 -125.93616486]
[135.44091797 -112.52881622]
[126.16601562 -100.69940186]
[114.75777435 -90.90373230]
[101.65344238 -83.51970673]
[87.35573578 -78.83274841]
[89.13820648 -63.93902969]
[90.92066956 -49.04531479]
[104.66702271 -43.30916977]
[113.75700378 -31.38321877]
[115.66971588 -16.40964508]
[109.79215240 -2.39711428]
[97.61045837 6.85240364]
[99.39292145 21.74612045]
[101.17538452 36.63983917]
[102.95785522 51.53355408]
[106.09197235 55.13721466]
[106.99556732 60.74796677]
[104.56484222 66.89639282]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.71357727 146.70555115]
[113.05181122 161.64573669]
[121.98944855 174.70059204]
[115.41847229 188.06739807]
[116.75670624 203.00758362]
[118.09494019 217.94776917]
[119.43317413 232.88795471]
[129.85725403 222.10191345]
[144.85208130 221.70811462]
[155.82794189 231.93211365]
[156.49737549 246.91717529]
[146.47688293 258.07916260]
[131.50666809 259.02395630]
[120.16277313 249.21122742]
[120.16277313 264.21124268]
[120.16277313 279.21124268]
[127.90007782 293.01141357]
[120.16277313 305.73867798]
[120.16277313 320.73867798]
[120.16277313 335.73867798]
[120.16277313 350.73867798]
[120.16277313 365.73867798]
[133.84327698 372.41738892]
[143.22912598 384.32507324]
[146.50076294 399.06674194]
[143.06156921 413.70684814]
[133.64584351 425.35388184]
[120.16277313 431.73138428]
[120.16277313 446.73138428]
[120.16277313 461.73138428]
[120.16277313 476.73138428]
[120.16277313 491.73138428]
[130.03781128 480.44052124]
[144.63745117 476.99807739]
[158.51638794 482.68798828]
[166.49812317 495.38806152]
[165.60566711 510.36148071]
[156.17187500 522.02355957]
[141.71533203 526.02459717]
[127.62796021 520.87231445]
[119.16367340 508.48724365]
[117.38121033 523.38098145]
[115.59873962 538.27471924]
[113.81627655 553.16839600]
[112.03381348 568.06213379]
[118.07640076 582.68395996]
[108.88153076 594.40161133]
[107.09906006 609.29534912]
[105.31659698 624.18902588]
[103.53412628 639.08276367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[14 205]
[15 204]
[16 203]
[17 202]
[18 201]
[19 192]
[20 191]
[21 190]
[22 189]
[23 188]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[35 176]
[36 175]
[37 174]
[38 167]
[39 166]
[40 165]
[41 164]
[43 162]
[44 161]
[45 160]
[46 159]
[49 156]
[50 155]
[51 152]
[52 151]
[53 150]
[54 149]
[59 144]
[60 143]
[61 142]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[82 122]
[83 121]
[85 119]
[91 118]
[92 117]
[93 116]
[94 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
