%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[155.11804199 309.29907227]
[153.35369873 294.39685059]
[152.64492798 279.40728760]
[152.99528503 264.40509033]
[154.40301514 249.46496582]
[156.86111450 234.66136169]
[160.35731506 220.06802368]
[164.87420654 205.75765991]
[170.38929749 191.80155945]
[176.87509155 178.26925659]
[184.29930115 165.22816467]
[169.41775513 164.60444641]
[162.22883606 150.51083374]
[149.74903870 142.18888855]
[137.26924133 133.86695862]
[124.78945160 125.54500580]
[112.30966187 117.22306061]
[100.26434326 121.16817474]
[88.12426758 117.52508545]
[80.24131012 107.59973145]
[79.44130707 94.95008087]
[67.08679199 86.44325256]
[54.73228455 77.93642426]
[37.59003067 81.42389679]
[23.50657272 71.62741852]
[20.91790771 55.01002884]
[8.43811321 46.68808746]
[-4.04168034 38.36614227]
[-16.52147293 30.04419899]
[-29.00126839 21.72225571]
[-41.48106003 13.40031147]
[-57.25524139 12.18135452]
[-63.55152893 -1.31701541]
[-72.83156586 10.47769070]
[-83.00839233 21.50792885]
[-94.01928711 31.70569420]
[-105.79634094 41.00811386]
[-118.26696014 49.35783386]
[-131.35424805 56.70337296]
[-144.97752380 62.99944305]
[-159.05278015 68.20722961]
[-173.49325562 72.29462433]
[-188.20991516 75.23641968]
[-203.11201477 77.01448822]
[-218.10768127 77.61785889]
[-233.10446167 77.04281616]
[-248.00988770 75.29290771]
[-262.73208618 72.37892151]
[-277.18023682 68.31881714]
[-291.26531982 63.13762665]
[-304.90048218 56.86730576]
[-318.00161743 49.54650497]
[-330.48797607 41.22035980]
[-342.28259277 31.94020653]
[-353.31274414 21.76326180]
[-363.51037598 10.75226784]
[-372.81268311 -1.02488494]
[-381.16226196 -13.49558735]
[-388.50769043 -26.58295059]
[-394.80361938 -40.20628738]
[-400.01126099 -54.28160477]
[-404.09851074 -68.72212219]
[-407.04016113 -83.43880463]
[-408.81805420 -98.34092712]
[-409.42129517 -113.33660126]
[-408.84609985 -128.33337402]
[-407.09600830 -143.23878479]
[-404.18188477 -157.96093750]
[-400.12164307 -172.40907288]
[-394.94030762 -186.49409485]
[-388.66983032 -200.12918091]
[-381.34890747 -213.23023987]
[-373.02264404 -225.71652222]
[-363.74237061 -237.51104736]
[-353.56530762 -248.54107666]
[-342.55419922 -258.73861694]
[-330.77694702 -268.04080200]
[-318.30618286 -276.39025879]
[-305.21871948 -283.73553467]
[-291.59533691 -290.03131104]
[-277.51995850 -295.23883057]
[-263.07940674 -299.32592773]
[-248.36268616 -302.26742554]
[-233.46055603 -304.04516602]
[-218.46487427 -304.64825439]
[-203.46809387 -304.07290649]
[-188.56269836 -302.32269287]
[-173.84057617 -299.40838623]
[-159.39248657 -295.34799194]
[-145.30752563 -290.16653442]
[-131.67250061 -283.89593506]
[-118.57151031 -276.57485962]
[-106.08531189 -268.24844360]
[-94.29088593 -258.96804810]
[-83.26096344 -248.79089355]
[-73.06352997 -237.77967834]
[-63.76147461 -226.00234985]
[-55.41213989 -213.53146362]
[-48.06700134 -200.44395447]
[-41.77134705 -186.82049561]
[-36.56399155 -172.74507141]
[-32.47703934 -158.30447388]
[-29.53569221 -143.58772278]
[-27.75808334 -128.68556213]
[-27.15516853 -113.68988037]
[-27.73067093 -98.69312286]
[-29.48103714 -83.78774261]
[-32.39547729 -69.06564331]
[-36.45602417 -54.61759949]
[-41.63764191 -40.53268051]
[-47.90838242 -26.89772797]
[-55.22958755 -13.79680920]
[-40.34804535 -13.17309380]
[-33.15911865 0.92051762]
[-20.67932320 9.24246120]
[-8.19952965 17.56440544]
[4.28026390 25.88634872]
[16.76005745 34.20829391]
[29.23985100 42.53023529]
[41.39752197 38.26168823]
[53.98173523 41.82815552]
[62.33707428 52.14313507]
[63.23911285 65.58191681]
[75.59362030 74.08874512]
[87.94812775 82.59557343]
[104.10530853 79.23204041]
[117.76750946 88.49012756]
[120.63159943 104.74327087]
[133.11138916 113.06521606]
[145.59118652 121.38716125]
[158.07098389 129.70910645]
[170.55078125 138.03105164]
[186.32495117 139.25000000]
[192.62124634 152.74836731]
[201.80645752 140.88157654]
[211.80586243 129.69226074]
[222.56964111 119.23616028]
[234.04417419 109.56537628]
[246.17228699 100.72809601]
[258.89358521 92.76833344]
[272.14465332 85.72574615]
[285.85949707 79.63542938]
[299.96978760 74.52771759]
[314.40521240 70.42805481]
[329.09387207 67.35687256]
[343.96258545 65.32946777]
[358.93725586 64.35594177]
[373.94332886 64.44114685]
[388.90597534 65.58464813]
[403.75073242 67.78076172]
[418.40356445 71.01854706]
[432.79150391 75.28186035]
[446.84289551 80.54946899]
[460.48767090 86.79513550]
[473.65792847 93.98773193]
[486.28802490 102.09143829]
[498.31500244 111.06587219]
[509.67898560 120.86632538]
[520.32330322 131.44396973]
[530.19500732 142.74612427]
[539.24487305 154.71646118]
[547.42785645 167.29533386]
[554.70306396 180.42010498]
[561.03442383 194.02537537]
[566.39025879 208.04336548]
[570.74395752 222.40423584]
[574.07373047 237.03642273]
[576.36315918 251.86705017]
[577.60070801 266.82223511]
[577.78021240 281.82745361]
[576.90087891 296.80795288]
[574.96697998 311.68911743]
[571.98815918 326.39682007]
[567.97937012 340.85772705]
[562.96044922 354.99984741]
[556.95648193 368.75271606]
[549.99731445 382.04779053]
[542.11767578 394.81884766]
[533.35681152 407.00228882]
[523.75836182 418.53738403]
[513.37011719 429.36669922]
[502.24389648 439.43624878]
[490.43508911 448.69586182]
[478.00250244 457.09945679]
[465.00811768 464.60510254]
[451.51666260 471.17544556]
[437.59533691 476.77774048]
[423.31350708 481.38409424]
[408.74234009 484.97152710]
[393.95440674 487.52218628]
[379.02337646 489.02337646]
[364.02365112 489.46759033]
[349.02996826 488.85263062]
[334.11700439 487.18154907]
[319.35906982 484.46270752]
[304.82968140 480.70959473]
[290.60122681 475.94094849]
[276.74459839 470.18051147]
[263.32879639 463.45700073]
[250.42071533 455.80389404]
[238.08462524 447.25930786]
[226.38198853 437.86584473]
[215.37110901 427.67028809]
[205.10685730 416.72341919]
[195.64035034 405.07977295]
[187.01875305 392.79739380]
[179.28503418 379.93743896]
[172.47770691 366.56399536]
[166.63069153 352.74365234]
[161.77311707 338.54531860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 134]
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[21 125]
[22 124]
[23 123]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[31 114]
[33 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
