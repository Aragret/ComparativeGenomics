%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[53.74296951 446.75772095]
[43.78627014 457.98291016]
[33.16375732 468.58023071]
[21.91494751 478.51025391]
[10.08168507 487.73599243]
[-2.29200840 496.22320557]
[-15.16010094 503.94027710]
[-28.47472191 510.85848999]
[-42.18634033 516.95214844]
[-56.24394989 522.19848633]
[-70.59525299 526.57812500]
[-85.18685913 530.07464600]
[-99.96448517 532.67517090]
[-114.87316895 534.36987305]
[-129.85743713 535.15258789]
[-144.86154175 535.02032471]
[-159.82968140 533.97357178]
[-174.70616150 532.01629639]
[-189.43565369 529.15570068]
[-203.96334839 525.40240479]
[-218.23521423 520.77050781]
[-232.19815063 515.27709961]
[-245.80021667 508.94268799]
[-258.99081421 501.79083252]
[-271.72085571 493.84811401]
[-283.94299316 485.14407349]
[-295.61178589 475.71115112]
[-306.68377686 465.58435059]
[-317.11782837 454.80142212]
[-326.87506104 443.40243530]
[-335.91925049 431.42980957]
[-344.21670532 418.92810059]
[-351.73657227 405.94378662]
[-358.45086670 392.52517700]
[-364.33462524 378.72219849]
[-369.36596680 364.58618164]
[-373.52615356 350.16973877]
[-376.79968262 335.52648926]
[-379.17443848 320.71093750]
[-380.64157104 305.77813721]
[-381.19558716 290.78366089]
[-380.83444214 275.78332520]
[-379.55950928 260.83288574]
[-377.37548828 245.98799133]
[-374.29052734 231.30384827]
[-370.31610107 216.83509827]
[-365.46697998 202.63555908]
[-359.76123047 188.75805664]
[-353.22006226 175.25419617]
[-345.86782837 162.17424011]
[-337.73184204 149.56684875]
[-328.84237671 137.47889709]
[-319.23251343 125.95537567]
[-308.93801880 115.03913879]
[-297.99719238 104.77080536]
[-286.45068359 95.18856812]
[-274.34149170 86.32807922]
[-261.71463013 78.22229767]
[-248.61712646 70.90137482]
[-235.09765625 64.39255524]
[-221.20652771 58.72004318]
[-206.99542236 53.90494156]
[-192.51719666 49.96516418]
[-177.82571411 46.91536713]
[-162.97563171 44.76689911]
[-148.02218628 43.52774811]
[-133.02101135 43.20252609]
[-118.02792358 43.79244614]
[-103.09867859 45.29530716]
[-88.28882599 47.70552063]
[-73.65345764 51.01412201]
[-59.24702072 55.20880127]
[-45.12310410 60.27395630]
[-31.33424950 66.19074249]
[-17.93175316 72.93714905]
[-4.96547794 80.48807526]
[7.51634455 88.81544495]
[19.46727943 97.88825989]
[30.84286880 107.67277527]
[41.60079193 118.13259888]
[51.70103455 129.22882080]
[56.76795197 115.22254944]
[72.37047577 112.60115051]
[84.05805969 103.19899750]
[86.00823212 91.71691895]
[95.13696289 84.48452759]
[106.76070404 85.21244049]
[112.88148499 70.62317657]
[127.67541504 68.89434814]
[139.50169373 59.66725159]
[151.32795715 50.44015503]
[163.15422058 41.21305466]
[173.64172363 30.48867607]
[182.60241699 18.45929909]
[191.56312561 6.42992067]
[200.52381897 -5.59945726]
[189.43669128 -15.72142029]
[179.41249084 -26.89702034]
[170.55084229 -39.01518631]
[162.93983459 -51.95547867]
[156.65510559 -65.58928680]
[151.75910950 -79.78111267]
[148.30052185 -94.38990021]
[146.31369019 -109.27046204]
[145.81838989 -124.27490234]
[146.81951904 -139.25410461]
[149.30714417 -154.05917358]
[153.25654602 -168.54299927]
[158.62844849 -182.56159973]
[165.36949158 -195.97566223]
[173.41265869 -208.65185547]
[182.67800903 -220.46421814]
[193.07347107 -231.29533386]
[204.49571228 -241.03756714]
[216.83122253 -249.59407043]
[229.95738220 -256.87982178]
[243.74377441 -262.82241821]
[258.05334473 -267.36276245]
[272.74386597 -270.45574951]
[287.66937256 -272.07067871]
[302.68151855 -272.19143677]
[317.63107300 -270.81683350]
[332.36947632 -267.96057129]
[346.75021362 -263.65100098]
[360.63043213 -257.93096924]
[373.87210083 -250.85733032]
[386.34365845 -242.50038147]
[397.92117310 -232.94317627]
[408.48950195 -222.28068542]
[417.94369507 -210.61891174]
[426.18975830 -198.07374573]
[433.14572144 -184.76986694]
[438.74246216 -170.83949280]
[442.92434692 -156.42109680]
[445.64981079 -141.65794373]
[446.89178467 -126.69680023]
[446.63793945 -111.68633270]
[444.89074707 -96.77572632]
[441.66763306 -82.11318970]
[437.00057983 -67.84444427]
[430.93600464 -54.11128998]
[423.53414917 -41.05023193]
[414.86859131 -28.79107475]
[405.02548218 -17.45565796]
[394.10263062 -7.15664291]
[382.20858765 2.00361347]
[369.46154785 9.93406868]
[355.98825073 16.55590439]
[341.92257690 21.80330849]
[327.40429688 25.62412834]
[312.57775879 27.98039055]
[297.59027100 28.84867477]
[282.59082031 28.22035217]
[267.72845459 26.10166931]
[253.15089417 22.51368141]
[239.00305176 17.49205017]
[225.42549133 11.08668232]
[212.55319214 3.36123896]
[203.59249878 15.39061642]
[194.63180542 27.41999435]
[185.67111206 39.44937134]
[199.21220398 32.99656296]
[214.07626343 30.98169327]
[228.84654236 33.59681320]
[242.11523438 40.59265900]
[252.61764526 51.30243683]
[259.35275269 64.70536041]
[261.67861938 79.52394104]
[259.37353516 94.34577179]
[252.65724182 107.75812531]
[242.16987610 118.48262787]
[228.91101074 125.49708557]
[214.14440918 128.13291931]
[199.27754211 126.13890839]
[185.72740173 119.70510864]
[174.78552246 109.44474030]
[167.49479675 96.33575439]
[164.55014038 81.62763214]
[166.23222351 66.72224426]
[172.38133240 53.03932571]
[160.55505371 62.26642227]
[148.72879028 71.49352264]
[136.90251160 80.72061920]
[131.62762451 94.64990234]
[115.98780060 97.03871155]
[110.09716797 112.74465179]
[93.46021271 114.88658142]
[81.77262878 124.28872681]
[75.86973572 138.96749878]
[61.10318375 140.91639709]
[69.77815247 153.15917969]
[77.69062042 165.90805054]
[84.81114197 179.11558533]
[91.11322784 192.73266602]
[96.57344818 206.70860291]
[101.17147064 220.99142456]
[104.89020538 235.52798462]
[107.71582031 250.26423645]
[109.63778687 265.14532471]
[110.64897156 280.11590576]
[110.74559784 295.12030029]
[109.92732239 310.10266113]
[108.19718170 325.00726318]
[105.56160736 339.77868652]
[102.03041077 354.36193848]
[97.61672974 368.70278931]
[92.33697510 382.74792480]
[86.21079254 396.44500732]
[79.26097870 409.74316406]
[71.51337433 422.59289551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 190]
[83 188]
[84 187]
[87 185]
[89 183]
[90 182]
[91 181]
[92 180]
[93 161]
[94 160]
[95 159]
[96 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
