%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[230.38046265 345.23300171]
[230.78755188 330.23089600]
[232.35595703 315.30548096]
[235.07627869 300.54647827]
[238.93212891 286.04266357]
[243.90032959 271.88125610]
[249.95100403 258.14743042]
[257.04776001 244.92381287]
[265.14788818 232.28988647]
[253.18556213 223.23988342]
[241.22322083 214.18988037]
[229.26087952 205.13987732]
[214.44285583 203.63151550]
[208.10552979 189.13499451]
[191.56083679 192.15357971]
[177.67869568 182.07385254]
[175.33638000 164.73796082]
[163.24063110 155.86706543]
[151.14488220 146.99617004]
[139.04913330 138.12527466]
[126.95337677 129.25437927]
[114.85762787 120.38349152]
[102.76187134 111.51259613]
[108.67493439 125.29794312]
[108.93930054 140.29560852]
[103.51576996 154.28079224]
[93.20886993 165.17886353]
[79.54759216 171.37315369]
[64.55848694 171.94479370]
[50.46510696 166.80897522]
[39.35811996 156.72756958]
[32.88518143 143.19607544]
[32.00651550 128.22183228]
[36.85246277 114.02617645]
[46.70415878 102.71494293]
[60.10016251 95.96607971]
[75.05325317 94.78075409]
[89.34355927 99.33387756]
[74.37724304 94.20359039]
[71.66183472 79.55859375]
[61.66365814 68.37661743]
[51.66548920 57.19464493]
[41.66731644 46.01267242]
[31.66914368 34.83069611]
[21.67097092 23.64872360]
[11.67279911 12.46674824]
[15.29219341 27.02353287]
[14.29886150 41.99060822]
[8.78748417 55.94140244]
[-0.71663153 67.54621887]
[-13.30761242 75.69895935]
[-27.78536606 79.62255859]
[-42.76996613 78.94304657]
[-56.83317947 73.72518158]
[-68.63458252 64.46630096]
[-77.04934692 52.04890060]
[-81.27542877 37.65653610]
[-80.91002655 22.66098595]
[-75.98796082 8.49153614]
[-66.97838593 -3.50127316]
[-54.74002075 -12.17436409]
[-40.43935776 -16.70107269]
[-25.43944740 -16.64994240]
[-11.16997814 -12.02584457]
[1.00977945 -3.26872468]
[-5.67041492 -16.69910049]
[-12.35060978 -30.12947655]
[-19.03080368 -43.55985260]
[-33.28322983 -38.80437851]
[-48.05879593 -36.07881546]
[-63.06990051 -35.43621445]
[-78.02433777 -36.88908386]
[-92.63102722 -40.40914917]
[-106.60563660 -45.92788696]
[-119.67614746 -53.33787155]
[-131.58813477 -62.49486542]
[-142.10974121 -73.22063446]
[-151.03614807 -85.30638123]
[-158.19360352 -98.51686859]
[-163.44279480 -112.59494019]
[-166.68151855 -127.26657104]
[-167.84677124 -142.24617004]
[-166.91583252 -157.24215698]
[-163.90684509 -171.96261597]
[-158.87837219 -186.12103271]
[-151.92831421 -199.44178772]
[-143.19192505 -211.66560364]
[-132.83927917 -222.55453491]
[-121.07188416 -231.89663696]
[-108.11880493 -239.51004028]
[-94.23217773 -245.24655151]
[-79.68230438 -248.99452209]
[-64.75240326 -250.68099976]
[-49.73308563 -250.27313232]
[-34.91671753 -247.77888489]
[-20.59169388 -243.24678040]
[-7.03686047 -236.76507568]
[5.48393488 -228.45989990]
[16.72697258 -218.49295044]
[26.47340012 -207.05819702]
[34.53350449 -194.37826538]
[40.75039291 -180.69995117]
[45.00304794 -166.28948975]
[47.20869446 -151.42741394]
[47.32439804 -136.40301514]
[45.34790421 -121.50873566]
[41.31769180 -107.03450012]
[35.31220245 -93.26205444]
[27.44833946 -80.45948792]
[17.87917328 -68.87599945]
[6.79097319 -58.73706436]
[-5.60042858 -50.24004745]
[1.07976627 -36.80967331]
[7.75996065 -23.37929535]
[14.44015503 -9.94891930]
[22.85477448 2.46857595]
[32.85294724 13.65055084]
[42.85112000 24.83252525]
[52.84928894 36.01449966]
[62.84746170 47.19647598]
[72.84563446 58.37844849]
[82.84380341 69.56042480]
[97.09498596 73.89089966]
[100.52553558 89.33570099]
[111.63276672 99.41683960]
[123.72852325 108.28773499]
[135.82427979 117.15863037]
[147.92002869 126.02952576]
[160.01577759 134.90042114]
[172.11152649 143.77131653]
[184.20727539 152.64221191]
[197.19555664 149.07580566]
[209.68412781 153.57537842]
[217.18968201 164.28746033]
[217.15553284 177.17265320]
[232.82919312 179.32835388]
[238.31088257 193.17755127]
[250.27322388 202.22755432]
[262.23556519 211.27754211]
[274.19790649 220.32754517]
[284.15249634 209.09660339]
[294.94747925 198.67083740]
[306.51794434 189.11297607]
[318.79428101 180.48046875]
[331.70263672 172.82525635]
[345.16540527 166.19335938]
[359.10162354 160.62467957]
[373.42749023 156.15270996]
[388.05679321 152.80433655]
[402.90158081 150.59970093]
[417.87258911 149.55204773]
[432.87973022 149.66770935]
[447.83282471 150.94596863]
[462.64187622 153.37913513]
[477.21783447 156.95257568]
[491.47305298 161.64480591]
[505.32177734 167.42761230]
[518.68072510 174.26620483]
[531.46960449 182.11946106]
[543.61145020 190.94013977]
[555.03320312 200.67521667]
[565.66619873 211.26611328]
[575.44653320 222.64913940]
[584.31536865 234.75584412]
[592.21936035 247.51342773]
[599.11090088 260.84512329]
[604.94866943 274.67080688]
[609.69744873 288.90728760]
[613.32873535 303.46893311]
[615.82067871 318.26821899]
[617.15826416 333.21609497]
[617.33349609 348.22268677]
[616.34527588 363.19772339]
[614.19958496 378.05114746]
[610.90936279 392.69363403]
[606.49426270 407.03710938]
[600.98095703 420.99533081]
[594.40258789 434.48434448]
[586.79864502 447.42300415]
[578.21496582 459.73348999]
[568.70312500 471.34179688]
[558.32031250 482.17810059]
[547.12896729 492.17721558]
[535.19641113 501.27902222]
[522.59442139 509.42874146]
[509.39877319 516.57745361]
[495.68887329 522.68200684]
[481.54708862 527.70587158]
[467.05853271 531.61871338]
[452.31036377 534.39697266]
[437.39120483 536.02404785]
[422.39083862 536.49011230]
[407.39944458 535.79235840]
[392.50723267 533.93493652]
[377.80371094 530.92907715]
[363.37734985 526.79284668]
[349.31491089 521.55108643]
[335.70095825 515.23541260]
[322.61734009 507.88369751]
[310.14279175 499.54019165]
[298.35229492 490.25509644]
[287.31680298 480.08425903]
[277.10266113 469.08883667]
[267.77130127 457.33493042]
[259.37884521 444.89328003]
[251.97576904 431.83865356]
[245.60658264 418.24963379]
[240.30961609 404.20788574]
[236.11669922 389.79791260]
[233.05307007 375.10632324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 140]
[10 139]
[11 138]
[12 137]
[14 135]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[38 124]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[65 115]
[66 114]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
