%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[87.25985718 586.77081299]
[73.96636963 579.79888916]
[61.37289047 571.63012695]
[49.58686066 562.33416748]
[38.70883560 551.99041748]
[28.83162880 540.68713379]
[20.03950882 528.52062988]
[12.40748692 515.59478760]
[6.00067949 502.01992798]
[0.87374908 487.91180420]
[-2.92956305 473.39077759]
[-5.37680769 458.58081055]
[-6.44710493 443.60818481]
[-6.13132334 428.60070801]
[-4.43215752 413.68637085]
[-1.36410403 398.99243164]
[3.04666090 384.64425659]
[8.76250553 370.76428223]
[15.73466301 357.47091675]
[23.90364838 344.87756348]
[33.19976425 333.09170532]
[43.54370117 322.21383667]
[54.84720230 312.33682251]
[67.01382446 303.54492188]
[79.93978119 295.91311646]
[93.51477051 289.50653076]
[107.62297821 284.37982178]
[122.14404297 280.57675171]
[119.69831848 265.77749634]
[117.25258636 250.97821045]
[114.80686188 236.17893982]
[112.36113739 221.37966919]
[109.91540527 206.58039856]
[107.46968079 191.78112793]
[97.76075745 180.48573303]
[103.14441681 165.60867310]
[100.69869232 150.80940247]
[90.98976898 139.51400757]
[96.37342834 124.63694763]
[93.92770386 109.83767700]
[87.60282898 123.43899536]
[75.73781586 132.61622620]
[60.98335648 135.31915283]
[46.63562012 130.94393921]
[35.89993668 120.46801758]
[31.17468071 106.23172760]
[33.51548767 91.41549683]
[42.39941406 79.32931519]
[55.84177017 72.67325592]
[70.83950043 72.93431091]
[84.04206848 80.05415344]
[92.50000000 92.44221497]
[92.50000000 77.44221497]
[92.50000000 62.44221497]
[92.50000000 47.44221497]
[92.50000000 32.44221497]
[85.07703400 45.47676849]
[73.49285889 55.00603485]
[59.27157974 59.77628326]
[44.28424835 59.15989685]
[30.50270844 53.23797989]
[19.74015427 42.78965759]
[13.41258717 29.18958855]
[12.35250759 14.22709465]
[16.69938660 -0.12925041]
[25.88131714 -11.99062252]
[38.69025803 -19.79645348]
[53.44097519 -22.51975441]
[68.19275665 -19.80222511]
[81.00475311 -12.00140476]
[90.19132233 -0.14362553]
[94.54408264 14.21338272]
[97.86634064 -0.41407713]
[96.71534729 -9.47570133]
[101.34848785 -15.23381233]
[104.88816071 -29.81018829]
[108.42783356 -44.38656235]
[111.96750641 -58.96294022]
[115.50717926 -73.53931427]
[119.04684448 -88.11569214]
[104.84886169 -92.98825073]
[91.16103363 -99.15007019]
[78.10014343 -106.54856873]
[65.77762604 -115.12062073]
[54.29860687 -124.79309845]
[43.76103210 -135.48347473]
[34.25480652 -147.10055542]
[25.86103058 -159.54519653]
[18.65132141 -172.71124268]
[12.68719101 -186.48635864]
[8.01952362 -200.75300598]
[4.68814278 -215.38949585]
[2.72147155 -230.27091980]
[2.13628936 -245.27032471]
[2.93758869 -260.25973511]
[5.11853313 -275.11126709]
[8.66051579 -289.69821167]
[13.53331566 -303.89611816]
[19.69536018 -317.58386230]
[27.09407425 -330.64462280]
[35.66633606 -342.96701050]
[45.33900452 -354.44586182]
[56.02956009 -364.98324585]
[67.64678955 -374.48928833]
[80.09156799 -382.88284302]
[93.25773621 -390.09234619]
[107.03295135 -396.05624390]
[121.29968262 -400.72366333]
[135.93621826 -404.05480957]
[150.81768799 -406.02124023]
[165.81709290 -406.60617065]
[180.80650330 -405.80462646]
[195.65800476 -403.62341309]
[210.24488831 -400.08120728]
[224.44270325 -395.20816040]
[238.13032532 -389.04589844]
[251.19097900 -381.64694214]
[263.51321411 -373.07449341]
[274.99191284 -363.40161133]
[285.52911377 -352.71090698]
[295.03497314 -341.09350586]
[303.42831421 -328.64859009]
[310.63760376 -315.48229980]
[316.60125732 -301.70700073]
[321.26846313 -287.44018555]
[324.59936523 -272.80358887]
[326.56552124 -257.92208862]
[327.15020752 -242.92266846]
[326.34841919 -227.93327332]
[324.16696167 -213.08181763]
[320.62451172 -198.49497986]
[315.75122070 -184.29724121]
[309.58871460 -170.60972595]
[302.18957520 -157.54920959]
[293.61691284 -145.22711182]
[283.94384766 -133.74858093]
[273.25296021 -123.21154022]
[261.63540649 -113.70589447]
[249.19033813 -105.31273651]
[236.02394104 -98.10369110]
[222.24851990 -92.14024353]
[207.98162842 -87.47328949]
[193.34498596 -84.14263916]
[178.46345520 -82.17671204]
[163.46401978 -81.59228516]
[148.47465515 -82.39433289]
[133.62322998 -84.57601929]
[130.08355713 -69.99964142]
[126.54387665 -55.42326736]
[123.00420380 -40.84688950]
[119.46453094 -26.27051544]
[115.92485809 -11.69414043]
[112.49379730 2.90818238]
[109.17153931 17.53564262]
[107.50000000 32.44221497]
[107.50000000 47.44221497]
[107.50000000 62.44221497]
[107.50000000 77.44221497]
[107.50000000 92.44221497]
[108.72697449 107.39195251]
[111.17270660 122.19122314]
[121.05655670 134.54516602]
[115.49796295 148.36367798]
[117.94368744 163.16294861]
[127.82754517 175.51689148]
[122.26895142 189.33540344]
[124.71467590 204.13467407]
[127.16040802 218.93394470]
[129.60612488 233.73321533]
[132.05186462 248.53248596]
[134.49758911 263.33175659]
[136.94331360 278.13104248]
[151.91587830 277.05996704]
[166.92338562 277.37500000]
[181.83781433 279.07342529]
[196.53189087 282.14074707]
[210.88027954 286.55081177]
[224.76054382 292.26596069]
[238.05426025 299.23745728]
[250.64801025 307.40579224]
[262.43435669 316.70132446]
[273.31271362 327.04470825]
[283.19030762 338.34771729]
[291.98281860 350.51391602]
[299.61529541 363.43948364]
[306.02255249 377.01416016]
[311.14993286 391.12210083]
[314.95373535 405.64297485]
[317.40148926 420.45288086]
[318.47225952 435.42547607]
[318.15698242 450.43295288]
[316.45831299 465.34735107]
[313.39074707 480.04141235]
[308.98046875 494.38970947]
[303.26507568 508.26986694]
[296.29336548 521.56347656]
[288.12481689 534.15710449]
[278.82907104 545.94329834]
[268.48550415 556.82147217]
[257.18234253 566.69885254]
[245.01600647 575.49121094]
[232.09031677 583.12341309]
[218.51553345 589.53045654]
[204.40750122 594.65765381]
[189.88655090 598.46118164]
[175.07661438 600.90869141]
[160.10401917 601.97924805]
[145.09651184 601.66369629]
[130.18214417 599.96478271]
[115.48816681 596.89697266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[36 164]
[37 163]
[39 161]
[40 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[72 154]
[73 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[80 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
