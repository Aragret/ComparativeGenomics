%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[164.02203369 351.65319824]
[171.17613220 338.44433594]
[179.99317932 326.28231812]
[190.32228088 315.37524414]
[201.98674011 305.90972900]
[194.13497925 293.12887573]
[186.28321838 280.34805298]
[173.02851868 273.55377197]
[172.39741516 257.74517822]
[164.54566956 244.96432495]
[156.69390869 232.18348694]
[154.19003296 246.97302246]
[143.55226135 257.54837036]
[128.74824524 259.96517944]
[115.29949951 253.32205200]
[108.22208405 240.09669495]
[110.15568542 225.22184753]
[120.37913513 214.24545288]
[135.07933044 211.26144409]
[148.77433777 217.38356018]
[142.49696350 203.76025391]
[136.21960449 190.13693237]
[129.74011230 176.60858154]
[123.05992126 163.17820740]
[116.37972260 149.74783325]
[109.69953156 136.31745911]
[103.01933289 122.88708496]
[96.33914185 109.45671082]
[90.21504974 104.21570587]
[89.66114044 95.77627563]
[83.18164825 82.24792480]
[76.70215607 68.71958160]
[62.16924286 72.59653473]
[47.17536545 73.73662567]
[32.23126984 72.10250092]
[17.84575272 67.75125885]
[4.50831461 60.83249283]
[-7.32748890 51.58314514]
[-17.25946808 40.31936264]
[-24.95047188 27.42573547]
[-30.13982391 13.34212589]
[-32.65216827 -1.45131457]
[-32.40338516 -16.45052147]
[-29.40341568 -31.14469147]
[-23.75586319 -45.03367996]
[-15.65442467 -57.64502335]
[-5.37624311 -68.55001068]
[6.72757149 -77.37825012]
[0.24807547 -90.90660095]
[-12.69132710 -100.01057434]
[-11.21088886 -114.83142853]
[-17.69038391 -128.35977173]
[-18.08321190 -113.36491394]
[-22.62980080 -99.07056427]
[-30.97158813 -86.60402679]
[-42.45070648 -76.94846344]
[-56.16186142 -70.86535645]
[-71.02374268 -68.83444977]
[-85.86426544 -71.01589966]
[-99.51306152 -77.23767090]
[-110.89371490 -87.00909424]
[-119.10871124 -99.55953979]
[-123.51017761 -113.89924622]
[-123.75099182 -128.89730835]
[-119.81216431 -143.37094116]
[-112.00433350 -156.17864990]
[-100.94325256 -166.31040955]
[-87.50124359 -172.96716309]
[-72.73839569 -175.62393188]
[-57.81897736 -174.07121277]
[-43.91959381 -168.43142700]
[-32.13640594 -159.14938354]
[-23.39708138 -146.95399475]
[-25.62219810 -161.78804016]
[-27.84731483 -176.62208557]
[-30.07243156 -191.45613098]
[-32.29755020 -206.29017639]
[-34.52266693 -221.12422180]
[-36.74778366 -235.95826721]
[-46.44661331 -248.45799255]
[-40.68289566 -262.19219971]
[-42.90801239 -277.02624512]
[-45.13312912 -291.86029053]
[-60.16725540 -292.24267578]
[-74.90653992 -295.23007202]
[-88.90308380 -300.73168945]
[-101.73152924 -308.58038330]
[-113.00205231 -318.53762817]
[-122.37215424 -330.30081177]
[-129.55706787 -343.51248169]
[-134.33847046 -357.77111816]
[-136.57106018 -372.64346313]
[-136.18698120 -387.67755127]
[-133.19792175 -402.41650391]
[-127.69469452 -416.41241455]
[-119.84455109 -429.23999023]
[-109.88603973 -440.50936890]
[-98.12179565 -449.87814331]
[-84.90931702 -457.06155396]
[-70.65011597 -461.84133911]
[-55.77751923 -464.07223511]
[-40.74348068 -463.68646240]
[-26.00487328 -460.69570923]
[-12.00958252 -455.19091797]
[0.81708908 -447.33932495]
[12.08535290 -437.37951660]
[21.45277977 -425.61422729]
[28.63470268 -412.40093994]
[33.41287231 -398.14117432]
[35.64208603 -383.26834106]
[35.25460052 -368.23434448]
[32.26219177 -353.49606323]
[26.75579071 -339.50140381]
[18.90273666 -326.67562866]
[8.94167233 -315.40847778]
[-2.82469654 -306.04238892]
[-16.03880310 -298.86196899]
[-30.29908562 -294.08541870]
[-28.07396889 -279.25137329]
[-25.84885216 -264.41732788]
[-16.30917740 -252.97862244]
[-21.91374016 -238.18338013]
[-19.68862343 -223.34933472]
[-17.46350670 -208.51528931]
[-15.23838902 -193.68124390]
[-13.01327133 -178.84719849]
[-10.78815460 -164.01315308]
[-8.56303692 -149.17910767]
[-4.16203928 -134.83926392]
[2.31745672 -121.31092072]
[14.79340172 -113.17458344]
[13.77642059 -97.38609314]
[20.25591660 -83.85774994]
[34.72143173 -87.75506592]
[49.66075897 -88.92818451]
[64.56523132 -87.33568573]
[78.92708588 -83.03034210]
[92.25678253 -76.15737915]
[104.09968567 -66.94956970]
[114.05155945 -55.71934509]
[121.77237701 -42.84819794]
[126.99793243 -28.77372742]
[129.54888916 -13.97475624]
[129.33692932 1.04495752]
[126.36779022 15.77386761]
[120.74116516 29.71006393]
[112.64733124 42.37837219]
[102.36068726 53.34656143]
[90.23049927 62.24008560]
[96.70999146 75.76843262]
[103.18949127 89.29677582]
[109.76951599 102.77651215]
[116.44971466 116.20688629]
[123.12990570 129.63726807]
[129.81010437 143.06764221]
[136.49029541 156.49801636]
[143.17048645 169.92839050]
[148.45999146 173.89483643]
[150.62702942 179.14849854]
[149.84292603 183.85957336]
[156.12028503 197.48289490]
[162.39764404 211.10620117]
[169.47474670 224.33172607]
[177.32650757 237.11257935]
[185.17826843 249.89341736]
[198.99458313 257.60183716]
[199.06407166 272.49627686]
[206.91581726 285.27713013]
[214.76757812 298.05798340]
[228.48329163 291.93148804]
[242.88136292 287.64770508]
[257.71542358 285.27996826]
[272.73159790 284.86880493]
[287.67297363 286.42120361]
[302.28390503 289.91061401]
[316.31436157 295.27734375]
[329.52423096 302.42953491]
[341.68750000 311.24484253]
[352.59606934 321.57241821]
[362.06323242 333.23550415]
[369.92703247 346.03454590]
[376.05285645 359.75057983]
[380.33593750 374.14883423]
[382.70297241 388.98300171]
[383.11343384 403.99920654]
[381.56033325 418.94052124]
[378.07022095 433.55126953]
[372.70281982 447.58145142]
[365.54998779 460.79101562]
[356.73410034 472.95385742]
[346.40603638 483.86193848]
[334.74249268 493.32855225]
[321.94305420 501.19171143]
[308.22674561 507.31692505]
[293.82827759 511.59930420]
[278.99398804 513.96563721]
[263.97778320 514.37536621]
[249.03652954 512.82153320]
[234.42594910 509.33074951]
[220.39601135 503.96267700]
[207.18681335 496.80923462]
[195.02436829 487.99276733]
[184.11679077 477.66415405]
[174.65074158 466.00018311]
[166.78817749 453.20037842]
[160.66363525 439.48376465]
[156.38192749 425.08508301]
[154.01631165 410.25070190]
[153.60726929 395.23446655]
[155.16180420 380.29330444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 169]
[6 168]
[7 167]
[9 165]
[10 164]
[11 163]
[20 162]
[21 161]
[22 160]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[30 151]
[31 150]
[32 149]
[48 133]
[49 132]
[51 130]
[52 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[81 120]
[82 119]
[83 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
