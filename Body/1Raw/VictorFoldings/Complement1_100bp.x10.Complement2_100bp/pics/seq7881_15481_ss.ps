%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[195.91769409 251.14187622]
[203.90310669 238.42822266]
[213.15345764 226.60302734]
[202.35130310 216.19566345]
[191.54914856 205.78828430]
[180.74699402 195.38092041]
[169.94483948 184.97354126]
[159.14266968 174.56616211]
[156.34065247 174.48342896]
[153.40258789 173.28579712]
[150.75326538 170.91589355]
[148.83041382 167.47100830]
[148.03067017 163.20317078]
[133.71659851 159.08535767]
[130.05647278 143.69334412]
[119.89292908 132.66146851]
[109.72938538 121.62959290]
[99.56583405 110.59770966]
[88.84145355 100.11021423]
[77.58535767 90.19555664]
[66.32926178 80.28090668]
[55.07316971 70.36625671]
[43.59846878 60.70544815]
[31.91088676 51.30329514]
[20.22330475 41.90114594]
[8.53572464 32.49899292]
[-3.15185690 23.09684181]
[-18.75438309 20.47544479]
[-23.82130051 6.46917343]
[-35.50888062 -2.93297768]
[-47.19646454 -12.33512878]
[-57.39502716 -1.32722020]
[-68.33662415 8.94245434]
[-79.96794128 18.42386246]
[-92.23232269 27.07081032]
[-105.07000732 34.84117126]
[-118.41846466 41.69708633]
[-132.21264648 47.60515594]
[-146.38534546 52.53659439]
[-160.86753845 56.46738052]
[-175.58863831 59.37835693]
[-190.47694397 61.25534821]
[-205.45991516 62.08920670]
[-220.46455383 61.87586975]
[-235.41775513 60.61637497]
[-250.24668884 58.31686401]
[-264.87908936 54.98853302]
[-279.24365234 50.64760208]
[-293.27041626 45.31521988]
[-306.89105225 39.01736450]
[-320.03921509 31.78471565]
[-332.65078735 23.65251541]
[-344.66436768 14.66038227]
[-356.02142334 4.85212374]
[-366.66662598 -5.72447443]
[-376.54812622 -17.01788330]
[-385.61773682 -28.97308159]
[-393.83129883 -41.53182602]
[-401.14880371 -54.63292694]
[-407.53457642 -68.21256256]
[-412.95755005 -82.20456696]
[-417.39126587 -96.54077911]
[-420.81411743 -111.15135193]
[-423.20944214 -125.96509552]
[-424.56561279 -140.90985107]
[-424.87594604 -155.91279602]
[-424.13897705 -170.90084839]
[-422.35827637 -185.80097961]
[-419.54254150 -200.54058838]
[-415.70547485 -215.04788208]
[-410.86575317 -229.25218201]
[-405.04699707 -243.08427429]
[-398.27752686 -256.47677612]
[-390.59033203 -269.36441040]
[-382.02285767 -281.68444824]
[-372.61682129 -293.37683105]
[-362.41812134 -304.38458252]
[-351.47637939 -314.65411377]
[-339.84490967 -324.13534546]
[-327.58041382 -332.78213501]
[-314.74261475 -340.55230713]
[-301.39407349 -347.40802002]
[-287.59979248 -353.31588745]
[-273.42703247 -358.24713135]
[-258.94479370 -362.17770386]
[-244.22363281 -365.08847046]
[-229.33529663 -366.96524048]
[-214.35232544 -367.79888916]
[-199.34768677 -367.58535767]
[-184.39448547 -366.32565308]
[-169.56559753 -364.02590942]
[-154.93325806 -360.69738770]
[-140.56874084 -356.35623169]
[-126.54204559 -351.02365112]
[-112.92149353 -344.72561646]
[-99.77346039 -337.49276733]
[-87.16199493 -329.36038208]
[-75.14853668 -320.36807251]
[-63.79161835 -310.55966187]
[-53.14656830 -299.98291016]
[-43.26525116 -288.68936157]
[-34.19580460 -276.73403931]
[-25.98241806 -264.17517090]
[-18.66510391 -251.07395935]
[-12.27951336 -237.49423218]
[-6.85675573 -223.50215149]
[-2.42325044 -209.16587830]
[0.99940240 -194.55525208]
[3.39452791 -179.74147034]
[4.75045681 -164.79670715]
[5.06058407 -149.79374695]
[4.32339764 -134.80570984]
[2.54248953 -119.90560913]
[-0.27346373 -105.16603851]
[-4.11074305 -90.65879822]
[-8.95065308 -76.45456696]
[-14.76961422 -62.62256241]
[-21.53927803 -49.23016357]
[-29.22666168 -36.34261703]
[-37.79431152 -24.02271080]
[-26.10673141 -14.62055874]
[-14.41914940 -5.21840763]
[0.34740317 -3.26951385]
[6.25029421 11.40926170]
[17.93787575 20.81141281]
[29.62545586 30.21356392]
[41.31303787 39.61571503]
[53.00061798 49.01786423]
[56.52654266 49.00351334]
[60.23459625 50.69626236]
[63.32235336 54.16311264]
[64.98781586 59.11016083]
[76.24391174 69.02481079]
[87.50000763 78.93946075]
[98.75610352 88.85411835]
[97.71997833 73.88994598]
[106.44303894 61.68714905]
[120.93722534 57.82468414]
[134.57598877 64.06842041]
[141.12387085 77.56379700]
[137.58726501 92.14091492]
[125.58306122 101.13531494]
[110.59770966 100.43416595]
[120.76126099 111.46604156]
[130.92480469 122.49791718]
[141.08834839 133.52980042]
[156.12939453 138.43669128]
[159.06254578 153.03962708]
[169.55004883 163.76400757]
[180.35220337 174.17138672]
[191.15435791 184.57875061]
[201.95651245 194.98612976]
[212.75866699 205.39350891]
[223.56083679 215.80087280]
[235.03358459 206.11686707]
[247.44126892 197.66386414]
[260.65234375 190.53143311]
[274.52676392 184.79521179]
[288.91748047 180.51599121]
[303.67190552 177.73913574]
[318.63363647 176.49409485]
[333.64410400 176.79405212]
[348.54418945 178.63583374]
[363.17587280 181.99992371]
[377.38415527 186.85064697]
[391.01834106 193.13658142]
[403.93389893 200.79110718]
[415.99398804 209.73307800]
[427.07070923 219.86769104]
[437.04663086 231.08752441]
[445.81604004 243.27365112]
[453.28594971 256.29687500]
[459.37719727 270.01913452]
[464.02520752 284.29498291]
[467.18069458 298.97311401]
[468.81024170 313.89785767]
[468.89651489 328.91107178]
[467.43865967 343.85360718]
[464.45208740 358.56701660]
[459.96847534 372.89535522]
[454.03536987 386.68673706]
[446.71563721 399.79495239]
[438.08688354 412.08105469]
[428.24057007 423.41482544]
[417.28106689 433.67608643]
[405.32458496 442.75607300]
[392.49783325 450.55856323]
[378.93679810 457.00079346]
[364.78524780 462.01452637]
[350.19317627 465.54656982]
[335.31524658 467.55947876]
[320.30923462 468.03198242]
[305.33416748 466.95898438]
[290.54879761 464.35189819]
[276.10983276 460.23837280]
[262.17041016 454.66201782]
[248.87821960 447.68191528]
[236.37419128 439.37207031]
[224.79087830 429.82058716]
[214.25108337 419.12869263]
[204.86650085 407.40975952]
[196.73663330 394.78796387]
[189.94766235 381.39715576]
[184.57156372 367.37924194]
[180.66529846 352.88287354]
[178.27030945 338.06167603]
[177.41195679 323.07275391]
[178.09934998 308.07504272]
[180.32519531 293.22750854]
[184.06591797 278.68753052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[13 148]
[15 146]
[16 145]
[17 144]
[18 143]
[19 135]
[20 134]
[21 133]
[22 132]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[29 122]
[30 121]
[31 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
