%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[81.13915253 400.16882324]
[73.99740601 413.36865234]
[65.82949829 425.95935059]
[56.68707657 437.86129761]
[46.62793350 448.99923706]
[35.71567535 459.30276489]
[24.01928902 468.70672607]
[11.61272621 477.15167236]
[-1.42557538 484.58422852]
[-15.01318073 490.95739746]
[-29.06418419 496.23083496]
[-43.48974991 500.37127686]
[-58.19867325 503.35247803]
[-73.09796143 505.15563965]
[-88.09340668 505.76934814]
[-103.09020996 505.18969727]
[-117.99355316 503.42037964]
[-132.70921326 500.47259521]
[-147.14414978 496.36492920]
[-161.20709229 491.12341309]
[-174.80912781 484.78112793]
[-187.86428833 477.37820435]
[-200.28999329 468.96145630]
[-212.00770569 459.58407593]
[-222.94334412 449.30535889]
[-233.02775574 438.19030762]
[-242.19718933 426.30914307]
[-250.39367676 413.73706055]
[-257.56536865 400.55346680]
[-263.66696167 386.84176636]
[-268.65988159 372.68865967]
[-272.51251221 358.18356323]
[-275.20053101 343.41824341]
[-276.70693970 328.48605347]
[-277.02221680 313.48135376]
[-276.14437866 298.49905396]
[-274.07894897 283.63385010]
[-270.83898926 268.97976685]
[-266.44497681 254.62939453]
[-260.92474365 240.67349243]
[-254.31314087 227.20031738]
[-246.65197754 214.29501343]
[-237.98971558 202.03918457]
[-228.38108826 190.51034546]
[-217.88685608 179.78134155]
[-206.57337952 169.92004395]
[-194.51219177 160.98876953]
[-181.77951050 153.04400635]
[-168.45588684 146.13597107]
[-154.62551880 140.30834961]
[-140.37586975 135.59799194]
[-125.79702759 132.03465271]
[-110.98115540 129.64089966]
[-96.02193451 128.43182373]
[-81.01394653 128.41510010]
[-66.05207062 129.59082031]
[-51.23089981 131.95155334]
[-36.64414597 135.48239136]
[-22.38403320 140.16098022]
[-8.54071522 145.95776367]
[4.79828215 152.83607483]
[17.54862595 160.75244141]
[29.62970161 169.65679932]
[39.46028137 158.32720947]
[49.29086304 146.99761963]
[59.12144470 135.66802979]
[68.95202637 124.33843231]
[71.44908905 109.65463257]
[86.33737183 104.30208588]
[89.18103790 90.61248779]
[102.33303833 85.86733246]
[105.53324890 70.37316132]
[119.71838379 65.83098602]
[129.54896545 54.50139618]
[139.37954712 43.17180252]
[149.21012878 31.84220886]
[159.04071045 20.51261520]
[148.31011963 10.02512169]
[138.21966553 -1.07964075]
[128.80479431 -12.76266670]
[120.09856415 -24.98291779]
[112.13156891 -37.69747162]
[104.93177795 -50.86166763]
[98.52449036 -64.42926025]
[92.93221283 -78.35260010]
[88.17459106 -92.58277893]
[84.26832581 -107.06980896]
[81.22714996 -121.76280975]
[79.06172943 -136.61016846]
[77.77969360 -151.55972290]
[77.38552856 -166.55897522]
[77.88061523 -181.55523682]
[79.26323700 -196.49583435]
[81.52851105 -211.32827759]
[84.66850281 -226.00047302]
[88.67216492 -240.46089172]
[93.52544403 -254.65873718]
[99.21128845 -268.54412842]
[105.70973206 -282.06829834]
[112.99794769 -295.18374634]
[121.05032349 -307.84439087]
[129.83859253 -320.00576782]
[139.33187866 -331.62518311]
[149.49682617 -342.66180420]
[160.29774475 -353.07684326]
[171.69668579 -362.83374023]
[183.65361023 -371.89822388]
[196.12654114 -380.23843384]
[209.07162476 -387.82510376]
[222.44342041 -394.63156128]
[236.19496155 -400.63394165]
[250.27792358 -405.81109619]
[264.64285278 -410.14486694]
[279.23928833 -413.62005615]
[294.01596069 -416.22442627]
[308.92098999 -417.94885254]
[323.90197754 -418.78726196]
[338.90631104 -418.73672485]
[353.88131714 -417.79739380]
[368.77438354 -415.97256470]
[383.53317261 -413.26867676]
[398.10586548 -409.69522095]
[412.44125366 -405.26473999]
[426.48901367 -399.99279785]
[440.19979858 -393.89791870]
[453.52542114 -387.00149536]
[466.41909790 -379.32778931]
[478.83554077 -370.90371704]
[490.73110962 -361.75888062]
[502.06405640 -351.92538452]
[512.79455566 -341.43780518]
[522.88488770 -330.33294678]
[532.29968262 -318.64984131]
[541.00579834 -306.42950439]
[548.97271729 -293.71487427]
[556.17236328 -280.55062866]
[562.57952881 -266.98297119]
[568.17169189 -253.05958557]
[572.92919922 -238.82936096]
[576.83532715 -224.34230042]
[579.87640381 -209.64927673]
[582.04168701 -194.80189514]
[583.32354736 -179.85232544]
[583.71759033 -164.85307312]
[583.22235107 -149.85681152]
[581.83966064 -134.91622925]
[579.57421875 -120.08380890]
[576.43408203 -105.41163635]
[572.43029785 -90.95125580]
[567.57690430 -76.75345612]
[561.89093018 -62.86811829]
[555.39239502 -49.34400177]
[548.10406494 -36.22861862]
[540.05157471 -23.56803894]
[531.26318359 -11.40672779]
[521.76983643 0.21259308]
[511.60476685 11.24911213]
[500.80374146 21.66406250]
[489.40472412 31.42086029]
[477.44772339 40.48523712]
[464.97473145 48.82534790]
[452.02957153 56.41190338]
[438.65771484 63.21825409]
[424.90612793 69.22048950]
[410.82312012 74.39752960]
[396.45812988 78.73119354]
[381.86166382 82.20624542]
[367.08496094 84.81049347]
[352.17993164 86.53478241]
[337.19894409 87.37305450]
[322.19461060 87.32237244]
[307.21960449 86.38291168]
[292.32656860 84.55796814]
[277.56781006 81.85395050]
[262.99514771 78.28036499]
[248.65977478 73.84976196]
[234.61206055 68.57769775]
[220.90133667 62.48269653]
[207.57577515 55.58616638]
[194.68215942 47.91233063]
[182.26579285 39.48814392]
[170.37030029 30.34319496]
[160.53971863 41.67279053]
[150.70913696 53.00238037]
[140.87855530 64.33197784]
[131.04797363 75.66156769]
[128.55090332 90.34536743]
[113.66262817 95.69791412]
[110.81896210 109.38751221]
[97.66696167 114.13266754]
[94.46675110 129.62683105]
[80.28161621 134.16900635]
[70.45103455 145.49861145]
[60.62045670 156.82820129]
[50.78987503 168.15779114]
[40.95929337 179.48738098]
[51.47785950 190.19252014]
[61.11264420 201.69952393]
[69.80273438 213.93562317]
[77.49317932 226.82350159]
[84.13536835 240.28163147]
[89.68730164 254.22494507]
[94.11387634 268.56530762]
[97.38710785 283.21200562]
[99.48629761 298.07247925]
[100.39817810 313.05273438]
[100.11698914 328.05810547]
[98.64449310 342.99371338]
[95.99001312 357.76507568]
[92.17032623 372.27886963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 196]
[64 195]
[65 194]
[66 193]
[67 192]
[69 190]
[71 188]
[73 186]
[74 185]
[75 184]
[76 183]
[77 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
