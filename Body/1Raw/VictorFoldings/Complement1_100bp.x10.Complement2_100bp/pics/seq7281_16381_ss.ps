%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[47.89361572 613.93951416]
[35.42302704 622.29077148]
[22.30538177 629.58374023]
[8.63029099 635.76849365]
[-5.50883007 640.80285645]
[-20.01539612 644.65240479]
[-34.79030991 647.29089355]
[-49.73264313 648.70019531]
[-64.74031830 648.87078857]
[-79.71083069 647.80145264]
[-94.54189301 645.49951172]
[-109.13220978 641.98065186]
[-123.38211060 637.26898193]
[-137.19424438 631.39666748]
[-150.47427368 624.40374756]
[-163.13145447 616.33807373]
[-175.07936096 607.25469971]
[-186.23634338 597.21575928]
[-196.52619934 586.28967285]
[-205.87863159 574.55126953]
[-214.22976685 562.08056641]
[-221.52255249 548.96282959]
[-227.70716858 535.28765869]
[-232.74134827 521.14849854]
[-236.59074402 506.64187622]
[-239.22901917 491.86691284]
[-240.63818359 476.92456055]
[-240.80857849 461.91690063]
[-239.73905945 446.94641113]
[-237.43695068 432.11535645]
[-233.91793823 417.52508545]
[-229.20608521 403.27523804]
[-223.33357239 389.46316528]
[-216.34053040 376.18322754]
[-208.27470398 363.52615356]
[-199.19120789 351.57833862]
[-189.15208435 340.42147827]
[-178.22592163 330.13177490]
[-166.48735046 320.77944946]
[-154.01657104 312.42846680]
[-140.89874268 305.13586426]
[-127.22351074 298.95141602]
[-113.08426666 293.91738892]
[-98.57761383 290.06817627]
[-83.80263519 287.43005371]
[-68.86026764 286.02108765]
[-53.85258484 285.85086060]
[-38.88210297 286.92056274]
[-24.05109024 289.22283936]
[-9.46085644 292.74203491]
[4.78892899 297.45404053]
[10.65788937 283.64987183]
[6.42525578 272.31799316]
[11.20180893 260.76947021]
[22.93091583 255.40376282]
[29.00474930 241.68850708]
[35.07858276 227.97323608]
[41.15241623 214.25796509]
[47.22624969 200.54269409]
[53.30008316 186.82743835]
[59.37392044 173.11216736]
[65.44775391 159.39689636]
[71.52158356 145.68164062]
[77.59542084 131.96636963]
[83.66925812 118.25109863]
[89.74308777 104.53583527]
[75.78193665 110.02093506]
[61.52181244 105.36810303]
[53.48225021 92.70455933]
[55.33882523 77.81990051]
[66.24274445 67.51918793]
[81.20887756 66.51177979]
[93.39491272 75.25823975]
[97.22939301 89.76165009]
[104.69713593 76.75270081]
[112.16487885 63.74374771]
[119.63262177 50.73479462]
[127.10035706 37.72584152]
[112.16020203 39.06437302]
[101.68875122 28.32431602]
[103.40518188 13.42284298]
[116.04419708 5.34476614]
[130.28878784 10.04494190]
[135.63850403 24.05693054]
[136.97485352 8.29226208]
[150.51972961 2.09663510]
[158.93434143 -10.32085991]
[167.34895325 -22.73835564]
[155.66180420 -32.15481949]
[144.79216003 -42.50424194]
[134.81431580 -53.71593475]
[125.79640198 -65.71330261]
[117.80003357 -78.41439056]
[110.87982941 -91.73243713]
[105.08306885 -105.57646179]
[100.44934845 -119.85189819]
[97.01032257 -134.46122742]
[94.78947449 -149.30465698]
[93.80198669 -164.28079224]
[94.05459595 -179.28730774]
[95.54558563 -194.22172546]
[98.26476288 -208.98199463]
[102.19355011 -223.46730042]
[107.30512238 -237.57868958]
[113.56455231 -251.21977234]
[120.92907715 -264.29736328]
[129.34840393 -276.72210693]
[138.76499939 -288.40914917]
[149.11456299 -299.27868652]
[160.32637024 -309.25637817]
[172.32383728 -318.27416992]
[185.02502441 -326.27038574]
[198.34315491 -333.19042969]
[212.18725586 -338.98699951]
[226.46273804 -343.62057495]
[241.07211304 -347.05941772]
[255.91557312 -349.28009033]
[270.89172363 -350.26739502]
[285.89822388 -350.01461792]
[300.83261108 -348.52343750]
[315.59286499 -345.80410767]
[330.07812500 -341.87512207]
[344.18945312 -336.76339722]
[357.83044434 -330.50378418]
[370.90795898 -323.13909912]
[383.33261108 -314.71963501]
[395.01956177 -305.30291748]
[405.88894653 -294.95321655]
[415.86651611 -283.74130249]
[424.88415527 -271.74371338]
[432.88021851 -259.04241943]
[439.80010986 -245.72421265]
[445.59652710 -231.88005066]
[450.22991943 -217.60450745]
[453.66857910 -202.99508667]
[455.88906860 -188.15161133]
[456.87622070 -173.17546082]
[456.62322998 -158.16894531]
[455.13189697 -143.23457336]
[452.41238403 -128.47436523]
[448.48324585 -113.98915100]
[443.37133789 -99.87787628]
[437.11157227 -86.23694611]
[429.74673462 -73.15953827]
[421.32711792 -60.73498154]
[411.91024780 -49.04815292]
[401.56042480 -38.17889023]
[390.34838867 -28.20143890]
[378.35067749 -19.18395615]
[365.64932251 -11.18804264]
[352.33102417 -4.26831865]
[338.48678589 1.52794659]
[324.21118164 6.16115761]
[309.60171509 9.59966469]
[294.75820923 11.81997967]
[279.78204346 12.80693340]
[264.77554321 12.55378628]
[249.84118652 11.06226540]
[235.08100891 8.34256077]
[220.59584045 4.41325045]
[206.48463440 -0.69882351]
[192.84378052 -6.95874023]
[179.76644897 -14.32373714]
[171.35183716 -1.90624177]
[162.93722534 10.51125336]
[162.20272827 25.38773918]
[148.05599976 32.47154999]
[140.10931396 45.19358444]
[132.64157104 58.20253754]
[125.17382812 71.21148682]
[117.70608521 84.22044373]
[110.23834991 97.22939301]
[103.45835876 110.60966492]
[97.38452148 124.32493591]
[91.31068420 138.04020691]
[85.23685455 151.75546265]
[79.16301727 165.47073364]
[73.08918762 179.18600464]
[67.01535034 192.90126038]
[60.94151688 206.61653137]
[54.86768341 220.33180237]
[48.79384995 234.04707336]
[42.72001648 247.76232910]
[36.64618301 261.47760010]
[39.03171539 279.73660278]
[24.46206665 289.51882935]
[18.59310532 303.32299805]
[31.87329483 310.31558228]
[44.53067780 318.38095093]
[56.47879028 327.46401978]
[67.63600922 337.50274658]
[77.92613220 348.42855835]
[87.27884674 360.16677856]
[95.63027954 372.63726807]
[102.92337799 385.75482178]
[109.10831451 399.42984009]
[114.14284515 413.56890869]
[117.99256897 428.07543945]
[120.63120270 442.85031128]
[122.04071808 457.79263306]
[122.21147919 472.80029297]
[121.14231873 487.77081299]
[118.84055328 502.60192871]
[115.32189178 517.19226074]
[110.61038208 531.44219971]
[104.73820496 545.25445557]
[97.74546814 558.53454590]
[89.67994690 571.19183350]
[80.59673309 583.13983154]
[70.55788422 594.29693604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 187]
[52 186]
[55 184]
[56 183]
[57 182]
[58 181]
[59 180]
[60 179]
[61 178]
[62 177]
[63 176]
[64 175]
[65 174]
[66 173]
[74 172]
[75 171]
[76 170]
[77 169]
[78 168]
[84 167]
[86 165]
[87 164]
[88 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
