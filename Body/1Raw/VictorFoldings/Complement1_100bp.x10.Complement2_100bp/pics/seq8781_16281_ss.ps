%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-18.03141212 358.01171875]
[-17.63984871 373.01882935]
[-18.72114563 387.99206543]
[-21.26488686 402.78720093]
[-25.24657440 417.26177979]
[-30.62786293 431.27636719]
[-37.35692215 444.69598389]
[-45.36895370 457.39141846]
[-54.58678818 469.24041748]
[-64.92165375 480.12881470]
[-76.27400970 489.95178223]
[-88.53453827 498.61471558]
[-101.58515167 506.03414917]
[-115.30016327 512.13867188]
[-129.54748535 516.86950684]
[-144.18991089 520.18103027]
[-159.08642578 522.04138184]
[-174.09353638 522.43261719]
[-189.06675720 521.35101318]
[-203.86184692 518.80700684]
[-218.33631897 514.82501221]
[-232.35079956 509.44345093]
[-245.77029419 502.71411133]
[-258.46557617 494.70184326]
[-270.31436157 485.48376465]
[-281.20257568 475.14868164]
[-291.02529907 463.79611206]
[-299.68798828 451.53543091]
[-307.10717773 438.48464966]
[-313.21142578 424.76953125]
[-317.94195557 410.52209473]
[-321.25317383 395.87960815]
[-323.11325073 380.98306274]
[-323.50421143 365.97595215]
[-322.42230225 351.00274658]
[-319.87796021 336.20770264]
[-315.89569092 321.73330688]
[-310.51385498 307.71893311]
[-303.78427124 294.29959106]
[-295.77172852 281.60446167]
[-286.55340576 269.75585938]
[-276.21810913 258.86785889]
[-264.86535645 249.04534912]
[-252.60449219 240.38291931]
[-239.55357361 232.96398926]
[-225.83831787 226.86000061]
[-211.59080505 222.12977600]
[-196.94824219 218.81883240]
[-182.05166626 216.95907593]
[-167.04452515 216.56842041]
[-152.07136536 217.65060425]
[-137.27638245 220.19523621]
[-122.80205536 224.17779541]
[-108.78779602 229.55992126]
[-95.36856842 236.28979492]
[-82.67360687 244.30258179]
[-70.82518005 253.52111816]
[-60.49851227 242.64178467]
[-50.17184067 231.76245117]
[-39.84517288 220.88311768]
[-29.51850510 210.00378418]
[-19.19183731 199.12445068]
[-8.86516762 188.24511719]
[1.46150076 177.36578369]
[4.61174345 162.80813599]
[19.72417641 158.12571716]
[4.78878498 159.51644897]
[-8.17011070 151.96217346]
[-14.31916332 138.28045654]
[-11.36492825 123.57425690]
[-0.40926260 113.32860565]
[14.46164131 111.36487579]
[27.70130539 118.41550446]
[34.37165833 131.85076904]
[31.98430061 146.66069031]
[43.53060150 137.08557129]
[55.07690430 127.51045990]
[59.93472672 113.43029785]
[75.49649811 110.57689667]
[87.04279327 101.00177002]
[98.29888916 91.08712006]
[109.25479889 80.84172821]
[114.04958344 65.76457214]
[128.63027954 62.72279358]
[139.58619690 52.47740173]
[150.54209900 42.23200989]
[161.49801636 31.98661804]
[170.27862549 19.82516289]
[176.55598450 6.20184660]
[177.30511475 -2.90181184]
[183.02955627 -7.57649565]
[189.50904846 -21.10484123]
[195.98854065 -34.63318634]
[202.46804810 -48.16153336]
[208.94754028 -61.68987656]
[215.42703247 -75.21822357]
[202.79991150 -83.35204315]
[191.29182434 -93.00435638]
[181.08427429 -104.02294159]
[172.33825684 -116.23401642]
[165.19169617 -129.44499207]
[159.75730896 -143.44752502]
[156.12080383 -158.02075195]
[154.33953857 -172.93484497]
[154.44160461 -187.95458984]
[156.42538452 -202.84310913]
[160.25959778 -217.36558533]
[165.88377380 -231.29295349]
[173.20921326 -244.40559387]
[182.12036133 -256.49667358]
[192.47671509 -267.37554932]
[204.11491394 -276.87057495]
[216.85139465 -284.83203125]
[230.48532104 -291.13436890]
[244.80165100 -295.67819214]
[259.57458496 -298.39178467]
[274.57113647 -299.23242188]
[289.55477905 -298.18682861]
[304.28921509 -295.27145386]
[318.54208374 -290.53228760]
[332.08856201 -284.04412842]
[344.71499634 -275.90924072]
[356.22225952 -266.25595093]
[366.42886353 -255.23651123]
[375.17385864 -243.02470398]
[382.31930542 -229.81312561]
[387.75253296 -215.81015015]
[391.38778687 -201.23660278]
[393.16781616 -186.32235718]
[393.06448364 -171.30261230]
[391.07943726 -156.41427612]
[387.24401855 -141.89212036]
[381.61868286 -127.96521759]
[374.29214478 -114.85319519]
[365.37994385 -102.76285553]
[355.02270508 -91.88488007]
[343.38369751 -82.39083099]
[330.64654541 -74.43043518]
[317.01208496 -68.12924957]
[302.69537354 -63.58664322]
[287.92221069 -60.87426758]
[272.92559814 -60.03490067]
[257.94201660 -61.08177567]
[243.20782471 -63.99838257]
[228.95538330 -68.73872375]
[222.47587585 -55.21038055]
[215.99638367 -41.68203735]
[209.51689148 -28.15369034]
[203.03739929 -14.62534523]
[196.55790710 -1.09699965]
[190.17929077 12.47920704]
[183.90193176 26.10252380]
[195.55372620 16.65606499]
[208.99513245 9.99807835]
[223.57029724 6.45342207]
[238.56806946 6.19504786]
[253.25668335 9.23556232]
[266.91943359 15.42661190]
[278.88970947 24.46612167]
[288.58343506 35.91303253]
[295.52761841 49.20882797]
[299.38345337 63.70477295]
[299.96282959 78.69358063]
[297.23745728 93.44390869]
[291.34030151 107.23606873]
[282.55908203 119.39709473]
[271.32232666 129.33363342]
[258.17822266 136.56085205]
[243.76814270 140.72613525]
[228.79516602 141.62622070]
[213.98986816 139.21720886]
[200.07464600 133.61665344]
[187.72842407 125.09779358]
[177.55361938 114.07629395]
[170.04669189 101.08992004]
[165.57389832 86.77230835]
[164.35348511 71.82203674]
[166.44500732 56.96856689]
[171.74340820 42.94252777]
[160.78749084 53.18791962]
[149.83158875 63.43331146]
[138.87567139 73.67870331]
[134.86453247 88.02304077]
[119.50019073 91.79763794]
[108.54428101 102.04302979]
[108.18437958 105.06958008]
[106.71528625 108.03205872]
[104.15861511 110.51940155]
[100.68752289 112.13426208]
[96.61791229 112.54807281]
[85.07161713 122.12319183]
[79.38792419 136.88822937]
[64.65202332 139.05676270]
[53.10572052 148.63188171]
[41.55941772 158.20700073]
[30.60350990 168.45239258]
[26.71463394 183.78820801]
[12.34083462 187.69245911]
[2.01416659 198.57179260]
[-8.31250191 209.45112610]
[-18.63916969 220.33045959]
[-28.96583939 231.20979309]
[-39.29250717 242.08912659]
[-49.61917496 252.96846008]
[-59.94584656 263.84777832]
[-50.12265015 275.19995117]
[-41.45948029 287.46029663]
[-34.03976822 300.51077271]
[-27.93496895 314.22567749]
[-23.20387840 328.47290039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 205]
[58 204]
[59 203]
[60 202]
[61 201]
[62 200]
[63 199]
[64 198]
[66 196]
[75 195]
[76 194]
[77 193]
[79 191]
[80 190]
[81 185]
[82 184]
[84 182]
[85 181]
[86 180]
[87 179]
[88 152]
[89 151]
[91 150]
[92 149]
[93 148]
[94 147]
[95 146]
[96 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
