%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[72.47672272 520.23510742]
[67.45744324 534.53833008]
[57.84646225 546.26031494]
[44.80435944 553.98553467]
[29.90603065 556.78118896]
[14.95052052 554.30963135]
[1.74378133 546.86938477]
[-8.11941051 535.35876465]
[-13.44802570 521.16790771]
[-13.59860897 506.01028442]
[-8.55297565 491.71630859]
[1.07958853 480.01205444]
[14.13590527 472.31088257]
[29.03936005 469.54269409]
[31.48508835 454.74340820]
[33.93081665 439.94415283]
[36.37654114 425.14486694]
[38.82226944 410.34561157]
[29.96661186 398.42449951]
[32.23610687 383.38110352]
[44.80010605 374.17327881]
[47.24583435 359.37402344]
[49.69156265 344.57473755]
[52.02705002 329.75769043]
[54.25216675 314.92364502]
[56.47728348 300.08959961]
[54.40932083 295.78463745]
[55.02374649 290.13491821]
[58.99583817 284.84963989]
[61.66163254 270.08843994]
[47.65213013 264.78051758]
[34.85315323 256.98654175]
[23.70135880 246.97071838]
[14.57752132 235.07304382]
[7.79353523 221.69784546]
[3.58174801 207.29997253]
[2.08700728 192.36935425]
[3.36167765 177.41432190]
[7.36380816 162.94435120]
[13.95851135 149.45262146]
[22.92250824 137.39926147]
[33.95169067 127.19564819]
[46.67142868 119.19036102]
[60.64931488 113.65727234]
[75.40984344 110.78619385]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.34490204 42.30139160]
[104.12736511 27.40767288]
[105.90983582 12.51395607]
[103.85395050 7.71599531]
[103.84495544 3.07345104]
[105.48088837 -0.66001666]
[108.11890411 -2.99950337]
[110.56462860 -17.79877472]
[113.01036072 -32.59804535]
[115.45608521 -47.39731598]
[117.90181732 -62.19658661]
[120.34754181 -76.99585724]
[119.78932953 -91.98546600]
[116.24965668 -106.56184387]
[112.70998383 -121.13822174]
[109.17031097 -135.71459961]
[105.63063812 -150.29096985]
[102.09096527 -164.86734009]
[98.55129242 -179.44372559]
[94.27165985 -184.48318481]
[93.32205200 -190.08633423]
[95.13011169 -194.50674438]
[92.02600098 -209.18203735]
[88.92189026 -223.85734558]
[85.81777954 -238.53265381]
[70.84120941 -237.36755371]
[55.84069824 -238.16731262]
[41.07291794 -240.91824341]
[26.79056549 -245.57328796]
[13.23803043 -252.05278015]
[0.64721608 -260.24584961]
[-10.76643276 -270.01229858]
[-20.80761528 -281.18502808]
[-29.30451012 -293.57284546]
[-36.11172867 -306.96377563]
[-41.11278534 -321.12866211]
[-44.22211075 -335.82516479]
[-45.38649750 -350.80178833]
[-44.58602142 -365.80224609]
[-41.83438110 -380.56991577]
[-37.17865753 -394.85205078]
[-30.69851875 -408.40426636]
[-22.50485039 -420.99468994]
[-12.73785210 -432.40786743]
[-1.56465352 -442.44851685]
[10.82355881 -450.94482422]
[24.21480560 -457.75140381]
[38.37994385 -462.75180054]
[53.07659149 -465.86041260]
[68.05326843 -467.02410889]
[83.05371094 -466.22290039]
[97.82122803 -463.47055054]
[112.10313416 -458.81414795]
[125.65505219 -452.33337402]
[138.24508667 -444.13909912]
[149.65780640 -434.37155151]
[159.69792175 -423.19787598]
[168.19363403 -410.80926514]
[174.99958801 -397.41769409]
[179.99929810 -383.25231934]
[183.10722351 -368.55554199]
[184.27018738 -353.57879639]
[183.46827698 -338.57839966]
[180.71522522 -323.81100464]
[176.05815125 -309.52932739]
[169.57672119 -295.97772217]
[161.38185120 -283.38806152]
[151.61376953 -271.97579956]
[140.43960571 -261.93621826]
[128.05059814 -253.44110107]
[114.65869904 -246.63578796]
[100.49308014 -241.63676453]
[103.59719086 -226.96145630]
[106.70130157 -212.28614807]
[109.80541229 -197.61085510]
[113.12767029 -182.98339844]
[116.66734314 -168.40701294]
[120.20701599 -153.83064270]
[123.74668884 -139.25427246]
[127.28636169 -124.67788696]
[130.82603455 -110.10151672]
[134.36570740 -95.52513885]
[137.63059998 -110.16551208]
[143.92608643 -123.78046417]
[152.96575928 -135.75059509]
[164.33839417 -145.53137207]
[177.52658081 -152.67779541]
[191.93037415 -156.86477661]
[206.89448547 -157.90184021]
[221.73814392 -155.74179077]
[235.78605652 -150.48291016]
[248.39915466 -142.36442566]
[259.00363159 -131.75569153]
[267.11700439 -119.13931274]
[272.37023926 -105.08927155]
[274.52429199 -90.24474335]
[273.48120117 -75.28105927]
[269.28842163 -60.87895584]
[262.13665771 -47.69364166]
[252.35131836 -36.32496262]
[240.37754822 -27.29010963]
[226.76005554 -21.00011253]
[212.11836243 -17.74112511]
[197.11857605 -17.66140747]
[182.44308472 -20.76458740]
[168.75950623 -26.90949059]
[156.69036865 -35.81656647]
[146.78474426 -47.08059692]
[139.49325562 -60.18915176]
[135.14680481 -74.55013275]
[132.70108032 -59.75085831]
[130.25535583 -44.95158768]
[127.80963135 -30.15231705]
[125.36389923 -15.35304642]
[122.91817474 -0.55377585]
[120.80355072 14.29642200]
[119.02108765 29.19013977]
[117.23861694 44.08385468]
[118.86318970 46.36834717]
[119.68073273 49.43400192]
[119.38917542 52.97665787]
[117.80203247 56.58851624]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[119.26402283 118.70601654]
[132.08790588 126.55869293]
[143.24745178 136.63146973]
[152.36360168 148.58020020]
[159.12705994 161.99705505]
[163.30877686 176.42446899]
[164.76774597 191.37065125]
[163.45573425 206.32644653]
[159.41889954 220.78263855]
[152.79612732 234.24726868]
[143.81428528 246.26245117]
[132.78044128 256.41986084]
[120.07137299 264.37460327]
[106.12067413 269.85705566]
[91.40400696 272.68185425]
[76.42285156 272.75421143]
[73.75705719 287.51544189]
[71.31132507 302.31469727]
[69.08621216 317.14874268]
[66.86109161 331.98278809]
[68.68286896 340.93371582]
[64.49082947 347.02047729]
[62.04510498 361.81976318]
[59.59937668 376.61901855]
[68.53289795 389.37951660]
[65.84176636 404.35324097]
[53.62154007 412.79135132]
[51.17581177 427.59060669]
[48.73008728 442.38989258]
[46.28435898 457.18914795]
[43.83863068 471.98843384]
[57.05905914 479.40435791]
[66.94345093 490.89672852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[21 201]
[22 200]
[23 199]
[24 197]
[25 196]
[26 195]
[29 194]
[30 193]
[46 177]
[48 175]
[49 174]
[50 173]
[51 168]
[52 167]
[53 166]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[72 125]
[73 124]
[74 123]
[75 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
