%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[89.98838806 803.97369385]
[75.05029297 802.25286865]
[60.61793518 798.03204346]
[47.10656738 791.43273926]
[34.90493393 782.64477539]
[24.36409950 771.92102051]
[15.78735161 759.57000732]
[9.42145538 745.94714355]
[5.44957161 731.44427490]
[3.98597956 716.47882080]
[5.07278919 701.48126221]
[8.67873096 686.88311768]
[14.70005512 673.10449219]
[22.96351624 660.54168701]
[33.23135757 649.55627441]
[45.20815277 640.46429443]
[58.54930496 633.52728271]
[72.87096405 628.94494629]
[87.76106262 626.84899902]
[88.20767212 611.85565186]
[88.54264832 596.85943604]
[88.76597595 581.86108398]
[88.98930359 566.86273193]
[89.21263123 551.86437988]
[76.35586548 544.34313965]
[68.94069672 531.30969238]
[69.04560852 516.21478271]
[76.74256897 503.11312866]
[90.05080414 495.57403564]
[90.27413177 480.57568359]
[90.49745941 465.57736206]
[90.72078705 450.57901001]
[90.94411469 435.58068848]
[91.16744232 420.58233643]
[91.39076996 405.58401489]
[78.53400421 398.06274414]
[71.11883545 385.02929688]
[71.22374725 369.93441772]
[78.92070770 356.83273315]
[92.22894287 349.29364014]
[92.45227051 334.29528809]
[84.90531921 321.45425415]
[92.84722137 307.77078247]
[93.07054901 292.77246094]
[85.52359772 279.93139648]
[93.46550751 266.24795532]
[82.93943024 255.77238464]
[82.95226288 240.55876160]
[94.01136017 229.58908081]
[94.23468781 214.59074402]
[94.45801544 199.59240723]
[94.68134308 184.59407043]
[94.56967926 169.59448242]
[94.12307739 154.60113525]
[93.67646790 139.60777283]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[82.67567444 66.34746552]
[89.64171600 53.18222427]
[88.74890137 38.20881653]
[80.20391083 24.89364433]
[87.16995239 11.72840500]
[86.27713776 -3.24500060]
[74.73925018 -13.70993137]
[74.04710388 -28.90781212]
[84.09492493 -39.84293747]
[73.60099792 -54.97433090]
[82.06159210 -70.34915161]
[80.94594574 -85.30760193]
[79.83029938 -100.26605988]
[71.08802032 -113.45253754]
[77.85727692 -126.72003174]
[76.74163055 -141.67848206]
[67.99935150 -154.86495972]
[74.76860809 -168.13244629]
[73.65296173 -183.09089661]
[72.31472778 -198.03108215]
[70.75420380 -212.94969177]
[69.08266449 -227.85626221]
[67.30019379 -242.74998474]
[65.51773071 -257.64370728]
[50.49871445 -258.33584595]
[35.79849625 -261.49075317]
[21.81810379 -267.02233887]
[8.93893528 -274.77972412]
[-2.48765755 -284.55123901]
[-12.14994812 -296.07037354]
[-19.78434181 -309.02279663]
[-25.18256950 -323.05523682]
[-28.19735909 -337.78482056]
[-28.74646759 -352.80975342]
[-26.81491661 -367.72012329]
[-22.45539665 -382.10916138]
[-15.78683949 -395.58432007]
[-6.99116993 -407.77801514]
[3.69166088 -418.35757446]
[15.97021770 -427.03436279]
[29.50953102 -433.57171631]
[43.94023895 -437.79125977]
[58.86866379 -439.57788086]
[73.88754272 -438.88284302]
[88.58715820 -435.72509766]
[102.56648254 -430.19082642]
[115.44416046 -422.43096924]
[126.86886597 -412.65722656]
[136.52894592 -401.13626099]
[144.16084290 -388.18234253]
[149.55636597 -374.14886475]
[152.56831360 -359.41870117]
[153.11453247 -344.39367676]
[151.18009949 -329.48367310]
[146.81781006 -315.09545898]
[140.14665222 -301.62158203]
[131.34863281 -289.42959595]
[120.66377258 -278.85208130]
[108.38354492 -270.17764282]
[94.84297180 -263.64291382]
[80.41144562 -259.42617798]
[82.19391632 -244.53245544]
[83.97637939 -229.63873291]
[87.89244843 -223.37086487]
[85.67280579 -214.51022339]
[87.23332977 -199.59161377]
[90.31344604 -195.94169617]
[91.13340759 -190.31809998]
[88.61141205 -184.20655823]
[89.72705841 -169.24809265]
[98.38954163 -157.13154602]
[91.70008087 -142.79412842]
[92.81573486 -127.83567810]
[101.47821045 -115.71913147]
[94.78874969 -101.38170624]
[95.90440369 -86.42325592]
[97.02005005 -71.46479797]
[105.97840118 -63.33617401]
[107.03028107 -50.88317108]
[99.06832886 -40.73575592]
[110.34438324 -31.07210159]
[111.46312714 -15.89965820]
[101.25054932 -4.13781643]
[102.14336395 10.83558941]
[110.62448120 23.07976341]
[103.72230530 37.31600189]
[104.61511993 52.28940582]
[113.09624481 64.53358459]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[108.66981506 139.16117859]
[109.11642456 154.15452576]
[109.56302643 169.14787292]
[112.30789948 173.58778381]
[113.00547791 178.17762756]
[111.94147491 182.11245728]
[109.67968750 184.81739807]
[109.45635986 199.81573486]
[109.23303223 214.81407166]
[109.00970459 229.81240845]
[119.73728943 241.10650635]
[119.29714966 256.31375122]
[108.46384430 266.47128296]
[115.99481964 280.38513184]
[108.06889343 292.99578857]
[107.84556580 307.99411011]
[115.37654114 321.90795898]
[107.45060730 334.51861572]
[107.22727966 349.51696777]
[120.30514526 357.44897461]
[127.60860443 370.77398682]
[127.26404572 385.86529541]
[119.46411133 398.67221069]
[106.38910675 405.80734253]
[106.16577911 420.80566406]
[105.94245148 435.80401611]
[105.71912384 450.80233765]
[105.49579620 465.80068970]
[105.27246857 480.79901123]
[105.04914093 495.79736328]
[118.12700653 503.72937012]
[125.43046570 517.05438232]
[125.08590698 532.14569092]
[117.28597260 544.95257568]
[104.21096802 552.08770752]
[103.98764038 567.08605957]
[103.76431274 582.08441162]
[103.54098511 597.08276367]
[106.54228210 605.71002197]
[103.20101929 612.30224609]
[102.75441742 627.29559326]
[117.49337006 630.27410889]
[131.51689148 635.70080566]
[144.42149353 643.41955566]
[155.83589172 653.20831299]
[165.43165588 664.78540039]
[172.93272400 677.81774902]
[178.12324524 691.93035889]
[180.85389709 706.71722412]
[181.04611206 721.75286865]
[178.69435120 736.60473633]
[173.86628723 750.84545898]
[166.70082092 764.06530762]
[157.40414429 775.88391113]
[146.24371338 785.96124268]
[133.54063416 794.00738525]
[119.66042328 799.79077148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 194]
[20 193]
[21 191]
[22 190]
[23 189]
[24 188]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[40 172]
[41 171]
[43 169]
[44 168]
[46 166]
[49 163]
[50 162]
[51 161]
[52 160]
[53 156]
[54 155]
[55 154]
[56 153]
[57 152]
[58 149]
[59 148]
[61 146]
[62 145]
[64 143]
[65 142]
[68 139]
[70 136]
[71 135]
[72 134]
[74 132]
[75 131]
[77 129]
[78 128]
[79 125]
[80 124]
[81 122]
[82 121]
[83 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
