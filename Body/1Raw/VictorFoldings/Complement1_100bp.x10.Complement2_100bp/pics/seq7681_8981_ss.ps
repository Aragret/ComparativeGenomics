%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[151.40075684 479.60577393]
[152.66886902 464.62246704]
[156.45111084 450.06903076]
[162.63862610 436.36419678]
[171.05343628 423.90228271]
[181.45338440 413.04183960]
[193.53926086 404.09536743]
[206.96333313 397.32025146]
[202.56234741 382.98040771]
[198.16134644 368.64056396]
[193.76034546 354.30072021]
[189.35934448 339.96087646]
[184.95834351 325.62100220]
[180.23822021 311.38302612]
[175.20129395 297.25399780]
[170.16438293 283.12496948]
[151.41162109 280.72964478]
[136.41224670 269.08825684]
[129.37796021 251.36436462]
[132.33734131 232.44383240]
[144.55158997 217.58796692]
[138.68263245 203.78378296]
[132.81367493 189.97961426]
[126.73983765 176.26434326]
[120.46247101 162.64102173]
[108.10904694 154.31983948]
[109.36098480 138.54823303]
[103.08362579 124.92492676]
[96.80626678 111.30160522]
[95.02311707 126.19524384]
[87.40642548 139.11755371]
[75.23973083 147.89088440]
[60.57332993 151.03680420]
[45.87877655 148.02514648]
[33.63235855 139.36343384]
[25.89780998 126.51132202]
[23.97854233 111.63461304]
[28.19798279 97.24029541]
[37.84508133 85.75406647]
[51.29413605 79.11155701]
[66.27873993 78.43214417]
[80.27372742 83.83032227]
[90.92160797 94.39778137]
[87.38193512 79.82141113]
[83.84226227 65.24503326]
[80.30259705 50.66865921]
[74.56121826 64.52638245]
[62.72059250 73.73506165]
[47.87583923 75.88755798]
[33.90733337 70.42121887]
[24.46641159 58.76493073]
[22.02090836 43.96562195]
[27.21007156 29.89179611]
[38.67746735 20.22231674]
[53.42554474 17.48476028]
[67.59918976 22.39472008]
[77.49305725 33.66794968]
[76.15482330 18.72776413]
[74.81658936 3.78757954]
[73.47835541 -11.15260601]
[72.14012146 -26.09279060]
[70.80188751 -41.03297424]
[69.46365356 -55.97315979]
[68.12541962 -70.91334534]
[66.78718567 -85.85353088]
[65.44895172 -100.79371643]
[64.11071777 -115.73390198]
[54.73156738 -124.58796692]
[53.92452621 -137.05923462]
[61.57794952 -146.42681885]
[60.46230316 -161.38526917]
[59.34665298 -176.34371948]
[58.23100662 -191.30216980]
[56.67048264 -206.22077942]
[54.66646957 -221.08630371]
[52.66245651 -235.95182800]
[40.37817383 -245.52963257]
[38.55758286 -260.63394165]
[47.76425171 -272.28610229]
[45.76023865 -287.15161133]
[43.75622559 -302.01715088]
[41.75221252 -316.88269043]
[26.72449684 -317.28756714]
[11.95636177 -320.09799194]
[-2.16966271 -325.24108887]
[-15.28767872 -332.58370972]
[-27.05789757 -341.93560791]
[-37.17544174 -353.05456543]
[-45.37824249 -365.65258789]
[-51.45383072 -379.40335083]
[-55.24483109 -393.95068359]
[-56.65304947 -408.91775513]
[-55.64200592 -423.91687012]
[-52.23789215 -438.55957031]
[-46.52888489 -452.46652222]
[-38.66285324 -465.27752686]
[-28.84355545 -476.66073608]
[-17.32532883 -486.32128906]
[-4.40652657 -494.00900269]
[9.57822514 -499.52468872]
[24.26668549 -502.72552490]
[39.27839279 -503.52856445]
[54.22450256 -501.91302490]
[68.71787262 -497.92074585]
[82.38310242 -491.65512085]
[94.86621094 -483.27850342]
[105.84387207 -473.00781250]
[115.03173065 -461.10906982]
[122.19180298 -447.89056396]
[127.13861847 -433.69458008]
[129.74404907 -418.88891602]
[129.94059753 -403.85702515]
[127.72319031 -388.98831177]
[123.14925385 -374.66784668]
[116.33726501 -361.26663208]
[107.46366882 -349.13174438]
[96.75831604 -338.57751465]
[84.49849701 -329.87734985]
[71.00177002 -323.25656128]
[56.61774063 -318.88668823]
[58.62175369 -304.02117920]
[60.62576675 -289.15563965]
[62.62977982 -274.29010010]
[74.59335327 -265.49191284]
[76.83747101 -250.44468689]
[67.52798462 -237.95584106]
[69.53199768 -223.09031677]
[71.53601074 -208.22479248]
[73.68090057 -206.41992188]
[75.24009705 -203.65666199]
[75.84497833 -200.15388489]
[75.21289062 -196.25965881]
[73.18946075 -192.41781616]
[74.30510712 -177.45936584]
[75.42075348 -162.50091553]
[76.53640747 -147.54246521]
[87.18412018 -133.59280396]
[79.05090332 -117.07213593]
[80.38913727 -102.13195038]
[81.72737122 -87.19176483]
[83.06560516 -72.25157928]
[84.40383911 -57.31139374]
[85.74207306 -42.37120819]
[87.08030701 -27.43102455]
[88.41854095 -12.49083996]
[89.75677490 2.44934535]
[91.09500885 17.38953018]
[92.43324280 32.32971573]
[94.87896729 47.12898636]
[98.41864014 61.70536041]
[101.95831299 76.28173828]
[105.49798584 90.85811615]
[110.42958069 105.02424622]
[116.70693970 118.64756012]
[122.98429871 132.27087402]
[135.78672791 141.56649780]
[134.08578491 156.36366272]
[140.36314392 169.98698425]
[145.53221130 174.10914612]
[147.54187012 179.42500305]
[146.61784363 184.11064148]
[152.48680115 197.91482544]
[158.35577393 211.71899414]
[169.61061096 211.34330750]
[180.42005920 214.40438843]
[189.76246643 220.59609985]
[196.75996399 229.31718445]
[200.76095581 239.72972107]
[201.40074158 250.83947754]
[198.63478088 261.59094238]
[192.74128723 270.96762085]
[184.29341125 278.08804321]
[189.33032227 292.21707153]
[194.36724854 306.34609985]
[198.34475708 309.72640991]
[200.42034912 313.87915039]
[200.61828613 317.95050049]
[199.29820251 321.22003174]
[203.69918823 335.55987549]
[208.10018921 349.89971924]
[212.50119019 364.23956299]
[216.90219116 378.57940674]
[221.30319214 392.91925049]
[236.21675110 390.99734497]
[251.24058533 391.62365723]
[265.94244385 394.78018188]
[279.89929199 400.37606812]
[292.70959473 408.25033569]
[304.00476074 418.17642212]
[313.45983887 429.86874390]
[320.80273438 442.99084473]
[325.82217407 457.16522217]
[328.37380981 471.98403931]
[328.38415527 487.02093506]
[325.85293579 501.84323120]
[320.85299683 516.02453613]
[313.52816772 529.15673828]
[304.08920288 540.86206055]
[292.80770874 550.80364990]
[280.00827026 558.69555664]
[266.05911255 564.31066895]
[251.36163330 567.48742676]
[236.33866882 568.13439941]
[221.42247009 566.23303223]
[207.04222107 561.83801270]
[193.61164856 555.07574463]
[181.51719666 546.14086914]
[171.10684204 535.29040527]
[162.68009949 522.83660889]
[156.47943115 509.13769531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[14 174]
[15 173]
[16 172]
[21 163]
[22 162]
[23 161]
[24 158]
[25 157]
[27 155]
[28 154]
[29 153]
[43 152]
[44 151]
[45 150]
[46 149]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[70 136]
[71 135]
[72 134]
[73 133]
[74 128]
[75 127]
[76 126]
[79 123]
[80 122]
[81 121]
[82 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
