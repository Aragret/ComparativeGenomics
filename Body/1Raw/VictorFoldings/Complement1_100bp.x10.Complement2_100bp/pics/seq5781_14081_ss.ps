%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[130.95843506 404.46020508]
[120.51544952 415.40548706]
[107.20034027 422.58621216]
[92.31758118 425.29888916]
[77.32524109 423.27780151]
[63.69211197 416.72088623]
[52.75382996 406.27056885]
[45.58201981 392.95065308]
[42.87929916 378.06607056]
[44.91045380 363.07510376]
[51.47649384 349.44635010]
[61.93413925 338.51507568]
[75.25886536 331.35220337]
[90.14524078 328.65945435]
[92.14926147 313.79391479]
[94.15327454 298.92840576]
[96.15728760 284.06286621]
[98.16130066 269.19732666]
[100.16531372 254.33181763]
[102.16932678 239.46627808]
[104.17333984 224.60075378]
[98.20578003 210.95387268]
[107.71743011 198.31112671]
[107.38245392 183.31486511]
[104.71665955 168.55364990]
[102.05086517 153.79243469]
[99.38507080 139.03121948]
[96.71927643 124.26999664]
[94.05347443 109.50878143]
[85.57297516 121.88137817]
[71.15785980 126.02917480]
[57.39850998 120.05587006]
[50.58553314 106.69235992]
[53.83371735 92.04827118]
[65.65804291 82.81868744]
[80.65258789 83.22323608]
[91.96295166 93.07859802]
[90.84729767 78.12014008]
[82.10501862 64.93367004]
[88.87428284 51.66617584]
[87.75862885 36.70772171]
[86.64298248 21.74926758]
[85.52733612 6.79081440]
[84.41168213 -8.16763878]
[73.69363403 -23.14111328]
[81.92439270 -38.64019775]
[80.58615875 -53.58038330]
[79.24792480 -68.52056885]
[75.81686401 -83.12288666]
[70.36150360 -97.09568787]
[64.90615082 -111.06848907]
[59.45079041 -125.04128265]
[53.99543381 -139.01408386]
[48.54007721 -152.98687744]
[43.08472061 -166.95967102]
[37.62936020 -180.93247986]
[32.17400360 -194.90527344]
[17.77507591 -190.66825867]
[3.06521463 -187.68473816]
[-11.84667301 -185.97680664]
[-26.85018158 -185.55709839]
[-41.83423233 -186.42872620]
[-56.68787766 -188.58525085]
[-71.30115509 -192.01068115]
[-85.56586456 -196.67968750]
[-99.37639618 -202.55766296]
[-112.63049316 -209.60112000]
[-125.23003387 -217.75788879]
[-137.08174133 -226.96760559]
[-148.09783936 -237.16204834]
[-158.19679260 -248.26577759]
[-167.30383301 -260.19653320]
[-175.35151672 -272.86605835]
[-182.28025818 -286.18048096]
[-188.03878784 -300.04122925]
[-192.58444214 -314.34573364]
[-195.88357544 -328.98803711]
[-197.91175842 -343.85974121]
[-198.65399170 -358.85076904]
[-198.10475159 -373.85009766]
[-196.26812744 -388.74667358]
[-193.15771484 -403.43023682]
[-188.79652405 -417.79202271]
[-183.21687317 -431.72576904]
[-176.46003723 -445.12826538]
[-168.57608032 -457.90026855]
[-159.62335205 -469.94726562]
[-149.66813660 -481.18005371]
[-138.78413391 -491.51541138]
[-127.05194855 -500.87689209]
[-114.55842590 -509.19515991]
[-101.39607239 -516.40856934]
[-87.66233063 -522.46380615]
[-73.45889282 -527.31604004]
[-58.89091110 -530.92926025]
[-44.06624603 -533.27673340]
[-29.09465790 -534.34112549]
[-14.08698940 -534.11456299]
[0.84564412 -532.59869385]
[15.59268475 -529.80474854]
[30.04495049 -525.75335693]
[44.09543610 -520.47460938]
[57.64012146 -514.00756836]
[70.57872009 -506.40005493]
[82.81542969 -497.70843506]
[94.25966644 -487.99703979]
[104.82669830 -477.33779907]
[114.43827820 -465.80963135]
[123.02325439 -453.49786377]
[130.51806641 -440.49365234]
[136.86721802 -426.89331055]
[142.02369690 -412.79748535]
[145.94934082 -398.31057739]
[148.61506653 -383.53979492]
[150.00115967 -368.59457397]
[150.09733582 -353.58547974]
[148.90290833 -338.62371826]
[146.42669678 -323.82000732]
[142.68704224 -309.28396606]
[137.71162415 -295.12322998]
[131.53730774 -281.44259644]
[124.20977020 -268.34341431]
[115.78328705 -255.92263794]
[106.32023621 -244.27223206]
[95.89068604 -233.47843933]
[84.57184601 -223.62118530]
[72.44752502 -214.77346802]
[59.60749054 -207.00076294]
[46.14680099 -200.36062622]
[51.60216141 -186.38783264]
[57.05751801 -172.41503906]
[62.51287460 -158.44223022]
[67.96823120 -144.46943665]
[73.42359161 -130.49664307]
[78.87894440 -116.52384186]
[84.33430481 -102.55104828]
[89.78965759 -88.57824707]
[91.38384247 -103.49329376]
[97.24827576 -117.29939270]
[106.87561798 -128.80218506]
[119.43301392 -137.00656128]
[133.83412170 -141.20277405]
[148.83309937 -141.02778625]
[163.13238525 -136.49673462]
[175.49494934 -128.00163269]
[184.85131836 -116.27735901]
[190.39205933 -102.33819580]
[191.63783264 -87.39001465]
[188.48088074 -72.72599030]
[181.19432068 -59.61470032]
[170.40849304 -49.19040298]
[157.05648804 -42.35490799]
[142.29339600 -39.69955063]
[127.39635468 -41.45404816]
[113.65411377 -47.46661758]
[102.25552368 -57.21710968]
[94.18811035 -69.85880280]
[95.52634430 -54.91861725]
[96.86457825 -39.97843170]
[105.94295502 -31.98408318]
[107.18013000 -19.54812241]
[99.37014008 -9.28328800]
[100.48578644 5.67516565]
[101.60143280 20.63361931]
[102.71708679 35.59207153]
[103.83273315 50.55052567]
[112.49521637 62.66707230]
[105.80575562 77.00449371]
[106.92140198 91.96295166]
[108.81469727 106.84298706]
[111.48049164 121.60420227]
[114.14628601 136.36541748]
[116.81208038 151.12663269]
[119.47787476 165.88784790]
[122.14366913 180.64906311]
[126.42598724 166.27333069]
[134.38124084 153.55665588]
[145.43515015 143.41706848]
[158.78968811 136.58654785]
[173.48081970 133.55819702]
[188.44795227 134.55062866]
[202.61059570 139.49221802]
[214.94636536 148.02621460]
[224.56469727 159.53654480]
[230.77124023 173.19226074]
[233.11796570 188.00756836]
[231.43544006 202.91290283]
[225.84512329 216.83224487]
[216.75059509 228.76077271]
[204.80839539 237.83732605]
[190.88063049 243.40666199]
[175.97277832 245.06674194]
[161.16104126 242.69772339]
[147.51467896 236.47061157]
[136.01884460 226.83494568]
[127.50344086 214.48635864]
[122.58296204 200.31513977]
[128.40718079 215.02529907]
[119.03887177 226.60476685]
[117.03485107 241.47029114]
[115.03083801 256.33581543]
[113.02682495 271.20135498]
[111.02281189 286.06689453]
[109.01879883 300.93240356]
[107.01478577 315.79794312]
[105.01077271 330.66345215]
[118.65267944 337.20208740]
[129.60494995 347.63775635]
[136.79460144 360.94805908]
[139.51727295 375.82897949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 206]
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[23 197]
[24 175]
[25 174]
[26 173]
[27 172]
[28 171]
[29 170]
[37 169]
[38 168]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[46 159]
[47 158]
[48 157]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
