%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[42.46337128 746.94421387]
[27.83612633 750.29919434]
[12.99906349 752.55169678]
[-1.96484268 753.68914795]
[-16.97190666 753.70507812]
[-31.93820000 752.59954834]
[-46.78002930 750.37866211]
[-61.41438293 747.05480957]
[-75.75942993 742.64666748]
[-89.73493958 737.17883301]
[-103.26274872 730.68182373]
[-116.26721954 723.19213867]
[-128.67561340 714.75152588]
[-140.41853333 705.40722656]
[-151.43031311 695.21148682]
[-161.64936829 684.22131348]
[-171.01855469 672.49822998]
[-179.48547363 660.10778809]
[-187.00276184 647.11926270]
[-193.52839661 633.60522461]
[-199.02586365 619.64135742]
[-203.46444702 605.30566406]
[-206.81930542 590.67840576]
[-209.07167053 575.84130859]
[-210.20895386 560.87744141]
[-210.22480774 545.87036133]
[-209.11912537 530.90405273]
[-206.89808655 516.06225586]
[-203.57414246 501.42791748]
[-199.16584778 487.08291626]
[-193.69787598 473.10745239]
[-187.20079041 459.57971191]
[-179.71095276 446.57531738]
[-171.27021790 434.16699219]
[-161.92581177 422.42416382]
[-151.72998047 411.41247559]
[-140.73976135 401.19351196]
[-129.01660156 391.82443237]
[-116.62606049 383.35760498]
[-103.63744354 375.84042358]
[-90.12338257 369.31491089]
[-76.15945435 363.81756592]
[-61.82374954 359.37911987]
[-47.19644547 356.02438354]
[-32.35934067 353.77215576]
[-17.39541626 352.63500977]
[-2.38835144 352.61929321]
[12.57792377 353.72509766]
[27.41971016 355.94625854]
[22.69346046 341.82138062]
[33.29511642 330.07763672]
[36.61737442 315.45019531]
[39.93963242 300.82272339]
[43.26189423 286.19528198]
[46.58415222 271.56781006]
[49.90641403 256.94033813]
[53.22867203 242.31289673]
[56.55093002 227.68542480]
[59.87319183 213.05796814]
[58.49510193 210.61686707]
[58.00093079 207.48278809]
[58.65946579 203.98968506]
[60.61375427 200.56254578]
[63.85316849 197.67115784]
[68.04018402 183.26737976]
[72.22719574 168.86360168]
[68.35005188 154.48246765]
[79.63190460 143.39056396]
[75.75476074 129.00942993]
[87.03662109 117.91752625]
[91.22363281 103.51374054]
[89.80361938 98.46423340]
[91.31384277 92.97856903]
[95.75567627 88.74689484]
[100.36968994 74.47416687]
[104.98369598 60.20143127]
[109.38469696 45.86158371]
[113.57170868 31.45780182]
[117.75872040 17.05401993]
[121.29838562 2.47764444]
[124.18366241 -12.24224663]
[127.06893158 -26.96213913]
[129.95420837 -41.68202972]
[132.83947754 -56.40192032]
[127.90114594 -71.43267059]
[137.94207764 -82.43399048]
[140.82734680 -97.15388489]
[127.44951630 -104.14772034]
[116.59542084 -114.61724091]
[109.13876343 -127.70782471]
[105.67642975 -142.35433960]
[106.48069000 -157.36784363]
[111.47782898 -171.53204346]
[120.25481415 -183.70188904]
[132.09339905 -192.89611816]
[146.02890015 -198.37634277]
[160.92884827 -199.70639038]
[163.81411743 -214.42628479]
[166.69940186 -229.14617920]
[152.97506714 -235.37026978]
[141.05641174 -244.59213257]
[131.58621216 -256.31442261]
[125.07517242 -269.90496826]
[121.87442017 -284.63085938]
[122.15657806 -299.69793701]
[125.90641785 -314.29367065]
[132.92172241 -327.63092041]
[142.82417297 -338.99041748]
[155.07972717 -347.75958252]
[169.02746582 -353.46548462]
[183.91520691 -355.80038452]
[198.94007874 -354.63842773]
[213.29179382 -350.04223633]
[226.19639587 -342.25967407]
[236.95794678 -331.71047974]
[244.99607849 -318.96353149]
[249.87733459 -304.70623779]
[251.33845520 -289.70751953]
[249.30065918 -274.77621460]
[243.87382507 -260.71752930]
[235.35061646 -248.28967285]
[224.19068909 -238.16284180]
[210.99588013 -230.88316345]
[196.47775269 -226.84323120]
[181.41928101 -226.26091003]
[178.53401184 -211.54101562]
[175.64874268 -196.82112122]
[188.94400024 -189.96447754]
[199.77941895 -179.62886047]
[207.27096558 -166.64570618]
[210.80412292 -152.06291199]
[210.08422852 -137.06031799]
[205.16108704 -122.85417175]
[196.42561340 -110.59857178]
[184.57879639 -101.29169464]
[170.57543945 -95.69452667]
[155.54724121 -94.26861572]
[152.66197205 -79.54872131]
[157.80667114 -65.57083893]
[147.55937195 -53.51664734]
[144.67410278 -38.79675674]
[141.78881836 -24.07686615]
[138.90354919 -9.35697460]
[136.01828003 5.36291695]
[149.03877258 -2.08468628]
[163.54751587 1.72272384]
[171.23324585 14.60408974]
[167.69322205 29.18037987]
[154.95533752 37.10163498]
[140.31642151 33.83019638]
[132.16250610 21.24103165]
[127.97548676 35.64481354]
[123.78847504 50.04859543]
[125.26275635 54.59123230]
[123.89902496 60.10823059]
[119.25643158 64.81543732]
[114.64241791 79.08817291]
[110.02841187 93.36090851]
[105.62741089 107.70075226]
[101.44039917 122.10453796]
[105.01805878 137.51593018]
[94.03569031 147.57757568]
[97.61334991 162.98896790]
[86.63097382 173.05061340]
[82.44396210 187.45439148]
[78.25695038 201.85816956]
[74.50064850 216.38023376]
[71.17839050 231.00769043]
[67.85613251 245.63514709]
[64.53387451 260.26260376]
[61.21161270 274.89007568]
[57.88935471 289.51751709]
[54.56709290 304.14498901]
[51.24483490 318.77246094]
[47.92257309 333.39990234]
[52.41119385 348.57104492]
[42.04717255 359.26852417]
[56.39229202 363.67642212]
[70.36789703 369.14404297]
[83.89582825 375.64074707]
[96.90042114 383.13024902]
[109.30895996 391.57064819]
[121.05204773 400.91476440]
[132.06401062 411.11029053]
[142.28326416 422.10025024]
[151.65264893 433.82315063]
[160.11978149 446.21347046]
[167.63731384 459.20190430]
[174.16317749 472.71578979]
[179.66090393 486.67956543]
[184.09973145 501.01513672]
[187.45484924 515.64239502]
[189.70747375 530.47943115]
[190.84503174 545.44329834]
[190.86114502 560.45037842]
[189.75572205 575.41668701]
[187.53495789 590.25854492]
[184.21125793 604.89288330]
[179.80322266 619.23797607]
[174.33549500 633.21356201]
[167.83865356 646.74139404]
[160.34902954 659.74597168]
[151.90852356 672.15441895]
[142.56433105 683.89739990]
[132.36869812 694.90930176]
[121.37864685 705.12841797]
[109.65565491 714.49774170]
[97.26526642 722.96478271]
[84.27677917 730.48217773]
[70.76283264 737.00793457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 177]
[51 175]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[64 166]
[65 165]
[66 164]
[68 162]
[70 160]
[71 159]
[74 158]
[75 157]
[76 156]
[77 153]
[78 152]
[79 151]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[86 138]
[87 137]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
