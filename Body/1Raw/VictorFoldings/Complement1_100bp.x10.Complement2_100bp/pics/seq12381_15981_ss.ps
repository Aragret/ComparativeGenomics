%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[66.67906952 603.45544434]
[52.40421295 608.08758545]
[37.81332397 611.59960938]
[22.99415398 613.97039795]
[8.03583050 615.18560791]
[-6.97168636 615.23809814]
[-21.93813705 614.12738037]
[-36.77351379 611.86022949]
[-51.38858795 608.45025635]
[-65.69546509 603.91796875]
[-79.60810089 598.29064941]
[-93.04282379 591.60211182]
[-105.91883850 583.89257812]
[-118.15869141 575.20843506]
[-129.68878174 565.60192871]
[-140.43975830 555.13079834]
[-150.34696960 543.85803223]
[-159.35083008 531.85137939]
[-167.39718628 519.18316650]
[-174.43765259 505.92947388]
[-180.42988586 492.17004395]
[-185.33782959 477.98767090]
[-189.13198853 463.46759033]
[-191.78952026 448.69714355]
[-193.29446411 433.76519775]
[-193.63777161 418.76150513]
[-192.81735229 403.77633667]
[-190.83816528 388.89981079]
[-187.71211243 374.22137451]
[-183.45797729 359.82934570]
[-178.10134888 345.81027222]
[-171.67445374 332.24841309]
[-164.21594238 319.22540283]
[-155.77066040 306.81954956]
[-146.38940430 295.10543823]
[-136.12860107 284.15353394]
[-125.04997253 274.02969360]
[-113.22011566 264.79479980]
[-100.71020508 256.50442505]
[-87.59545898 249.20840454]
[-73.95476532 242.95063782]
[-59.87015915 237.76872253]
[-45.42634583 233.69386292]
[-30.71019173 230.75054932]
[-15.81020355 228.95648193]
[-0.81599385 228.32244873]
[14.18225956 228.85226440]
[29.09435463 230.54275513]
[43.83060837 233.38374329]
[47.80270386 218.91921997]
[51.77479935 204.45469666]
[55.74689484 189.99017334]
[59.71899033 175.52565002]
[47.97833633 184.86143494]
[33.15764999 187.17385864]
[19.13102531 181.85842896]
[9.56498337 170.30459595]
[6.96006918 155.53251648]
[11.99719906 141.40356445]
[23.35968018 131.61102295]
[38.07738495 128.71461487]
[52.30314636 133.47148132]
[62.31837845 144.63818359]
[65.50516510 159.29487610]
[71.57900238 145.57960510]
[77.65283203 131.86434937]
[83.72666931 118.14907837]
[89.80049896 104.43380737]
[75.45385742 108.81261444]
[62.14873886 101.88631439]
[57.50690842 87.62260437]
[64.18742371 74.19238281]
[78.36338043 69.28910065]
[91.91415405 75.72157288]
[97.07727051 89.80403900]
[104.35049438 76.68534088]
[111.62372589 63.56665039]
[111.54829407 47.74562454]
[124.48640442 40.36628723]
[131.75962830 27.24759483]
[139.03286743 14.12890053]
[140.45703125 5.10617542]
[146.51329041 0.87020320]
[153.98103333 -12.13874912]
[141.59974670 -20.62071228]
[129.93148804 -30.05956650]
[119.05004883 -40.39562988]
[109.02420807 -51.56356049]
[99.91736603 -63.49274826]
[91.78709412 -76.10776520]
[84.68479156 -89.32886505]
[78.65536499 -103.07244873]
[73.73693848 -117.25163269]
[69.96060944 -131.77676392]
[67.35025024 -146.55601501]
[65.92236328 -161.49592590]
[65.68597412 -176.50205994]
[66.64257812 -191.47955322]
[68.78614044 -206.33367920]
[72.10308838 -220.97055054]
[76.57246399 -235.29762268]
[82.16600037 -249.22428894]
[88.84835052 -262.66253662]
[96.57724762 -275.52737427]
[105.30383301 -287.73748779]
[114.97293091 -299.21566772]
[125.52341461 -309.88934326]
[136.88858032 -319.69104004]
[148.99656677 -328.55877686]
[161.77082825 -336.43649292]
[175.13058472 -343.27438354]
[188.99139404 -349.02920532]
[203.26560974 -353.66461182]
[217.86299133 -357.15124512]
[232.69123840 -359.46707153]
[247.65661621 -360.59747314]
[262.66448975 -360.53530884]
[277.61996460 -359.28094482]
[292.42852783 -356.84231567]
[306.99652100 -353.23486328]
[321.23184204 -348.48135376]
[335.04449463 -342.61187744]
[348.34713745 -335.66354370]
[361.05569458 -327.68023682]
[373.08978271 -318.71249390]
[384.37335205 -308.81695557]
[394.83502197 -298.05624390]
[404.40869141 -286.49835205]
[413.03381348 -274.21633911]
[420.65585327 -261.28790283]
[427.22662354 -247.79475403]
[432.70458984 -233.82220459]
[437.05508423 -219.45860291]
[440.25067139 -204.79475403]
[442.27105713 -189.92337036]
[443.10354614 -174.93847656]
[442.74282837 -159.93481445]
[441.19119263 -145.00723267]
[438.45846558 -130.25012207]
[434.56192017 -115.75678253]
[429.52618408 -101.61884308]
[423.38308716 -87.92568970]
[416.17150879 -74.76389313]
[407.93698120 -62.21666718]
[398.73159790 -50.36334610]
[388.61358643 -39.27886963]
[377.64688110 -29.03331757]
[365.90081787 -19.69146538]
[353.44967651 -11.31237984]
[340.37216187 -3.94903302]
[326.75097656 2.35201907]
[312.67221069 7.55093956]
[298.22491455 11.61485767]
[283.50039673 14.51808071]
[268.59176636 16.24225235]
[253.59326172 16.77647400]
[238.59974670 16.11736488]
[223.70599365 14.26909256]
[209.00616455 11.24334526]
[194.59320068 7.05925035]
[180.55822754 1.74326289]
[166.98999023 -4.67100811]
[159.52224731 8.33794403]
[152.15156555 21.40213013]
[144.87832642 34.52082443]
[137.60510254 47.63951874]
[138.20075989 62.52220917]
[124.74242401 70.83988190]
[117.46919250 83.95857239]
[110.19596100 97.07727051]
[103.51576996 110.50764465]
[97.44193268 124.22290802]
[91.36810303 137.93817139]
[85.29426575 151.65344238]
[79.22042847 165.36871338]
[74.18351746 179.49774170]
[70.21141815 193.96226501]
[66.23932648 208.42678833]
[62.26722717 222.89131165]
[58.29513168 237.35583496]
[72.41561127 242.43917847]
[86.09970093 248.60148621]
[99.26510620 255.80567932]
[111.83264923 264.00842285]
[123.72675323 273.16040039]
[134.87586975 283.20657349]
[145.21295166 294.08651733]
[154.67584229 305.73477173]
[163.20761108 318.08132935]
[170.75694275 331.05191040]
[177.27845764 344.56848145]
[182.73292542 358.54980469]
[187.08752441 372.91174316]
[190.31610107 387.56796265]
[192.39920044 402.43029785]
[193.32431030 417.40936279]
[193.08587646 432.41510010]
[191.68530273 447.35720825]
[189.13105774 462.14584351]
[185.43846130 476.69207764]
[180.62974548 490.90844727]
[174.73382568 504.70938110]
[167.78616333 518.01196289]
[159.82852173 530.73614502]
[150.90878296 542.80535889]
[141.08059692 554.14709473]
[130.40306091 564.69311523]
[118.94037628 574.38000488]
[106.76151276 583.14947510]
[93.93968964 590.94879150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[75 170]
[76 169]
[77 168]
[79 166]
[80 165]
[81 164]
[83 163]
[84 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
