%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[249.70001221 315.10922241]
[258.59417725 303.01385498]
[247.48693848 292.93270874]
[236.37969971 282.85156250]
[225.27247620 272.77041626]
[229.14384460 287.26223755]
[226.42916870 302.01455688]
[217.65260315 314.17889404]
[204.50874329 321.40658569]
[189.53550720 322.30203247]
[175.62394714 316.69232178]
[165.46018982 305.66064453]
[161.00669861 291.33700562]
[163.12336731 276.48709106]
[171.40150452 263.97821045]
[184.24272156 256.22558594]
[199.16760254 254.72616577]
[213.29542542 259.77011108]
[204.15663147 247.87548828]
[195.01782227 235.98085022]
[185.87902832 224.08622742]
[176.74021912 212.19158936]
[162.85060120 206.81315613]
[160.57827759 191.15597534]
[151.43948364 179.26133728]
[142.30067444 167.36671448]
[128.41105652 161.98826599]
[126.13874054 146.33110046]
[116.99993896 134.43646240]
[107.86113739 122.54183197]
[93.17191315 122.87594604]
[81.06910706 114.54485321]
[76.13715363 100.70430756]
[80.24423218 86.59696960]
[71.10543060 74.70233917]
[63.39548492 69.80390930]
[61.92068100 62.56189346]
[52.95998764 50.53251648]
[43.99929047 38.50313950]
[35.03859329 26.47376251]
[19.65091133 24.05364227]
[10.73485470 11.72649479]
[13.13689709 -2.92839479]
[-1.31203961 -9.37345409]
[-2.71006012 -24.20230484]
[-11.67075634 -36.23168182]
[-20.63145256 -48.26105881]
[-29.59214783 -60.29043579]
[-38.55284500 -72.31981659]
[-47.51353836 -84.34918976]
[-56.47423553 -96.37857056]
[-65.43492889 -108.40795135]
[-74.39562988 -120.43732452]
[-87.26792908 -112.71188354]
[-100.84548187 -106.30651093]
[-114.99333191 -101.28488159]
[-129.57089233 -97.69689178]
[-144.43324280 -95.57820892]
[-159.43270874 -94.94989014]
[-174.42019653 -95.81817627]
[-189.24674988 -98.17443848]
[-203.76499939 -101.99525452]
[-217.83068848 -107.24266052]
[-231.30398560 -113.86449432]
[-244.05101013 -121.79495239]
[-255.94505310 -130.95520020]
[-266.86791992 -141.25422668]
[-276.71102905 -152.58964539]
[-285.37658691 -164.84880066]
[-292.77841187 -177.90985107]
[-298.84301758 -191.64300537]
[-303.51007080 -205.91175842]
[-306.73318481 -220.57429504]
[-308.48037720 -235.48489380]
[-308.73422241 -250.49536133]
[-307.49224854 -265.45651245]
[-304.76678467 -280.21966553]
[-300.58486938 -294.63806152]
[-294.98815918 -308.56842041]
[-288.03219604 -321.87231445]
[-279.78613281 -334.41748047]
[-270.33193970 -346.07925415]
[-259.76358032 -356.74172974]
[-248.18609619 -366.29895020]
[-235.71453857 -374.65591431]
[-222.47285461 -381.72955322]
[-208.59265137 -387.44958496]
[-194.21189880 -391.75915527]
[-179.47349548 -394.61541748]
[-164.52394104 -395.98999023]
[-149.51182556 -395.86923218]
[-134.58631897 -394.25433350]
[-119.89577484 -391.16131592]
[-105.58620453 -386.62097168]
[-91.79981995 -380.67837524]
[-78.67365265 -373.39263916]
[-66.33814240 -364.83612061]
[-54.91589737 -355.09390259]
[-44.52043915 -344.26278687]
[-35.25508499 -332.45043945]
[-27.21192360 -319.77423096]
[-20.47088814 -306.36016846]
[-15.09897709 -292.34155273]
[-11.14958286 -277.85775757]
[-8.66195583 -263.05267334]
[-7.66082001 -248.07347107]
[-8.15612507 -233.06903076]
[-10.14294910 -218.18846130]
[-13.60154533 -203.57968140]
[-18.49753952 -189.38784790]
[-24.78227043 -175.75404358]
[-32.39328003 -162.81375122]
[-41.25492096 -150.69558716]
[-51.27911758 -139.51998901]
[-62.36624908 -129.39802551]
[-53.40555573 -117.36864471]
[-44.44485855 -105.33926392]
[-35.48416138 -93.30989075]
[-26.52346611 -81.28050995]
[-17.56277084 -69.25113678]
[-8.60207462 -57.22175598]
[0.35862163 -45.19237900]
[9.31931782 -33.16300201]
[23.12732506 -27.57836342]
[25.16627502 -11.88909054]
[39.89546585 -9.99527454]
[49.15424728 2.07657623]
[47.06797409 17.51306534]
[56.02866745 29.54244423]
[64.98936462 41.57181931]
[73.95005798 53.60120010]
[83.00006104 65.56353760]
[92.13886261 77.45816803]
[106.82808685 77.12405396]
[118.93089294 85.45514679]
[123.86284637 99.29569244]
[119.75576782 113.40303040]
[128.89457703 125.29766083]
[138.03337097 137.19229126]
[152.57667542 143.42152405]
[154.19531250 158.22790527]
[163.33412170 170.12254333]
[172.47291565 182.01718140]
[187.01620483 188.24639893]
[188.63485718 203.05279541]
[197.77365112 214.94741821]
[206.91246033 226.84205627]
[216.05126953 238.73669434]
[225.19006348 250.63131714]
[235.35360718 261.66320801]
[246.46084595 271.74432373]
[257.56808472 281.82546997]
[268.67532349 291.90661621]
[279.85464478 281.88531494]
[292.00515747 273.06661987]
[304.99801636 265.54400635]
[318.69549561 259.39724731]
[332.95242310 254.69145203]
[347.61761475 251.47654724]
[362.53567505 249.78659058]
[377.54840088 249.63949585]
[392.49670410 251.03683472]
[407.22210693 253.96379089]
[421.56848145 258.38931274]
[435.38375854 264.26654053]
[448.52154541 271.53311157]
[460.84249878 280.11206055]
[472.21603394 289.91238403]
[482.52160645 300.83023071]
[491.64996338 312.74984741]
[499.50430298 325.54489136]
[506.00143433 339.07971191]
[511.07241821 353.21084595]
[514.66351318 367.78848267]
[516.73669434 382.65814209]
[517.26995850 397.66210938]
[516.25762939 412.64141846]
[513.71044922 427.43722534]
[509.65545654 441.89270020]
[504.13558960 455.85461426]
[497.20938110 469.17495728]
[488.95022583 481.71252441]
[479.44573975 493.33444214]
[468.79663086 503.91744995]
[457.11578369 513.34942627]
[444.52703857 521.53033447]
[431.16381836 528.37347412]
[417.16781616 533.80633545]
[402.68737793 537.77124023]
[387.87597656 540.22625732]
[372.89068604 541.14532471]
[357.89028931 540.51867676]
[343.03387451 538.35296631]
[328.47885132 534.67120361]
[314.37954712 529.51232910]
[300.88543701 522.93103027]
[288.13955688 514.99719238]
[276.27697754 505.79483032]
[265.42352295 495.42147827]
[255.69418335 483.98715210]
[247.19212341 471.61300659]
[240.00747681 458.43026733]
[234.21638489 444.57864380]
[229.88024902 430.20498657]
[227.04502869 415.46166992]
[225.74076843 400.50497437]
[225.98132324 385.49343872]
[227.76412964 370.58618164]
[231.07028198 355.94128418]
[235.86473083 341.71395874]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[4 151]
[5 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[24 143]
[25 142]
[26 141]
[28 139]
[29 138]
[30 137]
[34 133]
[35 132]
[37 131]
[38 130]
[39 129]
[40 128]
[43 125]
[45 123]
[46 122]
[47 121]
[48 120]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
