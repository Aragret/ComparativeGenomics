%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[26.62899208 167.95045471]
[28.72905540 182.80986023]
[29.71279335 197.78465271]
[29.57470894 212.79109192]
[28.31557083 227.74523926]
[25.94242096 242.56349182]
[22.46853256 257.16296387]
[17.91333199 271.46197510]
[12.30229664 285.38061523]
[5.66680241 298.84103394]
[-1.95603967 311.76791382]
[-10.52359962 324.08898926]
[-19.98796463 335.73538208]
[-30.29620361 346.64190674]
[-41.39066696 356.74758911]
[-53.20931625 365.99594116]
[-65.68604279 374.33520508]
[-78.75109100 381.71875000]
[-92.33137512 388.10531616]
[-106.35095978 393.45913696]
[-120.73143005 397.75030518]
[-135.39237976 400.95483398]
[-150.25180054 403.05474854]
[-165.22660828 404.03836060]
[-180.23304749 403.90014648]
[-195.18717957 402.64086914]
[-210.00540161 400.26760864]
[-224.60484314 396.79357910]
[-238.90383911 392.23825073]
[-252.82241821 386.62710571]
[-266.28277588 379.99148560]
[-279.20959473 372.36853027]
[-291.53060913 363.80087280]
[-303.17687988 354.33639526]
[-314.08334351 344.02807617]
[-324.18893433 332.93350220]
[-333.43716431 321.11477661]
[-341.77630615 308.63796997]
[-349.15975952 295.57287598]
[-355.54620361 281.99252319]
[-360.89990234 267.97290039]
[-365.19094849 253.59237671]
[-368.39532471 238.93141174]
[-370.49511719 224.07196045]
[-371.47860718 209.09715271]
[-371.34024048 194.09071350]
[-370.08084106 179.13658142]
[-367.70742798 164.31838989]
[-364.23330688 149.71897888]
[-359.67785645 135.42002869]
[-354.06655884 121.50148773]
[-347.43081665 108.04120636]
[-339.80776978 95.11444855]
[-331.23999023 82.79351044]
[-321.77542114 71.14730835]
[-311.46697998 60.24095917]
[-300.37234497 50.13545990]
[-288.55352783 40.88732529]
[-276.07666016 32.54827881]
[-263.01147461 25.16495323]
[-249.43107605 18.77864075]
[-235.41140747 13.42505550]
[-221.03085327 9.13413811]
[-206.36985779 5.92988443]
[-191.51039124 3.83021522]
[-176.53556824 2.84687209]
[-161.52912903 2.98535490]
[-146.57501221 4.24488878]
[-131.75683594 6.61842966]
[-117.15746307 10.09270382]
[-102.85854340 14.64828205]
[-88.94005585 20.25968742]
[-75.47982788 26.89553642]
[-62.55314255 34.51872253]
[-50.23228455 43.08660507]
[-38.58615875 52.55127716]
[-27.67990112 62.85980606]
[-17.57450104 73.95453644]
[-8.32647324 85.77342987]
[0.01246396 98.25038147]
[7.39567423 111.31562042]
[13.78186798 124.89607239]
[27.79488945 119.54489136]
[41.80791473 114.19370270]
[55.82093430 108.84251404]
[69.83396149 103.49133301]
[83.84698486 98.14014435]
[94.08648682 84.85372925]
[110.61968994 87.68735504]
[124.55149078 82.12812805]
[138.48329163 76.56890106]
[148.43315125 64.26805115]
[163.12162781 66.73743439]
[177.05342102 61.17820740]
[190.98521423 55.61898422]
[204.91702271 50.05975723]
[218.84881592 44.50053024]
[214.19186401 30.23629379]
[210.45838928 15.70299244]
[207.66374207 0.96034634]
[205.81941223 -13.93106365]
[204.93296814 -28.91004562]
[205.00804138 -43.91504669]
[206.04435730 -58.88440323]
[208.03762817 -73.75661469]
[210.97967529 -88.47055054]
[214.85839844 -102.96575928]
[219.65788269 -117.18267822]
[225.35836792 -131.06288147]
[231.93646240 -144.54933167]
[239.36512756 -157.58660889]
[247.61383057 -170.12113953]
[256.64868164 -182.10142517]
[266.43255615 -193.47822571]
[276.92523193 -204.20478821]
[288.08361816 -214.23704529]
[299.86184692 -223.53378296]
[312.21151733 -232.05676270]
[325.08187866 -239.77099609]
[338.42007446 -246.64476013]
[352.17123413 -252.64981079]
[366.27890015 -257.76150513]
[380.68511963 -261.95877075]
[395.33062744 -265.22442627]
[410.15527344 -267.54504395]
[425.09817505 -268.91104126]
[440.09786987 -269.31686401]
[455.09274292 -268.76080322]
[470.02117920 -267.24514771]
[484.82183838 -264.77612305]
[499.43392944 -261.36392212]
[513.79736328 -257.02249146]
[527.85308838 -251.76972961]
[541.54339600 -245.62719727]
[554.81207275 -238.62014771]
[567.60449219 -230.77735901]
[579.86816406 -222.13107300]
[591.55267334 -212.71681213]
[602.60992432 -202.57327271]
[612.99462891 -191.74211121]
[622.66406250 -180.26786804]
[631.57843018 -168.19766235]
[639.70111084 -155.58111572]
[646.99877930 -142.47006226]
[653.44146729 -128.91839600]
[659.00256348 -114.98177338]
[663.65936279 -100.71748352]
[667.39270020 -86.18414307]
[670.18719482 -71.44146729]
[672.03137207 -56.55003357]
[672.91760254 -41.57104111]
[672.84234619 -26.56604385]
[671.80590820 -11.59669495]
[669.81243896 3.27548981]
[666.87023926 17.98939705]
[662.99139404 32.48456573]
[658.19171143 46.70142746]
[652.49108887 60.58156586]
[645.91284180 74.06793976]
[638.48400879 87.10514069]
[630.23516846 99.63957977]
[621.20019531 111.61976624]
[611.41619873 122.99645233]
[600.92340088 133.72291565]
[589.76489258 143.75503540]
[577.98657227 153.05163574]
[565.63684082 161.57447815]
[552.76635742 169.28857422]
[539.42810059 176.16218567]
[525.67687988 182.16709900]
[511.56915283 187.27861023]
[497.16290283 191.47573853]
[482.51733398 194.74124146]
[467.69265747 197.06167603]
[452.74975586 198.42752075]
[437.75006104 198.83316040]
[422.75518799 198.27693176]
[407.82675171 196.76110840]
[393.02612305 194.29193115]
[378.41409302 190.87954712]
[364.05072021 186.53797913]
[349.99502563 181.28506470]
[336.30477905 175.14237976]
[323.03619385 168.13517761]
[310.24386597 160.29225159]
[297.98028564 151.64582825]
[286.29589844 142.23144531]
[275.23870850 132.08776855]
[264.85412598 121.25650024]
[255.18487549 109.78214264]
[246.27062988 97.71184540]
[238.14807129 85.09520721]
[230.85054016 71.98407745]
[224.40803528 58.43233109]
[210.47624207 63.99155426]
[196.54444885 69.55078125]
[182.61264038 75.11000824]
[168.68084717 80.66923523]
[159.72749329 92.57244873]
[144.04251099 90.50070190]
[130.11071777 96.05992889]
[116.17891693 101.61915588]
[110.94573212 112.02372742]
[100.09677887 116.25945282]
[89.19816589 112.15316772]
[75.18514252 117.50435638]
[61.17212296 122.85553741]
[47.15909958 128.20672607]
[33.14607620 133.55790710]
[19.13305283 138.90910339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 210]
[83 209]
[84 208]
[85 207]
[86 206]
[87 205]
[89 202]
[90 201]
[91 200]
[93 198]
[94 197]
[95 196]
[96 195]
[97 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
