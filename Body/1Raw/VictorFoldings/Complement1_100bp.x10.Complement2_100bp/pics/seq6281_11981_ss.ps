%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[299.65631104 235.18908691]
[290.86544800 247.34011841]
[281.33615112 258.92111206]
[271.10534668 269.88729858]
[260.21252441 280.19619751]
[248.69990540 289.80798340]
[236.61198425 298.68542480]
[223.99554443 306.79418945]
[210.89939880 314.10290527]
[197.37419128 320.58331299]
[183.47227478 326.21032715]
[169.24740601 330.96215820]
[154.75463867 334.82046509]
[140.05004883 337.77032471]
[125.19050598 339.80026245]
[110.23350525 340.90246582]
[95.23691559 341.07269287]
[80.25875092 340.31024170]
[65.35696411 338.61807251]
[50.58919907 336.00274658]
[36.01259613 332.47439575]
[21.68354797 328.04663086]
[7.65749073 322.73660278]
[-6.01131344 316.56484985]
[-19.26998138 309.55523682]
[-32.06721878 301.73492432]
[-44.35351562 293.13412476]
[-56.08133698 283.78613281]
[-67.20531464 273.72711182]
[-77.68240356 262.99597168]
[-87.47208405 251.63424683]
[-96.53646851 239.68588257]
[-104.84049225 227.19708252]
[-112.35203552 214.21620178]
[-119.04203033 200.79344177]
[-124.88459778 186.98071289]
[-129.85713196 172.83149719]
[-133.94039917 158.40049744]
[-137.11859131 143.74356079]
[-139.37944031 128.91738892]
[-140.71415710 113.97933960]
[-141.11761475 98.98721313]
[-140.58822632 83.99900055]
[-139.12806702 69.07269287]
[-136.74275208 54.26603699]
[-133.44154358 39.63631821]
[-129.23719788 25.24013329]
[-124.14597321 11.13317776]
[-118.18757629 -2.62996960]
[-111.38505554 -15.99606323]
[-103.76473236 -28.91339111]
[-95.35608673 -41.33198166]
[-86.19164276 -53.20378494]
[-76.30686951 -64.48287964]
[-65.73999786 -75.12561798]
[-54.53190994 -85.09083557]
[-42.72597122 -94.33997345]
[-30.36785698 -102.83724976]
[-17.50537682 -110.54978943]
[-4.18829060 -117.44776154]
[9.53187752 -123.50447083]
[23.60204887 -128.69648743]
[37.96778488 -133.00372314]
[52.57351303 -136.40951538]
[67.36272430 -138.90068054]
[82.27820587 -140.46760559]
[97.26224518 -141.10420227]
[112.25687408 -140.80801392]
[127.20408630 -139.58018494]
[142.04605103 -137.42547607]
[156.72535706 -134.35221863]
[171.18519592 -130.37229919]
[185.36962891 -125.50112152]
[199.22380066 -119.75752258]
[212.69407654 -113.16372681]
[225.72837830 -105.74523926]
[238.27624512 -97.53077698]
[250.28916931 -88.55210114]
[261.72064209 -78.84395599]
[272.52645874 -68.44390106]
[282.66479492 -57.39217758]
[292.09646606 -45.73153305]
[304.32293701 -54.42135620]
[316.54943848 -63.11117935]
[328.77590942 -71.80100250]
[341.00241089 -80.49082947]
[353.22888184 -89.18065643]
[365.45538330 -97.87047577]
[377.68185425 -106.56030273]
[389.90835571 -115.25012970]
[402.13482666 -123.93994904]
[414.36132812 -132.62977600]
[406.52285767 -145.42568970]
[399.57592773 -158.72669983]
[393.55285645 -172.47076416]
[388.48178101 -186.59382629]
[384.38632202 -201.03002930]
[381.28558350 -215.71206665]
[379.19400024 -230.57147217]
[378.12133789 -245.53898621]
[378.07260132 -260.54479980]
[379.04803467 -275.51895142]
[381.04306030 -290.39163208]
[384.04837036 -305.09350586]
[388.04998779 -319.55599976]
[393.02923584 -333.71170044]
[398.96289062 -347.49459839]
[405.82330322 -360.84045410]
[413.57846069 -373.68701172]
[422.19223022 -385.97436523]
[431.62445068 -397.64526367]
[441.83114624 -408.64529419]
[452.76470947 -418.92312622]
[464.37417603 -428.43087769]
[476.60540771 -437.12420654]
[489.40136719 -444.96255493]
[502.70242310 -451.90942383]
[516.44653320 -457.93237305]
[530.56964111 -463.00335693]
[545.00585938 -467.09872437]
[559.68792725 -470.19937134]
[574.54736328 -472.29086304]
[589.51483154 -473.36340332]
[604.52062988 -473.41204834]
[619.49481201 -472.43652344]
[634.36749268 -470.44140625]
[649.06933594 -467.43597412]
[663.53179932 -463.43426514]
[677.68743896 -458.45492554]
[691.47033691 -452.52117920]
[704.81610107 -445.66067505]
[717.66259766 -437.90542603]
[729.94995117 -429.29156494]
[741.62078857 -419.85928345]
[752.62072754 -409.65252686]
[762.89849854 -398.71887207]
[772.40618896 -387.10937500]
[781.09942627 -374.87808228]
[788.93768311 -362.08206177]
[795.88446045 -348.78094482]
[801.90728760 -335.03680420]
[806.97821045 -320.91366577]
[811.07348633 -306.47741699]
[814.17401123 -291.79534912]
[816.26538086 -276.93591309]
[817.33782959 -261.96838379]
[817.38635254 -246.96257019]
[816.41076660 -231.98843384]
[814.41552734 -217.11578369]
[811.41003418 -202.41395569]
[807.40820312 -187.95150757]
[802.42877197 -173.79586792]
[796.49493408 -160.01304626]
[789.63433838 -146.66729736]
[781.87902832 -133.82084656]
[773.26507568 -121.53358459]
[763.83270264 -109.86280823]
[753.62585449 -98.86293030]
[742.69213867 -88.58523560]
[731.08258057 -79.07764435]
[718.85125732 -70.38449097]
[706.05517578 -62.54629898]
[692.75402832 -55.59962463]
[679.00982666 -49.57684708]
[664.88665771 -44.50605011]
[650.45037842 -40.41088104]
[635.76824951 -37.31042862]
[620.90881348 -35.21914673]
[605.94128418 -34.14679337]
[590.93548584 -34.09836197]
[575.96136475 -35.07408142]
[561.08868408 -37.06940460]
[546.38690186 -40.07502365]
[531.92449951 -44.07692337]
[517.76892090 -49.05644989]
[503.98611450 -54.99038696]
[490.64041138 -61.85106277]
[477.79400635 -69.60649109]
[465.50680542 -78.22051239]
[453.83609009 -87.65296936]
[442.83627319 -97.85987091]
[432.55865479 -108.79364014]
[423.05114746 -120.40328979]
[410.82464600 -111.71346283]
[398.59817505 -103.02364349]
[386.37167358 -94.33381653]
[374.14520264 -85.64398956]
[361.91870117 -76.95417023]
[349.69223022 -68.26434326]
[337.46572876 -59.57452011]
[325.23925781 -50.88469315]
[313.01275635 -42.19487000]
[300.78628540 -33.50504684]
[308.69781494 -20.76400375]
[315.80197144 -7.55575132]
[322.07119751 6.06861258]
[327.48132324 20.05637741]
[332.01132202 34.35342789]
[335.64373779 48.90445328]
[338.36450195 63.65315247]
[340.16308594 78.54247284]
[341.03250122 93.51480865]
[340.96945190 108.51222992]
[339.97412109 123.47672272]
[338.05035400 138.35038757]
[335.20565796 153.07568359]
[331.45098877 167.59564209]
[326.80087280 181.85408020]
[321.27331543 195.79585266]
[314.88970947 209.36700439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 193]
[83 192]
[84 191]
[85 190]
[86 189]
[87 188]
[88 187]
[89 186]
[90 185]
[91 184]
[92 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
