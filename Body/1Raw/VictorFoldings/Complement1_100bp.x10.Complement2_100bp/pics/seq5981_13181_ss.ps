%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[123.50250244 601.04339600]
[136.14964294 592.42315674]
[134.36717224 577.52941895]
[132.58470154 562.63568115]
[130.80224609 547.74200439]
[129.01977539 532.84826660]
[127.23730469 517.95452881]
[125.45484161 503.06085205]
[123.67237854 488.16711426]
[121.88990784 473.27340698]
[109.80777740 469.58013916]
[99.98371887 461.56210327]
[93.89952087 450.38308716]
[92.49007416 437.68692017]
[95.99987030 425.35580444]
[103.94150543 415.23129272]
[115.16297913 408.83926392]
[113.82474518 393.89907837]
[112.48651123 378.95889282]
[103.64459229 366.97268677]
[110.11985016 352.53723145]
[108.78161621 337.59704590]
[107.44338226 322.65686035]
[99.21299744 335.19723511]
[85.55296326 341.39428711]
[70.69598389 339.32778931]
[59.24567032 329.63809204]
[54.75001907 315.32763672]
[58.60205460 300.83068848]
[69.60818481 290.63928223]
[84.35803986 287.91131592]
[98.28121185 293.49209595]
[107.06355286 305.65258789]
[99.90227509 292.59252930]
[108.24806213 279.15161133]
[108.91784668 264.16656494]
[109.58763885 249.18153381]
[99.37812805 238.39721680]
[99.84391785 223.19071960]
[111.22472382 212.55516052]
[108.38302612 205.73265076]
[112.01767731 197.35249329]
[112.91049194 182.37908936]
[113.80330658 167.40568542]
[111.57819366 152.57164001]
[106.33147430 138.51916504]
[101.08475494 124.46669769]
[95.83803558 110.41422272]
[89.69139099 124.09701538]
[76.24288940 130.74064636]
[61.64100266 127.30772400]
[52.56151581 115.36775208]
[53.15545273 100.37951660]
[63.15127182 89.19543457]
[77.97901917 86.92871857]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[83.34822083 65.57299805]
[79.59191895 51.05094147]
[68.64530945 39.62805557]
[72.94891357 25.36873436]
[69.19261169 10.84667587]
[58.24600601 -0.57621086]
[62.54961014 -14.83553219]
[58.79330826 -29.35759163]
[49.04756927 -17.95493698]
[34.05182648 -18.31234741]
[24.86038780 -30.16635132]
[28.24883652 -44.77862167]
[41.71933746 -51.37753296]
[55.34087753 -45.09988403]
[52.67508316 -59.86110306]
[50.00928497 -74.62232208]
[47.34349060 -89.38353729]
[37.27679825 -101.58895111]
[42.62903976 -115.48869324]
[39.96324539 -130.24990845]
[29.89655113 -142.45532227]
[35.24879456 -156.35507202]
[29.12712288 -142.66108704]
[17.40006638 -133.30821228]
[2.68748093 -130.38592529]
[-11.72380352 -134.54702759]
[-22.61426926 -144.86196899]
[-27.55095863 -159.02632141]
[-25.43100357 -173.87576294]
[-16.72800446 -186.09288025]
[-3.38623786 -192.94833374]
[11.61371517 -192.91059875]
[24.92082405 -185.98811340]
[33.56225586 -173.72734070]
[33.33892822 -188.72567749]
[25.39702225 -202.40913391]
[32.94397736 -215.25018311]
[32.72064590 -230.24851990]
[24.77874184 -243.93197632]
[32.32569504 -256.77304077]
[18.08262825 -262.01702881]
[6.69830227 -272.05502319]
[-0.28764719 -285.52947998]
[-1.93042815 -300.61807251]
[1.99213219 -315.28021240]
[10.94953918 -327.53292847]
[23.73037910 -335.71917725]
[38.60614395 -338.73181152]
[53.56501389 -336.16342163]
[66.58392334 -328.36132812]
[75.90216827 -316.38073730]
[80.25953674 -301.84191895]
[79.06672668 -286.71109009]
[72.48506165 -273.03460693]
[61.40464783 -262.66210938]
[47.32403183 -256.99636841]
[55.24996567 -244.38569641]
[47.71898651 -230.47184753]
[47.94231415 -215.47351074]
[55.86824417 -202.86285400]
[48.33726883 -188.94900513]
[48.56059647 -173.95066833]
[50.01001358 -159.02085876]
[59.88603210 -147.87126160]
[54.72446442 -132.91571045]
[57.39025879 -118.15448761]
[67.26627350 -107.00489044]
[62.10470963 -92.04933167]
[64.77050018 -77.28811646]
[67.43630219 -62.52689743]
[70.10209656 -47.76567841]
[73.31536865 -33.11389160]
[77.07167053 -18.59183311]
[87.74960327 -8.20766163]
[83.71467590 7.09037495]
[87.47097015 21.61243439]
[98.14890289 31.99660492]
[94.11397552 47.29464340]
[97.87027740 61.81669998]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.89051056 105.16750336]
[115.13722229 119.21997833]
[120.38394165 133.27244568]
[125.63066101 147.32492065]
[127.13848114 132.40089417]
[131.67524719 118.10342407]
[139.04806519 105.04044342]
[148.94343567 93.76738739]
[160.94059753 84.76360321]
[174.52943420 78.41193390]
[189.13212585 74.98245239]
[204.12776184 74.62097931]
[218.87873840 77.34289551]
[232.75781250 83.03245544]
[245.17486572 91.44773865]
[255.60189819 102.23092651]
[263.59555054 114.92350006]
[268.81591797 128.98577881]
[271.04107666 143.81982422]
[270.17633057 158.79487610]
[266.25851440 173.27420044]
[259.45419312 186.64212036]
[250.05270386 198.33021545]
[238.45378113 207.84152222]
[225.15063477 214.77162170]
[210.70890808 218.82580566]
[195.74267578 219.83172607]
[180.88830566 217.74659729]
[166.77742004 212.65905762]
[154.01002502 204.78547668]
[143.12898254 194.46060181]
[134.59696960 182.12347412]
[128.77671814 168.29849243]
[127.88389587 183.27189636]
[126.99108124 198.24531555]
[126.20976257 213.22494507]
[136.59632874 224.83343506]
[135.70359802 240.02085876]
[124.57267761 249.85131836]
[123.90288544 264.83636475]
[123.23310089 279.82138062]
[130.34648132 293.95327759]
[122.04859161 306.32238770]
[122.38356781 321.31863403]
[123.72180176 336.25881958]
[125.06003571 351.19900513]
[133.99766541 364.25387573]
[127.42669678 377.62066650]
[128.76493835 392.56085205]
[130.10316467 407.50103760]
[146.21447754 414.51950073]
[156.49951172 428.65911865]
[158.19779968 445.97152710]
[150.93125916 461.67855835]
[136.78363037 471.49093628]
[138.56608582 486.38464355]
[140.34855652 501.27838135]
[142.13102722 516.17211914]
[143.91348267 531.06579590]
[145.69595337 545.95953369]
[147.47842407 560.85321045]
[149.26089478 575.74694824]
[151.04335022 590.64068604]
[165.36750793 596.03302002]
[175.53630066 607.47216797]
[179.21302795 622.32952881]
[175.55279541 637.19091797]
[165.39669800 648.64135742]
[151.07855225 654.04956055]
[135.88853455 652.17285156]
[123.31722260 643.44238281]
[116.25339508 629.86444092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[17 188]
[18 187]
[19 186]
[21 184]
[22 183]
[23 182]
[33 181]
[35 179]
[36 178]
[37 177]
[40 174]
[42 173]
[43 172]
[44 171]
[45 142]
[46 141]
[47 140]
[48 139]
[56 138]
[57 137]
[58 136]
[59 135]
[61 133]
[62 132]
[64 130]
[65 129]
[71 128]
[72 127]
[73 126]
[74 125]
[76 123]
[77 122]
[79 120]
[91 119]
[92 118]
[94 116]
[95 115]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
