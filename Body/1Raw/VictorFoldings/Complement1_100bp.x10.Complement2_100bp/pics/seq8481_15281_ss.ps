%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[34.18944931 529.54370117]
[25.65410233 541.88873291]
[16.14090919 553.49700928]
[5.71318388 564.29125977]
[-5.55967999 574.19958496]
[-17.60266113 583.15612793]
[-30.33561707 591.10119629]
[-43.67380905 597.98199463]
[-57.52846909 603.75274658]
[-71.80740356 608.37493896]
[-86.41557312 611.81793213]
[-101.25577545 614.05871582]
[-116.22924805 615.08245850]
[-131.23634338 614.88226318]
[-146.17716980 613.45953369]
[-160.95233154 610.82373047]
[-175.46347046 606.99237061]
[-189.61404419 601.99090576]
[-203.30986023 595.85272217]
[-216.45977783 588.61859131]
[-228.97628784 580.33673096]
[-240.77609253 571.06213379]
[-251.78067017 560.85668945]
[-261.91677856 549.78814697]
[-271.11697388 537.93023682]
[-279.32000732 525.36193848]
[-286.47131348 512.16680908]
[-292.52328491 498.43267822]
[-297.43566895 484.25094604]
[-301.17572021 469.71600342]
[-303.71859741 454.92456055]
[-305.04739380 439.97506714]
[-305.15319824 424.96701050]
[-304.03536987 410.00027466]
[-301.70132446 395.17446899]
[-298.16659546 380.58822632]
[-293.45468140 366.33862305]
[-287.59698486 352.52050781]
[-280.63247681 339.22583008]
[-272.60748291 326.54309082]
[-263.57540894 314.55664062]
[-253.59640503 303.34631348]
[-242.73683167 292.98663330]
[-231.06898499 283.54663086]
[-218.67050171 275.08905029]
[-205.62390137 267.67022705]
[-192.01600647 261.33950806]
[-177.93737793 256.13903809]
[-163.48168945 252.10340881]
[-148.74517822 249.25949097]
[-133.82588196 247.62622070]
[-118.82311249 247.21444702]
[-103.83669281 248.02691650]
[-88.96636963 250.05822754]
[-74.31109619 253.29484558]
[-59.96840668 257.71527100]
[-46.03374481 263.29003906]
[-32.59985352 269.98205566]
[-19.75612640 277.74682617]
[-10.97552299 265.58535767]
[-2.19491959 253.42390442]
[6.58568382 241.26245117]
[14.81449127 228.72105408]
[22.47508812 215.82472229]
[30.13568687 202.92840576]
[37.79628372 190.03207397]
[45.45688248 177.13574219]
[53.11747742 164.23941040]
[60.77807617 151.34309387]
[68.43867493 138.44676208]
[68.28639221 123.55294037]
[81.98641205 115.63965607]
[89.64701080 102.74333191]
[95.51596832 88.93915558]
[99.48806763 74.47463226]
[103.46015930 60.01010513]
[107.43225861 45.54558182]
[95.99584198 55.25168610]
[81.37921143 58.62124634]
[66.84774017 54.90149689]
[55.64781570 44.92343903]
[50.28152084 30.91619682]
[51.94769669 16.00902176]
[60.27412415 3.53221703]
[73.40065002 -3.72686815]
[88.39477539 -4.14653587]
[101.90677643 2.36696959]
[110.91804504 14.35851383]
[113.41542816 29.14917755]
[119.69278717 15.52586079]
[125.97014618 1.90254498]
[132.24751282 -11.72077084]
[130.99557495 -27.49236679]
[143.34899902 -35.81355667]
[149.62635803 -49.43687057]
[155.90371704 -63.06018829]
[162.18107605 -76.68350220]
[149.49600220 -84.73162842]
[137.99687195 -94.39875031]
[127.88887787 -105.51234436]
[119.35242462 -117.87408447]
[112.53986359 -131.26335144]
[107.57275391 -145.44119263]
[104.53974915 -160.15460205]
[103.49497986 -175.14099121]
[104.45708466 -190.13290405]
[107.40889740 -204.86282349]
[112.29774475 -219.06784058]
[119.03636932 -232.49447632]
[127.50450897 -244.90309143]
[137.55105591 -256.07226562]
[148.99670410 -265.80264282]
[161.63720703 -273.92062378]
[175.24696350 -280.28128052]
[189.58309937 -284.77111816]
[204.38977051 -287.30999756]
[219.40272522 -287.85263062]
[234.35404968 -286.38934326]
[248.97692871 -282.94622803]
[263.01037598 -277.58471680]
[276.20397949 -270.40054321]
[288.32223511 -261.52185059]
[299.14892578 -251.10713196]
[308.49081421 -239.34225464]
[316.18118286 -226.43714905]
[322.08282471 -212.62214661]
[326.09036255 -198.14378357]
[328.13229370 -183.26043701]
[328.17221069 -168.23773193]
[326.20935059 -153.34375000]
[322.27877808 -138.84429932]
[316.45062256 -124.99814606]
[308.82891846 -112.05237579]
[299.54965210 -100.23803711]
[288.77841187 -89.76595306]
[276.70748901 -80.82302856]
[263.55224609 -73.56885529]
[249.54747009 -68.13288116]
[234.94309998 -64.61213684]
[219.99975586 -63.06943512]
[204.98413086 -63.53231812]
[190.16418457 -65.99252319]
[175.80439758 -70.40614319]
[169.52703857 -56.78282547]
[163.24967957 -43.15951157]
[156.97232056 -29.53619385]
[158.67324829 -14.73902988]
[145.87081909 -5.44341040]
[139.59346008 8.17990589]
[133.31610107 21.80322266]
[127.03874207 35.42653656]
[121.89678192 49.51767731]
[117.92468262 63.98220444]
[113.95259094 78.44672394]
[109.98049164 92.91124725]
[120.24746704 81.97556305]
[133.36083984 74.69275665]
[148.07075500 71.75698090]
[162.97511292 73.44805908]
[176.65336609 79.60479736]
[187.80177307 89.64038849]
[195.35774231 102.59829712]
[198.60107422 117.24346161]
[197.22265625 132.17999268]
[191.35385132 145.98423767]
[181.55406189 157.34046936]
[168.75730896 165.16627502]
[154.18331909 168.71574402]
[139.22119141 167.65058899]
[125.29700470 162.07231140]
[113.73793793 152.51260376]
[105.64572906 139.88262939]
[101.79167175 125.38620758]
[102.54333496 110.40393066]
[94.88273621 123.30025482]
[94.48708344 139.11651611]
[81.33499908 146.10736084]
[73.67440033 159.00369263]
[66.01380920 171.90000916]
[58.35320663 184.79634094]
[50.69261169 197.69267273]
[43.03201294 210.58898926]
[35.37141418 223.48532104]
[27.71081924 236.38165283]
[42.47614288 233.73869324]
[54.86393356 242.19699097]
[57.77790070 256.91122437]
[49.54879379 269.45242310]
[34.89061356 272.63641357]
[22.20023918 264.63928223]
[18.74713898 250.04306030]
[9.96653652 262.20449829]
[1.18593311 274.36596680]
[-7.59467030 286.52743530]
[3.81724167 296.27529907]
[14.39663315 306.92092896]
[24.07309723 318.39343262]
[32.78224182 330.61651611]
[40.46610260 343.50881958]
[47.07354736 356.98449707]
[52.56060410 370.95394897]
[56.89075851 385.32412720]
[60.03518677 399.99948120]
[61.97296906 414.88226318]
[62.69121170 429.87350464]
[62.18512726 444.87338257]
[60.45808792 459.78210449]
[57.52159119 474.50045776]
[53.39516830 488.93048096]
[48.10629272 502.97613525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 194]
[60 193]
[61 192]
[62 191]
[63 184]
[64 183]
[65 182]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[72 175]
[73 174]
[74 155]
[75 154]
[76 153]
[77 152]
[89 151]
[90 150]
[91 149]
[92 148]
[94 146]
[95 145]
[96 144]
[97 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
