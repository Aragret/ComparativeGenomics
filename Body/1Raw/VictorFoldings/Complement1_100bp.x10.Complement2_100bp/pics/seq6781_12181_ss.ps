%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[165.84622192 668.01934814]
[156.37084961 656.36798096]
[148.34004211 643.67773438]
[141.86656189 630.12670898]
[137.04129028 615.90515137]
[133.93194580 601.21270752]
[132.58218384 586.25561523]
[133.01097107 571.24383545]
[135.21226501 556.38818359]
[139.15518188 541.89715576]
[144.78434753 527.97418213]
[152.02076721 514.81475830]
[160.76281738 502.60360718]
[170.88780212 491.51211548]
[182.25357056 481.69601440]
[194.70056152 473.29312134]
[208.05406189 466.42138672]
[222.12657166 461.17727661]
[218.58689880 446.60092163]
[215.04722595 432.02453613]
[211.50755310 417.44815063]
[207.96788025 402.87179565]
[204.42820740 388.29541016]
[200.88853455 373.71902466]
[197.34886169 359.14266968]
[186.82672119 348.60064697]
[191.08897400 333.36437988]
[187.54930115 318.78802490]
[184.00962830 304.21163940]
[180.46995544 289.63525391]
[176.93028259 275.05889893]
[173.39060974 260.48251343]
[169.85093689 245.90614319]
[164.18814087 232.01611328]
[156.52754211 219.11978149]
[148.86695862 206.22346497]
[141.20635986 193.32713318]
[137.89813232 192.10728455]
[135.01640320 189.22445679]
[133.33633423 184.89656067]
[133.50646973 179.67945862]
[126.42935944 166.45393372]
[113.60254669 158.88278198]
[113.91352081 143.06463623]
[107.98606873 138.65022278]
[106.83116913 129.58909607]
[99.95175934 116.25966644]
[89.09020233 112.05634308]
[83.82598877 101.66744232]
[86.85994720 90.42304993]
[80.17974854 76.99267578]
[73.49955750 63.56229782]
[66.81935883 50.13191986]
[66.32430267 65.12374878]
[61.04983902 79.16583252]
[51.55258942 90.77626801]
[38.83482361 98.72978210]
[24.23867989 102.18702698]
[9.30451965 100.78314972]
[-4.39161634 94.66629791]
[-15.40434265 84.48200226]
[-22.57146072 71.30503845]
[-25.13660812 56.52600098]
[-22.82907677 41.70455170]
[-15.89238739 28.40484047]
[-5.05858469 18.03041458]
[8.52901363 11.67611122]
[23.43647766 10.01251698]
[38.09058380 13.21519375]
[50.94485474 20.94615555]
[60.64284134 32.38970184]
[57.53873062 17.71439934]
[47.11309814 5.81411457]
[52.04912186 -8.23881817]
[48.94501114 -22.91412163]
[45.84090424 -37.58942413]
[42.35066605 -41.47083282]
[40.84848785 -45.86363983]
[41.19625854 -49.92493439]
[42.94132233 -52.98876953]
[40.49559402 -67.78804016]
[38.04986954 -82.58731079]
[34.73642731 -86.62069702]
[33.43189621 -91.07619476]
[33.96066666 -95.11791229]
[35.84079742 -98.10076904]
[34.05833054 -112.99448395]
[32.27586746 -127.88820648]
[29.14582825 -132.06552124]
[28.04154968 -136.57482910]
[28.75026131 -140.58889771]
[30.76171112 -143.48483276]
[29.64606285 -158.44328308]
[28.53041458 -173.40173340]
[13.87752342 -177.21900940]
[1.25941014 -185.58930969]
[-7.95520735 -197.60469055]
[-12.76679611 -211.96182251]
[-12.65343094 -227.10336304]
[-7.62740993 -241.38684082]
[1.76608300 -253.26290894]
[14.50811195 -261.44332886]
[29.21651649 -265.04077148]
[44.29583740 -263.66500854]
[58.11038589 -257.46524048]
[69.16165924 -247.11401367]
[76.25090790 -233.73411560]
[78.60912323 -218.77693176]
[75.98052216 -203.86488342]
[68.65023041 -190.61552429]
[57.41338348 -180.46604919]
[43.48886871 -174.51737976]
[44.60451508 -159.55892944]
[45.72016525 -144.60047913]
[47.16958237 -129.67066956]
[48.95204926 -114.77695465]
[50.73451614 -99.88323212]
[52.84914017 -85.03303528]
[55.29486465 -70.23376465]
[57.74059296 -55.43449783]
[60.51620483 -40.69353485]
[63.62031555 -26.01823044]
[66.72442627 -11.34292889]
[76.92803192 -0.49231982]
[72.21403503 14.61028957]
[75.31814575 29.28559113]
[80.24973297 43.45172501]
[86.92993164 56.88210297]
[93.61012268 70.31247711]
[100.29032135 83.74285126]
[114.50398254 92.65060425]
[113.28118896 109.38025665]
[120.16059875 122.70968628]
[127.13905334 135.98753357]
[140.47206116 144.50465393]
[139.65489197 159.37683105]
[146.73199463 172.60235596]
[154.10267639 185.66653442]
[161.76327515 198.56286621]
[169.42387390 211.45919800]
[177.08447266 224.35551453]
[176.13795471 209.38540649]
[179.39114380 194.74243164]
[186.58744812 181.58139038]
[197.15936279 170.94021606]
[210.27314758 163.65811157]
[224.89456177 160.30938721]
[239.87052917 161.15814209]
[254.01997375 166.13742065]
[266.22702026 174.85453796]
[275.52896118 186.62203979]
[281.19219971 200.51188660]
[282.77011108 215.42864990]
[280.13824463 230.19596863]
[273.50421143 243.64920044]
[263.39114380 254.72737122]
[250.59661865 262.55682373]
[236.12966919 266.52008057]
[221.13122559 266.30456543]
[206.78410339 261.92733765]
[194.21980286 253.73353577]
[184.42730713 242.36647034]
[187.96697998 256.94284058]
[191.50665283 271.51922607]
[195.04632568 286.09561157]
[198.58599854 300.67196655]
[202.12567139 315.24835205]
[205.66534424 329.82473755]
[216.44067383 341.40933228]
[211.92524719 355.60299683]
[215.46492004 370.17935181]
[219.00457764 384.75573730]
[222.54425049 399.33212280]
[226.08392334 413.90847778]
[229.62359619 428.48486328]
[233.16326904 443.06124878]
[236.70294189 457.63760376]
[251.61328125 455.84362793]
[266.63113403 455.82577515]
[281.54568481 457.58428955]
[296.14758301 461.09451294]
[310.23178101 466.30712891]
[323.60061646 473.14895630]
[336.06637573 481.52401733]
[347.45407104 491.31463623]
[357.60382080 502.38345337]
[366.37316895 514.57507324]
[373.63900757 527.71826172]
[379.29931641 541.62860107]
[383.27462769 556.11077881]
[385.50912476 570.96148682]
[385.97149658 585.97222900]
[384.65521240 600.93231201]
[381.57873535 615.63165283]
[376.78527832 629.86401367]
[370.34213257 643.42944336]
[362.33972168 656.13763428]
[352.89044189 667.81018066]
[342.12689209 678.28308105]
[330.20019531 687.40948486]
[317.27780151 695.06109619]
[303.54110718 701.13067627]
[289.18295288 705.53289795]
[274.40487671 708.20599365]
[259.41439819 709.11242676]
[244.42192078 708.23956299]
[229.63792419 705.59948730]
[215.26995850 701.22937012]
[201.51971436 695.19061279]
[188.58023071 687.56787109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 141]
[35 140]
[36 139]
[37 138]
[41 137]
[42 136]
[44 134]
[46 133]
[47 132]
[50 130]
[51 129]
[52 128]
[53 127]
[71 126]
[72 125]
[74 123]
[75 122]
[76 121]
[80 120]
[81 119]
[82 118]
[86 117]
[87 116]
[88 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
