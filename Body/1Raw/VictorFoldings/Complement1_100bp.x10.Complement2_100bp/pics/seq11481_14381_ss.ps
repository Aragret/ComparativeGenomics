%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[50.34791565 645.52856445]
[36.06255722 650.11682129]
[21.53855896 653.88201904]
[6.82329416 656.81195068]
[-8.03523636 658.89697266]
[-22.98856926 660.13043213]
[-37.98792648 660.50811768]
[-52.98438644 660.02893066]
[-67.92903137 658.69439697]
[-82.77311707 656.50885010]
[-97.46822357 653.47943115]
[-111.96641541 649.61602783]
[-126.22040558 644.93127441]
[-140.18370056 639.44036865]
[-153.81074524 633.16131592]
[-167.05711365 626.11450195]
[-179.87957764 618.32299805]
[-192.23631287 609.81213379]
[-204.08703613 600.60974121]
[-215.39306641 590.74578857]
[-226.11753845 580.25250244]
[-236.22546387 569.16412354]
[-245.68388367 557.51672363]
[-254.46194458 545.34832764]
[-262.53100586 532.69866943]
[-269.86474609 519.60900879]
[-276.43923950 506.12200928]
[-282.23309326 492.28167725]
[-287.22732544 478.13314819]
[-291.40570068 463.72256470]
[-294.75457764 449.09695435]
[-297.26303101 434.30401611]
[-298.92288208 419.39199829]
[-299.72872925 404.40954590]
[-299.67791748 389.40551758]
[-298.77059937 374.42886353]
[-297.00979614 359.52841187]
[-294.40118408 344.75280762]
[-290.95333862 330.15020752]
[-286.67742920 315.76828003]
[-281.58746338 301.65390015]
[-275.70004272 287.85311890]
[-269.03433228 274.41094971]
[-261.61209106 261.37124634]
[-253.45753479 248.77655029]
[-244.59725952 236.66792297]
[-235.06016541 225.08485413]
[-224.87734985 214.06515503]
[-214.08206177 203.64474487]
[-202.70947266 193.85762024]
[-190.79669189 184.73571777]
[-178.38258362 176.30876160]
[-165.50764465 168.60427856]
[-152.21385193 161.64736938]
[-138.54458618 155.46072388]
[-124.54441833 150.06454468]
[-110.25902557 145.47640991]
[-95.73499298 141.71130371]
[-81.01970673 138.78150940]
[-66.16116333 136.69656372]
[-51.20782089 135.46327209]
[-36.20845795 135.08567810]
[-21.21200180 135.56498718]
[-6.26736784 136.89964294]
[8.57669926 139.08529663]
[23.27178001 142.11482239]
[37.76994324 145.97833252]
[52.02389526 150.66322327]
[65.98714447 156.15422058]
[72.26451111 142.53091431]
[78.54187012 128.90759277]
[84.81922913 115.28427124]
[91.09658813 101.66095734]
[90.28733063 97.89035034]
[91.14402008 93.78134155]
[93.78054047 90.08596802]
[97.97050476 87.57917023]
[104.84991455 74.24974060]
[111.72933197 60.92031479]
[118.60874176 47.59088516]
[125.48815918 34.26145554]
[132.36756897 20.93202591]
[139.24697876 7.60259724]
[146.12638855 -5.72683191]
[133.40307617 -13.68777561]
[121.38062286 -22.67222023]
[110.14117432 -32.61878967]
[99.76149750 -43.45954132]
[90.31250000 -55.12041855]
[81.85874176 -67.52176666]
[74.45794678 -80.57886505]
[68.16069794 -94.20252991]
[63.00999069 -108.29968262]
[59.04101944 -122.77403259]
[56.28089905 -137.52670288]
[54.74847794 -152.45690918]
[54.45423126 -167.46267700]
[55.40016174 -182.44148254]
[57.57981110 -197.29101562]
[60.97829056 -211.90983582]
[65.57238770 -226.19807434]
[71.33071136 -240.05813599]
[78.21392822 -253.39533997]
[86.17502594 -266.11856079]
[95.15961456 -278.14089966]
[105.10631561 -289.38024902]
[115.94719696 -299.75979614]
[127.60818481 -309.20864868]
[140.00962830 -317.66226196]
[153.06681824 -325.06289673]
[166.69055176 -331.35998535]
[180.78776550 -336.51052856]
[195.26216125 -340.47930908]
[210.01487732 -343.23925781]
[224.94509888 -344.77151489]
[239.95086670 -345.06558228]
[254.92967224 -344.11947632]
[269.77917480 -341.93963623]
[284.39794922 -338.54098511]
[298.68612671 -333.94671631]
[312.54614258 -328.18823242]
[325.88323975 -321.30484009]
[338.60638428 -313.34359741]
[350.62860107 -304.35885620]
[361.86782837 -294.41201782]
[372.24725342 -283.57104492]
[381.69595337 -271.90994263]
[390.14941406 -259.50839233]
[397.54989624 -246.45111084]
[403.84683228 -232.82730103]
[408.99719238 -218.73001099]
[412.96582031 -204.25556946]
[415.72558594 -189.50283813]
[417.25765991 -174.57258606]
[417.55154419 -159.56681824]
[416.60525513 -144.58802795]
[414.42526245 -129.73855591]
[411.02642822 -115.11981201]
[406.43200684 -100.83168030]
[400.67333984 -86.97175598]
[393.78979492 -73.63472748]
[385.82839966 -60.91168594]
[376.84353638 -48.88956070]
[366.89654541 -37.65046310]
[356.05545044 -27.27117729]
[344.39422607 -17.82259941]
[331.99258423 -9.36927891]
[318.93521118 -1.96895766]
[305.31130981 4.32781029]
[291.21398926 9.47801113]
[276.73950195 13.44646358]
[261.98672485 16.20605850]
[247.05645752 17.73794365]
[232.05068970 18.03165627]
[217.07189941 17.08518982]
[202.22244263 14.90500736]
[187.60375977 11.50600529]
[173.31567383 6.91140079]
[159.45582581 1.15258074]
[152.57641602 14.48200989]
[145.69699097 27.81143951]
[138.81758118 41.14086914]
[131.93817139 54.47029877]
[125.05876160 67.79972839]
[118.17934418 81.12915802]
[111.29993439 94.45858765]
[104.71990967 107.93831635]
[98.44254303 121.56163788]
[92.16518402 135.18495178]
[85.88782501 148.80827332]
[79.61046600 162.43157959]
[92.85688019 169.47827148]
[105.67940521 177.26969910]
[118.03621674 185.78044128]
[129.88699341 194.98274231]
[141.19311523 204.84657288]
[151.91766357 215.33978271]
[162.02568054 226.42813110]
[171.48419189 238.07545471]
[180.26234436 250.24374390]
[188.33149719 262.89334106]
[195.66534424 275.98294067]
[202.23995972 289.46990967]
[208.03388977 303.31021118]
[213.02825928 317.45867920]
[217.20674133 331.86923218]
[220.55574036 346.49481201]
[223.06430054 361.28775024]
[224.72427368 376.19973755]
[225.53022766 391.18218994]
[225.47952271 406.18621826]
[224.57234192 421.16290283]
[222.81164551 436.06332397]
[220.20317078 450.83895874]
[216.75541687 465.44158936]
[212.47964478 479.82354736]
[207.38978577 493.93798828]
[201.50245667 507.73880005]
[194.83685303 521.18103027]
[187.41470337 534.22076416]
[179.26025391 546.81555176]
[170.40007019 558.92425537]
[160.86306763 570.50738525]
[150.68034363 581.52716064]
[139.88513184 591.94763184]
[128.51261902 601.73486328]
[116.59992218 610.85687256]
[104.18588257 619.28393555]
[91.31099701 626.98852539]
[78.01726532 633.94549561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[77 166]
[78 165]
[79 164]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
