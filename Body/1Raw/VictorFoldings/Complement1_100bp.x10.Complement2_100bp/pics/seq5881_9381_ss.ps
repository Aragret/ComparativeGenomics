%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[142.07746887 528.10168457]
[134.15789795 515.35333252]
[127.27621460 502.01605225]
[121.47594452 488.17419434]
[116.79376221 473.91525269]
[113.25925446 459.32940674]
[110.89478302 444.50881958]
[109.71528625 429.54724121]
[109.72822571 414.53924561]
[110.93352509 399.57971191]
[113.32355499 384.76324463]
[116.88320923 370.18350220]
[121.58998108 355.93267822]
[127.41411591 342.10083008]
[134.31878662 328.77545166]
[142.26034546 316.04080200]
[151.18856812 303.97735596]
[161.04702759 292.66137695]
[171.77337646 282.16445923]
[183.29980469 272.55291748]
[195.55343628 263.88757324]
[187.89283752 250.99122620]
[180.23223877 238.09490967]
[172.57164001 225.19857788]
[164.91104126 212.30224609]
[157.25045776 199.40592957]
[149.20927429 186.74339294]
[135.66441345 180.54777527]
[134.32806396 164.78311157]
[125.91343689 152.36561584]
[117.49881744 139.94812012]
[105.68273926 137.35836792]
[98.57075500 127.08200836]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.29898071 69.01522827]
[61.51837921 56.85377502]
[53.95769882 51.72796249]
[52.69917297 44.44524765]
[44.10060883 32.15441132]
[36.61708450 26.91659927]
[35.46712494 19.61595726]
[27.05250549 7.19846106]
[18.63788605 -5.21903419]
[10.22326756 -17.63652992]
[1.80864894 -30.05402565]
[-6.97195435 -42.21548080]
[-16.11075592 -54.11011505]
[-25.24955940 -66.00474548]
[-34.38836288 -77.89937592]
[-47.13154602 -69.96350861]
[-60.59122467 -63.31491470]
[-74.63777924 -58.01763535]
[-89.13591766 -54.12268448]
[-103.94602203 -51.66757202]
[-118.92546082 -50.67594528]
[-133.92996216 -51.15735626]
[-148.81501770 -53.10716248]
[-163.43728638 -56.50659180]
[-177.65592957 -61.32290268]
[-191.33403015 -67.50970459]
[-204.33984375 -75.00742340]
[-216.54809570 -83.74385071]
[-227.84124756 -93.63483429]
[-238.11051941 -104.58512878]
[-247.25700378 -116.48927307]
[-255.19261169 -129.23262024]
[-261.84094238 -142.69242859]
[-267.13793945 -156.73908997]
[-271.03259277 -171.23730469]
[-273.48742676 -186.04745483]
[-274.47872925 -201.02691650]
[-273.99703979 -216.03140259]
[-272.04693604 -230.91642761]
[-268.64721680 -245.53862000]
[-263.83062744 -259.75717163]
[-257.64352417 -273.43515015]
[-250.14555359 -286.44079590]
[-241.40888977 -298.64889526]
[-231.51766968 -309.94183350]
[-220.56718445 -320.21087646]
[-208.66285706 -329.35714722]
[-195.91935730 -337.29251099]
[-182.45941162 -343.94055176]
[-168.41264343 -349.23727417]
[-153.91433716 -353.13165283]
[-139.10414124 -355.58615112]
[-124.12466431 -356.57717896]
[-109.12018585 -356.09518433]
[-94.23519897 -354.14477539]
[-79.61306763 -350.74475098]
[-65.39461517 -345.92788696]
[-51.71677017 -339.74053955]
[-38.71126175 -332.24230957]
[-26.50334740 -323.50537109]
[-15.21059608 -313.61395264]
[-4.94176722 -302.66323853]
[4.20424271 -290.75872803]
[12.13935089 -278.01507568]
[18.78713608 -264.55499268]
[24.08357239 -250.50811768]
[27.97765350 -236.00975037]
[30.43187714 -221.19949341]
[31.42260361 -206.22000122]
[30.94029617 -191.21553040]
[28.98959541 -176.33058167]
[25.58928871 -161.70852661]
[20.77212715 -147.49015808]
[14.58450031 -133.81243896]
[7.08600140 -120.80708313]
[-1.65115333 -108.59934235]
[-11.54281807 -97.30679321]
[-22.49372864 -87.03818512]
[-13.35492611 -75.14354706]
[-4.21612358 -63.24891663]
[4.92267847 -51.35428238]
[7.68142176 -50.85681152]
[10.40933228 -49.23659134]
[12.67778683 -46.49989319]
[14.06833935 -42.80789185]
[14.22614479 -38.46864319]
[22.64076233 -26.05114746]
[31.05538177 -13.63365269]
[39.47000122 -1.21615732]
[47.88461685 11.20133781]
[56.39144516 23.55584717]
[64.99001312 35.84668350]
[73.67983246 48.07316971]
[82.46043396 60.23462677]
[85.86428833 61.15447235]
[88.99172211 63.76871109]
[91.05120850 67.92945862]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[129.59953308 113.98736572]
[129.91632080 131.53349304]
[138.33093262 143.95098877]
[146.74554443 156.36848450]
[160.89228821 163.45230103]
[161.62677002 178.32878113]
[165.59852600 180.08354187]
[168.51225281 182.74337769]
[170.21333313 185.86454773]
[170.70716858 188.99867249]
[170.14677429 191.74533081]
[177.80737305 204.64164734]
[185.46797180 217.53797913]
[193.12857056 230.43431091]
[200.78916931 243.33062744]
[208.44976807 256.22695923]
[221.92100525 249.61138916]
[235.87527466 244.08703613]
[250.22433472 239.68881226]
[264.87750244 236.44454956]
[279.74206543 234.37472534]
[294.72412109 233.49246216]
[309.72891235 233.80331421]
[324.66156006 235.30532837]
[339.42767334 237.98901367]
[353.93386841 241.83737183]
[368.08847046 246.82611084]
[381.80197144 252.92366028]
[394.98764038 260.09149170]
[407.56216431 268.28427124]
[419.44601440 277.45019531]
[430.56405640 287.53134155]
[440.84597778 298.46395874]
[450.22680664 310.17889404]
[458.64724731 322.60214233]
[466.05398560 335.65509033]
[472.40026855 349.25527954]
[477.64593506 363.31668091]
[481.75784302 377.75039673]
[484.70999146 392.46517944]
[486.48367310 407.36801147]
[487.06774902 422.36465454]
[486.45846558 437.36026001]
[484.65969849 452.26007080]
[481.68280029 466.96987915]
[477.54663086 481.39666748]
[472.27731323 495.44921875]
[465.90814209 509.03869629]
[458.47943115 522.07922363]
[450.03814697 534.48822021]
[440.63763428 546.18737793]
[430.33731079 557.10272217]
[419.20233154 567.16510010]
[407.30307007 576.31103516]
[394.71481323 584.48266602]
[381.51705933 591.62829590]
[367.79333496 597.70275879]
[353.63037109 602.66766357]
[339.11770630 606.49163818]
[324.34710693 609.15045166]
[309.41195679 610.62738037]
[294.40667725 610.91296387]
[279.42611694 610.00549316]
[264.56503296 607.91070557]
[249.91737366 604.64178467]
[235.57571411 600.21942139]
[221.63076782 594.67163086]
[208.17066956 588.03338623]
[195.28054810 580.34674072]
[183.04187012 571.66021729]
[171.53202820 562.02886963]
[160.82380676 551.51342773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 154]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[27 144]
[29 142]
[30 141]
[31 140]
[34 138]
[36 136]
[37 135]
[38 131]
[39 130]
[41 129]
[42 128]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[49 118]
[50 117]
[51 116]
[52 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
