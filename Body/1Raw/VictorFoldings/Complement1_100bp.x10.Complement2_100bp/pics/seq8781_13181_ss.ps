%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[138.44444275 852.78228760]
[123.73791504 849.81427002]
[109.19473267 846.12817383]
[94.84994507 841.73297119]
[80.73809814 836.63916016]
[66.89318848 830.85906982]
[53.34857178 824.40655518]
[40.13687897 817.29724121]
[27.28993988 809.54827881]
[14.83870029 801.17822266]
[2.81315899 792.20727539]
[-8.75771427 782.65710449]
[-19.84604454 772.55065918]
[-30.42511749 761.91235352]
[-40.46944809 750.76770020]
[-49.95483780 739.14367676]
[-58.85843658 727.06823730]
[-67.15879822 714.57043457]
[-74.83591461 701.68035889]
[-81.87130737 688.42919922]
[-88.24801636 674.84869385]
[-93.95067596 660.97174072]
[-98.96556091 646.83166504]
[-103.28057861 632.46252441]
[-106.88534546 617.89898682]
[-109.77116394 603.17614746]
[-111.93109131 588.32934570]
[-113.35991669 573.39453125]
[-114.05420685 558.40759277]
[-114.01227570 543.40460205]
[-113.23423767 528.42175293]
[-111.72196198 513.49511719]
[-109.47909546 498.66067505]
[-106.51103210 483.95416260]
[-102.82493591 469.41101074]
[-98.42967224 455.06622314]
[-93.33583832 440.95437622]
[-87.55570984 427.10949707]
[-81.10319519 413.56488037]
[-73.99385834 400.35321045]
[-66.24481964 387.50628662]
[-57.87473679 375.05508423]
[-48.90378952 363.02957153]
[-39.35358047 351.45870972]
[-29.24711800 340.37039185]
[-18.60875320 329.79135132]
[-7.46411180 319.74703979]
[4.15995598 310.26168823]
[16.23544693 301.35812378]
[28.73327255 293.05780029]
[41.62332153 285.38070679]
[54.87453842 278.34533691]
[68.45500946 271.96868896]
[82.33200073 266.26605225]
[96.47209930 261.25119019]
[110.84123230 256.93621826]
[125.40478516 253.33148193]
[122.51950836 238.61160278]
[119.63423920 223.89170837]
[116.63946533 209.19369507]
[113.53535461 194.51840210]
[101.11940765 182.11633301]
[106.97253418 164.65716553]
[103.65027618 150.02970886]
[93.28625488 139.33221436]
[97.77487183 124.16110229]
[94.45261383 109.53363800]
[84.37169647 120.64107513]
[69.39324188 119.83734131]
[60.55881500 107.71492767]
[64.38082123 93.21002960]
[78.04182434 87.01510620]
[91.47042084 93.69553375]
[89.24530029 78.86149597]
[87.02018738 64.02745056]
[74.59466553 54.63360977]
[72.54940033 39.55808258]
[81.58156586 27.77013969]
[79.35644531 12.93609524]
[69.65761566 0.43636459]
[75.42133331 -13.29785633]
[73.19622040 -28.13189888]
[70.97109985 -42.96594238]
[68.74597931 -57.79998779]
[66.52086639 -72.63403320]
[64.29574585 -87.46807098]
[54.59692001 -99.96780396]
[60.36063766 -113.70202637]
[58.13552094 -128.53607178]
[55.91040421 -143.37011719]
[40.94394684 -145.41506958]
[27.16043282 -151.59500122]
[15.67723083 -161.40890503]
[7.42523146 -174.06121826]
[3.07338738 -188.52629089]
[2.97448277 -203.63148499]
[7.13653612 -218.15229797]
[15.22214794 -230.91159058]
[26.57585335 -240.87503052]
[40.27725983 -247.23490906]
[55.21565247 -249.47567749]
[70.18004608 -247.41567993]
[83.95734406 -241.22192383]
[95.43067932 -231.39648438]
[103.66996765 -218.73587036]
[108.00727844 -204.26644897]
[108.09101105 -189.16116333]
[103.91436768 -174.64453125]
[95.81594086 -161.89337158]
[84.45223236 -151.94134521]
[70.74444580 -145.59523010]
[72.96956635 -130.76118469]
[75.19467926 -115.92713928]
[84.73435211 -104.48844147]
[79.12979126 -89.69319153]
[81.35491180 -74.85914612]
[83.58002472 -60.02510452]
[85.80514526 -45.19105911]
[88.03025818 -30.35701752]
[90.25537872 -15.52297306]
[99.79505157 -4.08427238]
[94.19049072 10.71097851]
[96.41560364 25.54502106]
[108.50884247 34.16413879]
[110.97674561 49.17626953]
[101.85422516 61.80233002]
[104.07934570 76.63637543]
[106.30446625 91.47042084]
[109.08007050 106.21138000]
[112.40233612 120.83884430]
[123.00399017 132.58258057]
[118.27774048 146.70745850]
[121.59999847 161.33491516]
[132.07797241 168.85653687]
[134.54394531 181.10818481]
[128.21066284 191.41429138]
[131.31475830 206.08958435]
[136.15232849 213.83787537]
[134.35412598 221.00643921]
[137.23939514 235.72631836]
[140.12467957 250.44621277]
[154.97140503 248.28617859]
[169.90623474 246.85723877]
[184.89318848 246.16284180]
[199.89616394 246.20465088]
[214.87901306 246.98258972]
[229.80564880 248.49475098]
[244.64010620 250.73750305]
[259.34664917 253.70545959]
[273.88983154 257.39144897]
[288.23464966 261.78659058]
[302.34652710 266.88034058]
[316.19146729 272.66036987]
[329.73611450 279.11276245]
[342.94784546 286.22201538]
[355.79483032 293.97094727]
[368.24609375 302.34094238]
[380.27169800 311.31179810]
[391.84262085 320.86193848]
[402.93099976 330.96829224]
[413.51010132 341.60659790]
[423.55450439 352.75115967]
[433.03994751 364.37515259]
[441.94360352 376.45059204]
[450.24401855 388.94833374]
[457.92120361 401.83831787]
[464.95666504 415.08950806]
[471.33343506 428.66992188]
[477.03616333 442.54687500]
[482.05111694 456.68692017]
[486.36621094 471.05603027]
[489.97106934 485.61956787]
[492.85693359 500.34240723]
[495.01693726 515.18914795]
[496.44586182 530.12396240]
[497.14019775 545.11096191]
[497.09835815 560.11389160]
[496.32040405 575.09674072]
[494.80819702 590.02337646]
[492.56539917 604.85784912]
[489.59741211 619.56439209]
[485.91137695 634.10754395]
[481.51620483 648.45239258]
[476.42242432 662.56420898]
[470.64236450 676.40917969]
[464.18991089 689.95379639]
[457.08065796 703.16552734]
[449.33166504 716.01245117]
[440.96163940 728.46374512]
[431.99075317 740.48925781]
[422.44061279 752.06018066]
[412.33419800 763.14855957]
[401.69589233 773.72766113]
[390.55130005 783.77197266]
[378.92727661 793.25738525]
[366.85183716 802.16101074]
[354.35406494 810.46142578]
[341.46405029 818.13861084]
[328.21286011 825.17401123]
[314.63241577 831.55072021]
[300.75546265 837.25341797]
[286.61538696 842.26837158]
[272.24627686 846.58343506]
[257.68273926 850.18823242]
[242.95986938 853.07409668]
[228.11312866 855.23400879]
[213.17829895 856.66290283]
[198.19132996 857.35723877]
[183.18835449 857.31530762]
[168.20550537 856.53735352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 141]
[58 140]
[59 139]
[60 137]
[61 136]
[63 133]
[64 132]
[66 130]
[67 129]
[73 128]
[74 127]
[75 126]
[78 123]
[79 122]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
