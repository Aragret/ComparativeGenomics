%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[126.90856934 766.92095947]
[112.56622314 762.51507568]
[98.48835754 757.32580566]
[84.71774292 751.36883545]
[71.29618835 744.66235352]
[58.26445770 737.22674561]
[45.66213608 729.08447266]
[33.52748489 720.26031494]
[21.89736557 710.78112793]
[10.80709648 700.67565918]
[0.29035577 689.97460938]
[-9.62091541 678.71038818]
[-18.89661598 666.91735840]
[-27.50857735 654.63122559]
[-35.43064499 641.88934326]
[-42.63875961 628.73040771]
[-49.11103058 615.19433594]
[-54.82780075 601.32226562]
[-59.77170563 587.15637207]
[-63.92773819 572.73968506]
[-67.28327179 558.11584473]
[-69.82811737 543.32940674]
[-71.55454254 528.42523193]
[-72.45730591 513.44860840]
[-72.53366852 498.44497681]
[-71.78339386 483.45993042]
[-70.20877075 468.53894043]
[-67.81456757 453.72738647]
[-64.60806274 439.07019043]
[-60.59899521 424.61190796]
[-55.79953766 410.39639282]
[-50.22426605 396.46688843]
[-43.89011383 382.86566162]
[-36.81631470 369.63403320]
[-29.02435684 356.81216431]
[-20.53790283 344.43899536]
[-11.38272190 332.55215454]
[-1.58662164 321.18765259]
[8.82064819 310.38009644]
[19.80748177 300.16226196]
[31.34050941 290.56515503]
[43.38470840 281.61798096]
[55.90350342 273.34786987]
[68.85886383 265.77993774]
[82.21146393 258.93719482]
[95.92073059 252.84040833]
[109.94503784 247.50810242]
[124.24180603 242.95645142]
[120.48550415 228.43438721]
[116.72920227 213.91233826]
[112.97290039 199.39027405]
[109.21659851 184.86820984]
[99.47086334 196.27087402]
[84.47512054 195.91346741]
[75.28367615 184.05944824]
[78.67212677 169.44718933]
[92.14263153 162.84826660]
[105.76416779 169.12591553]
[95.88815308 157.97631836]
[101.04972076 143.02076721]
[98.38392639 128.25955200]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[76.18315887 67.61163330]
[73.71717834 55.35998917]
[80.05046844 45.05387878]
[76.94636536 30.37857628]
[73.29827118 15.82895660]
[69.11125946 1.42517424]
[64.92425537 -12.97860813]
[55.52233124 -1.29084122]
[40.52259827 -1.20161343]
[30.98229408 -12.77670002]
[33.93418121 -27.48337746]
[47.20223236 -34.48043060]
[61.00464249 -28.61112976]
[57.90053558 -43.28643036]
[54.79642487 -57.96173477]
[51.69231415 -72.63703918]
[48.58820343 -87.31233978]
[33.54874420 -86.95281219]
[18.69933128 -89.36313629]
[4.54573774 -94.46121216]
[-8.42997456 -102.07341003]
[-19.78585625 -111.94046021]
[-29.13512993 -123.72628784]
[-36.15936661 -137.02946472]
[-40.61931610 -151.39691162]
[-42.36308289 -166.33926392]
[-41.33126450 -181.34759521]
[-37.55901718 -195.91073608]
[-31.17481041 -209.53265381]
[-22.39609528 -221.74938965]
[-11.52186775 -232.14486694]
[1.07749796 -240.36499023]
[14.97287273 -246.12982178]
[29.69098663 -249.24298096]
[44.73054504 -249.59846497]
[59.57930374 -247.18412781]
[73.73152161 -242.08224487]
[86.70518494 -234.46653748]
[98.05840302 -224.59643555]
[107.40450287 -212.80809021]
[114.42514801 -199.50300598]
[118.88122559 -185.13436890]
[120.62096405 -170.19154358]
[119.58510590 -155.18348694]
[115.80892944 -140.62138367]
[109.42105103 -127.00118256]
[100.63904572 -114.78680420]
[89.76201630 -104.39426422]
[77.16043091 -96.17752838]
[63.26350403 -90.41645050]
[66.36761475 -75.74114990]
[69.47172546 -61.06584549]
[72.57583618 -46.39054108]
[75.67994690 -31.71524048]
[79.32803345 -17.16561890]
[83.51504517 -2.76183701]
[87.70205688 11.64194489]
[97.10397339 -0.04582162]
[112.10371399 -0.13504934]
[121.64401245 11.44003677]
[118.69213104 26.14671516]
[105.42407227 33.14376831]
[91.62166595 27.27446747]
[94.72577667 41.94976807]
[107.14172363 54.35183334]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.56424713 114.06829834]
[115.13166046 118.43825531]
[114.84439850 122.50427246]
[113.14514160 125.59375000]
[115.81093597 140.35496521]
[125.87763214 152.56039429]
[120.52538300 166.46012878]
[123.73866272 181.11190796]
[127.49495697 195.63397217]
[131.25126648 210.15603638]
[135.00756836 224.67808533]
[138.76385498 239.20014954]
[153.47453308 236.24868774]
[168.32545471 234.11209106]
[183.27151489 232.79682922]
[198.26734924 232.30693054]
[213.26739502 232.64384460]
[228.22610474 233.80657959]
[243.09803772 235.79159546]
[257.83804321 238.59284973]
[272.40136719 242.20185852]
[286.74374390 246.60763550]
[300.82165527 251.79682922]
[314.59231567 257.75366211]
[328.01391602 264.46002197]
[341.04568481 271.89559937]
[353.64807129 280.03775024]
[365.78277588 288.86181641]
[377.41296387 298.34091187]
[388.50329590 308.44631958]
[399.02011108 319.14733887]
[408.93145752 330.41143799]
[418.20724487 342.20443726]
[426.81930542 354.49050903]
[434.74145508 367.23233032]
[441.94967651 380.39123535]
[448.42202759 393.92724609]
[454.13888550 407.79922485]
[459.08291626 421.96508789]
[463.23904419 436.38180542]
[466.59466553 451.00558472]
[469.13961792 465.79199219]
[470.86614990 480.69613647]
[471.76901245 495.67279053]
[471.84548950 510.67642212]
[471.09530640 525.66149902]
[469.52081299 540.58245850]
[467.12670898 555.39404297]
[463.92028809 570.05126953]
[459.91134644 584.50958252]
[455.11196899 598.72509766]
[449.53680420 612.65466309]
[443.20275879 626.25592041]
[436.12902832 639.48760986]
[428.33718872 652.30957031]
[419.85079956 664.68273926]
[410.69570923 676.56970215]
[400.89968872 687.93420410]
[390.49249268 698.74188232]
[379.50573730 708.95977783]
[367.97277832 718.55694580]
[355.92864990 727.50427246]
[343.40991211 735.77441406]
[330.45458984 743.34246826]
[317.10205078 750.18530273]
[303.39282227 756.28216553]
[289.36853027 761.61456299]
[275.07180786 766.16632080]
[260.54605103 769.92358398]
[245.83535767 772.87493896]
[230.98442078 775.01147461]
[216.03834534 776.32659912]
[201.04251099 776.81640625]
[186.04246521 776.47937012]
[171.08377075 775.31652832]
[156.21183777 773.33142090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[58 141]
[60 139]
[61 138]
[62 134]
[64 132]
[65 131]
[68 129]
[69 128]
[70 122]
[71 121]
[72 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
