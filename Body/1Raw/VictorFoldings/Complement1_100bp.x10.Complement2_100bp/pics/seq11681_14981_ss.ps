%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[128.49012756 610.77764893]
[114.73773956 604.75872803]
[101.63047791 597.44061279]
[89.29071045 588.89154053]
[77.83366394 579.19146729]
[67.36631012 568.43090820]
[57.98638153 556.71032715]
[49.78145599 544.13909912]
[42.82814407 530.83471680]
[37.19137192 516.92132568]
[32.92376328 502.52886963]
[30.06516838 487.79171753]
[28.64227676 472.84744263]
[28.66837502 457.83563232]
[30.14321899 442.89642334]
[33.05303955 428.16928101]
[37.37066269 413.79174805]
[43.05578232 399.89804077]
[50.05530930 386.61788940]
[58.30389786 374.07531738]
[67.72452545 362.38739014]
[78.22922516 351.66329956]
[89.71993256 342.00308228]
[102.08934784 333.49703979]
[115.22197723 326.22451782]
[128.99520874 320.25344849]
[143.28044128 315.63958740]
[157.94427490 312.42599487]
[156.16181946 297.53225708]
[154.37934875 282.63854980]
[152.59687805 267.74484253]
[150.81442261 252.85112000]
[149.03195190 237.95739746]
[147.24948120 223.06367493]
[142.31788635 208.89755249]
[134.46614075 196.11669922]
[126.51944733 183.39466858]
[118.47827911 170.73214722]
[110.43710327 158.06962585]
[111.89878082 172.99822998]
[109.33299255 187.77716064]
[102.92494965 201.33949280]
[93.13726807 212.70617676]
[80.67652130 221.05661011]
[66.44226074 225.78797913]
[51.46207809 226.55873108]
[36.81739807 223.31321716]
[23.56543541 216.28573608]
[12.66285992 205.98361206]
[4.89673853 193.15055847]
[0.82771397 178.71299744]
[0.74953276 163.71321106]
[4.66783905 149.23402405]
[12.29976654 136.32070923]
[23.09436035 125.90548706]
[36.27234650 118.74024963]
[50.88240051 115.34225464]
[65.86980438 115.95681000]
[80.15261078 120.53955078]
[92.69972229 128.75964355]
[102.60601044 140.02464294]
[98.84970856 125.50258636]
[95.09340668 110.98052216]
[91.12130737 96.51599884]
[86.93429565 82.11222076]
[82.74728394 67.70843506]
[78.56027985 53.30465317]
[74.37326813 38.90087128]
[69.70945740 53.15741348]
[59.01906204 63.67955017]
[44.69033432 68.11661530]
[29.92435074 65.47735596]
[18.01986885 56.35138702]
[11.63637924 42.77747726]
[12.19997215 27.78806877]
[19.58473969 14.73183537]
[32.14090347 6.52557325]
[47.06338501 5.00258207]
[61.01846695 10.50310230]
[70.88855743 21.79832268]
[69.10608673 6.90460539]
[67.32362366 -7.98911190]
[65.54116058 -22.88282967]
[56.21879196 -35.66578674]
[62.38887405 -49.22231293]
[60.60640717 -64.11602783]
[50.50809479 -53.02441025]
[35.53163910 -52.18431854]
[24.25623131 -62.07700729]
[23.14094162 -77.03548431]
[32.82465744 -88.49085999]
[47.76010132 -89.88098145]
[59.39112473 -80.41034698]
[58.94451904 -95.40369415]
[55.56098938 -103.88835907]
[58.60455704 -110.62322998]
[58.38122940 -125.62156677]
[44.13816452 -130.86557007]
[32.75383759 -140.90357971]
[25.76788712 -154.37802124]
[24.12510681 -169.46662903]
[28.04766655 -184.12875366]
[37.00507355 -196.38146973]
[49.78591537 -204.56771851]
[64.66168213 -207.58036804]
[79.62055206 -205.01196289]
[92.63945770 -197.20988464]
[101.95770264 -185.22927856]
[106.31507111 -170.69044495]
[105.12226105 -155.55963135]
[98.54059601 -141.88314819]
[87.46018219 -131.51063538]
[73.37956238 -125.84489441]
[73.60289764 -110.84655762]
[73.93786621 -95.85029602]
[74.38447571 -80.85694885]
[75.50012207 -65.89849854]
[77.28259277 -51.00477982]
[86.47746277 -39.28711700]
[80.43487549 -24.66529465]
[82.21733856 -9.77157784]
[83.99980927 5.12213945]
[85.78227234 20.01585770]
[88.77704620 34.71385956]
[92.96405792 49.11764145]
[97.15106964 63.52142334]
[101.33808136 77.92520905]
[105.52509308 92.32898712]
[109.43074799 95.83039093]
[111.09661865 101.27081299]
[109.61546326 107.22422028]
[113.37176514 121.74628448]
[117.12806702 136.26834106]
[123.09963226 150.02844238]
[131.14080811 162.69096375]
[139.18197632 175.35350037]
[146.42414856 180.92024231]
[147.24697876 188.26495361]
[155.09873962 201.04579163]
[153.72030640 186.10926819]
[155.33540344 171.19645691]
[159.87966919 156.90136719]
[167.17211914 143.79335022]
[176.92230225 132.39450073]
[188.74186707 123.15882111]
[202.16004944 116.45416260]
[216.64241028 112.54757690]
[231.61210632 111.59465790]
[246.47291565 113.63336182]
[260.63293457 118.58248901]
[273.52816772 126.24491882]
[284.64501953 136.31544495]
[293.54071045 148.39299011]
[299.86090088 161.99649048]
[303.35388184 176.58412170]
[303.88052368 191.57487488]
[301.41986084 206.37167358]
[296.06988525 220.38514709]
[288.04367065 233.05717468]
[277.66094971 243.88301086]
[265.33520508 252.43148804]
[251.55741882 258.36209106]
[236.87631226 261.43865967]
[221.87664795 261.53857422]
[207.15583801 258.65795898]
[193.30023193 252.91145325]
[180.86169434 244.52798462]
[170.33561707 233.84146118]
[162.14320374 221.28121948]
[163.92567444 236.17492676]
[165.70812988 251.06864929]
[167.49060059 265.96237183]
[169.27307129 280.85607910]
[171.05552673 295.74981689]
[172.83799744 310.64352417]
[187.84605408 310.30599976]
[202.81660461 311.41857910]
[217.60990906 313.97082520]
[232.08779907 317.93893433]
[246.11512756 323.28585815]
[259.56091309 329.96166992]
[272.29959106 337.90405273]
[284.21228027 347.03881836]
[295.18768311 357.28070068]
[305.12335205 368.53402710]
[313.92651367 380.69378662]
[321.51498413 393.64642334]
[327.81790161 407.27099609]
[332.77642822 421.44027710]
[336.34426880 436.02197266]
[338.48806763 450.87994385]
[339.18786621 465.87548828]
[338.43707275 480.86853027]
[336.24276733 495.71914673]
[332.62536621 510.28863525]
[327.61868286 524.44097900]
[321.26947021 538.04400635]
[313.63699341 550.97076416]
[304.79251099 563.10052490]
[294.81863403 574.32000732]
[283.80847168 584.52453613]
[271.86480713 593.61871338]
[259.09918213 601.51770020]
[245.63076782 608.14776611]
[231.58532715 613.44696045]
[217.09402466 617.36578369]
[202.29212952 619.86773682]
[187.31787109 620.92938232]
[172.31106567 620.54083252]
[157.41180420 618.70574951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 175]
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[35 139]
[36 138]
[37 136]
[38 135]
[39 134]
[61 133]
[62 132]
[63 131]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[80 123]
[81 122]
[82 121]
[83 120]
[85 118]
[86 117]
[93 116]
[94 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
