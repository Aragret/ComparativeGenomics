%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[128.38119507 520.10516357]
[118.64949036 508.68341064]
[109.68563080 496.64965820]
[101.52801514 484.05538940]
[94.21157837 470.95452881]
[87.76763916 457.40322876]
[82.22380829 443.45947266]
[77.60380554 429.18301392]
[73.92742920 414.63491821]
[71.21041870 399.87756348]
[69.46440125 384.97409058]
[68.69686127 369.98831177]
[68.91108704 354.98443604]
[70.10616302 340.02670288]
[72.27696228 325.17913818]
[75.41419220 310.50534058]
[79.50441742 296.06817627]
[84.53013611 281.92941284]
[90.46981049 268.14962769]
[97.29801178 254.78781128]
[104.98549652 241.90119934]
[113.49935913 229.54496765]
[122.80312347 217.77203369]
[132.85696411 206.63279724]
[143.61781311 196.17495728]
[155.03961182 186.44331360]
[146.07891846 174.41394043]
[137.11822510 162.38455200]
[128.15751648 150.35517883]
[119.19682312 138.32580566]
[110.23612976 126.29642487]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[77.73448944 82.66426849]
[68.77379608 70.63489532]
[59.81309891 58.60551453]
[50.85240555 46.57613754]
[38.24079514 54.70757294]
[25.10900497 61.96904755]
[11.51695061 68.32743073]
[-2.47334933 73.75370789]
[-16.79805946 78.22311401]
[-31.39181900 81.71527100]
[-46.18803787 84.21422577]
[-61.11920929 85.70859528]
[-76.11719513 86.19154358]
[-91.11357880 85.66088104]
[-106.03991699 84.11902618]
[-120.82810974 81.57300568]
[-135.41069031 78.03444672]
[-149.72109985 73.51948547]
[-163.69407654 68.04872894]
[-177.26582336 61.64714050]
[-190.37445068 54.34392548]
[-202.96012878 46.17240906]
[-214.96543884 37.16987610]
[-226.33558655 27.37740517]
[-237.01870728 16.83967209]
[-246.96606445 5.60476303]
[-256.13226318 -6.27606058]
[-264.47546387 -18.74858856]
[-271.95758057 -31.75591087]
[-278.54455566 -45.23867798]
[-284.20623779 -59.13537216]
[-288.91687012 -73.38258362]
[-292.65490723 -87.91530609]
[-295.40332031 -102.66722870]
[-297.14956665 -117.57103729]
[-297.88565063 -132.55873108]
[-297.60824585 -147.56193542]
[-296.31860352 -162.51217651]
[-294.02261353 -177.34124756]
[-290.73077393 -191.98149109]
[-286.45803833 -206.36610413]
[-281.22399902 -220.42942810]
[-275.05242920 -234.10733032]
[-267.97158813 -247.33738708]
[-260.01370239 -260.05923462]
[-251.21514893 -272.21481323]
[-241.61602783 -283.74868774]
[-231.26016235 -294.60818481]
[-220.19480896 -304.74380493]
[-208.47042847 -314.10925293]
[-196.14053345 -322.66186523]
[-183.26138306 -330.36254883]
[-169.89175415 -337.17617798]
[-156.09262085 -343.07168579]
[-141.92697144 -348.02218628]
[-127.45943451 -352.00503540]
[-112.75601196 -355.00210571]
[-97.88381195 -356.99972534]
[-82.91067505 -357.98873901]
[-67.90493011 -357.96469116]
[-52.93504333 -356.92764282]
[-38.06932068 -354.88235474]
[-23.37559128 -351.83813477]
[-8.92089939 -347.80886841]
[5.22880077 -342.81298828]
[19.00894737 -336.87326050]
[32.35666275 -330.01675415]
[45.21104813 -322.27481079]
[57.51344299 -313.68273926]
[69.20772552 -304.27969360]
[80.24052429 -294.10867310]
[90.56150818 -283.21600342]
[100.12358093 -271.65139771]
[108.88311768 -259.46765137]
[116.80014038 -246.72036743]
[123.83853149 -233.46766663]
[129.96617126 -219.77003479]
[135.15510559 -205.68998718]
[139.38166809 -191.29174805]
[142.62655640 -176.64102173]
[144.87496948 -161.80467224]
[146.11665344 -146.85037231]
[146.34593201 -131.84635925]
[145.56176758 -116.86109161]
[143.76774597 -101.96295929]
[140.97203064 -87.21992493]
[137.18739319 -72.69927216]
[132.43110657 -58.46724319]
[126.72486877 -44.58877945]
[120.09471130 -31.12720490]
[112.57088470 -18.14394760]
[104.18772888 -5.69824123]
[94.98348236 6.15312290]
[85.00015259 17.35607147]
[74.28328705 27.85948563]
[62.88178253 37.61544037]
[71.84247589 49.64481735]
[80.80317688 61.67419815]
[89.76387024 73.70357513]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[122.26551056 117.33573151]
[131.22621155 129.36511230]
[140.18690491 141.39448547]
[149.14759827 153.42385864]
[158.10829163 165.45324707]
[167.06898499 177.48262024]
[179.66311646 169.32478333]
[192.76382446 162.00810242]
[206.31501770 155.56393433]
[220.25866699 150.01985168]
[234.53506470 145.39959717]
[249.08306885 141.72296143]
[263.84039307 139.00569153]
[278.74383545 137.25941467]
[293.72958374 136.49160767]
[308.73348999 136.70556641]
[323.69125366 137.90037537]
[338.53884888 140.07090759]
[353.21267700 143.20788574]
[367.64993286 147.29785156]
[381.78878784 152.32331848]
[395.56866455 158.26275635]
[408.93060303 165.09071350]
[421.81735229 172.77796936]
[434.17373657 181.29161072]
[445.94683838 190.59516907]
[457.08624268 200.64881897]
[467.54428101 211.40948486]
[477.27612305 222.83110046]
[486.24011230 234.86476135]
[494.39788818 247.45893860]
[501.71447754 260.55969238]
[508.15856934 274.11093140]
[513.70257568 288.05459595]
[518.32275391 302.33102417]
[521.99926758 316.87905884]
[524.71649170 331.63641357]
[526.46264648 346.53985596]
[527.23040771 361.52563477]
[527.01635742 376.52951050]
[525.82141113 391.48724365]
[523.65081787 406.33483887]
[520.51373291 421.00866699]
[516.42370605 435.44589233]
[511.39816284 449.58471680]
[505.45864868 463.36456299]
[498.63058472 476.72647095]
[490.94326782 489.61315918]
[482.42953491 501.96948242]
[473.12591553 513.74255371]
[463.07220459 524.88189697]
[452.31149292 535.33984375]
[440.88980103 545.07165527]
[428.85607910 554.03558350]
[416.26187134 562.19323730]
[403.16107178 569.50976562]
[389.60980225 575.95379639]
[375.66607666 581.49768066]
[361.38964844 586.11779785]
[346.84158325 589.79425049]
[332.08422852 592.51135254]
[317.18075562 594.25744629]
[302.19500732 595.02508545]
[287.19110107 594.81091309]
[272.23336792 593.61596680]
[257.38580322 591.44525146]
[242.71199036 588.30810547]
[228.27478027 584.21795654]
[214.13600159 579.19232178]
[200.35617065 573.25274658]
[186.99432373 566.42462158]
[174.10766602 558.73718262]
[161.75138855 550.22338867]
[149.97839355 540.91973877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
