%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[11.79260159 321.45672607]
[17.94284439 335.16918945]
[21.98055649 349.64520264]
[23.81553268 364.56130981]
[23.40678215 379.58432007]
[20.76343346 394.37857056]
[15.94454098 408.61361694]
[9.05776024 421.97137451]
[0.25694546 434.15347290]
[-10.26129055 444.88772583]
[-22.26196671 453.93435669]
[-35.47698212 461.09124756]
[-49.61111069 466.19848633]
[-64.34859467 469.14202881]
[-79.36018372 469.85604858]
[-94.31051636 468.32467651]
[-108.86560059 464.58206177]
[-122.70026398 458.71182251]
[-135.50544739 450.84509277]
[-146.99505615 441.15768433]
[-156.91242981 429.86593628]
[-165.03601074 417.22216797]
[-171.18429565 403.50878906]
[-175.21995544 389.03222656]
[-177.05279541 374.11584473]
[-176.64190674 359.09289551]
[-173.99645996 344.29901123]
[-169.17553711 330.06466675]
[-162.28684998 316.70788574]
[-153.48429871 304.52703857]
[-142.96453857 293.79428101]
[-130.96257019 284.74935913]
[-117.74653625 277.59436035]
[-103.61167908 272.48913574]
[-88.87378693 269.54769897]
[-73.86209106 268.83578491]
[-58.91197586 270.36932373]
[-44.35742569 274.11401367]
[-30.52359581 279.98620605]
[-22.67184067 267.20538330]
[-14.82008553 254.42453003]
[-6.96832991 241.64369202]
[0.88342541 228.86283875]
[0.95290613 213.96839905]
[14.76922607 206.25997925]
[-0.20416233 207.15307617]
[-10.35119438 196.10601807]
[-8.19185543 181.26225281]
[4.68206930 173.56407166]
[18.78040314 178.68627930]
[23.71055603 192.85133362]
[32.49116135 180.68988037]
[41.27176285 168.52841187]
[50.05236435 156.36695862]
[47.43239975 141.74946594]
[56.16393661 129.29093933]
[71.51387787 126.64198303]
[80.29448700 114.48052979]
[89.07508850 102.31906891]
[97.76491547 90.09258270]
[106.36347961 77.80175018]
[114.96203613 65.51091003]
[115.18443298 61.17449188]
[116.62979889 57.50360107]
[118.93874359 54.80097961]
[121.69047546 53.22155380]
[124.45632172 52.76521301]
[133.77120972 41.00796127]
[143.08609009 29.25070953]
[152.40097046 17.49345970]
[161.71585083 5.73620749]
[170.22268677 -6.61830139]
[177.88328552 -19.51462936]
[185.54386902 -32.41095352]
[193.20446777 -45.30728149]
[200.86506653 -58.20360947]
[208.52566528 -71.09993744]
[216.18626404 -83.99626160]
[223.75064087 -96.94926453]
[231.21838379 -109.95821381]
[238.68612671 -122.96716309]
[226.25834656 -131.37892151]
[214.48574829 -140.68553162]
[203.43261719 -150.83618164]
[193.15931702 -161.77540588]
[183.72196960 -173.44346619]
[175.17211914 -185.77664185]
[167.55645752 -198.70756531]
[160.91658020 -212.16561890]
[155.28875732 -226.07730103]
[150.70370483 -240.36662292]
[147.18649292 -254.95553589]
[144.75631714 -269.76437378]
[143.42645264 -284.71221924]
[143.20416260 -299.71749878]
[144.09066772 -314.69818115]
[146.08111572 -329.57250977]
[149.16464233 -344.25921631]
[153.32440186 -358.67807007]
[158.53768921 -372.75033569]
[164.77600098 -386.39916992]
[172.00529480 -399.55001831]
[180.18606567 -412.13104248]
[189.27365112 -424.07351685]
[199.21839905 -435.31225586]
[209.96600342 -445.78585815]
[221.45776367 -455.43710327]
[233.63092041 -464.21331787]
[246.41897583 -472.06649780]
[259.75207520 -478.95382690]
[273.55743408 -484.83764648]
[287.75964355 -489.68585205]
[302.28109741 -493.47192383]
[317.04251099 -496.17520142]
[331.96325684 -497.78094482]
[346.96185303 -498.28036499]
[361.95639038 -497.67071533]
[376.86492920 -495.95532227]
[391.60607910 -493.14358521]
[406.09930420 -489.25088501]
[420.26547241 -484.29840088]
[434.02719116 -478.31326294]
[447.30932617 -471.32809448]
[460.03930664 -463.38110352]
[472.14761353 -454.51565552]
[483.56811523 -444.78018188]
[494.23843384 -434.22787476]
[504.10031128 -422.91632080]
[513.09985352 -410.90734863]
[521.18792725 -398.26654053]
[528.32031250 -385.06289673]
[534.45812988 -371.36859131]
[539.56781006 -357.25836182]
[543.62145996 -342.80929565]
[546.59692383 -328.10034180]
[548.47802734 -313.21179199]
[549.25433350 -298.22497559]
[548.92175293 -283.22174072]
[547.48205566 -268.28405762]
[544.94305420 -253.49349976]
[541.31872559 -238.93083191]
[536.62872314 -224.67561340]
[530.89880371 -210.80567932]
[524.16015625 -197.39680481]
[516.44964600 -184.52221680]
[507.80935669 -172.25221252]
[498.28649902 -160.65385437]
[487.93307495 -149.79043579]
[476.80560303 -139.72132874]
[464.96490479 -130.50151062]
[452.47564697 -122.18134308]
[439.40600586 -114.80626678]
[425.82739258 -108.41655731]
[411.81393433 -103.04711914]
[397.44223022 -98.72727966]
[382.79074097 -95.48062897]
[367.93945312 -93.32489777]
[352.96954346 -92.27186584]
[337.96273804 -92.32728577]
[323.00100708 -93.49084473]
[308.16607666 -95.75619507]
[293.53894043 -99.11096191]
[279.19952393 -103.53682709]
[265.22613525 -109.00961304]
[251.69508362 -115.49942780]
[244.22734070 -102.49047089]
[236.75959778 -89.48152161]
[236.15582275 -82.11557007]
[229.08259583 -76.33566284]
[221.42199707 -63.43933868]
[213.76139832 -50.54301071]
[206.10079956 -37.64668655]
[198.44020081 -24.75035858]
[190.77960205 -11.85403061]
[183.11900330 1.04229581]
[197.13270569 -4.30712557]
[211.83535767 -1.33524621]
[222.67118835 9.03706455]
[226.28259277 23.59583282]
[221.55053711 37.82986832]
[209.94131470 47.32859421]
[195.05215454 49.14873505]
[181.49662781 42.72629547]
[173.47506714 30.05133820]
[173.47309875 15.05109024]
[164.15821838 26.80834198]
[154.84333801 38.56559372]
[145.52845764 50.32284546]
[136.21357727 62.08009720]
[127.25287628 74.10947418]
[118.65431213 86.40031433]
[110.05574799 98.69114685]
[108.38279724 106.57617950]
[101.23654175 111.09967041]
[92.45594025 123.26113129]
[83.67533875 135.42259216]
[85.99121094 150.82630920]
[76.91318512 163.03466797]
[62.21382141 165.14756775]
[53.43321991 177.30902100]
[44.65261459 189.47047424]
[35.87201309 201.63192749]
[27.55006790 214.11172485]
[26.91897774 229.92034912]
[13.66426754 236.71459961]
[5.81251240 249.49543762]
[-2.03924298 262.27627563]
[-9.89099884 275.05712891]
[-17.74275398 287.83798218]
[-6.25175667 297.52377319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 209]
[40 208]
[41 207]
[42 206]
[43 205]
[45 203]
[51 202]
[52 201]
[53 200]
[54 199]
[57 196]
[58 195]
[59 194]
[60 192]
[61 191]
[62 190]
[67 189]
[68 188]
[69 187]
[70 186]
[71 185]
[72 175]
[73 174]
[74 173]
[75 172]
[76 171]
[77 170]
[78 169]
[79 167]
[80 166]
[81 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
