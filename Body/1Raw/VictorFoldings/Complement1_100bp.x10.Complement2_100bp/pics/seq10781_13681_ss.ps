%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[91.87656403 756.33441162]
[76.94589233 754.86450195]
[62.10206985 752.68585205]
[47.37873077 749.80334473]
[32.80922318 746.22351074]
[18.42654991 741.95452881]
[4.26329613 737.00604248]
[-9.64845562 731.38916016]
[-23.27718925 725.11676025]
[-36.59203339 718.20300293]
[-49.56282425 710.66345215]
[-62.16017532 702.51531982]
[-74.35556030 693.77697754]
[-86.12133789 684.46832275]
[-97.43086243 674.61029053]
[-108.25852203 664.22534180]
[-118.57977295 653.33691406]
[-128.37124634 641.96972656]
[-137.61074829 630.14953613]
[-146.27735901 617.90313721]
[-154.35144043 605.25817871]
[-161.81471252 592.24334717]
[-168.65026855 578.88818359]
[-174.84260559 565.22283936]
[-180.37770081 551.27838135]
[-185.24302673 537.08636475]
[-189.42755127 522.67889404]
[-192.92181396 508.08862305]
[-195.71788025 493.34860229]
[-197.80941772 478.49224854]
[-199.19168091 463.55322266]
[-199.86155701 448.56533813]
[-199.81753540 433.56253052]
[-199.05967712 418.57885742]
[-197.58973694 403.64816284]
[-195.41104126 388.80435181]
[-192.52848816 374.08102417]
[-188.94865417 359.51153564]
[-184.67962646 345.12887573]
[-179.73107910 330.96560669]
[-174.11421204 317.05389404]
[-167.84176636 303.42517090]
[-160.92794800 290.11032104]
[-153.38841248 277.13955688]
[-145.24023438 264.54223633]
[-136.50187683 252.34686279]
[-127.19315338 240.58110046]
[-117.33512115 229.27160645]
[-106.95013428 218.44396973]
[-96.06170654 208.12274170]
[-84.69451141 198.33129883]
[-72.87429047 189.09181213]
[-60.62782288 180.42523193]
[-47.98285675 172.35118103]
[-34.96803284 164.88793945]
[-21.61283493 158.05241394]
[-7.94751740 151.86010742]
[5.99696541 146.32504272]
[20.18902397 141.45974731]
[34.59650803 137.27525330]
[49.18677902 133.78103638]
[63.92678452 130.98500061]
[78.78313446 128.89349365]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[82.94699097 59.71760559]
[90.10826874 46.65753937]
[89.43848419 31.67250252]
[88.76869965 16.68746376]
[73.77711487 15.90779591]
[58.93076324 13.68485355]
[44.36827469 10.03939342]
[30.22561073 5.00545073]
[16.63482285 -1.36997092]
[3.72280693 -9.02734566]
[-8.38987637 -17.89517593]
[-19.59013367 -27.89066315]
[-29.77338600 -38.92048264]
[-38.84455490 -50.88164520]
[-46.71894073 -63.66247177]
[-53.32302475 -77.14363098]
[-58.59514236 -91.19924164]
[-62.48606873 -105.69807434]
[-64.95947266 -120.50476074]
[-65.99226379 -135.48103333]
[-65.57479095 -150.48707581]
[-63.71096039 -165.38276672]
[-60.41817474 -180.02903748]
[-55.72717285 -194.28912354]
[-49.68175888 -208.02987671]
[-42.33837891 -221.12301636]
[-33.76559448 -233.44627380]
[-24.04344940 -244.88461304]
[-13.26272106 -255.33120728]
[-1.52406859 -264.68853760]
[11.06290531 -272.86923218]
[24.38067818 -279.79687500]
[38.30490112 -285.40682983]
[52.70556259 -289.64669800]
[67.44820404 -292.47689819]
[82.39517975 -293.87097168]
[97.40692139 -293.81594849]
[112.34327698 -292.31231689]
[127.06477356 -289.37411499]
[141.43395996 -285.02880859]
[155.31668091 -279.31692505]
[168.58331299 -272.29180908]
[181.10997009 -264.01907349]
[192.77970886 -254.57594299]
[203.48356628 -244.05058289]
[213.12159729 -232.54129028]
[221.60380554 -220.15550232]
[228.85099792 -207.00888062]
[234.79551697 -193.22418213]
[239.38185120 -178.93008423]
[242.56718445 -164.26007080]
[244.32176208 -149.35112000]
[244.62919617 -134.34242249]
[243.48664856 -119.37411499]
[240.90475464 -104.58596802]
[236.90765381 -90.11604309]
[231.53262329 -76.09945679]
[224.82989502 -62.66707993]
[216.86201477 -49.94432449]
[207.70339966 -38.04998398]
[197.43955994 -27.09511757]
[186.16633606 -17.18200874]
[173.98896790 -8.40321732]
[161.02116394 -0.84070772]
[147.38398743 5.43490696]
[133.20480347 10.36503220]
[118.61598206 13.90363598]
[103.75373840 16.01767731]
[104.42352295 31.00271606]
[105.09330750 45.98775482]
[113.39118958 58.35684586]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[123.71000671 126.88540649]
[138.69371033 127.64315033]
[153.62438965 129.11299133]
[168.46821594 131.29159546]
[183.19157410 134.17404175]
[197.76109314 137.75376892]
[212.14378357 142.02270508]
[226.30706787 146.97116089]
[240.21884155 152.58792114]
[253.84761047 158.86027527]
[267.16247559 165.77401733]
[280.13330078 173.31346130]
[292.73068237 181.46154785]
[304.92611694 190.19981384]
[316.69192505 199.50846863]
[328.00149536 209.36642456]
[338.82922363 219.75134277]
[349.15051270 230.63969421]
[358.94204712 242.00683594]
[368.18161011 253.82698059]
[376.84826660 266.07339478]
[384.92239380 278.71829224]
[392.38574219 291.73306274]
[399.22134399 305.08822632]
[405.41372681 318.75350952]
[410.94891357 332.69793701]
[415.81430054 346.88998413]
[419.99890137 361.29742432]
[423.49322510 375.88766479]
[426.28933716 390.62765503]
[428.38095093 405.48400879]
[429.76327515 420.42303467]
[430.43322754 435.41091919]
[430.38925171 450.41372681]
[429.63150024 465.39743042]
[428.16162109 480.32809448]
[425.98297119 495.17190552]
[423.10049438 509.89526367]
[419.52072144 524.46478271]
[415.25177002 538.84747314]
[410.30328369 553.01074219]
[404.68649292 566.92248535]
[398.41409302 580.55126953]
[391.50033569 593.86608887]
[383.96084595 606.83691406]
[375.81274414 619.43426514]
[367.07443237 631.62969971]
[357.76574707 643.39550781]
[347.90777588 654.70501709]
[337.52285767 665.53271484]
[326.63446045 675.85400391]
[315.26730347 685.64550781]
[303.44714355 694.88500977]
[291.20071411 703.55163574]
[278.55578613 711.62579346]
[265.54098511 719.08905029]
[252.18582153 725.92462158]
[238.52052307 732.11700439]
[224.57606506 737.65216064]
[210.38403320 742.51751709]
[195.97657776 746.70208740]
[181.38632202 750.19635010]
[166.64631653 752.99243164]
[151.78997803 755.08404541]
[136.85093689 756.46630859]
[121.86305237 757.13623047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 144]
[65 143]
[67 141]
[68 140]
[70 138]
[71 137]
[72 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
