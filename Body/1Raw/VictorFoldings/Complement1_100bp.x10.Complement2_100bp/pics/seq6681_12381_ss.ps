%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[124.25341797 888.83892822]
[110.19512939 883.56524658]
[96.78945923 876.80242920]
[84.19356537 868.62988281]
[72.55513763 859.14337158]
[62.01062775 848.45410156]
[52.68366623 836.68737793]
[44.68360901 823.98126221]
[38.10424805 810.48461914]
[33.02272797 796.35571289]
[29.49862099 781.76025391]
[27.57324982 766.86932373]
[27.26918793 751.85748291]
[28.58999825 736.90075684]
[31.52019691 722.17456055]
[36.02542877 707.85150146]
[42.05287170 694.09954834]
[49.53185654 681.07983398]
[58.37469864 668.94512939]
[68.47771454 657.83764648]
[79.72245789 647.88763428]
[91.97708893 639.21173096]
[105.09792328 631.91162109]
[118.93112946 626.07299805]
[133.31451416 621.76428223]
[148.07945251 619.03594971]
[146.96380615 604.07745361]
[145.84815979 589.11901855]
[144.73251343 574.16058350]
[143.28309631 559.23077393]
[141.50062561 544.33703613]
[139.71815491 529.44329834]
[137.93569946 514.54962158]
[136.15322876 499.65588379]
[134.37075806 484.76217651]
[120.22538757 480.03207397]
[109.49234009 469.58645630]
[104.33781433 455.45874023]
[105.83451080 440.43276978]
[113.73885345 427.49411011]
[126.52877808 419.23706055]
[124.74631500 404.34332275]
[122.96384430 389.44961548]
[113.76897430 377.73196411]
[119.81156158 363.11013794]
[118.02909851 348.21643066]
[116.24662781 333.32269287]
[114.46416473 318.42898560]
[112.68170166 303.53527832]
[98.76142120 302.18240356]
[85.42485046 297.94952393]
[73.26126862 291.02096558]
[62.80869293 281.70007324]
[54.53011322 270.39620972]
[48.79295349 257.60659790]
[45.85277176 243.89450073]
[45.84188843 229.86441040]
[48.76342010 216.13539124]
[54.49104309 203.31381226]
[62.77442932 191.96650696]
[73.25020599 182.59570312]
[85.45789337 175.61689758]
[98.86012268 171.34030151]
[97.52188873 156.40011597]
[88.67996979 144.41387939]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[83.81634521 101.57114410]
[91.03981781 86.43186951]
[81.90880585 73.51152802]
[88.28004456 60.04837036]
[86.71952057 45.12976456]
[85.15899658 30.21116066]
[83.59847260 15.29255581]
[82.03794861 0.37395084]
[70.87883759 -14.27376938]
[78.64447784 -30.01104164]
[76.86200714 -44.90475845]
[74.63689423 -59.73880386]
[64.57019806 -71.94422150]
[69.92243958 -85.84396362]
[59.85574722 -98.04937744]
[65.20799255 -111.94911957]
[55.14130020 -124.15454102]
[60.49354553 -138.05427551]
[57.82774734 -152.81549072]
[42.77840424 -153.49740601]
[28.25825882 -157.51152039]
[14.99563313 -164.65647888]
[3.65577745 -174.57391357]
[-5.19250679 -186.76635742]
[-11.10539341 -200.62223816]
[-13.78629494 -215.44654846]
[-13.10073757 -230.49572754]
[-9.08310890 -245.01490784]
[-1.93493092 -258.27578735]
[7.98524570 -269.61325073]
[20.17983055 -278.45858765]
[34.03714371 -284.36810303]
[48.86211777 -287.04541016]
[63.91112900 -286.35623169]
[78.42932892 -282.33508301]
[91.68849182 -275.18368530]
[103.02353668 -265.26074219]
[111.86591339 -253.06402588]
[117.77208710 -239.20527649]
[120.44580078 -224.37966919]
[119.75295258 -209.33082581]
[115.72828674 -194.81359863]
[108.57368469 -181.55616760]
[98.64801025 -170.22352600]
[86.44914246 -161.38410950]
[72.58896637 -155.48129272]
[75.25476074 -140.72007751]
[85.13078308 -129.57048035]
[79.96920776 -114.61491394]
[89.84523010 -103.46531677]
[84.68366241 -88.50975800]
[94.55967712 -77.36016083]
[89.39810944 -62.40459824]
[91.62145233 -60.69729614]
[93.30247498 -58.00642776]
[94.06316376 -54.53414536]
[93.60559845 -50.61557770]
[91.75572968 -46.68722534]
[93.53819275 -31.79350853]
[102.85057068 -24.07300186]
[104.45745850 -11.67938805]
[96.95655060 -1.18657219]
[98.51707458 13.73203278]
[100.07759857 28.65063667]
[101.63812256 43.56924057]
[103.19864655 58.48784637]
[112.21804047 70.34111023]
[105.95842743 84.87134552]
[114.54747009 92.73706818]
[115.67284393 104.32907867]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[119.03305054 141.69506836]
[112.46207428 155.06187439]
[113.80030823 170.00205994]
[129.70214844 172.32917786]
[144.58384705 178.37467957]
[157.58990479 187.78666687]
[167.97360229 200.01985168]
[175.14002991 214.36712646]
[178.68005371 230.00044250]
[178.39370728 246.01855469]
[174.30149841 261.49905396]
[166.64297485 275.55145264]
[155.86273193 287.36837769]
[142.58456421 296.27194214]
[127.57541656 301.75280762]
[129.35787964 316.64651489]
[131.14035034 331.54022217]
[132.92282104 346.43395996]
[134.70527649 361.32766724]
[144.02764893 374.11062622]
[137.85755920 387.66714478]
[139.64002991 402.56088257]
[141.42250061 417.45458984]
[155.79969788 422.46032715]
[166.53404236 433.16830444]
[171.53427124 447.41674805]
[169.85914612 462.36178589]
[161.89416504 475.04519653]
[149.26448059 482.97970581]
[151.04695129 497.87341309]
[152.82940674 512.76715088]
[154.61187744 527.66082764]
[156.39434814 542.55456543]
[158.17680359 557.44830322]
[161.30683899 561.62561035]
[162.41111755 566.13488770]
[161.70240784 570.14898682]
[159.69096375 573.04492188]
[160.80661011 588.00335693]
[161.92225647 602.96185303]
[163.03790283 617.92028809]
[178.04421997 618.42816162]
[192.90763855 620.55560303]
[207.45390320 624.27758789]
[221.51248169 629.55053711]
[234.91851807 636.31262207]
[247.51484680 644.48449707]
[259.15377808 653.97039795]
[269.69888306 664.65911865]
[279.02645874 676.42529297]
[287.02719116 689.13098145]
[293.60729980 702.62731934]
[298.68957520 716.75592041]
[302.21447754 731.35119629]
[304.14062500 746.24200439]
[304.44549561 761.25384521]
[303.12548828 776.21063232]
[300.19610596 790.93695068]
[295.69161987 805.26025391]
[289.66491699 819.01257324]
[282.18664551 832.03265381]
[273.34445190 844.16784668]
[263.24203491 855.27587891]
[251.99783325 865.22650146]
[239.74366760 873.90307617]
[226.62322998 881.20385742]
[212.79032898 887.04321289]
[198.40718079 891.35278320]
[183.64237976 894.08190918]
[168.66906738 895.19866943]
[153.66279602 894.68994141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 180]
[27 179]
[28 178]
[29 177]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[35 168]
[41 162]
[42 161]
[43 160]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[63 142]
[64 141]
[66 139]
[67 138]
[69 135]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[77 126]
[78 125]
[79 120]
[81 118]
[83 116]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
