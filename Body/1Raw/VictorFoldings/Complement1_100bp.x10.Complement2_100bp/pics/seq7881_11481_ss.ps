%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[17.49519920 921.17864990]
[2.49342513 921.23205566]
[-12.49926376 920.70733643]
[-27.46059418 919.60522461]
[-42.36833572 917.92736816]
[-57.20034409 915.67620850]
[-71.93457794 912.85516357]
[-86.54914856 909.46838379]
[-101.02234650 905.52087402]
[-115.33267212 901.01861572]
[-129.45884705 895.96813965]
[-143.37991333 890.37707520]
[-157.07514954 884.25360107]
[-170.52424622 877.60699463]
[-183.70719910 870.44696045]
[-196.60443115 862.78424072]
[-209.19677734 854.63018799]
[-221.46553040 845.99688721]
[-233.39247131 836.89715576]
[-244.95985413 827.34460449]
[-256.15051270 817.35339355]
[-266.94784546 806.93829346]
[-277.33575439 796.11480713]
[-287.29885864 784.89910889]
[-296.82232666 773.30773926]
[-305.89202881 761.35797119]
[-314.49444580 749.06756592]
[-322.61685181 736.45477295]
[-330.24716187 723.53833008]
[-337.37402344 710.33740234]
[-343.98684692 696.87164307]
[-350.07583618 683.16107178]
[-355.63192749 669.22601318]
[-360.64685059 655.08715820]
[-365.11318970 640.76556396]
[-369.02429199 626.28253174]
[-372.37435913 611.65948486]
[-375.15835571 596.91821289]
[-377.37222290 582.08056641]
[-379.01263428 567.16870117]
[-380.07714844 552.20465088]
[-380.56420898 537.21069336]
[-380.47308350 522.20904541]
[-379.80386353 507.22213745]
[-378.55761719 492.27212524]
[-376.73611450 477.38125610]
[-374.34213257 462.57162476]
[-371.37921143 447.86526489]
[-367.85174561 433.28399658]
[-363.76495361 418.84951782]
[-359.12493896 404.58325195]
[-353.93856812 390.50640869]
[-348.21356201 376.63989258]
[-341.95843506 363.00430298]
[-335.18246460 349.61990356]
[-327.89575195 336.50656128]
[-320.10906982 323.68377686]
[-311.83401489 311.17059326]
[-303.08288574 298.98562622]
[-293.86865234 287.14694214]
[-284.20504761 275.67214966]
[-274.10641479 264.57830811]
[-263.58773804 253.88186646]
[-252.66468811 243.59873962]
[-241.35343933 233.74420166]
[-229.67083740 224.33290100]
[-217.63421631 215.37879944]
[-205.26147461 206.89521790]
[-192.57096863 198.89476013]
[-179.58158875 191.38929749]
[-166.31260681 184.38999939]
[-152.78375244 177.90724182]
[-139.01510620 171.95068359]
[-125.02715302 166.52915955]
[-110.84064484 161.65071106]
[-96.47667694 157.32261658]
[-81.95658112 153.55128479]
[-67.30193329 150.34233093]
[-52.53451157 147.70051575]
[-37.67624664 145.62974548]
[-22.74921799 144.13313293]
[-7.77560091 143.21289062]
[7.22235680 142.87036133]
[22.22237396 143.10609436]
[37.20216370 143.91969299]
[52.13946915 145.30999756]
[67.01210022 147.27490234]
[81.79796600 149.81150818]
[84.90207672 135.13619995]
[88.00617981 120.46089935]
[91.11029053 105.78559875]
[93.55602264 90.98632812]
[87.51343536 76.36450195]
[96.70830536 64.64684296]
[98.49076843 49.75312424]
[100.27323914 34.85940552]
[102.05570221 19.96569061]
[103.83816528 5.07197285]
[89.82717133 -0.52751440]
[77.74341583 -9.56329536]
[68.41080475 -21.41929436]
[62.46564102 -35.28715134]
[60.31328201 -50.22133255]
[62.10047913 -65.20359802]
[67.70537567 -79.21244049]
[76.74581909 -91.29270172]
[88.60542297 -100.62073517]
[102.47557831 -106.56054688]
[117.41058350 -108.70713806]
[132.39216614 -106.91415405]
[146.39883423 -101.30384827]
[158.47560120 -92.25874329]
[167.79905701 -80.39553833]
[173.73350525 -66.52309418]
[175.87434387 -51.58725357]
[174.07557678 -36.60637283]
[168.45985413 -22.60186577]
[159.41007996 -10.52858734]
[147.54328918 -1.20971334]
[133.66854858 4.71938038]
[118.73188782 6.85443878]
[116.94941711 21.74815559]
[115.16695404 36.64187241]
[113.38449097 51.53559113]
[111.60202026 66.42930603]
[117.77210236 79.98583221]
[108.44973755 92.76879120]
[120.88024139 84.37339783]
[135.63197327 87.09114838]
[144.25448608 99.36519623]
[141.80841064 114.16441345]
[129.69496155 123.01112366]
[114.85327911 120.83753967]
[105.78559875 108.88970947]
[102.68148804 123.56501007]
[99.57737732 138.24031067]
[96.47326660 152.91561890]
[111.01985931 156.58338928]
[125.41430664 160.80903625]
[139.63520813 165.58627319]
[153.66143799 170.90798950]
[167.47216797 176.76629639]
[181.04687500 183.15249634]
[194.36538696 190.05706787]
[207.40792847 197.46978760]
[220.15510559 205.37963867]
[232.58798218 213.77484131]
[244.68809509 222.64294434]
[256.43746948 231.97077942]
[267.81863403 241.74447632]
[278.81469727 251.94950867]
[289.40930176 262.57073975]
[299.58673096 273.59234619]
[309.33184814 284.99798584]
[318.63018799 296.77072144]
[327.46789551 308.89303589]
[335.83190918 321.34692383]
[343.70974731 334.11389160]
[351.08975220 347.17498779]
[357.96090698 360.51077271]
[364.31301880 374.10144043]
[370.13665771 387.92681885]
[375.42318726 401.96636963]
[380.16476440 416.19921875]
[384.35427856 430.60421753]
[387.98556519 445.15994263]
[391.05319214 459.84484863]
[393.55264282 474.63702393]
[395.48016357 489.51455688]
[396.83291626 504.45529175]
[397.60888672 519.43707275]
[397.80691528 534.43762207]
[397.42672729 549.43469238]
[396.46884155 564.40594482]
[394.93472290 579.32916260]
[392.82662964 594.18218994]
[390.14770508 608.94293213]
[386.90194702 623.58947754]
[383.09414673 638.10003662]
[378.72994995 652.45306396]
[373.81588745 666.62725830]
[368.35922241 680.60156250]
[362.36810303 694.35522461]
[355.85137939 707.86773682]
[348.81875610 721.11907959]
[341.28067017 734.08953857]
[333.24835205 746.75988770]
[324.73370361 759.11132812]
[315.74938965 771.12536621]
[306.30874634 782.78430176]
[296.42581177 794.07073975]
[286.11526489 804.96795654]
[275.39242554 815.45971680]
[264.27325439 825.53045654]
[252.77421570 835.16516113]
[240.91241455 844.34960938]
[228.70549011 853.07006836]
[216.17155457 861.31365967]
[203.32925415 869.06811523]
[190.19764709 876.32189941]
[176.79624939 883.06420898]
[163.14498901 889.28503418]
[149.26411438 894.97515869]
[135.17428589 900.12615967]
[120.89640045 904.73028564]
[106.45169830 908.78076172]
[91.86162567 912.27160645]
[77.14786530 915.19757080]
[62.33227539 917.55432129]
[47.43686676 919.33837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 137]
[89 136]
[90 135]
[91 134]
[92 127]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
