%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[57.44188690 801.74749756]
[42.44242859 802.09368896]
[27.44540787 801.65441895]
[12.49192619 800.43090820]
[-2.37702513 798.42645264]
[-17.12069321 795.64654541]
[-31.69866562 792.09881592]
[-46.07098389 787.79296875]
[-60.19825745 782.74084473]
[-74.04176331 776.95629883]
[-87.56355286 770.45520020]
[-100.72657013 763.25524902]
[-113.49473572 755.37634277]
[-125.83304596 746.83996582]
[-137.70768738 737.66955566]
[-149.08612061 727.89025879]
[-159.93713379 717.52880859]
[-170.23101807 706.61370850]
[-179.93952942 695.17480469]
[-189.03607178 683.24346924]
[-197.49569702 670.85241699]
[-205.29524231 658.03558350]
[-212.41331482 644.82812500]
[-218.83041382 631.26629639]
[-224.52893066 617.38714600]
[-229.49325562 603.22875977]
[-233.70979309 588.83001709]
[-237.16697693 574.23028564]
[-239.85533142 559.46966553]
[-241.76748657 544.58856201]
[-242.89820862 529.62774658]
[-243.24438477 514.62829590]
[-242.80508423 499.63128662]
[-241.58148193 484.67782593]
[-239.57696533 469.80886841]
[-236.79701233 455.06521606]
[-233.24923706 440.48724365]
[-228.94338989 426.11492920]
[-223.89123535 411.98767090]
[-218.10664368 398.14419556]
[-211.60546875 384.62243652]
[-204.40551758 371.45944214]
[-196.52655029 358.69128418]
[-187.99014282 346.35299683]
[-178.81968689 334.47839355]
[-169.04032898 323.09997559]
[-158.67887878 312.24899292]
[-147.76373291 301.95516968]
[-136.32479858 292.24667358]
[-124.39344788 283.15017700]
[-112.00237274 274.69058228]
[-99.18553162 266.89108276]
[-85.97805786 259.77304077]
[-72.41616058 253.35598755]
[-58.53700638 247.65751648]
[-44.37863541 242.69322205]
[-29.97985649 238.47673035]
[-15.38013554 235.01959229]
[-0.61949110 232.33128357]
[14.26162052 230.41917419]
[29.22241020 229.28849792]
[44.22187042 228.94236755]
[59.21889114 229.38171387]
[74.17236328 230.60534668]
[76.17637634 215.73982239]
[78.18038940 200.87429810]
[80.18440247 186.00877380]
[82.18841553 171.14323425]
[84.19242859 156.27770996]
[77.11014557 146.47119141]
[78.65805817 134.07008362]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[88.78869629 72.02370453]
[98.32836914 60.58500671]
[100.55348969 45.75096512]
[85.98684692 42.12359619]
[71.83097839 37.12799072]
[58.21407700 30.80938721]
[45.25946426 23.22501373]
[33.08445740 14.44355488]
[21.79932404 4.54453850]
[11.50626469 -6.38238525]
[2.29849529 -18.23825836]
[-5.74059391 -30.91571236]
[-12.53819752 -44.29993057]
[-18.03275490 -58.26970673]
[-22.17450714 -72.69851685]
[-24.92594147 -87.45569611]
[-26.26214027 -102.40760040]
[-26.17100525 -117.41880798]
[-24.65335846 -132.35337830]
[-21.72294807 -147.07606506]
[-17.40630913 -161.45353699]
[-11.74253654 -175.35556030]
[-4.78292370 -188.65625000]
[3.40950108 -201.23516846]
[12.76054382 -212.97836304]
[23.18551826 -223.77951050]
[34.59001160 -233.54077148]
[46.87074280 -242.17375183]
[59.91649246 -249.60028076]
[73.60910797 -255.75308228]
[87.82459259 -260.57644653]
[102.43420410 -264.02667236]
[117.30562592 -266.07254028]
[132.30418396 -266.69549561]
[147.29403687 -265.88992310]
[162.13943481 -263.66308594]
[176.70594788 -260.03518677]
[190.86163330 -255.03907776]
[204.47830200 -248.71998596]
[217.43264771 -241.13513184]
[229.60733032 -232.35322571]
[240.89210510 -222.45379639]
[251.18476868 -211.52650452]
[260.39208984 -199.67028809]
[268.43072510 -186.99255371]
[275.22784424 -173.60807800]
[280.72189331 -159.63810730]
[284.86312866 -145.20913696]
[287.61401367 -130.45185852]
[288.94967651 -115.49991608]
[288.85797119 -100.48870850]
[287.33978271 -85.55419159]
[284.40884399 -70.83161163]
[280.09167480 -56.45430756]
[274.42739868 -42.55248260]
[267.46731567 -29.25203896]
[259.27441406 -16.67342949]
[249.92295837 -4.93057108]
[239.49758911 5.87019014]
[228.09272766 15.63103771]
[215.81169128 24.26357460]
[202.76567078 31.68961906]
[189.07283020 37.84192276]
[174.85716248 42.66476059]
[160.24743652 46.11446381]
[145.37593079 48.15978622]
[130.37736511 48.78220367]
[115.38753510 47.97608185]
[113.16241455 62.81012344]
[118.92613220 76.54434204]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[110.51709747 144.99055481]
[99.05796051 158.28172302]
[97.05394745 173.14724731]
[95.04993439 188.01278687]
[93.04592133 202.87831116]
[91.04190826 217.74383545]
[89.03789520 232.60935974]
[103.78157806 235.38919067]
[118.35957336 238.93682861]
[132.73191833 243.24255371]
[146.85922241 248.29457092]
[160.70275879 254.07904053]
[174.22459412 260.58010864]
[187.38764954 267.77990723]
[200.15586853 275.65878296]
[212.49423218 284.19506836]
[224.36892700 293.36541748]
[235.74740601 303.14468384]
[246.59849548 313.50601196]
[256.89242554 324.42108154]
[266.60101318 335.85992432]
[275.69763184 347.79119873]
[284.15734863 360.18218994]
[291.95697021 372.99896240]
[299.07510376 386.20635986]
[305.49227905 399.76821899]
[311.19088745 413.64730835]
[316.15530396 427.80563354]
[320.37191772 442.20437622]
[323.82919312 456.80407715]
[326.51763916 471.56469727]
[328.42990112 486.44580078]
[329.56069946 501.40655518]
[329.90695190 516.40600586]
[329.46774292 531.40307617]
[328.24426270 546.35650635]
[326.23980713 561.22546387]
[323.45996094 575.96917725]
[319.91226196 590.54718018]
[315.60650635 604.91949463]
[310.55444336 619.04675293]
[304.76992798 632.89031982]
[298.26882935 646.41210938]
[291.06896973 659.57513428]
[283.19006348 672.34332275]
[274.65371704 684.68170166]
[265.48333740 696.55633545]
[255.70407104 707.93481445]
[245.34268188 718.78582764]
[234.42759705 729.07977295]
[222.98872375 738.78833008]
[211.05741882 747.88488770]
[198.66639709 756.34454346]
[185.84960938 764.14416504]
[172.64218140 771.26226807]
[159.08032227 777.67938232]
[145.20118713 783.37792969]
[131.04284668 788.34234619]
[116.64409637 792.55889893]
[102.04440308 796.01611328]
[87.28376770 798.70452881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[72 149]
[73 148]
[75 146]
[77 144]
[78 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
