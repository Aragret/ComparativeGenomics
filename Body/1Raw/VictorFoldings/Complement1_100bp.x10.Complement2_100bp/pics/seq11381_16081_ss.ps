%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[191.49131775 536.83166504]
[199.29760742 523.91021729]
[210.30137634 513.57482910]
[223.68606567 506.59252930]
[220.58197021 491.91723633]
[217.47785950 477.24194336]
[214.37374878 462.56661987]
[211.26963806 447.89132690]
[208.16552734 433.21603394]
[197.96191406 422.36541748]
[202.67591858 407.26281738]
[199.57180786 392.58749390]
[196.46769714 377.91220093]
[186.26408386 367.06158447]
[190.97808838 351.95898438]
[187.87397766 337.28369141]
[183.47297668 322.94384766]
[177.81019592 309.05380249]
[172.14739990 295.16378784]
[166.48461914 281.27374268]
[160.82183838 267.38372803]
[155.15904236 253.49369812]
[149.49626160 239.60368347]
[143.83346558 225.71365356]
[131.86393738 216.84915161]
[133.81886292 201.14918518]
[128.15606689 187.25915527]
[116.18652344 178.39466858]
[118.14144897 162.69470215]
[112.47866821 148.80467224]
[106.71263123 134.95718384]
[100.84367371 121.15300751]
[85.40117645 115.33088684]
[78.83103943 100.19149780]
[85.12622070 84.93572998]
[79.05238342 71.22045898]
[72.97855377 57.50519562]
[66.90471649 43.78992844]
[60.83088303 30.07466125]
[58.11357498 44.82648468]
[48.92478180 56.68254089]
[35.31730270 62.99415970]
[20.33108521 62.35131073]
[7.31408644 54.89760208]
[-0.82566231 42.29821777]
[-2.26972055 27.36789131]
[3.30451846 13.44209194]
[14.65175533 3.63188243]
[29.23698807 0.12888734]
[43.80183792 3.71568489]
[55.09249496 13.59099293]
[51.33619690 -0.93106586]
[40.38958740 -12.35395241]
[44.69319153 -26.61327362]
[40.93688965 -41.13533401]
[37.18059158 -55.65739059]
[33.42428970 -70.17945099]
[29.83753204 -55.61458969]
[21.77136230 -42.96797562]
[10.07702351 -33.57423019]
[-4.01135254 -28.42469978]
[-19.00698662 -28.06282997]
[-33.32735443 -32.52680588]
[-45.46119308 -41.34553528]
[-54.12798691 -53.58835602]
[-58.41311264 -67.96325684]
[-57.86434937 -82.95320892]
[-52.53960419 -96.97630310]
[-43.00082016 -108.55264282]
[-30.25464058 -116.46054077]
[-15.64620209 -119.86547089]
[-0.71716869 -118.40809631]
[12.95696449 -112.24221039]
[23.93313217 -102.01852417]
[31.05305672 -88.81578827]
[31.05305672 -103.81578827]
[31.05305672 -118.81578827]
[31.05305672 -133.81578064]
[31.05305672 -148.81578064]
[31.05305672 -163.81578064]
[15.44422626 -170.97499084]
[4.57010603 -184.19410706]
[0.58106726 -200.78286743]
[4.23260403 -217.39248657]
[14.74280548 -230.69171143]
[29.95917130 -238.03488159]
[29.51256561 -253.02824402]
[29.06595993 -268.02157593]
[28.50774765 -283.01119995]
[27.83796310 -297.99624634]
[15.05629158 -306.59478760]
[9.84942627 -320.90359497]
[14.01721764 -335.36364746]
[25.75994110 -344.48760986]
[25.09015656 -359.47265625]
[24.42037201 -374.45767212]
[23.75058556 -389.44271851]
[9.56020069 -394.97018433]
[-1.15052640 -405.79608154]
[-6.52589607 -420.04479980]
[-5.63459349 -435.24758911]
[1.36895835 -448.77053833]
[13.27135086 -458.27069092]
[28.01042366 -462.10211182]
[43.03254318 -459.60092163]
[55.73503494 -451.20053101]
[63.91711807 -438.35635376]
[66.16119385 -423.29367065]
[62.07846451 -408.62222290]
[52.37628937 -396.88394165]
[38.73562622 -390.11251831]
[39.40541077 -375.12747192]
[40.07519531 -360.14242554]
[40.74497986 -345.15737915]
[53.25487900 -337.11746216]
[58.69611359 -323.08688354]
[54.78657913 -308.37060547]
[42.82300186 -298.66601562]
[43.49278641 -283.68096924]
[46.93182373 -277.13922119]
[44.05931091 -268.46820068]
[44.50591660 -253.47483826]
[44.95252228 -238.48149109]
[57.21052551 -234.18206787]
[67.30269623 -225.95269775]
[74.01409149 -214.75607300]
[76.52726746 -201.91371155]
[74.52178955 -188.95004272]
[68.21490479 -177.41136169]
[58.33826447 -168.68150330]
[46.05305862 -163.81578064]
[46.05305862 -148.81578064]
[46.05305862 -133.81578064]
[46.05305862 -118.81578827]
[46.05305862 -103.81578827]
[46.05305862 -88.81578827]
[47.94635010 -73.93575287]
[51.70264816 -59.41369247]
[55.45895004 -44.89163208]
[59.21525192 -30.36957359]
[69.89318085 -19.98540306]
[65.85825348 -4.68736649]
[69.61455536 9.83469296]
[74.54615021 24.00082779]
[80.61997986 37.71609497]
[86.69381714 51.43136215]
[92.76765442 65.14662933]
[98.84148407 78.86189270]
[111.12464905 81.98878479]
[119.41993713 91.57220459]
[120.75370789 104.17675018]
[114.64785004 115.28404999]
[120.51680756 129.08822632]
[126.75442505 135.76130676]
[126.36869049 143.14189148]
[132.03147888 157.03190613]
[144.40606689 166.88992310]
[142.04609680 181.59637451]
[147.70887756 195.48640442]
[160.08346558 205.34440613]
[157.72349548 220.05085754]
[163.38629150 233.94088745]
[169.04907227 247.83091736]
[174.71185303 261.72094727]
[180.37464905 275.61096191]
[186.03742981 289.50100708]
[191.70022583 303.39102173]
[197.36300659 317.28103638]
[200.13142395 302.53872681]
[208.95227051 290.40643311]
[222.12236023 283.22671509]
[237.09878540 282.38583374]
[250.98979187 288.04620361]
[261.11328125 299.11483765]
[265.51455688 313.45462036]
[263.34378052 328.29669189]
[255.02011108 340.77536011]
[242.15072632 348.48110962]
[227.22048950 349.92614746]
[213.11221313 344.83142090]
[202.54928589 334.17956543]
[205.65339661 348.85488892]
[216.07902527 360.75515747]
[211.14299011 374.80810547]
[214.24710083 389.48339844]
[217.35121155 404.15869141]
[227.77685547 416.05899048]
[222.84082031 430.11190796]
[225.94493103 444.78723145]
[229.04904175 459.46252441]
[232.15315247 474.13781738]
[235.25726318 488.81314087]
[238.36137390 503.48843384]
[253.42697144 504.45294189]
[267.67330933 509.44741821]
[280.04318237 518.10125732]
[289.61868286 529.77221680]
[295.68923950 543.59436035]
[297.80438232 558.54187012]
[295.80715942 573.50561523]
[289.84576416 587.37518311]
[280.36257935 599.12133789]
[268.06130981 607.87243652]
[253.85481262 612.97906494]
[238.79728699 614.06231689]
[224.00610352 611.04180908]
[210.57887268 604.14166260]
[199.51197815 593.87390137]
[191.62666321 581.00054932]
[187.50805664 566.47674561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[11 186]
[12 185]
[13 184]
[15 182]
[16 181]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[26 159]
[27 158]
[29 156]
[30 155]
[31 153]
[32 152]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[51 143]
[52 142]
[54 140]
[55 139]
[56 138]
[57 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[86 123]
[87 122]
[88 121]
[89 119]
[90 118]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
