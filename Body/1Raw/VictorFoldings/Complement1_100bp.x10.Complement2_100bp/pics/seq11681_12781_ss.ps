%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[277.67984009 450.94793701]
[270.60272217 437.72241211]
[263.52563477 424.49688721]
[256.44851685 411.27136230]
[243.62170410 403.70019531]
[243.93267822 387.88204956]
[231.10588074 380.31091309]
[231.41685486 364.49276733]
[224.33973694 351.26724243]
[217.26263428 338.04168701]
[210.18553162 324.81616211]
[203.01016235 311.64370728]
[195.73693848 298.52499390]
[182.79882812 291.14566040]
[182.87425232 275.32464600]
[175.60102844 262.20593262]
[164.06311035 258.57235718]
[157.89630127 247.70246887]
[160.88092041 235.15437317]
[153.80381775 221.92883301]
[139.51850891 217.87103271]
[132.15292358 204.55928040]
[136.50598145 189.60305786]
[129.42887878 176.37753296]
[126.17842865 175.01116943]
[123.42829895 172.00254822]
[121.94315338 167.60394287]
[122.34606171 162.39964294]
[115.86656952 148.87130737]
[109.28653717 135.39157104]
[102.60634613 121.96118927]
[95.92614746 108.53081512]
[91.46039581 105.77926636]
[88.85417938 100.72150421]
[89.25371552 94.59963226]
[82.97635651 80.97631836]
[76.69898987 67.35300446]
[70.42163086 53.72968674]
[64.14427185 40.10636902]
[51.34185028 30.81075096]
[53.04278183 16.01358604]
[46.76542282 2.39027047]
[40.38681793 -11.18593693]
[33.90732193 -24.71428299]
[27.42782593 -38.24262619]
[20.94832993 -51.77097321]
[17.62422752 -37.14393234]
[6.99469042 -26.56031609]
[-7.64660645 -23.29957390]
[-21.76289558 -28.37208366]
[-30.98009300 -40.20607376]
[-32.44215012 -55.13464737]
[-25.69602966 -68.53202820]
[-12.83209419 -76.24689484]
[2.16362882 -75.88871002]
[14.64471626 -67.56826019]
[3.53747797 -74.12509155]
[-0.01170758 -86.10787201]
[5.37686825 -96.93791199]
[0.97587037 -111.27776337]
[-3.42512774 -125.61760712]
[-14.87087631 -136.54031372]
[-11.20827675 -150.97756958]
[-22.65402603 -161.90028381]
[-18.99142456 -176.33753967]
[-23.39242363 -190.67738342]
[-27.79342079 -205.01724243]
[-32.19441986 -219.35708618]
[-36.59541702 -233.69692993]
[-41.04644394 -219.37252808]
[-51.57899857 -208.69239807]
[-65.84008026 -204.04249573]
[-80.64372253 -206.46160889]
[-92.68275452 -215.40933228]
[-99.26763153 -228.88670349]
[-98.92726898 -243.88282776]
[-91.73770905 -257.04757690]
[-79.30511475 -265.43984985]
[-64.40696716 -267.18484497]
[-50.37153625 -261.89273071]
[-40.33437347 -250.74569702]
[-42.33838654 -265.61123657]
[-44.34239960 -280.47674561]
[-53.85405350 -293.11950684]
[-47.88648987 -306.76638794]
[-62.90927887 -307.61038208]
[-77.50080109 -311.28244019]
[-91.13356781 -317.64984131]
[-103.31478119 -326.48245239]
[-113.60408783 -337.46090698]
[-121.62953949 -350.18838501]
[-127.10102081 -364.20477295]
[-129.82073975 -379.00341797]
[-129.69038391 -394.04931641]
[-126.71465302 -408.79861450]
[-121.00112915 -422.71810913]
[-112.75634766 -435.30462646]
[-102.27836609 -446.10314941]
[-89.94593811 -454.72332764]
[-76.20487976 -460.85357666]
[-61.55192566 -464.27227783]
[-46.51676941 -464.85580444]
[-31.64291954 -462.58312988]
[-17.46805763 -457.53637695]
[-4.50459719 -449.89797974]
[6.77884150 -439.94406128]
[15.97437000 -428.03445435]
[22.74957466 -414.59967041]
[26.85953522 -400.12539673]
[28.15568161 -385.13485718]
[26.59115791 -370.16992188]
[22.22252083 -355.77160645]
[15.20769215 -342.46038818]
[5.80025625 -330.71743774]
[-5.65971613 -320.96728516]
[-18.75795364 -313.56237793]
[-33.02096176 -308.77041626]
[-23.65265083 -297.19094849]
[-29.47687149 -282.48077393]
[-27.47285843 -267.61523438]
[-25.46884346 -252.74971008]
[-22.25556946 -238.09793091]
[-17.85457230 -223.75808716]
[-13.45357418 -209.41822815]
[-9.05257607 -195.07838440]
[-4.65157795 -180.73854065]
[6.47938204 -170.84152222]
[3.13157082 -155.37857056]
[14.26253128 -145.48155212]
[10.91471958 -130.01860046]
[15.31571770 -115.67875671]
[19.71671486 -101.33891296]
[33.18960953 -90.09400177]
[28.91744995 -72.18226624]
[34.47667694 -58.25046921]
[40.95617294 -44.72212219]
[47.43566895 -31.19377708]
[53.91516495 -17.66543198]
[59.63959503 -12.99074841]
[60.38874054 -3.88709021]
[66.66609955 9.73622608]
[79.01952362 18.05741501]
[77.76758575 33.82901001]
[84.04495239 47.45232773]
[90.32231140 61.07564163]
[96.59967041 74.69895935]
[102.87702942 88.32227325]
[109.35652924 101.85061646]
[116.03672028 115.28099823]
[122.71691895 128.71136475]
[129.34066772 135.00134277]
[129.39491272 142.39179993]
[135.87440491 155.92015076]
[142.65440369 169.30043030]
[149.73150635 182.52595520]
[164.58993530 187.20191956]
[171.57873535 200.71530151]
[167.02934265 214.85173035]
[174.10644531 228.07725525]
[189.96960449 237.42829895]
[188.71972656 254.93272400]
[195.99295044 268.05142212]
[209.45129395 276.36907959]
[208.85563660 291.25177002]
[216.12886047 304.37045288]
[223.02685547 310.35839844]
[223.41105652 317.73907471]
[230.48815918 330.96459961]
[237.56527710 344.19012451]
[244.64237976 357.41564941]
[257.97537231 365.93276978]
[257.15820312 380.80493164]
[270.49121094 389.32208252]
[269.67404175 404.19424438]
[276.75115967 417.41976929]
[283.82824707 430.64529419]
[290.90536499 443.87081909]
[305.19494629 439.18261719]
[320.08154297 437.04718018]
[335.11279297 437.52941895]
[349.83190918 440.61465454]
[363.79159546 446.20913696]
[376.56762695 454.14285278]
[387.77175903 464.17474365]
[397.06350708 475.99990845]
[404.16052246 489.25900269]
[408.84710693 503.54910278]
[410.98086548 518.43597412]
[410.49691772 533.46716309]
[407.41000366 548.18591309]
[401.81393433 562.14495850]
[393.87875366 574.92010498]
[383.84561157 586.12310791]
[372.01940918 595.41351318]
[358.75949097 602.50903320]
[344.46887207 607.19396973]
[329.58178711 609.32604980]
[314.55062866 608.84039307]
[299.83221436 605.75183105]
[285.87380981 600.15417480]
[273.09954834 592.21752930]
[261.89770508 582.18310547]
[252.60864258 570.35583496]
[245.51463318 557.09515381]
[240.83129883 542.80395508]
[238.70092773 527.91662598]
[239.18826294 512.88555908]
[242.27850342 498.16748047]
[247.87774658 484.20971680]
[255.81582642 471.43637085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[6 172]
[8 170]
[9 169]
[10 168]
[11 167]
[12 165]
[13 164]
[15 162]
[16 161]
[19 159]
[20 158]
[23 155]
[24 154]
[28 153]
[29 152]
[30 150]
[31 149]
[32 148]
[35 147]
[36 146]
[37 145]
[38 144]
[39 143]
[41 141]
[42 140]
[43 138]
[44 137]
[45 136]
[46 135]
[56 134]
[59 132]
[60 131]
[61 130]
[63 128]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[81 121]
[82 120]
[83 119]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
