%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[123.93073273 461.27359009]
[108.89839935 464.74234009]
[94.38476562 459.51184082]
[85.02108765 447.25112915]
[83.79528046 431.87255859]
[91.09849548 418.28332520]
[104.60030365 410.81976318]
[105.49311829 395.84637451]
[106.38593292 380.87295532]
[107.27874756 365.89956665]
[100.31270599 352.73431396]
[108.85769653 339.41915894]
[101.89164734 326.25390625]
[110.43663788 312.93872070]
[103.47059631 299.77349854]
[112.01557922 286.45831299]
[112.90839386 271.48492432]
[105.94235229 258.31967163]
[114.48733521 245.00450134]
[115.38014984 230.03109741]
[116.27296448 215.05769348]
[115.04598999 200.10795593]
[111.72373199 185.48049927]
[101.35970306 174.78300476]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[77.05902863 85.38723755]
[62.28851318 88.00104523]
[49.91744232 79.51832581]
[47.03252411 64.79836273]
[55.28636932 52.27342606]
[69.95079803 49.11836624]
[82.62481689 57.13976669]
[80.39970398 42.30572510]
[78.17458344 27.47168159]
[75.94946289 12.63763714]
[73.72434998 -2.19640636]
[71.49922943 -17.03045082]
[64.02985382 -4.02243805]
[50.76288986 2.97668529]
[35.80926132 1.79816604]
[23.80250359 -7.19281912]
[18.46304703 -21.21031570]
[21.44537926 -35.91085052]
[31.82539177 -46.73929977]
[46.38672256 -50.34035492]
[60.61738968 -45.59818649]
[70.10796356 -33.98197174]
[66.85113525 -42.51607513]
[69.99463654 -49.20488358]
[69.99463654 -64.20488739]
[69.99463654 -79.20488739]
[69.99463654 -94.20488739]
[69.99463654 -109.20488739]
[69.99463654 -124.20488739]
[60.41994858 -139.93405151]
[69.78067017 -154.77804565]
[69.55734253 -169.77638245]
[69.33401489 -184.77471924]
[69.11068726 -199.77305603]
[68.88735962 -214.77139282]
[60.94545364 -228.45483398]
[68.49240875 -241.29589844]
[56.14271927 -244.24349976]
[44.77329636 -249.87548828]
[34.95880890 -257.90286255]
[27.19434929 -267.91564941]
[21.87047958 -279.40390015]
[19.25357819 -291.78353882]
[19.47251320 -304.42620850]
[22.51230812 -316.69097900]
[28.21508598 -327.95703125]
[36.28827667 -337.65499878]
[46.31962204 -345.29571533]
[57.79821777 -350.49487305]
[70.14054108 -352.99246216]
[70.81032562 -367.97750854]
[71.48011017 -382.96252441]
[72.14989471 -397.94757080]
[57.36517334 -400.61129761]
[43.06742477 -405.22192383]
[29.51181602 -411.69717407]
[16.94025803 -419.92147827]
[5.57710552 -429.74810791]
[-4.37485170 -441.00161743]
[-12.73800945 -453.48126221]
[-19.36311722 -466.96426392]
[-24.13194275 -481.21002197]
[-26.95938110 -495.96429443]
[-27.79497147 -510.96380615]
[-26.62380409 -525.94085693]
[-23.46677780 -540.62817383]
[-18.38023376 -554.76361084]
[-11.45494843 -568.09490967]
[-2.81451106 -580.38415527]
[7.38687944 -591.41210938]
[18.96716690 -600.98187256]
[31.71968842 -608.92266846]
[45.41686249 -615.09283447]
[59.81423950 -619.38226318]
[74.65489197 -621.71429443]
[89.67395782 -622.04748535]
[104.60341644 -620.37573242]
[119.17682648 -616.72894287]
[133.13410950 -611.17218018]
[146.22619629 -603.80456543]
[158.21942139 -594.75769043]
[168.89974976 -584.19299316]
[178.07659912 -572.29888916]
[185.58618164 -559.28778076]
[191.29449463 -545.39178467]
[195.09965515 -530.85888672]
[196.93376160 -515.94854736]
[196.76406860 -500.92672729]
[194.59361267 -486.06158447]
[190.46115112 -471.61837769]
[184.44038391 -457.85485840]
[176.63880920 -445.01669312]
[167.19561768 -433.33294678]
[156.27935791 -423.01217651]
[144.08483887 -414.23852539]
[130.82966614 -407.16857910]
[116.75041962 -401.92852783]
[102.09834290 -398.61187744]
[87.13493347 -397.27780151]
[86.46514893 -382.29275513]
[85.79536438 -367.30770874]
[85.12557983 -352.32266235]
[101.59118652 -346.63848877]
[115.52371216 -336.15447998]
[125.56559753 -321.87878418]
[130.73429871 -305.18972778]
[130.51837158 -287.70263672]
[124.92811584 -271.11343384]
[114.49553680 -257.03436279]
[100.22380066 -246.83709717]
[83.49074554 -241.51922607]
[91.41667938 -228.90855408]
[83.88569641 -214.99472046]
[84.10902405 -199.99638367]
[84.33235168 -184.99804688]
[84.55567932 -169.99971008]
[84.77900696 -155.00137329]
[93.23764801 -146.35394287]
[93.54645538 -133.86041260]
[84.99463654 -124.20488739]
[84.99463654 -109.20488739]
[84.99463654 -94.20488739]
[84.99463654 -79.20488739]
[84.99463654 -64.20488739]
[84.99463654 -49.20488358]
[85.10630035 -34.20529938]
[86.33327484 -19.25556755]
[88.55839539 -4.42152357]
[90.78350830 10.41252041]
[93.00862885 25.24656296]
[95.23374176 40.08060837]
[97.45886230 54.91464996]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[131.07743835 168.03337097]
[126.35118866 182.15823364]
[129.67344666 196.78570557]
[133.46250916 182.27215576]
[141.31007385 169.48873901]
[152.53723145 159.54133606]
[166.17274475 153.29051208]
[181.03700256 151.27700806]
[195.84407043 153.67501831]
[209.31301880 160.27711487]
[220.27864075 170.51211548]
[227.79228210 183.49459839]
[231.20396423 198.10145569]
[230.21853638 213.06906128]
[224.92123413 227.10253906]
[215.77033997 238.98786926]
[203.55749512 247.69685364]
[189.33923340 252.47607422]
[174.34556580 252.91207886]
[159.87361145 248.96714783]
[147.17532349 240.98255920]
[137.34925842 229.64906311]
[131.24636841 215.95050049]
[130.35356140 230.92391968]
[129.46073914 245.89732361]
[136.36291504 260.13354492]
[127.88179779 272.37771606]
[126.98898315 287.35113525]
[133.89115906 301.58737183]
[125.41004181 313.83154297]
[132.31222534 328.06777954]
[123.83110046 340.31195068]
[130.73327637 354.54818726]
[122.25215912 366.79238892]
[121.35934448 381.76577759]
[120.46652222 396.73919678]
[119.57370758 411.71258545]
[132.09294128 420.72769165]
[137.72959900 435.08847046]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[12 203]
[14 201]
[16 199]
[17 198]
[19 196]
[20 195]
[21 194]
[22 174]
[23 173]
[25 171]
[26 170]
[27 169]
[28 168]
[30 165]
[31 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[53 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[62 148]
[63 147]
[64 146]
[65 145]
[66 144]
[68 142]
[81 133]
[82 132]
[83 131]
[84 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
