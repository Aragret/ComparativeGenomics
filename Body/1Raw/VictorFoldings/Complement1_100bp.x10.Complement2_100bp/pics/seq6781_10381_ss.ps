%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[88.67120361 767.42431641]
[73.67239380 766.99749756]
[58.72913361 765.63897705]
[43.89923477 763.35412598]
[29.24007988 760.15167236]
[14.80837536 756.04406738]
[0.65995687 751.04718018]
[-13.15043736 745.18035889]
[-26.56937790 738.46630859]
[-39.54494858 730.93096924]
[-52.02695084 722.60357666]
[-63.96709061 713.51623535]
[-75.31917572 703.70416260]
[-86.03928375 693.20532227]
[-96.08595276 682.06030273]
[-105.42029572 670.31225586]
[-114.00621033 658.00665283]
[-121.81047821 645.19104004]
[-128.80290222 631.91503906]
[-134.95643616 618.22998047]
[-140.24726868 604.18884277]
[-144.65492249 589.84588623]
[-148.16236877 575.25671387]
[-150.75601196 560.47772217]
[-152.42582703 545.56604004]
[-153.16535950 530.57934570]
[-152.97174072 515.57574463]
[-151.84573364 500.61315918]
[-149.79167175 485.74954224]
[-146.81752014 471.04235840]
[-142.93478394 456.54855347]
[-138.15847778 442.32415771]
[-132.50706482 428.42422485]
[-126.00244904 414.90252686]
[-118.66976929 401.81137085]
[-110.53739166 389.20141602]
[-101.63679504 377.12142944]
[-92.00240326 365.61816406]
[-81.67148590 354.73611450]
[-70.68402863 344.51742554]
[-59.08251953 335.00155640]
[-46.91186142 326.22537231]
[-34.21912766 318.22280884]
[-21.05342865 311.02481079]
[-7.46570206 304.65927124]
[6.49148607 299.15078735]
[20.76413727 294.52066040]
[35.29703140 290.78683472]
[50.03394699 287.96374512]
[64.91786194 286.06228638]
[79.89120483 285.08984375]
[94.89603424 285.05020142]
[95.78884888 270.07678223]
[96.68166351 255.10337830]
[97.57447815 240.12997437]
[98.46730042 225.15657043]
[99.36011505 210.18316650]
[100.14143372 195.20352173]
[100.81121826 180.21849060]
[100.25300598 165.22886658]
[98.47054291 150.33515930]
[96.68807983 135.44143677]
[94.90560913 120.54772186]
[81.70207977 110.64648438]
[79.61900330 94.27490997]
[89.92237091 81.38272095]
[87.91835785 66.51719666]
[85.91434479 51.65166473]
[83.68922424 36.81762314]
[81.24349976 22.01835060]
[78.79777527 7.21907997]
[76.35204315 -7.58019066]
[73.90631866 -22.37946129]
[71.13070679 -37.12042618]
[68.02659607 -51.79572678]
[64.92248535 -66.47103119]
[49.93759537 -65.39086151]
[34.94519424 -66.36126709]
[20.22458267 -69.36416626]
[6.05000067 -74.34362030]
[-7.31449175 -81.20686340]
[-19.61992073 -89.82603455]
[-30.63704491 -100.04057312]
[-40.16062164 -111.66017914]
[-48.01322937 -124.46839142]
[-54.04858398 -138.22659302]
[-58.15424728 -152.67849731]
[-60.25373459 -167.55484009]
[-60.30792999 -182.57852173]
[-58.31583023 -197.46963501]
[-54.31454468 -211.95077515]
[-48.37861252 -225.75216675]
[-40.61861801 -238.61669922]
[-31.17912292 -250.30471802]
[-20.23598289 -260.59848022]
[-7.99306107 -269.30621338]
[5.32156563 -276.26568604]
[19.45985413 -281.34729004]
[34.15841293 -284.45632935]
[49.14342117 -285.53488159]
[64.13571930 -284.56283569]
[78.85600281 -281.55834961]
[93.03004456 -276.57736206]
[106.39379883 -269.71267700]
[118.69829559 -261.09216309]
[129.71430969 -250.87643433]
[139.23663330 -239.25579834]
[147.08784485 -226.44673157]
[153.12171936 -212.68788147]
[157.22581482 -198.23553467]
[159.32368469 -183.35896301]
[159.37626648 -168.33528137]
[157.38255310 -153.44438171]
[153.37969971 -138.96366882]
[147.44227600 -125.16291809]
[139.68087769 -112.29922485]
[130.24012756 -100.61222839]
[119.29586792 -90.31965637]
[107.05200195 -81.61325073]
[93.73662567 -74.65520477]
[79.59778595 -69.57514191]
[82.70189667 -54.89983749]
[85.80600739 -40.22453308]
[88.54586029 -38.00517654]
[90.34686279 -34.34848022]
[90.54518127 -29.71016312]
[88.70558929 -24.82518959]
[91.15131378 -10.02591801]
[93.59704590 4.77335262]
[96.04277039 19.57262421]
[98.48849487 34.37189484]
[101.78040314 37.83201218]
[102.93362427 43.39682007]
[100.77986908 49.64765167]
[102.78388214 64.51318359]
[104.78790283 79.37870789]
[115.71001434 85.80995941]
[121.00051880 97.32795715]
[118.76291656 109.80380249]
[109.79933167 118.76525879]
[111.58179474 133.65896606]
[113.36425781 148.55268860]
[115.14672852 163.44641113]
[122.07262421 150.14106750]
[134.33558655 141.50279236]
[149.19602966 139.46138000]
[163.33407593 144.47290039]
[173.59127808 155.41775513]
[177.67614746 169.85083008]
[174.67608643 184.54776001]
[165.26135254 196.22520447]
[151.53518677 202.27438354]
[136.56408691 201.34390259]
[123.69259644 193.64164734]
[115.79625702 180.88827515]
[115.12647247 195.87330627]
[117.86956787 204.58612061]
[114.33351898 211.07597351]
[113.44070435 226.04937744]
[112.54788971 241.02278137]
[111.65506744 255.99618530]
[110.76225281 270.96960449]
[109.86943817 285.94299316]
[124.76323700 287.76544189]
[139.51492310 290.51028442]
[154.06742859 294.16693115]
[168.36445618 298.72122192]
[182.35069275 304.15554810]
[195.97200012 310.44888306]
[209.17572021 317.57690430]
[221.91075134 325.51199341]
[234.12782288 334.22344971]
[245.77966309 343.67761230]
[256.82119751 353.83786011]
[267.20971680 364.66491699]
[276.90502930 376.11688232]
[285.86962891 388.14944458]
[294.06881714 400.71606445]
[301.47085571 413.76812744]
[308.04714966 427.25512695]
[313.77224731 441.12484741]
[318.62399292 455.32369995]
[322.58358765 469.79672241]
[325.63577271 484.48788452]
[327.76867676 499.34042358]
[328.97409058 514.29681396]
[329.24734497 529.29919434]
[328.58734131 544.28955078]
[326.99670410 559.20989990]
[324.48153687 574.00244141]
[321.05157471 588.61004639]
[316.72009277 602.97613525]
[311.50384521 617.04516602]
[305.42303467 630.76269531]
[298.50119019 644.07562256]
[290.76504517 656.93249512]
[282.24456787 669.28350830]
[272.97268677 681.08093262]
[262.98532104 692.27911377]
[252.32109070 702.83471680]
[241.02124023 712.70684814]
[229.12948608 721.85742188]
[216.69186401 730.25103760]
[203.75646973 737.85510254]
[190.37335205 744.64025879]
[176.59428406 750.58032227]
[162.47259521 755.65222168]
[148.06288147 759.83636475]
[133.42092896 763.11651611]
[118.60337067 765.48010254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[57 158]
[58 156]
[59 155]
[60 143]
[61 142]
[62 141]
[63 140]
[66 136]
[67 135]
[68 134]
[69 131]
[70 130]
[71 129]
[72 128]
[73 127]
[74 123]
[75 122]
[76 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
