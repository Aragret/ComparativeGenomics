%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[79.70565796 194.75962830]
[79.04707336 209.75146484]
[77.33261108 224.65950012]
[74.57081604 239.40945435]
[70.77545166 253.92787170]
[65.96542358 268.14239502]
[60.16469574 281.98220825]
[53.40216446 295.37835693]
[45.71152496 308.26412964]
[37.13108826 320.57528687]
[27.70360374 332.25054932]
[17.47603989 343.23171997]
[6.49935055 353.46408081]
[-5.17178011 362.89666748]
[-17.47920609 371.48245239]
[-30.36161041 379.17874146]
[-43.75481415 385.94711304]
[-57.59209442 391.75390625]
[-71.80451202 396.57012939]
[-86.32125854 400.37182617]
[-101.07001495 403.14007568]
[-115.97729492 404.86105347]
[-130.96884155 405.52618408]
[-145.96997070 405.13217163]
[-160.90592957 403.68096924]
[-175.70231628 401.17980957]
[-190.28541565 397.64117432]
[-204.58258057 393.08264160]
[-218.52256775 387.52697754]
[-232.03594971 381.00183105]
[-245.05538940 373.53970337]
[-257.51602173 365.17776489]
[-269.35574341 355.95773315]
[-280.51562500 345.92547607]
[-290.94003296 335.13101196]
[-300.57705688 323.62808228]
[-309.37863159 311.47402954]
[-317.30096436 298.72940063]
[-324.30456543 285.45770264]
[-330.35455322 271.72500610]
[-335.42077637 257.59976196]
[-339.47796631 243.15234375]
[-342.50595093 228.45471191]
[-344.48965454 213.58010864]
[-345.41915894 198.60263062]
[-345.28985596 183.59689331]
[-344.10235596 168.63764954]
[-341.86260986 153.79943848]
[-338.58178711 139.15618896]
[-334.27618408 124.78083038]
[-328.96728516 110.74500275]
[-322.68154907 97.11862183]
[-315.45025635 83.96957397]
[-307.30944824 71.36336517]
[-298.29971313 59.36281204]
[-288.46588135 48.02769089]
[-277.85699463 37.41447830]
[-266.52587891 27.57604599]
[-254.52900696 18.56140900]
[-241.92611694 10.41547871]
[-228.78001404 3.17883992]
[-215.15618896 -3.11245608]
[-201.12252808 -8.42706585]
[-186.74891663 -12.73851204]
[-172.10699463 -16.02531433]
[-157.26969910 -18.27109909]
[-142.31095886 -19.46467590]
[-127.30526733 -19.60010147]
[-112.32740784 -18.67669868]
[-97.45199585 -16.69906807]
[-82.75313568 -13.67706394]
[-68.30406952 -9.62573910]
[-54.17676163 -4.56527996]
[-40.44161224 1.47910416]
[-27.16704369 8.47729969]
[-14.41918945 16.39444160]
[-2.26155949 25.19108582]
[9.24527645 34.82340622]
[20.04399300 45.24341965]
[30.08078766 56.39921188]
[39.30566025 68.23519897]
[47.67265320 80.69242096]
[55.14007950 93.70881653]
[61.67073441 107.21952820]
[75.60253143 101.66030121]
[89.53433228 96.10108185]
[103.42436218 90.43829346]
[117.27184296 84.67225647]
[131.11932373 78.90622711]
[140.88493347 66.45859528]
[155.60855103 68.70901489]
[169.45603943 62.94298172]
[183.30352783 57.17694855]
[197.15101624 51.41091537]
[210.99850464 45.64488220]
[224.84597778 39.87884903]
[219.96801758 25.68878174]
[215.99986267 11.21790504]
[212.95750427 -3.47551465]
[210.85319519 -18.33230972]
[209.69538879 -33.29265976]
[209.48876953 -48.29631805]
[210.23416138 -63.28287888]
[211.92855835 -78.19198608]
[214.56513977 -92.96361542]
[218.13330078 -107.53827667]
[222.61865234 -121.85729218]
[228.00314331 -135.86299133]
[234.26509094 -149.49899292]
[241.37928772 -162.71037292]
[249.31709290 -175.44395447]
[258.04650879 -187.64843750]
[267.53244019 -199.27470398]
[277.73663330 -210.27592468]
[288.61804199 -220.60780334]
[300.13281250 -230.22872925]
[312.23461914 -239.09997559]
[324.87469482 -247.18582153]
[338.00216675 -254.45368958]
[351.56417847 -260.87432861]
[365.50607300 -266.42190552]
[379.77178955 -271.07403564]
[394.30383301 -274.81201172]
[409.04367065 -277.62078857]
[423.93200684 -279.48904419]
[438.90884399 -280.40924072]
[453.91387939 -280.37771606]
[468.88671875 -279.39456177]
[483.76705933 -277.46374512]
[498.49499512 -274.59304810]
[513.01116943 -270.79403687]
[527.25720215 -266.08197021]
[541.17565918 -260.47586060]
[554.71057129 -253.99827576]
[567.80737305 -246.67529297]
[580.41339111 -238.53640747]
[592.47778320 -229.61436462]
[603.95202637 -219.94512939]
[614.78991699 -209.56761169]
[624.94775391 -198.52359009]
[634.38476562 -186.85755920]
[643.06280518 -174.61650085]
[650.94702148 -161.84967041]
[658.00561523 -148.60850525]
[664.21020508 -134.94630432]
[669.53576660 -120.91809082]
[673.96093750 -106.58035278]
[677.46777344 -91.99082184]
[680.04223633 -77.20824432]
[681.67395020 -62.29214096]
[682.35638428 -47.30258560]
[682.08666992 -32.29992294]
[680.86602783 -17.34457397]
[678.69927979 -2.49675441]
[675.59515381 12.18374825]
[671.56622314 26.63781929]
[666.62866211 40.80725861]
[660.80236816 54.63500977]
[654.11077881 68.06539154]
[646.58087158 81.04432678]
[638.24291992 93.51954651]
[629.13055420 105.44082642]
[619.28039551 116.76016235]
[608.73217773 127.43196869]
[597.52832031 137.41328430]
[585.71398926 146.66389465]
[573.33673096 155.14657593]
[560.44635010 162.82716370]
[547.09484863 169.67472839]
[533.33587646 175.66169739]
[519.22491455 180.76396179]
[504.81875610 184.96096802]
[490.17541504 188.23583984]
[475.35382080 190.57536316]
[460.41372681 191.97013855]
[445.41522217 192.41455078]
[430.41873169 191.90678406]
[415.48461914 190.44891357]
[400.67306519 188.04678345]
[386.04367065 184.71008301]
[371.65536499 180.45225525]
[357.56610107 175.29042053]
[343.83255005 169.24539185]
[330.51007080 162.34147644]
[317.65228271 154.60650635]
[305.31094360 146.07160950]
[293.53579712 136.77116394]
[282.37423706 126.74261475]
[271.87118530 116.02634430]
[262.06893921 104.66549683]
[253.00700378 92.70583344]
[244.72184753 80.19549561]
[237.24681091 67.18486786]
[230.61201477 53.72633362]
[216.76452637 59.49236679]
[202.91705322 65.25839996]
[189.06956482 71.02443695]
[175.22207642 76.79046631]
[161.37458801 82.55650330]
[152.59944153 94.59170532]
[136.88536072 92.75370789]
[123.03787994 98.51974487]
[109.19039154 104.28577423]
[103.55113983 110.04524231]
[95.09355927 110.03287506]
[81.16175842 115.59210205]
[67.22995758 121.15132904]
[71.79472351 135.44650269]
[75.33975220 150.02804565]
[77.84737396 164.82334900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[84 207]
[85 206]
[86 205]
[87 203]
[88 202]
[89 201]
[91 199]
[92 198]
[93 197]
[94 196]
[95 195]
[96 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
