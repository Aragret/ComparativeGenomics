%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[183.49256897 567.38720703]
[175.43434143 554.72808838]
[168.28916931 541.53204346]
[162.09262085 527.86486816]
[156.87559509 513.79461670]
[152.66406250 499.39141846]
[149.47900391 484.72702026]
[147.33630371 469.87451172]
[146.24662781 454.90780640]
[146.21540833 439.90155029]
[147.24279785 424.93048096]
[149.32366943 410.06915283]
[152.44766235 395.39163208]
[156.59922791 380.97103882]
[161.75765991 366.87921143]
[167.89727783 353.18637085]
[174.98748779 339.96072388]
[182.99295044 327.26815796]
[191.87380981 315.17190552]
[201.58580017 303.73220825]
[212.08055115 293.00610352]
[223.30575562 283.04702759]
[214.16696167 271.15240479]
[205.02815247 259.25775146]
[195.88935852 247.36312866]
[192.45962524 246.54504395]
[189.25573730 244.02507019]
[187.07328796 239.92749023]
[186.62225342 234.72714233]
[178.02369690 222.43630981]
[164.38807678 216.44302368]
[162.81716919 200.69999695]
[154.21859741 188.40916443]
[137.54754639 186.19224548]
[127.43900299 172.33106995]
[130.54278564 155.11520386]
[121.76218414 142.95375061]
[112.98158264 130.79229736]
[104.20097351 118.63083649]
[89.91375732 116.21801758]
[81.43197632 104.47043610]
[83.63756561 90.14976501]
[80.18391418 104.74676514]
[67.49315643 112.74330139]
[52.83513260 109.55860138]
[44.60662460 97.01700592]
[47.52129745 82.30290222]
[59.90949249 73.84520721]
[74.67388916 76.48835754]
[67.01329041 63.59203339]
[53.31327057 55.67875290]
[53.46555328 40.78492737]
[45.80495834 27.88860130]
[33.52134323 23.95468903]
[27.40631294 13.05559826]
[30.26237679 1.30104840]
[16.68169022 -6.81532669]
[17.05570412 -21.70523643]
[9.58796310 -34.71418762]
[2.12022185 -47.72314072]
[-11.64510727 -41.72489929]
[-25.98675537 -37.27738953]
[-40.73062515 -34.43460083]
[-55.69774628 -33.23104477]
[-70.70642090 -33.68132782]
[-85.57447052 -35.77998734]
[-100.12139893 -39.50154495]
[-114.17063141 -44.80082703]
[-127.55161285 -51.61349869]
[-140.10191345 -59.85686874]
[-151.66918945 -69.43087006]
[-162.11300659 -80.21926880]
[-171.30661011 -92.09112549]
[-179.13839722 -104.90230560]
[-185.51327515 -118.49730682]
[-190.35386658 -132.71110535]
[-193.60142517 -147.37112427]
[-195.21652222 -162.29945374]
[-195.17955017 -177.31483459]
[-193.49095154 -192.23501587]
[-190.17121887 -206.87887573]
[-185.26068115 -221.06864929]
[-178.81890869 -234.63209534]
[-170.92413330 -247.40455627]
[-161.67218018 -259.23098755]
[-151.17533875 -269.96780396]
[-139.56105042 -279.48471069]
[-126.97030640 -287.66616821]
[-113.55593109 -294.41287231]
[-99.48077393 -299.64288330]
[-84.91568756 -303.29275513]
[-70.03748322 -305.31814575]
[-55.02677155 -305.69451904]
[-40.06576157 -304.41726685]
[-25.33607101 -301.50189209]
[-11.01650238 -296.98379517]
[2.71911693 -290.91784668]
[15.70404911 -283.37762451]
[27.78067017 -274.45471191]
[38.80237961 -264.25738525]
[48.63538361 -252.90948486]
[57.16031647 -240.54870605]
[64.27369690 -227.32513428]
[69.88917542 -213.39927673]
[73.93858337 -198.94017029]
[76.37277222 -184.12336731]
[77.16217804 -169.12869263]
[76.29722595 -154.13819885]
[73.78842163 -139.33383179]
[69.66620636 -124.89532471]
[63.98063278 -110.99794006]
[56.80071259 -97.81037140]
[48.21360397 -85.49271393]
[38.32354736 -74.19448090]
[27.25060081 -64.05283356]
[15.12917423 -55.19087982]
[22.59691620 -42.18193054]
[30.06465721 -29.17297745]
[43.11119843 -21.98708916]
[43.27132797 -6.16669273]
[58.90017700 1.81491137]
[58.70128250 20.22800255]
[66.36187744 33.12432861]
[79.51396179 40.11517715]
[79.90962219 55.93143463]
[87.57021332 68.82776642]
[95.79902649 81.36916351]
[110.08624268 83.78198242]
[118.56802368 95.52956390]
[116.36243439 109.85023499]
[125.14303589 122.01168823]
[133.92364502 134.17314148]
[142.70423889 146.33459473]
[156.15982056 146.93630981]
[166.65881348 155.05920410]
[170.50541687 167.56063843]
[166.50942993 179.81059265]
[175.10800171 192.10144043]
[189.35864258 198.97383118]
[190.31452942 213.83773804]
[198.91308594 226.12857056]
[207.78398132 238.22433472]
[216.92279053 250.11895752]
[226.06159973 262.01358032]
[235.20039368 273.90823364]
[247.71516418 265.62756348]
[260.78289795 258.25033569]
[274.33843994 251.81323242]
[288.31427002 246.34838867]
[302.64080811 241.88299561]
[317.24661255 238.43931580]
[332.05895996 236.03448486]
[347.00405884 234.68051147]
[362.00741577 234.38412476]
[376.99432373 235.14678955]
[391.89010620 236.96473694]
[406.62054443 239.82888794]
[421.11224365 243.72497559]
[435.29299927 248.63359070]
[449.09222412 254.53027344]
[462.44110107 261.38568115]
[475.27313232 269.16558838]
[487.52444458 277.83132935]
[499.13394165 287.33966064]
[510.04382324 297.64321899]
[520.19970703 308.69070435]
[529.55102539 320.42703247]
[538.05114746 332.79379272]
[545.65777588 345.72933960]
[552.33300781 359.16921997]
[558.04357910 373.04647827]
[562.76098633 387.29199219]
[566.46179199 401.83477783]
[569.12756348 416.60241699]
[570.74499512 431.52130127]
[571.30603027 446.51708984]
[570.80786133 461.51510620]
[569.25292969 476.44064331]
[566.64910889 491.21929932]
[563.00927734 505.77749634]
[558.35162354 520.04266357]
[552.69927979 533.94372559]
[546.08044434 547.41143799]
[538.52807617 560.37878418]
[530.07983398 572.78100586]
[520.77777100 584.55645752]
[510.66827393 595.64642334]
[499.80169678 605.99560547]
[488.23214722 615.55249023]
[476.01727295 624.26947021]
[463.21792603 632.10314941]
[449.89788818 639.01440430]
[436.12353516 644.96887207]
[421.96343994 649.93688965]
[407.48818970 653.89367676]
[392.76989746 656.81951904]
[377.88189697 658.69989014]
[362.89831543 659.52539062]
[347.89382935 659.29187012]
[332.94320679 658.00054932]
[318.12091064 655.65777588]
[303.50076294 652.27539062]
[289.15567017 647.87005615]
[275.15704346 642.46380615]
[261.57464600 636.08361816]
[248.47612000 628.76116943]
[235.92674255 620.53308105]
[223.98904419 611.44018555]
[212.72247314 601.52789307]
[202.18319702 590.84558105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 145]
[23 144]
[24 143]
[25 142]
[29 141]
[30 140]
[32 138]
[33 137]
[36 133]
[37 132]
[38 131]
[39 130]
[42 127]
[49 126]
[50 125]
[52 123]
[53 122]
[56 120]
[58 118]
[59 117]
[60 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
