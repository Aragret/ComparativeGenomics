%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[36.54957962 688.34899902]
[23.56392288 695.90252686]
[9.68731689 701.65783691]
[-4.83259583 705.51214600]
[-19.73669052 707.39666748]
[-34.75898361 707.27777100]
[-49.63138580 705.15759277]
[-64.08848572 701.07403564]
[-77.87226868 695.09985352]
[-90.73676300 687.34173584]
[-102.45236969 677.93811035]
[-112.81002045 667.05682373]
[-121.62487030 654.89202881]
[-128.73960876 641.66088867]
[-134.02725220 627.59942627]
[-137.39344788 612.95867920]
[-138.77812195 597.99981689]
[-138.15657043 582.98992920]
[-135.53987122 568.19683838]
[-130.97473145 553.88446045]
[-124.54261017 540.30834961]
[-116.35830688 527.71069336]
[-106.56787872 516.31640625]
[-95.34604645 506.32870483]
[-82.89307404 497.92590332]
[-69.43120575 491.25796509]
[-55.20067596 486.44384766]
[-40.45544815 483.56951904]
[-25.45867538 482.68624878]
[-10.47798443 483.80978394]
[-7.37387371 469.13449097]
[-4.26976395 454.45916748]
[-10.60306072 444.15307617]
[-8.13707924 431.90142822]
[2.34089518 424.37979126]
[5.66315460 409.75234985]
[8.98541451 395.12487793]
[7.40145016 387.90597534]
[12.46755981 380.30514526]
[16.00723267 365.72875977]
[19.54690552 351.15240479]
[18.03454971 347.96725464]
[17.98981094 343.89135742]
[19.81454849 339.62243652]
[23.58380318 336.01135254]
[27.77081490 321.60757446]
[31.95782661 307.20379639]
[36.14483643 292.80001831]
[40.33184814 278.39624023]
[44.51885986 263.99246216]
[35.26082230 252.35516357]
[34.62299347 237.31996155]
[43.05937576 224.64396667]
[57.50914383 219.30444336]
[61.69615555 204.90066528]
[65.88316345 190.49688721]
[70.07017517 176.09309387]
[74.25718689 161.68931580]
[61.17742920 154.41574097]
[50.04376984 144.41439819]
[41.41431427 132.18667603]
[35.72164154 118.34548187]
[33.25111008 103.58467865]
[34.12656403 88.64417267]
[38.30412292 74.27291870]
[45.57436752 61.19130707]
[55.57286072 50.05509567]
[67.79839325 41.42252350]
[81.63813019 35.72632217]
[96.39830780 33.25202560]
[111.33902740 34.12367249]
[115.52603912 19.71989059]
[110.72248077 1.94329631]
[123.85459137 -9.69776917]
[127.82669067 -24.16229248]
[131.79878235 -38.62681580]
[135.77088928 -53.09134293]
[130.70318604 -70.79444885]
[143.66052246 -82.62973785]
[147.41682434 -97.15180206]
[151.17312622 -111.67385864]
[154.92942810 -126.19591522]
[158.68572998 -140.71797180]
[162.44203186 -155.24003601]
[164.55665588 -170.09024048]
[165.00326538 -185.08358765]
[165.44987488 -200.07693481]
[165.89646912 -215.07028198]
[166.34307861 -230.06362915]
[166.78968811 -245.05697632]
[167.23629761 -260.05032349]
[167.68289185 -275.04367065]
[168.01786804 -290.03994751]
[168.24119568 -305.03826904]
[168.46452332 -320.03662109]
[168.68785095 -335.03494263]
[168.91117859 -350.03329468]
[154.65728760 -355.14260864]
[142.83624268 -364.60525513]
[134.73033142 -377.39483643]
[131.21881104 -392.12396240]
[132.68258667 -407.19500732]
[138.96287537 -420.97314453]
[149.37844849 -431.96380615]
[162.79948425 -438.97482300]
[177.77018738 -441.24569702]
[192.66662598 -438.53009033]
[205.87298584 -431.12258911]
[215.95669556 -419.82669067]
[221.82397461 -405.86767578]
[222.83837891 -390.75973511]
[218.88986206 -376.14166260]
[210.40675354 -363.59912109]
[198.30921936 -354.49261475]
[183.90951538 -349.80996704]
[183.68618774 -334.81161499]
[183.46286011 -319.81329346]
[183.23953247 -304.81494141]
[183.01620483 -289.81661987]
[186.05976868 -283.08175659]
[182.67625427 -274.59707642]
[182.22964478 -259.60372925]
[181.78303528 -244.61038208]
[181.33642578 -229.61703491]
[180.88981628 -214.62367249]
[180.44322205 -199.63032532]
[179.99661255 -184.63697815]
[179.55000305 -169.64363098]
[187.35777283 -182.45138550]
[199.22053528 -191.63153076]
[213.57752991 -195.97624207]
[228.53987122 -194.91389465]
[242.13897705 -188.58427429]
[252.58567810 -177.82014465]
[258.50552368 -164.03771973]
[259.11962891 -149.05029297]
[254.34724426 -134.82972717]
[244.81622314 -123.24700165]
[231.78054810 -115.82599640]
[216.95529175 -113.54309082]
[202.29095459 -116.69863129]
[189.71690369 -124.87745667]
[180.88746643 -137.00349426]
[176.96409607 -151.48373413]
[173.20779419 -136.96166992]
[169.45149231 -122.43961334]
[165.69519043 -107.91755676]
[161.93888855 -93.39550018]
[158.18258667 -78.87343597]
[164.04937744 -68.29481506]
[161.03878784 -56.16550446]
[150.23541260 -49.11924362]
[146.26330566 -34.65472031]
[142.29121399 -20.19019699]
[138.31912231 -5.72567320]
[144.02775574 4.93912935]
[140.83691406 17.02227020]
[129.92982483 23.90690041]
[125.74281311 38.31068420]
[138.82257080 45.58426285]
[149.95622253 55.58559418]
[158.58567810 67.81333160]
[164.27836609 81.65451813]
[166.74888611 96.41532135]
[165.87342834 111.35582733]
[161.69587708 125.72708130]
[154.42562866 138.80870056]
[144.42713928 149.94490051]
[132.20161438 158.57746887]
[118.36186981 164.27368164]
[103.60169220 166.74797058]
[88.66097260 165.87632751]
[84.47396088 180.28010559]
[80.28694916 194.68389893]
[76.09993744 209.08767700]
[71.91292572 223.49145508]
[81.24855804 235.74511719]
[81.57495880 250.96835327]
[72.97648621 263.31866455]
[58.92264175 268.17947388]
[54.73563004 282.58325195]
[50.54861832 296.98703003]
[46.36160660 311.39080811]
[42.17459869 325.79458618]
[37.98758698 340.19836426]
[34.12327957 354.69207764]
[30.58360863 369.26843262]
[27.04393578 383.84481812]
[23.61287498 398.44714355]
[20.29061508 413.07461548]
[16.96835518 427.70205688]
[22.82148552 445.16122437]
[10.40553856 457.56329346]
[7.30142832 472.23858643]
[4.19731855 486.91390991]
[18.34987640 491.95260620]
[31.70453644 498.83276367]
[44.02296448 507.43157959]
[55.08533096 517.59558105]
[64.69420624 529.14343262]
[72.67811584 541.86901855]
[78.89457703 555.54528809]
[83.23264313 569.92803955]
[85.61490631 584.76074219]
[85.99884033 599.77856445]
[84.37760162 614.71362305]
[80.78012085 629.29925537]
[75.27059937 643.27526855]
[67.94736481 656.39221191]
[58.94110107 668.41595459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 195]
[31 194]
[32 193]
[35 191]
[36 190]
[37 189]
[39 188]
[40 187]
[41 186]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[71 159]
[72 158]
[74 155]
[75 154]
[76 153]
[77 152]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
