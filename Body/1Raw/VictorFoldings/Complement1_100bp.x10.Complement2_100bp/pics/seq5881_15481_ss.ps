%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[80.53775024 803.20129395]
[67.22200012 796.28289795]
[54.40369034 788.48138428]
[42.14130402 779.83227539]
[30.49079323 770.37506104]
[19.50531769 760.15295410]
[9.23500156 749.21246338]
[-0.27329212 737.60363770]
[-8.97618103 725.37939453]
[-16.83395386 712.59545898]
[-23.81075859 699.31024170]
[-29.87475967 685.58435059]
[-34.99829102 671.48034668]
[-39.15797043 657.06262207]
[-42.33482361 642.39703369]
[-44.51435089 627.55035400]
[-45.68660736 612.59045410]
[-45.84624863 597.58557129]
[-44.99254227 582.60412598]
[-43.12938690 567.71447754]
[-40.26527786 552.98455811]
[-36.41329193 538.48162842]
[-31.59099579 524.27185059]
[-25.82040024 510.41998291]
[-19.12783241 496.98934937]
[-11.54382801 484.04113770]
[-3.10299301 471.63449097]
[6.15615892 459.82595825]
[16.19137955 448.66946411]
[26.95688248 438.21591187]
[38.40354538 428.51296997]
[50.47913742 419.60494995]
[63.12855911 411.53247070]
[76.29409790 404.33236694]
[89.91567993 398.03747559]
[103.93115234 392.67657471]
[99.53015900 378.33673096]
[95.12915802 363.99688721]
[90.72816467 349.65704346]
[86.32716370 335.31716919]
[81.92616272 320.97732544]
[77.52516937 306.63748169]
[73.12416840 292.29763794]
[70.70549011 307.10134888]
[64.85967255 320.91534424]
[55.91732788 332.95837402]
[44.38418198 342.54934692]
[30.91249275 349.14581299]
[16.26415062 352.37475586]
[1.26759100 352.05355835]
[-13.22906017 348.20034790]
[-26.40594482 341.03308105]
[-37.51784897 330.95709229]
[-45.93633652 318.54223633]
[-51.18530273 304.49060059]
[-52.96789551 289.59689331]
[-51.18330002 274.70343018]
[-45.93244171 260.65249634]
[-37.51228333 248.23876953]
[-26.39902306 238.16427612]
[-13.22117424 230.99877930]
[1.27599525 227.14753723]
[16.27259827 226.82833862]
[30.92050552 230.05926514]
[44.39130783 236.65756226]
[55.92316055 246.25007629]
[64.86389160 258.29431152]
[70.70814514 272.11010742]
[71.60095978 257.13671875]
[72.49377441 242.16329956]
[70.73610687 239.97955322]
[69.73754883 236.96798706]
[69.81772614 233.41426086]
[71.18707275 229.71434021]
[73.91169739 226.33346558]
[75.69416809 211.43974304]
[77.47663116 196.54603577]
[79.25909424 181.65231323]
[77.37896729 178.66944885]
[76.85019684 174.62774658]
[78.15472412 170.17224121]
[81.46817017 166.13885498]
[83.91389465 151.33958435]
[86.35961914 136.54031372]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[87.98200226 77.32945251]
[97.52167511 65.89074707]
[99.74679565 51.05670547]
[101.86141968 36.20650864]
[103.86543274 21.34098053]
[105.86944580 6.47545242]
[107.65190887 -8.41826534]
[101.39229584 -22.94850159]
[110.41168976 -34.80176163]
[111.97221375 -49.72036743]
[113.53273773 -64.63896942]
[99.49426270 -70.19090271]
[87.47496796 -79.32540131]
[78.36676025 -91.36463928]
[72.84552765 -105.41520691]
[71.32098389 -120.43447113]
[73.90625763 -135.30790710]
[80.40950775 -148.93179321]
[90.34815216 -160.29515076]
[102.98467255 -168.55474854]
[117.38134766 -173.09767151]
[132.46986389 -173.58679199]
[147.13055420 -169.98583984]
[160.27548218 -162.56199646]
[170.92921448 -151.86618042]
[178.30117798 -138.69207764]
[181.84431458 -124.01731873]
[181.29571533 -108.93084717]
[176.69607544 -94.55218506]
[168.38671875 -81.94832611]
[156.98426819 -72.05455780]
[143.33485413 -65.60507202]
[128.45133972 -63.07844925]
[126.89081573 -48.15984344]
[125.33029175 -33.24123764]
[131.70152283 -19.77807999]
[122.57051849 -6.85774231]
[124.82864380 -2.64942718]
[124.46710205 3.02210808]
[120.73497009 8.47946548]
[118.73095703 23.34499359]
[116.72694397 38.21052170]
[118.94863129 45.25934601]
[114.58083344 53.28182220]
[112.35572052 68.11586761]
[118.11943817 81.85009003]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[101.15888977 138.98603821]
[98.71316528 153.78530884]
[96.26744080 168.58457947]
[94.15281677 183.43478394]
[92.37034607 198.32849121]
[90.58788300 213.22221375]
[88.80541992 228.11593628]
[87.46718597 243.05612183]
[86.57436371 258.02951050]
[85.68154907 273.00292969]
[87.46401978 287.89663696]
[91.86501312 302.23648071]
[96.26601410 316.57632446]
[100.66700745 330.91619873]
[105.06800842 345.25604248]
[109.46900940 359.59588623]
[113.87000275 373.93572998]
[118.27100372 388.27557373]
[132.88081360 384.85119629]
[147.68847656 382.42092896]
[162.62641907 380.99588013]
[177.62649536 380.58255005]
[192.62023926 381.18280029]
[207.53926086 382.79394531]
[222.31549072 385.40856934]
[236.88148499 389.01477051]
[251.17079163 393.59609985]
[265.11822510 399.13165283]
[278.66009521 405.59616089]
[291.73468018 412.96014404]
[304.28231812 421.19000244]
[316.24569702 430.24813843]
[327.57028198 440.09329224]
[338.20437622 450.68048096]
[348.09948730 461.96145630]
[357.21041870 473.88467407]
[365.49563599 486.39581299]
[372.91732788 499.43771362]
[379.44161987 512.95092773]
[385.03875732 526.87371826]
[389.68322754 541.14263916]
[393.35375977 555.69256592]
[396.03366089 570.45709229]
[397.71072388 585.36883545]
[398.37722778 600.35980225]
[398.03021240 615.36157227]
[396.67120361 630.30566406]
[394.30639648 645.12390137]
[390.94662476 659.74871826]
[386.60720825 674.11334229]
[381.30792236 688.15222168]
[375.07293701 701.80133057]
[367.93075562 714.99835205]
[359.91394043 727.68316650]
[351.05905151 739.79772949]
[341.40649414 751.28692627]
[331.00033569 762.09826660]
[319.88806152 772.18243408]
[308.12033081 781.49334717]
[295.75088501 789.98864746]
[282.83612061 797.62945557]
[269.43499756 804.38098145]
[255.60865784 810.21234131]
[241.42018127 815.09704590]
[226.93431091 819.01269531]
[212.21714783 821.94152832]
[197.33583069 823.87005615]
[182.35826111 824.78961182]
[167.35279846 824.69586182]
[152.38787842 823.58935547]
[137.53181458 821.47509766]
[122.85237122 818.36273193]
[108.41653442 814.26641846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[43 148]
[68 147]
[69 146]
[70 145]
[75 144]
[76 143]
[77 142]
[78 141]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 134]
[89 132]
[90 131]
[91 129]
[92 128]
[93 127]
[94 124]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
