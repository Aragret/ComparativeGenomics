%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[115.85427856 965.88311768]
[100.93557739 964.30084229]
[86.09942627 962.07385254]
[71.37367249 959.20629883]
[56.78596497 955.70349121]
[42.36368561 951.57208252]
[28.13391304 946.81976318]
[14.12336159 941.45550537]
[0.35833591 935.48931885]
[-13.13532162 928.93249512]
[-26.33227921 921.79730225]
[-39.20775986 914.09710693]
[-51.73759079 905.84637451]
[-63.89825058 897.06066895]
[-75.66690826 887.75634766]
[-87.02146149 877.95098877]
[-97.94060516 867.66302490]
[-108.40383911 856.91162109]
[-118.39151001 845.71710205]
[-127.88487244 834.10046387]
[-136.86610413 822.08343506]
[-145.31834412 809.68865967]
[-153.22572327 796.93939209]
[-160.57339478 783.85955811]
[-167.34756470 770.47363281]
[-173.53550720 756.80688477]
[-179.12562561 742.88494873]
[-184.10740662 728.73388672]
[-188.47151184 714.38024902]
[-192.20974731 699.85113525]
[-195.31506348 685.17364502]
[-197.78167725 670.37542725]
[-199.60491943 655.48431396]
[-200.78138733 640.52813721]
[-201.30886841 625.53503418]
[-201.18638611 610.53320312]
[-200.41413879 595.55072021]
[-198.99359131 580.61572266]
[-196.92742920 565.75634766]
[-194.21949768 551.00036621]
[-190.87490845 536.37561035]
[-186.89993286 521.90942383]
[-182.30201721 507.62899780]
[-177.08982849 493.56118774]
[-171.27311707 479.73233032]
[-164.86280823 466.16845703]
[-157.87095642 452.89498901]
[-150.31068420 439.93685913]
[-142.19616699 427.31838989]
[-133.54266357 415.06329346]
[-124.36639404 403.19454956]
[-114.68460083 391.73446655]
[-104.51545715 380.70452881]
[-93.87805939 370.12545776]
[-82.79237366 360.01712036]
[-71.27921295 350.39849854]
[-59.36019135 341.28762817]
[-47.05768585 332.70162964]
[-34.39479446 324.65664673]
[-21.39529228 317.16772461]
[-8.08358002 310.24896240]
[5.51534843 303.91336060]
[19.37596321 298.17276001]
[33.47224045 293.03799438]
[47.77772141 288.51870728]
[62.26554108 284.62332153]
[76.90850830 281.35919189]
[91.67912292 278.73245239]
[106.54965973 276.74801636]
[105.21142578 261.80783081]
[103.87319183 246.86766052]
[102.53495789 231.92747498]
[93.45658112 223.93312073]
[92.21940613 211.49716187]
[100.02939606 201.23233032]
[98.91374969 186.27388000]
[97.79809570 171.31541443]
[89.13562012 159.19886780]
[95.82508087 144.86145020]
[94.70942688 129.90299988]
[93.59378052 114.94454193]
[83.79475403 101.33001709]
[91.24282074 86.29996490]
[89.90458679 71.35977936]
[88.56635284 56.41959763]
[87.22811890 41.47941208]
[83.34557343 33.21118164]
[85.98287964 26.30709267]
[77.24060059 13.12061787]
[84.00985718 -0.14687631]
[82.89420319 -15.10532951]
[81.77855682 -30.06378365]
[66.97687531 -33.03242111]
[53.52553558 -39.88544464]
[42.42271042 -50.11431885]
[34.49230576 -62.95999146]
[30.32280922 -77.46922302]
[30.22362900 -92.56533813]
[34.20212173 -107.12810516]
[41.96305847 -120.07687378]
[52.93052292 -130.45074463]
[66.29065704 -137.47991943]
[81.05205536 -140.64279175]
[96.11932373 -139.70463562]
[110.37435913 -134.73509216]
[122.75936127 -126.10291290]
[132.35527039 -114.44867706]
[138.44999695 -100.63720703]
[140.59129333 -85.69339752]
[138.62023926 -70.72618103]
[132.68312073 -56.84622574]
[123.22049713 -45.08351517]
[110.93456268 -36.31092453]
[96.73701477 -31.17943192]
[97.85266113 -16.22097778]
[98.96830750 -1.26252496]
[107.63079071 10.85402107]
[100.94132996 25.19144440]
[102.16830444 40.14117813]
[103.50653839 55.08136368]
[104.84477234 70.02154541]
[106.18300629 84.96173096]
[114.65399170 92.95446014]
[115.60665894 104.56194305]
[108.55223083 113.82889557]
[109.66788483 128.78735352]
[110.78353119 143.74580383]
[119.52581024 156.93228149]
[112.75655365 170.19976807]
[113.87220001 185.15821838]
[114.98784637 200.11668396]
[125.70589447 215.09014893]
[117.47514343 230.58923340]
[118.81337738 245.52941895]
[120.15161133 260.46960449]
[121.48984528 275.40979004]
[136.47633362 274.71984863]
[151.47863770 274.67974854]
[166.46861267 275.28955078]
[181.41809082 276.54815674]
[196.29901123 278.45315552]
[211.08343506 281.00100708]
[225.74362183 284.18688965]
[240.25202942 288.00485229]
[254.58143616 292.44772339]
[268.70492554 297.50714111]
[282.59600830 303.17364502]
[296.22857666 309.43655396]
[309.57702637 316.28414917]
[322.61633301 323.70352173]
[335.32199097 331.68081665]
[347.67016602 340.20098877]
[359.63766479 349.24807739]
[371.20202637 358.80511475]
[382.34152222 368.85409546]
[393.03524780 379.37622070]
[403.26315308 390.35171509]
[413.00598145 401.75994873]
[422.24548340 413.57952881]
[430.96432495 425.78823853]
[439.14608765 438.36318970]
[446.77545166 451.28079224]
[453.83807373 464.51672363]
[460.32070923 478.04617310]
[466.21115112 491.84378052]
[471.49841309 505.88357544]
[476.17248535 520.13922119]
[480.22463989 534.58398438]
[483.64727783 549.19073486]
[486.43395996 563.93200684]
[488.57943726 578.78015137]
[490.07968140 593.70733643]
[490.93191528 608.68542480]
[491.13452148 623.68646240]
[490.68710327 638.68212891]
[489.59048462 653.64434814]
[487.84677124 668.54504395]
[485.45922852 683.35620117]
[482.43231201 698.05004883]
[478.77169800 712.59893799]
[474.48431396 726.97564697]
[469.57815552 741.15307617]
[464.06243896 755.10473633]
[457.94757080 768.80432129]
[451.24496460 782.22619629]
[443.96722412 795.34509277]
[436.12802124 808.13641357]
[427.74209595 820.57611084]
[418.82516479 832.64093018]
[409.39395142 844.30810547]
[399.46618652 855.55578613]
[389.06051636 866.36285400]
[378.19647217 876.70904541]
[366.89440918 886.57489014]
[355.17559814 895.94183350]
[343.06204224 904.79241943]
[330.57644653 913.10986328]
[317.74224854 920.87872314]
[304.58358765 928.08428955]
[291.12512207 934.71307373]
[277.39215088 940.75262451]
[263.41043091 946.19165039]
[249.20623779 951.01983643]
[234.80622864 955.22821045]
[220.23742676 958.80883789]
[205.52719116 961.75506592]
[190.70314026 964.06121826]
[175.79310608 965.72308350]
[160.82508850 966.73748779]
[145.82716370 967.10253906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 136]
[70 135]
[71 134]
[72 133]
[75 131]
[76 130]
[77 129]
[79 127]
[80 126]
[81 125]
[83 122]
[84 121]
[85 120]
[86 119]
[88 118]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
