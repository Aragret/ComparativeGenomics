%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[64.68304443 944.29565430]
[49.69296265 943.69879150]
[34.73816299 942.51019287]
[19.84199524 940.73162842]
[5.02771950 938.36602783]
[-9.68153191 935.41699219]
[-24.26279449 931.88916016]
[-38.69329834 927.78796387]
[-52.95051575 923.11993408]
[-67.01218414 917.89227295]
[-80.85634613 912.11315918]
[-94.46138000 905.79162598]
[-107.80606079 898.93756104]
[-120.86953735 891.56158447]
[-133.63140869 883.67529297]
[-146.07176208 875.29101562]
[-158.17117310 866.42181396]
[-169.91075134 857.08148193]
[-181.27214050 847.28466797]
[-192.23764038 837.04663086]
[-202.79010010 826.38342285]
[-212.91305542 815.31164551]
[-222.59069824 803.84851074]
[-231.80790710 792.01208496]
[-240.55030823 779.82073975]
[-248.80424500 767.29351807]
[-256.55682373 754.44995117]
[-263.79595947 741.31018066]
[-270.51034546 727.89465332]
[-276.68945312 714.22436523]
[-282.32369995 700.32061768]
[-287.40423584 686.20507812]
[-291.92315674 671.89990234]
[-295.87341309 657.42736816]
[-299.24880981 642.81005859]
[-302.04409790 628.07080078]
[-304.25488281 613.23266602]
[-305.87777710 598.31872559]
[-306.91015625 583.35235596]
[-307.35049438 568.35681152]
[-307.19805908 553.35565186]
[-306.45309448 538.37219238]
[-305.11676025 523.42987061]
[-303.19116211 508.55200195]
[-300.67926025 493.76181030]
[-297.58505249 479.08242798]
[-293.91329956 464.53671265]
[-289.66976929 450.14746094]
[-284.86108398 435.93704224]
[-279.49475098 421.92773438]
[-273.57913208 408.14132690]
[-267.12347412 394.59942627]
[-260.13787842 381.32312012]
[-252.63320923 368.33316040]
[-244.62123108 355.64981079]
[-236.11442566 343.29290771]
[-227.12608337 331.28170776]
[-217.67022705 319.63500977]
[-207.76164246 308.37097168]
[-197.41578674 297.50717163]
[-186.64881897 287.06057739]
[-175.47753906 277.04751587]
[-163.91940308 267.48361206]
[-151.99244690 258.38378906]
[-139.71530151 249.76225281]
[-127.10713196 241.63249207]
[-114.18762970 234.00718689]
[-100.97696686 226.89823914]
[-87.49575806 220.31674194]
[-73.76506805 214.27299500]
[-59.80632401 208.77639771]
[-45.64132690 203.83557129]
[-31.29219246 199.45820618]
[-16.78132629 195.65115356]
[-2.13138556 192.42034912]
[12.63475704 189.77082825]
[27.49404526 187.70674133]
[42.42327881 186.23130798]
[57.39914703 185.34681702]
[72.39826202 185.05467224]
[87.39721680 185.35531616]
[88.29003143 170.38191223]
[81.32398987 157.21667480]
[89.86897278 143.90150452]
[90.76178741 128.92810059]
[91.65460968 113.95469666]
[83.76233673 99.15306091]
[93.15166473 85.25281525]
[93.82144928 70.26777649]
[94.49123383 55.28274155]
[95.16101837 40.29770279]
[95.60762787 25.30435181]
[95.83095551 10.30601406]
[96.05428314 -4.69232321]
[96.27761078 -19.69066048]
[96.50093842 -34.68899918]
[88.96995544 -48.60283661]
[96.89588928 -61.21350098]
[82.81527710 -66.87924194]
[71.73486328 -77.25175476]
[65.15319824 -90.92823029]
[63.96038818 -106.05905151]
[68.31775665 -120.59788513]
[77.63600159 -132.57849121]
[90.65490723 -140.38056946]
[105.61377716 -142.94895935]
[120.48954773 -139.93632507]
[133.27038574 -131.75007629]
[142.22778320 -119.49735260]
[146.15034485 -104.83522797]
[144.50756836 -89.74663544]
[137.52162170 -76.27217865]
[126.13729858 -66.23417664]
[111.89422607 -60.99017334]
[119.44118500 -48.14911652]
[111.49927521 -34.46567154]
[111.27594757 -19.46733284]
[111.05261993 -4.46899557]
[110.82929230 10.52934170]
[110.60596466 25.52767944]
[113.23052979 29.51775360]
[113.37642670 35.19892883]
[110.14605713 40.96748734]
[109.47627258 55.95252609]
[108.80648804 70.93756104]
[108.13670349 85.92259979]
[115.46391296 94.97541046]
[114.85726929 106.60610962]
[106.62801361 114.84751129]
[105.73519897 129.82090759]
[104.84237671 144.79432678]
[111.74456024 159.03056335]
[103.26343536 171.27473450]
[102.37062073 186.24813843]
[117.29902649 187.73196411]
[132.15715027 189.80439758]
[146.92179871 192.46220398]
[161.56993103 195.70124817]
[176.07865906 199.51646423]
[190.42532349 203.90188599]
[204.58753967 208.85066223]
[218.54319763 214.35508728]
[232.27049255 220.40655518]
[245.74800110 226.99562073]
[258.95468140 234.11199951]
[271.86987305 241.74455261]
[284.47348022 249.88140869]
[296.74578857 258.50982666]
[308.66763306 267.61633301]
[320.22039795 277.18673706]
[331.38604736 287.20608521]
[342.14715576 297.65872192]
[352.48690796 308.52832031]
[362.38916016 319.79794312]
[371.83847046 331.44995117]
[380.82006836 343.46618652]
[389.31991577 355.82788086]
[397.32476807 368.51571655]
[404.82214355 381.50988770]
[411.80026245 394.79010010]
[418.24832153 408.33566284]
[424.15618896 422.12536621]
[429.51464844 436.13769531]
[434.31536865 450.35079956]
[438.55081177 464.74246216]
[442.21438599 479.29022217]
[445.30035400 493.97134399]
[447.80392456 508.76293945]
[449.72119141 523.64190674]
[451.04913330 538.58496094]
[451.78567505 553.56884766]
[451.92968750 568.57012939]
[451.48092651 583.56536865]
[450.44012451 598.53118896]
[448.80886841 613.44415283]
[446.58972168 628.28112793]
[443.78616333 643.01879883]
[440.40255737 657.63415527]
[436.44418335 672.10449219]
[431.91723633 686.40716553]
[426.82876587 700.51977539]
[421.18670654 714.42034912]
[414.99990845 728.08721924]
[408.27801514 741.49896240]
[401.03149414 754.63464355]
[393.27169800 767.47381592]
[385.01071167 779.99639893]
[376.26147461 792.18286133]
[367.03759766 804.01416016]
[357.35351562 815.47180176]
[347.22436523 826.53790283]
[336.66589355 837.19519043]
[325.69467163 847.42706299]
[314.32775879 857.21746826]
[302.58294678 866.55120850]
[290.47854614 875.41363525]
[278.03350830 883.79095459]
[265.26718140 891.67004395]
[252.19956970 899.03863525]
[238.85104370 905.88525391]
[225.24246216 912.19915771]
[211.39505005 917.97045898]
[197.33044434 923.19024658]
[183.07061768 927.85028076]
[168.63780212 931.94329834]
[154.05456543 935.46295166]
[139.34365845 938.40374756]
[124.52806091 940.76104736]
[109.63089752 942.53118896]
[94.67543030 943.71142578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 134]
[82 133]
[84 131]
[85 130]
[86 129]
[88 126]
[89 125]
[90 124]
[91 123]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
