%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[111.80310059 901.18090820]
[96.88032532 899.63830566]
[82.03709412 897.45941162]
[67.30052185 894.64831543]
[52.69752884 891.21008301]
[38.25478745 887.15093994]
[23.99868202 882.47845459]
[9.95525360 877.20104980]
[-3.84984589 871.32836914]
[-17.39139938 864.87115479]
[-30.64467049 857.84124756]
[-43.58544922 850.25146484]
[-56.19010162 842.11560059]
[-68.43559265 833.44860840]
[-80.29956818 824.26629639]
[-91.76034546 814.58538818]
[-102.79698944 804.42364502]
[-113.38935089 793.79956055]
[-123.51806641 782.73260498]
[-133.16464233 771.24291992]
[-142.31146240 759.35156250]
[-150.94180298 747.08020020]
[-159.03991699 734.45129395]
[-166.59100342 721.48785400]
[-173.58126831 708.21362305]
[-179.99794006 694.65283203]
[-185.82929993 680.83026123]
[-191.06471252 666.77111816]
[-195.69458008 652.50109863]
[-199.71047974 638.04626465]
[-203.10504150 623.43304443]
[-205.87210083 608.68817139]
[-208.00657654 593.83850098]
[-209.50457764 578.91113281]
[-210.36338806 563.93347168]
[-210.58140564 548.93273926]
[-210.15824890 533.93640137]
[-209.09468079 518.97186279]
[-207.39265442 504.06643677]
[-205.05528259 489.24734497]
[-202.08682251 474.54165649]
[-198.49270630 459.97622681]
[-194.27949524 445.57769775]
[-189.45489502 431.37234497]
[-184.02769470 417.38610840]
[-178.00782776 403.64456177]
[-171.40629578 390.17279053]
[-164.23513794 376.99542236]
[-156.50746155 364.13647461]
[-148.23738098 351.61950684]
[-139.44001770 339.46731567]
[-130.13142395 327.70217896]
[-120.32860565 316.34552002]
[-110.04947662 305.41809082]
[-99.31280518 294.93988037]
[-88.13821411 284.93002319]
[-76.54610443 275.40676880]
[-64.55765533 266.38757324]
[-52.19477081 257.88885498]
[-39.48003006 249.92617798]
[-26.43665695 242.51406860]
[-13.08848000 235.66606140]
[0.54012012 229.39468384]
[14.42424774 223.71138000]
[28.53853989 218.62652588]
[42.85721588 214.14942932]
[57.35412216 210.28823853]
[72.00276947 207.05003357]
[86.77641296 204.44071960]
[101.64805603 202.46505737]
[100.30982208 187.52487183]
[98.97158813 172.58468628]
[97.63335419 157.64450073]
[96.29512024 142.70433044]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[87.42646027 43.69372559]
[72.96442413 39.09751892]
[61.39505386 29.34084320]
[54.46126556 15.93426800]
[53.19200134 0.93504912]
[57.74964523 -13.36854267]
[67.41001129 -24.80631638]
[80.67723083 -31.65542984]
[79.33899689 -46.59561539]
[78.00076294 -61.53579712]
[76.66252136 -76.47598267]
[75.32428741 -91.41616821]
[60.50608826 -94.34832764]
[47.11484909 -101.33769989]
[36.23613739 -111.81769562]
[28.75185013 -124.93875122]
[25.26869583 -139.63720703]
[26.06904411 -154.72149658]
[31.08801270 -168.96884155]
[39.91873550 -181.22424316]
[51.84534454 -190.49423218]
[65.90100861 -196.02731323]
[80.94628906 -197.37496948]
[95.76154327 -194.42793274]
[109.14575195 -187.42510986]
[120.01392365 -176.93418884]
[127.48503113 -163.80561829]
[130.95341492 -149.10368347]
[130.13790894 -134.02018738]
[125.10463715 -119.77790070]
[116.26160431 -107.53137207]
[104.32569122 -98.27336884]
[90.26447296 -92.75440216]
[91.60270691 -77.81421661]
[92.94094086 -62.87403488]
[94.27917480 -47.93384933]
[95.61741638 -32.99366379]
[109.89064789 -28.61142540]
[121.42995453 -19.07256508]
[128.45707703 -5.80665398]
[129.87367249 9.17936802]
[125.43287659 23.60479546]
[115.78163147 35.26226044]
[102.36664581 42.35549164]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.23530579 141.36608887]
[112.57353973 156.30627441]
[113.91177368 171.24645996]
[115.25000763 186.18664551]
[116.58824158 201.12683105]
[131.57424927 200.42805481]
[146.57644653 200.37026978]
[161.56739807 200.95356750]
[176.51972961 202.17689514]
[191.40614319 204.03802490]
[206.19943237 206.53353882]
[220.87257385 209.65888977]
[235.39877319 213.40837097]
[249.75149536 217.77511597]
[263.90451050 222.75117493]
[277.83197021 228.32743835]
[291.50842285 234.49372864]
[304.90893555 241.23878479]
[318.00897217 248.55027771]
[330.78463745 256.41485596]
[343.21255493 264.81814575]
[355.27008057 273.74481201]
[366.93515015 283.17852783]
[378.18646240 293.10208130]
[389.00347900 303.49734497]
[399.36642456 314.34530640]
[409.25634766 325.62615967]
[418.65524292 337.31933594]
[427.54589844 349.40341187]
[435.91207886 361.85638428]
[443.73849487 374.65542603]
[451.01086426 387.77722168]
[457.71591187 401.19778442]
[463.84136963 414.89260864]
[469.37606812 428.83663940]
[474.30987549 443.00442505]
[478.63378906 457.37011719]
[482.33993530 471.90740967]
[485.42150879 486.58981323]
[487.87286377 501.39050293]
[489.68957520 516.28240967]
[490.86828613 531.23828125]
[491.40686035 546.23095703]
[491.30432129 561.23291016]
[490.56085205 576.21673584]
[489.17779541 591.15515137]
[487.15768433 606.02081299]
[484.50421143 620.78662109]
[481.22222900 635.42547607]
[477.31771851 649.91082764]
[472.79782104 664.21600342]
[467.67080688 678.31506348]
[461.94601440 692.18212891]
[455.63391113 705.79193115]
[448.74603271 719.11956787]
[441.29495239 732.14068604]
[433.29428101 744.83160400]
[424.75866699 757.16900635]
[415.70364380 769.13043213]
[406.14578247 780.69403076]
[396.10256958 791.83862305]
[385.59228516 802.54394531]
[374.63418579 812.79034424]
[363.24829102 822.55914307]
[351.45535278 831.83251953]
[339.27691650 840.59356689]
[326.73526001 848.82617188]
[313.85330200 856.51538086]
[300.65454102 863.64709473]
[287.16308594 870.20831299]
[273.40359497 876.18707275]
[259.40121460 881.57244873]
[245.18148804 886.35455322]
[230.77041626 890.52465820]
[216.19433594 894.07525635]
[201.47982788 896.99969482]
[186.65380859 899.29278564]
[171.74334717 900.95019531]
[156.77568054 901.96905518]
[141.77816772 902.34735107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[78 127]
[79 126]
[80 125]
[81 124]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
