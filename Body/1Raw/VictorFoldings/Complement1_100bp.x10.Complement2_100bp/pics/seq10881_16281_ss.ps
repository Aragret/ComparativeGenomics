%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[105.79114532 448.84164429]
[97.33508301 436.44580078]
[89.70785522 423.52343750]
[82.94212341 410.12988281]
[77.06686401 396.32250977]
[72.10723114 382.16043091]
[68.08446503 367.70431519]
[65.01578522 353.01602173]
[62.91434479 338.15850830]
[61.78913879 323.19534302]
[61.64497757 308.19061279]
[62.48248672 293.20858765]
[64.29808044 278.31344604]
[67.08397675 263.56890869]
[70.82824707 249.03816223]
[75.51486969 234.78341675]
[81.12375641 220.86570740]
[87.63090515 207.34463501]
[95.00844574 194.27810669]
[103.22477722 181.72207642]
[112.24473572 169.73030090]
[122.02967834 158.35412598]
[132.53770447 147.64228821]
[122.53953552 136.46031189]
[112.54136658 125.27834320]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[76.27666473 84.71983337]
[68.22374725 80.40840912]
[66.21439362 73.29614258]
[56.38381195 61.96654892]
[46.55323029 50.63695526]
[36.72264862 39.30736542]
[26.89206886 27.97776985]
[14.92677879 37.03321838]
[2.38336921 45.26924515]
[-10.68213749 52.64907074]
[-24.21138573 59.13972855]
[-38.14395142 64.71224213]
[-52.41761017 69.34170532]
[-66.96860504 73.00746155]
[-81.73195648 75.69312286]
[-96.64172363 77.38669586]
[-111.63130951 78.08062744]
[-126.63377380 77.77180481]
[-141.58210754 76.46162415]
[-156.40954590 74.15591431]
[-171.04986572 70.86499023]
[-185.43768311 66.60355377]
[-199.50874329 61.39062119]
[-213.20019531 55.24948120]
[-226.45088196 48.20756912]
[-239.20162964 40.29632950]
[-251.39547729 31.55109596]
[-262.97799683 22.01092911]
[-273.89743042 11.71843815]
[-284.10501099 0.71959078]
[-293.55514526 -10.93648815]
[-302.20562744 -23.19773865]
[-310.01782227 -36.00939941]
[-316.95687866 -49.31425095]
[-322.99172974 -63.05286789]
[-328.09548950 -77.16389465]
[-332.24533081 -91.58429718]
[-335.42269897 -106.24968719]
[-337.61346436 -121.09454346]
[-338.80780029 -136.05258179]
[-339.00036621 -151.05699158]
[-338.19030762 -166.04074097]
[-336.38125610 -180.93693542]
[-333.58129883 -195.67903137]
[-329.80291748 -210.20120239]
[-325.06298828 -224.43855286]
[-319.38269043 -238.32752991]
[-312.78738403 -251.80607605]
[-305.30654907 -264.81402588]
[-296.97360229 -277.29324341]
[-287.82571411 -289.18798828]
[-277.90377808 -300.44519043]
[-267.25207520 -311.01452637]
[-255.91822815 -320.84881592]
[-243.95281982 -329.90411377]
[-231.40931702 -338.13998413]
[-218.34370422 -345.51962280]
[-204.81437683 -352.01013184]
[-190.88174438 -357.58245850]
[-176.60803223 -362.21176147]
[-162.05699158 -365.87731934]
[-147.29359436 -368.56280518]
[-132.38381958 -370.25619507]
[-117.39421844 -370.94992065]
[-102.39176178 -370.64093018]
[-87.44344330 -369.33053589]
[-72.61603546 -367.02465820]
[-57.97574997 -363.73355103]
[-43.58798218 -359.47192383]
[-29.51699257 -354.25881958]
[-15.82562351 -348.11749268]
[-2.57502460 -341.07540894]
[10.17562294 -333.16403198]
[22.36937141 -324.41864014]
[33.95175934 -314.87832642]
[44.87105560 -304.58569336]
[55.07849503 -293.58673096]
[64.52848816 -281.93051147]
[73.17882538 -269.66915894]
[80.99086761 -256.85739136]
[87.92973328 -243.55245972]
[93.96443176 -229.81376648]
[99.06800842 -215.70268250]
[103.21765900 -201.28222656]
[106.39486694 -186.61680603]
[108.58542633 -171.77191162]
[109.77956390 -156.81385803]
[109.97194672 -141.80944824]
[109.16171265 -126.82569885]
[107.35247040 -111.92952728]
[104.55231476 -97.18746948]
[100.77375031 -82.66535950]
[96.03364563 -68.42805481]
[90.35317993 -54.53915787]
[83.75772095 -41.06068802]
[76.27671814 -28.05284882]
[67.94359589 -15.57373333]
[58.79555893 -3.67908072]
[48.87347794 7.57798624]
[38.22166061 18.14719009]
[48.05224228 29.47678375]
[57.88282394 40.80637741]
[67.71340179 52.13597107]
[77.54398346 63.46556091]
[87.45863342 74.72165680]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[123.72333527 115.28016663]
[133.72151184 126.46214294]
[143.71968079 137.64411926]
[155.53578186 128.39521790]
[167.93148804 119.93893433]
[180.85371399 112.31147766]
[194.24714661 105.54551697]
[208.05441284 99.67000580]
[222.21640015 94.71012115]
[236.67245483 90.68710327]
[251.36068726 87.61816406]
[266.21817017 85.51646423]
[281.18130493 84.39099121]
[296.18603516 84.24656677]
[311.16806030 85.08380890]
[326.06326294 86.89913940]
[340.80783081 89.68477631]
[355.33865356 93.42878723]
[369.59347534 98.11515808]
[383.51129150 103.72380066]
[397.03247070 110.23070526]
[410.09912109 117.60801697]
[422.65530396 125.82412720]
[434.64724731 134.84387207]
[446.02359009 144.62861633]
[456.73559570 155.13645935]
[466.73745728 166.32240295]
[475.98626709 178.13854980]
[484.44250488 190.53430176]
[492.06988525 203.45658875]
[498.83575439 216.85005188]
[504.71118164 230.65736389]
[509.67098999 244.81936646]
[513.69390869 259.27545166]
[516.76275635 273.96368408]
[518.86437988 288.82119751]
[519.98974609 303.78433228]
[520.13409424 318.78906250]
[519.29675293 333.77108765]
[517.48138428 348.66625977]
[514.69561768 363.41082764]
[510.95153809 377.94161987]
[506.26507568 392.19644165]
[500.65637207 406.11419678]
[494.14938354 419.63534546]
[486.77197266 432.70196533]
[478.55578613 445.25808716]
[469.53598022 457.24996948]
[459.75119019 468.62625122]
[449.24328613 479.33822632]
[438.05725098 489.33999634]
[426.24105835 498.58874512]
[413.84524536 507.04489136]
[400.92294312 514.67218018]
[387.52941895 521.43798828]
[373.72207642 527.31335449]
[359.56002808 532.27307129]
[345.10394287 536.29589844]
[330.41567993 539.36468506]
[315.55816650 541.46618652]
[300.59500122 542.59149170]
[285.59030151 542.73577881]
[270.60827637 541.89831543]
[255.71308899 540.08282471]
[240.96855164 537.29699707]
[226.43778992 533.55285645]
[212.18299866 528.86627197]
[198.26525879 523.25750732]
[184.74415588 516.75042725]
[171.67758179 509.37295532]
[159.12150574 501.15670776]
[147.12966919 492.13681030]
[135.75344849 482.35192871]
[125.04154205 471.84396362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 139]
[24 138]
[25 137]
[26 136]
[28 134]
[29 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
