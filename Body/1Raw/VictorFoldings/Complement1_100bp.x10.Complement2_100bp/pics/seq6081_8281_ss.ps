%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[214.02745056 581.16229248]
[212.46369934 566.11535645]
[215.62821960 551.32208252]
[223.21098328 538.23175049]
[234.46911621 528.12683105]
[248.29965210 521.99725342]
[246.73912048 507.07867432]
[245.17860413 492.16006470]
[243.61807251 477.24145508]
[242.05755615 462.32284546]
[240.05354309 447.45730591]
[237.60781860 432.65805054]
[235.16207886 417.85876465]
[232.71635437 403.05950928]
[230.27062988 388.26022339]
[225.97650146 373.88803101]
[219.90267944 360.17276001]
[213.82884216 346.45748901]
[207.75500488 332.74221802]
[201.68116760 319.02694702]
[195.60733032 305.31167603]
[189.53350830 291.59643555]
[183.15489197 278.02020264]
[176.47470093 264.58984375]
[169.79450989 251.15946960]
[157.19880676 243.20977783]
[157.98060608 227.40789795]
[145.38490295 219.45820618]
[146.16671753 203.65632629]
[139.48651123 190.22595215]
[132.60710144 176.89651489]
[125.52999878 163.67098999]
[118.45289612 150.44546509]
[111.37578583 137.21994019]
[104.29868317 123.99440765]
[97.22157288 110.76888275]
[91.84871674 124.77360535]
[78.20337677 131.00296021]
[64.10224152 125.88848877]
[57.62306976 112.35998535]
[62.47742844 98.16719818]
[75.88452148 91.44039917]
[90.16342926 96.03239441]
[84.29447174 82.22821808]
[78.42550659 68.42403412]
[65.51570892 68.08255005]
[53.73674774 62.90267181]
[44.82424545 53.68626022]
[40.07681656 41.82703781]
[40.16692734 29.09990883]
[45.04585648 17.39534187]
[53.95618057 8.43853855]
[48.50082397 -5.53425932]
[43.04546738 -19.50705719]
[37.59011078 -33.47985458]
[32.13475037 -47.45265198]
[20.65693665 -53.33674622]
[16.40081596 -65.08702850]
[21.13522339 -76.21860504]
[15.88850498 -90.27108002]
[10.64178658 -104.32354736]
[8.98248863 -89.41560364]
[3.41387415 -75.48755646]
[-5.66205311 -63.54487991]
[-17.59009552 -54.44972610]
[-31.50915527 -48.85868454]
[-46.41440582 -47.17537308]
[-61.22982025 -49.52131271]
[-74.88586426 -55.72714996]
[-86.39669800 -65.34487915]
[-94.93134308 -77.68019104]
[-99.87367249 -91.84258270]
[-100.86689758 -106.80966187]
[-97.83931732 -121.50094604]
[-91.00949860 -134.85585022]
[-80.87048340 -145.91027832]
[-68.15422821 -153.86621094]
[-53.77871704 -158.14927673]
[-38.78173828 -158.45030212]
[-24.24593353 -154.74754333]
[-11.22065735 -147.30831909]
[-0.64621514 -136.66964722]
[6.71444464 -123.59848785]
[6.04465961 -138.58352661]
[5.37487411 -153.56855774]
[1.86539626 -162.00190735]
[4.80835199 -168.78135681]
[4.36174631 -183.77470398]
[3.91514015 -198.76805115]
[3.46853423 -213.76139832]
[3.02192831 -228.75474548]
[-5.12282419 -242.31843567]
[2.23210740 -255.27043152]
[1.78550160 -270.26379395]
[-0.95937204 -274.70370483]
[-1.65694678 -279.29354858]
[-0.59294301 -283.22836304]
[1.66884720 -285.93331909]
[1.89217484 -300.93164062]
[-11.94405174 -307.29394531]
[-21.99141884 -318.73815918]
[-26.50916100 -333.28152466]
[-24.71455193 -348.40432739]
[-16.91851616 -361.48645020]
[-4.47176695 -370.26132202]
[10.46922302 -373.20864868]
[25.31583595 -369.81777954]
[37.49580765 -360.67620850]
[44.89888382 -347.36779785]
[46.24243546 -332.19824219]
[41.29368591 -317.79583740]
[30.91003418 -306.65582275]
[16.89051247 -300.70831299]
[16.66718483 -285.70999146]
[16.77885056 -270.71038818]
[17.22545815 -255.71704102]
[25.33826637 -243.22578430]
[18.01527786 -229.20135498]
[18.46188354 -214.20800781]
[18.90849113 -199.21466064]
[19.35509682 -184.22131348]
[19.80170250 -169.22795105]
[20.35991287 -154.23834229]
[21.02969742 -139.25331116]
[21.69948387 -124.26827240]
[24.69425774 -109.57026672]
[29.94097519 -95.51779938]
[35.18769455 -81.46532440]
[49.30601120 -71.04226685]
[46.10755157 -52.90800858]
[51.56290817 -38.93521118]
[57.01826477 -24.96241379]
[62.47362137 -10.98961639]
[67.92897797 2.98318148]
[85.03252411 4.95982647]
[98.85012817 15.38033485]
[105.52087402 31.44598961]
[103.12371063 48.76546478]
[92.22968292 62.55507660]
[98.09864807 76.35925293]
[103.96760559 90.16342926]
[110.44710541 103.69178009]
[117.52420807 116.91730499]
[124.60131836 130.14283752]
[131.67842102 143.36836243]
[138.75552368 156.59388733]
[145.83262634 169.81941223]
[151.23788452 173.62661743]
[153.56037903 178.81341553]
[152.91688538 183.54576111]
[159.59709167 196.97613525]
[172.67059326 205.88645935]
[171.41098022 220.72770691]
[184.48449707 229.63801575]
[183.22488403 244.47926331]
[189.90507507 257.90963745]
[196.58528137 271.34002686]
[200.93627930 274.22372437]
[203.49064636 278.10040283]
[204.17098999 282.11938477]
[203.24876404 285.52258301]
[209.32260132 299.23785400]
[215.39643860 312.95312500]
[221.47027588 326.66839600]
[227.54411316 340.38366699]
[233.61793518 354.09893799]
[239.69177246 367.81417847]
[240.85575867 352.85940552]
[246.75196838 339.06686401]
[256.75817871 327.89208984]
[269.81842041 320.51437378]
[284.55435181 317.71234131]
[299.41094971 319.78164673]
[312.82028198 326.50396729]
[323.36727905 337.16986084]
[329.93887329 350.65368652]
[331.84152222 365.53253174]
[328.87448120 380.23617554]
[321.35086060 393.21286011]
[310.06460571 403.09320068]
[296.20684814 408.83444214]
[281.23995972 409.83071899]
[266.74346924 405.97689819]
[254.24723816 397.67968750]
[245.06990051 385.81451416]
[247.51562500 400.61376953]
[249.96134949 415.41305542]
[252.40708923 430.21231079]
[254.85281372 445.01159668]
[257.72567749 448.26742554]
[259.25888062 451.90252686]
[259.49765015 455.44912720]
[258.63455200 458.50228882]
[256.97616577 460.76232910]
[258.53668213 475.68093872]
[260.09719849 490.59954834]
[261.65771484 505.51812744]
[263.21826172 520.43676758]
[278.01785278 523.57153320]
[291.12341309 531.12792969]
[301.25094604 542.36572266]
[307.40829468 556.18395996]
[308.99221802 571.22875977]
[305.84753418 586.02624512]
[298.28231812 599.12670898]
[287.03775024 609.24676514]
[273.21542358 615.39483643]
[258.16955566 616.96868896]
[243.37417603 613.81408691]
[230.27876282 606.24005127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 167]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[22 161]
[23 157]
[24 156]
[25 155]
[27 153]
[29 151]
[30 150]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[43 141]
[44 140]
[45 139]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[59 128]
[60 127]
[61 126]
[83 125]
[84 124]
[85 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[93 116]
[94 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
