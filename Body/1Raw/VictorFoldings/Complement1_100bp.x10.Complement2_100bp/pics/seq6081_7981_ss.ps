%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[83.85749817 675.33978271]
[70.64778137 668.17846680]
[58.59173203 659.21008301]
[47.93479156 648.61712646]
[38.89392471 636.61529541]
[31.65318871 623.44897461]
[26.35999870 609.38616943]
[23.12211609 594.71313477]
[22.00546074 579.72869873]
[23.03276634 564.73785400]
[26.18311691 550.04583740]
[31.39237595 535.95172119]
[38.55448914 522.74243164]
[47.52364731 510.68692017]
[58.11724854 500.03063965]
[70.11962128 490.99050903]
[83.28640747 483.75061035]
[97.34955597 478.45828247]
[112.02275085 475.22131348]
[110.90710449 460.26284790]
[109.79145813 445.30441284]
[108.67581177 430.34594727]
[99.71746063 422.21731567]
[98.66557312 409.76431274]
[106.62752533 399.61691284]
[98.14640808 387.37274170]
[105.04858398 373.13650513]
[104.15576935 358.16308594]
[100.61972046 351.67324829]
[103.36281586 342.96041870]
[102.69303131 327.97537231]
[102.02324677 312.99032593]
[101.35346222 298.00531006]
[100.68367767 283.02026367]
[86.14588165 279.49465942]
[73.17749786 272.00784302]
[62.83377457 261.15921021]
[55.95918655 247.82200623]
[53.11846542 233.07322693]
[54.55022430 218.10653687]
[60.14693451 204.13566589]
[69.46296692 192.29603577]
[81.75003815 183.55245972]
[96.01732635 178.62048340]
[95.34754181 163.63545227]
[94.67775726 148.65040588]
[86.37986755 136.28132629]
[93.49324036 122.14942932]
[92.82345581 107.16439056]
[89.34608459 99.89249420]
[92.25693512 91.95159912]
[91.81033325 76.95825195]
[91.36372375 61.96489716]
[90.91712189 46.97154999]
[90.47051239 31.97819901]
[87.72563934 27.53829384]
[87.02806091 22.94844818]
[88.09207153 19.01361084]
[90.35385895 16.30868149]
[90.57718658 1.31034327]
[90.80051422 -13.68799400]
[83.77088928 -0.43716854]
[73.33412170 10.33659458]
[60.31330872 17.78363037]
[45.73531723 21.31663513]
[30.74982834 20.65698051]
[16.53866196 15.85669136]
[4.22257185 7.29433727]
[-5.22714615 -4.35481834]
[-11.06524658 -18.17207527]
[-12.83131409 -33.06774521]
[-10.38606739 -47.86709595]
[-3.92234921 -61.40298843]
[6.05008411 -72.60792542]
[18.74476433 -80.59823608]
[33.16053772 -84.74377441]
[48.16051483 -84.71760559]
[62.56173706 -80.52178955]
[75.22846222 -72.48723602]
[85.16173553 -61.24757004]
[91.57818604 -47.68920898]
[93.97184753 -32.87794495]
[98.58585358 -47.15068054]
[103.19986725 -61.42341232]
[107.81387329 -75.69614410]
[103.54170990 -93.60787964]
[117.01461029 -104.85279083]
[121.41560364 -119.19264221]
[118.06779480 -134.65559387]
[129.19876099 -144.55261230]
[133.27842712 -158.98715210]
[137.03471375 -173.50921631]
[140.79101562 -188.03128052]
[144.54731750 -202.55332947]
[148.30361938 -217.07539368]
[134.54078674 -223.12358093]
[121.92644501 -231.30126953]
[110.78734589 -241.39665222]
[101.41201782 -253.14820862]
[94.04329681 -266.25158691]
[88.87205505 -280.36734009]
[86.03224182 -295.12982178]
[85.59740448 -310.15670776]
[87.57882690 -325.05871582]
[91.92517090 -339.44989014]
[98.52385712 -352.95742798]
[107.20396423 -365.23144531]
[117.74065399 -375.95407104]
[129.86100769 -384.84750366]
[143.25108337 -391.68139648]
[157.56402588 -396.27874756]
[172.42912292 -398.52047729]
[187.46130371 -398.34851074]
[202.27120972 -395.76730347]
[216.47525024 -390.84371948]
[229.70547485 -383.70529175]
[241.61920166 -374.53689575]
[251.90783691 -363.57604980]
[260.30487061 -351.10665894]
[266.59283447 -337.45169067]
[270.60882568 -322.96487427]
[272.24880981 -308.02142334]
[271.47030640 -293.00842285]
[268.29351807 -278.31475830]
[262.80072021 -264.32101440]
[255.13415527 -251.38964844]
[245.49243164 -239.85563660]
[234.12530518 -230.01773071]
[221.32717896 -222.13075256]
[207.42958069 -216.39900208]
[192.79249573 -212.97093201]
[177.79502869 -211.93536377]
[162.82568359 -213.31909180]
[159.06938171 -198.79704285]
[155.31307983 -184.27497864]
[151.55677795 -169.75291443]
[147.80047607 -155.23086548]
[149.26524353 -152.02355957]
[149.24929810 -147.94743347]
[147.36120605 -143.70616150]
[143.53860474 -140.15161133]
[147.20120239 -125.71434021]
[135.75544739 -114.79164124]
[131.35446167 -100.45179749]
[136.74302673 -89.62174988]
[133.19384766 -77.63896942]
[122.08660889 -71.08213806]
[117.47259521 -56.80940247]
[112.85858917 -42.53667068]
[108.24457550 -28.26393700]
[105.79885101 -13.46466637]
[105.57552338 1.53367090]
[105.35219574 16.53200912]
[105.46385956 31.53159332]
[105.91046906 46.52494431]
[106.35707092 61.51829147]
[106.80368042 76.51164246]
[107.25028992 91.50498962]
[107.80849457 106.49460602]
[108.47827911 121.47964478]
[116.82407379 134.92056274]
[109.66279602 147.98062134]
[110.33258057 162.96566772]
[111.00236511 177.95069885]
[125.65277100 181.59014893]
[138.67091370 189.20266724]
[149.00607300 200.16394043]
[155.82688904 213.57977295]
[158.58819580 228.35905457]
[157.07461548 243.30245972]
[151.41734314 257.19979858]
[142.08273315 268.92800903]
[129.83399963 277.54193115]
[115.66871643 282.35046387]
[116.33850098 297.33551025]
[117.00828552 312.32055664]
[117.67807007 327.30560303]
[118.34785461 342.29061890]
[119.12917328 357.27026367]
[120.02199554 372.24368286]
[128.56697083 385.55883789]
[121.60093689 398.72409058]
[132.09486389 413.85546875]
[123.63426208 429.23028564]
[124.74990845 444.18875122]
[125.86556244 459.14721680]
[126.98120880 474.10565186]
[141.97224426 475.13018799]
[156.66487122 478.27780151]
[170.75996399 483.48443604]
[183.97056580 490.64410400]
[196.02772522 499.61102295]
[206.68597412 510.20263672]
[215.72833252 522.20336914]
[222.97068787 535.36877441]
[228.26562500 549.43096924]
[231.50532532 564.10357666]
[232.62382507 579.08789062]
[231.59837341 594.07885742]
[228.44984436 608.77124023]
[223.24232483 622.86602783]
[216.08184814 636.07617188]
[207.11418152 648.13281250]
[196.52191162 658.79040527]
[184.52066040 667.83203125]
[171.35476685 675.07354736]
[157.29226685 680.36761475]
[142.61947632 683.60638428]
[127.63508606 684.72399902]
[112.64418030 683.69763184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 187]
[20 186]
[21 185]
[22 184]
[25 182]
[27 180]
[28 179]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[44 164]
[45 163]
[46 162]
[48 160]
[49 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[59 153]
[60 152]
[61 151]
[82 150]
[83 149]
[84 148]
[85 147]
[87 144]
[88 143]
[90 141]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
