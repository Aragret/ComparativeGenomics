%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[-16.20519829 338.66754150]
[-11.68104649 352.99188232]
[-9.06536102 367.78424072]
[-8.40289974 382.79144287]
[-9.70499802 397.75671387]
[-12.94937611 412.42398071]
[-18.08051872 426.54229736]
[-25.01062202 439.87002563]
[-33.62110901 452.17916870]
[-43.76463699 463.25903320]
[-55.26763916 472.92010498]
[-67.93328094 480.99700928]
[-81.54484558 487.35156250]
[-95.86941528 491.87503052]
[-110.66187286 494.49002075]
[-125.66910553 495.15176392]
[-140.63432312 493.84893799]
[-155.30145264 490.60388184]
[-169.41950989 485.47204590]
[-182.74691772 478.54132080]
[-195.05563354 469.93023682]
[-206.13502502 459.78619385]
[-215.79553223 448.28271484]
[-223.87184143 435.61669922]
[-230.22575378 422.00482178]
[-234.74853516 407.68005371]
[-237.36282349 392.88745117]
[-238.02384949 377.88018799]
[-236.72032166 362.91503906]
[-233.47454834 348.24807739]
[-228.34207153 334.13024902]
[-221.41069031 320.80319214]
[-212.79904175 308.49487305]
[-202.65444946 297.41595459]
[-191.15052795 287.75601196]
[-178.48411560 279.68029785]
[-164.87194824 273.32702637]
[-150.54695129 268.80493164]
[-135.75424194 266.19134521]
[-120.74694824 265.53103638]
[-105.78185272 266.83526611]
[-91.11503601 270.08175659]
[-76.99747467 275.21490479]
[-63.67071915 282.14691162]
[-55.07215500 269.85607910]
[-46.47359467 257.56524658]
[-37.87503052 245.27439880]
[-29.36820221 232.91989136]
[-20.95358276 220.50239563]
[-12.53896523 208.08489990]
[-4.12434626 195.66740417]
[-18.24438858 200.72946167]
[-33.02104568 198.15061951]
[-44.59173203 188.60498047]
[-49.93190384 174.58775330]
[-47.64564514 159.76301575]
[-38.33058548 148.00590515]
[-24.42165375 142.38970947]
[-9.55461597 144.38247681]
[2.38432288 153.46333313]
[8.27435207 167.25852966]
[6.57615471 182.16122437]
[9.50930691 167.55828857]
[24.55035019 162.65139771]
[34.71389771 151.61950684]
[19.84832954 149.61579895]
[12.01570225 136.82321167]
[16.98993683 122.67199707]
[31.10421371 117.59388733]
[43.95401001 125.33228302]
[46.06742859 140.18113708]
[57.02333832 129.93574524]
[67.97924805 119.69036102]
[78.93515778 109.44496918]
[89.89106750 99.19957733]
[93.15954590 91.83142853]
[101.08719635 88.88470459]
[112.19442749 78.80356598]
[117.21315765 63.79946899]
[131.83753967 60.97510910]
[142.94476318 50.89397049]
[154.05200195 40.81283188]
[165.15924072 30.73169327]
[175.56660461 19.92953682]
[185.22741699 8.45483589]
[194.88822937 -3.01986408]
[204.54904175 -14.49456406]
[212.96365356 -26.91205978]
[220.04075623 -40.13758850]
[227.11787415 -53.36311340]
[231.41198730 -67.73532867]
[232.75022888 -82.67551422]
[234.08845520 -97.61569977]
[235.42669678 -112.55588531]
[236.76492310 -127.49607086]
[238.10316467 -142.43624878]
[239.44139099 -157.37643433]
[225.26988220 -162.55628967]
[212.92247009 -171.22828674]
[203.24099731 -182.80116272]
[196.88557434 -196.48585510]
[194.28952026 -211.34933472]
[195.62983704 -226.37817383]
[200.81515503 -240.54766846]
[209.49192810 -252.89175415]
[221.06854248 -262.56875610]
[234.75569153 -268.91888428]
[249.62016296 -271.50921631]
[264.64849854 -270.16308594]
[278.81597900 -264.97229004]
[291.15670776 -256.29077148]
[300.82925415 -244.71041870]
[307.17410278 -231.02081299]
[309.75866699 -216.15533447]
[308.40673828 -201.12753296]
[303.21047974 -186.96203613]
[294.52420044 -174.62466431]
[282.94009399 -164.95660400]
[269.24804688 -158.61703491]
[254.38157654 -156.03820801]
[253.04335022 -141.09802246]
[251.70510864 -126.15783691]
[250.36688232 -111.21765137]
[249.02864075 -96.27746582]
[247.69041443 -81.33728027]
[246.35217285 -66.39709473]
[254.15376282 -79.20861816]
[264.49490356 -90.07420349]
[276.90515137 -98.49952698]
[290.81988525 -104.10130310]
[305.60610962 -106.62467957]
[320.59115601 -105.95486450]
[335.09329224 -102.12233734]
[348.45275879 -95.30143738]
[360.06179810 -85.80248260]
[369.39227295 -74.05760193]
[376.01971436 -60.60112000]
[379.64260864 -46.04520798]
[380.09616089 -31.05206680]
[377.35971069 -16.30378342]
[371.55776978 -2.47130632]
[362.95428467 9.81607914]
[351.94064331 19.99938011]
[339.01788330 27.61532211]
[324.77392578 32.31743240]
[309.85678101 33.89179230]
[294.94506836 32.26678467]
[280.71716309 27.51633453]
[267.82034302 19.85655594]
[256.84133911 9.63591480]
[248.27961731 -2.68061519]
[242.52467346 -16.53271484]
[239.83833313 -31.29020500]
[240.34339905 -46.28601074]
[233.26629639 -33.06048203]
[226.18917847 -19.83495522]
[239.00326538 -27.63234711]
[253.81388855 -30.00837326]
[268.42398071 -26.61056137]
[280.66622925 -17.94295502]
[288.72457886 -5.29134607]
[291.40359497 9.46747684]
[288.30587769 24.14413071]
[279.89093018 36.56142044]
[267.40710449 44.87731171]
[252.70628357 47.85820007]
[237.96923828 45.06187820]
[225.38212585 36.90317154]
[216.81216431 24.59237099]
[213.53067017 9.95571232]
[216.02374268 -4.83375359]
[206.36293030 6.64094639]
[196.70211792 18.11564636]
[187.04130554 29.59034729]
[201.73968506 26.59742355]
[215.76103210 31.92677689]
[224.76066589 43.92705154]
[225.94995117 58.87982941]
[218.96038818 72.15183258]
[205.95776367 79.63058472]
[190.97108459 78.99871063]
[178.64411926 70.45200348]
[172.79653931 56.63875961]
[175.24037170 41.83892441]
[164.13313293 51.92006302]
[153.02590942 62.00120544]
[141.91867065 72.08234406]
[137.69441223 86.36537170]
[122.27557373 89.91079712]
[111.16833496 99.99193573]
[100.13645935 110.15548706]
[89.18054962 120.40087891]
[78.22463989 130.64627075]
[67.26873016 140.89166260]
[56.31282043 151.13705444]
[45.74577332 161.78306580]
[35.58222580 172.81494141]
[31.92210960 188.20695496]
[17.60803223 192.32476807]
[8.29314899 204.08201599]
[-0.12146927 216.49951172]
[-8.53608799 228.91700745]
[-16.95070648 241.33450317]
[-19.17416191 250.19419861]
[-25.58419037 253.87297058]
[-34.18275452 266.16378784]
[-42.78131866 278.45465088]
[-51.37988281 290.74548340]
[-40.29951477 300.88848877]
[-30.63791466 312.39102173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 208]
[45 207]
[46 206]
[47 205]
[48 203]
[49 202]
[50 201]
[51 200]
[62 199]
[64 197]
[65 196]
[71 195]
[72 194]
[73 193]
[74 192]
[75 191]
[77 190]
[78 189]
[80 187]
[81 186]
[82 185]
[83 184]
[84 174]
[85 173]
[86 172]
[87 171]
[88 156]
[89 155]
[90 154]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
