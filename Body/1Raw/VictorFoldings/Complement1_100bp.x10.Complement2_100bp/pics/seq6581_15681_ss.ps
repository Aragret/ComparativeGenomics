%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[102.76403046 959.44116211]
[87.80966949 958.24121094]
[72.92243958 956.38555908]
[58.13108826 953.87780762]
[43.46416473 950.72277832]
[28.94997787 946.92657471]
[14.61654663 942.49652100]
[0.49153590 937.44110107]
[-13.39778805 931.77014160]
[-27.02461433 925.49462891]
[-40.36264038 918.62658691]
[-53.38611984 911.17932129]
[-66.06991577 903.16717529]
[-78.38954163 894.60565186]
[-90.32121277 885.51123047]
[-101.84191132 875.90155029]
[-112.92938995 865.79504395]
[-123.56224823 855.21136475]
[-133.71995544 844.17077637]
[-143.38291931 832.69470215]
[-152.53247070 820.80529785]
[-161.15097046 808.52545166]
[-169.22175598 795.87890625]
[-176.72926331 782.89007568]
[-183.65901184 769.58398438]
[-189.99760437 755.98638916]
[-195.73280334 742.12347412]
[-200.85356140 728.02203369]
[-205.34997559 713.70922852]
[-209.21337891 699.21282959]
[-212.43630981 684.56066895]
[-215.01254272 669.78106689]
[-216.93710327 654.90258789]
[-218.20626831 639.95397949]
[-218.81762695 624.96398926]
[-218.76994324 609.96160889]
[-218.06335449 594.97583008]
[-216.69920349 580.03558350]
[-214.68014526 565.16961670]
[-212.01004028 550.40673828]
[-208.69406128 535.77532959]
[-204.73861694 521.30371094]
[-200.15133667 507.01983643]
[-194.94107056 492.95123291]
[-189.11788940 479.12503052]
[-182.69300842 465.56799316]
[-175.67884827 452.30621338]
[-168.08894348 439.36532593]
[-159.93795776 426.77032471]
[-151.24159241 414.54550171]
[-142.01667786 402.71447754]
[-132.28097534 391.30004883]
[-122.05330658 380.32424927]
[-111.35340881 369.80831909]
[-100.20192719 359.77252197]
[-88.62039948 350.23620605]
[-76.63116455 341.21783447]
[-64.25738525 332.73477173]
[-51.52293015 324.80340576]
[-38.45238495 317.43902588]
[-25.07098389 310.65588379]
[-11.40455246 304.46707153]
[2.52052832 298.88452148]
[16.67737961 293.91897583]
[31.03867531 289.58007812]
[45.57669449 285.87615967]
[60.26337051 282.81442261]
[75.07035828 280.40072632]
[89.96907806 278.63970947]
[104.93077087 277.53485107]
[104.48416138 262.54150391]
[104.03755951 247.54815674]
[103.59095001 232.55479431]
[103.14434814 217.56144714]
[102.47455597 202.57641602]
[101.58174133 187.60301208]
[100.68892670 172.62960815]
[99.35069275 157.68942261]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[81.78061676 75.99124146]
[87.95069885 62.43471909]
[78.62833405 49.65176010]
[84.79841614 36.09523392]
[83.01595306 21.20151711]
[79.88591766 17.02420235]
[78.78163910 12.51489353]
[79.49034882 8.50082111]
[81.50180054 5.60489130]
[80.38614655 -9.35356236]
[79.27050018 -24.31201553]
[78.15485382 -39.27046967]
[63.62490845 -43.65740967]
[51.66329575 -53.00001144]
[43.88771820 -66.03476715]
[41.34975815 -80.99882507]
[44.39266205 -95.86843872]
[52.60489273 -108.63259125]
[64.87581635 -117.56504822]
[79.54589081 -121.45777130]
[94.63111877 -119.78429413]
[108.09133148 -112.77094269]
[118.10615540 -101.36621857]
[123.32115936 -87.11251831]
[123.03106689 -71.93752289]
[117.27510834 -57.89354706]
[106.83172607 -46.87990952]
[93.11330414 -40.38611603]
[94.22895050 -25.42766380]
[95.34460449 -10.46921062]
[96.46025085 4.48924255]
[97.90966797 19.41905022]
[99.69213867 34.31276703]
[108.88700867 46.03042984]
[102.84442139 60.65225220]
[112.03929138 72.36991119]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[114.24440765 155.90695190]
[116.96903992 159.28782654]
[118.33838654 162.98774719]
[118.41856384 166.54147339]
[117.41999817 169.55303955]
[115.66233063 171.73678589]
[116.55515289 186.71018982]
[117.44796753 201.68359375]
[120.76385498 207.40342712]
[120.70256805 213.08613586]
[118.13769531 217.11485291]
[118.58429718 232.10820007]
[119.03090668 247.10154724]
[119.47751617 262.09490967]
[119.92411804 277.08825684]
[134.92504883 277.30062866]
[149.90216064 278.17169189]
[164.82656860 279.69979858]
[179.66944885 281.88195801]
[194.40214539 284.71398926]
[208.99624634 288.19039917]
[223.42353821 292.30447388]
[237.65621948 297.04830933]
[251.66677856 302.41271973]
[265.42819214 308.38735962]
[278.91390991 314.96069336]
[292.09786987 322.12002563]
[304.95462036 329.85156250]
[317.45938110 338.14035034]
[329.58798218 346.97039795]
[341.31704712 356.32464600]
[352.62390137 366.18508911]
[363.48672485 376.53262329]
[373.88455200 387.34735107]
[383.79733276 398.60833740]
[393.20590210 410.29388428]
[402.09210205 422.38137817]
[410.43881226 434.84756470]
[418.22988892 447.66833496]
[425.45028687 460.81893921]
[432.08612061 474.27401733]
[438.12451172 488.00756836]
[443.55386353 501.99310303]
[448.36364746 516.20361328]
[452.54461670 530.61169434]
[456.08868408 545.18945312]
[458.98901367 559.90887451]
[461.24002075 574.74151611]
[462.83731079 589.65863037]
[463.77786255 604.63153076]
[464.05981445 619.63134766]
[463.68264771 634.62902832]
[462.64709473 649.59570312]
[460.95513916 664.50238037]
[458.61001587 679.32037354]
[455.61633301 694.02111816]
[451.97979736 708.57611084]
[447.70742798 722.95733643]
[442.80752563 737.13702393]
[437.28952026 751.08782959]
[431.16406250 764.78277588]
[424.44296265 778.19543457]
[417.13922119 791.29998779]
[409.26693726 804.07104492]
[400.84124756 816.48394775]
[391.87850952 828.51483154]
[382.39593506 840.14038086]
[372.41189575 851.33825684]
[361.94561768 862.08673096]
[351.01733398 872.36511230]
[339.64810181 882.15356445]
[327.85992432 891.43322754]
[315.67550659 900.18609619]
[303.11837769 908.39532471]
[290.21279907 916.04510498]
[276.98367310 923.12060547]
[263.45651245 929.60815430]
[249.65744019 935.49536133]
[235.61309814 940.77069092]
[221.35060120 945.42407227]
[206.89747620 949.44653320]
[192.28161621 952.83020020]
[177.53121948 955.56866455]
[162.67478943 957.65655518]
[147.74099731 959.08990479]
[132.75865173 959.86590576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 132]
[76 131]
[77 130]
[78 125]
[79 124]
[80 123]
[81 122]
[83 120]
[85 118]
[87 116]
[88 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
