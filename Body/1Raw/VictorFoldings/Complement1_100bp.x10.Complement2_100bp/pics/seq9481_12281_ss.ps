%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[58.87450790 657.39227295]
[48.00946045 647.03735352]
[38.06172562 635.79827881]
[29.10297012 623.75610352]
[21.19774818 610.99749756]
[14.40301800 597.61450195]
[8.76773548 583.70343018]
[4.33250475 569.36456299]
[1.12928092 554.70123291]
[-0.81885570 539.81909180]
[-1.49786854 524.82531738]
[-0.90286529 509.82800293]
[0.96186703 494.93518066]
[4.08289289 480.25411987]
[8.43772411 465.89065552]
[13.99498463 451.94824219]
[20.71463394 438.52737427]
[28.54825401 425.72470093]
[37.43940353 413.63250732]
[47.32402039 402.33789062]
[58.13088608 391.92227173]
[69.78213501 382.46063232]
[82.19381714 374.02120972]
[95.27650452 366.66476440]
[108.93592834 360.44433594]
[103.89901733 346.31530762]
[98.86209869 332.18627930]
[93.82518005 318.05725098]
[88.78826904 303.92822266]
[83.75135040 289.79919434]
[82.02149963 304.69909668]
[77.27236176 318.92745972]
[69.70587921 331.87921143]
[59.64376831 343.00369263]
[47.51388168 351.82785034]
[33.83199310 357.97650146]
[19.17985916 361.18820190]
[4.18049479 361.32635498]
[-10.52831745 358.38513184]
[-24.32115173 352.48956299]
[-36.61153030 343.89035034]
[-46.87685776 332.95309448]
[-54.68064880 320.14291382]
[-59.69108582 306.00448608]
[-61.69511795 291.13894653]
[-60.60753250 276.17843628]
[-56.47457504 261.75906372]
[-49.47198486 248.49391174]
[-39.89751053 236.94708252]
[-28.15826416 227.60951233]
[-14.75340748 220.87826538]
[-0.25291926 217.03953552]
[14.72663116 216.25654602]
[29.54830742 218.56262207]
[43.58188248 223.85966492]
[56.23064041 231.92248535]
[66.95675659 242.40820312]
[75.30413818 254.87100220]
[80.91791534 268.78109741]
[82.03356171 253.82264709]
[75.26430511 240.55514526]
[84.00658417 227.36866760]
[85.12223053 212.41021729]
[86.23787689 197.45176697]
[87.35353088 182.49331665]
[78.89292908 167.11848450]
[89.38685608 151.98709106]
[90.27967072 137.01368713]
[91.17248535 122.04028320]
[92.06530762 107.06687927]
[91.95363617 92.06729889]
[90.83798981 77.10884094]
[89.72234344 62.15039062]
[79.00428772 47.17691422]
[87.23504639 31.67782974]
[85.89681244 16.73764420]
[84.00351715 1.85760999]
[81.55779266 -12.94166088]
[79.11206055 -27.74093246]
[76.66633606 -42.54020309]
[66.65463257 -50.67215347]
[64.92225647 -63.04885101]
[71.85775757 -72.95972443]
[69.63263702 -87.79376984]
[54.59844208 -88.33003998]
[39.91882324 -91.61994171]
[26.09376526 -97.55142212]
[13.59414482 -105.92245483]
[2.84569335 -116.44792175]
[-5.78550053 -128.76933289]
[-12.00546169 -142.46702576]
[-15.60234070 -157.07444763]
[-16.45362854 -172.09410095]
[-14.53033161 -187.01441956]
[-9.89795589 -201.32719421]
[-2.71427894 -214.54496765]
[6.77602625 -226.21752930]
[18.24972343 -235.94732666]
[31.31602287 -243.40295410]
[45.52988815 -248.33049011]
[60.40720749 -250.56210327]
[75.44126129 -250.02177429]
[90.11998749 -246.72792053]
[103.94344330 -240.79270935]
[116.44081116 -232.41831970]
[127.18642426 -221.88995361]
[135.81430054 -209.56620789]
[142.03056335 -195.86685181]
[145.62350464 -181.25843811]
[146.47074890 -166.23857117]
[144.54342651 -151.31877136]
[139.90719604 -137.00724792]
[132.71995544 -123.79141235]
[123.22650146 -112.12140656]
[111.75018311 -102.39469910]
[98.68187714 -94.94258881]
[84.46668243 -90.01888275]
[86.69179535 -75.18483734]
[98.34754944 -62.06575394]
[91.46560669 -44.98593140]
[93.91133118 -30.18665886]
[96.35706329 -15.38738823]
[98.80278778 -0.58811742]
[109.52696228 -11.07583046]
[124.43102264 -9.38199139]
[132.52824402 3.24476409]
[127.84966278 17.49646187]
[113.84415436 22.86728096]
[100.83699799 15.39941120]
[102.17523193 30.33959579]
[111.25360870 38.33394241]
[112.49078369 50.76990509]
[104.68079376 61.03474045]
[105.79644012 75.99319458]
[106.91209412 90.95164490]
[115.32826996 78.53520966]
[129.07905579 72.54222870]
[143.90361023 74.82968140]
[155.20840454 84.68878174]
[159.49049377 99.06458282]
[155.42304993 113.50258636]
[144.26640320 123.52901459]
[129.47756958 126.03707123]
[115.63902283 120.24961090]
[107.03871155 107.95969391]
[106.14589691 122.93310547]
[105.25307465 137.90650940]
[104.36026001 152.87991333]
[112.32221985 163.02732849]
[111.27033234 175.48033142]
[102.31198120 183.60896301]
[101.19633484 198.56741333]
[100.08068848 213.52586365]
[98.96503448 228.48431396]
[105.65449524 242.82174683]
[96.99201202 254.93829346]
[95.87636566 269.89672852]
[97.88037872 284.76226807]
[102.91729736 298.89129639]
[107.95421600 313.02032471]
[112.99112701 327.14935303]
[118.02804565 341.27838135]
[123.06496429 355.40740967]
[137.57897949 351.58419800]
[152.36494446 349.00561523]
[167.31632996 347.69027710]
[182.32539368 347.64764404]
[197.28399658 348.87805176]
[212.08436584 351.37258911]
[226.61987305 355.11334229]
[240.78576660 360.07330322]
[254.47998047 366.21676636]
[267.60388184 373.49945068]
[280.06286621 381.86889648]
[291.76715088 391.26480103]
[302.63247681 401.61944580]
[312.58050537 412.85824585]
[321.53958130 424.90020752]
[329.44512939 437.65856934]
[336.24020386 451.04144287]
[341.87585449 464.95233154]
[346.31143188 479.29107666]
[349.51504517 493.95431519]
[351.46356201 508.83642578]
[352.14297485 523.83020020]
[351.54833984 538.82751465]
[349.68399048 553.72039795]
[346.56335449 568.40155029]
[342.20889282 582.76507568]
[336.65200806 596.70764160]
[329.93267822 610.12872314]
[322.09939575 622.93157959]
[313.20855713 635.02398682]
[303.32424927 646.31884766]
[292.51763916 656.73480225]
[280.86663818 666.19671631]
[268.45516968 674.63647461]
[255.37268066 681.99322510]
[241.71340942 688.21405029]
[227.57579041 693.25402832]
[213.06167603 697.07684326]
[198.27563477 699.65509033]
[183.32421875 700.97003174]
[168.31515503 701.01226807]
[153.35658264 699.78149414]
[138.55627441 697.28656006]
[124.02087402 693.54541016]
[109.85510254 688.58508301]
[96.16104126 682.44128418]
[83.03734589 675.15826416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[59 157]
[60 156]
[62 154]
[63 153]
[64 152]
[65 151]
[67 148]
[68 147]
[69 146]
[70 145]
[71 135]
[72 134]
[73 133]
[75 130]
[76 129]
[77 123]
[78 122]
[79 121]
[80 120]
[83 118]
[84 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
