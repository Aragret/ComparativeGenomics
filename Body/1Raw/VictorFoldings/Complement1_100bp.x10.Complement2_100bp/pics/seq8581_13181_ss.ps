%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[147.48088074 153.72091675]
[153.93899536 140.17250061]
[140.98600769 132.60812378]
[128.03300476 125.04374695]
[115.08000946 117.47937012]
[102.12700653 109.91499329]
[94.13155365 108.89262390]
[89.03866577 102.14033508]
[76.19972992 94.38394165]
[63.36079025 86.62754822]
[50.52184677 78.87116241]
[42.10768890 91.29306793]
[33.06012344 103.26150513]
[23.40354729 114.74420929]
[13.16398811 125.71022034]
[2.36905289 136.12997437]
[-8.95215797 145.97538757]
[-20.76912308 155.21990967]
[-33.04998779 163.83862305]
[-45.76164627 171.80830383]
[-58.86982346 179.10745239]
[-72.33918762 185.71640015]
[-86.13343048 191.61732483]
[-100.21535492 196.79431152]
[-114.54700470 201.23341370]
[-129.08975220 204.92266846]
[-143.80436707 207.85212708]
[-158.65121460 210.01390076]
[-173.59025574 211.40213013]
[-188.58120728 212.01310730]
[-203.58366394 211.84516907]
[-218.55717468 210.89877319]
[-233.46139526 209.17646790]
[-248.25611877 206.68289185]
[-262.90148926 203.42477417]
[-277.35800171 199.41090393]
[-291.58666992 194.65208435]
[-305.54919434 189.16116333]
[-319.20788574 182.95292664]
[-332.52593994 176.04411316]
[-345.46743774 168.45336914]
[-357.99749756 160.20114136]
[-370.08233643 151.30966187]
[-381.68942261 141.80293274]
[-392.78738403 131.70655823]
[-403.34637451 121.04776764]
[-413.33789062 109.85528564]
[-422.73498535 98.15929413]
[-431.51239014 85.99132538]
[-439.64636230 73.38417053]
[-447.11502075 60.37182999]
[-453.89822388 46.98937225]
[-459.97766113 33.27288055]
[-465.33700562 19.25932884]
[-469.96173096 4.98649693]
[-473.83941650 -9.50713825]
[-476.95959473 -24.18250465]
[-479.31387329 -39.00003815]
[-480.89587402 -53.91979599]
[-481.70135498 -68.90155792]
[-481.72814941 -83.90493011]
[-480.97616577 -98.88947296]
[-479.44744873 -113.81478119]
[-477.14608765 -128.64062500]
[-474.07830811 -143.32704163]
[-470.25241089 -157.83442688]
[-465.67864990 -172.12368774]
[-460.36941528 -186.15628052]
[-454.33895874 -199.89439392]
[-447.60360718 -213.30097961]
[-440.18145752 -226.33990479]
[-432.09252930 -238.97602844]
[-423.35864258 -251.17526245]
[-414.00335693 -262.90472412]
[-404.05187988 -274.13281250]
[-393.53100586 -284.82922363]
[-382.46914673 -294.96517944]
[-370.89611816 -304.51327515]
[-358.84307861 -313.44784546]
[-346.34255981 -321.74478149]
[-333.42825317 -329.38168335]
[-320.13494873 -336.33798218]
[-306.49850464 -342.59494019]
[-292.55569458 -348.13568115]
[-278.34408569 -352.94528198]
[-263.90200806 -357.01074219]
[-249.26837158 -360.32113647]
[-234.48263550 -362.86752319]
[-219.58465576 -364.64303589]
[-204.61462402 -365.64288330]
[-189.61285400 -365.86437988]
[-174.61981201 -365.30694580]
[-159.67591858 -363.97204590]
[-144.82145691 -361.86331177]
[-130.09646606 -358.98641968]
[-115.54064941 -355.34909058]
[-101.19323730 -350.96121216]
[-87.09291077 -345.83450317]
[-73.27769470 -339.98287964]
[-59.78481674 -333.42208862]
[-46.65066147 -326.16976929]
[-33.91062927 -318.24554443]
[-21.59906960 -309.67071533]
[-9.74917126 -300.46844482]
[1.60712004 -290.66351318]
[12.43918991 -280.28237915]
[22.71783638 -269.35299683]
[32.41535187 -257.90484619]
[41.50559235 -245.96879578]
[49.96405029 -233.57699585]
[57.76792526 -220.76289368]
[64.89617920 -207.56100464]
[71.32958984 -194.00691223]
[77.05082703 -180.13719177]
[82.04445648 -165.98919678]
[86.29701996 -151.60108948]
[89.79705048 -137.01165771]
[92.53511047 -122.26021576]
[94.50382996 -107.38654327]
[95.69788361 -92.43074036]
[96.11407471 -77.43311310]
[95.75125885 -62.43410492]
[94.61043549 -47.47414398]
[92.69466400 -32.59355927]
[90.00910950 -17.83246994]
[86.56101990 -3.23066831]
[82.35969543 11.17248249]
[77.41644287 25.33815193]
[71.74460602 39.22815704]
[65.35946655 52.80504608]
[58.27824020 66.03221893]
[71.11717987 73.78861237]
[83.95612335 81.54500580]
[96.79505920 89.30139160]
[109.69139099 96.96199036]
[122.64438629 104.52636719]
[135.59738159 112.09075165]
[148.55038452 119.65512848]
[161.50338745 127.21950531]
[170.12991333 114.93743134]
[179.75395203 103.42028809]
[190.30795288 92.74885559]
[201.71792603 82.99800110]
[213.90380859 74.23611450]
[226.78013611 66.52465057]
[240.25659180 59.91770172]
[254.23864746 54.46161652]
[268.62820435 50.19466400]
[283.32437134 47.14677429]
[298.22402954 45.33932877]
[313.22265625 44.78499985]
[328.21508789 45.48767853]
[343.09613037 47.44243622]
[357.76141357 50.63556290]
[372.10806274 55.04466248]
[386.03546143 60.63880157]
[399.44589233 67.37874603]
[412.24530029 75.21720886]
[424.34390259 84.09922791]
[435.65686035 93.96248627]
[446.10476685 104.73780060]
[455.61441040 116.34958649]
[464.11901855 128.71640015]
[471.55895996 141.75149536]
[477.88204956 155.36344910]
[483.04394531 169.45675659]
[487.00842285 183.93257141]
[489.74768066 198.68937683]
[491.24252319 213.62362671]
[491.48242188 228.63058472]
[490.46572876 243.60499573]
[488.19958496 258.44180298]
[484.69982910 273.03695679]
[479.99108887 287.28808594]
[474.10632324 301.09518433]
[467.08685303 314.36141968]
[458.98187256 326.99377441]
[449.84829712 338.90359497]
[439.75012207 350.00738525]
[428.75823975 360.22720337]
[416.94973755 369.49142456]
[404.40740967 377.73501587]
[391.21929932 384.90017700]
[377.47784424 390.93664551]
[363.27944946 395.80209351]
[348.72372437 399.46237183]
[333.91278076 401.89178467]
[318.95046997 403.07333374]
[303.94177246 402.99874878]
[288.99197388 401.66848755]
[274.20590210 399.09191895]
[259.68728638 395.28710938]
[245.53797913 390.28073120]
[231.85722351 384.10794067]
[218.74096680 376.81201172]
[206.28123474 368.44412231]
[194.56541443 359.06295776]
[183.67568970 348.73434448]
[173.68843079 337.53073120]
[164.67370605 325.53067017]
[156.69473267 312.81835938]
[149.80751038 299.48297119]
[144.06031799 285.61804199]
[139.49346924 271.32083130]
[136.13902283 256.69158936]
[134.02049255 241.83299255]
[133.15272522 226.84921265]
[133.54182434 211.84538269]
[135.18507385 196.92672729]
[138.07090759 182.19789124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 139]
[3 138]
[4 137]
[5 136]
[6 135]
[8 134]
[9 133]
[10 132]
[11 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
