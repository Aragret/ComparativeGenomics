%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[162.75674438 687.82104492]
[152.36785889 676.85534668]
[145.49043274 663.40625000]
[142.68197632 648.56408691]
[144.17018127 633.53204346]
[149.83438110 619.52874756]
[159.21543884 607.68927002]
[171.55284119 598.97351074]
[185.84646606 594.08789062]
[185.17668152 579.10284424]
[184.50688171 564.11779785]
[169.98825073 557.02404785]
[160.97624207 543.49853516]
[160.00939941 527.18035889]
[167.44612122 512.51782227]
[181.34112549 503.55563354]
[180.44831848 488.58221436]
[179.55549622 473.60882568]
[178.66267395 458.63540649]
[177.76986694 443.66201782]
[176.87704468 428.68859863]
[175.98423767 413.71517944]
[175.09141541 398.74179077]
[172.53558350 383.96112061]
[168.34857178 369.55734253]
[164.05444336 355.18515015]
[159.65345764 340.84527588]
[155.25245667 326.50543213]
[143.31254578 324.31137085]
[133.37974548 317.20697021]
[127.37474060 306.49057007]
[126.49064636 294.16589355]
[130.95646667 282.56741333]
[139.98194885 273.91824341]
[136.00985718 259.45370483]
[132.03776550 244.98918152]
[128.06567383 230.52465820]
[124.09356689 216.06013489]
[111.06179810 208.93914795]
[106.82747650 194.32664490]
[114.38498688 180.70600891]
[110.41289520 166.24148560]
[99.58153534 156.01744080]
[103.38825226 140.66102600]
[99.41616058 126.19649506]
[95.44406128 111.73197174]
[91.14994049 97.35976410]
[86.53592682 83.08702850]
[74.92882538 72.33594513]
[78.37606812 57.84575272]
[72.75867462 50.64279175]
[73.80133057 43.32605362]
[69.40032959 28.98620796]
[65.57772827 25.43165970]
[63.68963623 21.19038773]
[63.67368698 17.11426163]
[65.13845062 13.90695763]
[61.38215256 -0.61510199]
[50.43554306 -12.03798866]
[54.73914719 -26.29730988]
[50.98284531 -40.81937027]
[47.22654724 -55.34142685]
[43.47024536 -69.86348724]
[39.71394348 -84.38554382]
[35.95764542 -98.90760803]
[31.34363556 -113.18033600]
[25.88827705 -127.15313721]
[20.43292046 -141.12593079]
[14.87369537 -155.05773926]
[9.21090794 -168.94775391]
[3.54812169 -182.83778381]
[-11.03122425 -179.20138550]
[-25.97969627 -177.67694092]
[-40.99296188 -178.29547119]
[-55.76537323 -181.04441833]
[-69.99617767 -185.86779785]
[-83.39566040 -192.66740417]
[-95.69101715 -201.30480957]
[-106.63194275 -211.60418701]
[-115.99568176 -223.35581970]
[-123.59160614 -236.32049561]
[-129.26506042 -250.23425293]
[-132.90057373 -264.81381226]
[-134.42408752 -279.76239014]
[-133.80462646 -294.77560425]
[-131.05476379 -309.54785156]
[-126.23051453 -323.77835083]
[-119.43007660 -337.17742920]
[-110.79190063 -349.47225952]
[-100.49185181 -360.41253662]
[-88.73963165 -369.77554321]
[-75.77449036 -377.37066650]
[-61.86038208 -383.04327393]
[-47.28058624 -386.67785645]
[-32.33192444 -388.20046997]
[-17.31873703 -387.58007812]
[-2.54666710 -384.82928467]
[11.68354130 -380.00415039]
[25.08218002 -373.20288086]
[37.37647247 -364.56396484]
[48.31611633 -354.26324463]
[57.67840195 -342.51043701]
[65.27272034 -329.54483032]
[70.94446564 -315.63037109]
[74.57815552 -301.05035400]
[76.09983063 -286.10159302]
[75.47850037 -271.08843994]
[72.72682190 -256.31652832]
[67.90080261 -242.08662415]
[61.09870911 -228.68841553]
[52.45901489 -216.39465332]
[42.15761185 -205.45564270]
[30.40423012 -196.09408569]
[17.43814850 -188.50057983]
[23.10093498 -174.61054993]
[28.76372147 -160.72052002]
[34.19976425 -155.71339417]
[34.40571976 -146.58129883]
[39.86107635 -132.60848999]
[45.31643295 -118.63569641]
[50.40884781 -132.74481201]
[62.75671768 -141.26127625]
[77.75459290 -141.00865173]
[89.80863190 -132.08116150]
[94.42298126 -117.80854034]
[89.87660217 -103.51411438]
[77.86517334 -94.52936554]
[62.86867523 -94.20537567]
[50.47970200 -102.66390991]
[54.23600388 -88.14184570]
[57.99230576 -73.61978912]
[61.74860382 -59.09772873]
[65.50490570 -44.57566833]
[69.26120758 -30.05360985]
[79.93914032 -19.66943932]
[75.90421295 -4.37140274]
[79.66051483 10.15065670]
[83.74018097 24.58520889]
[88.14117432 38.92505646]
[92.64880371 53.23174286]
[103.92588043 62.96194077]
[100.80866241 78.47302246]
[105.42266846 92.74575043]
[108.57270050 94.97054291]
[110.72677612 98.57302094]
[111.29160309 103.07723999]
[109.90858459 107.75988007]
[113.88068390 122.22440338]
[117.85277557 136.68891907]
[128.96824646 147.94757080]
[124.87741852 162.26937866]
[128.84951782 176.73390198]
[142.30326843 184.58465576]
[146.12548828 199.31031799]
[138.55809021 212.08804321]
[142.53019714 226.55256653]
[146.50228882 241.01708984]
[150.47438049 255.48161316]
[154.44647217 269.94613647]
[171.59690857 275.83004761]
[181.69355774 290.70074463]
[180.84989929 308.49789429]
[169.59230042 322.10443115]
[173.99330139 336.44430542]
[178.39430237 350.78414917]
[183.90383911 358.06994629]
[182.75234985 365.37033081]
[186.93936157 379.77410889]
[190.42889404 365.18566895]
[198.89268494 352.80163574]
[211.21716309 344.25134277]
[225.78082275 340.65975952]
[240.66758728 342.49938965]
[253.91883850 349.52822876]
[263.79113770 360.82147217]
[268.98562622 374.89334106]
[268.81887817 389.89239502]
[263.31280518 403.84530640]
[253.19187927 414.91629028]
[239.78764343 421.64877319]
[224.86364746 423.15698242]
[210.38343811 419.24249268]
[198.25210571 410.42031860]
[190.06481934 397.84896851]
[190.95764160 412.82238770]
[191.85044861 427.79577637]
[192.74327087 442.76919556]
[193.63609314 457.74258423]
[194.52890015 472.71600342]
[195.42172241 487.68939209]
[196.31452942 502.66281128]
[209.13130188 508.26577759]
[218.24012756 518.79412842]
[221.90653992 532.15582275]
[219.47000122 545.72833252]
[211.46209717 556.87292480]
[199.49192810 563.44799805]
[200.16171265 578.43304443]
[200.83149719 593.41809082]
[215.50399780 597.00903320]
[228.56977844 604.58935547]
[238.96968079 615.54467773]
[245.86062622 628.98681641]
[248.68399048 643.82611084]
[247.21089172 658.85968018]
[241.56074524 672.86865234]
[232.19160461 684.71752930]
[219.86296082 693.44573975]
[205.57424927 698.34570312]
[190.48379517 699.02020264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 199]
[10 198]
[11 197]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[23 184]
[24 168]
[25 167]
[26 165]
[27 164]
[28 163]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[41 152]
[42 151]
[44 149]
[45 148]
[46 147]
[47 143]
[48 142]
[50 140]
[52 139]
[53 138]
[57 137]
[58 136]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[66 120]
[67 119]
[68 118]
[69 116]
[70 115]
[71 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
