%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[21.97823906 654.42712402]
[8.07876778 660.07684326]
[-6.11083031 664.95233154]
[-20.54746056 669.03869629]
[-35.18727875 672.32360840]
[-49.98582458 674.79705811]
[-64.89815521 676.45153809]
[-79.87898254 677.28198242]
[-94.88281250 677.28588867]
[-109.86407471 676.46331787]
[-124.77727509 674.81665039]
[-139.57711792 672.35101318]
[-154.21865845 669.07379150]
[-168.65742493 664.99499512]
[-182.84959412 660.12695312]
[-196.75202942 654.48449707]
[-210.32250977 648.08477783]
[-223.51985168 640.94720459]
[-236.30395508 633.09344482]
[-248.63600159 624.54736328]
[-260.47854614 615.33489990]
[-271.79559326 605.48406982]
[-282.55279541 595.02471924]
[-292.71749878 583.98870850]
[-302.25881958 572.40948486]
[-311.14773560 560.32226562]
[-319.35733032 547.76367188]
[-326.86264038 534.77191162]
[-333.64083862 521.38647461]
[-339.67138672 507.64791870]
[-344.93594360 493.59802246]
[-349.41851807 479.27944946]
[-353.10549927 464.73568726]
[-355.98571777 450.01092529]
[-358.05041504 435.14984131]
[-359.29327393 420.19757080]
[-359.71060181 405.19955444]
[-359.30105591 390.20129395]
[-358.06591797 375.24841309]
[-356.00894165 360.38623047]
[-353.13635254 345.65997314]
[-349.45687866 331.11428833]
[-344.98171997 316.79342651]
[-339.72442627 302.74081421]
[-333.70101929 288.99914551]
[-326.92971802 275.61016846]
[-319.43118286 262.61453247]
[-311.22808838 250.05172729]
[-302.34539795 237.95986938]
[-292.81008911 226.37571716]
[-282.65112305 215.33442688]
[-271.89932251 204.86953735]
[-260.58737183 195.01283264]
[-248.74961853 185.79425049]
[-236.42199707 177.24177551]
[-223.64195251 169.38139343]
[-210.44831848 162.23698425]
[-196.88113403 155.83023071]
[-182.98162842 150.18057251]
[-168.79199219 145.30520630]
[-154.35533142 141.21891785]
[-139.71549988 137.93411255]
[-124.91693115 135.46078491]
[-110.00458527 133.80642700]
[-95.02375031 132.97607422]
[-80.01992035 132.97224426]
[-65.03866577 133.79493713]
[-50.12548065 135.44168091]
[-35.32565308 137.90745544]
[-20.68413734 141.18478394]
[-6.24539232 145.26368713]
[7.94672823 150.13182068]
[21.84912300 155.77435303]
[35.41957092 162.17417908]
[48.61686325 169.31185913]
[56.46861649 156.53102112]
[56.53809738 141.63658142]
[70.35441589 133.92814636]
[78.20617676 121.14730835]
[86.05792999 108.36646271]
[84.03924561 96.89623260]
[90.20932007 87.01840973]
[101.40256500 83.80086517]
[109.44374084 71.13834381]
[116.32315063 57.80891418]
[121.98593903 43.91888809]
[127.64872742 30.02886009]
[133.31150818 16.13883400]
[138.97430420 2.24880648]
[125.73968506 -4.84081268]
[113.31864929 -13.27500820]
[101.84729004 -22.96137047]
[91.45128632 -33.79376984]
[82.24455261 -45.65352249]
[74.32795715 -58.41068268]
[67.78823090 -71.92548370]
[62.69703674 -86.04983521]
[59.11015701 -100.62899780]
[57.06688309 -115.50322723]
[56.58961105 -130.50956726]
[57.68356323 -145.48356628]
[60.33675766 -160.26119995]
[64.52012634 -174.68052673]
[70.18782806 -188.58358765]
[77.27777100 -201.81802368]
[85.71226501 -214.23884583]
[95.39891052 -225.70997620]
[106.23155975 -236.10571289]
[118.09153748 -245.31216431]
[130.84889221 -253.22845459]
[144.36384583 -259.76785278]
[158.48832703 -264.85870361]
[173.06758118 -268.44522095]
[187.94184875 -270.48812866]
[202.94819641 -270.96505737]
[217.92218018 -269.87072754]
[232.69973755 -267.21716309]
[247.11897278 -263.03344727]
[261.02188110 -257.36541748]
[274.25616455 -250.27514648]
[286.67678833 -241.84034729]
[298.14767456 -232.15344238]
[308.54315186 -221.32052612]
[317.74929810 -209.46032715]
[325.66528320 -196.70278931]
[332.20434570 -183.18766785]
[337.29486084 -169.06306458]
[340.88104248 -154.48373413]
[342.92358398 -139.60940552]
[343.40011597 -124.60305023]
[342.30545044 -109.62908936]
[339.65151978 -94.85159302]
[335.46746826 -80.43246460]
[329.79907227 -66.52968597]
[322.70849609 -53.29558945]
[314.27340698 -40.87517166]
[304.58621216 -29.40451622]
[293.75305176 -19.00930595]
[281.89260864 -9.80343246]
[269.13488770 -1.88776326]
[255.61961365 4.65097475]
[241.49488831 9.74113941]
[226.91546631 13.32695961]
[212.04107666 15.36914730]
[197.03471375 15.84532738]
[182.06079102 14.75028229]
[167.28335571 12.09601021]
[152.86431885 7.91159296]
[147.20153809 21.80162048]
[141.53875732 35.69164658]
[135.87596130 49.58167267]
[130.21318054 63.47170258]
[142.49981689 54.86714172]
[157.28886414 52.36028671]
[171.72476196 56.43516922]
[183.02018738 66.30499268]
[188.99415588 80.06404877]
[188.49319458 95.05568695]
[181.61402893 108.38523865]
[169.68492126 117.47899628]
[155.00920105 120.58108521]
[140.42050171 117.09254456]
[128.73568726 107.68695831]
[122.21089935 94.18039703]
[122.10626221 79.17951965]
[114.06509399 91.84204102]
[113.79046631 108.61406708]
[98.83876801 116.21821594]
[90.98701477 128.99905396]
[83.13526154 141.77990723]
[82.50416565 157.58851624]
[69.24945831 164.38278198]
[61.39770508 177.16362000]
[73.72981262 185.70960999]
[85.57241058 194.92198181]
[96.88953400 204.77275085]
[107.64682007 215.23199463]
[117.81159210 226.26794434]
[127.35297394 237.84709167]
[136.24200439 249.93428040]
[144.45167542 262.49279785]
[151.95706177 275.48449707]
[158.73536682 288.86990356]
[164.76600647 302.60839844]
[170.03065491 316.65826416]
[174.51333618 330.97677612]
[178.20043945 345.52053833]
[181.08074951 360.24530029]
[183.14553833 375.10635376]
[184.38853455 390.05862427]
[184.80593872 405.05664062]
[184.39649963 420.05487061]
[183.16146851 435.00778198]
[181.10459900 449.86996460]
[178.23211670 464.59625244]
[174.55274963 479.14193726]
[170.07768250 493.46286011]
[164.82049561 507.51550293]
[158.79718018 521.25720215]
[152.02598572 534.64624023]
[144.52751160 547.64190674]
[136.32452393 560.20477295]
[127.44192505 572.29669189]
[117.90670013 583.88092041]
[107.74780273 594.92230225]
[96.99608612 605.38726807]
[85.68419647 615.24401855]
[73.84650421 624.46270752]
[61.51894379 633.01525879]
[48.73896408 640.87573242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 173]
[76 172]
[78 170]
[79 169]
[80 168]
[83 166]
[84 165]
[85 152]
[86 151]
[87 150]
[88 149]
[89 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
