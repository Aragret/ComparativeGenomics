%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[122.76139069 693.51336670]
[124.69355774 678.60656738]
[128.93399048 664.18554688]
[135.37828064 650.60552979]
[143.86770630 638.20080566]
[154.19323730 627.27697754]
[166.10057068 618.10302734]
[179.29650879 610.90484619]
[174.25958252 596.77581787]
[169.22267151 582.64678955]
[164.18574524 568.51776123]
[159.14883423 554.38873291]
[154.11192322 540.25970459]
[145.42233276 552.48632812]
[130.45451355 553.46820068]
[120.24215698 542.48150635]
[122.31345367 527.62518311]
[135.14151001 519.85083008]
[149.26879883 524.88818359]
[145.29670715 510.42364502]
[134.46534729 500.19961548]
[138.27206421 484.84320068]
[134.29997253 470.37866211]
[119.33560181 470.50967407]
[104.83612061 466.75973511]
[91.79141998 459.37866211]
[81.09366608 448.86437988]
[73.47630310 435.92929077]
[69.46374512 421.45211792]
[69.33531189 406.41812134]
[73.10576630 391.85205078]
[80.52389526 378.74835205]
[91.08925629 368.00317383]
[104.08593750 360.35324097]
[100.11383820 345.88873291]
[96.14174652 331.42419434]
[92.16964722 316.95968628]
[81.33829498 306.73562622]
[85.14501190 291.37921143]
[74.31365204 281.15518188]
[78.12036896 265.79876709]
[74.14827728 251.33424377]
[71.30261230 266.06182861]
[65.58905029 279.93106079]
[57.23516083 292.38949585]
[46.57366943 302.94091797]
[34.02922821 311.16506958]
[20.10146904 316.73443604]
[5.34513378 319.42712402]
[-9.65203953 319.13589478]
[-24.29271889 315.87237549]
[-37.99377060 309.76657104]
[-50.20949173 301.06161499]
[-60.45332718 290.10424805]
[-68.31727600 277.33090210]
[-73.48811340 263.25033569]
[-75.75989532 248.42335510]
[-75.04212952 233.44053650]
[-71.36341095 218.89863586]
[-64.87026215 205.37684631]
[-55.82128906 193.41372681]
[-44.57692719 183.48577881]
[-31.58502197 175.98840332]
[-17.36304283 171.22026062]
[-2.47744226 169.37121582]
[12.47888947 170.51495361]
[26.91024971 174.60591125]
[40.24184036 181.48112488]
[51.94267273 190.86679077]
[61.54670334 202.38905334]
[68.67140961 215.58898926]
[73.03220367 229.93678284]
[75.47793579 215.13751221]
[77.92366028 200.33822632]
[80.36939240 185.53895569]
[82.81511688 170.73968506]
[85.26084137 155.94041443]
[87.70657349 141.14114380]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.82022858 57.23404694]
[98.15846252 42.29386139]
[99.05127716 27.32045555]
[99.49788666 12.32710552]
[99.94448853 -2.66624451]
[100.27946472 -17.66250420]
[100.50279236 -32.66084290]
[91.16335297 -48.53082275]
[100.74404907 -63.23379135]
[100.74404907 -78.23378754]
[97.61463928 -86.81543732]
[100.85737610 -93.45670319]
[93.32640076 -107.37054443]
[101.25232697 -119.98120880]
[93.72135162 -133.89505005]
[101.64728546 -146.50570679]
[101.87061310 -161.50404358]
[88.39529419 -168.76176453]
[79.84594727 -181.45692444]
[78.18713379 -196.67228699]
[83.80004883 -210.91145325]
[95.39487457 -220.90237427]
[110.30722046 -224.34919739]
[125.11032104 -220.45989990]
[136.40254211 -210.12818909]
[141.58901978 -195.72821045]
[139.47792053 -180.56900024]
[130.55438232 -168.13401794]
[116.86894989 -161.28071594]
[116.64562225 -146.28237915]
[124.19257355 -133.44132996]
[116.25067139 -119.75788116]
[123.79762268 -106.91682434]
[115.85571289 -93.23337555]
[115.74404907 -78.23378754]
[115.74404907 -63.23379135]
[124.07300568 -54.46138763]
[124.19576263 -41.96464157]
[115.50112915 -32.43751526]
[115.27780151 -17.43917656]
[118.32137299 -10.70430374]
[114.93784332 -2.21963859]
[114.49123383 12.77371120]
[114.04463196 27.76706123]
[115.86653137 29.89750671]
[116.95432281 32.87799835]
[116.97998047 36.43253708]
[115.72141266 40.17158890]
[113.09864807 43.63209534]
[111.76041412 58.57228088]
[114.29463196 65.51486969]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[106.53733826 131.73652649]
[107.05319977 135.64784241]
[106.34429169 139.13105774]
[104.70352173 141.84666443]
[102.50584412 143.58688354]
[100.06011200 158.38615417]
[97.61438751 173.18542480]
[95.16866302 187.98469543]
[92.72293091 202.78396606]
[90.27720642 217.58323669]
[87.83147430 232.38250732]
[88.61280060 247.36213684]
[92.58489990 261.82666016]
[103.70036316 273.08529663]
[99.60953522 287.40713501]
[110.72499847 298.66577148]
[106.63417053 312.98757935]
[110.60626984 327.45208740]
[114.57836151 341.91662598]
[118.55046082 356.38116455]
[133.63128662 356.32073975]
[148.20254517 360.16314697]
[161.27247620 367.64062500]
[171.95312500 378.23831177]
[179.52066040 391.22946167]
[183.46443176 405.72549438]
[183.52139282 420.73675537]
[179.69366455 435.23986816]
[172.24797058 448.24780273]
[161.69708252 458.87680054]
[148.76449585 466.40658569]
[152.73658752 480.87109375]
[163.85205078 492.12973022]
[159.76123047 506.45156860]
[163.73332214 520.91607666]
[168.24095154 535.22277832]
[173.27786255 549.35180664]
[178.31478882 563.48083496]
[183.35169983 577.60986328]
[188.38861084 591.73889160]
[193.42553711 605.86791992]
[208.19909668 603.09515381]
[223.22453308 602.66772461]
[238.13183594 604.59625244]
[252.55387878 608.83306885]
[266.13552856 615.27398682]
[278.54229736 623.76037598]
[289.46868896 634.08319092]
[298.64559937 645.98828125]
[305.84707642 659.18243408]
[310.89575195 673.34069824]
[313.66726685 688.11450195]
[314.09344482 703.13995361]
[312.16372681 718.04711914]
[307.92568970 732.46881104]
[301.48364258 746.04992676]
[292.99624634 758.45599365]
[282.67251587 769.38153076]
[270.76669312 778.55749512]
[257.57196045 785.75787354]
[243.41325378 790.80535889]
[228.63922119 793.57568359]
[213.61372375 794.00061035]
[198.70674133 792.06964111]
[184.28538513 787.83038330]
[170.70481873 781.38726807]
[158.29943848 772.89886475]
[147.37475586 762.57421875]
[138.19979858 750.66760254]
[131.00051880 737.47229004]
[125.95417786 723.31317139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[13 175]
[19 174]
[20 173]
[22 171]
[23 170]
[34 159]
[35 158]
[36 157]
[37 156]
[39 154]
[41 152]
[42 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 139]
[80 138]
[82 136]
[83 135]
[84 133]
[85 132]
[86 127]
[87 126]
[88 125]
[89 123]
[90 122]
[92 119]
[93 118]
[95 117]
[97 115]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
