%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[240.55238342 423.43701172]
[253.06478882 415.06893921]
[247.40200806 401.17889404]
[241.73921204 387.28887939]
[236.07643127 373.39883423]
[230.41363525 359.50881958]
[224.54467773 345.70465088]
[218.47084045 331.98937988]
[212.39701843 318.27410889]
[206.32318115 304.55883789]
[200.24934387 290.84356689]
[194.17550659 277.12829590]
[188.10168457 263.41305542]
[181.72306824 249.83683777]
[175.04287720 236.40646362]
[168.36268616 222.97608948]
[161.68249512 209.54570007]
[154.21475220 196.53675842]
[140.76362610 190.14015198]
[139.66212463 174.35733032]
[131.43331909 161.81593323]
[123.20451355 149.27453613]
[114.97570801 136.73313904]
[106.74690247 124.19173431]
[98.51808929 111.65032959]
[98.96401215 126.64369965]
[93.34850311 140.55290222]
[82.61785889 151.03399658]
[68.58039856 156.32073975]
[53.60166550 155.52220154]
[40.20584869 148.77297974]
[30.65037918 137.21040344]
[26.54551697 122.78299713]
[28.58300591 107.92201996]
[36.41949081 95.13181305]
[48.73439026 86.56774139]
[63.45242310 83.67301178]
[78.09334564 86.93543243]
[90.19100952 95.80646515]
[84.52822876 81.91643524]
[80.40374756 78.71710205]
[78.14479828 74.66118622]
[77.76525879 70.60273743]
[78.93804169 67.27754211]
[73.90112305 53.14851379]
[68.86420441 39.01948547]
[63.82728958 24.89045715]
[58.79037476 10.76142693]
[46.86831665 0.36069945]
[49.88260651 -14.22570992]
[43.20241165 -27.65608597]
[34.97360229 -40.19748688]
[26.74479485 -52.73888779]
[19.42053795 -58.19718933]
[18.48845482 -65.52883148]
[10.44728184 -78.19136047]
[2.40610886 -90.85388184]
[-11.03973103 -84.17353058]
[-25.11020851 -78.93527222]
[-39.65116119 -75.19649506]
[-54.50326538 -72.99816895]
[-69.50379944 -72.36437988]
[-84.48841095 -73.30206299]
[-99.29290771 -75.80095673]
[-113.75509644 -79.83367157]
[-127.71651459 -85.35603333]
[-141.02420044 -92.30753326]
[-153.53233337 -100.61199188]
[-165.10389709 -110.17844391]
[-175.61206055 -120.90206146]
[-184.94174194 -132.66534424]
[-192.99067688 -145.33943176]
[-199.67070007 -158.78543091]
[-204.90861511 -172.85603333]
[-208.64704895 -187.39707947]
[-210.84501648 -202.24923706]
[-211.47843933 -217.24978638]
[-210.54039001 -232.23437500]
[-208.04113770 -247.03880310]
[-204.00805664 -261.50091553]
[-198.48536682 -275.46218872]
[-191.53355408 -288.76971436]
[-183.22877502 -301.27764893]
[-173.66204834 -312.84896851]
[-162.93817139 -323.35687256]
[-151.17466736 -332.68624878]
[-138.50038147 -340.73489380]
[-125.05422211 -347.41458130]
[-110.98348999 -352.65216064]
[-96.44235992 -356.39022827]
[-81.59014130 -358.58782959]
[-66.58957672 -359.22091675]
[-51.60501862 -358.28250122]
[-36.80064011 -355.78286743]
[-22.33864594 -351.74945068]
[-8.37749386 -346.22640991]
[4.92985106 -339.27426147]
[17.43758774 -330.96920776]
[29.00867271 -321.40219116]
[39.51632690 -310.67807007]
[48.84542465 -298.91433716]
[56.89375305 -286.23986816]
[63.57312393 -272.79351807]
[68.81035614 -258.72265625]
[72.54807281 -244.18144226]
[74.74531555 -229.32917786]
[75.37802124 -214.32859802]
[74.43923950 -199.34405518]
[71.93927002 -184.53973389]
[67.90549469 -170.07785034]
[62.38211823 -156.11682129]
[55.42965317 -142.80964661]
[47.12427521 -130.30210876]
[37.55698395 -118.73126221]
[26.83260345 -108.22386932]
[15.06863403 -98.89505768]
[23.10980606 -86.23252869]
[31.15098000 -73.57000732]
[39.28619385 -60.96769333]
[47.51500320 -48.42629242]
[55.74381256 -35.88489151]
[54.61080551 -50.84204102]
[58.59510422 -65.30320740]
[67.22863007 -77.56951141]
[79.49713135 -86.19992065]
[93.95931244 -90.18053436]
[108.91617584 -89.04372406]
[122.61059570 -82.92303467]
[133.43377686 -72.53752899]
[140.11421204 -59.10726929]
[141.86709595 -44.21004105]
[138.48649597 -29.59595490]
[130.36956787 -16.98185349]
[118.46987915 -7.84963465]
[104.18539429 -3.27213931]
[89.19423676 -3.78712749]
[75.25755310 -9.33409977]
[64.01163483 -19.26262474]
[75.57341766 -9.87250137]
[72.91940308 5.72451067]
[77.95632172 19.85354042]
[82.99323273 33.98257065]
[88.03015137 48.11159897]
[93.06707001 62.24062729]
[98.41825104 76.25365448]
[104.08103943 90.14367676]
[111.05949402 103.42152405]
[119.28829956 115.96292114]
[127.51710510 128.50431824]
[135.74591064 141.04573059]
[143.97471619 153.58712769]
[152.20353699 166.12852478]
[166.24324036 173.42218018]
[166.75614929 188.30795288]
[168.81857300 173.45040894]
[179.13676453 162.56301880]
[193.86225891 159.70651245]
[207.50283813 165.94628906]
[214.97088623 178.95506287]
[213.48101807 193.88088989]
[203.58889771 205.15679932]
[188.98406982 208.57716370]
[175.11286926 202.86550903]
[181.79306030 216.29588318]
[188.47325134 229.72625732]
[195.15344238 243.15664673]
[199.50445557 246.04034424]
[202.05882263 249.91702271]
[202.73916626 253.93598938]
[201.81694031 257.33920288]
[207.89077759 271.05447388]
[213.96461487 284.76974487]
[220.03845215 298.48501587]
[226.11227417 312.20028687]
[232.18611145 325.91552734]
[238.25994873 339.63079834]
[243.36706543 343.82946777]
[245.29734802 349.17468262]
[244.30366516 353.84603882]
[249.96646118 367.73605347]
[255.62924194 381.62609863]
[261.29202271 395.51611328]
[266.95480347 409.40612793]
[281.75134277 406.64071655]
[296.80166626 406.91076660]
[311.48947144 410.20520020]
[325.21328735 416.38919067]
[337.41116333 425.20944214]
[347.58358765 436.30477905]
[355.31399536 449.22085571]
[360.28585815 463.42880249]
[362.29556274 478.34677124]
[361.26083374 493.36392212]
[357.22399902 507.86526489]
[350.35040283 521.25701904]
[340.92150879 532.99072266]
[329.32339478 542.58599854]
[316.03106689 549.64984131]
[301.58874512 553.89306641]
[286.58789062 555.14184570]
[271.64279175 553.34509277]
[257.36538696 548.57635498]
[244.34037781 541.03088379]
[233.10110474 531.01770020]
[224.10780334 518.94683838]
[217.72875977 505.31262207]
[214.22518921 490.67327881]
[213.74055481 475.62835693]
[216.29470825 460.79388428]
[221.78305054 446.77737427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[13 170]
[14 166]
[15 165]
[16 164]
[17 163]
[18 154]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[39 146]
[40 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[50 138]
[51 121]
[52 120]
[53 119]
[55 118]
[56 117]
[57 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
