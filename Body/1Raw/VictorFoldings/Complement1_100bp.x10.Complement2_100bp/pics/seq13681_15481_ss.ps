%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[141.84817505 501.73608398]
[136.72164917 487.62710571]
[132.95950317 473.09469604]
[130.59579468 458.27047729]
[129.65193176 443.28869629]
[130.13648987 428.28500366]
[132.04504395 413.39535522]
[135.36032104 398.75451660]
[140.05230713 384.49514771]
[146.07850647 370.74633789]
[153.38433838 357.63262939]
[161.90364075 345.27276611]
[171.55926514 333.77868652]
[182.26374817 323.25448608]
[193.92016602 313.79550171]
[206.42294312 305.48733521]
[199.34584045 292.26181030]
[192.26873779 279.03628540]
[185.19163513 265.81076050]
[178.11451721 252.58523560]
[165.28771973 245.01408386]
[165.59869385 229.19593811]
[152.77188110 221.62478638]
[153.08285522 205.80664062]
[146.00575256 192.58111572]
[138.92864990 179.35559082]
[131.85153198 166.13006592]
[124.77443695 152.90452576]
[117.59906769 139.73205566]
[110.32583618 126.61336517]
[101.91121674 114.19586945]
[88.90633392 109.06123352]
[86.47151947 95.29302979]
[76.98262024 83.67576599]
[61.50222015 81.94515991]
[52.04462051 70.02842712]
[53.78989029 55.28089905]
[44.30099487 43.66363525]
[34.81209564 32.04637146]
[25.32319641 20.42910957]
[15.83429813 8.81184673]
[10.95265293 6.96343470]
[7.60311365 3.74879885]
[6.04952955 -0.01967897]
[6.19508553 -3.54262567]
[-8.25385094 -9.98768520]
[-9.65187168 -24.81653595]
[-18.61256790 -36.84591293]
[-27.57326317 -48.87528992]
[-32.36750412 -50.93983459]
[-35.57015991 -54.30083084]
[-36.95392609 -58.13492203]
[-36.65120697 -61.64785385]
[-45.06582642 -74.06534576]
[-53.48044205 -86.48284149]
[-67.62718201 -93.56665802]
[-68.36166382 -108.44313812]
[-81.62895203 -101.41275024]
[-95.57859039 -95.85804749]
[-110.04703522 -91.84414673]
[-124.86464691 -89.41812134]
[-139.85769653 -88.60841370]
[-154.85040283 -89.42451477]
[-169.66697693 -91.85685730]
[-184.13371277 -95.87691498]
[-198.08099365 -101.43756866]
[-211.34527588 -108.47360992]
[-223.77105713 -116.90254974]
[-235.21266174 -126.62557220]
[-245.53591919 -137.52867126]
[-254.61981201 -149.48400879]
[-262.35784912 -162.35140991]
[-268.65927124 -175.98002625]
[-273.45019531 -190.21006775]
[-276.67449951 -204.87469482]
[-278.29434204 -219.80197144]
[-278.29074097 -234.81686401]
[-276.66372681 -249.74336243]
[-273.43240356 -264.40643311]
[-268.63461304 -278.63415527]
[-262.32666016 -292.25976562]
[-254.58245850 -305.12347412]
[-245.49282837 -317.07443237]
[-235.16433716 -327.97256470]
[-223.71806335 -337.69009399]
[-211.28823853 -346.11306763]
[-198.02056885 -353.14276123]
[-184.07063293 -358.69671631]
[-169.60197449 -362.70980835]
[-154.78422546 -365.13504028]
[-139.79113770 -365.94393921]
[-124.79847717 -365.12704468]
[-109.98203278 -362.69390869]
[-95.51551056 -358.67306519]
[-81.56854248 -353.11166382]
[-68.30463409 -346.07492065]
[-55.87929916 -337.64529419]
[-44.43822479 -327.92166138]
[-34.11554718 -317.01800537]
[-25.03229523 -305.06219482]
[-17.29496574 -292.19436646]
[-10.99427605 -278.56539917]
[-6.20409679 -264.33511353]
[-2.98059106 -249.67030334]
[-1.36155283 -234.74295044]
[-1.36596453 -219.72805786]
[-2.99377418 -204.80165100]
[-6.22589684 -190.13874817]
[-11.02443695 -175.91127014]
[-17.33313560 -162.28601074]
[-25.07802391 -149.42272949]
[-34.16830063 -137.47224426]
[-44.49738312 -126.57466888]
[-55.94416809 -116.85775757]
[-42.39929962 -110.66213226]
[-41.06294632 -94.89746094]
[-32.64833069 -82.47996521]
[-24.23371124 -70.06246948]
[-15.54388618 -57.83598709]
[-6.58318996 -45.80661011]
[2.37750578 -33.77723312]
[16.18551445 -28.19259453]
[18.22446251 -12.50332165]
[27.45156097 -0.67705184]
[36.94046021 10.94021130]
[46.42935944 22.55747414]
[55.91825867 34.17473984]
[65.40715790 45.79199982]
[80.20621490 47.02623749]
[89.99480438 58.67261887]
[88.59988403 74.18686676]
[98.08878326 85.80413055]
[111.09366608 90.93876648]
[113.52848053 104.70697021]
[111.84967041 89.80120850]
[116.72268677 75.61482239]
[127.20663452 64.88696289]
[141.27722168 59.68902588]
[156.21763611 61.02464676]
[169.14312744 68.63593292]
[177.55798340 81.05327606]
[179.83741760 95.87906647]
[175.54132080 110.25068665]
[165.49919128 121.39320374]
[151.65000916 127.15516663]
[136.66783142 126.42402649]
[123.44453430 119.34013367]
[130.71775818 132.45883179]
[137.61576843 138.44676208]
[137.99995422 145.82742310]
[145.07707214 159.05294800]
[152.15417480 172.27848816]
[159.23127747 185.50401306]
[166.30838013 198.72953796]
[179.64138794 207.24665833]
[178.82421875 222.11883545]
[192.15722656 230.63595581]
[191.34005737 245.50813293]
[198.41716003 258.73364258]
[205.49426270 271.95919800]
[212.57136536 285.18472290]
[219.64846802 298.41024780]
[233.49722290 292.61743164]
[247.83392334 288.16726685]
[262.52871704 285.10006714]
[277.44854736 283.44357300]
[292.45825195 283.21286011]
[307.42193604 284.40994263]
[322.20407104 287.02401733]
[336.67077637 291.03140259]
[350.69104004 296.39581299]
[364.13787842 303.06863403]
[376.88955688 310.98947144]
[388.83056641 320.08660889]
[399.85272217 330.27758789]
[409.85626221 341.47018433]
[418.75057983 353.56298828]
[426.45510864 366.44650269]
[432.90005493 380.00405884]
[438.02709961 394.11285400]
[441.78979492 408.64514160]
[444.15402222 423.46926880]
[445.09841919 438.45101929]
[444.61444092 453.45471191]
[442.70642090 468.34445190]
[439.39166260 482.98538208]
[434.70019531 497.24493408]
[428.67449951 510.99395752]
[421.36914062 524.10797119]
[412.85031128 536.46813965]
[403.19509888 547.96252441]
[392.49099731 558.48712158]
[380.83493042 567.94653320]
[368.33242798 576.25512695]
[355.09677124 583.33770752]
[341.24783325 589.13000488]
[326.91094971 593.57965088]
[312.21606445 596.64630127]
[297.29617310 598.30224609]
[282.28646851 598.53240967]
[267.32281494 597.33477783]
[252.54078674 594.72015381]
[238.07421875 590.71228027]
[224.05415344 585.34735107]
[210.60754395 578.67401123]
[197.85615540 570.75268555]
[185.91549683 561.65515137]
[174.89369202 551.46374512]
[164.89056396 540.27081299]
[155.99668884 528.17767334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[22 156]
[24 154]
[25 153]
[26 152]
[27 151]
[28 150]
[29 148]
[30 147]
[31 134]
[33 132]
[34 131]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[45 123]
[47 121]
[48 120]
[49 119]
[53 118]
[54 117]
[55 116]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
