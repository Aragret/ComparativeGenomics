%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[124.88236237 540.61779785]
[114.39698029 529.88397217]
[104.62838745 518.49389648]
[95.61756134 506.49539185]
[87.40229797 493.93878174]
[80.01705170 480.87673950]
[73.49279785 467.36404419]
[67.85691071 453.45736694]
[63.13301849 439.21505737]
[59.34093857 424.69680786]
[56.49657822 409.96356201]
[54.61186981 395.07708740]
[53.69471359 380.09985352]
[53.74895859 365.09466553]
[54.77437592 350.12445068]
[56.76666641 335.25198364]
[59.71747208 320.53970337]
[63.61441803 306.04925537]
[68.44116211 291.84146118]
[74.17745209 277.97589111]
[80.79922485 264.51074219]
[88.27871704 251.50242615]
[96.58455658 239.00553894]
[105.68189240 227.07250977]
[115.53257751 215.75337219]
[126.09529877 205.09559631]
[137.32574463 195.14392090]
[149.17680359 185.94004822]
[135.63192749 179.74441528]
[134.29557800 163.97975159]
[125.88095856 151.56225586]
[117.46633911 139.14476013]
[109.05172729 126.72726440]
[100.63710785 114.30976868]
[88.14216614 108.03536987]
[86.94539642 94.10485077]
[78.53078461 81.68735504]
[70.11616516 69.26985931]
[61.70154190 56.85236359]
[53.28692627 44.43486786]
[44.87230682 32.01737213]
[36.45768738 19.59987640]
[28.04306984 7.18238115]
[19.62845039 -5.23511457]
[4.66893625 -0.38206434]
[-11.03724766 0.06331263]
[-26.21964455 -3.92683005]
[-39.65246582 -12.02188492]
[-50.25356674 -23.56016922]
[-57.17161179 -37.60300064]
[-59.85443878 -53.01106262]
[-58.09313965 -68.53683472]
[-52.03827286 -82.92561340]
[-42.18706512 -95.01687622]
[-50.78562927 -107.30771637]
[-59.38419342 -119.59854889]
[-67.98275757 -131.88938904]
[-81.15805817 -124.68698120]
[-95.04573059 -118.97770691]
[-109.47718811 -114.83087921]
[-124.27724457 -112.29681396]
[-139.26625061 -111.40629578]
[-154.26223755 -112.17012787]
[-169.08317566 -114.57903290]
[-183.54916382 -118.60376740]
[-197.48458862 -124.19548035]
[-210.72027588 -131.28630066]
[-223.09556580 -139.79013062]
[-234.46025085 -149.60377502]
[-244.67634583 -160.60806274]
[-253.61984253 -172.66944885]
[-261.18218994 -185.64149475]
[-267.27157593 -199.36674500]
[-271.81408691 -213.67858887]
[-274.75457764 -228.40328979]
[-276.05737305 -243.36209106]
[-275.70660400 -258.37344360]
[-273.70657349 -273.25506592]
[-270.08157349 -287.82635498]
[-264.87557983 -301.91040039]
[-258.15176392 -315.33627319]
[-249.99180603 -327.94097900]
[-240.49472046 -339.57147217]
[-229.77580261 -350.08660889]
[-217.96517944 -359.35873413]
[-205.20620728 -367.27526855]
[-191.65377808 -373.74017334]
[-177.47239685 -378.67492676]
[-162.83422852 -382.01962280]
[-147.91694641 -383.73364258]
[-132.90164185 -383.79623413]
[-117.97058868 -382.20663452]
[-103.30503845 -378.98406982]
[-89.08301544 -374.16772461]
[-75.47715759 -367.81604004]
[-62.65262985 -360.00613403]
[-50.76511383 -350.83279419]
[-39.95890808 -340.40737915]
[-30.36519241 -328.85647583]
[-22.10042763 -316.32025146]
[-15.26493645 -302.95089722]
[-9.94169903 -288.91073608]
[-6.19533157 -274.37017822]
[-4.07131338 -259.50573730]
[-3.59542775 -244.49784851]
[-4.77345133 -229.52870178]
[-7.59108353 -214.77999878]
[-12.01412201 -200.43078613]
[-17.98887444 -186.65524292]
[-25.44281197 -173.62059021]
[-34.28545380 -161.48507690]
[-44.40945435 -150.39598083]
[-55.69191742 -140.48794556]
[-47.09335327 -128.19711304]
[-38.49478912 -115.90627289]
[-29.89622688 -103.61544037]
[-16.40912247 -108.46776581]
[-2.11323237 -109.66050720]
[12.01537037 -107.10591888]
[25.01040268 -100.97231293]
[35.98144913 -91.67301178]
[44.17498398 -79.83848572]
[49.02610779 -66.27360535]
[50.19750595 -51.90290070]
[47.60289383 -37.70757675]
[41.41332245 -24.65848160]
[32.04594803 -13.64973259]
[40.46056366 -1.23223758]
[48.87518311 11.18525791]
[57.28980255 23.60275269]
[65.70442200 36.02024841]
[74.11904144 48.43774414]
[82.53366089 60.85523987]
[90.94827271 73.27273560]
[99.36289215 85.69023132]
[111.85783386 91.96463013]
[113.05460358 105.89514923]
[121.46921539 118.31264496]
[129.88383484 130.73014832]
[138.29846191 143.14764404]
[146.71307373 155.56513977]
[160.85981750 162.64894104]
[161.59429932 177.52542114]
[174.53491211 169.92941284]
[187.94007874 163.18696594]
[201.75357056 157.32638550]
[215.91743469 152.37225342]
[230.37229919 148.34532166]
[245.05749512 145.26251221]
[259.91143799 143.13673401]
[274.87185669 141.97691345]
[289.87594604 141.78791809]
[304.86083984 142.57052612]
[319.76361084 144.32147217]
[334.52182007 147.03340149]
[349.07351685 150.69493103]
[363.35769653 155.29072571]
[377.31442261 160.80149841]
[390.88516235 167.20413208]
[404.01303101 174.47177124]
[416.64288330 182.57394409]
[428.72183228 191.47663879]
[440.19915771 201.14254761]
[451.02676392 211.53111267]
[461.15917969 222.59875488]
[470.55395508 234.29907227]
[479.17166138 246.58296204]
[486.97616577 259.39892578]
[493.93469238 272.69317627]
[500.01812744 286.41000366]
[505.20089722 300.49182129]
[509.46127319 314.87960815]
[512.78137207 329.51296997]
[515.14733887 344.33056641]
[516.54919434 359.27023315]
[516.98101807 374.26931763]
[516.44110107 389.26489258]
[514.93164062 404.19409180]
[512.45892334 418.99423218]
[509.03344727 433.60330200]
[504.66946411 447.95999146]
[499.38534546 462.00411987]
[493.20321655 475.67672729]
[486.14904785 488.92050171]
[478.25238037 501.67987061]
[469.54635620 513.90130615]
[460.06750488 525.53363037]
[449.85559082 536.52795410]
[438.95339966 546.83819580]
[427.40670776 556.42114258]
[415.26391602 565.23657227]
[402.57598877 573.24749756]
[389.39608765 580.42034912]
[375.77957153 586.72497559]
[361.78347778 592.13507080]
[347.46655273 596.62774658]
[332.88882446 600.18432617]
[318.11148071 602.78985596]
[303.19644165 604.43334961]
[288.20632935 605.10791016]
[273.20397949 604.81079102]
[258.25231934 603.54315186]
[243.41407776 601.31036377]
[228.75146484 598.12182617]
[214.32601929 593.99084473]
[200.19821167 588.93475342]
[186.42732239 582.97473145]
[173.07109070 576.13586426]
[160.18556213 568.44677734]
[147.82476807 559.93975830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 143]
[30 141]
[31 140]
[32 139]
[33 138]
[34 137]
[36 135]
[37 134]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[43 128]
[44 127]
[54 116]
[55 115]
[56 114]
[57 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
