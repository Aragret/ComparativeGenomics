%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[158.33790588 734.75921631]
[144.37663269 729.26544189]
[130.71408081 723.06597900]
[117.38591766 716.17694092]
[104.42688751 708.61639404]
[91.87081146 700.40399170]
[79.75044250 691.56115723]
[68.09740448 682.11102295]
[56.94210052 672.07818604]
[46.31363297 661.48883057]
[36.23972702 650.37060547]
[26.74666595 638.75250244]
[17.85921669 626.66485596]
[9.60056591 614.13916016]
[1.99225914 601.20806885]
[-4.94585419 587.90539551]
[-11.19567299 574.26580811]
[-16.74089241 560.32489014]
[-21.56704712 546.11901855]
[-25.66154289 531.68524170]
[-29.01370049 517.06121826]
[-31.61477280 502.28512573]
[-33.45797348 487.39550781]
[-34.53849792 472.43118286]
[-34.85351944 457.43118286]
[-34.40222549 442.43469238]
[-33.18578720 427.48080444]
[-31.20737839 412.60852051]
[-28.47216225 397.85665894]
[-24.98727417 383.26373291]
[-20.76180649 368.86773682]
[-15.80678177 354.70629883]
[-10.13512897 340.81634521]
[-3.76164269 327.23410034]
[3.29704785 313.99502563]
[11.02252769 301.13360596]
[19.39464188 288.68347168]
[28.39154816 276.67703247]
[37.98977661 265.14566040]
[48.16428375 254.11941528]
[58.88852310 243.62707520]
[70.13452148 233.69599915]
[81.87294006 224.35212708]
[94.07315063 215.61979675]
[106.70332336 207.52180481]
[119.73050690 200.07929993]
[133.12072754 193.31166077]
[127.04689026 179.59640503]
[120.97305298 165.88113403]
[108.74488831 157.37693787]
[110.23150635 141.62573242]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[81.52070618 78.44825745]
[74.24747467 65.32956696]
[66.97424316 52.21086884]
[54.81320572 47.91297150]
[49.02539062 36.83664703]
[52.23016739 25.17234421]
[45.15306091 11.94681644]
[38.07595444 -1.27871120]
[30.99884987 -14.50423908]
[16.98626900 -9.09802055]
[2.41552377 -5.45480585]
[-12.49249649 -3.62982559]
[-27.51178932 -3.65074539]
[-42.41466904 -5.51724815]
[-56.97520828 -9.20103836]
[-70.97267151 -14.64627075]
[-84.19487000 -21.77039719]
[-96.44134521 -30.46541595]
[-107.52645874 -40.59951782]
[-117.28215027 -52.01906586]
[-125.56053162 -64.55094147]
[-132.23609924 -78.00518036]
[-137.20767212 -92.17779541]
[-140.39985657 -106.85395050]
[-141.76426697 -121.81115723]
[-141.28022766 -136.82266235]
[-138.95507812 -151.66090393]
[-134.82406616 -166.10092163]
[-128.94979858 -179.92382812]
[-121.42134857 -192.92005920]
[-112.35283661 -204.89260864]
[-101.88174438 -215.65995789]
[-90.16680145 -225.05888367]
[-77.38561249 -232.94689941]
[-63.73193741 -239.20442200]
[-49.41275406 -243.73660278]
[-34.64514542 -246.47473145]
[-19.65297890 -247.37728882]
[-4.66353703 -246.43058777]
[10.09594727 -243.64900208]
[24.40172195 -239.07467651]
[38.03691864 -232.77697754]
[50.79482651 -224.85136414]
[62.48204041 -215.41798401]
[72.92138672 -204.61985779]
[81.95461273 -192.62066650]
[89.44476318 -179.60232544]
[95.27829742 -165.76217651]
[99.36678314 -151.31005859]
[101.64823914 -136.46504211]
[102.08807373 -121.45217133]
[100.67962646 -106.49904633]
[97.44424438 -91.83235168]
[92.43097687 -77.67443085]
[85.71582031 -64.23991394]
[77.40057373 -51.73246384]
[67.61130524 -40.34168625]
[56.49640274 -30.24026871]
[44.22437668 -21.58134460]
[51.30148315 -8.35581684]
[58.37858963 4.86971092]
[65.45569611 18.09523773]
[80.83997345 26.53863335]
[80.09294128 44.93764114]
[87.36616516 58.05633545]
[94.63939667 71.17502594]
[99.80315399 57.09186172]
[113.35423279 50.66003799]
[127.52995300 55.56400299]
[134.20982361 68.99453735]
[129.56732178 83.25802612]
[116.26185608 90.18369293]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[123.94676971 135.55189514]
[136.60937500 145.03709412]
[134.68832397 159.80729675]
[140.76216125 173.52256775]
[146.83598328 187.23783875]
[160.84654236 181.87097168]
[175.11285400 177.22651672]
[189.59770203 173.31655884]
[204.26329041 170.15130615]
[219.07138062 167.73901367]
[233.98333740 166.08598328]
[248.96023560 165.19651794]
[263.96301270 165.07295227]
[278.95251465 165.71559143]
[293.88967896 167.12277222]
[308.73550415 169.29081726]
[323.45123291 172.21408081]
[337.99853516 175.88491821]
[352.33938599 180.29376221]
[366.43646240 185.42910767]
[380.25289917 191.27757263]
[393.75268555 197.82386780]
[406.90063477 205.05094910]
[419.66238403 212.93992615]
[432.00466919 221.47024536]
[443.89532471 230.61964417]
[455.30325317 240.36425781]
[466.19876099 250.67864990]
[476.55337524 261.53591919]
[486.34011841 272.90774536]
[495.53344727 284.76446533]
[504.10934448 297.07510376]
[512.04547119 309.80761719]
[519.32116699 322.92871094]
[525.91735840 336.40420532]
[531.81689453 350.19891357]
[537.00433350 364.27688599]
[541.46618652 378.60134888]
[545.19079590 393.13494873]
[548.16845703 407.83978271]
[550.39141846 422.67749023]
[551.85382080 437.60934448]
[552.55194092 452.59637451]
[552.48382568 467.59951782]
[551.64978027 482.57958984]
[550.05194092 497.49755859]
[547.69445801 512.31445312]
[544.58343506 526.99163818]
[540.72711182 541.49090576]
[536.13543701 555.77429199]
[530.82043457 569.80456543]
[524.79595947 583.54516602]
[518.07775879 596.96026611]
[510.68334961 610.01483154]
[502.63198853 622.67474365]
[493.94473267 634.90710449]
[484.64419556 646.67987061]
[474.75466919 657.96246338]
[464.30194092 668.72528076]
[453.31329346 678.94036865]
[441.81738281 688.58105469]
[429.84420776 697.62219238]
[417.42501831 706.04016113]
[404.59219360 713.81304932]
[391.37924194 720.92047119]
[377.82058716 727.34399414]
[363.95162964 733.06683350]
[349.80856323 738.07409668]
[335.42828369 742.35260010]
[320.84826660 745.89129639]
[306.10659790 748.68090820]
[291.24172974 750.71411133]
[276.29241943 751.98571777]
[261.29769897 752.49230957]
[246.29664612 752.23260498]
[231.32844543 751.20727539]
[216.43211365 749.41894531]
[201.64651489 746.87243652]
[187.01025391 743.57421875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 136]
[48 135]
[49 134]
[51 132]
[52 131]
[53 130]
[55 128]
[56 121]
[57 120]
[58 119]
[61 117]
[62 116]
[63 115]
[64 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
