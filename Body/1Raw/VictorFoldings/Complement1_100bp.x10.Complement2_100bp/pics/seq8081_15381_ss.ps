%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[168.50343323 665.65826416]
[175.68870544 652.35925293]
[186.47587585 641.77020264]
[199.90574646 634.83264160]
[197.23995972 620.07141113]
[194.57415771 605.31018066]
[191.90837097 590.54895020]
[189.24256897 575.78778076]
[186.46696472 561.04681396]
[183.58168030 546.32690430]
[169.44677734 541.62908936]
[159.49496460 530.41223145]
[156.47386169 515.62237549]
[161.29293823 501.21151733]
[172.75294495 491.08157349]
[169.86767578 476.36169434]
[166.76356506 461.68637085]
[163.44129944 447.05892944]
[153.07728577 436.36145020]
[157.56590271 421.19030762]
[154.24363708 406.56286621]
[150.92138672 391.93539429]
[140.55735779 381.23791504]
[145.04597473 366.06677246]
[141.72372437 351.43933105]
[138.40145874 336.81185913]
[135.07919312 322.18441772]
[125.01415253 315.47460938]
[122.12660980 303.31542969]
[128.49519348 292.09918213]
[125.39109039 277.42388916]
[112.97514343 265.02182007]
[118.82826996 247.56265259]
[115.50601196 232.93519592]
[112.18375397 218.30773926]
[108.86149597 203.68026733]
[105.53923798 189.05281067]
[102.21697235 174.42535400]
[98.89471436 159.79789734]
[95.57245636 145.17042542]
[90.74581146 159.37266541]
[80.61984253 170.43904114]
[66.90095520 176.50468445]
[51.90101242 176.54742432]
[38.14777756 170.56005859]
[27.95891190 159.55155945]
[23.05141640 145.37705994]
[24.25228882 130.42520142]
[31.35916328 117.21565247]
[43.17440414 107.97444153]
[57.70693970 104.25887299]
[72.50778198 106.69509125]
[85.08271790 114.87254333]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.80016327 43.04516220]
[90.35356140 28.05181313]
[89.46073914 13.07840824]
[88.12250519 -1.86177683]
[84.23995972 -10.13000774]
[86.87726593 -17.03409576]
[78.13498688 -30.22057152]
[84.90424347 -43.48806381]
[83.78859711 -58.44651794]
[82.67294312 -73.40496826]
[73.93066406 -86.59144592]
[80.69992828 -99.85894012]
[69.00750732 -110.15093231]
[68.08916473 -125.33682251]
[77.97306061 -136.42033386]
[76.85741425 -151.37878418]
[75.74176025 -166.33723450]
[74.51478577 -181.28697205]
[73.17655182 -196.22715759]
[64.23891449 -209.28201294]
[70.80989075 -222.64881897]
[69.47165680 -237.58900452]
[68.13342285 -252.52919006]
[66.68400574 -267.45898438]
[65.12348175 -282.37759399]
[63.56295776 -297.29620361]
[59.99497223 -302.86227417]
[59.80245590 -308.54205322]
[62.18487549 -312.68127441]
[61.06922913 -327.63970947]
[59.95357895 -342.59817505]
[58.83792877 -357.55664062]
[43.99010849 -360.20104980]
[30.26674271 -366.45565796]
[18.53049660 -375.92727661]
[9.51911831 -388.02047729]
[3.79907179 -401.97512817]
[1.72992373 -416.91397095]
[3.44174266 -431.89797974]
[8.82692242 -445.98522949]
[17.54694557 -458.29019165]
[29.05366325 -468.03936768]
[42.62375641 -474.61990356]
[57.40419388 -477.61813354]
[72.46586609 -476.84561157]
[86.86199188 -472.35089111]
[99.68759918 -464.41650391]
[110.13648224 -453.54122925]
[117.55179596 -440.40866089]
[121.46742249 -425.84439087]
[121.63721466 -410.76385498]
[118.05049896 -396.11508179]
[110.93274689 -382.81890869]
[100.73137665 -371.71112061]
[88.08765411 -363.48999023]
[73.79638672 -358.67227173]
[74.91203308 -343.71383667]
[76.02767944 -328.75537109]
[77.14333344 -313.79690552]
[78.48156738 -298.85671997]
[80.04208374 -283.93814087]
[81.60260773 -269.01953125]
[85.42491913 -262.69403076]
[83.07360840 -253.86741638]
[84.41184235 -238.92724609]
[85.75007629 -223.98706055]
[94.59199524 -212.00082397]
[88.11673737 -197.56539917]
[89.45497131 -182.62521362]
[93.18268585 -176.24351501]
[90.70021820 -167.45288086]
[91.81586456 -152.49443054]
[92.93151855 -137.53598022]
[104.35019684 -128.04129028]
[105.69470978 -112.88717651]
[95.65837860 -100.97458649]
[104.32086182 -88.85803986]
[97.63140106 -74.52062225]
[98.74704742 -59.56216812]
[99.86269379 -44.60371399]
[108.52517700 -32.48716736]
[101.83571625 -18.14974403]
[103.06269073 -3.20001101]
[104.40092468 11.74017429]
[106.46308899 13.63902473]
[107.89733887 16.46913719]
[108.34521484 19.99543953]
[107.53987122 23.85755730]
[105.34690857 27.60520744]
[105.79351044 42.59855652]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[110.19991302 141.84817505]
[113.52217865 156.47563171]
[116.84443665 171.10308838]
[120.16669464 185.73054504]
[123.48895264 200.35801697]
[126.81121063 214.98547363]
[130.13346863 229.61293030]
[133.45573425 244.24038696]
[143.93370056 251.76202393]
[146.39968872 264.01367188]
[140.06639099 274.31976318]
[143.17050171 288.99508667]
[155.79293823 302.40237427]
[149.70666504 318.86215210]
[153.02891541 333.48959351]
[156.35118103 348.11706543]
[159.67344666 362.74453735]
[170.27508545 374.48828125]
[165.54884338 388.61312866]
[168.87110901 403.24060059]
[172.19335938 417.86804199]
[182.79501343 429.61178589]
[178.06877136 443.73666382]
[181.39102173 458.36413574]
[185.59515381 463.46676636]
[186.46124268 469.08343506]
[184.58757019 473.47640991]
[187.47283936 488.19631958]
[201.90907288 493.25027466]
[211.81192017 504.77548218]
[214.59782410 519.61138916]
[209.61700439 533.75524902]
[198.30157471 543.44165039]
[201.18684387 558.16149902]
[205.90850830 565.98095703]
[204.00378418 573.12194824]
[206.66958618 587.88317871]
[209.33537292 602.64440918]
[212.00117493 617.40563965]
[214.66696167 632.16680908]
[229.67512512 633.96862793]
[243.48474121 640.11566162]
[254.86787415 650.06134033]
[262.81234741 662.92120361]
[266.61172485 677.55187988]
[265.92819214 692.65234375]
[260.82250977 706.87988281]
[251.74867249 718.96942139]
[239.51353455 727.84600830]
[225.20503235 732.72021484]
[210.09547424 733.15875244]
[195.52836609 729.12255859]
[182.79902649 720.97052002]
[173.03932190 709.42755127]
[167.11711121 695.52008057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 189]
[10 188]
[15 183]
[16 182]
[17 179]
[18 178]
[20 176]
[21 175]
[22 174]
[24 172]
[25 171]
[26 170]
[27 169]
[30 167]
[31 166]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[54 155]
[55 154]
[57 152]
[58 151]
[59 150]
[60 149]
[61 148]
[62 143]
[63 142]
[65 141]
[67 139]
[68 138]
[69 137]
[71 135]
[74 132]
[75 131]
[76 130]
[77 128]
[78 127]
[80 125]
[81 124]
[82 123]
[83 121]
[84 120]
[85 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
