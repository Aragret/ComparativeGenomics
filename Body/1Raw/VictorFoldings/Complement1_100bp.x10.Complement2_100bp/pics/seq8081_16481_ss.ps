%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[262.88232422 367.42218018]
[268.16015625 353.36544800]
[274.92687988 339.96176147]
[283.10314941 327.36828613]
[292.59307861 315.73263550]
[303.28546143 305.19125366]
[293.97058105 293.43402100]
[284.65570068 281.67675781]
[275.34082031 269.91952515]
[266.02590942 258.16226196]
[256.71102905 246.40501404]
[247.39616394 234.64775085]
[238.08126831 222.89050293]
[227.51422119 212.24449158]
[215.82664490 202.84234619]
[204.13906860 193.44020081]
[192.45147705 184.03804016]
[177.68493652 182.08915710]
[171.78204346 167.41036987]
[160.09445190 158.00822449]
[148.40687561 148.60607910]
[136.71929932 139.20391846]
[125.03171539 129.80177307]
[113.34413147 120.39962006]
[101.65655518 110.99746704]
[102.19156647 125.98792267]
[92.07138062 137.05958557]
[77.09329987 137.87011719]
[65.83744049 127.95520020]
[64.75167847 112.99454498]
[74.45798492 101.55830383]
[89.39523315 100.19738770]
[78.59307861 89.79001617]
[67.79092407 79.38264465]
[56.98876572 68.97527313]
[61.00708008 83.42702484]
[59.26537704 98.32556152]
[52.02202988 111.46077728]
[40.35154343 120.88414001]
[25.98516655 125.19774628]
[11.05406475 123.76170349]
[-2.22681999 116.78903961]
[-11.88734913 105.31410217]
[-16.49444008 91.03913116]
[-15.36465740 76.08174133]
[-8.66559887 62.66076279]
[2.60897064 52.76712418]
[16.78653526 47.86848831]
[31.76393890 48.69153214]
[45.31783295 55.11303329]
[36.90321350 42.69553757]
[28.48859596 30.27804184]
[11.73868752 22.62806892]
[11.16071033 5.08860302]
[2.56214690 -7.20223475]
[-6.03641701 -19.49307251]
[-14.63498116 -31.78391075]
[-23.23354530 -44.07474899]
[-36.43857956 -36.92458344]
[-50.37260818 -31.32631874]
[-64.85397339 -27.35293579]
[-79.69388580 -25.05623817]
[-94.69886780 -24.46616936]
[-109.67330933 -25.59041977]
[-124.42198181 -28.41433334]
[-138.75260925 -32.90109253]
[-152.47834778 -38.99221039]
[-165.42027283 -46.60826492]
[-177.40965271 -55.64997864]
[-188.29017639 -65.99946594]
[-197.92001343 -77.52179718]
[-206.17359924 -90.06675720]
[-212.94332886 -103.47080994]
[-218.14096069 -117.55918884]
[-221.69871521 -132.14822388]
[-223.57023621 -147.04772949]
[-223.73109436 -162.06344604]
[-222.17921448 -176.99963379]
[-218.93481445 -191.66154480]
[-214.04020691 -205.85803223]
[-207.55918884 -219.40403748]
[-199.57624817 -232.12294006]
[-190.19548035 -243.84893799]
[-179.53916931 -254.42915344]
[-167.74624634 -263.72564697]
[-154.97045898 -271.61721802]
[-141.37835693 -278.00097656]
[-127.14714050 -282.79373169]
[-112.46235657 -285.93295288]
[-97.51544189 -287.37774658]
[-82.50125885 -287.10928345]
[-67.61554718 -285.13104248]
[-53.05237961 -281.46881104]
[-39.00161362 -276.17034912]
[-25.64643097 -269.30471802]
[-13.16094017 -260.96142578]
[-1.70791793 -251.24926758]
[8.56332207 -240.29484558]
[17.51887321 -228.24098206]
[25.04198265 -215.24479675]
[31.03457069 -201.47575378]
[35.41851044 -187.11334229]
[38.13665009 -172.34481812]
[39.15355301 -157.36270142]
[38.45595932 -142.36233521]
[36.05296326 -127.53926086]
[31.97589874 -113.08674622]
[26.27791214 -99.19319153]
[19.03329277 -86.03974152]
[10.33648682 -73.79787445]
[0.30087492 -62.62718964]
[-10.94270706 -52.67331314]
[-2.34414315 -40.38247299]
[6.25442076 -28.09163666]
[14.85298443 -15.80079842]
[23.45154953 -3.50996089]
[35.30487823 -1.09642041]
[42.56907272 9.07290840]
[40.90608978 21.86342430]
[49.32070923 34.28091812]
[57.73532867 46.69841385]
[67.39614105 58.17311478]
[78.19829559 68.58049011]
[89.00045013 78.98786163]
[99.80260468 89.39523315]
[111.05870056 99.30988312]
[122.74628448 108.71203613]
[134.43386841 118.11418915]
[146.12144470 127.51634216]
[157.80903625 136.91848755]
[169.49661255 146.32064819]
[181.18418884 155.72279358]
[196.78671265 158.34419250]
[201.85363770 172.35046387]
[213.54121399 181.75260925]
[225.22879028 191.15476990]
[236.91638184 200.55691528]
[231.41300964 186.60295105]
[231.24914551 171.60385132]
[236.44635010 157.53298950]
[246.32083130 146.24163818]
[259.57342529 139.21536255]
[274.46054077 137.37860107]
[289.02352905 140.97299194]
[301.34634399 149.52565002]
[309.80773926 161.91131592]
[313.29446411 176.50044250]
[311.34777832 191.37359619]
[304.22381592 204.57392883]
[292.85980225 214.36473083]
[278.75094604 219.45785522]
[263.75344849 219.18319702]
[249.83853149 213.57562256]
[259.15341187 225.33287048]
[268.46829224 237.09011841]
[277.78317261 248.84738159]
[287.09805298 260.60461426]
[296.41293335 272.36187744]
[305.72781372 284.11914062]
[315.04269409 295.87637329]
[327.75033569 287.87869263]
[341.24819946 281.30184937]
[355.37805176 276.22296143]
[369.97418213 272.70156860]
[384.86547852 270.77896118]
[399.87734985 270.47769165]
[414.83380127 271.80130005]
[429.55944824 274.73422241]
[443.88168335 279.24212646]
[457.63253784 285.27212524]
[470.65084839 292.75354004]
[482.78390503 301.59863281]
[493.88952637 311.70373535]
[503.83743286 322.95031738]
[512.51104736 335.20657349]
[519.80871582 348.32876587]
[525.64477539 362.16305542]
[529.95080566 376.54724121]
[532.67639160 391.31268311]
[533.78955078 406.28628540]
[533.27722168 421.29241943]
[531.14544678 436.15524292]
[527.41918945 450.70040894]
[522.14208984 464.75741577]
[515.37609863 478.16146851]
[507.20053101 490.75540161]
[497.71121216 502.39157104]
[487.01940918 512.93347168]
[475.25048828 522.25762939]
[462.54241943 530.25463867]
[449.04418945 536.83074951]
[434.91409302 541.90887451]
[420.31777954 545.42950439]
[405.42636108 547.35131836]
[390.41445923 547.65173340]
[375.45809937 546.32733154]
[360.73260498 543.39361572]
[346.41061401 538.88494873]
[332.66006470 532.85418701]
[319.64218140 525.37207031]
[307.50958252 516.52636719]
[296.40454102 506.42065430]
[286.45721436 495.17352295]
[277.78424072 482.91680908]
[270.48733521 469.79425049]
[264.65200806 455.95962524]
[260.34671021 441.57519531]
[257.62191772 426.80960083]
[256.50955200 411.83596802]
[257.02267456 396.82983398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[14 137]
[15 136]
[16 135]
[17 134]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
[32 125]
[33 124]
[34 123]
[35 122]
[50 121]
[51 120]
[52 119]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
