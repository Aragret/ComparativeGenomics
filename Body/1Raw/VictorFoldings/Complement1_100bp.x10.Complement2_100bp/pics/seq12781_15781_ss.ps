%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[83.14005280 463.20040894]
[74.42892456 450.97875977]
[66.74296570 438.08770752]
[60.13333511 424.61309814]
[54.64400864 410.64456177]
[50.31152344 396.27505493]
[47.16471100 381.60025024]
[45.22451019 366.71774292]
[44.50383377 351.72662354]
[45.00748062 336.72665405]
[46.73209763 321.81765747]
[49.66620636 307.09884644]
[53.79028320 292.66815186]
[59.07688141 278.62161255]
[65.49081421 265.05276489]
[72.98941040 252.05183411]
[81.52275085 239.70538330]
[91.03405762 228.09556580]
[101.46002960 217.29965210]
[112.73128510 207.38946533]
[124.77281189 198.43098450]
[137.50447083 190.48381042]
[130.62506104 177.15438843]
[123.74565125 163.82495117]
[116.86623383 150.49552917]
[111.00515747 145.99336243]
[109.98529816 136.91603088]
[103.30510712 123.48566437]
[96.62490845 110.05528259]
[89.25421906 96.99110413]
[81.21304321 84.32857513]
[73.17187500 71.66605377]
[65.13069916 59.00352478]
[62.84729004 73.82870483]
[52.36816025 84.56126404]
[37.60176086 87.19821930]
[24.05560112 80.75605011]
[16.78206062 67.63752747]
[18.49398804 52.73554230]
[28.55288124 41.60815430]
[43.20701599 38.40561676]
[56.99164963 44.32315445]
[50.51215363 30.79480934]
[44.03265762 17.26646423]
[37.55316162 3.73811793]
[31.07366753 -9.79022789]
[17.12064362 -4.26774406]
[2.81637621 0.26796830]
[-11.76944256 3.79481220]
[-26.56575203 6.29560518]
[-41.50046539 7.75816298]
[-56.50082016 8.17536068]
[-71.49373627 7.54516506]
[-86.40617371 5.87064648]
[-101.16547394 3.15996408]
[-115.69972992 -0.57367700]
[-129.93814087 -5.31208611]
[-143.81132507 -11.03217793]
[-157.25169373 -17.70608521]
[-170.19378662 -25.30129242]
[-182.57452393 -33.78079605]
[-194.33360291 -43.10328293]
[-205.41372681 -53.22333908]
[-215.76092529 -64.09165192]
[-225.32476807 -75.65528107]
[-234.05868530 -87.85788727]
[-241.92010498 -100.64001465]
[-248.87072754 -113.93939209]
[-254.87670898 -127.69123077]
[-259.90878296 -141.82852173]
[-263.94241333 -156.28239441]
[-266.95794678 -170.98243713]
[-268.94073486 -185.85702515]
[-269.88107300 -200.83369446]
[-269.77441406 -215.83946228]
[-268.62124634 -230.80125427]
[-266.42718506 -245.64614868]
[-263.20297241 -260.30181885]
[-258.96426392 -274.69689941]
[-253.73171997 -288.76123047]
[-247.53083801 -302.42630005]
[-240.39183044 -315.62551880]
[-232.34948730 -328.29458618]
[-223.44297791 -340.37179565]
[-213.71569824 -351.79827881]
[-203.21504211 -362.51840210]
[-191.99217224 -372.47988892]
[-180.10174561 -381.63427734]
[-167.60169983 -389.93692017]
[-154.55294800 -397.34735107]
[-141.01904297 -403.82949829]
[-127.06594086 -409.35180664]
[-112.76161194 -413.88729858]
[-98.17574310 -417.41394043]
[-83.37939453 -419.91452026]
[-68.44466400 -421.37686157]
[-53.44430161 -421.79385376]
[-38.45139313 -421.16342163]
[-23.53898239 -419.48870850]
[-8.77972126 -416.77780151]
[5.75448275 -413.04394531]
[19.99282074 -408.30532837]
[33.86592484 -402.58505249]
[47.30620575 -395.91094971]
[60.24818039 -388.31555176]
[72.62879944 -379.83587646]
[84.38774872 -370.51321411]
[95.46772766 -360.39300537]
[105.81476593 -349.52453613]
[115.37844849 -337.96078491]
[124.11218262 -325.75805664]
[131.97341919 -312.97579956]
[138.92385864 -299.67633057]
[144.92964172 -285.92440796]
[149.96150208 -271.78704834]
[153.99491882 -257.33309937]
[157.01026917 -242.63302612]
[158.99282837 -227.75840759]
[159.93295288 -212.78173828]
[159.82606506 -197.77595520]
[158.67268372 -182.81419373]
[156.47843933 -167.96932983]
[153.25399780 -153.31369019]
[149.01507568 -138.91868591]
[143.78233337 -124.85443115]
[137.58126831 -111.18946075]
[130.44207764 -97.99034119]
[122.39955139 -85.32138062]
[113.49286652 -73.24430847]
[103.76542664 -61.81795120]
[93.26461029 -51.09798813]
[82.04158783 -41.13663864]
[70.15103149 -31.98243713]
[57.65087509 -23.67998314]
[44.60201263 -16.26972389]
[51.08150864 -2.74137807]
[57.56100464 10.78696728]
[64.04050446 24.31531334]
[70.51999664 37.84365845]
[77.79322815 50.96235275]
[85.83439636 63.62487793]
[93.87557220 76.28739929]
[101.91674805 88.94992828]
[105.09880829 74.29132843]
[116.88136292 65.00847626]
[131.87757874 65.34535217]
[143.23139954 75.14795685]
[145.75198364 89.93466187]
[138.28698730 102.94518280]
[124.24928284 108.23129272]
[110.05528259 103.37509155]
[116.73548126 116.80546570]
[123.41567230 130.23583984]
[130.19566345 143.61611938]
[137.07507324 156.94554138]
[143.95449829 170.27497864]
[150.83390808 183.60440063]
[164.68736267 177.83081055]
[178.96533203 173.20561218]
[193.57278442 169.75959778]
[208.41252136 167.51571655]
[223.38578796 166.48887634]
[238.39291382 166.68591309]
[253.33404541 168.10554504]
[268.10974121 170.73828125]
[282.62170410 174.56663513]
[296.77331543 179.56512451]
[310.47039795 185.70046997]
[323.62182617 192.93183899]
[336.14004517 201.21112061]
[347.94180298 210.48321533]
[358.94848633 220.68641663]
[369.08691406 231.75282288]
[378.28958130 243.60879517]
[386.49523926 256.17541504]
[393.64929199 269.36904907]
[399.70410156 283.10192871]
[404.61944580 297.28265381]
[408.36251831 311.81680298]
[410.90850830 326.60772705]
[412.24038696 341.55691528]
[412.34933472 356.56494141]
[411.23461914 371.53192139]
[408.90365601 386.35824585]
[405.37194824 400.94522095]
[400.66302490 415.19577026]
[394.80819702 429.01510620]
[387.84643555 442.31121826]
[379.82409668 454.99566650]
[370.79452515 466.98397827]
[360.81784058 478.19641113]
[349.96041870 488.55831909]
[338.29455566 498.00076294]
[325.89782715 506.46093750]
[312.85278320 513.88244629]
[299.24618530 520.21600342]
[285.16864014 525.41943359]
[270.71380615 529.45806885]
[255.97789001 532.30505371]
[241.05894470 533.94140625]
[226.05625916 534.35632324]
[211.06967163 533.54699707]
[196.19891357 531.51873779]
[181.54296875 528.28515625]
[167.19935608 523.86773682]
[153.26353455 518.29589844]
[139.82824707 511.60665894]
[126.98291016 503.84457397]
[114.81299591 495.06130981]
[103.39949799 485.31527710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 157]
[23 156]
[24 155]
[25 154]
[27 153]
[28 152]
[29 151]
[30 143]
[31 142]
[32 141]
[33 140]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
