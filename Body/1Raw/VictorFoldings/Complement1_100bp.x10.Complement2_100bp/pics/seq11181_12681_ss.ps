%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[99.80746460 280.34408569]
[101.63387299 295.27172852]
[100.84017944 310.28976440]
[97.45050812 324.94177246]
[91.56786346 338.78250122]
[83.37100983 351.39132690]
[73.10904694 362.38513184]
[61.09382629 371.42974854]
[47.69046783 378.25039673]
[33.30628967 382.63977051]
[18.37841415 384.46447754]
[3.36047506 383.66909790]
[-11.29114437 380.27774048]
[-25.13120079 374.39352417]
[-37.73910904 366.19525146]
[-48.73172760 355.93203735]
[-57.77500534 343.91580200]
[-64.59412384 330.51165771]
[-68.98186493 316.12698364]
[-70.80488586 301.19891357]
[-70.00778198 286.18106079]
[-66.61479187 271.52981567]
[-60.72900391 257.69042969]
[-52.52929306 245.08346558]
[-42.26483917 234.09201050]
[-30.24756622 225.05009460]
[-16.84266281 218.23248291]
[-2.45748997 213.84637451]
[12.47080135 212.02505493]
[27.48855972 212.82385254]
[42.13940811 216.21852112]
[48.00836945 202.41433716]
[53.87733078 188.61016846]
[59.74629211 174.80598450]
[65.61524963 161.00181580]
[71.48421478 147.19763184]
[77.35317230 133.39346313]
[83.22213745 119.58927917]
[89.09109497 105.78510284]
[77.52321625 115.33414459]
[63.67762375 121.10472107]
[48.75210190 122.59762573]
[34.03785324 119.68370056]
[20.80781364 112.61503601]
[10.20650864 102.00313568]
[3.15106058 88.76604462]
[0.25183460 74.04889679]
[1.75964308 59.12487030]
[7.54404545 45.28504944]
[17.10463333 33.72671127]
[29.61432076 25.44977188]
[43.99089432 21.17026711]
[58.99063492 21.25841713]
[73.31591797 25.70659637]
[85.72745514 34.12999344]
[95.15153503 45.79990005]
[100.77288055 59.70674896]
[102.10517883 74.64746857]
[99.03440094 89.32622528]
[108.52330017 77.70896149]
[118.01219940 66.09169769]
[127.50109863 54.47443390]
[130.03582764 36.23555374]
[146.67575073 30.66065979]
[155.99064636 18.90340805]
[144.70605469 9.01650715]
[133.92424011 -1.41636038]
[123.67154694 -12.36966515]
[113.97309113 -23.81660080]
[104.85259247 -35.72915649]
[96.33236694 -48.07818222]
[88.43328094 -60.83345032]
[81.17465973 -73.96375275]
[74.57425690 -87.43695831]
[68.64823914 -101.22009277]
[63.41109467 -115.27942657]
[58.87564468 -129.58055115]
[55.05299377 -144.08847046]
[51.95248795 -158.76768494]
[49.58172226 -173.58227539]
[47.94649124 -188.49597168]
[47.05080414 -203.47229004]
[46.89684677 -218.47459412]
[47.48499680 -233.46614075]
[48.81381989 -248.41026306]
[50.88005829 -263.27038574]
[53.67865753 -278.01013184]
[57.20277023 -292.59344482]
[61.44377136 -306.98464966]
[66.39128113 -321.14849854]
[72.03319550 -335.05032349]
[78.35570526 -348.65615845]
[85.34333801 -361.93264771]
[92.97899628 -374.84735107]
[101.24398804 -387.36862183]
[110.11809540 -399.46585083]
[119.57959747 -411.10940552]
[129.60533142 -422.27081299]
[140.17079163 -432.92276001]
[151.25009155 -443.03915405]
[162.81611633 -452.59527588]
[174.84059143 -461.56768799]
[187.29406738 -469.93450928]
[200.14608765 -477.67520142]
[213.36517334 -484.77084351]
[226.91900635 -491.20404053]
[240.77438354 -496.95910645]
[254.89743042 -502.02194214]
[269.25357056 -506.38012695]
[283.80767822 -510.02301025]
[298.52410889 -512.94165039]
[313.36691284 -515.12896729]
[328.29968262 -516.57958984]
[343.28594971 -517.28997803]
[358.28900146 -517.25830078]
[373.27212524 -516.48474121]
[388.19866943 -514.97119141]
[403.03207397 -512.72125244]
[417.73608398 -509.74050903]
[432.27468872 -506.03628540]
[446.61230469 -501.61755371]
[460.71386719 -496.49520874]
[474.54486084 -490.68176270]
[488.07144165 -484.19143677]
[501.26046753 -477.04006958]
[514.07971191 -469.24523926]
[526.49780273 -460.82598877]
[538.48431396 -451.80291748]
[550.00994873 -442.19808960]
[561.04644775 -432.03503418]
[571.56689453 -421.33862305]
[581.54547119 -410.13504028]
[590.95776367 -398.45166016]
[599.78076172 -386.31710815]
[607.99285889 -373.76107788]
[615.57397461 -360.81430054]
[622.50555420 -347.50845337]
[628.77056885 -333.87606812]
[634.35382080 -319.95056152]
[639.24151611 -305.76596069]
[643.42175293 -291.35699463]
[646.88433838 -276.75894165]
[649.62072754 -262.00753784]
[651.62426758 -247.13882446]
[652.89007568 -232.18922424]
[653.41497803 -217.19532776]
[653.19769287 -202.19381714]
[652.23883057 -187.22140503]
[650.54071045 -172.31474304]
[648.10748291 -157.51028442]
[644.94506836 -142.84428406]
[641.06127930 -128.35261536]
[636.46551514 -114.07074738]
[631.16912842 -100.03363037]
[625.18499756 -86.27561951]
[618.52783203 -72.83037567]
[611.21392822 -59.73081207]
[603.26104736 -47.00897598]
[594.68884277 -34.69600296]
[585.51818848 -22.82202721]
[575.77148438 -11.41610336]
[565.47271729 -0.50614548]
[554.64697266 9.88114834]
[543.32080078 19.72035789]
[531.52185059 28.98740578]
[519.27911377 37.65961456]
[506.62246704 45.71575928]
[493.58288574 53.13612747]
[480.19229126 59.90255737]
[466.48345947 65.99849701]
[452.48992920 71.40901947]
[438.24594116 76.12089539]
[423.78637695 80.12258148]
[409.14663696 83.40428925]
[394.36245728 85.95799255]
[379.47012329 87.77743530]
[364.50601196 88.85817719]
[349.50677490 89.19755554]
[334.50909424 88.79475403]
[319.54968262 87.65074921]
[304.66516113 85.76834869]
[289.89193726 83.15215302]
[275.26617432 79.80857086]
[260.82366943 75.74577332]
[246.59974670 70.97371674]
[232.62922668 65.50406647]
[218.94630432 59.35021591]
[205.58444214 52.52722168]
[192.57635498 45.05178070]
[179.95387268 36.94218826]
[167.74789429 28.21829033]
[158.43301392 39.97554016]
[159.51379395 52.02371597]
[151.84962463 61.89510727]
[139.11836243 63.96333313]
[129.62945557 75.58059692]
[120.14056396 87.19786072]
[110.65166473 98.81512451]
[102.89527130 111.65406036]
[97.02631378 125.45823669]
[91.15734863 139.26242065]
[85.28839111 153.06658936]
[79.41942596 166.87077332]
[73.55046844 180.67494202]
[67.68151093 194.47912598]
[61.81254578 208.28329468]
[55.94358444 222.08747864]
[68.55335236 230.28289795]
[79.54830170 240.54360962]
[88.59429932 252.55781555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[39 199]
[59 198]
[60 197]
[61 196]
[62 195]
[64 192]
[65 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
