%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[80.03311920 577.22662354]
[72.12238312 564.40600586]
[67.26334381 550.14636230]
[65.69970703 535.16296387]
[67.50991821 520.20733643]
[72.60317993 506.02963257]
[80.72400665 493.34106445]
[91.46506500 482.77804565]
[104.28759766 474.87042236]
[118.54841614 470.01483154]
[116.98789215 455.09622192]
[107.96849823 443.24298096]
[114.22811127 428.71273804]
[112.66758728 413.79412842]
[103.64819336 401.94085693]
[109.90781403 387.41064453]
[106.08549500 381.08514404]
[108.43681335 372.25854492]
[107.09857941 357.31835938]
[105.76034546 342.37817383]
[104.42211151 327.43798828]
[102.41809845 312.57244873]
[99.75229645 297.81124878]
[97.08650208 283.05001831]
[94.42070770 268.28878784]
[91.75491333 253.52758789]
[89.08911896 238.76637268]
[86.42332458 224.00514221]
[83.75753021 209.24392700]
[79.32418060 223.57380676]
[70.91363525 235.99406433]
[59.25349426 245.43022156]
[45.35247040 251.06596375]
[30.41314316 252.41372681]
[15.72791195 249.35693359]
[2.56719851 242.16001892]
[-7.93046474 231.44558716]
[-14.85692501 218.14053345]
[-17.61297417 203.39590454]
[-15.96018600 188.48724365]
[-10.04154301 174.70429993]
[-0.36906800 163.23942566]
[12.22047329 155.08445740]
[26.63796043 150.94488525]
[41.63613510 151.17881775]
[55.91750717 155.76602173]
[68.24659729 164.30964661]
[77.55680847 176.07060242]
[83.04193115 190.02799988]
[84.60244751 175.10940552]
[86.16297150 160.19079590]
[73.07041168 155.58050537]
[61.33809662 148.16276550]
[51.55864334 138.31227112]
[44.22602844 126.52657318]
[39.71062469 113.40098572]
[38.24051666 99.59848785]
[39.88995743 85.81628418]
[44.57563400 72.75051117]
[52.06086731 61.06114197]
[61.96756744 51.33862686]
[73.79533386 44.07406235]
[86.94673157 39.63438797]
[100.75746918 38.24385834]
[102.76148224 23.37832832]
[104.76549530 8.51280022]
[106.76950836 -6.35272789]
[108.77352142 -21.21825600]
[110.77753448 -36.08378601]
[103.59236145 -46.79527664]
[105.56755066 -59.13555527]
[115.10566711 -66.57537079]
[117.33078003 -81.40941620]
[111.72621918 -96.20466614]
[121.26589203 -107.64337158]
[123.49101257 -122.47740936]
[111.48074341 -113.49111938]
[96.49758148 -114.20167542]
[85.39162445 -124.28422546]
[83.24037170 -139.12916565]
[91.02734375 -151.94958496]
[105.19244385 -156.88415527]
[119.25957489 -151.67686462]
[126.79776764 -138.70660400]
[130.55406189 -153.22865295]
[134.31036377 -167.75071716]
[138.06666565 -182.27278137]
[141.82296753 -196.79483032]
[145.57926941 -211.31689453]
[144.69859314 -220.40876770]
[149.50111389 -226.02638245]
[153.47320557 -240.49090576]
[149.66648865 -255.84732056]
[160.49784851 -266.07138062]
[146.75994873 -272.16464233]
[134.08370972 -280.23748779]
[122.75231934 -290.10952759]
[113.01891327 -301.56021118]
[105.10095215 -314.33377075]
[99.17531586 -328.14477539]
[95.37438202 -342.68475342]
[93.78308105 -357.62881470]
[94.43695068 -372.64315796]
[97.32138824 -387.39230347]
[102.37195587 -401.54681396]
[109.47581482 -414.79040527]
[118.47427368 -426.82723999]
[129.16629028 -437.38839722]
[141.31300354 -446.23797607]
[154.64306641 -453.17825317]
[168.85865784 -458.05413818]
[183.64221191 -460.75677490]
[198.66345215 -461.22573853]
[213.58680725 -459.45056152]
[228.07887268 -455.47088623]
[241.81590271 -449.37567139]
[254.49098206 -441.30102539]
[265.82098389 -431.42736816]
[275.55273438 -419.97528076]
[283.46890259 -407.20062256]
[289.39257812 -393.38873291]
[293.19140625 -378.84823608]
[294.78060913 -363.90393066]
[294.12457275 -348.88970947]
[291.23803711 -334.14096069]
[286.18545532 -319.98718262]
[279.07971191 -306.74459839]
[270.07955933 -294.70904541]
[259.38601685 -284.14938354]
[247.23805237 -275.30154419]
[233.90701294 -268.36318970]
[219.69071960 -263.48931885]
[204.90678406 -260.78878784]
[189.88546753 -260.32196045]
[174.96237183 -262.09927368]
[179.05319214 -247.77745056]
[167.93772888 -236.51881409]
[163.96563721 -222.05429077]
[160.10133362 -207.56059265]
[156.34503174 -193.03854370]
[152.58872986 -178.51647949]
[148.83242798 -163.99441528]
[145.07612610 -149.47236633]
[141.31982422 -134.95030212]
[138.32505798 -120.25229645]
[136.09992981 -105.41825104]
[141.86364746 -91.68402863]
[132.16482544 -79.18430328]
[129.93971252 -64.35025787]
[137.23335266 -48.38874817]
[125.64306641 -34.07976913]
[123.63905334 -19.21424294]
[121.63504028 -4.34871435]
[119.63101959 10.51681423]
[117.62700653 25.38234138]
[115.62299347 40.24787140]
[130.49975586 46.29561996]
[143.31439209 55.97434998]
[153.20054626 68.62967682]
[159.48977661 83.40596008]
[161.75686646 99.30417633]
[159.84855652 115.24944305]
[153.89384460 130.16368103]
[144.29536438 143.03854370]
[131.70204163 153.00354004]
[116.96532440 159.38494873]
[101.08158112 161.75131226]
[99.52105713 176.66992188]
[97.96053314 191.58853149]
[98.51874542 206.57814026]
[101.18453979 221.33935547]
[103.85033417 236.10057068]
[106.51612854 250.86178589]
[109.18192291 265.62301636]
[111.84772491 280.38421631]
[114.51351929 295.14544678]
[117.17931366 309.90664673]
[126.59953308 298.23364258]
[141.49943542 296.50363159]
[153.34367371 305.70764160]
[155.34733582 320.57321167]
[146.36262512 332.58468628]
[131.53639221 334.86129761]
[119.36229706 326.09976196]
[120.70053101 341.03991699]
[122.03876495 355.98010254]
[123.37699890 370.92028809]
[124.82641602 385.85009766]
[133.95742798 398.77044678]
[127.58619690 412.23361206]
[129.14671326 427.15222168]
[138.27772522 440.07254028]
[131.90649414 453.53570557]
[133.46702576 468.45431519]
[148.42396545 470.25366211]
[162.60533142 475.33660889]
[175.29980469 483.44821167]
[185.87063599 494.18157959]
[193.78756714 506.99835205]
[198.65353394 521.25567627]
[200.22442627 536.23828125]
[198.42146301 551.19482422]
[193.33506775 565.37493896]
[185.22039795 578.06744385]
[174.48445129 588.63568115]
[161.66575623 596.54949951]
[147.40728760 601.41204834]
[132.42425537 602.97930908]
[117.46818542 601.17266846]
[103.28927612 596.08288574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 194]
[11 193]
[13 191]
[14 190]
[16 188]
[18 187]
[19 186]
[20 185]
[21 184]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[27 172]
[28 171]
[29 170]
[49 169]
[50 168]
[51 167]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[72 149]
[73 148]
[75 146]
[76 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[91 138]
[92 137]
[94 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
