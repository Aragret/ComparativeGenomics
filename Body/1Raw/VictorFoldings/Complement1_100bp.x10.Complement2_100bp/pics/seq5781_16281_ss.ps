%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[94.57423401 652.84545898]
[79.72916412 650.65167236]
[65.07581329 647.41619873]
[50.68719482 643.15515137]
[36.63499069 637.88970947]
[22.98921013 631.64624023]
[9.81783390 624.45568848]
[-2.81351757 616.35394287]
[-14.84191513 607.38140869]
[-26.20743179 597.58276367]
[-36.85344696 587.00677490]
[-46.72692108 575.70617676]
[-55.77866364 563.73724365]
[-63.96357727 551.15966797]
[-71.24089050 538.03601074]
[-77.57434082 524.43176270]
[-82.93238831 510.41461182]
[-87.28832245 496.05444336]
[-90.62044525 481.42276001]
[-92.91216278 466.59249878]
[-94.15205383 451.63751221]
[-94.33394623 436.63229370]
[-93.45693207 421.65167236]
[-91.52537537 406.77020264]
[-88.54889679 392.06204224]
[-84.54233551 377.60049438]
[-79.52565002 363.45761108]
[-73.52382660 349.70379639]
[-66.56676483 336.40762329]
[-58.68914032 323.63531494]
[-49.93018341 311.45050049]
[-40.33353806 299.91387939]
[-29.94701576 289.08294678]
[-18.82235909 279.01165771]
[-7.01499128 269.75018311]
[5.41626215 261.34466553]
[18.40946960 253.83695984]
[31.89989662 247.26449585]
[45.82033920 241.66001892]
[60.10144043 237.05143738]
[74.67205048 233.46170044]
[89.45958710 230.90872192]
[104.39037323 229.40519714]
[103.94376373 214.41184998]
[103.49716187 199.41848755]
[102.38151550 184.46003723]
[100.59904480 169.56632996]
[98.81658173 154.67260742]
[97.03411102 139.77888489]
[95.25164795 124.88516998]
[93.46918488 109.99145508]
[87.64772034 123.81572723]
[77.27799988 134.65403748]
[63.72433853 141.08041382]
[48.76995468 142.24935913]
[34.38235474 138.00708008]
[22.45447540 128.91171265]
[14.55563164 116.15991211]
[11.72505379 101.42940521]
[14.33515263 86.65824127]
[22.04252434 73.78981018]
[33.83313370 64.51718903]
[48.15571976 60.06034470]
[63.12590408 61.00564575]
[76.77410126 67.22872925]
[87.30464935 77.91084290]
[93.33262634 91.64888000]
[94.89315033 76.73027802]
[88.63353729 62.20003891]
[97.65293121 50.34677887]
[99.21345520 35.42817307]
[100.77397919 20.50956917]
[102.33449554 5.59096527]
[103.89501953 -9.32763958]
[89.16290283 -12.20204449]
[74.74246979 -16.36723900]
[60.74659729 -21.79062653]
[47.28481674 -28.42975807]
[34.46248627 -36.23267365]
[22.37996292 -45.13830566]
[11.13180923 -55.07695007]
[0.80605954 -65.97082520]
[-8.51647282 -77.73466492]
[-16.76282310 -90.27641296]
[-23.86845398 -103.49789429]
[-29.77775192 -117.29564667]
[-34.44446564 -131.56166077]
[-37.83207321 -146.18431091]
[-39.91406250 -161.04913330]
[-40.67413712 -176.03979492]
[-40.10634995 -191.03897095]
[-38.21514511 -205.92926025]
[-35.01531982 -220.59414673]
[-30.53192139 -234.91883850]
[-24.80003929 -248.79122925]
[-17.86453056 -262.10275269]
[-9.77968121 -274.74920654]
[-0.60876280 -286.63162231]
[9.57644653 -297.65698242]
[20.69623184 -307.73907471]
[32.66356659 -316.79888916]
[45.38478470 -324.76559448]
[58.76032639 -331.57678223]
[72.68550110 -337.17919922]
[87.05133820 -341.52896118]
[101.74539185 -344.59204102]
[116.65265656 -346.34445190]
[131.65647888 -346.77249146]
[146.63940430 -345.87283325]
[161.48419189 -343.65246582]
[176.07463074 -340.12878418]
[190.29656982 -335.32937622]
[204.03866577 -329.29180908]
[217.19338989 -322.06332397]
[229.65777588 -313.70050049]
[241.33425903 -304.26879883]
[252.13148499 -293.84201050]
[261.96490479 -282.50177002]
[270.75759888 -270.33679199]
[278.44073486 -257.44235229]
[284.95419312 -243.91929626]
[290.24694824 -229.87351990]
[294.27764893 -215.41490173]
[297.01467896 -200.65664673]
[298.43667603 -185.71424866]
[298.53247070 -170.70463562]
[297.30133057 -155.74528503]
[294.75289917 -140.95329285]
[290.90710449 -126.44441986]
[285.79403687 -112.33221436]
[279.45373535 -98.72713470]
[271.93582153 -85.73565674]
[263.29913330 -73.45945740]
[253.61125183 -61.99461365]
[242.94799805 -51.43086243]
[231.39285278 -41.85087585]
[219.03623962 -33.32963181]
[205.97485352 -25.93382454]
[192.31094360 -19.72133446]
[178.15142822 -14.74078655]
[163.60713196 -11.03115845]
[148.79190063 -8.62148571]
[133.82168579 -7.53062534]
[118.81362915 -7.76711655]
[117.25310516 7.15148830]
[115.69258118 22.07009315]
[114.13205719 36.98869705]
[112.57153320 51.90730286]
[118.94277191 65.37046051]
[109.81175232 78.29080200]
[108.25123596 93.20940399]
[108.36289978 108.20899200]
[110.14536285 123.10270691]
[111.92783356 137.99642944]
[113.71029663 152.89013672]
[115.49275970 167.78385925]
[117.27523041 182.67758179]
[127.37354279 171.58595276]
[142.35000610 170.74586487]
[153.62541199 180.63854980]
[154.74069214 195.59703064]
[145.05697632 207.05241394]
[130.12153625 208.44252014]
[118.49050903 198.97189331]
[118.93711853 213.96524048]
[119.38372040 228.95858765]
[134.37753296 229.57075500]
[149.29080200 231.23904419]
[164.04924011 233.95513916]
[178.57933044 237.70553589]
[192.80868530 242.47152710]
[206.66639709 248.22937012]
[220.08343506 254.95037842]
[232.99295044 262.60107422]
[245.33062744 271.14337158]
[257.03503418 280.53463745]
[268.04779053 290.72814941]
[278.31408691 301.67309570]
[287.78277588 313.31497192]
[296.40664673 325.59576416]
[304.14279175 338.45425415]
[310.95260620 351.82644653]
[316.80221558 365.64569092]
[321.66241455 379.84310913]
[325.50906372 394.34802246]
[328.32296753 409.08813477]
[330.09008789 423.99002075]
[330.80163574 438.97943115]
[330.45410156 453.98168945]
[329.04913330 468.92208862]
[326.59381104 483.72613525]
[323.10034180 498.32012939]
[318.58612061 512.63134766]
[313.07363892 526.58850098]
[306.59036255 540.12200928]
[299.16857910 553.16448975]
[290.84530640 565.65093994]
[281.66195679 577.51916504]
[271.66430664 588.71008301]
[260.90216064 599.16784668]
[249.42913818 608.84045410]
[237.30241394 617.67962646]
[224.58238220 625.64135742]
[211.33241272 632.68603516]
[197.61851501 638.77850342]
[183.50903320 643.88842773]
[169.07424927 647.99035645]
[154.38606262 651.06384277]
[139.51766968 653.09356689]
[124.54314423 654.06945801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 166]
[44 165]
[45 164]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[67 151]
[68 150]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
