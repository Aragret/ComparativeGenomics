%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[116.94672394 923.78369141]
[102.05239105 921.98510742]
[87.25375366 919.52008057]
[72.58061218 916.39355469]
[58.06251144 912.61193848]
[43.72869492 908.18273926]
[29.60802841 903.11486816]
[15.72894764 897.41864014]
[2.11940265 891.10546875]
[-11.19319820 884.18804932]
[-24.18204498 876.68029785]
[-36.82098007 868.59741211]
[-49.08454895 859.95562744]
[-60.94805527 850.77227783]
[-72.38760376 841.06597900]
[-83.38016510 830.85620117]
[-93.90359497 820.16351318]
[-103.93670654 809.00946045]
[-113.45928192 797.41650391]
[-122.45216370 785.40795898]
[-130.89721680 773.00811768]
[-138.77745056 760.24182129]
[-146.07699585 747.13482666]
[-152.78115845 733.71356201]
[-158.87640381 720.00506592]
[-164.35049438 706.03686523]
[-169.19239807 691.83715820]
[-173.39234924 677.43450928]
[-176.94189453 662.85791016]
[-179.83389282 648.13671875]
[-182.06251526 633.30065918]
[-183.62326050 618.37951660]
[-184.51301575 603.40338135]
[-184.72996521 588.40246582]
[-184.27369690 573.40686035]
[-183.14509583 558.44683838]
[-181.34645081 543.55249023]
[-178.88139343 528.75384521]
[-175.75486755 514.08074951]
[-171.97319031 499.56262207]
[-167.54397583 485.22882080]
[-162.47612000 471.10815430]
[-156.77986145 457.22909546]
[-150.46664429 443.61956787]
[-143.54919434 430.30697632]
[-136.04144287 417.31814575]
[-127.95851135 404.67922974]
[-119.31667328 392.41567993]
[-110.13333893 380.55218506]
[-100.42699432 369.11264038]
[-90.21719360 358.12011719]
[-79.52449036 347.59671021]
[-68.37042236 337.56359863]
[-56.77745056 328.04104614]
[-44.76892471 319.04818726]
[-32.36903000 310.60317993]
[-19.60273361 302.72296143]
[-6.49574804 295.42343140]
[6.92553186 288.71929932]
[20.63407707 282.62408447]
[34.60227966 277.15002441]
[48.80201340 272.30813599]
[63.20467758 268.10821533]
[77.78126526 264.55871582]
[92.50242615 261.66674805]
[107.33850861 259.43814087]
[105.77799225 244.51953125]
[104.21746826 229.60093689]
[102.65694427 214.68232727]
[101.09642029 199.76371765]
[99.53589630 184.84512329]
[97.97537231 169.92651367]
[88.95597839 158.07325745]
[95.21559143 143.54301453]
[93.65507507 128.62440491]
[83.39273834 139.56445312]
[68.40543365 140.18147278]
[57.27856827 130.12200928]
[56.38611221 115.14858246]
[66.23930359 103.83865356]
[81.19379425 102.67105865]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[89.73769379 69.26519012]
[88.76070404 65.44288635]
[89.05067444 61.90009689]
[90.35712433 59.00876617]
[92.33243561 57.01972961]
[93.00222015 42.03469086]
[93.67200470 27.04965210]
[86.55863190 12.91775513]
[94.85652161 0.54866642]
[95.52630615 -14.43637276]
[81.09793091 -18.82644844]
[68.21504211 -26.66749573]
[57.68747330 -37.46662140]
[50.17699432 -50.54498291]
[46.15572357 -65.08045959]
[45.87643433 -80.15934753]
[49.35668945 -94.83377075]
[56.37771606 -108.18128204]
[66.49816895 -119.36283875]
[79.08185577 -127.67557526]
[93.33776855 -132.59693909]
[108.36976624 -133.81755066]
[123.23291779 -131.26071167]
[136.99291992 -125.08712769]
[148.78480530 -115.68488312]
[157.86732483 -103.64500427]
[163.66955566 -89.72433472]
[165.82673645 -74.79794312]
[164.20329285 -59.80410004]
[158.90127563 -45.68534088]
[150.25395203 -33.32918549]
[138.80490112 -23.51234627]
[125.27384949 -16.85191917]
[110.51134491 -13.76658726]
[109.84156036 1.21845162]
[117.00283813 14.27851772]
[108.65704346 27.71943665]
[107.98725891 42.70447540]
[107.31747437 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[108.57367706 127.06388855]
[110.13420105 141.98249817]
[119.26521301 154.90283203]
[112.89398193 168.36599731]
[114.45449829 183.28459167]
[116.01502228 198.20320129]
[117.57554626 213.12181091]
[119.13607025 228.04040527]
[120.69659424 242.95901489]
[122.25711823 257.87762451]
[137.23324585 256.98779297]
[152.23420715 256.77075195]
[167.22979736 257.22692871]
[182.18983459 258.35543823]
[197.08416748 260.15399170]
[211.88281250 262.61898804]
[226.55596924 265.74542236]
[241.07408142 269.52700806]
[255.40791321 273.95614624]
[269.52859497 279.02392578]
[283.40771484 284.72012329]
[297.01727295 291.03326416]
[310.32989502 297.95062256]
[323.31878662 305.45828247]
[335.95773315 313.54116821]
[348.22134399 322.18292236]
[360.08486938 331.36618042]
[371.52447510 341.07247925]
[382.51705933 351.28222656]
[393.04052734 361.97485352]
[403.07369995 373.12887573]
[412.59631348 384.72177124]
[421.58923340 396.73025513]
[430.03433228 409.13009644]
[437.91464233 421.89636230]
[445.21423340 435.00329590]
[451.91842651 448.42453003]
[458.01373291 462.13305664]
[463.48788452 476.10122681]
[468.32983398 490.30093384]
[472.52981567 504.70358276]
[476.07943726 519.28015137]
[478.97149658 534.00128174]
[481.20016479 548.83734131]
[482.76098633 563.75848389]
[483.65078735 578.73461914]
[483.86779785 593.73559570]
[483.41156006 608.73114014]
[482.28302002 623.69122314]
[480.48443604 638.58551025]
[478.01943970 653.38415527]
[474.89297485 668.05731201]
[471.11135864 682.57543945]
[466.68218994 696.90924072]
[461.61437988 711.02990723]
[455.91818237 724.90899658]
[449.60501099 738.51855469]
[442.68762207 751.83117676]
[435.17993164 764.82006836]
[427.09704590 777.45898438]
[418.45523071 789.72259521]
[409.27194214 801.58612061]
[399.56564331 813.02569580]
[389.35589600 824.01824951]
[378.66323853 834.54168701]
[367.50918579 844.57482910]
[355.91625977 854.09741211]
[343.90777588 863.09033203]
[331.50790405 871.53540039]
[318.74163818 879.41571045]
[305.63467407 886.71527100]
[292.21343994 893.41943359]
[278.50491333 899.51470947]
[264.53671265 904.98883057]
[250.33700562 909.83074951]
[235.93435669 914.03070068]
[221.35778809 917.58032227]
[206.63664246 920.47235107]
[191.80056763 922.70098877]
[176.87944031 924.26177979]
[161.90330505 925.15155029]
[146.90234375 925.36853027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[74 130]
[75 129]
[82 128]
[84 126]
[85 125]
[90 124]
[91 123]
[92 122]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
