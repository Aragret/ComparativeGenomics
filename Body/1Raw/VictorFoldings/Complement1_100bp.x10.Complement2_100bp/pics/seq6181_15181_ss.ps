%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[99.71765900 766.81951904]
[84.85979462 769.02117920]
[69.84315491 769.34326172]
[54.90456772 767.78063965]
[40.27962875 764.35797119]
[26.19900513 759.12927246]
[12.88476086 752.17700195]
[0.54688507 743.61077881]
[-10.62003803 733.56573486]
[-20.43988991 722.20025635]
[-28.75779533 709.69366455]
[-35.44257355 696.24310303]
[-40.38879013 682.06079102]
[-43.51844025 667.37036133]
[-44.78216171 652.40356445]
[-44.16002655 637.39630127]
[-41.66184616 622.58544922]
[-37.32702255 608.20446777]
[-31.22391701 594.48022461]
[-23.44878769 581.62908936]
[-14.12425804 569.85388184]
[-3.39739084 559.34020996]
[8.56263638 550.25390625]
[21.56719780 542.73828125]
[35.41119003 536.91186523]
[49.87627792 532.86651611]
[64.73432159 530.66613770]
[79.75098419 530.34533691]
[81.31150818 515.42669678]
[82.87203217 500.50811768]
[76.50080109 487.04495239]
[85.63181305 474.12463379]
[87.19233704 459.20602417]
[88.64175415 444.27621460]
[89.97998810 429.33602905]
[83.40901184 415.96920776]
[92.34664917 402.91436768]
[93.23946381 387.94094849]
[93.68607330 372.94760132]
[94.13267517 357.95425415]
[94.57928467 342.96090698]
[95.02589417 327.96755981]
[92.08293152 321.18811035]
[95.59241486 312.75476074]
[96.26219940 297.76971436]
[83.11793518 285.02828979]
[83.46715546 266.40597534]
[97.55481720 253.73901367]
[97.77814484 238.74067688]
[90.23119354 225.89961243]
[98.17309570 212.21617126]
[98.06143188 197.21658325]
[97.61482239 182.22323608]
[97.16822052 167.22987366]
[96.38689423 152.25024414]
[95.27124786 137.29179382]
[94.15560150 122.33333588]
[93.03994751 107.37488556]
[89.34761047 100.20974731]
[92.02073669 92.18570709]
[91.12792206 77.21230316]
[82.58293915 63.89712906]
[89.54898071 50.73188782]
[88.65616608 35.75848389]
[79.54479218 26.62909317]
[79.10942841 14.13932800]
[87.03836823 5.00376797]
[86.36858368 -9.98127079]
[82.85910034 -18.41461945]
[85.80206299 -25.19405937]
[85.35545349 -40.18740845]
[84.90884399 -55.18075943]
[84.46224213 -70.17411041]
[81.31812286 -75.99012756]
[81.54858398 -81.66849518]
[84.23226166 -85.61904907]
[84.23226166 -100.61904907]
[84.23226166 -115.61904907]
[84.12059784 -130.61863708]
[83.89727020 -145.61697388]
[83.67394257 -160.61531067]
[75.73203278 -174.29875183]
[83.27898407 -187.13981628]
[73.47117615 -202.72468567]
[82.60986328 -217.70639038]
[82.16325378 -232.69973755]
[81.71665192 -247.69309998]
[81.27004242 -262.68643188]
[69.24084473 -253.72550964]
[54.69669724 -257.39535522]
[48.35900879 -270.99072266]
[54.89968491 -284.48959351]
[69.49718475 -287.94110107]
[81.39002228 -278.80242920]
[82.05980682 -293.78744507]
[74.94643402 -307.91934204]
[83.24431610 -320.28845215]
[83.91410828 -335.27346802]
[84.58389282 -350.25851440]
[70.67820740 -356.34097290]
[59.91153717 -367.03878784]
[53.73998642 -380.90518188]
[52.99820709 -396.06478882]
[57.78651810 -410.46746826]
[67.45733643 -422.16531372]
[80.70277405 -429.57629395]
[95.73148346 -431.69818115]
[110.51095581 -428.24398804]
[123.04238892 -419.68081665]
[131.63101196 -407.16683960]
[135.11529541 -392.39440918]
[133.02400208 -377.36141968]
[125.63996124 -364.10095215]
[113.96181488 -354.40634155]
[99.56893158 -349.58874512]
[98.89914703 -334.60369873]
[98.22935486 -319.61865234]
[105.39064026 -306.55859375]
[97.04484558 -293.11767578]
[96.37506104 -278.13262939]
[96.26339722 -263.13305664]
[96.70999908 -248.13969421]
[97.15660858 -233.14634705]
[97.60321045 -218.15299988]
[106.18965912 -209.63247681]
[106.68444061 -197.14491272]
[98.27732086 -187.36314392]
[106.20325470 -174.75247192]
[98.67227936 -160.83863831]
[98.89560699 -145.84030151]
[99.11893463 -130.84196472]
[102.36167145 -124.20069885]
[99.23226166 -115.61904907]
[99.23226166 -100.61904907]
[99.23226166 -85.61904907]
[99.45558929 -70.62071228]
[99.90219879 -55.62736511]
[100.34880066 -40.63401413]
[100.79541016 -25.64066505]
[101.35362244 -10.65105629]
[102.02340698 4.33398294]
[112.25106812 18.59448433]
[103.62957001 34.86566544]
[104.52238464 49.83907318]
[113.00350952 62.08324814]
[106.10132599 76.31948853]
[106.99414062 91.29289246]
[107.99840546 106.25923157]
[109.11405182 121.21768951]
[110.22969818 136.17614746]
[111.34535217 151.13459778]
[114.28573608 155.44750977]
[115.18756104 160.00163269]
[114.30032349 163.98005676]
[112.16156769 166.78327942]
[112.60817719 181.77662659]
[113.05477905 196.76997375]
[115.79965210 201.20988464]
[116.49723053 205.79972839]
[115.43322754 209.73455811]
[113.17143250 212.43949890]
[120.70241547 226.35333252]
[112.77648163 238.96400452]
[112.55315399 253.96234131]
[122.33557892 260.71813965]
[127.58840942 271.24945068]
[127.11023712 282.88839722]
[121.13542175 292.74829102]
[111.24723816 298.43951416]
[110.57745361 313.42456055]
[110.01924133 328.41415405]
[109.57263184 343.40750122]
[109.12602997 358.40084839]
[108.67942047 373.39422607]
[108.23281860 388.38757324]
[110.42578125 392.13522339]
[111.23111725 395.99731445]
[110.78324890 399.52362061]
[109.34899902 402.35372925]
[107.28683472 404.25259399]
[113.76209259 418.68801880]
[104.92017365 430.67425537]
[103.58193970 445.61444092]
[105.93325043 454.44107056]
[102.11093903 460.76654053]
[100.55041504 475.68515015]
[106.81003571 490.21539307]
[97.79064178 502.06863403]
[96.23011780 516.98724365]
[94.66959381 531.90582275]
[109.29481506 535.32727051]
[123.37588501 540.55474854]
[136.69070435 547.50592041]
[149.02931213 556.07110596]
[160.19708252 566.11523438]
[170.01788330 577.47985840]
[178.33683777 589.98577881]
[185.02275085 603.43572998]
[189.97016907 617.61767578]
[193.10104370 632.30780029]
[194.36602783 647.27453613]
[193.74516296 662.28179932]
[191.24822998 677.09289551]
[186.91461182 691.47424316]
[180.81266785 705.19903564]
[173.03862000 718.05078125]
[163.71507263 729.82678223]
[152.98908997 740.34136963]
[141.02983093 749.42871094]
[128.02590942 756.94543457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 190]
[29 189]
[30 188]
[32 186]
[33 185]
[34 183]
[35 182]
[37 180]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[44 170]
[45 169]
[48 164]
[49 163]
[51 161]
[52 157]
[53 156]
[54 155]
[55 151]
[56 150]
[57 149]
[58 148]
[60 147]
[61 146]
[63 144]
[64 143]
[67 141]
[68 140]
[70 139]
[71 138]
[72 137]
[73 136]
[76 135]
[77 134]
[78 133]
[79 131]
[80 130]
[81 129]
[83 127]
[85 124]
[86 123]
[87 122]
[88 121]
[94 120]
[95 119]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
