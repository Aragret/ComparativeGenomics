%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[113.49816132 329.91629028]
[113.52413177 344.97262573]
[110.41876221 359.70523071]
[104.31781006 373.47012329]
[95.48796844 385.66552734]
[84.31526184 395.75830078]
[71.28809357 403.30725098]
[56.97596359 407.98236084]
[42.00453568 409.57925415]
[27.02829933 408.02813721]
[12.70194721 403.39678955]
[-0.34823200 395.88769531]
[-11.55174065 385.82910156]
[-20.41880989 373.66076660]
[-26.56181145 359.91458130]
[-29.71219635 345.19152832]
[-29.73224449 330.13516235]
[-26.62107849 315.40377808]
[-20.51470757 301.64129639]
[-11.68007469 289.44937134]
[-0.50339240 279.36099243]
[12.52674294 271.81716919]
[26.84070969 267.14767456]
[41.81276321 265.55667114]
[56.78839111 267.11370850]
[61.40240097 252.84095764]
[57.95515442 238.35076904]
[69.56225586 227.59968567]
[74.17626953 213.32695007]
[77.60733032 198.72463989]
[79.83244324 183.89059448]
[82.05756378 169.05654907]
[84.28267670 154.22250366]
[86.50779724 139.38845825]
[80.74407959 125.65423584]
[90.44290924 113.15451050]
[84.09726715 103.38854218]
[85.91062164 91.88406372]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[99.40235138 54.87871552]
[100.96287537 39.96010971]
[102.52339935 25.04150581]
[104.08392334 10.12290096]
[105.64444733 -4.79570341]
[93.34031677 3.78383231]
[78.54975128 1.28601134]
[69.74545288 -10.85830116]
[71.97092438 -25.69229126]
[83.95131683 -34.71837616]
[98.82371521 -32.76600266]
[108.06827545 -20.95449638]
[103.12994385 -35.98524857]
[113.17086792 -46.98656845]
[116.05614471 -61.70646286]
[118.94141388 -76.42635345]
[121.82669067 -91.14624786]
[124.71195984 -105.86613464]
[127.59723663 -120.58602905]
[130.48251343 -135.30592346]
[115.95710754 -139.06733704]
[101.68265533 -143.69071960]
[87.71025085 -149.15948486]
[74.08991241 -155.45407104]
[60.87039948 -162.55195618]
[48.09902573 -170.42771912]
[35.82152176 -179.05316162]
[24.08182716 -188.39743042]
[12.92197514 -198.42703247]
[2.38191104 -209.10610962]
[-7.50063229 -220.39640808]
[-16.69027901 -232.25752258]
[-25.15413094 -244.64697266]
[-32.86188889 -257.52044678]
[-39.78596497 -270.83181763]
[-45.90156937 -284.53344727]
[-51.18680954 -298.57629395]
[-55.62276840 -312.91009521]
[-59.19356155 -327.48355103]
[-61.88640976 -342.24444580]
[-63.69167328 -357.13995361]
[-64.60289001 -372.11679077]
[-64.61679077 -387.12127686]
[-63.73334122 -402.09976196]
[-61.95568848 -416.99862671]
[-59.29020691 -431.76446533]
[-55.74642944 -446.34451294]
[-51.33704758 -460.68649292]
[-46.07784653 -474.73913574]
[-39.98764801 -488.45208740]
[-33.08825684 -501.77627563]
[-25.40437317 -514.66400146]
[-16.96350098 -527.06909180]
[-7.79585457 -538.94726562]
[2.06574488 -550.25585938]
[12.58599663 -560.95440674]
[23.72723961 -571.00469971]
[35.44959259 -580.37072754]
[47.71109009 -589.01892090]
[60.46784210 -596.91833496]
[73.67417908 -604.04071045]
[87.28282928 -610.36053467]
[101.24507141 -615.85516357]
[115.51092529 -620.50500488]
[130.02932739 -624.29333496]
[144.74830627 -627.20666504]
[159.61515808 -629.23443604]
[174.57667542 -630.36956787]
[189.57929993 -630.60784912]
[204.56933594 -629.94848633]
[219.49308777 -628.39385986]
[234.29716492 -625.94946289]
[248.92855835 -622.62414551]
[263.33489990 -618.42974854]
[277.46459961 -613.38128662]
[291.26708984 -607.49682617]
[304.69296265 -600.79748535]
[317.69415283 -593.30718994]
[330.22412109 -585.05279541]
[342.23803711 -576.06378174]
[353.69284058 -566.37243652]
[364.54757690 -556.01336670]
[374.76333618 -545.02368164]
[384.30361938 -533.44268799]
[393.13418579 -521.31188965]
[401.22351074 -508.67471313]
[408.54257202 -495.57635498]
[415.06521606 -482.06375122]
[420.76806641 -468.18524170]
[425.63070679 -453.99050903]
[429.63574219 -439.53039551]
[432.76885986 -424.85662842]
[435.01876831 -410.02175903]
[436.37750244 -395.07888794]
[436.84011841 -380.08151245]
[436.40502930 -365.08328247]
[435.07373047 -350.13796997]
[432.85104370 -335.29898071]
[429.74487305 -320.61950684]
[425.76638794 -306.15203857]
[420.92980957 -291.94842529]
[415.25244141 -278.05947876]
[408.75463867 -264.53491211]
[401.45959473 -251.42314148]
[393.39349365 -238.77113342]
[384.58517456 -226.62414551]
[375.06619263 -215.02568054]
[364.87060547 -204.01725769]
[354.03491211 -193.63827515]
[342.59793091 -183.92588806]
[330.60055542 -174.91485596]
[318.08575439 -166.63746643]
[305.09832764 -159.12332153]
[291.68475342 -152.39933777]
[277.89309692 -146.48956299]
[263.77267456 -141.41519165]
[249.37406921 -137.19435120]
[234.74879456 -133.84216309]
[219.94923401 -131.37062073]
[205.02835083 -129.78858948]
[190.03956604 -129.10173035]
[175.03652954 -129.31248474]
[160.07295227 -130.42012024]
[145.20239258 -132.42063904]
[142.31712341 -117.70075226]
[139.43185425 -102.98086548]
[136.54658508 -88.26097107]
[133.66130066 -73.54107666]
[130.77603149 -58.82118988]
[127.89076233 -44.10129929]
[133.03546143 -30.12341118]
[122.78816986 -18.06922340]
[120.56304932 -3.23518062]
[119.00252533 11.68342400]
[117.44200134 26.60202980]
[115.88148499 41.52063370]
[114.32096100 56.43923950]
[115.97936249 58.69929123]
[116.84245300 61.75243378]
[116.60367584 65.29903412]
[115.07048798 68.93412018]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[116.06143951 102.53162384]
[105.27695465 115.37962341]
[110.88151550 130.17488098]
[101.34184265 141.61357117]
[99.11672211 156.44761658]
[96.89160919 171.28166199]
[94.66648865 186.11570740]
[92.44136810 200.94975281]
[102.64336395 189.95341492]
[116.75602722 184.87081909]
[131.62655640 186.83743286]
[143.93283081 195.41387939]
[150.92559814 208.68420410]
[151.04266357 223.68374634]
[144.25785828 237.06158447]
[132.08694458 245.82907104]
[117.24893188 248.02752686]
[103.05866241 243.16581726]
[92.68627930 232.33006287]
[88.44899750 217.94096375]
[83.83499146 232.21369934]
[86.95220947 247.72477722]
[75.67513275 257.45498657]
[71.06112671 271.72772217]
[84.11425781 279.23165894]
[95.32172394 289.28582764]
[104.19358063 301.45071411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 207]
[26 206]
[28 204]
[29 203]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[36 185]
[39 183]
[40 182]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[52 172]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[59 165]
[60 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
