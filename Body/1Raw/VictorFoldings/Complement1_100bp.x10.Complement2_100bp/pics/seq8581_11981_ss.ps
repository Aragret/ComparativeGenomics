%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[105.06795502 557.41656494]
[92.91538239 548.61584473]
[81.31636047 539.09735107]
[70.31320953 528.89593506]
[59.94608307 518.04882812]
[50.25280762 506.59548950]
[41.26875305 494.57778931]
[33.02670288 482.03958130]
[25.55672836 469.02661133]
[18.88608932 455.58633423]
[13.03912830 441.76782227]
[8.03717613 427.62149048]
[3.89848757 413.19897461]
[0.63816279 398.55285645]
[-1.73190117 383.73663330]
[-3.20305610 368.80432129]
[-3.76993418 353.81042480]
[-3.43046641 338.80966187]
[-2.18589187 323.85675049]
[-0.04075160 309.00628662]
[2.99712658 294.31243896]
[6.91665792 279.82879639]
[11.70354080 265.60824585]
[17.34030724 251.70268250]
[23.80639076 238.16281128]
[31.07819557 225.03807068]
[39.12918854 212.37632751]
[47.92999268 200.22380066]
[57.44849014 188.62481689]
[67.64995575 177.62171936]
[78.49716187 167.25463867]
[89.95053101 157.56141663]
[101.96826172 148.57742310]
[114.50650787 140.33541870]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[79.95227814 80.14126587]
[72.48453522 67.13231659]
[65.01679230 54.12336349]
[57.54905319 41.11441040]
[44.06053925 47.68958282]
[30.15890312 53.33914185]
[15.90758324 58.03731155]
[1.37160206 61.76265717]
[-13.38271523 64.49817657]
[-28.28804588 66.23139191]
[-43.27638245 66.95439911]
[-58.27933502 66.66388702]
[-73.22844696 65.36119080]
[-88.05550385 63.05225372]
[-102.69286346 59.74760818]
[-117.07373047 55.46233368]
[-131.13249207 50.21598053]
[-144.80499268 44.03248978]
[-158.02885437 36.94007492]
[-170.74374390 28.97109795]
[-182.89164734 20.16192055]
[-194.41711426 10.55273342]
[-205.26757812 0.18738465]
[-215.39350891 -10.88683128]
[-224.74873352 -22.61938477]
[-233.29054260 -34.95674515]
[-240.97998047 -47.84261322]
[-247.78193665 -61.21819687]
[-253.66539001 -75.02246857]
[-258.60348511 -89.19243622]
[-262.57373047 -103.66345215]
[-265.55795288 -118.36948395]
[-267.54257202 -133.24342346]
[-268.51852417 -148.21742249]
[-268.48135376 -163.22314453]
[-267.43121338 -178.19210815]
[-265.37295532 -193.05604553]
[-262.31588745 -207.74710083]
[-258.27401733 -222.19827271]
[-253.26576233 -236.34359741]
[-247.31399536 -250.11856079]
[-240.44584656 -263.46026611]
[-232.69267273 -276.30789185]
[-224.08984375 -288.60278320]
[-214.67660522 -300.28884888]
[-204.49592590 -311.31274414]
[-193.59425354 -321.62420654]
[-182.02131653 -331.17617798]
[-169.82992554 -339.92507935]
[-157.07571411 -347.83096313]
[-143.81686401 -354.85775757]
[-130.11389160 -360.97344971]
[-116.02931976 -366.15008545]
[-101.62739563 -370.36404419]
[-86.97384644 -373.59613037]
[-72.13552856 -375.83160400]
[-57.18014526 -377.06021118]
[-42.17593765 -377.27639771]
[-27.19136810 -376.47912598]
[-12.29480743 -374.67208862]
[2.44577599 -371.86349487]
[16.96312141 -368.06619263]
[31.19099045 -363.29748535]
[45.06446457 -357.57910156]
[58.52024078 -350.93719482]
[71.49692535 -343.40203857]
[83.93530273 -335.00799561]
[95.77861786 -325.79339600]
[106.97283936 -315.80029297]
[117.46688843 -305.07424927]
[127.21288300 -293.66424561]
[136.16635132 -281.62228394]
[144.28643799 -269.00338745]
[151.53610229 -255.86506653]
[157.88224792 -242.26728821]
[163.29594421 -228.27210999]
[167.75245667 -213.94338989]
[171.23149109 -199.34649658]
[173.71713257 -184.54803467]
[175.19807434 -169.61552429]
[175.66752625 -154.61711121]
[175.12338257 -139.62121582]
[173.56809998 -124.69626617]
[171.00877380 -109.91036987]
[167.45709229 -95.33097839]
[162.92926025 -81.02462769]
[157.44593811 -67.05658722]
[151.03215027 -53.49059677]
[143.71714783 -40.38854599]
[135.53431702 -27.81022644]
[126.52098846 -15.81302452]
[116.71828461 -4.45168304]
[106.17095184 6.22195816]
[94.92710114 16.15919685]
[83.03803253 25.31469345]
[70.55800629 33.64667130]
[78.02574921 46.65562439]
[85.49349213 59.66457367]
[92.96122742 72.67353058]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[127.51546478 132.86769104]
[140.95564270 126.19686127]
[154.77406311 120.34970093]
[168.92031860 115.34755707]
[183.34280396 111.20866394]
[197.98886108 107.94813538]
[212.80506897 105.57786560]
[227.73735046 104.10650635]
[242.73123169 103.53942108]
[257.73199463 103.87867737]
[272.68493652 105.12304688]
[287.53543091 107.26797485]
[302.22930908 110.30564880]
[316.71301270 114.22498322]
[330.93362427 119.01166534]
[344.83926392 124.64823914]
[358.37921143 131.11413574]
[371.50405884 138.38575745]
[384.16592407 146.43656921]
[396.31857300 155.23721313]
[407.91769409 164.75555420]
[418.92092896 174.95686340]
[429.28814697 185.80392456]
[438.98153687 197.25715637]
[447.96569824 209.27476501]
[456.20788574 221.81289673]
[463.67797852 234.82580566]
[470.34872437 248.26600647]
[476.19583130 262.08447266]
[481.19790649 276.23074341]
[485.33673096 290.65322876]
[488.59719849 305.29931641]
[490.96737671 320.11553955]
[492.43869019 335.04782104]
[493.00570679 350.04171753]
[492.66638184 365.04248047]
[491.42193604 379.99539185]
[489.27694702 394.84588623]
[486.23919678 409.53976440]
[482.31979370 424.02343750]
[477.53305054 438.24401855]
[471.89639282 452.14965820]
[465.43045044 465.68957520]
[458.15875244 478.81439209]
[450.10787964 491.47619629]
[441.30718994 503.62881470]
[431.78881836 515.22790527]
[421.58743286 526.23107910]
[410.74032593 536.59826660]
[399.28704834 546.29156494]
[387.26940918 555.27569580]
[374.73123169 563.51782227]
[361.71829224 570.98785400]
[348.27804565 577.65850830]
[334.45956421 583.50555420]
[320.31326294 588.50756836]
[305.89074707 592.64636230]
[291.24465942 595.90673828]
[276.42843628 598.27685547]
[261.49612427 599.74810791]
[246.50224304 600.31506348]
[231.50148010 599.97564697]
[216.54856873 598.73114014]
[201.69808960 596.58605957]
[187.00421143 593.54827881]
[172.52056885 589.62878418]
[158.30000305 584.84197998]
[144.39440918 579.20526123]
[130.85450745 572.73925781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 142]
[35 141]
[36 140]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
