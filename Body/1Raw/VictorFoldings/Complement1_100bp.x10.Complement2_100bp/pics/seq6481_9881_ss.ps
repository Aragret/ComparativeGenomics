%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[186.47729492 286.09237671]
[179.40019226 272.86685181]
[173.47273254 268.45242310]
[172.31784058 259.39129639]
[165.43843079 246.06187439]
[152.72576904 238.30058289]
[153.27221680 222.48883057]
[146.39280701 209.15939331]
[139.51338196 195.82997131]
[126.80072784 188.06867981]
[127.34717560 172.25691223]
[114.73641205 173.02304077]
[102.72837067 168.94776917]
[93.11829376 160.60305786]
[87.35699463 149.20188904]
[86.33190155 136.42205811]
[90.23050690 124.15927124]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[75.00533295 65.17684937]
[68.52584076 51.64850235]
[62.04634094 38.12015533]
[61.88181305 53.11925125]
[58.54008865 67.74227905]
[52.17319870 81.32398224]
[43.07078552 93.24649048]
[31.64695740 102.96739960]
[18.42141724 110.04447937]
[3.99583960 114.15576935]
[-10.97350693 115.11423492]
[-25.80561829 112.87627411]
[-39.82572937 107.54369354]
[-52.39602661 99.35909271]
[-62.94463348 88.69480896]
[-70.99166870 76.03601074]
[-76.17104340 61.95857620]
[-78.24712372 47.10294342]
[-77.12547302 32.14493942]
[-72.85710907 17.76505470]
[-65.63622284 4.61747694]
[-55.79130936 -6.69966459]
[-43.77025223 -15.67151642]
[-30.11992264 -21.88991928]
[-15.46132469 -25.07197762]
[-0.46132436 -25.07292747]
[14.19767761 -21.89272881]
[27.84879303 -15.67605591]
[39.87099075 -6.70572758]
[49.71733856 4.61016560]
[56.94156265 17.76082420]
[48.59576797 4.31990480]
[55.75704956 -8.74016094]
[55.08726501 -23.72520065]
[54.41747665 -38.71023941]
[53.74769211 -53.69527817]
[53.07790756 -68.68031311]
[44.73211670 -82.12123871]
[51.89339447 -95.18130493]
[51.22360992 -110.16634369]
[50.55382538 -125.15138245]
[49.88404083 -140.13641357]
[43.05049896 -126.78341675]
[31.90338516 -116.74639130]
[17.90929413 -111.34588623]
[2.90938854 -111.29244232]
[-11.12283421 -116.59307098]
[-22.34119606 -126.55039978]
[-29.26972771 -139.85437012]
[-30.99686050 -154.75459290]
[-27.29536247 -169.29072571]
[-18.65222740 -181.55026245]
[-6.20460987 -189.92025757]
[8.40979195 -193.29949951]
[23.26820374 -191.24337769]
[36.41574478 -184.02241516]
[46.12262726 -172.58666992]
[51.11212158 -158.43833923]
[53.77791595 -173.19955444]
[56.44371414 -187.96078491]
[59.10950851 -202.72200012]
[61.77530289 -217.48321533]
[64.44110107 -232.24443054]
[55.69855118 -245.13650513]
[58.61232376 -260.06851196]
[70.95682526 -268.32373047]
[73.62261963 -283.08496094]
[59.31444550 -287.66000366]
[45.72586823 -294.06356812]
[33.08940887 -302.18606567]
[21.62129402 -311.88851929]
[11.51775455 -323.00485229]
[2.95167851 -335.34494019]
[-3.93035817 -348.69757080]
[-9.01059437 -362.83425903]
[-12.20210171 -377.51312256]
[-13.45026779 -392.48300171]
[-12.73373604 -407.48773193]
[-10.06476688 -422.27053833]
[-5.48902988 -436.57849121]
[0.91517848 -450.16677856]
[9.03827381 -462.80285645]
[18.74125862 -474.27050781]
[29.85810089 -484.37350464]
[42.19858170 -492.93899536]
[55.55153275 -499.82040405]
[69.68846893 -504.89996338]
[84.36750031 -508.09075928]
[99.33742523 -509.33822632]
[114.34211731 -508.62097168]
[129.12480164 -505.95129395]
[143.43254089 -501.37487793]
[157.02050781 -494.97003174]
[169.65618896 -486.84634399]
[181.12338257 -477.14279175]
[191.22587585 -466.02548218]
[199.79077148 -453.68460083]
[206.67153931 -440.33129883]
[211.75042725 -426.19412231]
[214.94053650 -411.51495361]
[216.18727112 -396.54495239]
[215.46931458 -381.54031372]
[212.79893494 -366.75775146]
[208.22184753 -352.45022583]
[201.81634521 -338.86257935]
[193.69204712 -326.22726440]
[183.98796082 -314.76052856]
[172.87016296 -304.65859985]
[160.52886963 -296.09426880]
[147.17526245 -289.21414185]
[133.03784180 -284.13592529]
[118.35850525 -280.94650269]
[103.38845825 -279.70046997]
[88.38384247 -280.41915894]
[85.71804047 -265.65792847]
[94.39523315 -253.60630798]
[91.90201569 -238.59835815]
[79.20231628 -229.57862854]
[76.53652191 -214.81741333]
[73.87072754 -200.05619812]
[71.20493317 -185.29498291]
[68.53913116 -170.53376770]
[65.87333679 -155.77255249]
[64.86907959 -140.80619812]
[65.53886414 -125.82116699]
[66.20864868 -110.83612823]
[66.87843323 -95.85108948]
[75.17632294 -83.48199463]
[68.06295013 -69.35010529]
[68.73273468 -54.36506271]
[69.40251923 -39.38002396]
[70.07230377 -24.39498520]
[70.74208832 -9.40994644]
[79.03997040 2.95914245]
[71.92659760 17.09103966]
[75.57468414 31.64065933]
[82.05418396 45.16900635]
[88.53367615 58.69734955]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[129.58418274 108.70612335]
[144.16529846 118.35505676]
[151.81185913 133.97984314]
[150.49836731 151.23637390]
[140.67660522 165.37750244]
[153.88133240 174.09219360]
[152.84281921 188.95054626]
[159.72222900 202.27998352]
[166.60163879 215.60940552]
[179.80636597 224.32409668]
[178.76785278 239.18246460]
[185.64727783 252.51188660]
[192.62571716 265.78973389]
[199.70283508 279.01525879]
[213.99240112 274.32705688]
[228.87901306 272.19161987]
[243.91026306 272.67385864]
[258.62936401 275.75909424]
[272.58905029 281.35357666]
[285.36508179 289.28729248]
[296.56924438 299.31918335]
[305.86099243 311.14434814]
[312.95797729 324.40344238]
[317.64456177 338.69354248]
[319.77832031 353.58038330]
[319.29437256 368.61157227]
[316.20748901 383.33035278]
[310.61141968 397.28939819]
[302.67623901 410.06454468]
[292.64309692 421.26754761]
[280.81686401 430.55795288]
[267.55697632 437.65344238]
[253.26632690 442.33840942]
[238.37924194 444.47045898]
[223.34809875 443.98483276]
[208.62968445 440.89627075]
[194.67126465 435.29861450]
[181.89703369 427.36196899]
[170.69517517 417.32754517]
[161.40609741 405.50027466]
[154.31210327 392.23959351]
[149.62876892 377.94842529]
[147.49839783 363.06109619]
[147.98573303 348.02999878]
[151.07597351 333.31192017]
[156.67521667 319.35415649]
[164.61329651 306.58081055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[4 175]
[5 174]
[7 172]
[8 171]
[9 170]
[11 168]
[18 163]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[52 156]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[60 148]
[61 147]
[62 146]
[63 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[87 136]
[88 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
