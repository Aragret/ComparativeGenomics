%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[161.79693604 900.87133789]
[147.21597290 897.33770752]
[132.82595825 893.09289551]
[118.66155243 888.14715576]
[104.75688934 882.51226807]
[91.14546967 876.20196533]
[77.86007690 869.23132324]
[64.93271637 861.61724854]
[52.39453888 853.37799072]
[40.27574539 844.53344727]
[28.60552788 835.10491943]
[17.41200638 825.11511230]
[6.72214413 814.58813477]
[-3.43830490 803.54925537]
[-13.04486370 792.02514648]
[-22.07438850 780.04357910]
[-30.50512695 767.63336182]
[-38.31676865 754.82440186]
[-45.49049377 741.64758301]
[-52.00901794 728.13464355]
[-57.85664368 714.31811523]
[-63.01927948 700.23126221]
[-67.48448944 685.90814209]
[-71.24150848 671.38311768]
[-74.28130341 656.69122314]
[-76.59653473 641.86791992]
[-78.18163300 626.94885254]
[-79.03276825 611.96997070]
[-79.14791107 596.96740723]
[-78.52676392 581.97723389]
[-77.17082977 567.03558350]
[-75.08338165 552.17846680]
[-72.26943970 537.44171143]
[-68.73578644 522.86077881]
[-64.49093628 508.47073364]
[-59.54511261 494.30636597]
[-53.91023254 480.40170288]
[-47.59987259 466.79031372]
[-40.62923050 453.50491333]
[-33.01510239 440.57757568]
[-24.77582741 428.03942871]
[-15.93126011 415.92065430]
[-6.50270510 404.25045776]
[3.48712254 393.05697632]
[14.01415730 382.36712646]
[25.05303764 372.20669556]
[36.57717133 362.60018921]
[48.55879211 353.57067871]
[60.96903992 345.13998413]
[73.77801514 337.32836914]
[86.95485687 330.15466309]
[100.46781921 323.63616943]
[114.28436279 317.78860474]
[128.37118530 312.62597656]
[142.69435120 308.16082764]
[138.93804932 293.63876343]
[135.18176270 279.11669922]
[131.42546082 264.59463501]
[127.66915131 250.07258606]
[123.91285706 235.55052185]
[120.15655518 221.02845764]
[116.40025330 206.50640869]
[104.72386932 204.97474670]
[94.21700287 199.57974243]
[86.12100220 190.93257141]
[81.40120697 180.03012085]
[80.63185883 168.14013672]
[83.92636871 156.65382385]
[90.92127991 146.92300415]
[100.81621552 140.10108948]
[97.71210480 125.42578125]
[94.60799408 110.75048065]
[91.28573608 96.12302399]
[87.74606323 81.54664612]
[84.20639038 66.97026825]
[80.55830383 52.42065048]
[76.80200195 37.89859009]
[73.04570007 23.37653160]
[69.28939819 8.85447216]
[65.53309631 -5.66758728]
[50.53280258 -4.55813837]
[35.57548904 -6.14513636]
[21.14197540 -10.37756538]
[7.69623899 -17.11937141]
[-4.32949591 -26.15383148]
[-14.54865170 -37.19052887]
[-22.63272285 -49.87467194]
[-28.32184410 -63.79852676]
[-31.43312836 -78.51449585]
[-31.86656570 -93.54951477]
[-29.60821915 -108.42028046]
[-24.73068810 -122.64875793]
[-17.39076233 -135.77755737]
[-7.82439137 -147.38462830]
[3.66090488 -157.09687805]
[16.69592285 -164.60208130]
[30.86163902 -169.65898132]
[45.70268631 -172.10502625]
[60.74198532 -171.86157227]
[75.49608612 -168.93644714]
[89.49069977 -163.42369080]
[102.27596283 -155.50051880]
[113.44088745 -145.42160034]
[122.62655640 -133.51097107]
[129.53768921 -120.15148163]
[133.95213318 -105.77259064]
[135.72796631 -90.83651733]
[134.80812073 -75.82340240]
[131.22215271 -61.21585083]
[125.08533478 -47.48343658]
[116.59494781 -35.06759262]
[106.02391815 -24.36744690]
[93.71206665 -15.72696018]
[80.05516052 -9.42388821]
[83.81146240 5.09817123]
[87.56775665 19.62023163]
[91.32405853 34.14228821]
[95.08036041 48.66434860]
[99.79871368 54.35284042]
[98.78276825 63.43059921]
[102.32243347 78.00697327]
[105.86210632 92.58335114]
[109.60752869 96.25565338]
[111.02880859 101.76503754]
[109.28329468 107.64636993]
[112.38740540 122.32167053]
[115.49151611 136.99697876]
[133.22836304 142.11865234]
[145.85156250 155.47326660]
[149.92919922 173.30421448]
[144.41661072 190.65570068]
[130.92231750 202.75010681]
[134.67861938 217.27215576]
[138.43490601 231.79421997]
[142.19120789 246.31628418]
[145.94750977 260.83834839]
[149.70381165 275.36041260]
[153.46011353 289.88244629]
[157.21641541 304.40451050]
[171.90824890 301.36462402]
[186.73155212 299.04928589]
[201.65060425 297.46408081]
[216.62947083 296.61282349]
[231.63206482 296.49755859]
[246.62223816 297.11859131]
[261.56387329 298.47442627]
[276.42102051 300.56176758]
[291.15780640 303.37557983]
[305.73880005 306.90914917]
[320.12884521 311.15386963]
[334.29327393 316.09960938]
[348.19793701 321.73437500]
[361.80938721 328.04464722]
[375.09481812 335.01516724]
[388.02221680 342.62921143]
[400.56045532 350.86837769]
[412.67929077 359.71286011]
[424.34954834 369.14132690]
[435.54312134 379.13107300]
[446.23303223 389.65802002]
[456.39352417 400.69683838]
[466.00015259 412.22088623]
[475.02972412 424.20245361]
[483.46054077 436.61264038]
[491.27224731 449.42153931]
[498.44604492 462.59832764]
[504.96463013 476.11126709]
[510.81231689 489.92776489]
[515.97503662 504.01452637]
[520.44030762 518.33770752]
[524.19738770 532.86267090]
[527.23724365 547.55450439]
[529.55255127 562.37780762]
[531.13775635 577.29687500]
[531.98895264 592.27575684]
[532.10418701 607.27832031]
[531.48309326 622.26849365]
[530.12725830 637.21014404]
[528.03985596 652.06726074]
[525.22601318 666.80407715]
[521.69238281 681.38507080]
[517.44763184 695.77508545]
[512.50189209 709.93945312]
[506.86706543 723.84417725]
[500.55676270 737.45556641]
[493.58621216 750.74102783]
[485.97213745 763.66839600]
[477.73291016 776.20660400]
[468.88842773 788.32537842]
[459.45993042 799.99566650]
[449.47015381 811.18920898]
[438.94317627 821.87908936]
[427.90432739 832.03955078]
[416.38024902 841.64611816]
[404.39868164 850.67572021]
[391.98846436 859.10644531]
[379.17953491 866.91815186]
[366.00271606 874.09191895]
[352.48980713 880.61047363]
[338.67327881 886.45812988]
[324.58648682 891.62078857]
[310.26333618 896.08599854]
[295.73834229 899.84307861]
[281.04647827 902.88293457]
[266.22317505 905.19818115]
[251.30410767 906.78332520]
[236.32524109 907.63452148]
[221.32264709 907.74969482]
[206.33247375 907.12854004]
[191.39083862 905.77264404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[70 127]
[71 126]
[72 125]
[73 122]
[74 121]
[75 120]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
