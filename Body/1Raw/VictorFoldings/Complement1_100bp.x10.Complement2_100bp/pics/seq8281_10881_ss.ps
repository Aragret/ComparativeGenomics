%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[117.34442139 460.02828979]
[109.33301544 447.33993530]
[102.20616913 434.13446045]
[95.99710846 420.47338867]
[90.73480225 406.42047119]
[86.44376373 392.04119873]
[83.14401245 377.40258789]
[80.85093689 362.57293701]
[79.57521820 347.62136841]
[79.32280731 332.61761475]
[80.09488678 317.63159180]
[81.88784790 302.73321533]
[84.69333649 287.99191284]
[88.49826813 273.47640991]
[93.28491211 259.25445557]
[99.03093719 245.39227295]
[105.70956421 231.95452881]
[113.28964996 219.00389099]
[121.73584747 206.60072327]
[131.00878906 194.80287170]
[141.06521606 183.66532898]
[151.85826111 173.24002075]
[142.19744873 161.76531982]
[132.53663635 150.29061890]
[122.87583160 138.81593323]
[113.21501923 127.34122467]
[103.55420685 115.86652374]
[92.03144836 114.17325592]
[84.59699249 105.20831299]
[85.06514740 93.57121277]
[75.57624817 81.95394897]
[66.08734894 70.33668518]
[52.45570374 77.61656952]
[37.67285919 82.10462189]
[22.30401611 83.63112640]
[6.93640471 82.13958740]
[-7.84314060 77.68876648]
[-21.47059822 70.45041656]
[-33.42627716 60.70260239]
[-43.25464630 48.81908417]
[-50.58166885 35.25492859]
[-55.12906265 20.52911186]
[-56.72485733 5.20466232]
[-55.30989075 -10.13287640]
[-50.94001007 -24.89781189]
[-43.78387070 -38.52667236]
[-34.11641693 -50.49970627]
[-43.77722549 -61.97440338]
[-53.43803787 -73.44910431]
[-63.09884644 -84.92380524]
[-72.75965881 -96.39850616]
[-82.42047119 -107.87320709]
[-94.83843994 -99.43531799]
[-108.05820465 -92.31900024]
[-121.93961334 -86.59969330]
[-136.33552551 -82.33802032]
[-151.09332275 -79.57915497]
[-166.05657959 -78.35234833]
[-181.06666565 -78.67060089]
[-195.96447754 -80.53054810]
[-210.59207153 -83.91246033]
[-224.79440308 -88.78050232]
[-238.42091370 -95.08305359]
[-251.32716370 -102.75331879]
[-263.37631226 -111.70997620]
[-274.44067383 -121.85808563]
[-284.40292358 -133.09007263]
[-293.15747070 -145.28686523]
[-300.61151123 -158.31918335]
[-306.68603516 -172.04887390]
[-311.31665039 -186.33038330]
[-314.45422363 -201.01232910]
[-316.06558228 -215.93907166]
[-316.13354492 -230.95237732]
[-314.65747070 -245.89309692]
[-311.65298462 -260.60287476]
[-307.15191650 -274.92572021]
[-301.20199585 -288.70986938]
[-293.86627197 -301.80914307]
[-285.22256470 -314.08474731]
[-275.36242676 -325.40649414]
[-264.39044189 -335.65438843]
[-252.42289734 -344.71981812]
[-239.58663940 -352.50665283]
[-226.01777649 -358.93234253]
[-211.86010742 -363.92880249]
[-197.26373291 -367.44305420]
[-182.38339233 -369.43786621]
[-167.37680054 -369.89205933]
[-152.40304565 -368.80081177]
[-137.62086487 -366.17572021]
[-123.18695068 -362.04458618]
[-109.25431061 -356.45123291]
[-95.97064209 -349.45495605]
[-83.47676086 -341.12988281]
[-71.90509796 -331.56427002]
[-61.37833405 -320.85952759]
[-52.00804901 -309.12915039]
[-43.89357758 -296.49746704]
[-37.12093353 -283.09838867]
[-31.76191711 -269.07394409]
[-27.87333107 -254.57281494]
[-25.49639893 -239.74871826]
[-24.65631676 -224.75877380]
[-25.36199188 -209.76190186]
[-27.60593987 -194.91708374]
[-31.36437798 -180.38166809]
[-36.59746170 -166.30975342]
[-43.24971771 -152.85049438]
[-51.25063324 -140.14659119]
[-60.51538467 -128.33267212]
[-70.94577026 -117.53401947]
[-61.28495789 -106.05931854]
[-51.62414551 -94.58461761]
[-41.96333694 -83.10991669]
[-32.30252838 -71.63521576]
[-22.64171600 -60.16051483]
[-9.94389534 -67.31669617]
[3.85930228 -72.01111603]
[18.29535866 -74.08146667]
[32.86980057 -73.45529938]
[47.08312225 -70.15254974]
[60.44792557 -64.28491211]
[72.50561523 -56.05207443]
[82.84214020 -45.73489761]
[91.10222626 -33.68585205]
[97.00154877 -20.31697464]
[100.33657074 -6.08577394]
[100.99152374 8.52042580]
[98.94245148 23.00116920]
[94.25805664 36.86001968]
[87.09742737 49.62157822]
[77.70461273 60.84778976]
[87.19351196 72.46504974]
[96.68241119 84.08231354]
[112.51599121 89.62073517]
[115.02890778 106.20571899]
[124.68972015 117.68041229]
[134.35052490 129.15512085]
[144.01133728 140.62982178]
[153.67214966 152.10452271]
[163.33296204 163.57922363]
[175.44482422 154.72035217]
[188.13301086 146.70869446]
[201.33834839 139.58157349]
[214.99928284 133.37225342]
[229.05210876 128.10964966]
[243.43130493 123.81832886]
[258.06982422 120.51828003]
[272.89941406 118.22490692]
[287.85098267 116.94888306]
[302.85473633 116.69617462]
[317.84075928 117.46794891]
[332.73919678 119.26061249]
[347.48052979 122.06580353]
[361.99609375 125.87044525]
[376.21817017 130.65679932]
[390.08047485 136.40255737]
[403.51834106 143.08090210]
[416.46914673 150.66073608]
[428.87246704 159.10667419]
[440.67050171 168.37937927]
[451.80825806 178.43559265]
[462.23376465 189.22842407]
[471.89846802 200.70756531]
[480.75723267 212.81948853]
[488.76882935 225.50772095]
[495.89584351 238.71311951]
[502.10507202 252.37408447]
[507.36758423 266.42694092]
[511.65881348 280.80615234]
[514.95874023 295.44470215]
[517.25201416 310.27432251]
[518.52795410 325.22589111]
[518.78057861 340.22964478]
[518.00866699 355.21566772]
[516.21594238 370.11407471]
[513.41064453 384.85543823]
[509.60589600 399.37097168]
[504.81942749 413.59301758]
[499.07360840 427.45526123]
[492.39514160 440.89309692]
[484.81524658 453.84381104]
[476.36920166 466.24710083]
[467.09643555 478.04507446]
[457.04016113 489.18276978]
[446.24725342 499.60821533]
[434.76803589 509.27279663]
[422.65606689 518.13153076]
[409.96777344 526.14300537]
[396.76232910 533.26995850]
[383.10131836 539.47906494]
[369.04843140 544.74151611]
[354.66915894 549.03265381]
[340.03060913 552.33245850]
[325.20095825 554.62567139]
[310.24942017 555.90148926]
[295.24563599 556.15399170]
[280.25961304 555.38201904]
[265.36120605 553.58917236]
[250.61990356 550.78375244]
[236.10440063 546.97894287]
[221.88238525 542.19238281]
[208.02015686 536.44641113]
[194.58238220 529.76788330]
[181.63169861 522.18792725]
[169.22846985 513.74176025]
[157.43055725 504.46893311]
[146.29293823 494.41256714]
[135.86756897 483.61959839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 142]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[30 135]
[31 134]
[32 133]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[52 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
