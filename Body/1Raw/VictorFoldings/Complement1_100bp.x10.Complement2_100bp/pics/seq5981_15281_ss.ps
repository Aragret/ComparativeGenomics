%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[80.75119781 553.23675537]
[72.90213776 540.03491211]
[72.72160339 524.67712402]
[80.25815582 511.29443359]
[93.48450470 503.48678589]
[93.26117706 488.48846436]
[93.03784943 473.49011230]
[92.81452179 458.49179077]
[92.59119415 443.49343872]
[92.36786652 428.49511719]
[92.14453888 413.49676514]
[84.21861267 400.88610840]
[91.74958801 386.97225952]
[77.22921753 383.35171509]
[64.13079071 376.09030151]
[53.35010147 365.67776489]
[45.62619781 352.81954956]
[41.49074173 338.38906860]
[41.23141098 323.36837769]
[44.87188721 308.78121948]
[52.16983414 295.62347412]
[62.63303375 284.79492188]
[75.55255890 277.03790283]
[90.05082703 272.88635254]
[89.82749939 257.88800049]
[86.58476257 251.24674988]
[89.71417236 242.66510010]
[81.97687531 229.93783569]
[89.71417236 216.13764954]
[89.71417236 201.13764954]
[87.03048706 197.18710327]
[86.80002594 191.50872803]
[89.94415283 185.69271851]
[90.39075470 170.69935608]
[90.83736420 155.70600891]
[83.48242950 142.75401306]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[83.74431610 99.63689423]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[91.26741028 55.55834579]
[87.72773743 40.98196793]
[84.18806458 26.40559387]
[80.53997803 11.85597324]
[76.78367615 -2.66608548]
[73.02737427 -17.18814468]
[69.27107239 -31.71020317]
[58.57379913 -38.91652679]
[55.74413300 -51.08931351]
[61.76777267 -61.57942200]
[58.22809982 -76.15579987]
[47.45277405 -87.74039459]
[51.96820068 -101.93405914]
[47.56720352 -116.27391052]
[42.32048416 -130.32638550]
[37.07376862 -144.37884521]
[31.82704926 -158.43132019]
[26.58033180 -172.48379517]
[7.80009079 -172.48646545]
[-9.51582241 -179.67150879]
[-22.73453140 -192.91923523]
[-29.85658264 -210.19017029]
[-29.81835175 -228.83909607]
[-22.65082359 -246.02011108]
[-9.47101307 -259.12097168]
[-15.74837399 -272.74429321]
[-22.02573395 -286.36761475]
[-28.30309486 -299.99093628]
[-34.58045578 -313.61422729]
[-40.85781860 -327.23754883]
[-55.30793381 -323.10299683]
[-70.21985626 -321.22280884]
[-85.24401855 -321.64108276]
[-100.02823639 -324.34796143]
[-114.22595215 -329.28002930]
[-127.50434113 -336.32168579]
[-139.55215454 -345.30783081]
[-150.08695984 -356.02783203]
[-158.86180115 -368.23037720]
[-165.67100525 -381.62945557]
[-170.35493469 -395.91094971]
[-172.80378723 -410.74011230]
[-172.96018982 -425.76928711]
[-170.82044983 -440.64617920]
[-166.43473816 -455.02203369]
[-159.90583801 -468.55993652]
[-151.38682556 -480.94244385]
[-141.07739258 -491.87936401]
[-129.21919250 -501.11425781]
[-116.09021759 -508.43069458]
[-101.99821472 -513.65716553]
[-87.27352905 -516.67114258]
[-72.26132202 -517.40197754]
[-57.31350327 -515.83251953]
[-42.78047562 -511.99954224]
[-29.00290871 -505.99295044]
[-16.30377197 -497.95352173]
[-4.98074913 -488.06973267]
[4.70073032 -476.57321167]
[12.51371956 -463.73352051]
[18.27507019 -449.85162354]
[21.84972954 -435.25292969]
[23.15390015 -420.27963257]
[22.15701103 -405.28274536]
[18.88243294 -390.61380005]
[13.40692329 -376.61669922]
[5.85883856 -363.61950684]
[-3.58488464 -351.92691040]
[-14.70287132 -341.81301880]
[-27.23450089 -333.51492310]
[-20.95713997 -319.89160156]
[-14.67977905 -306.26828003]
[-8.40241909 -292.64495850]
[-2.12505794 -279.02163696]
[4.15230274 -265.39834595]
[15.48024845 -267.18792725]
[26.91898537 -266.21243286]
[37.80271149 -262.52294922]
[47.49656677 -256.32870483]
[55.43368149 -247.98521423]
[61.14829254 -237.97386169]
[64.30310822 -226.87414551]
[64.70919037 -215.33010864]
[62.33725357 -204.01301575]
[57.31973267 -193.58226013]
[49.94335556 -184.64698792]
[40.63280106 -177.73051453]
[45.87952042 -163.67803955]
[51.12623978 -149.62556458]
[56.37295532 -135.57310486]
[61.61967468 -121.52062988]
[66.92159271 -135.55236816]
[79.39488983 -143.88404846]
[94.38733673 -143.40814209]
[106.30712128 -134.30218506]
[110.70846558 -119.96244049]
[105.94976807 -105.73728943]
[93.80590057 -96.93236542]
[78.80624390 -96.83168793]
[66.54457855 -105.47373199]
[77.06671906 -94.93173981]
[72.80447388 -79.69547272]
[76.34414673 -65.11909485]
[89.12384796 -53.09219742]
[83.79313660 -35.46650314]
[87.54943848 -20.94444466]
[91.30573273 -6.42238617]
[95.06203461 8.09967327]
[99.78038788 13.78816509]
[98.76444244 22.86592102]
[102.30411530 37.44229889]
[105.84378815 52.01867294]
[109.64699554 37.50882721]
[117.90055847 24.98370552]
[129.73345947 15.76511383]
[143.89694214 10.82591057]
[158.89630127 10.68734264]
[173.14862061 15.36403275]
[185.14981079 24.36244011]
[193.63337708 36.73294067]
[197.70401001 51.17004395]
[196.93212891 66.15016937]
[191.39918518 80.09243011]
[181.68910217 91.52546692]
[168.82659912 99.24272156]
[154.16908264 102.42977142]
[139.26341248 100.75028229]
[125.68258667 94.38150024]
[114.85985565 83.99552917]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[115.30745697 94.51721954]
[115.04737091 106.16082764]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[113.94351959 143.66136169]
[105.83071136 156.15261841]
[105.38410950 171.14596558]
[104.93750000 186.13931274]
[104.71417236 201.13764954]
[104.71417236 216.13764954]
[112.45146942 229.93783569]
[104.71417236 242.66510010]
[104.82583618 257.66467285]
[105.04916382 272.66302490]
[119.66461182 276.38107300]
[132.80937195 283.75000000]
[143.59033203 294.26220703]
[151.27680969 307.19683838]
[155.34997559 321.66912842]
[155.53797913 336.69088745]
[151.83401489 351.23809814]
[144.49636841 364.32058716]
[134.03047180 375.04949951]
[121.15406036 382.69766235]
[106.74792480 386.74893188]
[114.68983459 400.43237305]
[107.14288330 413.27343750]
[107.36621094 428.27178955]
[107.58953857 443.27011108]
[107.81286621 458.26846313]
[108.03619385 473.26678467]
[108.25952148 488.26513672]
[108.48284912 503.26345825]
[121.93579102 510.67385864]
[129.86746216 523.82617188]
[130.14427185 539.18261719]
[122.69175720 552.61224365]
[109.51461029 560.50262451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[13 197]
[24 186]
[25 185]
[27 184]
[29 182]
[30 181]
[33 180]
[34 179]
[35 178]
[37 176]
[38 175]
[40 172]
[41 171]
[42 153]
[43 152]
[44 151]
[45 149]
[46 148]
[47 147]
[48 146]
[51 144]
[52 143]
[54 141]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
