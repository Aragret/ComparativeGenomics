%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[18.17854118 561.44097900]
[7.89783907 572.37329102]
[-3.16216779 582.51641846]
[-14.94107246 591.81506348]
[-27.37454224 600.21838379]
[-40.39466858 607.68054199]
[-53.93033981 614.16070557]
[-67.90763092 619.62353516]
[-82.25019073 624.03918457]
[-96.87969971 627.38354492]
[-111.71624756 629.63836670]
[-126.67880249 630.79125977]
[-141.68563843 630.83599854]
[-156.65480042 629.77233887]
[-171.50453186 627.60601807]
[-186.15371704 624.34899902]
[-200.52235413 620.01892090]
[-214.53196716 614.63952637]
[-228.10603333 608.24011230]
[-241.17042542 600.85577393]
[-253.65377808 592.52673340]
[-265.48791504 583.29846191]
[-276.60821533 573.22143555]
[-286.95391846 562.35064697]
[-296.46850586 550.74554443]
[-305.10006714 538.46942139]
[-312.80142212 525.58929443]
[-319.53051758 512.17565918]
[-325.25057983 498.30163574]
[-329.93041992 484.04309082]
[-333.54440308 469.47784424]
[-336.07287598 454.68548584]
[-337.50195312 439.74676514]
[-337.82385254 424.74331665]
[-337.03686523 409.75704956]
[-335.14520264 394.86984253]
[-332.15927124 380.16299438]
[-328.09533691 365.71682739]
[-322.97561646 351.61026001]
[-316.82806396 337.92031860]
[-309.68624878 324.72177124]
[-301.58920288 312.08670044]
[-292.58111572 300.08413696]
[-282.71121216 288.77960205]
[-272.03338623 278.23486328]
[-260.60595703 268.50753784]
[-248.49133301 259.65069580]
[-235.75570679 251.71276855]
[-222.46861267 244.73706055]
[-208.70263672 238.76170349]
[-194.53294373 233.81932068]
[-180.03694153 229.93690491]
[-165.29379272 227.13566589]
[-150.38403320 225.43089294]
[-135.38908386 224.83192444]
[-120.39085388 225.34199524]
[-105.47124481 226.95834351]
[-90.71175385 229.67211914]
[-76.19299316 233.46853638]
[-61.99425507 238.32682800]
[-48.19308853 244.22047424]
[-34.86487579 251.11727905]
[-22.08240891 258.97958374]
[-13.30180645 246.81813049]
[-4.52120304 234.65667725]
[-3.34411693 219.80865479]
[11.00726128 213.14918518]
[19.78786469 200.98773193]
[28.56846809 188.82627869]
[37.25829315 176.59979248]
[45.85685730 164.30894470]
[54.45542145 152.01811218]
[63.05398560 139.72727966]
[71.65254974 127.43643188]
[72.60843658 112.57253265]
[86.85907745 105.70013428]
[88.26311493 91.78897858]
[100.85008240 85.70130157]
[102.42100525 69.95828247]
[116.05661774 63.96500015]
[117.22777557 45.58811569]
[133.40698242 38.79103851]
[141.82159424 26.37354469]
[150.23622131 13.95604897]
[157.70394897 0.94709617]
[164.18345642 -12.58124924]
[170.66294861 -26.10959435]
[177.14244080 -39.63793945]
[183.62193298 -53.16628647]
[170.78308105 -60.94642639]
[158.76864624 -69.94754791]
[147.69435120 -80.08296204]
[137.66682434 -91.25505066]
[128.78266907 -103.35623169]
[121.12741852 -116.26994324]
[114.77481842 -129.87182617]
[109.78604889 -144.03088379]
[106.20914459 -158.61074829]
[104.07855225 -173.47100830]
[103.41481018 -188.46855164]
[104.22429657 -203.45893860]
[106.49921417 -218.29779053]
[110.21765900 -232.84220886]
[115.34381866 -246.95210266]
[121.82832336 -260.49160767]
[129.60871887 -273.33029175]
[138.61007690 -285.34454346]
[148.74571228 -296.41864014]
[159.91801453 -306.44595337]
[172.01936340 -315.32986450]
[184.93322754 -322.98486328]
[198.53524780 -329.33718872]
[212.69439697 -334.32568359]
[227.27433777 -337.90228271]
[242.13464355 -340.03259277]
[257.13220215 -340.69601440]
[272.12255859 -339.88623047]
[286.96136475 -337.61102295]
[301.50570679 -333.89230347]
[315.61550903 -328.76583862]
[329.15487671 -322.28106689]
[341.99340820 -314.50042725]
[354.00747681 -305.49880981]
[365.08139038 -295.36294556]
[375.10845947 -284.19046021]
[383.99212646 -272.08892822]
[391.64688110 -259.17492676]
[397.99893188 -245.57278442]
[402.98712158 -231.41351318]
[406.56344604 -216.83351135]
[408.69345093 -201.97315979]
[409.35659790 -186.97560120]
[408.54650879 -171.98524475]
[406.27099609 -157.14648438]
[402.55197144 -142.60221863]
[397.42523193 -128.49252319]
[390.94018555 -114.95328522]
[383.15927124 -102.11489868]
[374.15744019 -90.10100555]
[364.02136230 -79.02731323]
[352.84866333 -69.00045776]
[340.74697876 -60.11702347]
[327.83279419 -52.46255493]
[314.23052979 -46.11076736]
[300.07116699 -41.12284470]
[285.49108887 -37.54681396]
[270.63070679 -35.41712189]
[255.63311768 -34.75427246]
[240.64277649 -35.56465912]
[225.80406189 -37.84046555]
[211.25987244 -41.55978394]
[197.15028381 -46.68679047]
[190.67079163 -33.15844345]
[184.19129944 -19.63009834]
[177.71179199 -6.10175371]
[171.23229980 7.42659187]
[184.44520569 0.32595876]
[199.44093323 0.68428332]
[212.29962158 8.40790081]
[219.66003418 21.47787476]
[219.59819031 36.47774887]
[212.13024902 49.48658752]
[199.20832825 57.10391617]
[184.21015930 57.33857727]
[171.05624390 50.12923813]
[163.18498230 37.36039734]
[162.65371704 22.37066650]
[154.23908997 34.78816223]
[145.82447815 47.20565796]
[147.79837036 59.14007568]
[140.88963318 69.55416107]
[128.34745789 72.56356812]
[127.39156342 87.42746735]
[113.14092255 94.29986572]
[111.73688507 108.21102142]
[99.14991760 114.29869843]
[97.57899475 130.04171753]
[83.94338226 136.03500366]
[75.34481812 148.32583618]
[66.74626160 160.61666870]
[58.14769363 172.90751648]
[49.54912949 185.19834900]
[47.19401169 194.02395630]
[40.72992325 197.60687256]
[31.94931984 209.76832581]
[23.16871643 221.92979431]
[21.36358261 237.64767456]
[7.64025259 243.43727112]
[-1.14035046 255.59873962]
[-9.92095375 267.76019287]
[1.56426716 277.41921997]
[12.30477619 287.90008545]
[22.24191093 299.14556885]
[31.32139778 311.09420776]
[39.49364853 323.68078613]
[46.71402359 336.83651733]
[52.94309616 350.48956299]
[58.14683533 364.56536865]
[62.29682922 378.98703003]
[65.37040710 393.67584229]
[67.35077667 408.55148315]
[68.22712708 423.53277588]
[67.99467468 438.53790283]
[66.65468597 453.48486328]
[64.21448517 468.29202271]
[60.68738556 482.87857056]
[56.09266281 497.16476440]
[50.45541000 511.07263184]
[43.80641556 524.52618408]
[36.18199539 537.45196533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 190]
[64 189]
[65 188]
[67 186]
[68 185]
[69 184]
[70 182]
[71 181]
[72 180]
[73 179]
[74 178]
[76 176]
[78 174]
[80 172]
[82 169]
[83 168]
[84 167]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
