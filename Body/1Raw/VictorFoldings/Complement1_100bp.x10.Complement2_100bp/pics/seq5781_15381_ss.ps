%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[75.40705109 604.52276611]
[62.09097290 611.45532227]
[48.15079880 617.02758789]
[33.72506714 621.18414307]
[18.95716095 623.88372803]
[3.99384999 625.09942627]
[-11.01614952 624.81915283]
[-25.92365646 623.04583740]
[-40.58051300 619.79693604]
[-54.84104156 615.10479736]
[-68.56351471 609.01611328]
[-81.61155701 601.59136963]
[-93.85546875 592.90429688]
[-105.17358398 583.04125977]
[-115.45339203 572.10034180]
[-124.59274292 560.19018555]
[-132.50079346 547.42926025]
[-139.09895325 533.94439697]
[-144.32164001 519.86950684]
[-148.11695862 505.34454346]
[-150.44717407 490.51388550]
[-151.28912354 475.52490234]
[-150.63446045 460.52655029]
[-148.48966980 445.66793823]
[-144.87608337 431.09671021]
[-139.82962036 416.95770264]
[-133.40040588 403.39141846]
[-125.65236664 390.53271484]
[-116.66249084 378.50936890]
[-106.52014160 367.44088745]
[-95.32611084 357.43725586]
[-83.19165802 348.59793091]
[-70.23738098 341.01077271]
[-56.59202957 334.75112915]
[-42.39122009 329.88125610]
[-27.77608871 326.44955444]
[-12.89189434 324.49014282]
[2.11343360 324.02243042]
[17.09076309 325.05114746]
[31.89123726 327.56600952]
[35.86333466 313.10150146]
[39.83543015 298.63696289]
[43.80752563 284.17242432]
[33.81173325 268.83621216]
[38.27682877 250.75373840]
[54.82013702 241.52156067]
[58.35980988 226.94519043]
[57.01821899 224.48382568]
[56.57076645 221.34274292]
[57.28123474 217.85983276]
[59.28632736 214.46217346]
[62.56843567 211.61933899]
[66.96943665 197.27947998]
[71.37042999 182.93963623]
[75.77143097 168.59979248]
[80.17242432 154.25994873]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[89.69423676 61.46530151]
[88.65298462 48.23177338]
[95.32485962 36.98152161]
[107.08134460 31.70756912]
[105.93035126 22.64594460]
[110.56349182 16.88783455]
[114.10316467 2.31145835]
[117.64283752 -12.26491737]
[121.18251038 -26.84129333]
[124.72217560 -41.41766739]
[128.26185608 -55.99404144]
[127.24590302 -65.07180023]
[131.96424866 -70.76029205]
[135.72055054 -85.28234863]
[139.47685242 -99.80441284]
[143.23315430 -114.32646942]
[146.88124084 -128.87608337]
[150.42091370 -143.45246887]
[153.96058655 -158.02883911]
[157.50025940 -172.60520935]
[161.03993225 -187.18159485]
[164.57960510 -201.75796509]
[150.43974304 -206.80590820]
[136.90498352 -213.30424500]
[124.12365723 -221.18176270]
[112.23578644 -230.35215759]
[101.37162018 -240.71496582]
[91.65019989 -252.15661621]
[83.17802429 -264.55178833]
[76.04793549 -277.76464844]
[70.33805084 -291.65042114]
[66.11092377 -306.05697632]
[63.41287613 -320.82647705]
[62.27346420 -335.79711914]
[62.70517349 -350.80480957]
[64.70327759 -365.68518066]
[68.24588013 -380.27517700]
[73.29416656 -394.41491699]
[79.79282379 -407.94952393]
[87.67065430 -420.73065186]
[96.84134674 -432.61828613]
[107.20440674 -443.48220825]
[118.64630890 -453.20336914]
[131.04167175 -461.67523193]
[144.25469971 -468.80499268]
[158.14062500 -474.51455688]
[172.54728699 -478.74133301]
[187.31686401 -481.43899536]
[202.28750610 -482.57806396]
[217.29521179 -482.14599609]
[232.17552185 -480.14752197]
[246.76542664 -476.60455322]
[260.90505981 -471.55593872]
[274.43948364 -465.05694580]
[287.22042847 -457.17880249]
[299.10784912 -448.00781250]
[309.97152710 -437.64450073]
[319.69238281 -426.20236206]
[328.16394043 -413.80679321]
[335.29339600 -400.59359741]
[341.00262451 -386.70751953]
[345.22903442 -372.30075073]
[347.92636108 -357.53112793]
[349.06506348 -342.56045532]
[348.63262939 -327.55276489]
[346.63378906 -312.67248535]
[343.09048462 -298.08267212]
[338.04150391 -283.94317627]
[331.54217529 -270.40890503]
[323.66372681 -257.62814331]
[314.49246216 -245.74093628]
[304.12887573 -234.87753296]
[292.68649292 -225.15693665]
[280.29074097 -216.68566895]
[267.07736206 -209.55654907]
[253.19116211 -203.84767151]
[238.78428650 -199.62159729]
[224.01458740 -196.92462158]
[209.04388428 -195.78630066]
[194.03620911 -196.21910095]
[179.15597534 -198.21829224]
[175.61631775 -183.64192200]
[172.07664490 -169.06553650]
[168.53697205 -154.48916626]
[164.99729919 -139.91279602]
[161.45762634 -125.33641815]
[162.93392944 -118.09471130]
[157.75521851 -110.57016754]
[153.99891663 -96.04811096]
[150.24261475 -81.52604675]
[146.48631287 -67.00399017]
[142.83822632 -52.45437241]
[139.29855347 -37.87799454]
[135.75888062 -23.30162048]
[132.21920776 -8.72524452]
[128.67953491 5.85113096]
[125.13986206 20.42750549]
[121.70880127 35.02982712]
[131.27142334 48.86438751]
[127.80117798 65.66535187]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[111.73396301 135.58908081]
[126.18441010 139.61207581]
[133.67750549 152.60644531]
[129.92085266 167.12841797]
[117.06644440 174.85914612]
[102.47785950 171.37011719]
[94.51227570 158.66094971]
[90.11127472 173.00079346]
[85.71028137 187.34063721]
[81.30928040 201.68048096]
[76.90827942 216.02032471]
[72.93618774 230.48486328]
[69.39651489 245.06123352]
[77.43968201 253.81588745]
[80.22953796 265.24908447]
[77.18539429 276.49304199]
[69.17516327 284.78472900]
[58.27204895 288.14453125]
[54.29995346 302.60906982]
[50.32785797 317.07357788]
[46.35576248 331.53811646]
[60.36490631 336.93463135]
[73.76710510 343.69921875]
[86.42916107 351.76464844]
[98.22522736 361.05072021]
[109.03806305 371.46517944]
[118.76021576 382.90454102]
[127.29504395 395.25503540]
[134.55772400 408.39401245]
[140.47608948 422.19079590]
[144.99130249 436.50833130]
[148.05848694 451.20428467]
[149.64717102 466.13259888]
[149.74156189 481.14489746]
[148.34072876 496.09201050]
[145.45857239 510.82537842]
[141.12374878 525.19854736]
[135.37934875 539.06866455]
[128.28245544 552.29791260]
[119.90361023 564.75476074]
[110.32608032 576.31549072]
[99.64505005 586.86505127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 189]
[41 188]
[42 187]
[43 186]
[46 181]
[47 180]
[52 179]
[53 178]
[54 177]
[55 176]
[56 175]
[57 168]
[58 167]
[59 166]
[61 164]
[62 163]
[66 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 148]
[80 147]
[81 146]
[82 145]
[83 144]
[84 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
