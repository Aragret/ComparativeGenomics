%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[55.92105865 295.44744873]
[57.63393021 310.36486816]
[57.69533539 325.38018799]
[56.10453415 340.31109619]
[52.88083267 354.97640991]
[48.06336594 369.19805908]
[41.71060944 382.80340576]
[33.89968872 395.62731934]
[24.72541237 407.51409912]
[14.29915142 418.31948853]
[2.74747157 427.91229248]
[-9.78940105 436.17608643]
[-23.15928078 443.01049805]
[-37.19986725 448.33264160]
[-51.74072647 452.07785034]
[-66.60533905 454.20071411]
[-81.61326599 454.67541504]
[-96.58232117 453.49621582]
[-111.33079529 450.67739868]
[-125.67966461 446.25323486]
[-139.45472717 440.27740479]
[-152.48878479 432.82241821]
[-164.62361145 423.97882080]
[-175.71189880 413.85397339]
[-185.61904907 402.57070923]
[-194.22479248 390.26605225]
[-201.42466736 377.08938599]
[-207.13127136 363.20062256]
[-211.27532959 348.76834106]
[-213.80653381 333.96780396]
[-214.69416809 318.97863770]
[-213.92745972 303.98278809]
[-211.51570129 289.16232300]
[-207.48818970 274.69711304]
[-201.89379883 260.76275635]
[-194.80043030 247.52842712]
[-186.29421997 235.15476990]
[-176.47839355 223.79199219]
[-165.47213745 213.57800293]
[-153.40904236 204.63682556]
[-140.43553162 197.07696533]
[-126.70910645 190.99021912]
[-112.39639282 186.45045471]
[-97.67113495 183.51280212]
[-82.71207428 182.21290588]
[-67.70080566 182.56654358]
[-52.81955719 184.56942749]
[-38.24896622 188.19723511]
[-24.16590691 193.40594482]
[-10.74133873 200.13232422]
[1.86177897 208.29472351]
[11.35067749 196.67745972]
[20.83957481 185.06019592]
[30.32847404 173.44293213]
[39.81737137 161.82566833]
[49.30627060 150.20840454]
[58.79516983 138.59114075]
[60.85393906 123.83950043]
[75.57624817 118.04605103]
[85.06514740 106.42878723]
[87.33086395 89.80823517]
[103.08023071 84.03468323]
[112.39511108 72.27743530]
[121.70999146 60.52018356]
[106.82010651 62.33436203]
[94.17951202 54.25876236]
[89.56731415 39.98544312]
[95.09215546 26.03997231]
[108.22814178 18.79803085]
[122.96968842 21.57053947]
[132.57714844 33.08993912]
[132.65751648 48.09146881]
[143.14501953 37.36708832]
[153.63252258 26.64270973]
[164.12002563 15.91833019]
[174.44668579 5.03899574]
[184.61022949 -5.99288130]
[194.77378845 -17.02475929]
[204.93733215 -28.05663681]
[215.10087585 -39.08851242]
[204.71218872 -49.91526794]
[195.00970459 -61.36103058]
[186.03022766 -73.38237762]
[177.80784607 -85.93370819]
[170.37371826 -98.96741486]
[163.75607300 -112.43405914]
[157.97999573 -126.28253937]
[153.06739807 -140.46034241]
[149.03692627 -154.91368103]
[145.90385437 -169.58772278]
[143.68006897 -184.42680359]
[142.37402344 -199.37464905]
[141.99066162 -214.37454224]
[142.53143311 -229.36956787]
[143.99429321 -244.30288696]
[146.37368774 -259.11779785]
[149.66058350 -273.75817871]
[153.84252930 -288.16839600]
[158.90365601 -302.29385376]
[164.82476807 -316.08096313]
[171.58338928 -329.47741699]
[179.15388489 -342.43237305]
[187.50755310 -354.89672852]
[196.61270142 -366.82315063]
[206.43476868 -378.16647339]
[216.93652344 -388.88360596]
[228.07812500 -398.93389893]
[239.81729126 -408.27923584]
[252.10949707 -416.88418579]
[264.90814209 -424.71609497]
[278.16461182 -431.74523926]
[291.82870483 -437.94500732]
[305.84851074 -443.29180908]
[320.17089844 -447.76538086]
[334.74151611 -451.34878540]
[349.50509644 -454.02841187]
[364.40563965 -455.79406738]
[379.38659668 -456.63909912]
[394.39117432 -456.56030273]
[409.36245728 -455.55792236]
[424.24362183 -453.63583374]
[438.97824097 -450.80126953]
[453.51040649 -447.06500244]
[467.78500366 -442.44119263]
[481.74789429 -436.94741821]
[495.34606934 -430.60446167]
[508.52798462 -423.43643188]
[521.24365234 -415.47052002]
[533.44476318 -406.73690796]
[545.08514404 -397.26873779]
[556.12054443 -387.10195923]
[566.50909424 -376.27511597]
[576.21148682 -364.82925415]
[585.19085693 -352.80780029]
[593.41308594 -340.25640869]
[600.84710693 -327.22262573]
[607.46459961 -313.75592041]
[613.24053955 -299.90737915]
[618.15301514 -285.72952271]
[622.18334961 -271.27615356]
[625.31628418 -256.60208130]
[627.53991699 -241.76296997]
[628.84582520 -226.81510925]
[629.22900391 -211.81521606]
[628.68811035 -196.82019043]
[627.22509766 -181.88688660]
[624.84552002 -167.07199097]
[621.55853271 -152.43167114]
[617.37640381 -138.02146912]
[612.31512451 -123.89605713]
[606.39392090 -110.10900879]
[599.63513184 -96.71263885]
[592.06451416 -83.75774384]
[583.71075439 -71.29347992]
[574.60546875 -59.36712646]
[564.78326416 -48.02392578]
[554.28143311 -37.30690002]
[543.13977051 -27.25670815]
[531.40051270 -17.91147232]
[519.10821533 -9.30664349]
[506.30947876 -1.47486305]
[493.05291748 5.55416059]
[479.38879395 11.75376415]
[465.36892700 17.10042953]
[451.04647827 21.57387543]
[436.47583008 25.15713310]
[421.71221924 27.83660889]
[406.81167603 29.60213661]
[391.83068848 30.44702339]
[376.82611084 30.36806107]
[361.85485840 29.36555099]
[346.97369385 27.44329453]
[332.23910522 24.60858345]
[317.70697021 20.87217331]
[303.43243408 16.24823380]
[289.46960449 10.75430870]
[275.87149048 4.41123724]
[262.68963623 -2.75691986]
[249.97406006 -10.72297001]
[237.77301025 -19.45669556]
[226.13275146 -28.92496681]
[215.96920776 -17.89308929]
[205.80566406 -6.86121178]
[195.64212036 4.17066526]
[185.47856140 15.20254230]
[184.77552795 19.92639542]
[181.09753418 24.25875473]
[174.84440613 26.40583229]
[164.35690308 37.13021088]
[153.86940002 47.85459137]
[143.38189697 58.57897186]
[133.46723938 69.83506775]
[124.15236664 81.59231567]
[114.83747864 93.34957123]
[115.47884369 104.97840881]
[108.17868805 114.05304718]
[96.68241119 115.91768646]
[87.19351196 127.53495026]
[84.45603180 143.11752319]
[70.41242981 148.08003235]
[60.92353439 159.69729614]
[51.43463516 171.31455994]
[41.94573593 182.93182373]
[32.45684052 194.54908752]
[22.96794128 206.16635132]
[13.47904205 217.78361511]
[23.99333191 228.50335693]
[33.26452255 240.31471252]
[41.18007278 253.07431030]
[47.64389420 266.62725830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 206]
[52 205]
[53 204]
[54 203]
[55 202]
[56 201]
[57 200]
[59 198]
[60 197]
[62 194]
[63 193]
[64 192]
[72 191]
[73 190]
[74 189]
[75 188]
[76 185]
[77 184]
[78 183]
[79 182]
[80 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
