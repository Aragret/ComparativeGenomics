%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[128.92437744 150.01393127]
[136.82073975 137.24749756]
[124.85840607 128.19749451]
[112.89606476 119.14749146]
[100.93373108 110.09748840]
[93.11641693 108.13226318]
[88.86199951 100.82262421]
[77.03572845 91.59552765]
[65.20945740 82.36842346]
[53.38319016 73.14132690]
[41.55691910 63.91423035]
[31.76307487 75.27954102]
[21.42749405 86.15453339]
[10.57469368 96.51340485]
[-0.76958513 106.33160400]
[-12.57843590 115.58583069]
[-24.82384872 124.25413513]
[-37.47677994 132.31594849]
[-50.50721359 139.75218201]
[-63.88425064 146.54515076]
[-77.57615662 152.67878723]
[-91.55045319 158.13850403]
[-105.77400208 162.91137695]
[-120.21305847 166.98608398]
[-134.83338928 170.35295105]
[-149.60029602 173.00399780]
[-164.47875977 174.93292236]
[-179.43350220 176.13517761]
[-194.42904663 176.60787964]
[-209.42980957 176.34992981]
[-224.40023804 175.36193848]
[-239.30479431 173.64624023]
[-254.10815430 171.20690918]
[-268.77517700 168.04972839]
[-283.27108765 164.18218994]
[-297.56152344 159.61346436]
[-311.61257935 154.35438538]
[-325.39089966 148.41743469]
[-338.86383057 141.81668091]
[-351.99938965 134.56779480]
[-364.76647949 126.68797302]
[-377.13473511 118.19589233]
[-389.07489014 109.11170197]
[-400.55859375 99.45694733]
[-411.55859375 89.25452423]
[-422.04882812 78.52863312]
[-432.00439453 67.30472565]
[-441.40170288 55.60940933]
[-450.21844482 43.47043228]
[-458.43368530 30.91658401]
[-466.02801514 17.97764206]
[-472.98333740 4.68429613]
[-479.28320312 -8.93192291]
[-484.91262817 -22.83872032]
[-489.85830688 -37.00310898]
[-494.10848999 -51.39149094]
[-497.65310669 -65.96974182]
[-500.48370361 -80.70328522]
[-502.59362793 -95.55716705]
[-503.97784424 -110.49616241]
[-504.63308716 -125.48483276]
[-504.55776978 -140.48764038]
[-503.75210571 -155.46897888]
[-502.21798706 -170.39332581]
[-499.95904541 -185.22528076]
[-496.98065186 -199.92965698]
[-493.28985596 -214.47158813]
[-488.89544678 -228.81657410]
[-483.80783081 -242.93060303]
[-478.03906250 -256.78018188]
[-471.60281372 -270.33245850]
[-464.51437378 -283.55532837]
[-456.79055786 -296.41735840]
[-448.44967651 -308.88809204]
[-439.51153564 -320.93795776]
[-429.99728394 -332.53833008]
[-419.92953491 -343.66174316]
[-409.33215332 -354.28176880]
[-398.23025513 -364.37326050]
[-386.65020752 -373.91223145]
[-374.61947632 -382.87609863]
[-362.16656494 -391.24359131]
[-349.32104492 -398.99484253]
[-336.11337280 -406.11148071]
[-322.57482910 -412.57662964]
[-308.73760986 -418.37496948]
[-294.63449097 -423.49270630]
[-280.29891968 -427.91775513]
[-265.76489258 -431.63955688]
[-251.06689453 -434.64935303]
[-236.23979187 -436.93994141]
[-221.31875610 -438.50592041]
[-206.33917236 -439.34356689]
[-191.33657837 -439.45089722]
[-176.34654236 -438.82766724]
[-161.40461731 -437.47537231]
[-146.54626465 -435.39715576]
[-131.80671692 -432.59799194]
[-117.22093201 -429.08453369]
[-102.82350159 -424.86508179]
[-88.64859009 -419.94964600]
[-74.72980499 -414.34991455]
[-61.10017014 -408.07913208]
[-47.79200745 -401.15219116]
[-34.83687973 -393.58554077]
[-22.26552200 -385.39709473]
[-10.10775089 -376.60629272]
[1.60759950 -367.23397827]
[12.85273933 -357.30239868]
[23.60099792 -346.83508301]
[33.82688141 -335.85687256]
[43.50613022 -324.39379883]
[52.61579514 -312.47308350]
[61.13425827 -300.12295532]
[69.04132843 -287.37274170]
[76.31823730 -274.25268555]
[82.94773102 -260.79388428]
[88.91408539 -247.02825928]
[94.20314789 -232.98847961]
[98.80236816 -218.70783997]
[102.70085144 -204.22019958]
[105.88933563 -189.55995178]
[108.36026764 -174.76184082]
[110.10778046 -159.86096191]
[111.12773132 -144.89268494]
[111.41770935 -129.89250183]
[110.97701263 -114.89598846]
[109.80669403 -99.93872070]
[107.90953064 -85.05616760]
[105.29001617 -70.28363037]
[101.95436859 -55.65615082]
[97.91050720 -41.20842743]
[93.16800690 -26.97472191]
[87.73812866 -12.98879910]
[81.63374329 0.71616900]
[74.86933899 14.10767555]
[67.46095276 27.15395737]
[59.42615891 39.82406998]
[50.78401566 52.08795929]
[62.61028671 61.31505966]
[74.43655396 70.54216003]
[86.26282501 79.76925659]
[98.08909607 88.99635315]
[109.98372650 98.13515472]
[121.94606781 107.18515778]
[133.90840149 116.23515320]
[145.87074280 125.28515625]
[156.00830078 114.21427155]
[167.13801575 104.14134979]
[179.16207886 95.15489960]
[191.97482300 87.33390045]
[205.46365356 80.74708557]
[219.51000977 75.45233917]
[233.99044800 71.49619293]
[248.77774048 68.91342163]
[263.74191284 67.72671509]
[278.75143433 67.94651031]
[293.67443848 69.57086182]
[308.37976074 72.58551025]
[322.73815918 76.96395111]
[336.62347412 82.66771698]
[349.91363525 89.64666748]
[362.49188232 97.83947754]
[374.24765015 107.17414856]
[385.07766724 117.56864166]
[394.88671875 128.93161011]
[403.58859253 141.16319275]
[411.10687256 154.15588379]
[417.37542725 167.79553223]
[422.33917236 181.96223450]
[425.95449829 196.53150940]
[428.18966675 211.37532043]
[429.02496338 226.36320496]
[428.45312500 241.36344910]
[426.47909546 256.24423218]
[423.12030029 270.87478638]
[418.40621948 285.12652588]
[412.37826538 298.87417603]
[405.08944702 311.99697876]
[396.60379028 324.37954712]
[386.99591064 335.91311646]
[376.35018921 346.49627686]
[364.76022339 356.03604126]
[352.32788086 364.44857788]
[339.16238403 371.65994263]
[325.37942505 377.60678101]
[311.10015869 382.23681641]
[296.45007324 385.50936890]
[281.55792236 387.39566040]
[266.55456543 387.87911987]
[251.57186890 386.95553589]
[236.74148560 384.63296509]
[222.19375610 380.93182373]
[208.05654907 375.88470459]
[194.45408630 369.53588867]
[181.50590515 361.94119263]
[169.32580566 353.16738892]
[158.02082825 343.29156494]
[147.69032288 332.40051270]
[138.42507935 320.58993530]
[130.30653381 307.96362305]
[123.40600586 294.63256836]
[117.78415680 280.71389771]
[113.49038696 266.32995605]
[110.56243896 251.60711670]
[109.02603912 236.67480469]
[108.89469147 221.66423035]
[110.16954041 206.70732117]
[112.83939362 191.93551636]
[116.88079071 177.47862244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[4 145]
[5 144]
[7 143]
[8 142]
[9 141]
[10 140]
[11 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
