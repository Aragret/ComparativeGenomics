%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[-38.83384705 316.48583984]
[-33.01135635 330.32431030]
[-28.64262962 344.68807983]
[-25.77397919 359.42492676]
[-24.43581390 374.37863159]
[-24.64231873 389.39068604]
[-26.39130402 404.30191040]
[-29.66423225 418.95428467]
[-34.42640305 433.19247437]
[-40.62734222 446.86553955]
[-48.20130920 459.82852173]
[-57.06801987 471.94403076]
[-67.13348389 483.08361816]
[-78.29099274 493.12921143]
[-90.42227936 501.97430420]
[-103.39875031 509.52517700]
[-117.08283234 515.70172119]
[-131.32946777 520.43853760]
[-145.98765564 523.68530273]
[-160.90199280 525.40771484]
[-175.91436768 525.58746338]
[-190.86567688 524.22265625]
[-205.59739685 521.32775879]
[-219.95336914 516.93347168]
[-233.78141785 511.08630371]
[-246.93495178 503.84832764]
[-259.27453613 495.29620361]
[-270.66937256 485.52066040]
[-280.99868774 474.62524414]
[-290.15295410 462.72552490]
[-298.03512573 449.94760132]
[-304.56167603 436.42694092]
[-309.66339111 422.30685425]
[-313.28619385 407.73706055]
[-315.39172363 392.87197876]
[-315.95761108 377.86917114]
[-314.97787476 362.88772583]
[-312.46289062 348.08639526]
[-308.43933105 333.62213135]
[-302.94985962 319.64825439]
[-296.05264282 306.31286621]
[-287.82080078 293.75735474]
[-278.34161377 282.11480713]
[-267.71554565 271.50863647]
[-256.05526733 262.05126953]
[-243.48432922 253.84300232]
[-230.13604736 246.97079468]
[-216.15188599 241.50752258]
[-201.68009949 237.51109314]
[-186.87409973 235.02386475]
[-171.89082336 234.07221985]
[-156.88911438 234.66622925]
[-142.02799988 236.79960632]
[-127.46501923 240.44972229]
[-113.35453033 245.57791138]
[-99.84613037 252.12979126]
[-87.08300781 260.03588867]
[-75.20045471 269.21246338]
[-64.32444000 279.56216431]
[-52.92198181 269.81619263]
[-41.51951981 260.07022095]
[-30.11705589 250.32424927]
[-18.71459389 240.57829285]
[-14.06694126 226.42736816]
[1.45061910 223.34259033]
[12.55785275 213.26144409]
[23.36001015 202.85408020]
[34.16216660 192.44670105]
[37.95930099 178.04423523]
[53.26573944 174.04130554]
[62.04634094 161.87985229]
[68.52584076 148.35150146]
[75.00533295 134.82315063]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[95.73668671 61.54011154]
[91.27144623 48.17650986]
[92.23394012 34.16297913]
[98.44590759 21.61299706]
[108.93988800 12.40671062]
[122.10973358 7.90925360]
[135.95640564 8.76840496]
[142.63659668 -4.66197109]
[149.31678772 -18.09234810]
[147.74894714 -36.43964767]
[162.74085999 -45.56156158]
[169.22035217 -59.08990860]
[175.59895325 -72.66611481]
[181.87631226 -86.28942871]
[188.15368652 -99.91275024]
[194.43104553 -113.53606415]
[200.70840454 -127.15937805]
[199.45646667 -142.93096924]
[211.80989075 -151.25216675]
[210.55795288 -167.02375793]
[222.91137695 -175.34495544]
[210.32337952 -183.55227661]
[199.06459045 -193.50502014]
[189.37496948 -204.99107361]
[181.46107483 -217.76559448]
[175.49159241 -231.55627441]
[171.59375000 -246.06918335]
[169.85063171 -260.99499512]
[170.29940796 -276.01553345]
[172.93048096 -290.81063843]
[177.68780518 -305.06494141]
[184.46995544 -318.47467041]
[193.13237000 -330.75393677]
[203.49041748 -341.64102173]
[215.32331848 -350.90386963]
[228.37884521 -358.34503174]
[242.37872314 -363.80593872]
[257.02453613 -367.17013550]
[272.00411987 -368.36596680]
[286.99816895 -367.36788940]
[301.68710327 -364.19723511]
[315.75781250 -358.92153931]
[328.91040039 -351.65325928]
[340.86447144 -342.54733276]
[351.36526489 -331.79788208]
[360.18896484 -319.63397217]
[367.14746094 -306.31491089]
[372.09243774 -292.12460327]
[374.91848755 -277.36550903]
[375.56539917 -262.35220337]
[374.01937866 -247.40469360]
[370.31335449 -232.84161377]
[364.52636719 -218.97335815]
[356.78170776 -206.09553528]
[347.24450684 -194.48265076]
[336.11801147 -184.38220215]
[323.63937378 -176.00950623]
[310.07464600 -169.54301453]
[295.71289062 -165.12055969]
[280.86026001 -162.83642578]
[265.83334351 -162.73927307]
[250.95242310 -164.83119202]
[236.53469849 -169.06758118]
[238.23562622 -154.27041626]
[225.43321228 -144.97480774]
[227.13414001 -130.17764282]
[214.33171082 -120.88201904]
[208.05435181 -107.25870514]
[201.77699280 -93.63539124]
[195.49963379 -80.01206970]
[189.22227478 -66.38875580]
[189.27806091 -58.99831009]
[182.74870300 -52.61041260]
[176.26921082 -39.08206558]
[179.99162292 -27.57249832]
[174.70416260 -16.24878311]
[162.74716187 -11.41215229]
[156.06697083 2.01822352]
[149.38677979 15.44859982]
[159.42958069 27.87810135]
[163.05978394 43.49973679]
[159.50114441 59.19749451]
[149.41662598 71.81743622]
[134.78553772 78.80133057]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.53367615 141.30264282]
[82.05418396 154.83099365]
[75.57468414 168.35934448]
[87.38407135 159.11064148]
[101.04337311 152.91197205]
[115.78009033 150.11389160]
[130.76078796 150.87464905]
[145.13822937 155.15121460]
[158.09931946 162.70173645]
[168.91102600 173.09919739]
[176.96189880 185.75555420]
[181.79663086 199.95503235]
[183.14178467 214.89460754]
[180.92127991 229.72933960]
[175.26072693 243.62026978]
[166.48022461 255.78179932]
[155.07637024 265.52612305]
[141.69409180 272.30218506]
[127.09024811 275.72671509]
[112.09072876 275.60607910]
[97.54384613 271.94711304]
[84.27229309 264.95669556]
[73.02664185 255.03019714]
[64.44288635 242.72901917]
[59.00647736 228.74882507]
[57.02487183 213.88029480]
[58.61014175 198.96430969]
[63.67311096 184.84346008]
[59.10333633 199.99032593]
[44.56953812 203.24885559]
[33.76738358 213.65623474]
[22.96522522 224.06359863]
[21.91287041 228.27626038]
[19.78839302 231.60058594]
[17.00270844 233.80860901]
[13.99855804 234.82923889]
[11.19658470 234.74505615]
[5.73335266 249.59306335]
[-8.96862793 251.98075867]
[-20.37108994 261.72671509]
[-31.77355385 271.47268677]
[-43.17601395 281.21865845]
[-54.57847977 290.96463013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 210]
[60 209]
[61 208]
[62 207]
[63 206]
[65 204]
[66 199]
[67 198]
[68 197]
[70 195]
[71 170]
[72 169]
[73 168]
[74 167]
[75 166]
[77 164]
[78 163]
[85 157]
[86 156]
[87 155]
[89 152]
[90 151]
[91 149]
[92 148]
[93 147]
[94 146]
[95 145]
[97 143]
[99 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
