%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[-4.26566935 915.99096680]
[-19.21199608 917.29022217]
[-34.20237350 917.89776611]
[-49.20481873 917.81237793]
[-64.18730927 917.03417969]
[-79.11787415 915.56488037]
[-93.96465302 913.40759277]
[-108.69596100 910.56695557]
[-123.28035736 907.04901123]
[-137.68672180 902.86126709]
[-151.88430786 898.01263428]
[-165.84280396 892.51348877]
[-179.53245544 886.37554932]
[-192.92402649 879.61193848]
[-205.98893738 872.23706055]
[-218.69929504 864.26666260]
[-231.02801514 855.71777344]
[-242.94874573 846.60858154]
[-254.43606567 836.95861816]
[-265.46545410 826.78845215]
[-276.01339722 816.11968994]
[-286.05734253 804.97521973]
[-295.57589722 793.37878418]
[-304.54870605 781.35504150]
[-312.95666504 768.92980957]
[-320.78179932 756.12951660]
[-328.00744629 742.98144531]
[-334.61813354 729.51373291]
[-340.59979248 715.75512695]
[-345.93963623 701.73486328]
[-350.62628174 687.48303223]
[-354.64974976 673.02990723]
[-358.00140381 658.40637207]
[-360.67410278 643.64367676]
[-362.66217041 628.77331543]
[-363.96136475 613.82696533]
[-364.56887817 598.83660889]
[-364.48345947 583.83416748]
[-363.70526123 568.85168457]
[-362.23593140 553.92108154]
[-360.07861328 539.07434082]
[-357.23794556 524.34301758]
[-353.71997070 509.75863647]
[-349.53216553 495.35229492]
[-344.68350220 481.15472412]
[-339.18432617 467.19622803]
[-333.04638672 453.50659180]
[-326.28271484 440.11505127]
[-318.90783691 427.05014038]
[-310.93740845 414.33978271]
[-302.38848877 402.01110840]
[-293.27929688 390.09039307]
[-283.62930298 378.60308838]
[-273.45907593 367.57369995]
[-262.79031372 357.02581787]
[-251.64582825 346.98187256]
[-240.04934692 337.46334839]
[-228.02563477 328.49053955]
[-215.60037231 320.08261108]
[-202.80004883 312.25750732]
[-189.65199280 305.03189087]
[-176.18426514 298.42123413]
[-162.42559814 292.43960571]
[-148.40536499 287.09979248]
[-134.15348816 282.41317749]
[-119.70036316 278.38973999]
[-105.07685089 275.03811646]
[-90.31414795 272.36544800]
[-75.44376373 270.37741089]
[-60.49743271 269.07824707]
[-45.50704956 268.47076416]
[-30.50460625 268.55621338]
[-15.52211857 269.33444214]
[-0.59155875 270.80380249]
[14.25520992 272.96115112]
[28.98650360 275.80184937]
[43.57088470 279.31985474]
[47.75789642 264.91607666]
[51.94490814 250.51229858]
[56.13191986 236.10852051]
[60.31892776 221.70472717]
[64.50594330 207.30094910]
[68.69295502 192.89717102]
[72.87996674 178.49339294]
[77.06697083 164.08959961]
[81.25398254 149.68582153]
[84.90207672 135.13619995]
[88.00617981 120.46089935]
[91.11029053 105.78559875]
[93.55602264 90.98632812]
[95.33848572 76.09260559]
[97.12095642 61.19889069]
[98.90341949 46.30517197]
[100.68588257 31.41145706]
[102.02411652 16.47127151]
[102.91693115 1.49786568]
[103.80975342 -13.47554016]
[104.70256805 -28.44894600]
[90.61212921 -33.95482635]
[78.91401672 -43.54698181]
[70.75430298 -56.28567123]
[66.93238831 -70.92288971]
[67.82270050 -86.02462769]
[73.33802032 -100.11137390]
[82.93801117 -111.80305481]
[95.68216705 -119.95423126]
[110.32193756 -123.76634216]
[125.42308044 -122.86590576]
[139.50613403 -117.34114838]
[151.19137573 -107.73332214]
[159.33401489 -94.98371124]
[163.13630676 -80.34138489]
[162.22575378 -65.24085236]
[156.69155884 -51.16151047]
[147.07591248 -39.48270798]
[134.32084656 -31.34861565]
[119.67597198 -27.55612946]
[118.78315735 -12.58272457]
[117.89034271 2.39068151]
[116.99752808 17.36408806]
[118.75519562 19.54783249]
[119.75375366 22.55939102]
[119.67357635 26.11311913]
[118.30422974 29.81304169]
[115.57960510 33.19392395]
[113.79713440 48.08763885]
[112.01467133 62.98135757]
[110.23220062 77.87507629]
[108.44973755 92.76879120]
[120.88024139 84.37339783]
[135.63197327 87.09114838]
[144.25448608 99.36519623]
[141.80841064 114.16441345]
[129.69496155 123.01112366]
[114.85327911 120.83753967]
[105.78559875 108.88970947]
[102.68148804 123.56501007]
[99.57737732 138.24031067]
[113.38143921 132.37107849]
[126.64882660 139.36938477]
[129.59931946 154.07633972]
[120.05792999 165.65052795]
[105.05819702 165.55987549]
[95.65776825 153.87283325]
[91.47075653 168.27661133]
[87.28374481 182.68040466]
[83.09673309 197.08418274]
[78.90972137 211.48796082]
[74.72270966 225.89173889]
[70.53569794 240.29553223]
[66.34868622 254.69931030]
[62.16167831 269.10308838]
[57.97466660 283.50686646]
[72.17227173 288.35543823]
[86.13080597 293.85452271]
[99.82047272 299.99240112]
[113.21206665 306.75598145]
[126.27700806 314.13079834]
[138.98741150 322.10113525]
[151.31614685 330.64999390]
[163.23692322 339.75909424]
[174.72428894 349.40902710]
[185.75372314 359.57916260]
[196.30169678 370.24786377]
[206.34570312 381.39230347]
[215.86428833 392.98873901]
[224.83717346 405.01235962]
[233.24517822 417.43759155]
[241.07037354 430.23785400]
[248.29605103 443.38586426]
[254.90679932 456.85354614]
[260.88851929 470.61218262]
[266.22842407 484.63238525]
[270.91513062 498.88424683]
[274.93862915 513.33734131]
[278.29034424 527.96081543]
[280.96313477 542.72351074]
[282.95126343 557.59387207]
[284.25051880 572.54022217]
[284.85809326 587.53057861]
[284.77273560 602.53302002]
[283.99456787 617.51550293]
[282.52532959 632.44610596]
[280.36807251 647.29284668]
[277.52746582 662.02416992]
[274.00955200 676.60858154]
[269.82180786 691.01495361]
[264.97320557 705.21258545]
[259.47409058 719.17108154]
[253.33618164 732.86071777]
[246.57258606 746.25231934]
[239.19773865 759.31726074]
[231.22737122 772.02764893]
[222.67851257 784.35632324]
[213.56938171 796.27709961]
[203.91941833 807.76446533]
[193.74923706 818.79388428]
[183.08053589 829.34179688]
[171.93606567 839.38580322]
[160.33963013 848.90435791]
[148.31596375 857.87719727]
[135.89073181 866.28521729]
[123.09043884 874.11035156]
[109.94241333 881.33599854]
[96.47471619 887.94671631]
[82.71607971 893.92840576]
[68.69586945 899.26831055]
[54.44400406 903.95495605]
[39.99089813 907.97845459]
[25.36739731 911.33013916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 138]
[88 137]
[89 136]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
