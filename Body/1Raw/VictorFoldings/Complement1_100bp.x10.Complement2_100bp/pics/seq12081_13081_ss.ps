%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[115.55427551 296.70605469]
[112.99515533 281.91986084]
[111.46224976 266.99234009]
[110.96286774 251.99462891]
[111.49939728 236.99821472]
[113.06926727 222.07452393]
[115.66500092 207.29472351]
[119.27423096 192.72920227]
[123.87976074 178.44740295]
[129.45964050 164.51737976]
[135.98727417 151.00550842]
[143.43154907 137.97618103]
[130.95175171 129.65423584]
[118.47196198 121.33229828]
[105.99217224 113.01035309]
[92.05313110 111.91732788]
[85.68588257 99.46944427]
[73.20609283 91.14749908]
[60.72629547 82.82555389]
[61.06156921 97.82180786]
[49.64453888 107.55070496]
[34.89141846 104.84046173]
[27.67765617 91.68897247]
[33.32097244 77.79102325]
[47.65968704 73.39142609]
[35.83341599 64.16432953]
[24.00714684 54.93722916]
[12.18087769 45.71013260]
[2.18880391 56.90496063]
[-8.52129841 67.41492462]
[-19.90259743 77.19407654]
[-31.90532303 86.19964600]
[-44.47699356 94.39225006]
[-57.56263351 101.73607635]
[-71.10501862 108.19899750]
[-85.04494476 113.75276947]
[-99.32143402 118.37309265]
[-113.87207794 122.03977203]
[-128.63323975 124.73676300]
[-143.54037476 126.45228577]
[-158.52830505 127.17883301]
[-173.53147888 126.91322327]
[-188.48428345 125.65662384]
[-203.32136536 123.41452789]
[-217.97781372 120.19673920]
[-232.38954163 116.01733398]
[-246.49356079 110.89457703]
[-260.22814941 104.85087585]
[-273.53329468 97.91265869]
[-286.35079956 90.11026001]
[-298.62460327 81.47779846]
[-310.30105591 72.05303192]
[-321.32910156 61.87715912]
[-331.66046143 50.99468613]
[-341.25003052 39.45319748]
[-350.05584717 27.30315971]
[-358.03939819 14.59770393]
[-365.16577148 1.39238679]
[-371.40383911 -12.25504684]
[-376.72625732 -26.28491974]
[-381.10983276 -40.63588333]
[-384.53533936 -55.24518204]
[-386.98779297 -70.04893494]
[-388.45651245 -84.98240662]
[-388.93505859 -99.98029327]
[-388.42135620 -114.97702026]
[-386.91760254 -129.90699768]
[-384.43038940 -144.70495605]
[-380.97064209 -159.30618286]
[-376.55343628 -173.64682007]
[-371.19808960 -187.66416931]
[-364.92803955 -201.29693604]
[-357.77069092 -214.48550415]
[-349.75738525 -227.17219543]
[-340.92309570 -239.30154419]
[-331.30648804 -250.82051086]
[-320.94958496 -261.67871094]
[-309.89773560 -271.82867432]
[-298.19918823 -281.22604370]
[-285.90518188 -289.82968140]
[-273.06939697 -297.60198975]
[-259.74801636 -304.50897217]
[-245.99928284 -310.52044678]
[-231.88330078 -315.61010742]
[-217.46179199 -319.75570679]
[-202.79783630 -322.93908691]
[-187.95555115 -325.14639282]
[-172.99981689 -326.36788940]
[-157.99606323 -326.59829712]
[-143.00988770 -325.83660889]
[-128.10682678 -324.08612061]
[-113.35202789 -321.35452271]
[-98.81002808 -317.65371704]
[-84.54441071 -312.99990845]
[-70.61755371 -307.41345215]
[-57.09036255 -300.91879272]
[-44.02198792 -293.54428101]
[-31.46957016 -285.32220459]
[-19.48800087 -276.28851318]
[-8.12967300 -266.48269653]
[2.55574560 -255.94763184]
[12.52153111 -244.72938538]
[21.72410393 -232.87702942]
[30.12322617 -220.44238281]
[37.68216705 -207.47981262]
[44.36787415 -194.04602051]
[50.15111160 -180.19972229]
[55.00659180 -166.00148010]
[58.91308594 -151.51338196]
[61.85350418 -136.79878235]
[63.81499481 -121.92201233]
[64.78897858 -106.94812775]
[64.77119446 -91.94261932]
[63.76172638 -76.97109222]
[61.76498032 -62.09901047]
[58.78969193 -47.39141464]
[54.84887314 -32.91261673]
[49.95975494 -18.72592354]
[44.14371490 -4.89337587]
[37.42618942 8.52454185]
[29.83654404 21.46915627]
[21.40797615 33.88386154]
[33.23424530 43.11095810]
[45.06051636 52.33805847]
[56.88678360 61.56515503]
[69.04824066 70.34575653]
[81.52803802 78.66770172]
[94.00782776 86.98964691]
[107.94686890 88.08267212]
[114.31411743 100.53055573]
[126.79390717 108.85250092]
[139.27369690 117.17444611]
[151.75349426 125.49639130]
[160.92012024 113.61558533]
[170.88458252 102.39550018]
[181.59939575 91.88961792]
[193.01348877 82.14799500]
[205.07246399 73.21706390]
[217.71887207 65.13937378]
[230.89244080 57.95343018]
[244.53038025 51.69347000]
[258.56771851 46.38932419]
[272.93756104 42.06627655]
[287.57138062 38.74492645]
[302.39950562 36.44109726]
[317.35122681 35.16577148]
[332.35531616 34.92502213]
[347.34027100 35.72000504]
[362.23468018 37.54692459]
[376.96752930 40.39707947]
[391.46865845 44.25688553]
[405.66894531 49.10794449]
[419.50070190 54.92714310]
[432.89801025 61.68675232]
[445.79705811 69.35455322]
[458.13638306 77.89400482]
[469.85711670 87.26441956]
[480.90347290 97.42114258]
[491.22277832 108.31575775]
[500.76583862 119.89636230]
[509.48721313 132.10777283]
[517.34533691 144.89176941]
[524.30273438 158.18745422]
[530.32623291 171.93147278]
[535.38720703 186.05830383]
[539.46148682 200.50062561]
[542.52966309 215.18963623]
[544.57708740 230.05532837]
[545.59405518 245.02685547]
[545.57568359 260.03286743]
[544.52203369 275.00186157]
[542.43823242 289.86248779]
[539.33410645 304.54391479]
[535.22442627 318.97622681]
[530.12890625 333.09063721]
[524.07171631 346.81985474]
[517.08178711 360.09844971]
[509.19241333 372.86318970]
[500.44113159 385.05319214]
[490.86975098 396.61038208]
[480.52380371 407.47970581]
[469.45260620 417.60934448]
[457.70895386 426.95101929]
[445.34875488 435.46023560]
[432.43096924 443.09640503]
[419.01712036 449.82318115]
[405.17117310 455.60848999]
[390.95904541 460.42477417]
[376.44851685 464.24905396]
[361.70870972 467.06311035]
[346.80987549 468.85354614]
[331.82302856 469.61181641]
[316.81958008 469.33432007]
[301.87103271 468.02239990]
[287.04858398 465.68225098]
[272.42291260 462.32507324]
[258.06372070 457.96685791]
[244.03942871 452.62832642]
[230.41685486 446.33499146]
[217.26092529 439.11682129]
[204.63433838 431.00817871]
[192.59725952 422.04772949]
[181.20706177 412.27819824]
[170.51802063 401.74609375]
[160.58106995 390.50164795]
[151.44355774 378.59841919]
[143.14904785 366.09313965]
[135.73706055 353.04544067]
[129.24291992 339.51742554]
[123.69756317 325.57363892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 133]
[13 132]
[14 131]
[15 130]
[17 128]
[18 127]
[19 126]
[25 125]
[26 124]
[27 123]
[28 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
