%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[74.69328308 776.40057373]
[59.69766998 775.90997314]
[44.75001144 774.61517334]
[29.89340210 772.51989746]
[15.17068005 769.63012695]
[0.62429374 765.95434570]
[-13.70381546 761.50299072]
[-27.77233696 756.28900146]
[-41.54070663 750.32739258]
[-54.96922302 743.63525391]
[-68.01917267 736.23205566]
[-80.65293121 728.13903809]
[-92.83406830 719.37951660]
[-104.52745819 709.97875977]
[-115.69939423 699.96392822]
[-126.31765747 689.36389160]
[-136.35163879 678.20910645]
[-145.77239990 666.53186035]
[-154.55279541 654.36578369]
[-162.66748047 641.74591064]
[-170.09307861 628.70867920]
[-176.80818176 615.29168701]
[-182.79341125 601.53356934]
[-188.03153992 587.47399902]
[-192.50743103 573.15350342]
[-196.20819092 558.61346436]
[-199.12315369 543.89575195]
[-201.24392700 529.04272461]
[-202.56437683 514.09729004]
[-203.08068848 499.10256958]
[-202.79139709 484.10171509]
[-201.69732666 469.13803101]
[-199.80163574 454.25463867]
[-197.10978699 439.49444580]
[-193.62953186 424.90005493]
[-189.37091064 410.51348877]
[-184.34622192 396.37625122]
[-178.56991577 382.52911377]
[-172.05868530 369.01196289]
[-164.83126831 355.86383057]
[-156.90853882 343.12258911]
[-148.31330872 330.82498169]
[-139.07037354 319.00646973]
[-129.20639038 307.70111084]
[-118.74979401 296.94152832]
[-107.73073578 286.75872803]
[-96.18097687 277.18209839]
[-84.13382721 268.23919678]
[-71.62402344 259.95587158]
[-58.68762970 252.35594177]
[-45.36194611 245.46136475]
[-31.68539429 239.29200745]
[-17.69740868 233.86564636]
[-3.43831849 229.19795227]
[11.05076122 225.30236816]
[25.72805595 222.19010925]
[40.55124664 219.87019348]
[55.47759247 218.34925842]
[70.46405792 217.63172913]
[85.46743774 217.71965027]
[86.36025238 202.74624634]
[87.25306702 187.77284241]
[80.28702545 174.60760498]
[88.83200836 161.29241943]
[89.72482300 146.31901550]
[90.61763763 131.34561157]
[76.06187439 122.30565643]
[68.07081604 107.14866638]
[68.83591461 90.03125763]
[78.14734650 75.64763641]
[93.45157623 67.94232941]
[86.12858582 53.91790771]
[94.24139404 41.42664337]
[94.68800354 26.43329430]
[95.13460541 11.43994522]
[95.58121490 -3.55340481]
[96.02781677 -18.54675484]
[96.47442627 -33.54010391]
[83.04333496 -38.53085327]
[71.82696533 -47.41231537]
[63.91369247 -59.30576706]
[60.06616592 -73.04105377]
[60.64779663 -87.27172089]
[65.58847809 -100.60698700]
[74.39274597 -111.74767303]
[86.18941498 -119.61277771]
[99.81777954 -123.44435883]
[100.48756409 -138.42939758]
[101.15735626 -153.41442871]
[101.82714081 -168.39947510]
[102.49692535 -183.38450623]
[103.16670990 -198.36955261]
[88.57088470 -202.05014038]
[75.01487732 -208.59381104]
[63.05381012 -217.73262024]
[53.17747498 -229.09231567]
[45.79030609 -242.20774841]
[41.19479370 -256.54183960]
[39.57913208 -271.50762939]
[41.00947189 -286.49224854]
[45.42724991 -300.88211060]
[52.65155411 -314.08795166]
[62.38655853 -325.56900024]
[74.23361969 -334.85513306]
[87.70761108 -341.56607056]
[102.25676727 -345.42697144]
[117.28533173 -346.27981567]
[132.17787170 -344.08959961]
[146.32456970 -338.94604492]
[159.14610291 -331.05981445]
[170.11746216 -320.75378418]
[178.78935242 -308.44998169]
[184.80668640 -294.65228271]
[187.92303467 -279.92565918]
[188.01081848 -264.87319946]
[185.06642151 -250.11122131]
[179.21040344 -236.24429321]
[170.68258667 -223.84020996]
[159.83216858 -213.40692139]
[147.10348511 -205.37167358]
[133.01773071 -200.06350708]
[118.15174866 -197.69976807]
[117.48196411 -182.71472168]
[116.81217957 -167.72969055]
[116.14239502 -152.74464417]
[115.47260284 -137.75961304]
[114.80281830 -122.77457428]
[129.41758728 -116.91813660]
[141.16345215 -106.39342499]
[148.60800171 -92.45926666]
[150.83494568 -76.79173279]
[147.55680847 -61.28255463]
[139.15196228 -47.81069183]
[126.62104034 -38.01471329]
[111.46777344 -33.09349823]
[111.02117157 -18.10014915]
[110.57456207 -3.10679889]
[110.12795258 11.88655090]
[109.68135071 26.87990189]
[109.23474121 41.87325287]
[116.58967590 54.82524872]
[108.44492340 68.38893127]
[119.75009918 73.91342163]
[128.13444519 83.29583740]
[132.35800171 95.14862061]
[131.79615784 107.71887207]
[126.53198242 119.14759064]
[117.34401703 127.74457550]
[105.59104919 132.23843384]
[104.69823456 147.21183777]
[103.80541229 162.18524170]
[110.70759583 176.42147827]
[102.22647095 188.66564941]
[101.33365631 203.63905334]
[100.44084167 218.61247253]
[115.34835815 220.30802917]
[130.14337158 222.80134583]
[144.78323364 226.08520508]
[159.22570801 230.15014648]
[173.42916870 234.98446655]
[187.35267639 240.57420349]
[200.95606995 246.90325928]
[214.20011902 253.95336914]
[227.04664612 261.70419312]
[239.45863342 270.13345337]
[251.40025330 279.21676636]
[262.83709717 288.92794800]
[273.73620605 299.23904419]
[284.06613159 310.12033081]
[293.79705811 321.54037476]
[302.90100098 333.46627808]
[311.35168457 345.86367798]
[319.12469482 358.69680786]
[326.19769287 371.92864990]
[332.55023193 385.52108765]
[338.16403198 399.43490601]
[343.02288818 413.63000488]
[347.11276245 428.06542969]
[350.42193604 442.69958496]
[352.94079590 457.49026489]
[354.66210938 472.39483643]
[355.58093262 487.37030029]
[355.69458008 502.37350464]
[355.00274658 517.36120605]
[353.50744629 532.29010010]
[351.21292114 547.11724854]
[348.12585449 561.79986572]
[344.25512695 576.29559326]
[339.61187744 590.56268311]
[334.20953369 604.55993652]
[328.06362915 618.24707031]
[321.19192505 631.58453369]
[313.61419678 644.53399658]
[305.35232544 657.05798340]
[296.43011475 669.12042236]
[286.87329102 680.68658447]
[276.70938110 691.72308350]
[265.96777344 702.19812012]
[254.67935181 712.08148193]
[242.87669373 721.34466553]
[230.59385681 729.96099854]
[217.86621094 737.90557861]
[204.73048401 745.15551758]
[191.22454834 751.68994141]
[177.38732910 757.48992920]
[163.25872803 762.53887939]
[148.87948608 766.82220459]
[134.29106140 770.32745361]
[119.53552246 773.04461670]
[104.65540314 774.96582031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 155]
[61 154]
[62 153]
[64 151]
[65 150]
[66 149]
[71 142]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
