%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[112.82655334 522.21331787]
[99.09299469 528.35369873]
[84.46493530 531.86572266]
[69.44058990 532.62982178]
[54.53170013 530.61999512]
[40.24604416 525.90460205]
[27.07018852 518.64434814]
[15.45290184 509.08642578]
[5.78986168 497.55645752]
[-1.58981228 484.44711304]
[-6.43477058 470.20489502]
[-8.57999516 455.31488037]
[-7.95242214 440.28421021]
[-4.57342482 425.62484741]
[1.44190848 411.83605957]
[9.88869858 399.38751221]
[20.47924995 388.70318604]
[32.85285187 380.14697266]
[46.58806610 374.01031494]
[61.21707535 370.50222778]
[76.24162292 369.74218750]
[78.24563599 354.87664795]
[80.24964905 340.01110840]
[82.25366211 325.14559937]
[76.28610229 311.49871826]
[85.79775238 298.85595703]
[87.80176544 283.99044800]
[89.02873993 269.04071045]
[81.67381287 256.08871460]
[89.81856537 242.52500916]
[90.26516724 227.53166199]
[90.71177673 212.53831482]
[91.04675293 197.54205322]
[91.27008057 182.54371643]
[91.49340820 167.54537964]
[91.71673584 152.54704285]
[91.94006348 137.54870605]
[92.16339111 122.55036926]
[80.44224548 113.69036102]
[76.12940216 99.64456177]
[80.85852814 85.73340607]
[92.83827209 77.22630310]
[93.06159973 62.22796631]
[93.28492737 47.22962570]
[86.17799377 60.43915176]
[75.53545380 71.00968933]
[62.27799606 78.02679443]
[47.55251312 80.88340759]
[32.63291550 79.33240509]
[18.80989647 73.50796509]
[7.27928257 63.91395569]
[-0.96141106 51.38036346]
[-5.19928217 36.99146271]
[-5.06771231 21.99203873]
[-0.57808405 7.67969322]
[7.88120508 -4.70741367]
[19.57834244 -14.09767437]
[33.50140762 -19.67873573]
[48.44591522 -20.96778107]
[63.11902237 -17.85329437]
[76.25135040 -10.60471153]
[86.70682526 0.15089397]
[93.58094025 13.48305416]
[96.27890778 28.23488808]
[100.67990112 13.89504147]
[105.08090210 -0.44480529]
[109.48190308 -14.78465271]
[97.12631989 -6.27938128]
[82.13759613 -5.69782543]
[69.16014862 -13.22018623]
[62.21518707 -26.51557732]
[63.45467377 -41.46427917]
[72.49454498 -53.43427277]
[86.53369904 -58.71652603]
[101.22194672 -55.67427063]
[112.00798035 -45.25019073]
[115.54961395 -30.67403793]
[121.82698059 -44.29735565]
[128.10433960 -57.92066956]
[134.38169861 -71.54398346]
[140.65905762 -85.16730499]
[146.93641663 -98.79061890]
[153.21377563 -112.41393280]
[151.96183777 -128.18553162]
[164.31527710 -136.50671387]
[170.59263611 -150.13003540]
[176.46159363 -163.93421936]
[181.91694641 -177.90701294]
[187.37229919 -191.87980652]
[187.57826233 -201.01191711]
[193.01429749 -206.01904297]
[198.67709351 -219.90905762]
[204.33987427 -233.79908752]
[210.00265503 -247.68911743]
[215.66545105 -261.57913208]
[221.32823181 -275.46917725]
[226.99102783 -289.35919189]
[232.65380859 -303.24923706]
[238.31658936 -317.13925171]
[225.45524597 -324.91949463]
[213.96942139 -334.61599731]
[204.14196777 -345.98999023]
[196.21490479 -358.76138306]
[190.38343811 -372.61563110]
[186.79115295 -387.21160889]
[185.52653503 -402.18981934]
[186.62072754 -417.18145752]
[190.04676819 -431.81732178]
[195.72030640 -445.73699951]
[203.50161743 -458.59771729]
[213.19908142 -470.08273315]
[224.57388306 -479.90924072]
[237.34591675 -487.83526611]
[251.20065308 -493.66558838]
[265.79690552 -497.25668335]
[280.77523804 -498.52005005]
[295.76678467 -497.42462158]
[310.40237427 -493.99737549]
[324.32159424 -488.32269287]
[337.18164062 -480.54031372]
[348.66586304 -470.84191895]
[358.49145508 -459.46627808]
[366.41641235 -446.69360352]
[372.24560547 -432.83837891]
[375.83544922 -418.24182129]
[377.09759521 -403.26339722]
[376.00094604 -388.27194214]
[372.57247925 -373.63662720]
[366.89663696 -359.71789551]
[359.11322021 -346.85848999]
[349.41384888 -335.37506104]
[338.03744507 -325.55041504]
[325.26409912 -317.62652588]
[311.40838623 -311.79846191]
[296.81155396 -308.20980835]
[281.83300781 -306.94888306]
[266.84164429 -308.04678345]
[252.20661926 -311.47647095]
[246.54383850 -297.58642578]
[240.88104248 -283.69641113]
[235.21826172 -269.80639648]
[229.55548096 -255.91635132]
[223.89268494 -242.02633667]
[218.22990417 -228.13630676]
[212.56710815 -214.24627686]
[206.90432739 -200.35624695]
[201.34510803 -186.42445374]
[195.88973999 -172.45166016]
[190.43438721 -158.47885132]
[191.43511963 -155.86032104]
[191.45890808 -152.68762207]
[190.28948975 -149.33085632]
[187.84843445 -146.23153687]
[184.21594238 -143.85267639]
[177.93858337 -130.22935486]
[179.63952637 -115.43218994]
[166.83709717 -106.13657379]
[160.55973816 -92.51325989]
[154.28237915 -78.88993835]
[148.00502014 -65.26662445]
[141.72766113 -51.64331055]
[135.45028687 -38.01999283]
[129.17292786 -24.39667702]
[123.82174683 -10.38365459]
[119.42074585 3.95619273]
[115.01975250 18.29603958]
[110.61875153 32.63588715]
[108.28326416 47.45295334]
[108.05993652 62.45129395]
[107.83660889 77.44963074]
[119.55775452 86.30963898]
[123.87059784 100.35543823]
[119.14147186 114.26659393]
[107.16172791 122.77369690]
[106.93840027 137.77203369]
[106.71507263 152.77037048]
[106.49174500 167.76870728]
[106.26841736 182.76704407]
[106.04508972 197.76538086]
[109.04637909 206.39266968]
[105.70512390 212.98492432]
[105.25852203 227.97827148]
[104.81191254 242.97161865]
[112.13490295 256.99603271]
[104.02209473 269.48730469]
[114.87940979 259.13748169]
[129.84085083 258.06256104]
[142.06622314 266.75393677]
[145.96627808 281.23803711]
[139.75794983 294.89294434]
[126.27959442 301.47583008]
[111.69335175 297.97705078]
[102.66729736 285.99444580]
[100.66328430 300.85998535]
[106.48750305 315.57012939]
[97.11919403 327.14959717]
[95.11517334 342.01513672]
[93.11116028 356.88067627]
[91.10714722 371.74618530]
[105.39407349 376.45770264]
[118.57188416 383.71441650]
[130.19175720 393.26919556]
[139.85789490 404.79653931]
[147.24110413 417.90390015]
[152.08990479 432.14483643]
[154.23913574 447.03427124]
[153.61561584 462.06509399]
[150.24057007 476.72537231]
[144.22895813 490.51577759]
[135.78552246 502.96661377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 199]
[22 198]
[23 197]
[24 196]
[26 194]
[27 193]
[28 185]
[30 183]
[31 182]
[32 181]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[42 170]
[43 169]
[44 168]
[64 167]
[65 166]
[66 165]
[67 164]
[77 163]
[78 162]
[79 161]
[80 160]
[81 159]
[82 158]
[83 157]
[85 155]
[86 154]
[87 149]
[88 148]
[89 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
