%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[81.95577240 511.57330322]
[82.09694672 496.46844482]
[86.48925781 482.01559448]
[94.77663422 469.38644409]
[106.28725433 459.60470581]
[120.08800507 453.46337891]
[118.08399200 438.59783936]
[116.07997894 423.73233032]
[114.07596588 408.86679077]
[112.07195282 394.00125122]
[97.56147766 393.06655884]
[83.50951385 389.30966187]
[70.45970917 382.87387085]
[58.91732407 374.00625610]
[49.32969284 363.04797363]
[42.06886673 350.42135620]
[37.41718292 336.61349487]
[35.55628586 322.15740967]
[36.56003571 307.61169434]
[40.39157104 293.53866577]
[46.90467072 280.48278809]
[55.84933090 268.94961548]
[66.88135529 259.38610840]
[79.57559204 252.16340637]
[93.44235229 247.56234741]
[91.65988159 232.66862488]
[89.87741852 217.77491760]
[80.56504059 210.05439758]
[78.95815277 197.66079712]
[86.45906067 187.16796875]
[84.89853668 172.24937439]
[83.33801270 157.33076477]
[77.99833679 171.34817505]
[69.11929321 183.43794250]
[57.34186172 192.72731018]
[43.51626968 198.54563904]
[28.64060020 200.47293091]
[13.78873825 198.37002563]
[0.03285181 192.38876343]
[-11.63400841 182.96090698]
[-20.36960220 170.76708984]
[-25.54330063 156.68756104]
[-26.78160858 141.73876953]
[-23.99513054 126.99985504]
[-17.38502693 113.53484344]
[-7.42848587 102.31578064]
[5.15572119 94.15258789]
[19.45912933 89.63456726]
[34.44916534 89.08788300]
[49.04368210 92.55199432]
[62.18909073 99.77683258]
[72.93640900 110.24082184]
[80.50978851 123.18856049]
[84.36264038 137.68649292]
[87.46674347 123.01119232]
[90.57085419 108.33589172]
[93.34646606 93.59492493]
[95.79219818 78.79565430]
[98.23792267 63.99638748]
[100.68364716 49.19711685]
[103.12937927 34.39784241]
[101.28978729 29.51286888]
[101.48809814 24.87455368]
[103.28910828 21.21785736]
[106.02895355 18.99849892]
[109.13306427 4.32319641]
[112.23717499 -10.35210609]
[115.34128571 -25.02740860]
[117.67677307 -39.84447479]
[119.23729706 -54.76308060]
[120.79782104 -69.68168640]
[122.35834503 -84.60028839]
[123.91886902 -99.51889801]
[117.65924835 -114.04913330]
[126.67864227 -125.90238953]
[128.23916626 -140.82099915]
[129.79969788 -155.73960876]
[116.33014679 -160.04666138]
[103.97158051 -166.90954590]
[93.20314026 -176.05984497]
[84.44187927 -187.14053345]
[78.02658081 -199.71986389]
[74.20467377 -213.30819702]
[73.12271118 -227.37707520]
[74.82068634 -241.37976074]
[79.23062897 -254.77249146]
[86.17928314 -267.03555298]
[95.39493561 -277.69357300]
[106.51802063 -286.33377075]
[119.11515045 -292.62207031]
[132.69601440 -296.31600952]
[146.73246765 -297.27401733]
[148.73648071 -312.13952637]
[150.74049377 -327.00506592]
[152.74450684 -341.87057495]
[154.74851990 -356.73611450]
[156.75253296 -371.60165405]
[158.75654602 -386.46716309]
[144.77737427 -392.12698364]
[132.64540100 -401.08612061]
[123.12326050 -412.78140259]
[116.80953217 -426.47766113]
[114.10108185 -441.31393433]
[115.16818237 -456.35760498]
[119.94374847 -470.66302490]
[128.12757874 -483.33093262]
[139.20524597 -493.56500244]
[152.48037720 -500.72192383]
[167.11851501 -504.35180664]
[182.19946289 -504.22647095]
[196.77523804 -500.35379028]
[209.92958069 -492.97723389]
[220.83563232 -482.56045532]
[228.80778503 -469.75827026]
[233.34492493 -455.37548828]
[234.16184998 -440.31613159]
[231.20719910 -425.52691650]
[224.66668701 -411.93750000]
[214.95149231 -400.40209961]
[202.67228699 -391.64584351]
[188.60098267 -386.21914673]
[173.62208557 -384.46316528]
[171.61807251 -369.59762573]
[169.61404419 -354.73211670]
[167.61003113 -339.86657715]
[165.60601807 -325.00103760]
[163.60200500 -310.13552856]
[161.59799194 -295.26998901]
[176.53976440 -289.83261108]
[189.91284180 -281.21887207]
[201.05201721 -269.85360718]
[209.40246582 -256.29873657]
[214.54730225 -241.22526550]
[216.22839355 -225.38015747]
[214.35939026 -209.54933167]
[209.03005981 -194.51866150]
[200.50202942 -181.03495789]
[189.19593811 -169.76885986]
[175.67066956 -161.28150940]
[160.59579468 -155.99656677]
[144.71829224 -154.17907715]
[143.15777588 -139.26046753]
[141.59724426 -124.34187317]
[147.96849060 -110.87870789]
[138.83747864 -97.95837402]
[137.27694702 -83.03976440]
[135.71643066 -68.12116241]
[134.15589905 -53.20255661]
[132.59538269 -38.28395462]
[144.19241333 -47.79756927]
[159.19235229 -47.75675201]
[170.73744202 -38.18016815]
[173.54940796 -23.44609642]
[166.34266663 -10.29076004]
[152.41203308 -4.72860098]
[138.12641907 -9.30256271]
[130.01658630 -21.92329788]
[126.91248322 -7.24799585]
[123.80837250 7.42730618]
[120.70426178 22.10260963]
[117.92864990 36.84357071]
[115.48291779 51.64284134]
[113.03719330 66.44211578]
[110.59146881 81.24138641]
[108.14573669 96.04065704]
[109.92459106 99.46235657]
[110.18657684 103.65154266]
[108.62273407 107.91316223]
[105.24616241 111.44000244]
[102.14205170 126.11530304]
[99.03794098 140.79060364]
[98.25661469 155.77024841]
[99.81713867 170.68884277]
[101.37766266 185.60745239]
[112.53677368 200.25517273]
[104.77113342 215.99244690]
[106.55360413 230.88616943]
[108.33606720 245.77987671]
[123.76854706 247.14356995]
[138.57748413 251.67579651]
[152.11993408 259.17733765]
[163.80839539 269.32012939]
[173.13639832 281.66149902]
[179.70036316 295.66366577]
[183.21713257 310.71707153]
[183.53611755 326.16683960]
[180.64581299 341.34143066]
[174.67411804 355.58178711]
[165.88278198 368.26980591]
[154.65580750 378.85537720]
[141.48278809 386.88012695]
[126.93747711 391.99725342]
[128.94149780 406.86276245]
[130.94551086 421.72830200]
[132.94952393 436.59384155]
[134.95353699 451.45935059]
[149.88787842 453.72692871]
[163.57786560 460.11138916]
[174.91368103 470.09515381]
[182.97637939 482.86892700]
[187.11238098 497.39718628]
[186.98638916 512.50219727]
[182.60859680 526.95941162]
[174.33390808 539.59692383]
[162.83312988 549.39019775]
[149.03854370 555.54541016]
[134.06845093 557.56353760]
[119.13638306 555.28094482]
[105.45282745 548.88275146]
[94.12705231 538.88757324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[25 178]
[26 177]
[27 176]
[30 174]
[31 173]
[32 172]
[54 171]
[55 170]
[56 169]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 149]
[70 148]
[71 147]
[72 146]
[73 145]
[75 143]
[76 142]
[77 141]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
