%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[74.36884308 534.92041016]
[60.99626541 528.00964355]
[49.28877258 518.54815674]
[39.72578430 506.92343140]
[32.69889450 493.61148071]
[28.49584961 479.15744019]
[27.28876495 464.15316772]
[29.12706757 449.21310425]
[33.93548203 434.94903564]
[41.51710510 421.94503784]
[51.56147385 410.73364258]
[63.65727997 401.77392578]
[77.30920410 395.43280029]
[91.95821381 391.96994019]
[91.51160431 376.97659302]
[91.06500244 361.98324585]
[82.95219421 349.49197388]
[90.27517700 335.46755981]
[89.82857513 320.47421265]
[89.38196564 305.48083496]
[88.93536377 290.48748779]
[86.13524628 286.61859131]
[85.73581696 280.94961548]
[88.70538330 275.04254150]
[88.70538330 260.04254150]
[88.70538330 245.04255676]
[88.70538330 230.04255676]
[88.70538330 215.04255676]
[88.59371948 200.04296875]
[88.37039185 185.04463196]
[88.14706421 170.04629517]
[87.92373657 155.04795837]
[87.70040894 140.04962158]
[79.42787170 152.56222534]
[66.33277130 159.87785339]
[51.34059143 160.36218262]
[37.80062485 153.90701294]
[28.73772621 141.95443726]
[26.17657661 127.17470551]
[30.68934250 112.86964417]
[41.26786041 102.23503113]
[55.54885864 97.64666748]
[70.34193420 100.12961578]
[82.34226227 109.12917328]
[88.86895752 122.63483429]
[91.09407806 107.80078888]
[81.64236450 119.44832611]
[68.48957062 126.65971375]
[53.58684158 128.36517334]
[39.14490128 124.31173706]
[27.30613327 115.10068512]
[19.82674026 102.09842682]
[17.81625175 87.23377228]
[21.57290840 72.71180725]
[30.53943443 60.68677139]
[43.38569641 52.94251633]
[58.20603180 50.62784958]
[72.80193329 54.08613968]
[85.00817871 62.80437469]
[93.01404572 75.48925018]
[95.63195038 90.25712585]
[100.87866974 76.20465851]
[106.12538910 62.15218735]
[111.37210083 48.09971619]
[116.61882019 34.04724503]
[104.59381866 43.01380539]
[89.88597107 45.95987701]
[75.33514404 42.31660843]
[63.75086594 32.78746796]
[57.36988449 19.21237755]
[57.42426682 4.21247578]
[63.90351105 -9.31599045]
[75.55657196 -18.76088715]
[90.13343811 -22.29855347]
[104.81953430 -19.24592018]
[116.77921295 -10.19240189]
[123.70323944 3.11390591]
[124.25446320 18.10501862]
[131.91505432 5.20869255]
[129.49372864 -7.46016455]
[136.13975525 -18.04383659]
[147.82839966 -21.15861893]
[155.68016052 -33.93946075]
[163.53192139 -46.72030640]
[171.38366699 -59.50114822]
[172.01477051 -75.30976105]
[185.26947021 -82.10401917]
[185.90055847 -97.91263580]
[199.15527344 -104.70689392]
[207.00703430 -117.48773193]
[214.85877991 -130.26856995]
[222.71054077 -143.04942322]
[230.56230164 -155.83026123]
[238.41404724 -168.61109924]
[246.26580811 -181.39195251]
[254.11756897 -194.17279053]
[242.26536560 -203.39170837]
[231.49928284 -213.85855103]
[221.94999695 -225.44622803]
[213.73344421 -238.01409912]
[206.94934082 -251.40959167]
[201.68006897 -265.47009277]
[197.98957825 -280.02493286]
[195.92265320 -294.89743042]
[195.50440979 -309.90704346]
[196.73991394 -324.87155151]
[199.61416626 -339.60934448]
[204.09228516 -353.94143677]
[210.11990356 -367.69393921]
[217.62384033 -380.69985962]
[226.51303101 -392.80133057]
[236.67955017 -403.85147095]
[247.99996948 -413.71609497]
[260.33691406 -422.27548218]
[273.54058838 -429.42575073]
[287.45071411 -435.08004761]
[301.89846802 -439.16979980]
[316.70843506 -441.64532471]
[331.70083618 -442.47656250]
[346.69369507 -441.65344238]
[361.50500488 -439.18597412]
[375.95495605 -435.10406494]
[389.86813354 -429.45727539]
[403.07568359 -422.31417847]
[415.41726685 -413.76147461]
[426.74304199 -403.90298462]
[436.91555786 -392.85839844]
[445.81130981 -380.76174927]
[453.32229614 -367.75988770]
[459.35736084 -354.01068115]
[463.84326172 -339.68096924]
[466.72549438 -324.94476318]
[467.96911621 -309.98092651]
[467.55902100 -294.97109985]
[465.50018311 -280.09747314]
[461.81756592 -265.54064941]
[456.55590820 -251.47727966]
[449.77908325 -238.07810974]
[441.56936646 -225.50578308]
[432.02636719 -213.91291809]
[421.26596069 -203.44024658]
[409.41876221 -194.21490479]
[396.62857056 -186.34886169]
[383.05068970 -179.93760681]
[368.84991455 -175.05897522]
[354.19863892 -171.77218628]
[339.27468872 -170.11712646]
[324.25924683 -170.11390686]
[309.33459473 -171.76255798]
[294.68191528 -175.04306030]
[280.47903442 -179.91560364]
[266.89840698 -186.32102966]
[259.04666138 -173.54019165]
[251.19490051 -160.75935364]
[243.34313965 -147.97850037]
[235.49137878 -135.19766235]
[227.63963318 -122.41682434]
[219.78787231 -109.63597870]
[211.93611145 -96.85514069]
[211.86663818 -81.96069336]
[198.05030823 -74.25226593]
[197.98083496 -59.35782242]
[184.16452026 -51.64939117]
[176.31275940 -38.86854935]
[168.46099854 -26.08770752]
[160.60925293 -13.30686378]
[161.07626343 4.23590708]
[144.81138611 12.86929035]
[137.15078735 25.76561737]
[130.67129517 39.29396057]
[125.42457581 53.34643555]
[120.17785645 67.39890289]
[114.93113708 81.45137787]
[109.68441772 95.50384521]
[105.92812347 110.02590942]
[103.70300293 124.85994720]
[102.69874573 139.82629395]
[102.92207336 154.82463074]
[103.14540100 169.82296753]
[103.36872864 184.82130432]
[103.59205627 199.81964111]
[106.84888458 208.35374451]
[103.70538330 215.04255676]
[103.70538330 230.04255676]
[103.70538330 245.04255676]
[103.70538330 260.04254150]
[103.70538330 275.04254150]
[103.92871094 290.04089355]
[104.37532043 305.03424072]
[104.82192230 320.02758789]
[105.26853180 335.02093506]
[113.41328430 348.58462524]
[106.05834961 361.53662109]
[106.50495911 376.52996826]
[106.95156097 391.52331543]
[121.78070831 394.10812378]
[135.78585815 399.62542725]
[148.39350891 407.84930420]
[159.08738708 418.44296265]
[167.42958069 430.97265625]
[173.07847595 444.92523193]
[175.80278015 459.72940063]
[175.49090576 474.77890015]
[172.15562439 489.45748901]
[165.93353271 503.16406250]
[157.07942200 515.33740234]
[145.95584106 525.47894287]
[133.01831055 533.17340088]
[118.79660797 538.10577393]
[103.87310791 540.07397461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 195]
[15 194]
[16 193]
[18 191]
[19 190]
[20 189]
[21 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[45 176]
[46 175]
[61 174]
[62 173]
[63 172]
[64 171]
[65 170]
[78 169]
[79 168]
[82 166]
[83 165]
[84 164]
[85 163]
[87 161]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
