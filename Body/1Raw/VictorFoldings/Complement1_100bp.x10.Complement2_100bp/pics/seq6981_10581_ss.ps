%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[44.23543930 416.85644531]
[41.98120880 431.70416260]
[37.98667526 446.18106079]
[32.30791473 460.08386230]
[25.02464867 473.21740723]
[16.23912239 485.39733887]
[6.07467318 496.45269775]
[-5.32600832 506.22821045]
[-17.80287361 514.58666992]
[-31.18076706 521.41076660]
[-45.27188492 526.60467529]
[-59.87840652 530.09552002]
[-74.79528809 531.83422852]
[-89.81310272 531.79644775]
[-104.72104645 529.98266602]
[-119.30981445 526.41839600]
[-133.37461853 521.15362549]
[-146.71798706 514.26226807]
[-159.15263367 505.84112549]
[-170.50398254 496.00836182]
[-180.61265564 484.90200806]
[-189.33677673 472.67800903]
[-196.55384827 459.50796509]
[-202.16256714 445.57675171]
[-206.08419800 431.07995605]
[-208.26367188 416.22106934]
[-208.67041016 401.20870972]
[-207.29869080 386.25363159]
[-204.16777039 371.56573486]
[-199.32160950 357.35128784]
[-192.82824707 343.80978394]
[-184.77882385 331.13131714]
[-175.28633118 319.49392700]
[-164.48406982 309.06091309]
[-152.52363586 299.97882080]
[-139.57298279 292.37509155]
[-125.81388855 286.35647583]
[-111.43951416 282.00747681]
[-96.65165710 279.38916016]
[-81.65791321 278.53826904]
[-66.66876984 279.46673584]
[-51.89466095 282.16152954]
[-37.54298019 286.58483887]
[-23.81520844 292.67456055]
[-16.15461159 279.77822876]
[-16.30689430 264.88439941]
[-2.60687351 256.97109985]
[-2.75915670 242.07728577]
[10.94086456 234.16400146]
[18.60146141 221.26768494]
[11.19570541 208.34403992]
[11.25350285 193.34895325]
[18.85947037 180.30995178]
[32.05741882 172.77928162]
[47.35250473 172.86637878]
[55.01310349 159.97006226]
[62.67369843 147.07373047]
[70.33429718 134.17739868]
[71.04767609 126.82125854]
[78.20617676 121.14730835]
[86.05792999 108.36646271]
[84.03924561 96.89623260]
[90.20932007 87.01840973]
[101.40256500 83.80086517]
[109.44374084 71.13834381]
[110.31012726 55.34087753]
[123.66452026 48.74471664]
[131.70568848 36.08219147]
[139.74687195 23.41966438]
[147.78804016 10.75714016]
[155.82920837 -1.90538478]
[163.87039185 -14.56790924]
[171.91156006 -27.23043442]
[168.68295288 -42.46899796]
[177.01821899 -55.19604874]
[191.56576538 -58.18012619]
[188.33715820 -73.41869354]
[196.67242432 -86.14574432]
[211.21997070 -89.12982178]
[219.26113892 -101.79234314]
[227.30230713 -114.45487213]
[235.34349060 -127.11739349]
[236.20986938 -142.91485596]
[249.56427002 -149.51101685]
[257.60543823 -162.17355347]
[265.64660645 -174.83607483]
[273.68777466 -187.49859619]
[266.57626343 -199.54388428]
[265.35412598 -213.41192627]
[270.20315552 -226.39134216]
[280.12359619 -235.96913147]
[293.13986206 -240.31718445]
[306.69372559 -238.64100647]
[314.92254639 -251.18240356]
[323.15133667 -263.72381592]
[331.38015747 -276.26519775]
[319.77285767 -285.78903198]
[309.24368286 -296.49267578]
[299.91189575 -308.25491333]
[291.88323975 -320.94241333]
[285.24871826 -334.41146851]
[280.08343506 -348.50939941]
[276.44598389 -363.07653809]
[274.37756348 -377.94775391]
[273.90158081 -392.95462036]
[275.02346802 -407.92703247]
[277.73049927 -422.69537354]
[281.99197388 -437.09231567]
[287.75964355 -450.95471191]
[294.96817017 -464.12551880]
[303.53582764 -476.45544434]
[313.36553955 -487.80484009]
[324.34597778 -498.04504395]
[336.35269165 -507.06011963]
[349.24960327 -514.74780273]
[362.89065552 -521.02111816]
[377.12124634 -525.80889893]
[391.78012085 -529.05688477]
[406.70117188 -530.72833252]
[421.71539307 -530.80426025]
[436.65258789 -529.28381348]
[451.34356689 -526.18420410]
[465.62185669 -521.54058838]
[479.32562256 -515.40557861]
[492.29965210 -507.84869385]
[504.39691162 -498.95553589]
[515.48034668 -488.82687378]
[525.42437744 -477.57745361]
[534.11627197 -465.33480835]
[541.45758057 -452.23760986]
[547.36517334 -438.43423462]
[551.77203369 -424.08114624]
[554.62829590 -409.34091187]
[555.90155029 -394.38061523]
[555.57733154 -379.36972046]
[553.65942383 -364.47830200]
[550.16943359 -349.87515259]
[545.14703369 -335.72567749]
[538.64904785 -322.19024658]
[530.74914551 -309.42218018]
[521.53674316 -297.56619263]
[511.11636353 -286.75659180]
[499.60598755 -277.11587524]
[487.13607788 -268.75326538]
[473.84790039 -261.76354980]
[459.89202881 -256.22589111]
[445.42657471 -252.20303345]
[430.61547852 -249.74058533]
[415.62655640 -248.86643982]
[400.62963867 -249.59048462]
[385.79464722 -251.90454102]
[371.28964233 -255.78237915]
[357.27905273 -261.18005371]
[343.92153931 -268.03640747]
[335.69274902 -255.49499512]
[327.46392822 -242.95359802]
[319.23513794 -230.41220093]
[326.85382080 -216.16200256]
[326.24295044 -199.92060852]
[317.47460938 -186.12448120]
[302.86209106 -178.58987427]
[286.35031128 -179.45742798]
[278.30914307 -166.79490662]
[270.26797485 -154.13237000]
[262.22680664 -141.46984863]
[261.93557739 -126.57809448]
[248.00601196 -119.07621765]
[239.96484375 -106.41369629]
[231.92366028 -93.75117493]
[223.88249207 -81.08864594]
[227.36785889 -66.65299988]
[219.39335632 -53.69685364]
[204.22828674 -50.13895416]
[207.71365356 -35.70331192]
[199.73915100 -22.74715996]
[184.57408142 -19.18926239]
[176.53291321 -6.52673674]
[168.49174500 6.13578844]
[160.45056152 18.79831314]
[152.40939331 31.46083832]
[144.36822510 44.12336349]
[136.32704163 56.78588867]
[136.03581238 71.67764282]
[122.10626221 79.17951965]
[114.06509399 91.84204102]
[113.79046631 108.61406708]
[98.83876801 116.21821594]
[90.98701477 128.99905396]
[83.23062134 141.83799744]
[75.57003021 154.73432922]
[67.90943146 167.63066101]
[60.24883270 180.52697754]
[67.64183807 193.91693115]
[67.34201050 209.10925293]
[59.52998734 222.02586365]
[46.38947678 229.24963379]
[31.49778938 228.92828369]
[23.83719063 241.82460022]
[23.44153786 257.64086914]
[10.28945351 264.63171387]
[9.89379978 280.44796753]
[-3.25828481 287.43881226]
[-10.91888237 300.33514404]
[0.99567968 309.47732544]
[11.74531078 319.96453857]
[21.17910385 331.64956665]
[29.16462326 344.36837769]
[35.58976364 357.94238281]
[40.36432648 372.18106079]
[43.42128372 386.88452148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 203]
[45 202]
[47 200]
[49 198]
[50 197]
[55 192]
[56 191]
[57 190]
[58 189]
[60 188]
[61 187]
[64 185]
[65 184]
[67 182]
[68 181]
[69 180]
[70 179]
[71 178]
[72 177]
[73 176]
[76 173]
[79 170]
[80 169]
[81 168]
[82 167]
[84 165]
[85 164]
[86 163]
[87 162]
[93 157]
[94 156]
[95 155]
[96 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
