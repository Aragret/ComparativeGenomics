%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[91.25386047 537.98736572]
[80.02505493 548.05541992]
[66.64482880 555.01385498]
[51.95428467 558.42541504]
[36.87686920 558.07556152]
[22.36036873 553.98632812]
[9.31729984 546.41473389]
[-1.43243837 535.83673096]
[-9.21310806 522.91729736]
[-13.53561020 508.46850586]
[-14.12822914 493.39868164]
[-10.95371056 478.65509033]
[-4.21160936 465.16455078]
[5.67426157 453.77505493]
[18.08246803 445.20260620]
[32.23301697 439.98602295]
[47.23639679 438.45324707]
[49.46151352 423.61920166]
[51.68663406 408.78515625]
[53.91175079 393.95111084]
[56.13686752 379.11706543]
[58.36198425 364.28302002]
[60.58710098 349.44897461]
[62.03651810 334.51916504]
[62.70630646 319.53411865]
[63.37609100 304.54910278]
[64.04587555 289.56405640]
[62.25588989 287.40670776]
[61.21260071 284.41036987]
[61.23986053 280.85583496]
[62.55396652 277.13592529]
[65.22795868 273.71487427]
[66.78848267 258.79626465]
[60.41724777 245.33309937]
[69.54826355 232.41275024]
[71.10877991 217.49415588]
[72.66930389 202.57554626]
[74.22982788 187.65693665]
[75.79035187 172.73834229]
[65.30149841 183.46139526]
[50.70454025 186.91519165]
[36.52249527 182.02954102]
[27.14983177 170.31829834]
[25.49076653 155.41032410]
[32.05938339 141.92503357]
[44.82032013 134.04096985]
[59.81946564 134.20109558]
[72.40917206 142.35581970]
[78.68841553 155.97853088]
[82.22808838 141.40216064]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[83.85837555 101.95625305]
[86.69087219 90.65943146]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[103.86430359 55.11072540]
[98.00289917 43.62130737]
[101.43049622 31.60317993]
[111.78511047 25.34950066]
[115.75720978 10.88497639]
[119.72930145 -3.57954741]
[123.70140076 -18.04407120]
[110.44237518 -25.18579865]
[99.11059570 -35.09433365]
[90.27225494 -47.27031708]
[84.36801147 -61.10120773]
[81.69103241 -75.89208221]
[82.37240601 -90.90057373]
[86.37474823 -105.37411499]
[93.49422455 -118.58767700]
[103.37094879 -129.88008118]
[115.50715637 -138.68711853]
[129.29229736 -144.56968689]
[144.03376770 -147.23573303]
[158.99163818 -146.55468750]
[162.96372986 -161.01921082]
[166.93583679 -175.48373413]
[170.90792847 -189.94825745]
[169.58651733 -194.99810791]
[170.26631165 -199.59062195]
[172.43797302 -203.04010010]
[175.39384460 -204.96238708]
[180.00785828 -219.23512268]
[184.62185669 -233.50784302]
[181.50463867 -249.01892090]
[192.78172302 -258.74911499]
[197.39572144 -273.02185059]
[202.00973511 -287.29458618]
[188.34051514 -293.51153564]
[175.46910095 -301.24615479]
[163.56327820 -310.39761353]
[152.77827454 -320.84658813]
[143.25469971 -332.45690918]
[135.11669922 -345.07714844]
[128.47036743 -358.54281616]
[123.40237427 -372.67834473]
[119.97876740 -387.29943848]
[118.24419403 -402.21551514]
[118.22126770 -417.23208618]
[119.91028595 -432.15338135]
[123.28922272 -446.78485107]
[128.31404114 -460.93579102]
[134.91920471 -474.42169189]
[143.01863098 -487.06674194]
[152.50671387 -498.70608521]
[163.25976562 -509.18795776]
[175.13758850 -518.37573242]
[187.98533630 -526.14959717]
[201.63549805 -532.40826416]
[215.91014099 -537.07006836]
[230.62313843 -540.07427979]
[245.58268738 -541.38171387]
[260.59378052 -540.97534180]
[275.46069336 -538.86047363]
[289.98959351 -535.06457520]
[303.99108887 -529.63726807]
[317.28265381 -522.64929199]
[329.69097900 -514.19165039]
[341.05432129 -504.37472534]
[351.22448730 -493.32641602]
[360.06893921 -481.19076538]
[367.47235107 -468.12603760]
[373.33822632 -454.30252075]
[377.59005737 -439.90045166]
[380.17239380 -425.10757446]
[381.05163574 -410.11676025]
[380.21630859 -395.12344360]
[377.67724609 -380.32305908]
[373.46759033 -365.90859985]
[367.64221191 -352.06799316]
[360.27709961 -338.98162842]
[351.46820068 -326.82015991]
[341.33041382 -315.74212646]
[329.99584961 -305.89196777]
[317.61233521 -297.39807129]
[304.34130859 -290.37115479]
[290.35574341 -284.90289307]
[275.83801270 -281.06454468]
[260.97735596 -278.90612793]
[245.96752930 -278.45581055]
[231.00421143 -279.71945190]
[216.28247070 -282.68057251]
[211.66845703 -268.40783691]
[207.05445862 -254.13511658]
[210.50169373 -239.64491272]
[198.89459229 -228.89384460]
[194.28057861 -214.62110901]
[189.66658020 -200.34837341]
[185.37245178 -185.97616577]
[181.40036011 -171.51164246]
[177.42825317 -157.04711914]
[173.45616150 -142.58258057]
[186.66409302 -135.52903748]
[197.97656250 -125.70833588]
[206.82415771 -113.61060333]
[212.76051331 -99.84066772]
[215.48497009 -85.08785248]
[214.85772705 -70.09146118]
[210.90702820 -55.60374451]
[203.82791138 -42.35213470]
[193.97256470 -31.00275421]
[181.83283997 -22.12690926]
[168.01567078 -16.17234230]
[153.21276855 -13.44064236]
[138.16592407 -14.07197475]
[134.19383240 0.39254886]
[130.22172546 14.85707283]
[126.24963379 29.32159615]
[131.59487915 46.03672028]
[118.38636017 58.86702728]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[115.77153015 103.95446014]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[96.80445862 144.94183350]
[93.26478577 159.51820374]
[90.70895386 174.29885864]
[89.14843750 189.21746826]
[87.58791351 204.13607788]
[86.02738953 219.05467224]
[84.46686554 233.97328186]
[90.72647858 248.50352478]
[81.70708466 260.35678101]
[80.14656067 275.27539062]
[79.03091431 290.23382568]
[78.36112976 305.21887207]
[77.69134521 320.20391846]
[77.02156067 335.18896484]
[88.03176880 325.00192261]
[103.00754547 324.14987183]
[115.10217285 333.02230835]
[118.78614044 347.56286621]
[112.37519836 361.12384033]
[98.80033112 367.50531006]
[84.26779938 363.78973389]
[75.42114258 351.67410278]
[73.19602966 366.50814819]
[70.97090912 381.34219360]
[68.74579620 396.17623901]
[66.52067566 411.01025391]
[64.29556274 425.84429932]
[62.07044220 440.67834473]
[75.96380615 446.54565430]
[87.96104431 455.68441772]
[97.30799866 467.52020264]
[103.41711426 481.30892944]
[105.90437317 496.18389893]
[104.61341095 511.21002197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 204]
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[24 190]
[25 189]
[26 188]
[27 187]
[32 186]
[33 185]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[49 178]
[50 177]
[51 176]
[52 175]
[55 173]
[56 172]
[57 171]
[60 169]
[61 168]
[62 167]
[63 166]
[76 153]
[77 152]
[78 151]
[79 150]
[83 149]
[84 148]
[85 147]
[87 145]
[88 144]
[89 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
