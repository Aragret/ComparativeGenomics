%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[39.20402145 392.90628052]
[30.57710266 405.18264771]
[21.23807144 416.92639160]
[11.21973419 428.09625244]
[0.55728072 438.65301514]
[-10.71183681 448.55957031]
[-22.54803658 457.78115845]
[-34.90974045 466.28533936]
[-47.75352859 474.04226685]
[-61.03428650 481.02471924]
[-74.70536804 487.20812988]
[-88.71874237 492.57080078]
[-103.02519989 497.09387207]
[-117.57447815 500.76147461]
[-132.31547546 503.56076050]
[-147.19642639 505.48181152]
[-162.16503906 506.51797485]
[-177.16874695 506.66552734]
[-192.15484619 505.92401123]
[-207.07069397 504.29602051]
[-221.86389160 501.78723145]
[-236.48249817 498.40652466]
[-250.87515259 494.16571045]
[-264.99130249 489.07971191]
[-278.78137207 483.16641235]
[-292.19689941 476.44653320]
[-305.19076538 468.94372559]
[-317.71734619 460.68435669]
[-329.73266602 451.69735718]
[-341.19445801 442.01437378]
[-352.06246948 431.66940308]
[-362.29858398 420.69876099]
[-371.86679077 409.14096069]
[-380.73352051 397.03665161]
[-388.86761475 384.42834473]
[-396.24047852 371.36029053]
[-402.82623291 357.87841797]
[-408.60174561 344.03009033]
[-413.54672241 329.86392212]
[-417.64379883 315.42971802]
[-420.87860107 300.77813721]
[-423.23974609 285.96063232]
[-424.71893311 271.02929688]
[-425.31100464 256.03656006]
[-425.01382446 241.03506470]
[-423.82849121 226.07751465]
[-421.75912476 211.21647644]
[-418.81301880 196.50411987]
[-415.00048828 181.99212646]
[-410.33499146 167.73149109]
[-404.83285522 153.77227783]
[-398.51342773 140.16352844]
[-391.39892578 126.95306396]
[-383.51431274 114.18725586]
[-374.88726807 101.91096497]
[-365.54815674 90.16730499]
[-355.52972412 78.99752808]
[-344.86715698 68.44086456]
[-333.59796143 58.53440475]
[-321.76168823 49.31293869]
[-309.39990234 40.80885696]
[-296.55606079 33.05203247]
[-283.27523804 26.06971359]
[-269.60409546 19.88642120]
[-255.59066772 14.52387905]
[-241.28417969 10.00092030]
[-226.73486328 6.33343410]
[-211.99383545 3.53430152]
[-197.11286926 1.61335516]
[-182.14425659 0.57734209]
[-167.14054871 0.42990163]
[-152.15444946 1.17155159]
[-137.23861694 2.79968691]
[-122.44543457 5.30858898]
[-107.82685852 8.68944454]
[-93.43424225 12.93037796]
[-79.31813812 18.01649475]
[-65.52812958 23.92992592]
[-52.11265945 30.64990425]
[-39.11884689 38.15282059]
[-26.59233284 46.41232681]
[-14.57711792 55.39940643]
[-3.11540842 65.08249664]
[7.75253773 75.42757416]
[17.98854637 86.39831543]
[27.55666161 97.95617676]
[36.42327499 110.06055450]
[44.55724716 122.66894531]
[57.62142944 115.29825592]
[70.68561554 107.92756653]
[83.74980164 100.55687714]
[91.90509796 85.89852142]
[108.67572784 86.24824524]
[121.62872314 78.68386078]
[134.58172607 71.11948395]
[147.53472900 63.55510712]
[160.48771667 55.99072647]
[173.44071960 48.42634964]
[186.39372253 40.86196899]
[179.81513977 27.37366104]
[174.26293945 13.43144703]
[169.76817322 -0.88669956]
[166.35598755 -15.50070477]
[164.04544067 -30.32884026]
[162.84948730 -45.28818130]
[162.77478027 -60.29506683]
[163.82176208 -75.26557159]
[165.98457336 -90.11597443]
[169.25109863 -104.76322937]
[173.60310364 -119.12541199]
[179.01623535 -133.12220764]
[185.46020508 -146.67533875]
[192.89898682 -159.70901489]
[201.29100037 -172.15032959]
[210.58927917 -183.92973328]
[220.74183655 -194.98132324]
[231.69189453 -205.24331665]
[243.37823486 -214.65829468]
[255.73547363 -223.17362976]
[268.69451904 -230.74168396]
[282.18286133 -237.32014465]
[296.12512207 -242.87222290]
[310.44332886 -247.36686707]
[325.05734253 -250.77893066]
[339.88552856 -253.08932495]
[354.84487915 -254.28517151]
[369.85174561 -254.35972595]
[384.82223511 -253.31262207]
[399.67263794 -251.14968872]
[414.31985474 -247.88301086]
[428.68200684 -243.53088379]
[442.67874146 -238.11764526]
[456.23181152 -231.67355347]
[469.26544189 -224.23464966]
[481.70669556 -215.84252930]
[493.48599243 -206.54414368]
[504.53750610 -196.39149475]
[514.79937744 -185.44132996]
[524.21429443 -173.75492859]
[532.72949219 -161.39761353]
[540.29742432 -148.43850708]
[546.87579346 -134.95007324]
[552.42773438 -121.00776672]
[556.92224121 -106.68954468]
[560.33416748 -92.07547760]
[562.64447021 -77.24729919]
[563.84014893 -62.28793716]
[563.91461182 -47.28105164]
[562.86737061 -32.31056213]
[560.70428467 -17.46019745]
[557.43750000 -2.81300521]
[553.08520508 11.54910183]
[547.67187500 25.54580307]
[541.22766113 39.09881973]
[533.78863525 52.13236237]
[525.39642334 64.57353973]
[516.09790039 76.35276794]
[505.94515991 87.40418243]
[494.99490356 97.66597748]
[483.30841064 107.08075714]
[470.95101929 115.59587097]
[457.99185181 123.16369629]
[444.50338745 129.74192810]
[430.56100464 135.29374695]
[416.24273682 139.78813171]
[401.62866211 143.19993591]
[386.80044556 145.51008606]
[371.84109497 146.70565796]
[356.83419800 146.77996826]
[341.86370850 145.73258972]
[327.01336670 143.56938171]
[312.36621094 140.30245972]
[298.00415039 135.95008850]
[284.00747681 130.53659058]
[270.45452881 124.09225464]
[257.42105103 116.65312195]
[244.97994995 108.26078796]
[233.20079041 98.96219635]
[222.14947510 88.80934143]
[211.88778687 77.85900879]
[202.47309875 66.17243195]
[193.95809937 53.81496811]
[181.00509644 61.37934875]
[168.05209351 68.94372559]
[155.09910583 76.50810242]
[142.14610291 84.07248688]
[129.19309998 91.63686371]
[116.24010468 99.20124054]
[112.60824585 110.26699066]
[102.50765228 116.06520081]
[91.12049103 113.62106323]
[78.05630493 120.99175262]
[64.99211884 128.36244202]
[51.92793655 135.73313904]
[58.51380920 149.21495056]
[64.28944397 163.06323242]
[69.23455048 177.22933960]
[73.33176422 191.66352844]
[76.56668854 206.31509399]
[78.92795563 221.13256836]
[80.40728760 236.06388855]
[80.99946594 251.05662537]
[80.70243073 266.05813599]
[79.51721191 281.01568604]
[77.44798279 295.87673950]
[74.50199890 310.58911133]
[70.68962097 325.10113525]
[66.02423859 339.36181641]
[60.52222824 353.32107544]
[54.20292664 366.92987061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 194]
[89 193]
[90 192]
[91 191]
[93 188]
[94 187]
[95 186]
[96 185]
[97 184]
[98 183]
[99 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
