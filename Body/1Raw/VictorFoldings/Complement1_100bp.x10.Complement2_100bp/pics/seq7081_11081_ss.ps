%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[49.88822937 393.73251343]
[42.74246216 406.92791748]
[34.70335007 419.59887695]
[25.80920410 431.68502808]
[16.10240936 443.12875366]
[5.62922621 453.87551880]
[-5.56043768 463.87414551]
[-17.41325760 473.07693481]
[-29.87274933 481.44003296]
[-42.87953568 488.92364502]
[-56.37163544 495.49203491]
[-70.28475189 501.11395264]
[-84.55257416 505.76257324]
[-99.10712433 509.41577148]
[-113.87902832 512.05615234]
[-128.79789734 513.67108154]
[-143.79263306 514.25286865]
[-158.79179382 513.79876709]
[-173.72386169 512.31097412]
[-188.51773071 509.79647827]
[-203.10284424 506.26736450]
[-217.40974426 501.74041748]
[-231.37023926 496.23718262]
[-244.91778564 489.78390503]
[-257.98782349 482.41134644]
[-270.51809692 474.15463257]
[-282.44885254 465.05313110]
[-293.72323608 455.15017700]
[-304.28756714 444.49298096]
[-314.09146118 433.13232422]
[-323.08819580 421.12237549]
[-331.23492432 408.52032471]
[-338.49282837 395.38626099]
[-344.82727051 381.78274536]
[-350.20809937 367.77462769]
[-354.60964966 353.42864990]
[-358.01098633 338.81320190]
[-360.39587402 323.99789429]
[-361.75296021 309.05337524]
[-362.07574463 294.05081177]
[-361.36270142 279.06173706]
[-359.61727905 264.15759277]
[-356.84771729 249.40934753]
[-353.06729126 234.88734436]
[-348.29394531 220.66075134]
[-342.55047607 206.79736328]
[-335.86422729 193.36328125]
[-328.26708984 180.42248535]
[-319.79525757 168.03666687]
[-310.48907471 156.26484680]
[-300.39291382 145.16313171]
[-289.55490112 134.78440857]
[-278.02664185 125.17814636]
[-265.86312866 116.39012146]
[-253.12226868 108.46221924]
[-239.86483765 101.43222046]
[-226.15397644 95.33361816]
[-212.05502319 90.19547272]
[-197.63519287 86.04228973]
[-182.96318054 82.89383698]
[-168.10891724 80.76513672]
[-153.14317322 79.66632080]
[-138.13728333 79.60263824]
[-123.16276550 80.57437897]
[-108.29096222 82.57691956]
[-93.59275818 85.60071564]
[-79.13818359 89.63135529]
[-64.99613953 94.64963531]
[-51.23400497 100.63163757]
[-37.91736984 107.54885864]
[-25.10969543 115.36833191]
[-12.87201405 124.05278778]
[-1.26264584 133.56085205]
[9.66308498 143.84719849]
[19.85311317 154.86283875]
[31.54069328 145.46067810]
[43.22827530 136.05853271]
[54.91585541 126.65637970]
[66.60343933 117.25422668]
[78.29101562 107.85207367]
[89.97859955 98.44992065]
[93.78604126 91.34528351]
[101.91090393 88.99635315]
[113.73717499 79.76925659]
[105.23117828 67.40869141]
[97.47962952 54.56155014]
[90.51026154 41.27383041]
[84.34803772 27.59309578]
[79.01500702 13.56832123]
[74.53026581 -0.75028914]
[70.90986633 -15.31147766]
[68.16677094 -30.06311989]
[66.31079102 -44.95240784]
[65.34858704 -59.92604065]
[65.28358459 -74.93041229]
[66.11602783 -89.91181946]
[67.84293365 -104.81662750]
[70.45812225 -119.59148407]
[73.95222473 -134.18348694]
[78.31274414 -148.54042053]
[83.52406311 -162.61087036]
[89.56752777 -176.34448242]
[96.42150879 -189.69209290]
[104.06146240 -202.60591125]
[112.46004486 -215.03970337]
[121.58718872 -226.94897461]
[131.41021729 -238.29109192]
[141.89398193 -249.02543640]
[153.00093079 -259.11361694]
[164.69132996 -268.51947021]
[176.92330933 -277.20935059]
[189.65307617 -285.15219116]
[202.83508301 -292.31948853]
[216.42213440 -298.68560791]
[230.36558533 -304.22778320]
[244.61552429 -308.92614746]
[259.12094116 -312.76391602]
[273.82992554 -315.72732544]
[288.68978882 -317.80575562]
[303.64733887 -318.99179077]
[318.64907837 -319.28115845]
[333.64126587 -318.67285156]
[348.57022095 -317.16903687]
[363.38253784 -314.77511597]
[378.02517700 -311.49963379]
[392.44570923 -307.35430908]
[406.59252930 -302.35397339]
[420.41497803 -296.51657104]
[433.86358643 -289.86297607]
[446.89019775 -282.41699219]
[459.44821167 -274.20532227]
[471.49264526 -265.25729370]
[482.98040771 -255.60498047]
[493.87033081 -245.28292847]
[504.12347412 -234.32807922]
[513.70312500 -222.77966309]
[522.57495117 -210.67900085]
[530.70727539 -198.06942749]
[538.07092285 -184.99609375]
[544.63952637 -171.50576782]
[550.38958740 -157.64675903]
[555.30053711 -143.46867371]
[559.35479736 -129.02227783]
[562.53784180 -114.35926056]
[564.83825684 -99.53214264]
[566.24786377 -84.59398651]
[566.76153564 -69.59826660]
[566.37756348 -54.59866333]
[565.09716797 -39.64887619]
[562.92498779 -24.80241776]
[559.86883545 -10.11243916]
[555.93963623 4.36847591]
[551.15148926 18.58848763]
[545.52142334 32.49669266]
[539.06970215 46.04330444]
[531.81939697 59.17982864]
[523.79638672 71.85923767]
[515.02947998 84.03614807]
[505.55004883 95.66695404]
[495.39202881 106.71004486]
[484.59173584 117.12586212]
[473.18786621 126.87714386]
[461.22125244 135.92897034]
[448.73471069 144.24893188]
[435.77294922 151.80725098]
[422.38235474 158.57687378]
[408.61090088 164.53356934]
[394.50784302 169.65600586]
[380.12368774 173.92585754]
[365.50991821 177.32783508]
[350.71887207 179.84974670]
[335.80346680 181.48257446]
[320.81710815 182.22047424]
[305.81341553 182.06080627]
[290.84616089 181.00415039]
[275.96887207 179.05426025]
[261.23483276 176.21813965]
[246.69679260 172.50595093]
[232.40675354 167.93095398]
[218.41590881 162.50953674]
[204.77432251 156.26112366]
[191.53083801 149.20805359]
[178.73286438 141.37559509]
[166.42620850 132.79179382]
[154.65493774 123.48735046]
[143.46118164 113.49559021]
[132.88499451 102.85228729]
[122.96427155 91.59552765]
[111.13800049 100.82262421]
[99.38075256 110.13750458]
[87.69316864 119.53965759]
[76.00559235 128.94180298]
[64.31800842 138.34396362]
[52.63042450 147.74610901]
[40.94284439 157.14825439]
[29.25526428 166.55041504]
[37.83227921 178.86363220]
[45.53935242 191.73925781]
[52.33975601 205.11592102]
[58.20107651 218.92988586]
[63.09538651 233.11531067]
[66.99936676 247.60461426]
[69.89440155 262.32873535]
[71.76670074 277.21746826]
[72.60733795 292.19995117]
[72.41231537 307.20468140]
[71.18255615 322.16024780]
[68.92392731 336.99530029]
[65.64718628 351.63919067]
[61.36794662 366.02212524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 196]
[76 195]
[77 194]
[78 193]
[79 192]
[80 191]
[81 190]
[83 189]
[84 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
