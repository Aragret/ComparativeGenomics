%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[-69.60321808 365.54031372]
[-62.29388046 378.66387939]
[-56.76009750 392.62927246]
[-53.09656906 407.19754028]
[-51.36597443 422.11932373]
[-51.59793472 437.13934326]
[-53.78847122 452.00057983]
[-57.90010834 466.44876099]
[-63.86249161 480.23660278]
[-71.57359314 493.12823486]
[-80.90145874 504.90304565]
[-91.68649292 515.35949707]
[-103.74413300 524.31878662]
[-116.86807251 531.62750244]
[-130.83372498 537.16058350]
[-145.40214539 540.82342529]
[-160.32402039 542.55334473]
[-175.34403992 542.32067871]
[-190.20518494 540.12939453]
[-204.65315247 536.01708984]
[-218.44071960 530.05407715]
[-231.33198547 522.34234619]
[-243.10633850 513.01391602]
[-253.56230164 502.22836304]
[-262.52099609 490.17028809]
[-269.82907104 477.04602051]
[-275.36154175 463.08010864]
[-279.02368164 448.51150513]
[-280.75283813 433.58953857]
[-280.51947021 418.56954956]
[-278.32751465 403.70849609]
[-274.21447754 389.26074219]
[-268.25079346 375.47344971]
[-260.53848267 362.58255005]
[-251.20947266 350.80865479]
[-240.42344666 340.35317993]
[-228.36495972 331.39508057]
[-215.24032593 324.08761597]
[-201.27413940 318.55581665]
[-186.70536804 314.89437866]
[-171.78332520 313.16592407]
[-156.76333618 313.40002441]
[-141.90240479 315.59268188]
[-127.45482635 319.70639038]
[-113.66782379 325.67071533]
[-100.77729797 333.38366699]
[-91.46241760 321.62640381]
[-82.14752960 309.86917114]
[-72.83264923 298.11190796]
[-63.51776886 286.35467529]
[-54.20288467 274.59741211]
[-52.36397552 259.81677246]
[-37.72954941 253.80476379]
[-35.89064026 239.02410889]
[-21.25621414 233.01210022]
[-11.94133091 221.25485229]
[-2.62644792 209.49760437]
[6.68843508 197.74034119]
[16.00331688 185.98309326]
[25.31820107 174.22584534]
[27.15711212 159.44519043]
[41.79153442 153.43319702]
[51.10641861 141.67593384]
[36.12036133 142.32254028]
[24.97365952 132.28504944]
[24.05165100 117.31341553]
[33.88250351 105.98406219]
[48.83465958 104.78695679]
[60.34284210 114.40785217]
[61.81491852 129.33456421]
[72.14158630 118.45522308]
[82.46825409 107.57588959]
[82.19569397 93.08893585]
[92.17092133 82.57984161]
[106.65241241 82.09744263]
[116.97908020 71.21810150]
[127.30574799 60.33877182]
[137.63241577 49.45943451]
[147.95909119 38.58010101]
[156.73968506 26.41864586]
[163.81678772 13.19311810]
[170.89390564 -0.03240902]
[177.67388916 -13.41268253]
[184.15338135 -26.94102859]
[190.63288879 -40.46937180]
[191.51748657 -49.56087112]
[197.31088257 -54.14980698]
[203.99107361 -67.58018494]
[202.42323303 -85.92748260]
[217.41514587 -95.04940033]
[223.89463806 -108.57774353]
[230.37413025 -122.10608673]
[236.85363770 -135.63442993]
[243.33312988 -149.16278076]
[242.31614685 -164.95126343]
[254.79209900 -173.08761597]
[242.16496277 -181.22142029]
[230.65689087 -190.87374878]
[220.44934082 -201.89233398]
[211.70330811 -214.10340881]
[204.55676270 -227.31437683]
[199.12237549 -241.31690979]
[195.48587036 -255.89013672]
[193.70460510 -270.80422974]
[193.80667114 -285.82397461]
[195.79045105 -300.71249390]
[199.62466431 -315.23495483]
[205.24884033 -329.16235352]
[212.57426453 -342.27499390]
[221.48542786 -354.36605835]
[231.84176636 -365.24493408]
[243.47996521 -374.73995972]
[256.21646118 -382.70141602]
[269.85037231 -389.00375366]
[284.16671753 -393.54757690]
[298.93963623 -396.26116943]
[313.93618774 -397.10180664]
[328.91983032 -396.05621338]
[343.65429688 -393.14083862]
[357.90713501 -388.40167236]
[371.45361328 -381.91351318]
[384.08004761 -373.77862549]
[395.58731079 -364.12533569]
[405.79394531 -353.10589600]
[414.53894043 -340.89410400]
[421.68438721 -327.68252563]
[427.11758423 -313.67953491]
[430.75286865 -299.10598755]
[432.53286743 -284.19174194]
[432.42953491 -269.17199707]
[430.44451904 -254.28366089]
[426.60906982 -239.76152039]
[420.98373413 -225.83460999]
[413.65719604 -212.72257996]
[404.74502563 -200.63224792]
[394.38775635 -189.75427246]
[382.74874878 -180.26020813]
[370.01159668 -172.29981995]
[356.37713623 -165.99862671]
[342.06042480 -161.45602417]
[327.28729248 -158.74365234]
[312.29064941 -157.90428162]
[297.30709839 -158.95115662]
[282.57287598 -161.86776733]
[268.32043457 -166.60810852]
[269.80087280 -151.78726196]
[256.86148071 -142.68328857]
[250.38197327 -129.15493774]
[243.90248108 -115.62659454]
[237.42298889 -102.09825134]
[230.94349670 -88.56990051]
[234.66590881 -77.06033325]
[229.37844849 -65.73661804]
[217.42144775 -60.89998627]
[210.74125671 -47.46961212]
[204.16122437 -33.98987579]
[197.68173218 -20.46153259]
[191.20223999 -6.93318653]
[192.02272034 -3.50402498]
[191.22302246 0.49291483]
[188.55436707 4.29180956]
[184.11943054 7.04469633]
[177.04232788 20.27022362]
[169.96520996 33.49575043]
[182.39927673 25.10563278]
[196.80000305 20.90810394]
[211.79479980 21.30324936]
[225.95445251 26.25340462]
[237.92936707 35.28675079]
[246.57817078 47.54228973]
[251.07650757 61.85190201]
[250.99562073 76.85168457]
[246.34323120 91.11195374]
[237.56277466 103.27351379]
[225.49113464 112.17720032]
[211.27891541 116.97436523]
[196.28073120 117.20778656]
[181.92611694 112.85520172]
[169.58326721 104.33148193]
[160.42860413 92.44905090]
[155.33470154 78.34046936]
[154.78709412 63.35046768]
[158.83842468 48.90676880]
[148.51174927 59.78610611]
[138.18508911 70.66543579]
[127.85841370 81.54477692]
[117.53174591 92.42411041]
[117.80430603 106.91106415]
[107.82907867 117.42015839]
[93.34758759 117.90255737]
[83.02091980 128.78189087]
[72.69425201 139.66122437]
[62.86367035 150.99082947]
[53.54878616 162.74807739]
[51.04361343 178.36968994]
[37.07545090 183.54072571]
[27.76056862 195.29797363]
[18.44568634 207.05523682]
[9.13080311 218.81248474]
[-0.18407948 230.56973267]
[-9.49896240 242.32698059]
[-12.00413609 257.94860840]
[-25.97229767 263.11962891]
[-28.47747231 278.74124146]
[-42.44563293 283.91229248]
[-51.76051712 295.66955566]
[-61.07539749 307.42678833]
[-70.39028168 319.18405151]
[-79.70516205 330.94131470]
[-89.02005005 342.69854736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 210]
[47 209]
[48 208]
[49 207]
[50 206]
[51 205]
[53 203]
[55 201]
[56 200]
[57 199]
[58 198]
[59 197]
[60 196]
[62 194]
[63 193]
[70 192]
[71 191]
[72 190]
[75 187]
[76 186]
[77 185]
[78 184]
[79 183]
[80 164]
[81 163]
[82 162]
[83 158]
[84 157]
[85 156]
[87 155]
[88 154]
[90 151]
[91 150]
[92 149]
[93 148]
[94 147]
[96 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
