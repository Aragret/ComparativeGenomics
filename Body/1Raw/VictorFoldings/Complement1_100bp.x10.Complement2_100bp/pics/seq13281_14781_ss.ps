%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[66.62097168 699.71020508]
[55.29041672 709.55401611]
[43.15557861 718.38726807]
[30.30630302 726.14471436]
[16.83772278 732.76879883]
[2.84955668 738.21057129]
[-11.55462933 742.42968750]
[-26.26819038 745.39489746]
[-41.18218994 747.08428955]
[-56.18621063 747.48535156]
[-71.16916656 746.59509277]
[-86.02011871 744.42010498]
[-100.62911987 740.97644043]
[-114.88801575 736.28973389]
[-128.69122314 730.39459229]
[-141.93655396 723.33465576]
[-154.52593994 715.16223145]
[-166.36618042 705.93774414]
[-177.36959839 695.72961426]
[-187.45472717 684.61334229]
[-196.54692078 672.67126465]
[-204.57884216 659.99176025]
[-211.49102783 646.66876221]
[-217.23231506 632.80084229]
[-221.76017761 618.49066162]
[-225.04109192 603.84429932]
[-227.05078125 588.97003174]
[-227.77436829 573.97814941]
[-227.20648193 558.97949219]
[-225.35133362 544.08520508]
[-222.22265625 529.40551758]
[-217.84361267 515.04919434]
[-212.24662781 501.12237549]
[-205.47314453 487.72830200]
[-197.57330322 474.96609497]
[-188.60559082 462.93026733]
[-178.63641357 451.70986938]
[-167.73956299 441.38803101]
[-155.99574280 432.04116821]
[-143.49188232 423.73846436]
[-130.32057190 416.54138184]
[-116.57931519 410.50323486]
[-102.36985016 405.66870117]
[-87.79738617 402.07360840]
[-72.96981812 399.74453735]
[-57.99691391 398.69876099]
[-42.98954010 398.94400024]
[-28.05880356 400.47845459]
[-13.31524849 403.29074097]
[1.13196695 407.36007690]
[15.17587852 412.65631104]
[21.65537453 399.12796021]
[28.13487053 385.59960938]
[34.61436462 372.07125854]
[39.33449936 357.83328247]
[42.21977234 343.11337280]
[45.10504532 328.39349365]
[39.96033859 314.41561890]
[50.20763779 302.36141968]
[53.09291077 287.64154053]
[55.97818375 272.92163086]
[49.49214554 262.71096802]
[51.77544785 250.42396545]
[62.14027405 242.74717712]
[65.24438477 228.07186890]
[60.30835724 214.01893616]
[70.73399353 202.11865234]
[60.63605118 191.20216370]
[58.88172531 176.25605774]
[66.35194397 162.98770142]
[80.36455536 156.58824158]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[96.24726105 39.92955399]
[106.28818512 28.92823219]
[99.75331116 17.80805969]
[102.45950317 5.60722733]
[112.42353058 -1.25168335]
[107.70953369 -16.35429192]
[117.91313934 -27.20490074]
[121.01725006 -41.88020325]
[124.12136078 -56.55550766]
[126.89697266 -71.29647064]
[129.34269714 -86.09574127]
[123.95903778 -100.97279358]
[133.66795349 -112.26819611]
[136.11369324 -127.06746674]
[130.73002625 -141.94451904]
[140.43894958 -153.23991394]
[126.27416992 -158.29945374]
[113.24053955 -165.80706787]
[101.75704956 -175.52145386]
[92.19283295 -187.13031006]
[84.85533905 -200.26046753]
[79.98044586 -214.48983765]
[77.72486115 -229.36102295]
[78.16108704 -244.39596558]
[81.27510071 -259.11135864]
[86.96680450 -273.03414917]
[95.05323029 -285.71679688]
[105.27442932 -296.75158691]
[117.30184174 -305.78381348]
[130.74882507 -312.52313232]
[145.18312073 -316.75289917]
[160.14073181 -318.33712769]
[175.14082336 -317.22488403]
[189.70120239 -313.45196533]
[203.35383606 -307.13958740]
[215.65980530 -298.49075317]
[226.22357178 -287.78341675]
[234.70552063 -275.36181641]
[240.83299255 -261.62524414]
[244.40904236 -247.01524353]
[245.31869507 -232.00151062]
[243.53271484 -217.06665039]
[239.10850525 -202.69076538]
[232.18829346 -189.33596802]
[222.99453735 -177.43157959]
[211.82276917 -167.36026001]
[199.03211975 -159.44577026]
[185.03376770 -153.94252014]
[170.27767944 -151.02743530]
[155.23822021 -150.79418945]
[160.79681396 -136.97567749]
[150.91296387 -124.62173462]
[148.46722412 -109.82246399]
[154.02583313 -96.00395966]
[144.14196777 -83.65000916]
[141.69624329 -68.85073853]
[143.44131470 -65.78690338]
[143.78907776 -61.72561264]
[142.28689575 -57.33280563]
[138.79666138 -53.45139694]
[135.69255066 -38.77609253]
[132.58843994 -24.10079002]
[137.52445984 -10.04785824]
[127.09883881 1.85242677]
[133.42950439 18.21976089]
[121.00807953 31.81350327]
[126.15278625 45.79138947]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[95.03985596 159.69235229]
[105.26101685 171.21771240]
[106.71876526 186.37451172]
[99.06268311 199.33013916]
[85.40929413 205.22276306]
[90.12329102 220.32536316]
[79.91968536 231.17597961]
[76.81557465 245.85128784]
[82.92800140 263.22137451]
[70.69807434 275.80691528]
[67.81280518 290.52679443]
[64.92752838 305.24670410]
[69.86585999 320.27743530]
[59.82493591 331.27877808]
[56.93966293 345.99865723]
[54.05438995 360.71853638]
[63.58078003 349.13201904]
[76.31848907 341.21047974]
[90.92327881 337.78991699]
[105.85385895 339.23129272]
[119.53458405 345.38253784]
[130.52168274 355.59448242]
[137.65567017 368.78939819]
[140.18368530 383.57485962]
[137.83892822 398.39044189]
[130.86883545 411.67269897]
[120.00900269 422.01986694]
[106.40547943 428.34002686]
[91.49388885 429.96615601]
[76.84786987 426.72665405]
[64.01306915 418.96343994]
[54.34396362 407.49572754]
[48.86095810 393.53375244]
[48.14271164 378.55075073]
[41.66321564 392.07910156]
[35.18371964 405.60745239]
[28.70422363 419.13580322]
[41.63375854 426.75869751]
[53.86012650 435.46487427]
[65.29280090 445.18984985]
[75.84713745 455.86166382]
[85.44499969 467.40127563]
[94.01531982 479.72323608]
[101.49464417 492.73635864]
[107.82761383 506.34423828]
[112.96731567 520.44616699]
[116.87571716 534.93780518]
[119.52387238 549.71166992]
[120.89218140 564.65856934]
[120.97050476 579.66772461]
[119.75826263 594.62811279]
[117.26444244 609.42883301]
[113.50749207 623.96044922]
[108.51523590 638.11523438]
[102.32463837 651.78851318]
[94.98152161 664.87896729]
[86.54026794 677.28967285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 190]
[52 189]
[53 188]
[54 187]
[55 169]
[56 168]
[57 167]
[59 165]
[60 164]
[61 163]
[64 161]
[65 160]
[67 158]
[71 154]
[72 153]
[73 152]
[74 151]
[76 148]
[77 147]
[78 146]
[80 144]
[83 142]
[85 140]
[86 139]
[87 138]
[88 134]
[89 133]
[91 131]
[92 130]
[94 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
