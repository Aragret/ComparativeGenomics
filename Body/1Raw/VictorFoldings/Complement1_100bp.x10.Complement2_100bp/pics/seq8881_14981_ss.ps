%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[85.11734772 476.70825195]
[77.72022247 463.63394165]
[72.09298706 449.70596313]
[68.33191681 435.16259766]
[66.50136566 420.25271606]
[66.63266754 405.23147583]
[68.72357178 390.35589600]
[72.73829651 375.88049316]
[78.60814667 362.05300903]
[86.23268890 349.10998535]
[95.48144531 337.27294922]
[106.19615936 326.74441528]
[118.19349670 317.70455933]
[131.26815796 310.30807495]
[145.19642639 304.68148804]
[134.51849365 294.29733276]
[138.55342102 278.99929810]
[134.79713440 264.47723389]
[131.04083252 249.95516968]
[120.36289215 239.57099915]
[124.39781952 224.27296448]
[120.64152527 209.75090027]
[116.88522339 195.22885132]
[113.12892151 180.70678711]
[109.37261963 166.18472290]
[94.41256714 166.61114502]
[79.73260498 163.69848633]
[66.06859589 157.59274292]
[54.10551071 148.60000610]
[44.44301605 137.17103577]
[37.56548309 123.87876129]
[33.81766510 109.38949585]
[33.38743210 94.42955017]
[36.29635239 79.74884033]
[42.39860535 66.08328247]
[51.38830185 54.11790085]
[62.81480026 44.45249557]
[76.10532379 37.57157135]
[72.34902191 23.04951286]
[68.59272003 8.52745438]
[64.83641815 -5.99460506]
[61.08012009 -20.51666451]
[50.13351059 -31.93955040]
[54.43711472 -46.19887161]
[39.00999832 -45.29184723]
[23.70570183 -47.40219116]
[9.10856533 -52.44750214]
[-4.22442675 -60.23335266]
[-15.78489494 -70.46077728]
[-25.13245392 -82.73777008]
[-31.91148758 -96.59428406]
[-35.86467361 -111.50022125]
[-36.84275818 -126.88576508]
[-34.81018066 -142.16310120]
[-29.84637451 -156.74891663]
[-22.14265442 -170.08663940]
[-11.99485016 -181.66770935]
[0.20805873 -191.05094910]
[13.99884796 -197.87937927]
[2.88338304 -209.13801575]
[6.97421074 -223.45983887]
[3.00211453 -237.92436218]
[-0.96998173 -252.38888550]
[-4.94207811 -266.85339355]
[-19.72990227 -264.27172852]
[-34.69617081 -263.10745239]
[-49.70534134 -263.37109375]
[-64.62149048 -265.06024170]
[-79.30952454 -268.15966797]
[-93.63643646 -272.64123535]
[-107.47245789 -278.46438599]
[-120.69229889 -285.57638550]
[-133.17623901 -293.91281128]
[-144.81120300 -303.39819336]
[-155.49182129 -313.94659424]
[-165.12138367 -325.46252441]
[-173.61267090 -337.84164429]
[-180.88879395 -350.97189331]
[-186.88383484 -364.73431396]
[-191.54351807 -379.00427246]
[-194.82563782 -393.65255737]
[-196.70045471 -408.54650879]
[-197.15103149 -423.55123901]
[-196.17324829 -438.53085327]
[-193.77597046 -453.34967041]
[-189.98092651 -467.87353516]
[-184.82244873 -481.97088623]
[-178.34729004 -495.51403809]
[-170.61408997 -508.38034058]
[-161.69285583 -520.45330811]
[-151.66439819 -531.62359619]
[-140.61953735 -541.78997803]
[-128.65830994 -550.86047363]
[-115.88902283 -558.75286865]
[-102.42733002 -565.39575195]
[-88.39514160 -570.72888184]
[-73.91954041 -574.70404053]
[-59.13161850 -577.28515625]
[-44.16530991 -578.44891357]
[-29.15614510 -578.18469238]
[-14.24005985 -576.49499512]
[0.44786426 -573.39508057]
[14.77460670 -568.91296387]
[28.61042023 -563.08929443]
[41.83000183 -555.97680664]
[54.31363297 -547.63995361]
[65.94824982 -538.15411377]
[76.62849426 -527.60534668]
[86.25763702 -516.08905029]
[94.74847412 -503.70962524]
[102.02410889 -490.57913208]
[108.01864624 -476.81649780]
[112.67781067 -462.54635620]
[115.95939636 -447.89794922]
[117.83367920 -433.00390625]
[118.28369904 -417.99917603]
[117.30537415 -403.01959229]
[114.90756226 -388.20086670]
[111.11197662 -373.67715454]
[105.95299530 -359.57998657]
[99.47734070 -346.03707886]
[91.74365997 -333.17102051]
[82.82199097 -321.09838867]
[72.79312897 -309.92849731]
[61.74790192 -299.76248169]
[49.78633881 -290.69244385]
[37.01676559 -282.80050659]
[23.55482864 -276.15814209]
[9.52244568 -270.82550049]
[13.49454212 -256.36099243]
[17.46663857 -241.89645386]
[21.43873405 -227.43193054]
[32.27008820 -217.20788574]
[28.46337128 -201.85147095]
[42.99059677 -203.03694153]
[57.49151993 -201.52400208]
[71.46907806 -197.36299133]
[84.44384003 -190.69502258]
[95.97051239 -181.74725342]
[105.65316010 -170.82508850]
[113.15884399 -158.30183411]
[118.22904968 -144.60580444]
[120.68861389 -130.20584106]
[120.45175171 -115.59513855]
[117.52507019 -101.27438354]
[112.00734711 -87.73463440]
[104.08628082 -75.44043732]
[94.03201294 -64.81391144]
[82.18798828 -56.22024918]
[68.95917511 -49.95517349]
[79.63710785 -39.57100296]
[75.60218048 -24.27296448]
[79.35847473 -9.75090599]
[83.11477661 4.77115345]
[86.87107849 19.29321289]
[90.62738037 33.81527328]
[105.58743286 33.38885498]
[120.26739502 36.30151749]
[133.93139648 42.40725708]
[145.89448547 51.40000153]
[155.55697632 62.82896423]
[162.43452454 76.12123871]
[166.18234253 90.61050415]
[166.61256409 105.57044983]
[163.70364380 120.25115967]
[157.60139465 133.91671753]
[148.61169434 145.88209534]
[137.18519592 155.54750061]
[123.89467621 162.42842102]
[127.65097809 176.95048523]
[131.40728760 191.47254944]
[135.16357422 205.99459839]
[138.91987610 220.51666260]
[149.86648560 231.93954468]
[145.56288147 246.19886780]
[149.31918335 260.72091675]
[153.07548523 275.24298096]
[164.02209473 286.66586304]
[159.71849060 300.92520142]
[174.62809753 299.09252930]
[189.64935303 299.22167969]
[204.52523804 301.31045532]
[219.00120544 305.32312012]
[232.82955933 311.19100952]
[245.77365112 318.81369019]
[257.61199951 328.06076050]
[268.14205933 338.77395630]
[277.18362427 350.77001953]
[284.58200073 363.84362793]
[290.21057129 377.77108765]
[293.97302246 392.31408691]
[295.80499268 407.22378540]
[295.67510986 422.24502563]
[293.58563232 437.12081909]
[289.57226562 451.59658813]
[283.70373535 465.42465210]
[276.08044434 478.36837769]
[266.83279419 490.20629883]
[256.11907959 500.73587036]
[244.12261963 509.77685547]
[231.04864502 517.17462158]
[217.12092590 522.80249023]
[202.57774353 526.56427002]
[187.66795349 528.39550781]
[172.64671326 528.26495361]
[157.77102661 526.17474365]
[143.29544067 522.16070557]
[129.46765137 516.29150391]
[116.52428436 508.66757202]
[104.68680573 499.41940308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 179]
[17 177]
[18 176]
[19 175]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[44 150]
[59 134]
[61 132]
[62 131]
[63 130]
[64 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
