%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-68.26215363 38.79131699]
[-62.55025101 24.92622185]
[-55.69818115 11.58771420]
[-68.42021942 3.64102983]
[-81.14225006 -4.30565453]
[-93.86428833 -12.25233936]
[-106.58632660 -20.19902420]
[-119.30836487 -28.14570808]
[-132.03039551 -36.09239197]
[-144.75244141 -44.03907776]
[-157.47447205 -51.98575974]
[-166.06738281 -39.68688965]
[-175.28202820 -27.84668159]
[-185.09396362 -16.49652863]
[-195.47720337 -5.66653442]
[-206.40417480 4.61458349]
[-217.84593201 14.31956196]
[-229.77210999 23.42266273]
[-242.15109253 31.89974976]
[-254.95005798 39.72834015]
[-268.13507080 46.88767242]
[-281.67114258 53.35876465]
[-295.52236938 59.12445831]
[-309.65206909 64.16945648]
[-324.02273560 68.48038483]
[-338.59628296 72.04581451]
[-353.33404541 74.85629272]
[-368.19692993 76.90435791]
[-383.14553833 78.18457794]
[-398.14025879 78.69356537]
[-413.14129639 78.42996979]
[-428.10885620 77.39448547]
[-443.00326538 75.58986664]
[-457.78503418 73.02088165]
[-472.41494751 69.69436646]
[-486.85421753 65.61912537]
[-501.06457520 60.80596924]
[-515.00830078 55.26766586]
[-528.64843750 49.01889801]
[-541.94879150 42.07623672]
[-554.87414551 34.45809555]
[-567.39013672 26.18467140]
[-579.46362305 17.27790833]
[-591.06262207 7.76142311]
[-602.15637207 -2.33954644]
[-612.71539307 -12.99821472]
[-622.71173096 -24.18631744]
[-632.11883545 -35.87418747]
[-640.91180420 -48.03082275]
[-649.06732178 -60.62399673]
[-656.56372070 -73.62030792]
[-663.38116455 -86.98529053]
[-669.50158691 -100.68350983]
[-674.90863037 -114.67863464]
[-679.58813477 -128.93356323]
[-683.52758789 -143.41047668]
[-686.71655273 -158.07098389]
[-689.14660645 -172.87623596]
[-690.81121826 -187.78694153]
[-691.70611572 -202.76356506]
[-691.82879639 -217.76640320]
[-691.17901611 -232.75567627]
[-689.75842285 -247.69160461]
[-687.57086182 -262.53460693]
[-684.62207031 -277.24533081]
[-680.91992188 -291.78472900]
[-676.47424316 -306.11428833]
[-671.29675293 -320.19595337]
[-665.40118408 -333.99246216]
[-658.80328369 -347.46713257]
[-651.52038574 -360.58432007]
[-643.57196045 -373.30920410]
[-634.97900391 -385.60800171]
[-625.76428223 -397.44818115]
[-615.95227051 -408.79827881]
[-605.56896973 -419.62820435]
[-594.64190674 -429.90927124]
[-583.20013428 -439.61416626]
[-571.27386475 -448.71719360]
[-558.89483643 -457.19421387]
[-546.09582520 -465.02273560]
[-532.91082764 -472.18200684]
[-519.37469482 -478.65301514]
[-505.52340698 -484.41860962]
[-491.39367676 -489.46353149]
[-477.02301025 -493.77438354]
[-462.44943237 -497.33972168]
[-447.71166992 -500.15011597]
[-432.84875488 -502.19808960]
[-417.90011597 -503.47824097]
[-402.90542603 -503.98715210]
[-387.90438843 -503.72344971]
[-372.93682861 -502.68789673]
[-358.04241943 -500.88317871]
[-343.26068115 -498.31411743]
[-328.63076782 -494.98751831]
[-314.19152832 -490.91220093]
[-299.98120117 -486.09896851]
[-286.03750610 -480.56057739]
[-272.39743042 -474.31173706]
[-259.09710693 -467.36898804]
[-246.17181396 -459.75076294]
[-233.65583801 -451.47726440]
[-221.58238220 -442.57043457]
[-209.98342896 -433.05389404]
[-198.88977051 -422.95285034]
[-188.33079529 -412.29412842]
[-178.33453369 -401.10595703]
[-168.92747498 -389.41806030]
[-160.13456726 -377.26135254]
[-151.97914124 -364.66815186]
[-144.48280334 -351.67178345]
[-137.66545105 -338.30676270]
[-131.54513550 -324.60852051]
[-126.13812256 -310.61334229]
[-121.45873260 -296.35839844]
[-117.51937103 -281.88146973]
[-114.33049011 -267.22091675]
[-111.90054321 -252.41567993]
[-110.23596954 -237.50495911]
[-109.34120178 -222.52832031]
[-109.21858978 -207.52548218]
[-109.86847687 -192.53622437]
[-111.28913116 -177.60029602]
[-113.47678375 -162.75729370]
[-116.42563629 -148.04660034]
[-120.12786865 -133.50721741]
[-124.57366180 -119.17769623]
[-129.75123596 -105.09603882]
[-135.64683533 -91.29959106]
[-142.24485779 -77.82492828]
[-149.52778625 -64.70779419]
[-136.80575562 -56.76111221]
[-124.08371735 -48.81443024]
[-111.36167908 -40.86774445]
[-98.63964081 -32.92105865]
[-85.91760254 -24.97437477]
[-73.19557190 -17.02769089]
[-60.47353363 -9.08100605]
[-47.75149536 -1.13432205]
[-38.77064514 -13.14311028]
[-28.81642723 -24.35828781]
[-17.95866203 -34.70118713]
[-6.27350760 -44.09926224]
[6.15707350 -52.48659134]
[19.24588966 -59.80434799]
[32.90113449 -66.00119781]
[47.02702713 -71.03368378]
[61.52447891 -74.86649323]
[76.29180908 -77.47275543]
[91.22544098 -78.83417511]
[106.22061157 -78.94121552]
[121.17214966 -77.79312897]
[135.97518921 -75.39795685]
[150.52587891 -71.77249908]
[164.72216797 -66.94219208]
[178.46449280 -60.94091797]
[191.65644836 -53.81076431]
[204.20550537 -45.60174942]
[216.02363586 -36.37145233]
[227.02795410 -26.18461227]
[237.14126587 -15.11268616]
[246.29263306 -3.23333359]
[254.41787720 9.37012100]
[261.45999146 22.60927391]
[267.36959839 36.39126205]
[272.10525513 50.61941910]
[275.63369751 65.19393921]
[277.93020630 80.01260376]
[278.97869873 94.97145844]
[278.77175903 109.96558380]
[277.31088257 124.88980865]
[274.60632324 139.63945007]
[270.67703247 154.11105347]
[265.55056763 168.20310974]
[259.26290894 181.81677246]
[251.85812378 194.85655212]
[243.38818359 207.23100281]
[233.91247559 218.85328674]
[223.49748230 229.64192200]
[212.21624756 239.52120972]
[200.14790344 248.42187500]
[187.37710571 256.28146362]
[173.99342346 263.04486084]
[160.09072876 268.66464233]
[145.76654053 273.10134888]
[131.12133789 276.32391357]
[116.25785065 278.30966187]
[101.28031921 279.04473877]
[86.29381561 278.52392578]
[71.40344238 276.75094604]
[56.71365738 273.73815918]
[42.32748795 269.50674438]
[28.34584999 264.08636475]
[14.86680984 257.51507568]
[1.98491240 249.83891296]
[-10.20948505 241.11174011]
[-21.63084793 231.39479065]
[-32.19906616 220.75621033]
[-41.84000778 209.27061462]
[-50.48605347 197.01856995]
[-58.07655334 184.08602905]
[-64.55827332 170.56367493]
[-69.88573456 156.54637146]
[-74.02159119 142.13243103]
[-76.93681335 127.42298126]
[-78.61096191 112.52117157]
[-79.03229523 97.53153992]
[-78.19785309 82.55921936]
[-76.11349487 67.70922852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[6 137]
[7 136]
[8 135]
[9 134]
[10 133]
[11 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
