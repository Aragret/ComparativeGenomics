%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[-58.71900558 804.16406250]
[-73.44416809 807.03466797]
[-88.27986145 809.26470947]
[-103.19822693 810.84997559]
[-118.17126465 811.78753662]
[-133.17086792 812.07562256]
[-148.16885376 811.71362305]
[-163.13710022 810.70233154]
[-178.04747009 809.04351807]
[-192.87199402 806.74041748]
[-207.58283997 803.79724121]
[-222.15237427 800.21960449]
[-236.55325317 796.01422119]
[-250.75843811 791.18890381]
[-264.74127197 785.75280762]
[-278.47549438 779.71606445]
[-291.93530273 773.09002686]
[-305.09545898 765.88720703]
[-317.93124390 758.12103271]
[-330.41854858 749.80609131]
[-342.53396606 740.95800781]
[-354.25469971 731.59344482]
[-365.55877686 721.72998047]
[-376.42495728 711.38604736]
[-386.83285522 700.58111572]
[-396.76293945 689.33544922]
[-406.19653320 677.67022705]
[-415.11596680 665.60723877]
[-423.50445557 653.16925049]
[-431.34628296 640.37951660]
[-438.62670898 627.26214600]
[-445.33209229 613.84167480]
[-451.44979858 600.14331055]
[-456.96835327 586.19281006]
[-461.87744141 572.01635742]
[-466.16781616 557.64056396]
[-469.83139038 543.09240723]
[-472.86132812 528.39923096]
[-475.25195312 513.58856201]
[-476.99871826 498.68823242]
[-478.09841919 483.72622681]
[-478.54891968 468.73062134]
[-478.34939575 453.72958374]
[-477.50027466 438.75128174]
[-476.00308228 423.82379150]
[-473.86065674 408.97521973]
[-471.07702637 394.23333740]
[-467.65737915 379.62591553]
[-463.60821533 365.18032837]
[-458.93704224 350.92370605]
[-453.65270996 336.88281250]
[-447.76507568 323.08401489]
[-441.28524780 309.55322266]
[-434.22534180 296.31582642]
[-426.59863281 283.39669800]
[-418.41946411 270.82003784]
[-409.70315552 258.60952759]
[-400.46606445 246.78804016]
[-390.72558594 235.37779236]
[-380.49993896 224.40020752]
[-369.80838013 213.87590027]
[-358.67095947 203.82460022]
[-347.10858154 194.26519775]
[-335.14294434 185.21563721]
[-322.79650879 176.69291687]
[-310.09249878 168.71302795]
[-297.05471802 161.29093933]
[-283.70767212 154.44061279]
[-270.07638550 148.17488098]
[-256.18649292 142.50553894]
[-242.06404114 137.44320679]
[-227.73554993 132.99739075]
[-213.22792053 129.17643738]
[-198.56838989 125.98752594]
[-183.78448486 123.43664551]
[-168.90396118 121.52857208]
[-153.95474243 120.26690674]
[-138.96490479 119.65399933]
[-123.96258545 119.69101715]
[-108.97595978 120.37787628]
[-94.03314972 121.71329498]
[-79.16221619 123.69476318]
[-64.39107513 126.31856537]
[-49.74746323 129.57977295]
[-35.25886536 133.47225952]
[-20.95248795 137.98872375]
[-6.85518742 143.12068176]
[7.00656986 148.85850525]
[20.60676003 155.19142151]
[33.91984940 162.10752869]
[46.92084122 169.59384155]
[54.96201706 156.93132019]
[63.00318909 144.26879883]
[71.04436493 131.60627747]
[79.08553314 118.94374847]
[87.12670898 106.28121948]
[87.90818024 92.32124329]
[100.21076965 85.67760468]
[108.25193787 73.01508331]
[96.63594818 63.49530411]
[86.25216675 52.64475250]
[77.25202179 40.62166214]
[69.76675415 27.60136604]
[63.90552902 13.77373505]
[59.75381470 -0.65958142]
[57.37215805 -15.48810387]
[56.79528809 -30.49558830]
[58.03162384 -45.46318054]
[61.06312943 -60.17261124]
[65.84559631 -74.40937042]
[72.30928802 -87.96585083]
[80.35993958 -100.64434814]
[89.88014984 -112.25997925]
[100.73109436 -122.64335632]
[112.75451660 -131.64305115]
[125.77509308 -139.12783813]
[139.60295105 -144.98854065]
[154.03642273 -149.13972473]
[168.86503601 -151.52082825]
[183.87252808 -152.09712219]
[198.84008789 -150.86022949]
[213.54939270 -147.82818604]
[227.78598022 -143.04518127]
[241.34220886 -136.58097839]
[254.02041626 -128.52984619]
[265.63568115 -119.00920868]
[276.01864624 -108.15788269]
[285.01791382 -96.13411713]
[292.50219727 -83.11325836]
[298.36239624 -69.28519440]
[302.51303101 -54.85156250]
[304.89358521 -40.02286530]
[305.46932983 -25.01533699]
[304.23187256 -10.04783630]
[301.19924927 4.66136742]
[296.41574097 18.89776993]
[289.95101929 32.45376205]
[281.89941406 45.13166046]
[272.37835693 56.74658203]
[261.52664185 67.12915039]
[249.50253296 76.12794495]
[236.48139954 83.61175537]
[222.65310669 89.47142792]
[208.21932983 93.62152100]
[193.39053345 96.00151825]
[178.38298035 96.57669830]
[163.41552734 95.33868408]
[148.70643616 92.30553436]
[134.47021484 87.52146149]
[120.91446686 81.05625153]
[112.87329102 93.71878052]
[112.09181976 107.67875671]
[99.78923035 114.32239532]
[91.74806213 126.98491669]
[83.70688629 139.64744568]
[75.66571045 152.30996704]
[67.62454224 164.97248840]
[59.58336639 177.63502502]
[71.88764191 186.21847534]
[83.80853271 195.32688904]
[95.32367706 204.94314575]
[106.41144562 215.04919434]
[117.05101776 225.62606812]
[127.22243500 236.65391541]
[136.90658569 248.11201477]
[146.08529663 259.97888184]
[154.74133301 272.23217773]
[162.85844421 284.84896851]
[170.42138672 297.80554199]
[177.41596985 311.07757568]
[183.82907104 324.64013672]
[189.64862061 338.46777344]
[194.86372375 352.53454590]
[199.46456909 366.81399536]
[203.44252014 381.27935791]
[206.79013062 395.90347290]
[209.50108337 410.65887451]
[211.57031250 425.51785278]
[212.99392700 440.45251465]
[213.76925659 455.43481445]
[213.89483643 470.43664551]
[213.37045288 485.42984009]
[212.19705200 500.38626099]
[210.37687683 515.27777100]
[207.91331482 530.07647705]
[204.81100464 544.75457764]
[201.07577515 559.28454590]
[196.71463013 573.63903809]
[191.73576355 587.79113770]
[186.14851379 601.71423340]
[179.96336365 615.38226318]
[173.19195557 628.76953125]
[165.84698486 641.85089111]
[157.94223022 654.60180664]
[149.49253845 666.99835205]
[140.51377869 679.01721191]
[131.02281189 690.63580322]
[121.03744507 701.83239746]
[110.57642365 712.58587646]
[99.65940094 722.87615967]
[88.30686188 732.68383789]
[76.54012299 741.99053955]
[64.38127136 750.77880859]
[51.85314178 759.03210449]
[38.97924423 766.73492432]
[25.78375816 773.87286377]
[12.29145050 780.43243408]
[-1.47234666 786.40142822]
[-15.48179245 791.76861572]
[-29.71058655 796.52380371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 158]
[92 157]
[93 156]
[94 155]
[95 154]
[96 153]
[98 151]
[99 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
