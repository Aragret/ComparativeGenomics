%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[155.44125366 372.26226807]
[159.81733704 357.89462280]
[165.92591858 344.17364502]
[173.67437744 331.30737305]
[182.94526672 319.49084473]
[193.59802246 308.90319824]
[205.47116089 299.70492554]
[197.81057739 286.80859375]
[190.14997864 273.91226196]
[182.48937988 261.01596069]
[174.82878113 248.11962891]
[167.16818237 235.22329712]
[159.50758362 222.32696533]
[155.18269348 220.30104065]
[152.08457947 215.53672791]
[151.81747437 208.93064880]
[144.54425049 195.81195068]
[131.60614014 188.43261719]
[131.68156433 172.61158752]
[124.40834045 159.49290466]
[110.06420898 155.64822388]
[102.50123596 142.44761658]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.97693634 66.72629547]
[65.70370483 53.60760117]
[58.43047714 40.48890686]
[51.15724945 27.37021255]
[44.25924683 21.38227654]
[43.87504959 14.00161266]
[36.79794312 0.77608556]
[29.72083855 -12.44944191]
[25.95319748 -14.60787773]
[23.33200073 -17.55641174]
[21.96485710 -20.83761978]
[21.79976082 -24.00611305]
[22.64285469 -26.67956352]
[16.36549377 -40.30287933]
[10.08813381 -53.92619324]
[3.81077290 -67.54951477]
[-2.46658778 -81.17282867]
[-17.68648911 -81.51342010]
[-31.19416809 -88.40033722]
[-40.33478928 -100.41987610]
[-43.33799362 -115.15560150]
[-39.66060257 -129.67408752]
[-30.08392334 -141.10879517]
[-36.36128616 -154.73211670]
[-42.63864517 -168.35542297]
[-46.27113342 -170.73429871]
[-48.71218491 -173.83361816]
[-49.88160324 -177.19038391]
[-49.85781479 -180.36308289]
[-48.85708618 -182.98161316]
[-54.31244278 -196.95440674]
[-59.76780319 -210.92720032]
[-65.22315979 -224.90000916]
[-70.67851257 -238.87280273]
[-85.12384796 -234.78771973]
[-99.89601898 -232.11590576]
[-114.85709381 -230.88230896]
[-129.86738586 -231.09843445]
[-144.78674316 -232.76226807]
[-159.47586060 -235.85827637]
[-173.79759216 -240.35755920]
[-187.61820984 -246.21809387]
[-200.80868530 -253.38517761]
[-213.24584961 -261.79187012]
[-224.81356812 -271.35968018]
[-235.40385437 -281.99929810]
[-244.91780090 -293.61138916]
[-253.26661682 -306.08746338]
[-260.37231445 -319.31112671]
[-266.16854858 -333.15881348]
[-270.60122681 -347.50131226]
[-273.62893677 -362.20465088]
[-275.22338867 -377.13159180]
[-275.36975098 -392.14273071]
[-274.06665039 -407.09790039]
[-271.32620239 -421.85748291]
[-267.17404175 -436.28369141]
[-261.64889526 -450.24179077]
[-254.80239868 -463.60144043]
[-246.69844055 -476.23797607]
[-237.41271973 -488.03332520]
[-227.03190613 -498.87741089]
[-215.65292358 -508.66897583]
[-203.38204956 -517.31658936]
[-190.33383179 -524.73950195]
[-176.63011169 -530.86840820]
[-162.39883423 -535.64605713]
[-147.77287292 -539.02789307]
[-132.88879395 -540.98236084]
[-117.88557434 -541.49108887]
[-102.90328979 -540.54943848]
[-88.08183289 -538.16619873]
[-73.55959320 -534.36352539]
[-59.47216415 -529.17700195]
[-45.95107269 -522.65509033]
[-33.12257385 -514.85858154]
[-21.10644150 -505.86038208]
[-10.01487160 -495.74441528]
[0.04857639 -484.60519409]
[8.98993874 -472.54669189]
[16.72573090 -459.68148804]
[23.18372345 -446.12976074]
[28.30361938 -432.01797485]
[32.03761292 -417.47793579]
[34.35084534 -402.64538574]
[35.22171021 -387.65881348]
[34.64207840 -372.65817261]
[32.61736679 -357.78350830]
[29.16647339 -343.17367554]
[24.32162285 -328.96511841]
[18.12805176 -315.29049683]
[10.64358902 -302.27749634]
[1.93811464 -290.04760742]
[-7.90708733 -278.71502686]
[-18.80009270 -268.38555908]
[-30.63919449 -259.15563965]
[-43.31385040 -251.11148071]
[-56.70571899 -244.32815552]
[-51.25036240 -230.35536194]
[-45.79500198 -216.38256836]
[-40.33964539 -202.40975952]
[-34.88428879 -188.43696594]
[-29.01532936 -174.63279724]
[-22.73796844 -161.00947571]
[-16.46060753 -147.38615417]
[-1.54608142 -147.23651123]
[11.87966156 -140.59883118]
[21.12995911 -128.74163818]
[24.32783508 -113.98380280]
[20.78666115 -99.24110413]
[11.15672874 -87.45018768]
[17.43408966 -73.82687378]
[23.71145058 -60.20355606]
[29.98880959 -46.58023834]
[36.26617050 -32.95692444]
[42.94636536 -19.52654648]
[50.02347183 -6.30101967]
[57.10057831 6.92450762]
[64.27593994 20.09698296]
[71.54917145 33.21567917]
[78.82240295 46.33436966]
[86.09563446 59.45306396]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[134.67623901 124.60924530]
[141.86544800 138.01707458]
[137.52703857 152.21966553]
[144.80026245 165.33836365]
[158.25860596 173.65603638]
[157.66293335 188.53872681]
[164.93617249 201.65742493]
[172.40391541 214.66636658]
[180.06451416 227.56269836]
[187.72511292 240.45903015]
[195.38569641 253.35534668]
[203.04629517 266.25167847]
[210.70689392 279.14801025]
[218.36749268 292.04434204]
[232.12469482 286.01782227]
[246.51823425 281.72760010]
[261.32989502 279.23876953]
[276.33514404 278.58901978]
[291.30648804 279.78820801]
[306.01699829 282.81817627]
[320.24365234 287.63296509]
[333.77078247 294.15957642]
[346.39328003 302.29910278]
[357.91986084 311.92810059]
[368.17572021 322.90063477]
[377.00543213 335.05038452]
[384.27511597 348.19311523]
[389.87454224 362.12960815]
[393.71887207 376.64859009]
[395.74981689 391.52993774]
[395.93655396 406.54809570]
[394.27627563 421.47534180]
[390.79415894 436.08544922]
[385.54296875 450.15686035]
[378.60235596 463.47628784]
[370.07748413 475.84182739]
[360.09762573 487.06597900]
[348.81405640 496.97863770]
[336.39782715 505.42950439]
[323.03717041 512.29046631]
[308.93466187 517.45751953]
[294.30404663 520.85229492]
[279.36712646 522.42340088]
[264.35037231 522.14697266]
[249.48139954 520.02716064]
[234.98564148 516.09619141]
[221.08283997 510.41363525]
[207.98374939 503.06558228]
[195.88697815 494.16348267]
[184.97587585 483.84225464]
[175.41587830 472.25839233]
[167.35189819 459.58749390]
[160.90617371 446.02163696]
[156.17645264 431.76647949]
[153.23440552 417.03814697]
[152.12464905 402.05990601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[16 161]
[17 160]
[19 158]
[20 157]
[23 154]
[24 153]
[26 151]
[27 150]
[28 149]
[29 148]
[30 147]
[31 146]
[33 145]
[34 144]
[35 143]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[50 132]
[51 131]
[52 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
