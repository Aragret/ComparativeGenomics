%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[29.92685509 906.91735840]
[14.92595959 907.12249756]
[-0.07000128 906.68646240]
[-15.03363323 905.61004639]
[-29.93760490 903.89526367]
[-44.75468826 901.54510498]
[-59.45782089 898.56402588]
[-74.02014160 894.95739746]
[-88.41505432 890.73187256]
[-102.61625671 885.89501953]
[-116.59781647 880.45581055]
[-130.33419800 874.42413330]
[-143.80029297 867.81103516]
[-156.97151184 860.62860107]
[-169.82379150 852.88983154]
[-182.33366394 844.60900879]
[-194.47827148 835.80120850]
[-206.23542786 826.48254395]
[-217.58366394 816.66998291]
[-228.50225830 806.38146973]
[-238.97123718 795.63580322]
[-248.97149658 784.45257568]
[-258.48477173 772.85229492]
[-267.49368286 760.85614014]
[-275.98175049 748.48596191]
[-283.93353271 735.76434326]
[-291.33441162 722.71459961]
[-298.17095947 709.36059570]
[-304.43063354 695.72656250]
[-310.10202026 681.83758545]
[-315.17474365 667.71893311]
[-319.63952637 653.39642334]
[-323.48825073 638.89617920]
[-326.71389771 624.24475098]
[-329.31051636 609.46887207]
[-331.27337646 594.59558105]
[-332.59893799 579.65191650]
[-333.28475952 564.66534424]
[-333.32955933 549.66308594]
[-332.73327637 534.67266846]
[-331.49700928 519.72137451]
[-329.62298584 504.83657837]
[-327.11468506 490.04544067]
[-323.97662354 475.37503052]
[-320.21456909 460.85208130]
[-315.83538818 446.50314331]
[-310.84707642 432.35443115]
[-305.25875854 418.43182373]
[-299.08065796 404.76068115]
[-292.32400513 391.36602783]
[-285.00115967 378.27233887]
[-277.12554932 365.50347900]
[-268.71148682 353.08282471]
[-259.77441406 341.03302002]
[-250.33058167 329.37612915]
[-240.39729309 318.13342285]
[-229.99269104 307.32540894]
[-219.13574219 296.97186279]
[-207.84632874 287.09167480]
[-196.14503479 277.70294189]
[-184.05325317 268.82275391]
[-171.59306335 260.46734619]
[-158.78723145 252.65199280]
[-145.65914917 245.39097595]
[-132.23278809 238.69755554]
[-118.53269196 232.58395386]
[-104.58386993 227.06132507]
[-90.41180420 222.13978577]
[-76.04238892 217.82830811]
[-61.50186920 214.13476562]
[-46.81680679 211.06590271]
[-32.01402283 208.62733459]
[-17.12056160 206.82353210]
[-2.16362524 205.65774536]
[12.82946396 205.13215637]
[27.83131790 205.24768066]
[42.81453323 206.00413513]
[57.75173950 207.40011597]
[72.61565399 209.43309021]
[75.28144836 194.67187500]
[77.94725037 179.91065979]
[80.61304474 165.14944458]
[83.27883911 150.38822937]
[85.94463348 135.62701416]
[88.61042786 120.86579132]
[91.27622223 106.10457611]
[92.72563934 91.17476654]
[92.94897461 76.17642975]
[93.17230225 61.17808914]
[78.41369629 58.27576065]
[64.41058350 52.78462219]
[51.61309814 44.88119507]
[40.43262863 34.81954575]
[31.22857666 22.92310905]
[24.29681587 9.57430840]
[19.86017609 -4.79774761]
[18.06127357 -19.73105812]
[18.95793915 -34.74557495]
[22.52134514 -49.35865021]
[28.63694572 -63.10052872]
[37.10815048 -75.52946472]
[47.66263962 -86.24592590]
[59.96113586 -94.90541840]
[73.60829163 -101.22956848]
[88.16540527 -105.01509094]
[103.16452789 -106.14029694]
[118.12349701 -104.56901550]
[132.56144714 -100.35174561]
[146.01426697 -93.62406921]
[158.04948425 -84.60224915]
[168.28022766 -73.57629395]
[176.37760925 -60.90064240]
[182.08135986 -46.98277283]
[185.20809937 -32.27008438]
[185.65733337 -17.23552513]
[183.41459656 -2.36239529]
[178.55201721 11.87119389]
[171.22589111 25.00769234]
[161.67172241 36.62481689]
[150.19662476 46.34912109]
[137.16950989 53.86801529]
[123.00910187 58.93979263]
[108.17063904 61.40141678]
[107.94731140 76.39975739]
[107.72398376 91.39809418]
[116.36539459 79.13734436]
[129.67250061 72.21485138]
[144.67245483 72.17710876]
[158.01422119 79.03255463]
[166.71723938 91.24965668]
[168.83720398 106.09909058]
[163.90051270 120.26345825]
[153.01005554 130.57839966]
[138.59878540 134.73951721]
[123.88619232 131.81723022]
[112.15912628 122.46437073]
[106.03744507 108.77037048]
[103.37164307 123.53158569]
[100.70584869 138.29280090]
[98.04005432 153.05401611]
[95.37425995 167.81523132]
[92.70846558 182.57646179]
[90.04267120 197.33767700]
[87.37687683 212.09889221]
[102.01295471 215.39344788]
[116.49488831 219.31039429]
[130.79623413 223.84257507]
[144.89083862 228.98171997]
[158.75299072 234.71841431]
[172.35736084 241.04220581]
[185.67907715 247.94152832]
[198.69383240 255.40379333]
[211.37783813 263.41534424]
[223.70791626 271.96157837]
[235.66156006 281.02685547]
[247.21693420 290.59463501]
[258.35290527 300.64743042]
[269.04916382 311.16690063]
[279.28616333 322.13378906]
[289.04519653 333.52810669]
[298.30844116 345.32901001]
[307.05899048 357.51495361]
[315.28082275 370.06365967]
[322.95895386 382.95223999]
[330.07934570 396.15710449]
[336.62896729 409.65420532]
[342.59591675 423.41882324]
[347.96923828 437.42584229]
[352.73913574 451.64965820]
[356.89691162 466.06430054]
[360.43493652 480.64343262]
[363.34677124 495.36044312]
[365.62707520 510.18841553]
[367.27172852 525.10028076]
[368.27767944 540.06884766]
[368.64312744 555.06665039]
[368.36737061 570.06646729]
[367.45092773 585.04071045]
[365.89547729 599.96215820]
[363.70385742 614.80352783]
[360.88009644 629.53765869]
[357.42929077 644.13769531]
[353.35778809 658.57696533]
[348.67303467 672.82904053]
[343.38357544 686.86791992]
[337.49905396 700.66796875]
[331.03021240 714.20397949]
[323.98892212 727.45123291]
[316.38800049 740.38549805]
[308.24133301 752.98315430]
[299.56384277 765.22119141]
[290.37130737 777.07727051]
[280.68060303 788.52972412]
[270.50936890 799.55761719]
[259.87619019 810.14086914]
[248.80050659 820.26007080]
[237.30255127 829.89678955]
[225.40333557 839.03338623]
[213.12457275 847.65313721]
[200.48870850 855.74041748]
[187.51881409 863.28033447]
[174.23857117 870.25921631]
[160.67227173 876.66424561]
[146.84466553 882.48370361]
[132.78103638 887.70703125]
[118.50704956 892.32464600]
[104.04879761 896.32812500]
[89.43267822 899.71014404]
[74.68539429 902.46453857]
[59.83388901 904.58624268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 125]
[88 124]
[89 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
