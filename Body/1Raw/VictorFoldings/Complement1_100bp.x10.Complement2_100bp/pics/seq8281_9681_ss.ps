%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[221.73841858 330.46340942]
[225.02073669 315.81619263]
[229.62141418 301.52810669]
[235.50231934 287.71759033]
[242.61474609 274.49911499]
[250.89971924 261.98214722]
[260.28860474 250.27044678]
[249.48645020 239.86306763]
[238.68429565 229.45568848]
[227.88214111 219.04832458]
[217.07998657 208.64094543]
[206.20065308 198.31428528]
[195.24475098 188.06889343]
[184.28883362 177.82350159]
[173.33293152 167.57810974]
[161.93046570 157.83213806]
[150.10418701 148.60504150]
[138.27792358 139.37794495]
[126.45165253 130.15084839]
[114.62538147 120.92374420]
[102.79911041 111.69664764]
[90.83677673 102.64664459]
[78.74102783 93.77574921]
[66.64527130 84.90485382]
[49.40678406 87.88039398]
[35.62124634 77.66893768]
[33.52848816 60.98184204]
[21.30200386 52.29201889]
[9.07551861 43.60219574]
[-3.15096712 34.91236877]
[-11.95879173 32.49161530]
[-15.49349403 26.00103378]
[-31.19750977 24.07893753]
[-36.88478470 10.31288719]
[-48.98053741 1.44199181]
[-61.07629013 -7.42890358]
[-73.17204285 -16.29979897]
[-83.02953339 -4.98183012]
[-93.79952240 5.47158432]
[-105.40646362 14.98711967]
[-117.76894379 23.49803162]
[-130.80024719 30.94461823]
[-144.40896606 37.27465057]
[-158.49964905 42.44372177]
[-172.97344971 46.41558075]
[-187.72885132 49.16236115]
[-202.66233826 50.66479874]
[-217.66917419 50.91235733]
[-232.64410400 49.90329361]
[-247.48207092 47.64469528]
[-262.07901001 44.15239334]
[-276.33251953 39.45089340]
[-290.14260864 33.57316971]
[-303.41244507 26.56045341]
[-316.04891968 18.46193123]
[-327.96340942 9.33441162]
[-339.07232666 -0.75808305]
[-349.29776001 -11.74475861]
[-358.56796265 -23.54855156]
[-366.81796265 -36.08666229]
[-373.98983765 -49.27114868]
[-380.03332520 -63.00952530]
[-384.90597534 -77.20542908]
[-388.57366943 -91.75927734]
[-391.01065063 -106.56899261]
[-392.19982910 -121.53069305]
[-392.13284302 -136.53942871]
[-390.81021118 -151.48991394]
[-388.24118042 -166.27729797]
[-384.44378662 -180.79783630]
[-379.44461060 -194.94969177]
[-373.27880859 -208.63360596]
[-365.98956299 -221.75357056]
[-357.62802124 -234.21755981]
[-348.25283813 -245.93815613]
[-337.92974854 -256.83316040]
[-326.73123169 -266.82611084]
[-314.73577881 -275.84695435]
[-302.02752686 -283.83239746]
[-288.69564819 -290.72640991]
[-274.83364868 -296.48068237]
[-260.53875732 -301.05480957]
[-245.91123962 -304.41671753]
[-231.05371094 -306.54281616]
[-216.07038879 -307.41821289]
[-201.06634521 -307.03674316]
[-186.14686584 -305.40112305]
[-171.41656494 -302.52276611]
[-156.97877502 -298.42190552]
[-142.93478394 -293.12731934]
[-129.38308716 -286.67608643]
[-116.41875458 -279.11352539]
[-104.13271332 -270.49264526]
[-92.61114502 -260.87390137]
[-81.93486786 -250.32479858]
[-72.17876434 -238.91932678]
[-63.41126633 -226.73747253]
[-55.69388199 -213.86468506]
[-49.08073807 -200.39126587]
[-43.61822510 -186.41172791]
[-39.34465408 -172.02412415]
[-36.29000473 -157.32937622]
[-34.47570419 -142.43055725]
[-33.91447830 -127.43217468]
[-34.61026382 -112.43942261]
[-36.55817795 -97.55748749]
[-39.74456024 -82.89073944]
[-44.14705658 -68.54206085]
[-49.73479080 -54.61209869]
[-56.46856308 -41.19856644]
[-64.30114746 -28.39555168]
[-52.20539474 -19.52465630]
[-40.10964203 -10.65375996]
[-28.01389122 -1.78286457]
[-13.17504406 -0.49527574]
[-6.62259865 13.90528107]
[5.53885746 22.68588448]
[17.76534271 31.37570953]
[29.99182892 40.06553268]
[42.21831512 48.75535583]
[54.49768829 44.85068130]
[66.97013092 48.79024506]
[75.01465607 59.34942245]
[75.51616669 72.80910492]
[87.61192322 81.68000031]
[99.70767212 90.55089569]
[104.93800354 90.94788361]
[109.57359314 94.24707031]
[112.02621460 99.87037659]
[123.85248566 109.09747314]
[135.67875671 118.32456970]
[147.50502014 127.55167389]
[159.33129883 136.77876282]
[171.15756226 146.00587463]
[170.39941406 131.02503967]
[180.35363770 119.80392456]
[195.31799316 118.77048492]
[206.72023010 128.51672363]
[208.02861023 143.45954895]
[198.49365234 155.03904724]
[183.57832336 156.62219238]
[194.53422546 166.86758423]
[205.49014282 177.11297607]
[216.44604492 187.35836792]
[224.85150146 190.93415833]
[227.48736572 197.83879089]
[238.28952026 208.24617004]
[249.09167480 218.65353394]
[259.89382935 229.06091309]
[270.69598389 239.46827698]
[282.05017090 229.65005493]
[294.25015259 220.90499878]
[307.19482422 213.30560303]
[320.77691650 206.91482544]
[334.88388062 201.78561401]
[349.39880371 197.96047974]
[364.20144653 195.47113037]
[379.16915894 194.33819580]
[394.17785645 194.57102966]
[409.10317993 196.16773987]
[423.82150269 199.11508179]
[438.21078491 203.38864136]
[452.15185547 208.95298767]
[465.52917480 215.76200867]
[478.23184204 223.75930786]
[490.15469360 232.87860107]
[501.19885254 243.04432678]
[511.27279663 254.17224121]
[520.29309082 266.17013550]
[528.18499756 278.93856812]
[534.88311768 292.37176514]
[540.33184814 306.35839844]
[544.48620605 320.78259277]
[547.31164551 335.52478027]
[548.78472900 350.46282959]
[548.89337158 365.47293091]
[547.63659668 380.43072510]
[545.02484131 395.21228027]
[541.07971191 409.69506836]
[535.83392334 423.75909424]
[529.33093262 437.28784180]
[521.62463379 450.16915894]
[512.77893066 462.29632568]
[502.86709595 473.56887817]
[491.97122192 483.89337158]
[480.18161011 493.18426514]
[467.59597778 501.36456299]
[454.31863403 508.36648560]
[440.45956421 514.13201904]
[426.13360596 518.61340332]
[411.45950317 521.77343750]
[396.55883789 523.58599854]
[381.55508423 524.03601074]
[366.57257080 523.11981201]
[351.73544312 520.84497070]
[337.16665649 517.23028564]
[322.98693848 512.30578613]
[309.31378174 506.11224365]
[296.26049805 498.70098877]
[283.93521118 490.13342285]
[272.44012451 480.48056030]
[261.87045288 469.82235718]
[252.31378174 458.24716187]
[243.84930420 445.85086060]
[236.54716492 432.73620605]
[230.46786499 419.01187134]
[225.66178894 404.79159546]
[222.16876221 390.19314575]
[220.01773071 375.33758545]
[219.22650146 360.34793091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 144]
[13 143]
[14 142]
[15 141]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 126]
[23 125]
[24 124]
[27 120]
[28 119]
[29 118]
[30 117]
[32 116]
[34 114]
[35 113]
[36 112]
[37 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
