%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[220.28205872 257.74786377]
[221.89837646 242.82856750]
[224.58703613 228.06480408]
[228.33401489 213.53352356]
[233.11976624 199.31050110]
[238.91935730 185.46989441]
[225.53909302 178.68991089]
[212.15881348 171.90991211]
[198.77853394 165.12992859]
[185.39826965 158.34992981]
[172.01799011 151.56994629]
[174.13290405 166.42008972]
[163.95286560 177.43675232]
[148.98222351 176.49885559]
[140.25677490 164.29776001]
[144.20858765 149.82768250]
[157.92289734 143.75537109]
[145.08395386 135.99899292]
[132.24502563 128.24259949]
[119.40607452 120.48620605]
[106.56713867 112.72981262]
[92.59319305 112.26028442]
[85.67646790 100.10913086]
[72.83753204 92.35273743]
[57.02465439 91.83934784]
[50.13191223 78.63558960]
[41.50493240 90.91385651]
[32.05141449 102.56768799]
[21.81640816 113.54153442]
[10.84868717 123.78310394]
[-0.79948157 133.24359131]
[-13.07258797 141.87791443]
[-25.91214561 149.64492798]
[-39.25696564 156.50759888]
[-53.04345703 162.43325806]
[-67.20591736 167.39364624]
[-81.67685699 171.36511230]
[-96.38731384 174.32875061]
[-111.26718140 176.27043152]
[-126.24555206 177.18090820]
[-141.25105286 177.05583191]
[-156.21217346 175.89581299]
[-171.05760193 173.70635986]
[-185.71661377 170.49790955]
[-200.11933899 166.28576660]
[-214.19714355 161.08998108]
[-227.88294983 154.93534851]
[-241.11151123 147.85116577]
[-253.81980896 139.87120056]
[-265.94729614 131.03349304]
[-277.43612671 121.38014984]
[-288.23159790 110.95717621]
[-298.28225708 99.81424713]
[-307.54022217 88.00445557]
[-315.96130371 75.58408356]
[-323.50546265 62.61231995]
[-330.13668823 49.15098572]
[-335.82339478 35.26423264]
[-340.53848267 21.01822853]
[-344.25949097 6.48086977]
[-346.96865845 -8.27856731]
[-348.65313721 -23.18974686]
[-349.30480957 -38.18161011]
[-348.92065430 -53.18271255]
[-347.50244141 -68.12156677]
[-345.05697632 -82.92698669]
[-341.59588623 -97.52840424]
[-337.13568115 -111.85624695]
[-331.69757080 -125.84223938]
[-325.30752563 -139.41972351]
[-317.99597168 -152.52398682]
[-309.79776001 -165.09260559]
[-300.75195312 -177.06565857]
[-290.90167236 -188.38609314]
[-280.29385376 -198.99998474]
[-268.97903442 -208.85673523]
[-257.01113892 -217.90936279]
[-244.44718933 -226.11474609]
[-231.34709167 -233.43377686]
[-217.77326965 -239.83155823]
[-203.79039001 -245.27763367]
[-189.46508789 -249.74603271]
[-174.86564636 -253.21545410]
[-160.06163025 -255.66937256]
[-145.12358093 -257.09609985]
[-130.12269592 -257.48883057]
[-115.13047028 -256.84567261]
[-100.21833038 -255.16972351]
[-85.45735168 -252.46896362]
[-70.91786957 -248.75625610]
[-56.66918182 -244.04928589]
[-42.77918243 -238.37051392]
[-29.31406593 -231.74696350]
[-16.33800316 -224.21022034]
[-3.91282940 -215.79620361]
[7.90224266 -206.54499817]
[19.05090904 -196.50070190]
[29.48003960 -185.71118164]
[39.13993454 -174.22782898]
[47.98456192 -162.10540771]
[55.97177124 -149.40165710]
[63.06349564 -136.17713928]
[69.22594452 -122.49485016]
[74.42975616 -108.42001343]
[78.65011597 -94.01969147]
[81.86692047 -79.36251831]
[84.06484985 -64.51833344]
[85.23341370 -49.55788040]
[85.36705017 -34.55245590]
[84.46511841 -19.57356453]
[82.53192902 -4.69258833]
[79.57667542 10.01955509]
[75.61345673 24.49275780]
[70.66115570 38.65804291]
[64.74337006 52.44791412]
[57.88830185 65.79664612]
[72.78285217 65.75524902]
[80.59392548 79.51379395]
[93.43286133 87.27018738]
[107.40680695 87.73971558]
[114.32353210 99.89086914]
[127.16246796 107.64726257]
[140.00140381 115.40365601]
[152.84034729 123.16004181]
[165.67929077 130.91644287]
[178.79798889 138.18966675]
[192.17825317 144.96965027]
[205.55853271 151.74964905]
[218.93881226 158.52964783]
[232.31907654 165.30963135]
[245.69935608 172.08963013]
[253.43035889 159.22769165]
[262.06930542 146.95713806]
[271.57113647 135.34194946]
[281.88635254 124.44266510]
[292.96112061 114.31612396]
[304.73776245 105.01511383]
[317.15484619 96.58813477]
[330.14761353 89.07910919]
[343.64837646 82.52719879]
[357.58670044 76.96655273]
[371.88992310 72.42616272]
[386.48352051 68.92970276]
[401.29135132 66.49540710]
[416.23623657 65.13596344]
[431.24026489 64.85845947]
[446.22518921 65.66433716]
[461.11291504 67.54940033]
[475.82580566 70.50381470]
[490.28717041 74.51219177]
[504.42156982 79.55361938]
[518.15539551 85.60181427]
[531.41693115 92.62525177]
[544.13714600 100.58731079]
[556.24963379 109.44647980]
[567.69134521 119.15656281]
[578.40252686 129.66694641]
[588.32733154 140.92283630]
[597.41412354 152.86553955]
[605.61547852 165.43280029]
[612.88861084 178.55909729]
[619.19555664 192.17597961]
[624.50354004 206.21246338]
[628.78485107 220.59538269]
[632.01715088 235.24974060]
[634.18359375 250.09912109]
[635.27288818 265.06613159]
[635.27935791 280.07272339]
[634.20294189 295.04064941]
[632.04925537 309.89190674]
[628.82958984 324.54901123]
[624.56066895 338.93560791]
[619.26477051 352.97668457]
[612.96948242 366.59896851]
[605.70764160 379.73153687]
[597.51715088 392.30584717]
[588.44067383 404.25634766]
[578.52545166 415.52078247]
[567.82336426 426.04037476]
[556.39001465 435.76031494]
[544.28515625 444.62988281]
[531.57177734 452.60287476]
[518.31628418 459.63772583]
[504.58770752 465.69775391]
[490.45764160 470.75134277]
[475.99972534 474.77215576]
[461.28939819 477.73922729]
[446.40328979 479.63708496]
[431.41906738 480.45587158]
[416.41479492 480.19128418]
[401.46875000 478.84469604]
[386.65881348 476.42312622]
[372.06222534 472.93923950]
[357.75509644 468.41116333]
[343.81198120 462.86251831]
[330.30560303 456.32220459]
[317.30636597 448.82437134]
[304.88204956 440.40808105]
[293.09744263 431.11718750]
[282.01394653 421.00018311]
[271.68936157 410.10980225]
[262.17752075 398.50277710]
[253.52801514 386.23965454]
[245.78594971 373.38439941]
[238.99168396 360.00396729]
[233.18061829 346.16818237]
[228.38308716 331.94912720]
[224.62406921 317.42095947]
[221.92317200 302.65942383]
[220.29447937 287.74148560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 131]
[7 130]
[8 129]
[9 128]
[10 127]
[11 126]
[17 125]
[18 124]
[19 123]
[20 122]
[21 121]
[23 119]
[24 118]
[26 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
