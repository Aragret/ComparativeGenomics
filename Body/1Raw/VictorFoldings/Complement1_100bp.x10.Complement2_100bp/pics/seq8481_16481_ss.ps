%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[62.05891037 434.24829102]
[64.26203918 449.12094116]
[63.98701096 464.15338135]
[61.24132156 478.93551636]
[56.09988403 493.06402588]
[48.70295334 506.15356445]
[39.25232697 517.84692383]
[28.00582123 527.82519531]
[15.27025509 535.81616211]
[1.39305890 541.60180664]
[-13.24718475 545.02423096]
[-28.25107956 545.99011230]
[-43.20930862 544.47314453]
[-57.71380234 540.51464844]
[-71.36886597 534.22271729]
[-83.80197906 525.76885986]
[-94.67395782 515.38372803]
[-103.68820190 503.35073853]
[-110.59880829 489.99807739]
[-115.21723938 475.69006348]
[-117.41750336 460.81695557]
[-117.13957214 445.78457642]
[-114.39103699 431.00299072]
[-109.24687958 416.87545776]
[-101.84742737 403.78735352]
[-92.39454651 392.09579468]
[-81.14611816 382.11968994]
[-68.40901184 374.13119507]
[-54.53070450 368.34823608]
[-39.88980103 364.92861938]
[-24.88571930 363.96560669]
[-9.92778111 365.48547363]
[4.57594872 369.44674683]
[10.85330963 355.82342529]
[17.13067055 342.20010376]
[23.40803146 328.57678223]
[21.70709610 313.77963257]
[34.50952148 304.48400879]
[40.78688049 290.86068726]
[39.08594513 276.06353760]
[51.88837051 266.76791382]
[58.16572952 253.14459229]
[64.44309235 239.52127075]
[69.05709839 225.24853516]
[71.94237518 210.52865601]
[74.82764435 195.80876160]
[68.25399780 179.53749084]
[80.47164917 165.76031494]
[83.13744354 150.99909973]
[85.80324554 136.23788452]
[88.46903992 121.47666931]
[91.13483429 106.71545410]
[78.22666931 114.35608673]
[63.66284561 110.76510620]
[55.78618622 97.99960327]
[59.10879517 83.37222290]
[71.72733307 75.26219940]
[86.41333008 78.31531525]
[94.75378418 90.78169250]
[98.72588348 76.31716919]
[102.69797516 61.85264206]
[95.14046478 48.23200607]
[99.37478638 33.61950302]
[112.40656281 26.49851036]
[116.37865448 12.03398705]
[120.35075378 -2.43053699]
[119.05142212 -8.91307354]
[120.93777466 -14.27392292]
[124.66243744 -17.26322174]
[129.06344604 -31.60306740]
[133.46443176 -45.94291687]
[122.78433228 -35.41032410]
[109.29163361 -28.85693741]
[94.41024017 -26.97434425]
[79.71062469 -29.96122169]
[66.74407959 -37.50235748]
[56.87899399 -48.80191803]
[51.15645218 -62.66743088]
[50.18036270 -77.63564301]
[54.05374146 -92.12691498]
[62.36782074 -104.61194611]
[74.24519348 -113.77317047]
[88.43241119 -118.64378357]
[103.43226624 -118.70976257]
[117.66178894 -113.96416473]
[129.61929321 -104.90778351]
[138.04289246 -92.49637604]
[142.04360962 -78.03974915]
[141.19920349 -63.06334305]
[149.05096436 -75.84418488]
[156.90272522 -88.62503052]
[164.75447083 -101.40586853]
[172.60623169 -114.18671417]
[180.45799255 -126.96755219]
[188.30973816 -139.74839783]
[195.77748108 -152.75735474]
[202.85458374 -165.98287964]
[209.93170166 -179.20840454]
[217.00880432 -192.43392944]
[204.82525635 -201.22282410]
[193.92189026 -211.55723572]
[184.49331665 -223.25277710]
[176.70779419 -236.10069275]
[170.70423889 -249.87170410]
[166.58982849 -264.32006836]
[164.43795776 -279.18789673]
[164.28704834 -294.20989990]
[166.13978577 -309.11798096]
[169.96310425 -323.64608765]
[175.68876648 -337.53494263]
[183.21461487 -350.53668213]
[192.40632629 -362.41928101]
[203.09985352 -372.97064209]
[215.10437012 -382.00253296]
[228.20565796 -389.35372925]
[242.16987610 -394.89303589]
[256.74783325 -398.52160645]
[271.67938232 -400.17471313]
[286.69799805 -399.82278442]
[301.53573608 -397.47216797]
[315.92773438 -393.16479492]
[329.61718750 -386.97750854]
[342.35977173 -379.02075195]
[353.92810059 -369.43652344]
[364.11569214 -358.39584351]
[372.74075317 -346.09579468]
[379.64938354 -332.75582886]
[384.71826172 -318.61404419]
[387.85690308 -303.92282104]
[389.00936890 -288.94433594]
[388.15502930 -273.94586182]
[385.30914307 -259.19512939]
[380.52252197 -244.95533752]
[373.88055420 -231.48062134]
[365.50183105 -219.01145935]
[355.53579712 -207.77038574]
[344.16036987 -197.95797729]
[331.57855225 -189.74938965]
[318.01486206 -183.29109192]
[303.71136475 -178.69833374]
[288.92330933 -176.05308533]
[273.91464233 -175.40257263]
[258.95318604 -176.75837708]
[244.30595398 -180.09632874]
[230.23432922 -185.35682678]
[223.15722656 -172.13130188]
[216.08012390 -158.90577698]
[209.00300598 -145.68025208]
[209.68548584 -142.96134949]
[209.33209229 -139.80830383]
[207.77206421 -136.61428833]
[204.98002625 -133.82699585]
[201.09059143 -131.89663696]
[193.23883057 -119.11579895]
[185.38706970 -106.33496094]
[177.53532410 -93.55411530]
[169.68356323 -80.77326965]
[161.83180237 -67.99243164]
[153.98005676 -55.21158600]
[147.80429077 -41.54191589]
[143.40328979 -27.20207024]
[139.00228882 -12.86222267]
[134.81527710 1.54155922]
[130.84318542 16.00608253]
[126.87108612 30.47060776]
[134.43847656 43.24832916]
[130.61625671 57.97399521]
[117.16250610 65.82473755]
[113.19040680 80.28926086]
[109.21830750 94.75378418]
[105.89604950 109.38124847]
[103.23025513 124.14246368]
[100.56446075 138.90368652]
[97.89866638 153.66490173]
[95.23287201 168.42611694]
[101.93257904 179.44775391]
[99.40834045 191.68753052]
[89.54753876 198.69403076]
[86.66226196 213.41392517]
[83.77699280 228.13381958]
[93.42448425 216.64791870]
[106.38385773 209.09446716]
[121.13265991 206.36083984]
[135.93823242 208.76818848]
[149.06120300 216.03367615]
[158.95991516 227.30378723]
[164.47148132 241.25451660]
[164.94839478 256.24691772]
[160.33465576 270.51974487]
[151.17224121 282.39620972]
[138.53756714 290.48107910]
[123.91494751 293.82455444]
[109.02221680 292.03384399]
[95.60896301 285.31933594]
[85.25096893 274.46981812]
[79.16507721 260.75988770]
[78.06640625 245.79862976]
[71.78904724 259.42193604]
[65.51168823 273.04525757]
[66.76361847 288.81686401]
[54.41019821 297.13806152]
[48.13283539 310.76135254]
[49.38476944 326.53295898]
[37.03134537 334.85415649]
[30.75398636 348.47747803]
[24.47662544 362.10076904]
[18.19926453 375.72409058]
[30.63400650 384.17556763]
[41.50798416 394.55853271]
[50.52454758 406.58981323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 207]
[34 206]
[35 205]
[36 204]
[38 202]
[39 201]
[41 199]
[42 198]
[43 197]
[44 180]
[45 179]
[46 178]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[59 170]
[60 169]
[61 168]
[64 165]
[65 164]
[66 163]
[69 162]
[70 161]
[71 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 148]
[97 147]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
