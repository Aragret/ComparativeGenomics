%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[76.48223877 507.55444336]
[61.52640152 506.41543579]
[46.62249756 504.72775269]
[31.79065323 502.49371338]
[17.05088615 499.71633911]
[2.42309809 496.39938354]
[-12.07296658 492.54727173]
[-26.41773796 488.16525269]
[-40.59185410 483.25924683]
[-54.57617569 477.83584595]
[-68.35182190 471.90237427]
[-81.90020752 465.46685791]
[-95.20303345 458.53799438]
[-108.24234772 451.12509155]
[-121.00054169 443.23822021]
[-133.46040344 434.88796997]
[-145.60510254 426.08566284]
[-157.41824341 416.84313965]
[-168.88388062 407.17288208]
[-179.98652649 397.08795166]
[-190.71122742 386.60198975]
[-201.04345703 375.72912598]
[-210.96931458 364.48403931]
[-220.47537231 352.88189697]
[-229.54879761 340.93838501]
[-238.17735291 328.66961670]
[-246.34938049 316.09216309]
[-254.05384827 303.22299194]
[-261.28036499 290.07946777]
[-268.01916504 276.67938232]
[-274.26116943 263.04074097]
[-279.99795532 249.18202209]
[-285.22174072 235.12191772]
[-289.92547607 220.87940979]
[-294.10287476 206.47370911]
[-297.74822998 191.92428589]
[-300.85662842 177.25076294]
[-303.42391968 162.47294617]
[-305.44656372 147.61080933]
[-306.92190552 132.68438721]
[-307.84793091 117.71385193]
[-308.22335815 102.71939850]
[-308.04772949 87.72127533]
[-307.32122803 72.73973083]
[-306.04489136 57.79497910]
[-304.22039795 42.90720749]
[-301.85021973 28.09650803]
[-298.93759155 13.38287544]
[-295.48638916 -1.21382940]
[-291.50128174 -15.67389965]
[-286.98770142 -29.97781563]
[-281.95169067 -44.10626984]
[-276.40008545 -58.04018402]
[-270.34033203 -71.76075745]
[-263.78063965 -85.24945831]
[-256.72985840 -98.48807526]
[-249.19752502 -111.45874786]
[-241.19378662 -124.14396667]
[-232.72944641 -136.52659607]
[-223.81594849 -148.58992004]
[-214.46530151 -160.31767273]
[-204.69013977 -171.69400024]
[-194.50367737 -182.70355225]
[-183.91963196 -193.33148193]
[-172.95231628 -203.56341553]
[-161.61653137 -213.38555908]
[-149.92756653 -222.78463745]
[-137.90122986 -231.74798584]
[-125.55371857 -240.26347351]
[-112.90173340 -248.31964111]
[-99.96233368 -255.90557861]
[-86.75299835 -263.01107788]
[-73.29154968 -269.62649536]
[-59.59617233 -275.74298096]
[-45.68534470 -281.35220337]
[-31.57784843 -286.44662476]
[-17.29273033 -291.01934814]
[-2.84927082 -295.06423950]
[11.73302937 -298.57577515]
[26.43448639 -301.54928589]
[41.23525238 -303.98071289]
[56.11534882 -305.86679077]
[54.77711487 -320.80697632]
[53.43888092 -335.74716187]
[52.10064697 -350.68734741]
[50.76241302 -365.62753296]
[35.78678894 -367.05770874]
[21.32901764 -371.21551514]
[7.88151836 -377.95938110]
[-4.09768867 -387.05953979]
[-14.20059681 -398.20611572]
[-22.08310509 -411.01940918]
[-27.47673607 -425.06304932]
[-30.19778824 -439.85867310]
[-30.15358162 -454.90234375]
[-27.34562302 -469.68173218]
[-21.86954689 -483.69342041]
[-13.91187096 -496.46017456]
[-3.74362874 -507.54718018]
[8.28885365 -516.57678223]
[21.77575302 -523.24145508]
[36.25771332 -527.31427002]
[51.24148178 -528.65637207]
[66.21672058 -527.22216797]
[80.67337036 -523.06048584]
[94.11904907 -516.31298828]
[106.09580231 -507.20959473]
[116.19570923 -496.06030273]
[124.07476044 -483.24487305]
[129.46459961 -469.19979858]
[132.18167114 -454.40344238]
[132.13340759 -439.35977173]
[129.32147217 -424.58114624]
[123.84161377 -410.57095337]
[115.88049316 -397.80633545]
[105.70926666 -386.72207642]
[93.67434692 -377.69570923]
[80.18565369 -371.03463745]
[65.70259857 -366.96575928]
[67.04083252 -352.02557373]
[68.37906647 -337.08538818]
[69.71730042 -322.14520264]
[71.05553436 -307.20501709]
[86.03395081 -307.99346924]
[101.03121948 -308.23114014]
[116.02709198 -307.91769409]
[131.00132751 -307.05358887]
[145.93371582 -305.64001465]
[160.80410767 -303.67880249]
[175.59240723 -301.17266846]
[190.27865601 -298.12496948]
[204.84303284 -294.53979492]
[219.26588440 -290.42202759]
[233.52772522 -285.77722168]
[247.60931396 -280.61163330]
[261.49163818 -274.93222046]
[275.15594482 -268.74667358]
[288.58383179 -262.06332397]
[301.75711060 -254.89123535]
[314.65802002 -247.24003601]
[327.26916504 -239.12008667]
[339.57351685 -230.54234314]
[351.55444336 -221.51838684]
[363.19580078 -212.06039429]
[374.48184204 -202.18113708]
[385.39733887 -191.89393616]
[395.92758179 -181.21270752]
[406.05831909 -170.15185547]
[415.77590942 -158.72630310]
[425.06719971 -146.95147705]
[433.91967773 -134.84329224]
[442.32135010 -122.41807556]
[450.26095581 -109.69260406]
[457.72769165 -96.68405914]
[464.71151733 -83.40999603]
[471.20300293 -69.88834381]
[477.19338989 -56.13734436]
[482.67456055 -42.17557144]
[487.63916016 -28.02186775]
[492.08044434 -13.69533920]
[495.99246216 0.78467137]
[499.36990356 15.39861870]
[502.20822144 30.12677383]
[504.50357056 44.94925308]
[506.25283813 59.84605026]
[507.45370483 74.79705048]
[508.10452271 89.78207397]
[508.20443726 104.78089142]
[507.75326538 119.77326202]
[506.75167847 134.73893738]
[505.20095825 149.65769958]
[503.10327148 164.50944519]
[500.46139526 179.27410889]
[497.27893066 193.93174744]
[493.56015015 208.46257019]
[489.31005859 222.84700012]
[484.53445435 237.06556702]
[479.23971558 251.09912109]
[473.43304443 264.92868042]
[467.12225342 278.53561401]
[460.31585693 291.90151978]
[453.02307129 305.00839233]
[445.25369263 317.83847046]
[437.01824951 330.37451172]
[428.32785034 342.59954834]
[419.19421387 354.49707031]
[409.62969971 366.05105591]
[399.64718628 377.24588013]
[389.26016235 388.06643677]
[378.48266602 398.49810791]
[367.32922363 408.52682495]
[355.81488037 418.13903809]
[343.95523071 427.32180786]
[331.76623535 436.06268311]
[319.26437378 444.34988403]
[306.46652222 452.17224121]
[293.38992310 459.51919556]
[280.05227661 466.38079834]
[266.47155762 472.74780273]
[252.66612244 478.61163330]
[238.65460205 483.96435547]
[224.45588684 488.79873657]
[210.08917236 493.10824585]
[195.57383728 496.88708496]
[180.92948914 500.13015747]
[166.17587280 502.83306885]
[151.33294678 504.99215698]
[136.42070007 506.60452271]
[121.45930481 507.66802979]
[106.46893311 508.18118286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
