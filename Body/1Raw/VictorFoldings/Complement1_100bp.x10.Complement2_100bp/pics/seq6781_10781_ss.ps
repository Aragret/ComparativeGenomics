%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[38.03696823 511.24694824]
[30.53843117 524.34942627]
[19.78215027 534.94207764]
[6.56631088 542.23895264]
[-8.12838268 545.69854736]
[-23.21148682 545.06408691]
[-37.56373596 540.38262939]
[-50.12009811 532.00170898]
[-59.94880295 520.54309082]
[-66.32050323 506.85720825]
[-68.76237488 491.95956421]
[-67.09320831 476.95568848]
[-61.43687057 462.95895386]
[-52.21310043 451.00802612]
[-40.10636520 441.98974609]
[-26.01506042 436.57330322]
[-10.98485661 435.16067505]
[-8.31906128 420.39944458]
[-5.65326595 405.63824463]
[-2.98747039 390.87701416]
[-0.32167479 376.11581421]
[-5.67391920 362.21606445]
[4.39277458 350.01065063]
[-0.95946980 336.11090088]
[9.10722446 323.90548706]
[11.77301979 309.14428711]
[14.43881512 294.38305664]
[17.10461044 279.62182617]
[7.31029701 290.98278809]
[-6.05137300 297.79937744]
[-20.99827385 299.06039429]
[-35.31312561 294.57873535]
[-46.87239838 285.01928711]
[-53.96134949 271.80010986]
[-55.52836990 256.88217163]
[-51.34100723 242.47850037]
[-42.02042770 230.72576904]
[-28.94928169 223.36743164]
[-14.06660175 221.49504089]
[0.41985863 225.38638306]
[12.36111832 234.46417236]
[19.98576164 247.38179016]
[22.16281128 262.22106934]
[27.82559776 248.33103943]
[33.48838425 234.44100952]
[39.15117264 220.55097961]
[44.81395721 206.66094971]
[43.82027435 201.98959351]
[45.75056076 196.64440918]
[50.85768127 192.44573975]
[56.93151474 178.73046875]
[63.00534821 165.01519775]
[69.07917786 151.29992676]
[75.15301514 137.58467102]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[83.76766205 99.05642700]
[88.56274414 88.44283295]
[99.22577667 83.75870514]
[105.50313568 70.13539124]
[111.78049469 56.51207352]
[118.05785370 42.88875580]
[103.64761353 47.05347824]
[90.44708252 39.92984772]
[86.01813507 25.59860802]
[92.89786530 12.26934433]
[107.14525604 7.57766247]
[120.59875488 14.21117115]
[125.55162811 28.36894798]
[125.71176147 12.54855156]
[138.75830078 5.36266375]
[146.22604370 -7.64628839]
[153.69378662 -20.65524101]
[161.16152954 -33.66419220]
[167.54013062 -47.24039841]
[172.78684998 -61.29287338]
[178.03356934 -75.34534454]
[183.28028870 -89.39781189]
[188.52700806 -103.45028687]
[193.35299683 -117.65274048]
[197.75399780 -131.99258423]
[202.15499878 -146.33242798]
[206.55599976 -160.67228699]
[210.95700073 -175.01213074]
[215.35798645 -189.35197449]
[201.52470398 -195.18560791]
[188.35258484 -202.38880920]
[175.97679138 -210.88768005]
[164.52432251 -220.59500122]
[154.11271667 -231.41116333]
[144.84878540 -243.22515869]
[136.82760620 -255.91577148]
[130.13148499 -269.35278320]
[124.82913971 -283.39828491]
[120.97498322 -297.90814209]
[118.60855865 -312.73352051]
[117.75415802 -327.72219849]
[118.42053986 -342.72042847]
[120.60086823 -357.57431030]
[124.27277374 -372.13134766]
[129.39857483 -386.24224854]
[135.92565918 -399.76217651]
[143.78707886 -412.55236816]
[152.90213013 -424.48159790]
[163.17729187 -435.42745972]
[174.50714111 -445.27764893]
[186.77537537 -453.93103027]
[199.85614014 -461.29885864]
[213.61518860 -467.30548096]
[227.91131592 -471.88931274]
[242.59785461 -475.00326538]
[257.52407837 -476.61541748]
[272.53680420 -476.70922852]
[287.48199463 -475.28372192]
[302.20629883 -472.35351562]
[316.55859375 -467.94869995]
[330.39163208 -462.11444092]
[343.56344604 -454.91067505]
[355.93884277 -446.41125488]
[367.39089966 -436.70343018]
[377.80203247 -425.88681030]
[387.06546021 -414.07238770]
[395.08605957 -401.38143921]
[401.78158569 -387.94412231]
[407.08331299 -373.89840698]
[410.93682861 -359.38836670]
[413.30261230 -344.56289673]
[414.15634155 -329.57415771]
[413.48931885 -314.57595825]
[411.30831909 -299.72219849]
[407.63577271 -285.16528320]
[402.50936890 -271.05462646]
[395.98165894 -257.53500366]
[388.11968994 -244.74514771]
[379.00411987 -232.81631470]
[368.72848511 -221.87089539]
[357.39819336 -212.02122498]
[345.12957764 -203.36837769]
[332.04849243 -196.00114441]
[318.28918457 -189.99510193]
[303.99282837 -185.41191101]
[289.30618286 -182.29859924]
[274.37988281 -180.68710327]
[259.36715698 -180.59396362]
[244.42201233 -182.02012634]
[229.69784546 -184.95097351]
[225.29684448 -170.61112976]
[220.89584351 -156.27128601]
[216.49484253 -141.93144226]
[212.09384155 -127.59159088]
[207.69285583 -113.25173950]
[208.88555908 -110.71489716]
[209.14526367 -107.55274963]
[208.22874451 -104.11830902]
[206.02497864 -100.84601593]
[202.57948303 -98.20356750]
[197.33276367 -84.15109253]
[192.08604431 -70.09862518]
[186.83932495 -56.04615402]
[181.59260559 -41.99368286]
[193.84934998 -50.64077377]
[208.70831299 -52.69286728]
[222.84997559 -47.69151688]
[233.11503601 -36.75403976]
[237.21028137 -22.32389450]
[234.22079468 -7.62481451]
[224.81443787 4.05939007]
[211.09263611 10.11843777]
[196.12086487 9.19872093]
[183.24383545 1.50570810]
[175.33834839 -11.24196339]
[174.17048645 -26.19645119]
[166.70274353 -13.18750000]
[159.23500061 -0.17854729]
[151.76725769 12.83040524]
[152.14126587 27.72031403]
[138.56057739 35.83668900]
[131.68116760 49.16611862]
[125.40380859 62.78943253]
[119.12644958 76.41275024]
[112.84909058 90.03606415]
[114.81768036 106.69442749]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[88.86827850 143.65849304]
[82.79444885 157.37376404]
[76.72061157 171.08903503]
[70.64678192 184.80430603]
[64.57294464 198.51956177]
[58.70398712 212.32374573]
[53.04119873 226.21377563]
[47.37841034 240.10379028]
[41.71562576 253.99382019]
[36.05283737 267.88385010]
[31.86582756 282.28762817]
[29.20003319 297.04885864]
[26.53423691 311.81005859]
[23.86844063 326.57128906]
[29.03001022 341.52685547]
[19.15399170 352.67645264]
[24.31556129 367.63198853]
[14.43954277 378.78161621]
[11.77374649 393.54281616]
[9.10795116 408.30404663]
[6.44215584 423.06524658]
[3.77636051 437.82647705]
[17.36301422 444.40716553]
[28.66962433 454.41030884]
[36.85717010 467.09362793]
[41.31807709 481.51593018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[23 200]
[25 198]
[26 197]
[27 196]
[28 195]
[43 194]
[44 193]
[45 192]
[46 191]
[47 190]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[59 181]
[60 180]
[61 179]
[62 178]
[69 177]
[71 175]
[72 174]
[73 173]
[74 172]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
