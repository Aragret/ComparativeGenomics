%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[114.49056244 651.08142090]
[99.72061157 648.24951172]
[85.66686249 642.89569092]
[72.75640869 635.18261719]
[61.38157654 625.34472656]
[51.88803101 613.68096924]
[44.56427383 600.54577637]
[39.63286591 586.33825684]
[37.24366760 571.49029541]
[37.46928024 556.45300293]
[40.30285263 541.68334961]
[45.65827179 527.63024902]
[53.37279510 514.72064209]
[63.21198273 503.34692383]
[74.87683868 493.85470581]
[88.01287842 486.53244019]
[102.22090912 481.60266113]
[117.06917572 479.21511841]
[117.29250336 464.21679688]
[117.51583099 449.21844482]
[117.73915863 434.22012329]
[117.96248627 419.22177124]
[114.91892242 412.48690796]
[118.30244446 404.00225830]
[118.74905396 389.00891113]
[108.38011169 378.37777710]
[108.61944580 363.16601562]
[119.84064484 352.36221313]
[120.28725433 337.36886597]
[120.73385620 322.37551880]
[119.95253754 307.39587402]
[117.94852448 292.53033447]
[115.94451141 277.66482544]
[113.94049835 262.79928589]
[111.93648529 247.93376160]
[102.51019287 240.35275269]
[100.71895599 227.98443604]
[108.06280518 217.38111877]
[106.28034210 202.48739624]
[104.49787903 187.59367371]
[102.71540833 172.69996643]
[100.93294525 157.80624390]
[99.15047455 142.91252136]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[84.94718170 103.07244110]
[74.18048096 113.51648712]
[60.12488174 118.75481415]
[45.14899445 117.90466309]
[31.77651787 111.10930634]
[22.26095390 99.51387787]
[18.20583916 85.07240295]
[20.29453278 70.21853638]
[28.17505264 57.45541382]
[40.51939392 48.93383789]
[55.24731827 46.08985138]
[69.87690735 49.40270996]
[81.94282532 58.31414413]
[89.41226196 71.32398987]
[89.85887146 56.33064270]
[90.30547333 41.33729172]
[90.75208282 26.34394264]
[91.19868469 11.35059357]
[91.53366089 -3.64566588]
[91.75698853 -18.64400291]
[91.98031616 -33.64234161]
[92.20364380 -48.64067841]
[92.42697144 -63.63901520]
[85.11138916 -50.54389191]
[73.98426056 -40.48471451]
[60.21987152 -34.52304840]
[45.27079773 -33.28804016]
[30.71465874 -36.91002655]
[18.08759499 -45.00677109]
[8.72217274 -56.72380447]
[3.60674548 -70.82460022]
[3.28115773 -85.82106781]
[7.77976942 -100.13059235]
[16.62783051 -112.24305725]
[28.89158630 -120.88020325]
[43.27680969 -125.13053894]
[58.26539612 -124.54550171]
[72.27556610 -119.18685150]
[83.82878876 -109.62007904]
[91.70582581 -96.85480499]
[95.07540894 -82.23798370]
[99.04750824 -96.70250702]
[103.01960754 -111.16703033]
[106.99169922 -125.63155365]
[109.10632324 -140.48175049]
[109.32965088 -155.48008728]
[109.55297852 -170.47842407]
[102.02200317 -184.39225769]
[109.94793701 -197.00292969]
[110.17126465 -212.00126648]
[110.39459229 -226.99960327]
[96.31397247 -232.66534424]
[85.23355865 -243.03785706]
[78.65189362 -256.71432495]
[77.45908356 -271.84515381]
[81.81645203 -286.38400269]
[91.13469696 -298.36459351]
[104.15360260 -306.16665649]
[119.11247253 -308.73507690]
[133.98823547 -305.72244263]
[146.76907349 -297.53619385]
[155.72648621 -285.28344727]
[159.64904785 -270.62133789]
[158.00627136 -255.53273010]
[151.02032471 -242.05828857]
[139.63598633 -232.02027893]
[125.39292908 -226.77627563]
[125.16960144 -211.77793884]
[124.94627380 -196.77960205]
[132.49322510 -183.93853760]
[124.55131531 -170.25509644]
[124.32798767 -155.25675964]
[124.10466003 -140.25842285]
[131.42024231 -153.35354614]
[142.54737854 -163.41271973]
[156.31176758 -169.37438965]
[171.26083374 -170.60939026]
[185.81697083 -166.98741150]
[198.44404602 -158.89067078]
[207.80946350 -147.17362976]
[212.92489624 -133.07284546]
[213.25047302 -118.07637024]
[208.75186157 -103.76684570]
[199.90380859 -91.65438080]
[187.64004517 -83.01723480]
[173.25482178 -78.76689911]
[158.26623535 -79.35193634]
[144.25607300 -84.71058655]
[132.70285034 -94.27735901]
[124.82580566 -107.04263306]
[121.45622253 -121.65945435]
[117.48413086 -107.19493103]
[113.51203156 -92.73040771]
[109.53993225 -78.26588440]
[107.42530823 -63.41568756]
[107.20198059 -48.41735077]
[106.97865295 -33.41901398]
[106.75532532 -18.42067528]
[106.53199768 -3.42233825]
[109.57556915 3.31253386]
[106.19203949 11.79719925]
[105.74542999 26.79054832]
[105.29882812 41.78389740]
[104.85221863 56.77724838]
[104.40561676 71.77059937]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[115.14856720 129.64997864]
[116.45309448 134.10548401]
[115.92433167 138.14720154]
[114.04419708 141.13006592]
[115.82666016 156.02377319]
[117.60913086 170.91749573]
[119.39159393 185.81121826]
[121.17405701 200.70492554]
[122.95652771 215.59864807]
[134.33248901 230.07859802]
[126.80200958 245.92974854]
[128.80603027 260.79528809]
[130.81004333 275.66079712]
[132.81405640 290.52633667]
[134.81806946 305.39184570]
[141.54510498 291.98489380]
[153.67808533 283.16497803]
[168.50648499 280.90255737]
[182.71759033 285.70300293]
[193.13661194 296.49392700]
[197.43589783 310.86459351]
[194.65499878 325.60458374]
[185.41516113 337.42089844]
[171.78059387 343.67376709]
[156.79728699 342.96627808]
[143.81254578 335.45651245]
[135.72720337 322.82211304]
[135.28060913 337.81546021]
[134.83399963 352.80880737]
[145.39224243 364.26138306]
[144.72573853 379.46041870]
[133.74240112 389.45550537]
[133.29579163 404.44885254]
[132.96081543 419.44509888]
[132.73748779 434.44345093]
[132.51416016 449.44177246]
[132.29083252 464.44012451]
[132.06750488 479.43844604]
[146.83810425 482.26699829]
[160.89306641 487.61764526]
[173.80526733 495.32775879]
[185.18232727 505.16308594]
[194.67852783 516.82470703]
[202.00524902 529.95825195]
[206.93988037 544.16461182]
[209.33245850 559.01208496]
[209.11024475 574.04943848]
[206.28002930 588.81970215]
[200.92779541 602.87402344]
[193.21620178 615.78533936]
[183.37959290 627.16131592]
[171.71688843 636.65618896]
[158.58251953 643.98144531]
[144.37559509 648.91442871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[24 189]
[25 188]
[28 185]
[29 184]
[30 183]
[31 171]
[32 170]
[33 169]
[34 168]
[35 167]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[44 156]
[45 155]
[47 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[88 141]
[89 140]
[90 139]
[91 138]
[92 120]
[93 119]
[94 118]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
