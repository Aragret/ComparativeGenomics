%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[157.02084351 698.66827393]
[143.39755249 692.38275146]
[130.11885071 685.39862061]
[117.22056580 677.73468018]
[104.73744965 669.41156006]
[92.70316315 660.45178223]
[81.15013885 650.87945557]
[70.10953522 640.72033691]
[59.61111069 630.00195312]
[49.68316269 618.75305176]
[40.35245895 607.00396729]
[31.64415550 594.78649902]
[23.58172417 582.13342285]
[16.18690300 569.07897949]
[9.47962666 555.65832520]
[3.47797585 541.90765381]
[-1.80186915 527.86395264]
[-6.34567499 513.56512451]
[-10.14119244 499.04977417]
[-13.17818928 484.35696411]
[-15.44847870 469.52633667]
[-16.94594002 454.59783936]
[-17.66653633 439.61175537]
[-17.60832405 424.60848999]
[-16.77146149 409.62844849]
[-15.15820408 394.71203613]
[-12.77290058 379.89944458]
[-9.62198257 365.23065186]
[-5.71394396 350.74517822]
[-1.05931950 336.48205566]
[4.32934237 322.47976685]
[10.43751431 308.77603149]
[17.24873161 295.40780640]
[24.74462891 282.41116333]
[32.90500259 269.82107544]
[41.70784760 257.67150879]
[51.12944031 245.99522400]
[61.14437866 234.82369995]
[71.72566223 224.18704224]
[82.84476471 214.11393738]
[94.47171783 204.63153076]
[106.57516479 195.76539612]
[119.12248993 187.53942871]
[132.07986450 179.97581482]
[125.20045471 166.64637756]
[118.32103729 153.31695557]
[111.44162750 139.98751831]
[104.56221771 126.65808868]
[97.68280029 113.32865906]
[97.94647980 128.32633972]
[95.22669983 143.07771301]
[89.63179779 156.99522400]
[81.38461304 169.52453613]
[70.81362915 180.16664124]
[58.33987808 188.49765015]
[44.46019363 194.18572998]
[29.72739410 197.00434875]
[14.72828007 196.84123230]
[0.06026296 193.70288086]
[-13.69243717 187.71427917]
[-25.98205566 179.11398315]
[-36.31909943 168.24450684]
[-44.29185104 155.53878784]
[-49.58275986 141.50289917]
[-51.98108673 126.69586945]
[-51.39131165 111.70746613]
[-47.83692169 97.13467407]
[-41.45948792 83.55791473]
[-32.51301956 71.51795197]
[-21.35385513 61.49432755]
[-8.42645645 53.88628387]
[5.75428200 48.99683762]
[20.62354660 47.02074432]
[35.58909988 48.03670120]
[50.05487442 52.00424957]
[63.44469833 58.76536179]
[75.22525787 68.05074310]
[84.92734528 79.49057007]
[92.16288757 92.62534332]
[91.49310303 77.64030457]
[90.82331848 62.65526199]
[90.15353394 47.67022324]
[89.48374939 32.68518448]
[81.13795471 19.24426651]
[88.29923248 6.18420029]
[87.62944794 -8.80083847]
[72.70979309 -10.67482948]
[58.32149506 -15.04346085]
[44.87854004 -21.78103828]
[32.76770782 -30.69371033]
[22.33744812 -41.52503967]
[13.88786125 -53.96339035]
[7.66206121 -67.65087891]
[3.83917451 -82.19369507]
[2.52919388 -97.17341614]
[3.76980996 -112.15904236]
[7.52532768 -126.71939850]
[13.68769360 -140.43556213]
[22.07960320 -152.91290283]
[32.45960617 -163.79240417]
[44.52904892 -172.76104736]
[57.94066620 -179.56079102]
[72.30858612 -183.99598694]
[87.21940613 -185.93902588]
[102.24411774 -185.33401489]
[116.95043182 -182.19834900]
[130.91520691 -176.62223816]
[143.73666382 -168.76614380]
[155.04589844 -158.85607910]
[164.51751709 -147.17720032]
[171.87899780 -134.06550598]
[176.91856384 -119.89825439]
[179.49118042 -105.08306885]
[179.52284241 -90.04621887]
[177.01264954 -75.22032928]
[172.03282166 -61.03198242]
[164.72662354 -47.88939667]
[155.30427551 -36.17071915]
[144.03688049 -26.21311188]
[131.24862671 -18.30307961]
[117.30746460 -12.66820812]
[102.61448669 -9.47062397]
[103.28427124 5.51441479]
[111.58216095 17.88350487]
[104.46878815 32.01539993]
[105.13857269 47.00043869]
[105.80835724 61.98547745]
[106.47814178 76.97052002]
[107.14792633 91.95555878]
[111.01222992 106.44924927]
[117.89164734 119.77867889]
[124.77105713 133.10810852]
[131.65046692 146.43753052]
[138.52987671 159.76696777]
[145.40930176 173.09638977]
[159.08088684 166.91662598]
[173.05479431 161.45478821]
[187.29336548 156.72563171]
[201.75820923 152.74186707]
[216.41032410 149.51426697]
[231.21022034 147.05151367]
[246.11798096 145.36026001]
[261.09344482 144.44505310]
[276.09622192 144.30836487]
[291.08587646 144.95056152]
[306.02197266 146.36990356]
[320.86428833 148.56259155]
[335.57278442 151.52268982]
[350.10778809 155.24223328]
[364.43017578 159.71118164]
[378.50128174 164.91749573]
[392.28320312 170.84713745]
[405.73876953 177.48411560]
[418.83172607 184.81056213]
[431.52676392 192.80668640]
[443.78964233 201.45097351]
[455.58731079 210.72009277]
[466.88800049 220.58906555]
[477.66122437 231.03128052]
[487.87789917 242.01858521]
[497.51055908 253.52137756]
[506.53317261 265.50863647]
[514.92144775 277.94805908]
[522.65270996 290.80606079]
[529.70623779 304.04806519]
[536.06292725 317.63827515]
[541.70562744 331.54013062]
[546.61920166 345.71612549]
[550.79040527 360.12805176]
[554.20788574 374.73703003]
[556.86248779 389.50372314]
[558.74707031 404.38827515]
[559.85656738 419.35061646]
[560.18798828 434.35034180]
[559.74035645 449.34707642]
[558.51501465 464.30032349]
[556.51513672 479.16986084]
[553.74615479 493.91552734]
[550.21557617 508.49758911]
[545.93292236 522.87677002]
[540.90966797 537.01428223]
[535.15936279 550.87200928]
[528.69757080 564.41253662]
[521.54168701 577.59948730]
[513.71099854 590.39721680]
[505.22659302 602.77124023]
[496.11135864 614.68823242]
[486.38989258 626.11608887]
[476.08837891 637.02386475]
[465.23458862 647.38232422]
[453.85778809 657.16345215]
[441.98861694 666.34088135]
[429.65914917 674.88989258]
[416.90252686 682.78741455]
[403.75320435 690.01220703]
[390.24661255 696.54473877]
[376.41918945 702.36737061]
[362.30813599 707.46453857]
[347.95156860 711.82238770]
[333.38818359 715.42919922]
[318.65719604 718.27526855]
[303.79833984 720.35284424]
[288.85168457 721.65643311]
[273.85751343 722.18249512]
[258.85623169 721.92956543]
[243.88832092 720.89831543]
[228.99411011 719.09161377]
[214.21374512 716.51428223]
[199.58706665 713.17327881]
[185.15353394 709.07751465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[85 123]
[86 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
