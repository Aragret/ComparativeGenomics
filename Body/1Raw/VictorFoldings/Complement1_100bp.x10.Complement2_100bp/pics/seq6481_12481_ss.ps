%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[72.91355896 745.76434326]
[58.65522385 741.06683350]
[44.92599106 734.99432373]
[31.85808945 727.60540771]
[19.57736588 718.97113037]
[8.20209694 709.17468262]
[-2.15816593 698.31042480]
[-11.40364456 686.48303223]
[-19.44529724 673.80633545]
[-26.20567703 660.40246582]
[-31.61967659 646.40045166]
[-35.63515472 631.93524170]
[-38.21343613 617.14611816]
[-39.32969666 602.17541504]
[-38.97317886 587.16741943]
[-37.14731979 572.26666260]
[-33.86970139 557.61663818]
[-29.17189407 543.35839844]
[-23.09914017 529.62927246]
[-15.70992088 516.56152344]
[-7.07540512 504.28097534]
[2.72125244 492.90588379]
[13.58570194 482.54583740]
[25.41330910 473.30059814]
[38.09016418 465.25918579]
[51.49418259 458.49908447]
[65.49626923 453.08535767]
[79.96157074 449.07019043]
[94.75078583 446.49218750]
[93.63513947 431.53375244]
[92.51948547 416.57528687]
[91.40383911 401.61682129]
[87.77155304 395.18035889]
[90.38462830 386.42764282]
[89.49181366 371.45425415]
[88.59899902 356.48083496]
[87.70617676 341.50744629]
[84.17012787 335.01757812]
[86.91322327 326.30477905]
[86.24343872 311.31973267]
[85.57365417 296.33468628]
[77.27577209 283.96560669]
[84.38914490 269.83370972]
[83.71936035 254.84866333]
[83.04956818 239.86363220]
[73.68854523 251.58418274]
[59.25717926 255.67509460]
[45.13801575 250.61059570]
[36.59715652 238.27958679]
[36.82012558 223.28125000]
[45.72376633 211.20957947]
[59.98723602 206.56701660]
[74.29061890 211.08512878]
[83.29948425 223.07986450]
[84.41513062 208.12139893]
[85.53078461 193.16294861]
[78.76152039 179.89546204]
[87.50379944 166.70898438]
[88.61945343 151.75053406]
[89.73509979 136.79208374]
[76.44778442 130.07188416]
[66.73946381 118.78195953]
[62.08543015 104.63791656]
[63.19290161 89.78910065]
[69.89358521 76.49193573]
[81.16925812 66.76706696]
[95.30644989 62.09227371]
[96.42209625 47.13382339]
[97.53774261 32.17536926]
[98.65339661 17.21691513]
[86.61016083 26.15898705]
[71.75178528 24.10264397]
[62.58980942 12.22585201]
[64.37262726 -2.66782260]
[76.07897186 -12.04660702]
[91.00290680 -10.53790760]
[100.59503937 0.99311894]
[103.04077148 -13.80615234]
[105.48649597 -28.60542297]
[107.93222046 -43.40469360]
[110.37795258 -58.20396423]
[104.99428558 -73.08101654]
[114.70320892 -84.37641907]
[109.31954956 -99.25347137]
[119.02847290 -110.54887390]
[121.47419739 -125.34814453]
[112.54067230 -138.10862732]
[115.23181152 -153.08235168]
[127.45203400 -161.52046204]
[129.89776611 -176.31973267]
[130.67907715 -191.29937744]
[129.78627014 -206.27278137]
[128.89344788 -221.24618530]
[125.25880432 -229.62634277]
[128.10049438 -236.44885254]
[127.43070984 -251.43388367]
[126.76092529 -266.41891479]
[112.57054138 -271.94638062]
[101.85981750 -282.77230835]
[96.48444366 -297.02099609]
[97.37574768 -312.22381592]
[104.37930298 -325.74676514]
[116.28169250 -335.24691772]
[131.02076721 -339.07830811]
[146.04287720 -336.57714844]
[158.74537659 -328.17675781]
[166.92745972 -315.33255005]
[169.17153931 -300.26986694]
[165.08880615 -285.59844971]
[155.38662720 -273.86013794]
[141.74597168 -267.08871460]
[142.41575623 -252.10368347]
[143.08554077 -237.11863708]
[143.86685181 -222.13899231]
[144.75967407 -207.16558838]
[145.65249634 -192.19218445]
[152.28646851 -205.64544678]
[163.28291321 -215.84733582]
[177.19503784 -221.45558167]
[192.19248962 -221.73236084]
[206.30207825 -216.64122009]
[217.66744995 -206.85202026]
[224.79328918 -193.65269470]
[226.74206543 -178.77983093]
[223.25740051 -164.19020081]
[214.79774475 -151.80334473]
[202.47613525 -143.24894714]
[187.91366577 -139.65249634]
[173.02629089 -141.48716736]
[159.77268982 -148.51156616]
[149.89662170 -159.80152893]
[144.69703674 -173.87400818]
[142.25131226 -159.07473755]
[151.10696411 -147.15362549]
[148.83746338 -132.11021423]
[136.27346802 -122.90242004]
[133.82774353 -108.10314941]
[139.38633728 -94.28463745]
[129.50248718 -81.93069458]
[135.06108093 -68.11218262]
[125.17722321 -55.75823593]
[122.73149109 -40.95896530]
[120.28576660 -26.15969467]
[117.84004211 -11.36042404]
[115.39431000 3.43884635]
[113.61184692 18.33256340]
[112.49620056 33.29101562]
[111.38054657 48.24946976]
[110.26490021 63.20792389]
[123.55221558 69.92811584]
[133.26052856 81.21804047]
[137.91456604 95.36208344]
[136.80709839 110.21089935]
[130.10641479 123.50806427]
[118.83074188 133.23294067]
[104.69355011 137.90773010]
[103.57790375 152.86618042]
[102.46225739 167.82463074]
[109.15171814 182.16204834]
[100.48923492 194.27859497]
[99.37358856 209.23706055]
[98.25793457 224.19551086]
[98.03460693 239.19384766]
[98.70439911 254.17887878]
[99.37418365 269.16390991]
[107.71997070 282.60482788]
[100.55869293 295.66491699]
[101.22847748 310.64993286]
[101.89826202 325.63497925]
[102.67958832 340.61462402]
[103.57240295 355.58804321]
[104.46521759 370.56143188]
[105.35803223 385.53485107]
[106.36228943 400.50119019]
[107.47794342 415.45962524]
[108.59358978 430.41809082]
[109.70923615 445.37655640]
[124.71724701 445.73214722]
[139.61813354 447.55712891]
[154.26837158 450.83386230]
[168.52690125 455.53082275]
[182.25637817 461.60275269]
[195.32456970 468.99118042]
[207.60563660 477.62496948]
[218.98130798 487.42092896]
[229.34199524 498.28475952]
[238.58795166 510.11181641]
[246.63011169 522.78820801]
[253.39102173 536.19183350]
[258.80557251 550.19354248]
[262.82165527 564.65863037]
[265.40051270 579.44769287]
[266.51736450 594.41833496]
[266.16146851 609.42633057]
[264.33618164 624.32714844]
[261.05917358 638.97735596]
[256.36193848 653.23577881]
[250.28971863 666.96508789]
[242.90101624 680.03314209]
[234.26699829 692.31408691]
[224.47079468 703.68951416]
[213.60676575 714.04998779]
[201.77952576 723.29571533]
[189.10298157 731.33764648]
[175.69924927 738.09826660]
[161.69737244 743.51257324]
[147.23222351 747.52832031]
[132.44311523 750.10687256]
[117.47248077 751.22344971]
[102.46448517 750.86724854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 177]
[30 176]
[31 175]
[32 174]
[34 173]
[35 172]
[36 171]
[37 170]
[39 169]
[40 168]
[41 167]
[43 165]
[44 164]
[45 163]
[54 162]
[55 161]
[56 160]
[58 158]
[59 157]
[60 156]
[67 149]
[68 148]
[69 147]
[70 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[83 139]
[85 137]
[86 136]
[89 133]
[90 132]
[91 116]
[92 115]
[93 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
