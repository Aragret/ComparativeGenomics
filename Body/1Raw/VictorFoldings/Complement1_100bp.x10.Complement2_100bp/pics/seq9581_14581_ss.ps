%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[94.25788116 226.36549377]
[95.38121796 211.39999390]
[97.66089630 196.56654358]
[101.08320618 181.95434570]
[105.62757111 167.65130615]
[111.26664734 153.74342346]
[117.96652985 140.31436157]
[125.68692780 127.44486237]
[113.46044159 118.75504303]
[101.23395538 110.06521606]
[93.36159515 108.33360291]
[88.89142609 101.15387726]
[76.79567719 92.28298187]
[64.69992065 83.41208649]
[48.99590683 81.48999023]
[43.30863190 67.72393799]
[31.21288109 58.85304642]
[19.11712837 49.98215103]
[7.02137613 41.11125565]
[-5.07437563 32.24036026]
[-17.17012787 23.36946487]
[-26.73828125 34.92718506]
[-36.96823883 45.90345383]
[-47.82473755 56.26042557]
[-59.27035141 65.96240997]
[-71.26562500 74.97594452]
[-83.76921082 83.26997375]
[-96.73799896 90.81589508]
[-110.12728882 97.58770752]
[-123.89092255 103.56205750]
[-137.98146057 108.71835327]
[-152.35031128 113.03881836]
[-166.94796753 116.50856018]
[-181.72407532 119.11561584]
[-196.62773132 120.85100555]
[-211.60754395 121.70873260]
[-226.61187744 121.68585968]
[-241.58900452 120.78244781]
[-256.48730469 119.00162506]
[-271.25540161 116.34952545]
[-285.84240723 112.83528137]
[-300.19802856 108.47102356]
[-314.27276611 103.27178192]
[-328.01812744 97.25549316]
[-341.38668823 90.44288635]
[-354.33239746 82.85745239]
[-366.81063843 74.52532959]
[-378.77838135 65.47525787]
[-390.19433594 55.73842239]
[-401.01922607 45.34838867]
[-411.21566772 34.34097672]
[-420.74853516 22.75413322]
[-429.58496094 10.62779808]
[-437.69448853 -1.99622738]
[-445.04916382 -15.07442379]
[-451.62362671 -28.56170845]
[-457.39523315 -42.41158676]
[-462.34405518 -56.57631683]
[-466.45306396 -71.00706482]
[-469.70806885 -85.65409088]
[-472.09786987 -100.46690369]
[-473.61422729 -115.39443207]
[-474.25189209 -130.38522339]
[-474.00869751 -145.38760376]
[-472.88546753 -160.34985352]
[-470.88607788 -175.22038269]
[-468.01739502 -189.94795227]
[-464.28933716 -204.48178101]
[-459.71475220 -218.77175903]
[-454.30938721 -232.76863098]
[-448.09191895 -246.42416382]
[-441.08374023 -259.69125366]
[-433.30902100 -272.52420044]
[-424.79455566 -284.87875366]
[-415.56973267 -296.71228027]
[-405.66632080 -307.98406982]
[-395.11843872 -318.65518188]
[-383.96249390 -328.68890381]
[-372.23690796 -338.05059814]
[-359.98214722 -346.70800781]
[-347.24038696 -354.63128662]
[-334.05560303 -361.79312134]
[-320.47323608 -368.16882324]
[-306.54010010 -373.73645020]
[-292.30422974 -378.47674561]
[-277.81469727 -382.37338257]
[-263.12145996 -385.41299438]
[-248.27514648 -387.58502197]
[-233.32696533 -388.88201904]
[-218.32843018 -389.29949951]
[-203.33123779 -388.83602905]
[-188.38710022 -387.49319458]
[-173.54753113 -385.27563477]
[-158.86367798 -382.19100952]
[-144.38615417 -378.24993896]
[-130.16488647 -373.46600342]
[-116.24889374 -367.85571289]
[-102.68613434 -361.43838501]
[-89.52337646 -354.23614502]
[-76.80598450 -346.27383423]
[-64.57780457 -337.57888794]
[-52.88098907 -328.18127441]
[-41.75585938 -318.11340332]
[-31.24076653 -307.40997314]
[-21.37195587 -296.10791016]
[-12.18345070 -284.24612427]
[-3.70692468 -271.86553955]
[4.02840233 -259.00881958]
[10.99586487 -245.72029114]
[17.17144394 -232.04576111]
[22.53384972 -218.03237915]
[27.06459999 -203.72842407]
[30.74807358 -189.18324280]
[33.57157516 -174.44694519]
[35.52536774 -159.57035828]
[36.60271835 -144.60473633]
[36.79991531 -129.60168457]
[36.11627197 -114.61291504]
[34.55415344 -99.69010162]
[32.11894226 -84.88468933]
[28.81902885 -70.24771881]
[24.66579247 -55.82963181]
[19.67354965 -41.68014526]
[13.85950851 -27.84803009]
[7.24371338 -14.38096905]
[-0.15103063 -1.32538640]
[-8.29923248 11.27371216]
[3.79651976 20.14460754]
[15.89227200 29.01550293]
[27.98802376 37.88639832]
[40.08377457 46.75729370]
[52.17952728 55.62818909]
[67.01837158 56.91577911]
[73.57081604 71.31633759]
[85.66657257 80.18723297]
[97.76232147 89.05812836]
[109.92378235 97.83872986]
[122.15026855 106.52855682]
[134.37675476 115.21837616]
[143.99255371 103.69602966]
[154.47235107 92.95348358]
[165.75309753 83.05535126]
[177.76696777 74.06116486]
[190.44168091 66.02500916]
[203.70103455 58.99522400]
[217.46527100 53.01408005]
[231.65161133 48.11755753]
[246.17474365 44.33509827]
[260.94732666 41.68944931]
[275.88049316 40.19652939]
[290.88442993 39.86531448]
[305.86895752 40.69779205]
[320.74386597 42.68896103]
[335.41976929 45.82684326]
[349.80838013 50.09256744]
[363.82315063 55.46047974]
[377.37979126 61.89829254]
[390.39678955 69.36729431]
[402.79586792 77.82256317]
[414.50241089 87.21324158]
[425.44607544 97.48285675]
[435.56097412 108.56964874]
[444.78631592 120.40692902]
[453.06661987 132.92352295]
[460.35208130 146.04412842]
[466.59887695 159.68984985]
[471.76943970 173.77864075]
[475.83267212 188.22572327]
[478.76412964 202.94424438]
[480.54620361 217.84567261]
[481.16815186 232.84039307]
[480.62625122 247.83821106]
[478.92376709 262.74893188]
[476.07089233 277.48291016]
[472.08486938 291.95147705]
[466.98959351 306.06765747]
[460.81573486 319.74652100]
[453.60043335 332.90585327]
[445.38705444 345.46646118]
[436.22503662 357.35284424]
[426.16946411 368.49346924]
[415.28079224 378.82135010]
[403.62454224 388.27438354]
[391.27078247 396.79571533]
[378.29382324 404.33410645]
[364.77175903 410.84420776]
[350.78582764 416.28686523]
[336.42019653 420.62933350]
[321.76126099 423.84552002]
[306.89718628 425.91607666]
[291.91732788 426.82852173]
[276.91183472 426.57742310]
[261.97088623 425.16421509]
[247.18441772 422.59747314]
[232.64129639 418.89260864]
[218.42901611 414.07186890]
[204.63304138 408.16430664]
[191.33634949 401.20541382]
[178.61891174 393.23703003]
[166.55720520 384.30709839]
[155.22378540 374.46932983]
[144.68678284 363.78289795]
[135.00961304 352.31204224]
[126.25043488 340.12576294]
[118.46195221 327.29736328]
[111.69100189 313.90399170]
[105.97830200 300.02618408]
[101.35821533 285.74740601]
[97.85852051 271.15356445]
[95.50026703 256.33239746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 139]
[9 138]
[10 137]
[12 136]
[13 135]
[14 134]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
