%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[-9.26333046 503.67562866]
[-14.65558529 517.68487549]
[-21.33600426 531.12756348]
[-29.24587822 543.88562012]
[-38.31569290 555.84692383]
[-48.46574020 566.90637207]
[-59.60682297 576.96673584]
[-71.64102173 585.93957520]
[-84.46259308 593.74615479]
[-97.95883942 600.31774902]
[-112.01116180 605.59661865]
[-126.49607086 609.53637695]
[-141.28625488 612.10247803]
[-156.25175476 613.27227783]
[-171.26103210 613.03558350]
[-186.18218994 611.39434814]
[-200.88409424 608.36309814]
[-215.23754883 603.96844482]
[-229.11639404 598.24902344]
[-242.39868164 591.25506592]
[-254.96768188 583.04809570]
[-266.71292114 573.70013428]
[-277.53118896 563.29345703]
[-287.32739258 551.91937256]
[-296.01547241 539.67797852]
[-303.51907349 526.67681885]
[-309.77221680 513.03015137]
[-314.71997070 498.85781860]
[-318.31884766 484.28448486]
[-320.53726196 469.43814087]
[-321.35565186 454.44934082]
[-320.76684570 439.44973755]
[-318.77606201 424.57119751]
[-315.40072632 409.94445801]
[-310.67056274 395.69805908]
[-304.62710571 381.95718384]
[-297.32348633 368.84265137]
[-288.82385254 356.46963501]
[-279.20294189 344.94696045]
[-268.54531860 334.37579346]
[-256.94458008 324.84912109]
[-244.50273132 316.45062256]
[-231.32908630 309.25411987]
[-217.53944397 303.32284546]
[-203.25495911 298.70892334]
[-188.60119629 295.45291138]
[-173.70692444 293.58343506]
[-158.70301819 293.11691284]
[-143.72137451 294.05743408]
[-128.89363098 296.39672852]
[-114.35009003 300.11428833]
[-100.21858215 305.17736816]
[-86.62329102 311.54153442]
[-73.68369293 319.15081787]
[-64.90309143 306.98934937]
[-56.12248993 294.82791138]
[-47.43266296 282.60140991]
[-38.83409882 270.31057739]
[-41.67140961 255.73370361]
[-33.12632751 243.14656067]
[-17.81752396 240.26936340]
[-9.21896076 227.97853088]
[-0.62039649 215.68769836]
[-0.97494513 212.90696716]
[-0.24937387 209.81825256]
[1.67914224 206.83224487]
[4.78262472 204.39648438]
[8.87388611 202.94200134]
[18.18876839 191.18473816]
[27.50365257 179.42749023]
[36.81853485 167.67024231]
[46.13341904 155.91299438]
[44.16876984 141.19308472]
[53.44789886 129.13685608]
[68.90081787 127.17596436]
[78.21569824 115.41870880]
[87.53057861 103.66146088]
[96.49127960 91.63208008]
[105.08984375 79.34124756]
[113.68840790 67.05040741]
[106.54034424 52.14077759]
[107.87895966 35.75469589]
[117.24450684 22.35680962]
[132.00317383 15.54964352]
[148.08711243 17.10514259]
[149.42346191 1.34047496]
[162.96833801 -4.85515261]
[171.38294983 -17.27264786]
[179.79757690 -29.69014359]
[187.83874512 -42.35266876]
[195.49934387 -55.24899673]
[203.15994263 -68.14532471]
[210.82054138 -81.04164886]
[218.48114014 -93.93797302]
[226.14172363 -106.83430481]
[226.53738403 -122.65055847]
[239.68946838 -129.64140320]
[247.35006714 -142.53773499]
[255.01066589 -155.43406677]
[243.15956116 -164.66198730]
[232.55850220 -175.30250549]
[223.37467957 -187.18782043]
[215.75296021 -200.13049316]
[209.81352234 -213.92637634]
[205.65005493 -228.35789490]
[203.32821655 -243.19744873]
[202.88461304 -258.21099854]
[204.32626343 -273.16174316]
[207.63043213 -287.81390381]
[212.74497986 -301.93637085]
[219.58926392 -315.30645752]
[228.05534363 -327.71325684]
[238.00968933 -338.96112061]
[249.29528809 -348.87265015]
[261.73419189 -357.29150391]
[275.13018799 -364.08493042]
[289.27200317 -369.14578247]
[303.93661499 -372.39422607]
[318.89273071 -373.77905273]
[333.90447998 -373.27841187]
[348.73510742 -370.90017700]
[363.15069580 -366.68188477]
[376.92388916 -360.69006348]
[389.83749390 -353.01919556]
[401.68783569 -343.79028320]
[412.28799438 -333.14886475]
[421.47079468 -321.26278687]
[429.09143066 -308.31948853]
[435.02972412 -294.52310181]
[439.19198608 -280.09121704]
[441.51257324 -265.25146484]
[441.95489502 -250.23789978]
[440.51199341 -235.28727722]
[437.20660400 -220.63539124]
[432.09085083 -206.51333618]
[425.24542236 -193.14382935]
[416.77832031 -180.73774719]
[406.82302856 -169.49072266]
[395.53659058 -159.58015442]
[383.09698486 -151.16233826]
[369.70043945 -144.37004089]
[355.55816650 -139.31037903]
[340.89328003 -136.06317139]
[325.93707275 -134.67959595]
[310.92535400 -135.18151855]
[296.09494019 -137.56098938]
[281.67968750 -141.78048706]
[267.90698242 -147.77346802]
[260.24639893 -134.87713623]
[252.58580017 -121.98081207]
[252.73808289 -107.08698273]
[239.03805542 -99.17370605]
[231.37745667 -86.27738190]
[223.71685791 -73.38105011]
[216.05625916 -60.48472595]
[208.39566040 -47.58839798]
[200.73507690 -34.69207001]
[201.29545593 -31.94541740]
[200.80162048 -28.81129265]
[199.10054016 -25.69012070]
[196.18681335 -23.03028107]
[192.21507263 -21.27552414]
[183.80044556 -8.85802937]
[175.38583374 3.55946612]
[174.65135193 18.43595123]
[160.50460815 25.51976013]
[167.26213074 37.38791275]
[168.25164795 51.07548141]
[163.22320557 63.91541290]
[153.10501099 73.38117218]
[139.83273315 77.58386230]
[125.97924042 75.64897156]
[117.38068390 87.93981171]
[108.78211975 100.23064423]
[109.05632019 103.26615906]
[108.23208618 106.46852875]
[106.24549103 109.43110657]
[103.18371582 111.72932434]
[99.28783417 112.97634125]
[89.97295380 124.73359680]
[80.65806580 136.49084473]
[82.28382111 151.98260498]
[72.66971588 163.77343750]
[57.89066696 165.22787476]
[48.57578659 176.98512268]
[39.26090240 188.74237061]
[29.94602013 200.49963379]
[20.63113785 212.25688171]
[11.67044163 224.28625488]
[3.07187748 236.57708740]
[-5.52668667 248.86793518]
[-2.98173308 264.23547363]
[-11.87698746 276.57763672]
[-26.54326248 278.90914917]
[-35.14182663 291.19998169]
[-37.49694443 300.02557373]
[-43.96103287 303.60852051]
[-52.74163437 315.76995850]
[-61.52223969 327.93142700]
[-50.22772980 337.81921387]
[-39.90876770 348.72122192]
[-30.65604019 360.54159546]
[-22.55086136 373.17648315]
[-15.66445923 386.51486206]
[-10.05735588 400.43948364]
[-5.77882624 414.82797241]
[-2.86647177 429.55389404]
[-1.34588671 444.48782349]
[-1.23043418 459.49850464]
[-2.52112889 474.45407104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 199]
[55 198]
[56 197]
[57 195]
[58 194]
[61 191]
[62 190]
[63 189]
[68 188]
[69 187]
[70 186]
[71 185]
[72 184]
[75 181]
[76 180]
[77 179]
[78 174]
[79 173]
[80 172]
[85 166]
[87 164]
[88 163]
[89 162]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[97 150]
[98 149]
[99 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
