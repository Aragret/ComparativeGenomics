%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[77.03426361 467.65536499]
[63.01232147 462.10235596]
[50.81236267 453.23602295]
[41.20129013 441.61370850]
[34.78326416 427.96600342]
[31.96172905 413.15081787]
[32.91404343 398.09945679]
[37.58034897 383.75802612]
[45.66731644 371.02807617]
[56.66659164 360.70977783]
[69.88674927 353.45181274]
[84.49676514 349.71038818]
[84.49676514 334.71038818]
[84.49676514 319.71038818]
[84.49676514 304.71038818]
[82.27549744 301.97207642]
[81.27019501 298.02182007]
[82.03602600 293.44287109]
[84.84670258 289.04434204]
[77.68541718 275.98428345]
[86.03121185 262.54333496]
[78.86993408 249.48327637]
[87.21572876 236.04235840]
[87.88551331 221.05732727]
[88.55529785 206.07228088]
[81.39401245 193.01222229]
[89.73980713 179.57130432]
[90.40959167 164.58625793]
[91.07937622 149.60122681]
[91.63758850 134.61161804]
[92.08419800 119.61826324]
[92.53079987 104.62491608]
[90.63629913 102.23736572]
[89.56865692 99.10772705]
[89.60440826 95.54090881]
[90.90355682 91.93973541]
[93.47678375 88.75988007]
[94.81501770 73.81969452]
[96.15325165 58.87950897]
[97.49148560 43.93932343]
[91.01622772 29.50389481]
[99.85814667 17.51766205]
[91.69809723 30.10391045]
[80.08776855 39.60128784]
[66.13377380 45.10456848]
[51.16612625 46.08921432]
[36.61144638 42.46137238]
[23.85698891 34.56682968]
[14.11843014 23.15804100]
[8.32398701 9.32241917]
[7.02594995 -5.62131214]
[10.34803867 -20.24881172]
[17.97361374 -33.16587830]
[29.17585182 -43.14134216]
[42.88702774 -49.22439957]
[57.80028152 -50.83526230]
[72.49417877 -47.82038116]
[85.56818390 -40.46712494]
[95.77616882 -29.47635651]
[102.14517212 -15.89564419]
[104.06812286 -1.01828122]
[109.31483459 -15.07075214]
[114.56155396 -29.12322426]
[109.92726135 -41.16008759]
[114.58656311 -52.75640869]
[125.53559113 -57.89891434]
[130.99095154 -71.87171173]
[136.44630432 -85.84451294]
[134.25784302 -101.51362610]
[146.09408569 -110.55535126]
[138.64765930 -118.11257172]
[134.15585327 -127.68204498]
[133.10739136 -138.16275024]
[135.59642029 -148.35810852]
[141.31465149 -157.11262512]
[149.58934021 -163.44282532]
[159.46229553 -166.64772034]
[169.80088806 -166.38636780]
[176.07824707 -180.00967407]
[182.35560608 -193.63299561]
[183.10475159 -202.73664856]
[188.82919312 -207.41133118]
[195.30868530 -220.93968201]
[201.78817749 -234.46803284]
[208.26766968 -247.99636841]
[214.74717712 -261.52471924]
[221.22666931 -275.05307007]
[208.34434509 -282.75830078]
[196.22795105 -291.61929321]
[184.98081970 -301.56048584]
[174.69895935 -312.49700928]
[165.47004700 -324.33557129]
[157.37284851 -336.97521973]
[150.47644043 -350.30804443]
[144.83966064 -364.22030640]
[140.51060486 -378.59332275]
[137.52621460 -393.30447388]
[135.91194153 -408.22824097]
[135.68154907 -423.23730469]
[136.83702087 -438.20358276]
[139.36849976 -452.99938965]
[143.25437927 -467.49853516]
[148.46148682 -481.57723999]
[154.94543457 -495.11544800]
[162.65087891 -507.99765015]
[171.51208496 -520.11389160]
[181.45344543 -531.36083984]
[192.39015198 -541.64257812]
[204.22888184 -550.87127686]
[216.86863708 -558.96826172]
[230.20158386 -565.86444092]
[244.11395264 -571.50097656]
[258.48706055 -575.82977295]
[273.19824219 -578.81396484]
[288.12203979 -580.42797852]
[303.13110352 -580.65808105]
[318.09735107 -579.50238037]
[332.89312744 -576.97064209]
[347.39218140 -573.08453369]
[361.47082520 -567.87719727]
[375.00894165 -561.39300537]
[387.89099121 -553.68737793]
[400.00711060 -544.82592773]
[411.25390625 -534.88439941]
[421.53540039 -523.94750977]
[430.76391602 -512.10864258]
[438.86068726 -499.46875000]
[445.75665283 -486.13571167]
[451.39297485 -472.22323608]
[455.72152710 -457.85006714]
[458.70544434 -443.13882446]
[460.31921387 -428.21499634]
[460.54910278 -413.20593262]
[459.39312744 -398.23968506]
[456.86117554 -383.44396973]
[452.97482300 -368.94497681]
[447.76724243 -354.86642456]
[441.28283691 -341.32843018]
[433.57696533 -328.44650269]
[424.71536255 -316.33053589]
[414.77362061 -305.08389282]
[403.83657837 -294.80258179]
[391.99752808 -285.57424927]
[379.35751343 -277.47769165]
[366.02432251 -270.58197021]
[352.11178589 -264.94586182]
[337.73852539 -260.61755371]
[323.02722168 -257.63388062]
[308.10339355 -256.02035522]
[293.09432983 -255.79071045]
[278.12811279 -256.94692993]
[263.33239746 -259.47915649]
[248.83348083 -263.36575317]
[234.75500488 -268.57357788]
[228.27551270 -255.04522705]
[221.79602051 -241.51687622]
[215.31652832 -227.98852539]
[208.83702087 -214.46018982]
[202.35752869 -200.93183899]
[195.97892761 -187.35563660]
[189.70156860 -173.73231506]
[183.42420959 -160.10900879]
[194.11140442 -143.72613525]
[192.72303772 -124.07025146]
[179.64898682 -109.13507843]
[160.06687927 -105.09999084]
[162.64553833 -90.43030548]
[150.41909790 -80.38915253]
[144.96374512 -66.41635132]
[139.50839233 -52.44355774]
[143.08566284 -35.26304245]
[128.61402893 -23.87650490]
[123.36730957 -9.82403469]
[118.12059021 4.22843695]
[114.79833221 18.85589790]
[121.36930847 32.22270584]
[112.43167114 45.27755737]
[111.09343719 60.21774292]
[109.75520325 75.15792847]
[108.41696930 90.09811401]
[107.52415466 105.07151794]
[107.07754517 120.06487274]
[106.63093567 135.05821228]
[109.50345612 143.72923279]
[106.06441498 150.27101135]
[105.39463043 165.25604248]
[104.72484589 180.24108887]
[111.83821869 194.37298584]
[103.54033661 206.74206543]
[102.87055206 221.72711182]
[102.20076752 236.71214294]
[109.31414032 250.84403992]
[101.01625061 263.21313477]
[108.12962341 277.34503174]
[99.83174133 289.71411133]
[99.49676514 304.71038818]
[99.49676514 319.71038818]
[99.49676514 334.71038818]
[99.49676514 349.71038818]
[114.10677338 353.45181274]
[127.32693481 360.70977783]
[138.32620239 371.02807617]
[146.41317749 383.75802612]
[151.07948303 398.09945679]
[152.03179932 413.15081787]
[149.21026611 427.96600342]
[142.79223633 441.61370850]
[133.18116760 453.23602295]
[120.98120880 462.10235596]
[106.95925903 467.65536499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 199]
[13 198]
[14 197]
[15 196]
[19 195]
[21 193]
[23 191]
[24 190]
[25 189]
[27 187]
[28 186]
[29 185]
[30 183]
[31 182]
[32 181]
[37 180]
[38 179]
[39 178]
[40 177]
[42 175]
[61 174]
[62 173]
[63 172]
[66 170]
[67 169]
[68 168]
[70 166]
[78 162]
[79 161]
[80 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
