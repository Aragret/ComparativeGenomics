%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[189.76995850 888.58618164]
[174.97938538 886.07678223]
[160.29873657 882.98870850]
[145.75062561 879.32659912]
[131.35752869 875.09613037]
[117.14160156 870.30389404]
[103.12477875 864.95721436]
[89.32866669 859.06439209]
[75.77455139 852.63446045]
[62.48331833 845.67730713]
[49.47547150 838.20379639]
[36.77106476 830.22528076]
[24.38968277 821.75421143]
[12.35042286 812.80352783]
[0.67184627 803.38708496]
[-10.62803936 793.51940918]
[-21.53181076 783.21575928]
[-32.02265167 772.49194336]
[-42.08439255 761.36450195]
[-51.70151520 749.85064697]
[-60.85918808 737.96807861]
[-69.54329681 725.73516846]
[-77.74044037 713.17071533]
[-85.43799591 700.29412842]
[-92.62407684 687.12530518]
[-99.28761292 673.68450928]
[-105.41833496 659.99243164]
[-111.00677490 646.07025146]
[-116.04431915 631.93939209]
[-120.52321625 617.62164307]
[-124.43653870 603.13909912]
[-127.77825928 588.51409912]
[-130.54322815 573.76916504]
[-132.72718811 558.92700195]
[-134.32676697 544.01062012]
[-135.33949280 529.04290771]
[-135.76380920 514.04693604]
[-135.59906006 499.04592896]
[-134.84548950 484.06292725]
[-133.50427246 469.12106323]
[-131.57748413 454.24337769]
[-129.06808472 439.45278931]
[-125.97993469 424.77212524]
[-122.31781006 410.22406006]
[-118.08735657 395.83093262]
[-113.29508972 381.61502075]
[-107.94840240 367.59820557]
[-102.05554199 353.80209351]
[-95.62558746 340.24798584]
[-88.66846466 326.95678711]
[-81.19488525 313.94894409]
[-73.21638489 301.24453735]
[-64.74526978 288.86315918]
[-55.79459000 276.82391357]
[-46.37815094 265.14535522]
[-36.51047134 253.84548950]
[-26.20677185 242.94172668]
[-15.48293495 232.45089722]
[-4.35549736 222.38917542]
[7.15838337 212.77206421]
[19.04095268 203.61441040]
[31.27388954 194.93031311]
[43.83833313 186.73318481]
[56.71490479 179.03564453]
[69.88375854 171.84957886]
[83.32457733 165.18606567]
[97.01664734 159.05535889]
[110.93885040 153.46693420]
[105.90193176 139.33790588]
[100.86501312 125.20887756]
[95.82809448 111.07984924]
[92.98989868 125.80888367]
[84.79544067 138.37275696]
[72.46032715 146.90768433]
[57.81439590 150.14756775]
[43.03029251 147.61177063]
[30.30114174 139.67649841]
[21.51524162 127.51885986]
[17.97592735 112.94239807]
[20.20823288 98.10943604]
[27.88101387 85.22035217]
[39.85605240 76.18717194]
[54.35692978 72.34990692]
[69.23252106 74.27779388]
[82.27612305 81.68484497]
[91.55192566 93.47057343]
[89.54791260 78.60504150]
[87.54389954 63.73951340]
[85.53988647 48.87398529]
[83.53587341 34.00845718]
[68.58374023 31.92609406]
[54.74834442 25.88585663]
[43.05636978 16.33597183]
[34.37543869 3.98510098]
[29.34973145 -10.25023651]
[28.35218811 -25.31368637]
[31.45683670 -40.08743668]
[38.43328857 -53.47518158]
[48.76384354 -64.48345947]
[61.68191147 -72.29537964]
[76.22888184 -76.33125305]
[91.32527161 -76.29158783]
[105.85083008 -72.17932129]
[118.72766876 -64.29962158]
[129.00022888 -53.23720932]
[135.90623474 -39.81298828]
[138.93319702 -25.02312279]
[137.85650635 -9.96512508]
[132.75605774 4.24360514]
[124.01034546 16.54868507]
[112.26834869 26.03699684]
[98.40139771 32.00444412]
[100.40541077 46.86997223]
[102.40943146 61.73550034]
[104.41344452 76.60102844]
[106.41745758 91.46655273]
[109.95713043 106.04293060]
[114.99404144 120.17195892]
[120.03096008 134.30099487]
[125.06787872 148.43002319]
[139.38560486 143.95108032]
[153.86813354 140.03768921]
[168.49313354 136.69590759]
[183.23805237 133.93087769]
[198.08016968 131.74687195]
[212.99658203 130.14724731]
[227.96429443 129.13446045]
[242.96023560 128.71008301]
[257.96127319 128.87478638]
[272.94427490 129.62828064]
[287.88613892 130.96943665]
[302.76382446 132.89617920]
[317.55441284 135.40553284]
[332.23507690 138.49362183]
[346.78320312 142.15568542]
[361.17630005 146.38609314]
[375.39224243 151.17829895]
[389.40908813 156.52493286]
[403.20520020 162.41773987]
[416.75933838 168.84764099]
[430.05059814 175.80471802]
[443.05844116 183.27824402]
[455.76287842 191.25669861]
[468.14428711 199.72776794]
[480.18356323 208.67840576]
[491.86218262 218.09480286]
[503.16207886 227.96243286]
[514.06585693 238.26608276]
[524.55676270 248.98988342]
[534.61853027 260.11727905]
[544.23565674 271.63113403]
[553.39337158 283.51367188]
[562.07751465 295.74658203]
[570.27465820 308.31097412]
[577.97229004 321.18753052]
[585.15838623 334.35635376]
[591.82196045 347.79714966]
[597.95269775 361.48919678]
[603.54119873 375.41137695]
[608.57879639 389.54220581]
[613.05767822 403.85995483]
[616.97106934 418.34246826]
[620.31280518 432.96749878]
[623.07781982 447.71240234]
[625.26184082 462.55453491]
[626.86145020 477.47094727]
[627.87420654 492.43865967]
[628.29858398 507.43460083]
[628.13385010 522.43560791]
[627.38031006 537.41864014]
[626.03912354 552.36047363]
[624.11236572 567.23822021]
[621.60302734 582.02874756]
[618.51489258 596.70941162]
[614.85284424 611.25756836]
[610.62243652 625.65063477]
[605.83020020 639.86657715]
[600.48352051 653.88342285]
[594.59069824 667.67950439]
[588.16076660 681.23364258]
[581.20367432 694.52490234]
[573.73016357 707.53277588]
[565.75170898 720.23718262]
[557.28057861 732.61859131]
[548.32995605 744.65783691]
[538.91351318 756.33642578]
[529.04589844 767.63629150]
[518.74218750 778.54010010]
[508.01840210 789.03094482]
[496.89099121 799.09271240]
[485.37713623 808.70983887]
[473.49459839 817.86755371]
[461.26165771 826.55163574]
[448.69723511 834.74884033]
[435.82070923 842.44641113]
[422.65185547 849.63250732]
[409.21105957 856.29602051]
[395.51901245 862.42675781]
[381.59683228 868.01525879]
[367.46597290 873.05279541]
[353.14822388 877.53173828]
[338.66567993 881.44506836]
[324.04067993 884.78680420]
[309.29574585 887.55181885]
[294.45364380 889.73577881]
[279.53720093 891.33538818]
[264.56948853 892.34808350]
[249.57356262 892.77246094]
[234.57252502 892.60772705]
[219.58952332 891.85418701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 120]
[69 119]
[70 118]
[71 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
