%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[58.10884094 436.72875977]
[49.70376587 424.28323364]
[42.82969284 410.93093872]
[37.58312225 396.85934448]
[34.03770828 382.26599121]
[32.24322128 367.35571289]
[32.22485733 352.33786011]
[33.98287201 337.42324829]
[37.49258423 322.82122803]
[42.70472336 308.73684692]
[49.54611969 295.36779785]
[57.92073059 282.90176392]
[67.71099091 271.51373291]
[78.77945709 261.36358643]
[90.97074890 252.59382629]
[104.11371613 245.32754517]
[118.02385712 239.66677856]
[114.05176544 225.20225525]
[110.07966614 210.73773193]
[106.10757446 196.27320862]
[100.78133392 210.29573059]
[89.22013855 219.85285950]
[74.44605255 222.44638062]
[60.32098770 217.39836121]
[50.53720093 206.02833557]
[47.65214920 191.30841064]
[52.41998291 177.08631897]
[63.59439468 167.07969666]
[78.25442505 163.90425110]
[92.56797791 168.39002991]
[102.79310608 179.36367798]
[101.01064301 164.46997070]
[99.11734772 149.58993530]
[89.74903870 138.01046753]
[95.57325745 123.30030060]
[93.56924438 108.43476868]
[91.01341248 93.65412140]
[87.90930176 78.97881317]
[77.54447174 71.30202484]
[75.26117706 59.01502228]
[81.74720764 48.80434799]
[78.86193848 34.08445740]
[75.97666931 19.36456680]
[65.72937012 7.31037903]
[70.87406921 -6.66750669]
[67.98880005 -21.38739777]
[57.74150085 -33.44158554]
[62.88620758 -47.41947174]
[60.00093460 -62.13936234]
[57.11566162 -76.85925293]
[54.23038864 -91.57914734]
[51.34511566 -106.29903412]
[48.45984268 -121.01892853]
[45.57456970 -135.73881531]
[35.32727051 -147.79301453]
[40.47197723 -161.77088928]
[37.58670425 -176.49078369]
[34.70143127 -191.21067810]
[31.81615829 -205.93057251]
[28.93088531 -220.65045166]
[26.04561234 -235.37034607]
[11.13119030 -233.69320679]
[-3.87030840 -233.23731995]
[-18.85904884 -234.00572205]
[-33.73528290 -235.99330139]
[-48.40000916 -239.18682861]
[-62.75563812 -243.56504822]
[-76.70662689 -249.09881592]
[-90.16014099 -255.75131226]
[-103.02664185 -263.47827148]
[-115.22050476 -272.22827148]
[-126.66058350 -281.94308472]
[-137.27075195 -292.55804443]
[-146.98037720 -304.00250244]
[-155.72486877 -316.20031738]
[-163.44601440 -329.07031250]
[-170.09243774 -342.52682495]
[-175.61990356 -356.48031616]
[-179.99163818 -370.83792114]
[-183.17852783 -385.50408936]
[-185.15937805 -400.38122559]
[-185.92100525 -415.37030029]
[-185.45834351 -430.37161255]
[-183.77447510 -445.28527832]
[-180.88058472 -460.01205444]
[-176.79594421 -474.45394897]
[-171.54774475 -488.51486206]
[-165.17091370 -502.10119629]
[-157.70787048 -515.12255859]
[-149.20828247 -527.49230957]
[-139.72872925 -539.12805176]
[-129.33229065 -549.95239258]
[-118.08815765 -559.89337158]
[-106.07115173 -568.88470459]
[-93.36125183 -576.86663818]
[-80.04302979 -583.78601074]
[-66.20513153 -589.59680176]
[-51.93963623 -594.26031494]
[-37.34149170 -597.74554443]
[-22.50783539 -600.02929688]
[-7.53739166 -601.09637451]
[7.47021437 -600.93963623]
[22.41510773 -599.56018066]
[37.19783020 -596.96710205]
[51.72000504 -593.17773438]
[65.88498688 -588.21728516]
[79.59851837 -582.11877441]
[92.76931763 -574.92272949]
[105.30975342 -566.67712402]
[117.13635254 -557.43676758]
[128.17042542 -547.26318359]
[138.33853149 -536.22406006]
[147.57299805 -524.39282227]
[155.81239319 -511.84829712]
[163.00184631 -498.67391968]
[169.09355164 -484.95736694]
[174.04695129 -470.78991699]
[177.82908630 -456.26583862]
[180.41476440 -441.48184204]
[181.78680420 -426.53625488]
[181.93606567 -411.52856445]
[180.86155701 -396.55865479]
[178.57043457 -381.72613525]
[175.07794189 -367.12973022]
[170.40730286 -352.86657715]
[164.58963013 -339.03155518]
[157.66362000 -325.71679688]
[149.67536926 -313.01086426]
[140.67803955 -300.99832153]
[130.73150635 -289.75915527]
[119.90196991 -279.36810303]
[108.26148987 -269.89431763]
[95.88754272 -261.40090942]
[82.86247253 -253.94435120]
[69.27295685 -247.57426453]
[55.20943832 -242.33306885]
[40.76550293 -238.25561523]
[43.65077591 -223.53573608]
[46.53604889 -208.81584167]
[49.42132187 -194.09594727]
[52.30659485 -179.37605286]
[55.19186783 -164.65615845]
[65.23279572 -153.65484619]
[60.29446030 -138.62408447]
[63.17973328 -123.90419769]
[66.06501007 -109.18431091]
[68.95027924 -94.46441650]
[71.83554840 -79.74452972]
[74.72082520 -65.02463531]
[77.60609436 -50.30474472]
[87.64701843 -39.30342102]
[82.70869446 -24.27267075]
[85.59396362 -9.55277920]
[95.63488770 1.44854355]
[90.69655609 16.47929382]
[93.58183289 31.19918633]
[96.46710205 45.91907501]
[108.69702148 58.50461960]
[102.58460236 75.87470245]
[105.68871307 90.55001068]
[115.93389130 79.59389496]
[130.89871216 80.62054443]
[139.55168152 92.87314606]
[135.51412964 107.31954193]
[121.76241302 113.31037903]
[108.43476868 106.43075562]
[110.43878174 121.29628754]
[119.95043945 133.93902588]
[113.98287201 147.58592224]
[118.23074341 155.67253113]
[115.90435791 162.68750000]
[117.68682098 177.58122253]
[120.57209778 192.30110168]
[124.54418945 206.76564026]
[128.51628113 221.23016357]
[132.48838806 235.69468689]
[147.33869934 233.45756531]
[162.34936523 232.99256897]
[177.30966187 234.30624390]
[192.00958252 237.38014221]
[206.24273682 242.17111206]
[219.80934143 248.61189270]
[232.51893616 256.61206055]
[244.19308472 266.05932617]
[254.66790771 276.82101440]
[263.79635620 288.74609375]
[271.45028687 301.66717529]
[277.52224731 315.40280151]
[281.92700195 329.76019287]
[284.60269165 344.53778076]
[285.51174927 359.52810669]
[284.64144897 374.52072144]
[282.00399780 389.30520630]
[277.63641357 403.67391968]
[271.60003662 417.42523193]
[263.97955322 430.36605835]
[254.88197327 442.31469727]
[244.43502808 453.10348511]
[232.78535461 462.58090210]
[220.09649658 470.61392212]
[206.54660034 477.08978271]
[192.32588196 481.91754150]
[177.63397217 485.02944946]
[162.67710876 486.38183594]
[147.66529846 485.95568848]
[132.80924988 483.75698853]
[118.31752777 479.81661987]
[104.39358521 474.18988037]
[91.23288727 466.95574951]
[79.02017975 458.21585083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 176]
[18 175]
[19 174]
[20 173]
[31 172]
[32 171]
[33 169]
[35 167]
[36 166]
[37 160]
[38 159]
[41 157]
[42 156]
[43 155]
[45 153]
[46 152]
[48 150]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[61 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
