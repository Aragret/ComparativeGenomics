%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[4.84169531 740.70159912]
[-9.81553364 743.90380859]
[-24.61035538 746.39410400]
[-39.50821304 748.16668701]
[-54.47431183 749.21740723]
[-69.47370148 749.54388428]
[-84.47135162 749.14526367]
[-99.43222046 748.02258301]
[-114.32138824 746.17834473]
[-129.10406494 743.61694336]
[-143.74572754 740.34436035]
[-158.21217346 736.36816406]
[-172.46961975 731.69769287]
[-186.48478699 726.34387207]
[-200.22491455 720.31915283]
[-213.65792847 713.63763428]
[-226.75244141 706.31494141]
[-239.47787476 698.36816406]
[-251.80451965 689.81585693]
[-263.70358276 680.67797852]
[-275.14724731 670.97589111]
[-286.10882568 660.73223877]
[-296.56271362 649.97094727]
[-306.48443604 638.71722412]
[-315.85089111 626.99725342]
[-324.64016724 614.83843994]
[-332.83175659 602.26916504]
[-340.40652466 589.31878662]
[-347.34674072 576.01763916]
[-353.63623047 562.39666748]
[-359.26031494 548.48773193]
[-364.20584106 534.32336426]
[-368.46127319 519.93658447]
[-372.01663208 505.36099243]
[-374.86367798 490.63067627]
[-376.99569702 475.77996826]
[-378.40774536 460.84362793]
[-379.09652710 445.85650635]
[-379.06039429 430.85360718]
[-378.29949951 415.86999512]
[-376.81555176 400.94061279]
[-374.61206055 386.10037231]
[-371.69418335 371.38391113]
[-368.06869507 356.82562256]
[-363.74404907 342.45947266]
[-358.73040771 328.31906128]
[-353.03945923 314.43737793]
[-346.68444824 300.84683228]
[-339.68026733 287.57922363]
[-332.04327393 274.66549683]
[-323.79129028 262.13580322]
[-314.94357300 250.01943970]
[-305.52081299 238.34469604]
[-295.54501343 227.13880920]
[-285.03945923 216.42799377]
[-274.02871704 206.23722839]
[-262.53845215 196.59034729]
[-250.59555054 187.50985718]
[-238.22789001 179.01698303]
[-225.46434021 171.13153076]
[-212.33473206 163.87196350]
[-198.86970520 157.25518799]
[-185.10073853 151.29669189]
[-171.05996704 146.01037598]
[-156.78019714 141.40859985]
[-142.29476929 137.50210571]
[-127.63753510 134.30000305]
[-112.84269714 131.80978394]
[-97.94483185 130.03726196]
[-82.97872925 128.98657227]
[-67.97933960 128.66018677]
[-52.98169327 129.05885315]
[-38.02082443 130.18162537]
[-23.13167000 132.02590942]
[-8.34900761 134.58738708]
[6.29263735 137.86007690]
[20.75906944 141.83633423]
[35.01650238 146.50686646]
[49.03163528 151.86076355]
[62.77173615 157.88554382]
[69.45192719 144.45516968]
[76.13212585 131.02479553]
[82.81231689 117.59441376]
[89.49251556 104.16403961]
[75.62247467 109.87559509]
[61.01747513 106.45592499]
[51.12483215 95.18048096]
[49.63425446 80.25472260]
[57.10168457 67.24559784]
[70.74195862 61.00517654]
[85.46759796 63.86098480]
[95.78629303 74.74787903]
[97.84922791 89.60646820]
[106.07804108 77.06507111]
[114.30684662 64.52367401]
[122.53565216 51.98226929]
[110.92837524 42.45845032]
[100.39918518 31.75479126]
[91.06740570 19.99256897]
[83.03874969 7.30505991]
[76.40421295 -6.16397667]
[71.23895264 -20.26192665]
[67.60149384 -34.82904816]
[65.53306580 -49.70028305]
[65.05709076 -64.70713043]
[66.17897034 -79.67955780]
[68.88599396 -94.44790649]
[73.14748383 -108.84484100]
[78.91516113 -122.70723724]
[86.12366486 -135.87802124]
[94.69132233 -148.20796204]
[104.52104950 -159.55734253]
[115.50147247 -169.79757690]
[127.50817871 -178.81262207]
[140.40512085 -186.50035095]
[154.04615784 -192.77363586]
[168.27673340 -197.56140137]
[182.93560791 -200.80940247]
[197.85668945 -202.48083496]
[212.87089539 -202.55674744]
[227.80810547 -201.03630066]
[242.49906921 -197.93672180]
[256.77734375 -193.29312134]
[270.48114014 -187.15811157]
[283.45516968 -179.60121155]
[295.55242920 -170.70803833]
[306.63583374 -160.57937622]
[316.57986450 -149.32998657]
[325.27175903 -137.08732605]
[332.61309814 -123.99011993]
[338.52066040 -110.18675995]
[342.92755127 -95.83365631]
[345.78378296 -81.09343719]
[347.05703735 -66.13312531]
[346.73284912 -51.12223053]
[344.81491089 -36.23083496]
[341.32495117 -21.62767220]
[336.30255127 -7.47820759]
[329.80456543 6.05723619]
[321.90463257 18.82529068]
[312.69226074 30.68128586]
[302.27188110 41.49088287]
[290.76150513 51.13159943]
[278.29156494 59.49420166]
[265.00338745 66.48393250]
[251.04751587 72.02159882]
[236.58209229 76.04444122]
[221.77099609 78.50688934]
[206.78207397 79.38104248]
[191.78514099 78.65699005]
[176.95013428 76.34293365]
[162.44515991 72.46510315]
[148.43453979 67.06742859]
[135.07705688 60.21107864]
[126.84825134 72.75247955]
[118.61943817 85.29387665]
[110.39063263 97.83528137]
[102.92288971 110.84423065]
[96.24269867 124.27460480]
[89.56250000 137.70498657]
[82.88230896 151.13536072]
[76.20211029 164.56573486]
[89.29666138 171.88836670]
[102.02214050 179.83509827]
[114.34882355 188.38735962]
[126.24792480 197.52517700]
[137.69165039 207.22720337]
[148.65327454 217.47079468]
[159.10719299 228.23200989]
[169.02899170 239.48573303]
[178.39549255 251.20565796]
[187.18482971 263.36444092]
[195.37648010 275.93365479]
[202.95129395 288.88397217]
[209.89158630 302.18511963]
[216.18115234 315.80603027]
[221.80529785 329.71493530]
[226.75088501 343.87930298]
[231.00637817 358.26605225]
[234.56181335 372.84164429]
[237.40890503 387.57196045]
[239.54100037 402.42260742]
[240.95312500 417.35894775]
[241.64196777 432.34606934]
[241.60592651 447.34896851]
[240.84509277 462.33261108]
[239.36123657 477.26199341]
[237.15782166 492.10226440]
[234.23999023 506.81872559]
[230.61456299 521.37701416]
[226.29000854 535.74322510]
[221.27642822 549.88366699]
[215.58552551 563.76538086]
[209.23059082 577.35589600]
[202.22648621 590.62353516]
[194.58953857 603.53735352]
[186.33760071 616.06701660]
[177.48995972 628.18347168]
[168.06726074 639.85827637]
[158.09150696 651.06414795]
[147.58601379 661.77502441]
[136.57530212 671.96588135]
[125.08509827 681.61279297]
[113.14223480 690.69335938]
[100.77460480 699.18627930]
[88.01110077 707.07177734]
[74.88152313 714.33142090]
[61.41653442 720.94824219]
[47.64759064 726.90679932]
[33.60684967 732.19317627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[93 157]
[94 156]
[95 155]
[96 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
