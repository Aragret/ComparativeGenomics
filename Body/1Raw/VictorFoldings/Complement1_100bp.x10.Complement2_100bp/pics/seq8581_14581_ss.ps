%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[106.86095428 371.60568237]
[102.25122833 357.32431030]
[98.70881653 342.74148560]
[96.25305939 327.93688965]
[94.89737701 312.99133301]
[94.64916992 297.98648071]
[95.50978851 283.00427246]
[97.47453308 268.12652588]
[100.53268433 253.43453979]
[104.66752625 239.00851440]
[109.85648346 224.92724609]
[116.07121277 211.26765442]
[123.27777100 198.10433960]
[131.43679810 185.50920105]
[140.50372314 173.55102539]
[150.42904663 162.29513550]
[139.94154358 151.57075500]
[129.45404053 140.84637451]
[118.96654510 130.12199402]
[108.47904205 119.39761353]
[95.87805939 120.76466370]
[84.75467682 114.68815613]
[79.09632874 103.34634399]
[80.93135834 90.80496216]
[70.60469055 79.92562866]
[60.27802277 69.04629517]
[49.95135498 58.16696167]
[39.62468719 47.28762817]
[29.29801941 36.40829086]
[18.97134972 25.52895737]
[8.56397724 14.72680092]
[-1.92352402 4.00242138]
[-12.41102505 -6.72195816]
[-22.89852524 -17.44633865]
[-34.31795120 -7.71117210]
[-46.37511063 1.22200620]
[-59.01378632 9.31154537]
[-72.17504883 16.51972961]
[-85.79753113 22.81294823]
[-99.81772614 28.16186142]
[-114.17026520 32.54153061]
[-128.78822327 35.93153000]
[-143.60343933 38.31605911]
[-158.54684448 39.68400192]
[-173.54876709 40.02897263]
[-188.53926086 39.34936905]
[-203.44844055 37.64835739]
[-218.20677185 34.93386841]
[-232.74545288 31.21856117]
[-246.99668884 26.51975632]
[-260.89404297 20.85936165]
[-274.37274170 14.26376820]
[-287.36990356 6.76373005]
[-299.82492065 -1.60578537]
[-311.67977905 -10.80575466]
[-322.87915039 -20.79328346]
[-333.37084961 -31.52180290]
[-343.10592651 -42.94129562]
[-352.03903198 -54.99851227]
[-360.12847900 -67.63724518]
[-367.33657837 -80.79855347]
[-373.62969971 -94.42108154]
[-378.97851562 -108.44131470]
[-383.35809326 -122.79387665]
[-386.74801636 -137.41184998]
[-389.13244629 -152.22709656]
[-390.50027466 -167.17051697]
[-390.84515381 -182.17243958]
[-390.16543579 -197.16293335]
[-388.46432495 -212.07208252]
[-385.74975586 -226.83039856]
[-382.03433228 -241.36904907]
[-377.33544922 -255.62026978]
[-371.67495728 -269.51757812]
[-365.07925415 -282.99621582]
[-357.57913208 -295.99334717]
[-349.20953369 -308.44830322]
[-340.00949097 -320.30310059]
[-330.02188110 -331.50241089]
[-319.29330444 -341.99401855]
[-307.87374878 -351.72903442]
[-295.81646729 -360.66204834]
[-283.17767334 -368.75143433]
[-270.01632690 -375.95944214]
[-256.39373779 -382.25247192]
[-242.37347412 -387.60119629]
[-228.02088928 -391.98068237]
[-213.40289307 -395.37048340]
[-198.58763123 -397.75479126]
[-183.64421082 -399.12255859]
[-168.64227295 -399.46731567]
[-153.65179443 -398.78750610]
[-138.74264526 -397.08630371]
[-123.98435211 -394.37161255]
[-109.44572449 -390.65609741]
[-95.19454193 -385.95712280]
[-81.29725647 -380.29653931]
[-67.81866455 -373.70077515]
[-54.82160187 -366.20056152]
[-42.36667633 -357.83087158]
[-30.51195717 -348.63073730]
[-19.31271553 -338.64306641]
[-8.82116699 -327.91439819]
[0.91376877 -316.49478149]
[9.84670448 -304.43743896]
[17.93598938 -291.79861450]
[25.14390945 -278.63720703]
[31.43685341 -265.01458740]
[36.78548431 -250.99427795]
[41.16486359 -236.64164734]
[44.55456924 -222.02363586]
[46.93880463 -207.20835876]
[48.30644226 -192.26492310]
[48.65111160 -177.26300049]
[47.97120667 -162.27250671]
[46.26989746 -147.36337280]
[43.55511093 -132.60510254]
[39.83951187 -118.06649780]
[35.14041901 -103.81534576]
[29.47974396 -89.91809845]
[22.88388062 -76.43955231]
[15.38358116 -63.44254303]
[7.01381493 -50.98767090]
[-2.18639278 -39.13301468]
[-12.17414665 -27.93383980]
[-1.68664527 -17.20945930]
[8.80085564 -6.48507977]
[19.28835678 4.23930025]
[26.21242332 6.82369280]
[29.85068512 15.20228958]
[40.17735291 26.08162308]
[50.50402069 36.96095657]
[60.83069229 47.84029388]
[71.15735626 58.71962738]
[81.48402405 69.59896088]
[91.81069946 80.47829437]
[108.31417847 80.53115082]
[119.76477051 92.41609192]
[119.20342255 108.91011047]
[129.69093323 119.63449097]
[140.17842102 130.35887146]
[150.66592407 141.08325195]
[161.15342712 151.80763245]
[172.62817383 142.13615417]
[184.78584290 133.33853149]
[197.56004333 125.46280670]
[210.88101196 118.55200195]
[224.67597961 112.64386749]
[238.86961365 107.77066803]
[253.38436890 103.95900726]
[268.14102173 101.22972107]
[283.05889893 99.59770966]
[298.05661011 99.07188416]
[313.05215454 99.65512085]
[327.96371460 101.34422302]
[342.70977783 104.12998199]
[357.20986938 107.99716949]
[371.38473511 112.92466736]
[385.15698242 118.88557434]
[398.45138550 125.84731293]
[411.19534302 133.77188110]
[423.31924438 142.61598206]
[434.75689697 152.33131409]
[445.44580078 162.86482239]
[455.32757568 174.15896606]
[464.34823608 186.15206909]
[472.45855713 198.77862549]
[479.61422729 211.96966553]
[485.77615356 225.65315247]
[490.91070557 239.75434875]
[494.98980713 254.19624329]
[497.99118042 268.89993286]
[499.89846802 283.78515625]
[500.70120239 298.77056885]
[500.39505005 313.77435303]
[498.98165894 328.71456909]
[496.46875000 343.50958252]
[492.87002563 358.07861328]
[488.20520020 372.34207153]
[482.49969482 386.22207642]
[475.78469849 399.64279175]
[468.09686279 412.53094482]
[459.47821045 424.81616211]
[449.97579956 436.43127441]
[439.64151001 447.31289673]
[428.53179932 457.40161133]
[416.70736694 466.64227295]
[404.23275757 474.98443604]
[391.17614746 482.38250732]
[377.60879517 488.79614258]
[363.60485840 494.19024658]
[349.24078369 498.53540039]
[334.59500122 501.80786133]
[319.74755859 503.98974609]
[304.77954102 505.06915283]
[289.77264404 505.04016113]
[274.80889893 503.90298462]
[259.97000122 501.66375732]
[245.33697510 498.33477783]
[230.98977661 493.93417358]
[217.00675964 488.48602295]
[203.46429443 482.02005005]
[190.43634033 474.57159424]
[177.99404907 466.18130493]
[166.20538330 456.89505005]
[155.13473511 446.76351929]
[144.84255981 435.84207153]
[135.38507080 424.19030762]
[126.81391907 411.87191772]
[119.17592621 398.95419312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 128]
[32 127]
[33 126]
[34 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
