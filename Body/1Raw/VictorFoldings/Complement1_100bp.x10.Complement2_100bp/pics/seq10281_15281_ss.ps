%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[86.62300873 655.18096924]
[72.73548126 649.47412109]
[59.53325272 642.32336426]
[47.16590881 633.80975342]
[35.77358246 624.02984619]
[25.48535538 613.09436035]
[16.41780281 601.12725830]
[8.67366982 588.26416016]
[2.34069943 574.65069580]
[-2.50934911 560.44122314]
[-5.82152128 545.79669189]
[-7.55828762 530.88311768]
[-7.69996977 515.86938477]
[-6.24496126 500.92565918]
[-3.20974946 486.22125244]
[1.37127471 471.92276001]
[7.44620466 458.19223022]
[14.94620705 445.18524170]
[23.78630066 433.04913330]
[33.86632156 421.92147827]
[45.07205200 411.92828369]
[57.27652740 403.18283081]
[70.34146118 395.78421021]
[84.11881256 389.81622314]
[98.45247650 385.34655762]
[113.18003845 382.42578125]
[104.33811951 370.43954468]
[110.81337738 356.00411987]
[109.47514343 341.06393433]
[108.13690948 326.12374878]
[99.29499054 314.13751221]
[105.77024841 299.70208740]
[96.69187164 291.70773315]
[95.45468903 279.27175903]
[103.26468658 269.00692749]
[102.14903259 254.04847717]
[101.03338623 239.09002686]
[99.91773987 224.13157654]
[98.80209351 209.17312622]
[89.84374237 201.04449463]
[88.79185486 188.59149170]
[96.75380707 178.44407654]
[88.27268982 166.19990540]
[95.17486572 151.96366882]
[94.28205109 136.99024963]
[85.80092621 124.74607849]
[92.70310974 110.50984192]
[86.83180237 124.31302643]
[77.75286865 136.25341797]
[66.02148438 145.60086060]
[52.35504150 151.78375244]
[37.58923340 154.42402649]
[22.62700653 153.36019897]
[8.38329983 148.65734863]
[-4.27087545 140.60304260]
[-14.56171322 129.68980408]
[-21.85992432 116.58499908]
[-25.71921921 102.08996582]
[-25.90360260 87.09110260]
[-22.40179634 72.50558472]
[-15.42794037 59.22532272]
[-5.40848732 48.06241226]
[7.04386902 39.69947052]
[21.16766357 34.64789200]
[36.09922028 33.21658325]
[50.92546463 35.49306870]
[64.73977661 41.33814240]
[76.69739532 50.39437866]
[86.06710815 62.10797882]
[92.27596283 75.76264954]
[94.94427490 90.52344513]
[99.13128662 76.11965942]
[102.99559021 61.62596893]
[98.73334503 46.38970184]
[109.25549316 35.84770203]
[112.79516602 21.27132797]
[116.33483124 6.69495153]
[119.87450409 -7.88142347]
[123.41417694 -22.45779991]
[119.15193176 -37.69406509]
[129.67407227 -48.23606491]
[133.21374512 -62.81243896]
[135.43887329 -77.64648438]
[136.33168030 -92.61988831]
[137.22450256 -107.59329224]
[125.37533569 -120.46250916]
[126.47797394 -137.58264160]
[139.36270142 -148.39108276]
[140.03248596 -163.37612915]
[140.70227051 -178.36116028]
[141.37205505 -193.34620667]
[141.93026733 -208.33581543]
[142.37687683 -223.32916260]
[142.82348633 -238.32250977]
[143.27009583 -253.31587219]
[128.81539917 -257.64303589]
[115.97369385 -265.56472778]
[105.62055969 -276.54083252]
[98.46187592 -289.82296753]
[94.98574066 -304.50558472]
[95.42915344 -319.58755493]
[99.76189423 -334.04055786]
[107.68853760 -346.87921143]
[118.66864777 -357.22811890]
[131.95356750 -364.38165283]
[146.63751221 -367.85214233]
[161.71931458 -367.40289307]
[176.17065430 -363.06457520]
[189.00622559 -355.13296509]
[199.35089111 -344.14886475]
[206.49931335 -330.86117554]
[209.96411133 -316.17590332]
[209.50904846 -301.09426880]
[205.16514587 -286.64462280]
[197.22859192 -273.81210327]
[186.24049377 -263.47167969]
[172.95005798 -256.32839966]
[158.26344299 -252.86926270]
[157.81683350 -237.87591553]
[157.37022400 -222.88255310]
[156.92361450 -207.88920593]
[159.86657715 -201.10977173]
[156.35710144 -192.67642212]
[155.68731689 -177.69137573]
[155.01753235 -162.70634460]
[154.34774780 -147.72129822]
[164.28796387 -139.52243042]
[167.74252319 -126.90703583]
[163.23411560 -114.42166138]
[152.19790649 -106.70047760]
[151.30508423 -91.72707367]
[150.41227722 -76.75366974]
[159.27726746 -88.85374451]
[172.47343445 -95.98543549]
[187.45281982 -96.77172089]
[201.32312012 -91.06078339]
[211.40620422 -79.95531464]
[215.75518799 -65.59960938]
[213.53033447 -50.76552200]
[205.16125488 -38.31729126]
[192.26388550 -30.65846825]
[177.32847595 -29.26785660]
[163.23884583 -34.41395950]
[152.71548462 -45.10314560]
[147.79013062 -59.27276611]
[144.25045776 -44.69639206]
[148.76588440 -30.50272560]
[137.99055481 -18.91812706]
[134.45088196 -4.34175110]
[130.91120911 10.23462391]
[127.37153625 24.81099892]
[123.83186340 39.38737488]
[128.34729004 53.58104324]
[117.57196808 65.16564178]
[119.08432007 68.35078430]
[119.12905884 72.42668915]
[117.30432129 76.69561005]
[113.53507233 80.30667114]
[109.34806061 94.71045685]
[107.67651367 109.61702728]
[116.22149658 122.93220520]
[109.25545502 136.09744263]
[110.14827728 151.07084656]
[118.69326019 164.38601685]
[111.72721863 177.55125427]
[122.22114563 192.68264771]
[113.76054382 208.05747986]
[114.87619019 223.01593018]
[115.99184418 237.97438049]
[117.10749054 252.93283081]
[118.22313690 267.89129639]
[128.94119263 282.86474609]
[120.71043396 298.36383057]
[129.64807129 311.41870117]
[123.07709503 324.78549194]
[124.41532898 339.72567749]
[125.75356293 354.66586304]
[134.69120789 367.72073364]
[128.12022400 381.08752441]
[143.13243103 381.34442139]
[158.03227234 383.19561768]
[172.65092468 386.62005615]
[186.82275391 391.57901001]
[200.38719177 398.01626587]
[213.19052124 405.85888672]
[225.08769226 415.01800537]
[235.94387817 425.38986206]
[245.63609314 436.85690308]
[254.05450439 449.28921509]
[261.10372925 462.54595947]
[266.70388794 476.47686768]
[270.79153442 490.92410278]
[273.32034302 505.72402954]
[274.26165771 520.70886230]
[273.60482788 535.70892334]
[271.35729980 550.55413818]
[267.54449463 565.07635498]
[262.20968628 579.11102295]
[255.41326904 592.49908447]
[247.23226929 605.08892822]
[237.75938416 616.73779297]
[227.10194397 627.31378174]
[215.38069153 636.69696045]
[202.72846985 644.78112793]
[189.28862000 651.47454834]
[175.21343994 656.70153809]
[160.66238403 660.40277100]
[145.80035400 662.53631592]
[130.79573059 663.07800293]
[115.81853485 662.02172852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 179]
[28 177]
[29 176]
[30 175]
[32 173]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[42 165]
[44 163]
[45 162]
[47 160]
[71 159]
[72 158]
[73 154]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[81 146]
[82 145]
[83 132]
[84 131]
[85 130]
[88 126]
[89 125]
[90 124]
[91 123]
[92 121]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
