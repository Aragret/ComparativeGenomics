%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[72.68721771 613.29217529]
[59.86332321 621.09143066]
[46.41642380 627.75946045]
[32.44608688 633.24682617]
[18.05574417 637.51287842]
[3.35193563 640.52612305]
[-11.55647373 642.26416016]
[-26.55910492 642.71417236]
[-41.54488373 641.87280273]
[-56.40285492 639.74627686]
[-71.02301788 636.35034180]
[-85.29711914 631.71014404]
[-99.11949158 625.86004639]
[-112.38778687 618.84338379]
[-125.00376892 610.71203613]
[-136.87403870 601.52630615]
[-147.91070557 591.35406494]
[-158.03205872 580.27081299]
[-167.16316223 568.35839844]
[-175.23640442 555.70520020]
[-182.19203186 542.40478516]
[-187.97851562 528.55566406]
[-192.55303955 514.26037598]
[-195.88172913 499.62478638]
[-197.93994141 484.75720215]
[-198.71243286 469.76770020]
[-198.19348145 454.76730347]
[-196.38693237 439.86703491]
[-193.30616760 425.17724609]
[-188.97399902 410.80664062]
[-183.42247009 396.86169434]
[-176.69271851 383.44558716]
[-168.83456421 370.65765381]
[-159.90617371 358.59262085]
[-149.97364807 347.33978271]
[-139.11054993 336.98245239]
[-127.39728546 327.59729004]
[-114.92057800 319.25384521]
[-101.77281189 312.01382446]
[-88.05133057 305.93087769]
[-73.85771179 301.05001831]
[-59.29705811 297.40740967]
[-44.47716522 295.02996826]
[-29.50775528 293.93533325]
[-14.49966049 294.13162231]
[0.43600363 295.61734009]
[15.18865585 298.38153076]
[29.64907074 302.40368652]
[34.89579010 288.35122681]
[40.14250565 274.29876709]
[45.38922501 260.24627686]
[50.63594437 246.19381714]
[55.88265991 232.14134216]
[60.60279465 217.90335083]
[64.78981018 203.49957275]
[68.97681427 189.09579468]
[72.94891357 174.63127136]
[76.70521545 160.10920715]
[80.46151733 145.58714294]
[76.15791321 131.32781982]
[87.10452271 119.90493774]
[90.86081696 105.38288116]
[93.96492767 90.70758057]
[96.41065979 75.90830994]
[98.85638428 61.10903549]
[101.30210876 46.30976486]
[103.30612946 31.44423676]
[95.41977692 14.80431366]
[106.27400208 1.01472461]
[107.61223602 -13.92546082]
[108.95046997 -28.86564636]
[110.28870392 -43.80583191]
[111.62693787 -58.74601746]
[112.96517181 -73.68620300]
[114.30340576 -88.62638855]
[115.64163971 -103.56657410]
[113.21092224 -109.71499634]
[114.11451721 -115.32575226]
[117.24862671 -118.92940521]
[119.03109741 -133.82312012]
[120.81356049 -148.71684265]
[122.59603119 -163.61056519]
[124.37849426 -178.50427246]
[126.16095734 -193.39799500]
[111.57239532 -196.96606445]
[97.52029419 -202.26661682]
[84.20958710 -209.22236633]
[71.83436584 -217.73184204]
[60.57511520 -227.67098999]
[50.59601974 -238.89485168]
[42.04260635 -251.23974609]
[35.03960800 -264.52566528]
[29.68914604 -278.55883789]
[26.06925011 -293.13461304]
[24.23270798 -308.04046631]
[24.20630264 -323.05902100]
[25.99041748 -337.97125244]
[29.55903435 -352.55966187]
[34.86011505 -366.61157227]
[41.81635284 -379.92202759]
[50.32630539 -392.29690552]
[60.26586914 -403.55578613]
[71.49010468 -413.53448486]
[83.83531952 -422.08743286]
[97.12149048 -429.08993530]
[111.15486145 -434.43988037]
[125.73078918 -438.05920410]
[140.63670349 -439.89520264]
[155.65525818 -439.92105103]
[170.56741333 -438.13638306]
[185.15570068 -434.56719971]
[199.20741272 -429.26559448]
[212.51759338 -422.30886841]
[224.89218140 -413.79846191]
[236.15068054 -403.85845947]
[246.12893677 -392.63388062]
[254.68144226 -380.28833008]
[261.68344116 -367.00189209]
[267.03286743 -352.96832275]
[270.65167236 -338.39227295]
[272.48709106 -323.48626709]
[272.51235962 -308.46771240]
[270.72714233 -293.55563354]
[267.15744019 -278.96746826]
[261.85528564 -264.91598511]
[254.89807129 -251.60603333]
[246.38719177 -239.23178101]
[236.44677734 -227.97364807]
[225.22180176 -217.99580383]
[212.87594604 -209.44377136]
[199.58924866 -202.44226074]
[185.55548096 -197.09338379]
[170.97927856 -193.47511292]
[156.07322693 -191.64024353]
[141.05467224 -191.61552429]
[139.27221680 -176.72181702]
[137.48974609 -161.82809448]
[135.70727539 -146.93437195]
[133.92481995 -132.04066467]
[132.14234924 -117.14694214]
[130.58181763 -102.22834015]
[129.24359131 -87.28815460]
[127.90535736 -72.34796906]
[126.56712341 -57.40777969]
[125.22888947 -42.46759796]
[123.89065552 -27.52741051]
[122.55242157 -12.58722591]
[121.21418762 2.35295868]
[128.72729492 11.83345222]
[127.73465729 24.29131889]
[118.22473145 33.00476074]
[119.88313293 35.26481247]
[120.74623108 38.31795502]
[120.50744629 41.86455536]
[118.97425842 45.49964523]
[116.10137939 48.75549316]
[113.65565491 63.55476379]
[111.20993042 78.35403442]
[108.76419830 93.15330505]
[121.55717468 85.32133484]
[136.17285156 88.69507599]
[144.23869324 101.34189606]
[141.13423157 116.01712799]
[128.63784790 124.31412506]
[113.90802002 121.47999573]
[105.38288116 109.13918304]
[101.62657928 123.66123962]
[105.66150665 138.95927429]
[94.98357391 149.34344482]
[91.22727203 163.86550903]
[87.47097015 178.38757324]
[88.86667633 184.85003662]
[87.06034851 190.23837280]
[83.38059998 193.28280640]
[79.19358826 207.68658447]
[75.00657654 222.09036255]
[89.20893860 217.26408386]
[101.91907501 225.22979736]
[103.76753998 240.11546326]
[93.39172363 250.94793701]
[78.44028473 249.74191284]
[69.93513489 237.38806152]
[64.68841553 251.44053650]
[59.44169617 265.49301147]
[54.19497681 279.54547119]
[48.94826126 293.59793091]
[43.70154190 307.65042114]
[57.25960159 314.08938599]
[70.21393585 321.67007446]
[82.46864319 330.33630371]
[93.93298340 340.02395630]
[104.52208710 350.66125488]
[114.15753937 362.16949463]
[122.76802063 374.46343994]
[130.28976440 387.45208740]
[136.66709900 401.03924561]
[141.85278320 415.12432861]
[145.80844116 429.60308838]
[148.50479126 444.36828613]
[149.92184448 459.31063843]
[150.04914856 474.31945801]
[148.88572693 489.28369141]
[146.44020081 504.09249878]
[142.73068237 518.63623047]
[137.78463745 532.80731201]
[131.63867188 546.50067139]
[124.33831024 559.61499023]
[115.93759155 572.05322266]
[106.49871063 583.72326660]
[96.09155273 594.53863525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[54 176]
[55 175]
[56 174]
[57 171]
[58 170]
[59 169]
[61 167]
[62 166]
[63 159]
[64 158]
[65 157]
[66 156]
[67 151]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
