%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[54.02464676 765.54162598]
[39.23007965 768.07855225]
[24.26611137 769.25958252]
[9.25674152 769.07501221]
[-5.67365360 767.52624512]
[-20.40135384 764.62622070]
[-34.80432129 760.39898682]
[-48.76319885 754.87945557]
[-62.16232300 748.11346436]
[-74.89066315 740.15704346]
[-86.84274292 731.07611084]
[-97.91951752 720.94598389]
[-108.02920532 709.85052490]
[-117.08802795 697.88165283]
[-125.02092743 685.13867188]
[-131.76216125 671.72705078]
[-137.25587463 657.75799561]
[-141.45654297 643.34729004]
[-144.32934570 628.61425781]
[-145.85047913 613.68096924]
[-146.00735474 598.67132568]
[-144.79866028 583.70953369]
[-142.23442078 568.91967773]
[-138.33587646 554.42431641]
[-133.13533020 540.34344482]
[-126.67588043 526.79388428]
[-119.01105499 513.88787842]
[-110.20436096 501.73233032]
[-100.32878876 490.42797852]
[-89.46616364 480.06851196]
[-77.70648956 470.73977661]
[-65.14723206 462.51904297]
[-51.89244843 455.47448730]
[-38.05197906 449.66442871]
[-23.74051476 445.13705444]
[-9.07664394 441.92984009]
[5.81812048 440.06939697]
[20.82035255 439.57113647]
[35.80573654 440.43917847]
[38.03085327 425.60513306]
[40.25597000 410.77108765]
[42.48109055 395.93704224]
[44.70620728 381.10299683]
[42.58971024 374.02188110]
[47.07646561 366.06530762]
[49.52219391 351.26605225]
[37.92338181 341.92083740]
[32.52365112 327.93157959]
[34.86660004 313.01928711]
[44.42191696 301.20434570]
[58.70127106 295.72280884]
[61.14699936 280.92352295]
[55.58840179 267.10501099]
[65.47225952 254.75106812]
[67.91798401 239.95179749]
[65.91434479 235.61654663]
[66.61282349 229.97657776]
[70.66316223 224.75103760]
[73.54843140 210.03114319]
[76.43370819 195.31124878]
[79.31897736 180.59136963]
[82.20425415 165.87147522]
[85.08952332 151.15158081]
[87.97479248 136.43168640]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.65325165 91.70563507]
[92.87657928 76.70729828]
[93.09990692 61.70896149]
[93.32323456 46.71062469]
[93.54656219 31.71228600]
[93.43489838 16.71270180]
[92.98828888 1.71935165]
[92.54168701 -13.27399826]
[92.09507751 -28.26734924]
[88.95095825 -34.08336258]
[89.18141937 -39.76173782]
[91.86509705 -43.71229172]
[91.86509705 -58.71229172]
[91.86509705 -73.71228790]
[84.12779999 -87.51246643]
[91.86509705 -100.23973846]
[91.86509705 -115.23973846]
[88.89553833 -121.14678192]
[89.29496002 -126.81578064]
[92.09507751 -130.68467712]
[92.54168701 -145.67802429]
[92.98828888 -160.67138672]
[93.43489838 -175.66473389]
[93.88150024 -190.65808105]
[93.76983643 -205.65766907]
[93.10005188 -220.64270020]
[92.43026733 -235.62774658]
[91.76048279 -250.61277771]
[83.41468811 -264.05371094]
[90.57596588 -277.11376953]
[89.90618134 -292.09881592]
[75.71579742 -297.62625122]
[65.00506592 -308.45217896]
[59.62969971 -322.70086670]
[60.52100372 -337.90368652]
[67.52455139 -351.42663574]
[79.42694855 -360.92678833]
[94.16601562 -364.75817871]
[109.18814087 -362.25701904]
[121.89063263 -353.85662842]
[130.07270813 -341.01242065]
[132.31678772 -325.94976807]
[128.23405457 -311.27832031]
[118.53188324 -299.54000854]
[104.89122009 -292.76858521]
[105.56100464 -277.78353882]
[113.85889435 -265.41445923]
[106.74552155 -251.28256226]
[107.41530609 -236.29753113]
[108.08509064 -221.31248474]
[108.75487518 -206.32745361]
[120.64932251 -215.46649170]
[135.24650574 -212.01358032]
[141.78590393 -198.51409912]
[135.44692993 -184.91934204]
[120.90243530 -181.25086975]
[108.87485504 -190.21147156]
[108.42824554 -175.21812439]
[107.98164368 -160.22477722]
[107.53503418 -145.23143005]
[107.08842468 -130.23806763]
[106.86509705 -115.23973846]
[106.86509705 -100.23973846]
[114.60240173 -87.51246643]
[106.86509705 -73.71228790]
[106.86509705 -58.71229172]
[106.86509705 -43.71229172]
[107.08842468 -28.71395493]
[107.53503418 -13.72060394]
[107.98164368 1.27274573]
[108.42824554 16.26609612]
[110.73005676 18.93705177]
[111.85252380 22.85560989]
[111.22336578 27.45533371]
[108.54489899 31.93561363]
[108.32157135 46.93395233]
[108.09824371 61.93228912]
[107.87491608 76.93062592]
[107.65158844 91.92896271]
[119.14122772 82.28591919]
[134.09565735 83.45423126]
[143.94830322 94.76463318]
[143.05513000 109.73802185]
[131.92778015 119.79695129]
[116.94050598 119.17921448]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[117.42264557 114.57863617]
[132.21321106 117.07645416]
[141.01751709 129.22076416]
[138.79203796 144.05476379]
[126.81164551 153.08084106]
[111.93924713 151.12846375]
[102.69468689 139.31695557]
[99.80941772 154.03684998]
[96.92414093 168.75674438]
[94.03887177 183.47663879]
[91.15359497 198.19653320]
[88.26832581 212.91641235]
[85.38304901 227.63630676]
[82.71725464 242.39752197]
[80.27153015 257.19680786]
[85.65518951 272.07385254]
[75.94626617 283.36926270]
[73.50054169 298.16851807]
[85.25707245 307.95275879]
[90.50308228 322.21377563]
[87.92366791 337.08700562]
[78.31024170 348.59515381]
[64.32146454 353.71176147]
[61.87573624 368.51104736]
[59.54024887 383.32812500]
[57.31513214 398.16217041]
[55.09001541 412.99618530]
[52.86489868 427.83023071]
[50.63978195 442.66427612]
[65.22033691 446.23117065]
[79.41613007 451.10916138]
[93.10951996 457.25784302]
[106.18703461 464.62628174]
[118.54032135 473.15338135]
[130.06700134 482.76852417]
[140.67155457 493.39199829]
[150.26612854 504.93582153]
[158.77119446 517.30426025]
[166.11628723 530.39489746]
[172.24055481 544.09924316]
[177.09321594 558.30371094]
[180.63407898 572.89062500]
[182.83381653 587.73907471]
[183.67416382 602.72601318]
[183.14819336 617.72729492]
[181.26023865 632.61859131]
[178.02595520 647.27655029]
[173.47215271 661.57965088]
[167.63655090 675.40936279]
[160.56750488 688.65106201]
[152.32359314 701.19512939]
[142.97314453 712.93756104]
[132.59364319 723.78100586]
[121.27107239 733.63568115]
[109.09927368 742.41992188]
[96.17910004 750.06091309]
[82.61763000 756.49530029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[45 177]
[46 176]
[51 171]
[52 170]
[54 168]
[55 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 153]
[66 152]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 137]
[73 136]
[74 135]
[75 134]
[78 133]
[79 132]
[80 131]
[82 129]
[83 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 117]
[92 116]
[93 115]
[94 114]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
