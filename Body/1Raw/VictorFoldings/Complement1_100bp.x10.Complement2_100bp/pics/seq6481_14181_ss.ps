%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[83.55390167 329.42828369]
[76.12184906 342.46286011]
[67.92357635 355.02963257]
[58.98843384 367.08361816]
[49.34840393 378.58166504]
[39.03799057 389.48263550]
[28.09410858 399.74746704]
[16.55593300 409.33944702]
[4.46476841 418.22424316]
[-8.13610268 426.36999512]
[-21.20157242 433.74758911]
[-34.68486786 440.33062744]
[-48.53772354 446.09552002]
[-62.71055222 451.02160645]
[-77.15261078 455.09130859]
[-91.81221008 458.29000854]
[-106.63686371 460.60629272]
[-121.57350922 462.03182983]
[-136.56866455 462.56158447]
[-151.56867981 462.19357300]
[-166.51982117 460.92916870]
[-181.36859131 458.77288818]
[-196.06182861 455.73242188]
[-210.54693604 451.81869507]
[-224.77204895 447.04571533]
[-238.68626404 441.43054199]
[-252.23976135 434.99328613]
[-265.38403320 427.75701904]
[-278.07202148 419.74758911]
[-290.25827026 410.99371338]
[-301.89920044 401.52670288]
[-312.95315552 391.38046265]
[-323.38049316 380.59133911]
[-333.14395142 369.19790649]
[-342.20855713 357.24093628]
[-350.54187012 344.76330566]
[-358.11404419 331.80963135]
[-364.89797974 318.42630005]
[-370.86938477 304.66119385]
[-376.00689697 290.56362915]
[-380.29211426 276.18405151]
[-383.70968628 261.57391357]
[-386.24740601 246.78556824]
[-387.89617920 231.87190247]
[-388.65008545 216.88633728]
[-388.50646973 201.88252258]
[-387.46578979 186.91413879]
[-385.53179932 172.03477478]
[-382.71145630 157.29771423]
[-379.01477051 142.75569153]
[-374.45504761 128.46078491]
[-369.04861450 114.46415710]
[-362.81475830 100.81590271]
[-355.77584839 87.56488800]
[-347.95709229 74.75855255]
[-339.38641357 62.44273376]
[-330.09457397 50.66152191]
[-320.11477661 39.45708847]
[-309.48278809 28.86954308]
[-298.23663330 18.93678856]
[-286.41659546 9.69438267]
[-274.06497192 1.17540836]
[-261.22598267 -6.58963776]
[-247.94558716 -13.57295799]
[-234.27133179 -19.74955368]
[-220.25216675 -25.09731674]
[-205.93827820 -29.59709930]
[-191.38090515 -33.23279572]
[-176.63215637 -35.99139023]
[-161.74482727 -37.86300659]
[-146.77221680 -38.84095001]
[-131.76791382 -38.92171478]
[-116.78563690 -38.10501099]
[-101.87902069 -36.39376450]
[-87.10143280 -33.79410172]
[-72.50576019 -30.31533051]
[-58.14425278 -25.96989822]
[-44.06833267 -20.77336502]
[-30.32838058 -14.74433231]
[-16.97358513 -7.90438128]
[-4.05174971 -0.27799901]
[8.39086533 8.10751438]
[20.30972099 17.22214127]
[31.66214752 27.03325272]
[42.40750885 37.50572968]
[52.50733566 48.60207748]
[61.92547989 60.28258133]
[70.62821960 72.50542450]
[78.58440399 85.22684479]
[85.76554871 98.40131378]
[93.90888214 87.03567505]
[107.85585022 88.02247620]
[121.43205261 81.64386749]
[135.00825500 75.26526642]
[148.58447266 68.88665771]
[162.16067505 62.50805664]
[175.73687744 56.12945175]
[170.27708435 42.15232849]
[165.76306152 27.84174728]
[162.21495056 13.26161575]
[159.64862061 -1.52294433]
[158.07553101 -16.44590187]
[157.50268555 -31.44060516]
[157.93267822 -46.44008255]
[159.36355591 -61.37734604]
[161.78894043 -76.18568420]
[165.19801331 -90.79895020]
[169.57551575 -105.15187836]
[174.90193176 -119.18037415]
[181.15345764 -132.82176208]
[188.30216980 -146.01515198]
[196.31613159 -158.70158386]
[205.15957642 -170.82440186]
[214.79298401 -182.32948303]
[225.17332458 -193.16542053]
[236.25425720 -203.28382874]
[247.98629761 -212.63951111]
[260.31701660 -221.19068909]
[273.19134521 -228.89915466]
[286.55181885 -235.73049927]
[300.33874512 -241.65420532]
[314.49050903 -246.64381409]
[328.94396973 -250.67704773]
[343.63455200 -253.73588562]
[358.49661255 -255.80665588]
[373.46380615 -256.88012695]
[388.46926880 -256.95150757]
[403.44601440 -256.02044678]
[418.32711792 -254.09115601]
[433.04611206 -251.17219543]
[447.53726196 -247.27664185]
[461.73587036 -242.42187500]
[475.57852173 -236.62959290]
[489.00335693 -229.92564392]
[501.95043945 -222.33999634]
[514.36193848 -213.90649414]
[526.18243408 -204.66284180]
[537.35913086 -194.65029907]
[547.84210205 -183.91360474]
[557.58453369 -172.50068665]
[566.54284668 -160.46252441]
[574.67712402 -147.85290527]
[581.95104980 -134.72813416]
[588.33203125 -121.14681244]
[593.79168701 -107.16962433]
[598.30554199 -92.85898590]
[601.85345459 -78.27880859]
[604.41955566 -63.49421692]
[605.99249268 -48.57123947]
[606.56512451 -33.57653046]
[606.13494873 -18.57705688]
[604.70391846 -3.63981032]
[602.27832031 11.16849327]
[598.86907959 25.78171730]
[594.49139404 40.13459396]
[589.16479492 54.16301727]
[582.91308594 67.80433655]
[575.76422119 80.99762726]
[567.75012207 93.68395996]
[558.90649414 105.80667114]
[549.27294922 117.31162262]
[538.89245605 128.14743042]
[527.81140137 138.26570129]
[516.07928467 147.62123108]
[503.74844360 156.17225647]
[490.87399292 163.88056946]
[477.51345825 170.71174622]
[463.72647095 176.63528442]
[449.57461548 181.62471008]
[435.12109375 185.65776062]
[420.43048096 188.71640015]
[405.56838989 190.78700256]
[390.60119629 191.86027527]
[375.59570312 191.93145752]
[360.61898804 191.00022888]
[345.73791504 189.07073975]
[331.01895142 186.15159607]
[316.52783203 182.25585938]
[302.32928467 177.40092468]
[288.48672485 171.60845947]
[275.06198120 164.90434265]
[262.11499023 157.31852722]
[249.70358276 148.88488770]
[237.88319397 139.64106750]
[226.70663452 129.62838745]
[216.22381592 118.89155579]
[206.48155212 107.47852325]
[197.52334595 95.44025421]
[189.38920593 82.83052826]
[182.11549377 69.70565796]
[168.53927612 76.08426666]
[154.96307373 82.46286774]
[141.38687134 88.84147644]
[127.81066132 95.22007751]
[114.23445129 101.59868622]
[106.09111786 112.96432495]
[92.14414978 111.97752380]
[97.70122528 125.91504669]
[102.41482544 140.15995789]
[106.26808167 154.66127014]
[109.24720001 169.36705017]
[111.34151459 184.22470093]
[112.54353333 199.18098450]
[112.84894562 214.18238831]
[112.25666046 229.17521667]
[110.76880646 244.10578918]
[108.39070129 258.92065430]
[105.13085175 273.56677246]
[101.00094604 287.99172974]
[96.01575470 302.14389038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 197]
[92 195]
[93 194]
[94 193]
[95 192]
[96 191]
[97 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
