%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[58.06927490 676.87280273]
[43.67031097 681.10876465]
[28.96397972 684.10839844]
[14.05624104 685.84997559]
[-0.94549006 686.32104492]
[-15.93312550 685.51818848]
[-30.79867744 683.44714355]
[-45.43503571 680.12286377]
[-59.73674393 675.56927490]
[-73.60076141 669.81921387]
[-86.92718506 662.91412354]
[-99.62000275 654.90374756]
[-111.58776855 645.84582520]
[-122.74423981 635.80554199]
[-133.00903320 624.85528564]
[-142.30819702 613.07397461]
[-150.57473755 600.54650879]
[-157.74906921 587.36303711]
[-163.77951050 573.61871338]
[-168.62261963 559.41241455]
[-172.24349976 544.84661865]
[-174.61604309 530.02618408]
[-175.72319031 515.05798340]
[-175.55693054 500.04974365]
[-174.11846924 485.10971069]
[-171.41818237 470.34548950]
[-167.47552490 455.86346436]
[-162.31889343 441.76797485]
[-155.98544312 428.16055298]
[-148.52082825 415.13931274]
[-139.97880554 402.79800415]
[-130.42092896 391.22558594]
[-119.91606903 380.50543213]
[-108.53991699 370.71475220]
[-96.37442780 361.92416382]
[-83.50727081 354.19692993]
[-70.03115082 347.58874512]
[-56.04315567 342.14724731]
[-41.64408112 337.91162109]
[-26.93767166 334.91241455]
[-12.02989006 333.17117310]
[2.97185397 332.70050049]
[17.95946884 333.50378418]
[32.82496643 335.57522583]
[36.14722443 320.94775391]
[39.46948624 306.32028198]
[42.79174423 291.69284058]
[38.06549454 277.56796265]
[48.66714859 265.82421875]
[51.98940659 251.19676208]
[55.31166840 236.56930542]
[58.63392639 221.94184875]
[57.07431793 218.77957153]
[56.96889877 214.70478821]
[58.72987747 210.40917969]
[62.44495010 206.74238586]
[66.41704559 192.27786255]
[70.38914490 177.81333923]
[74.36123657 163.34881592]
[73.10119629 156.06636047]
[78.50164795 148.69935608]
[82.68865967 134.29556274]
[86.76832581 119.86101532]
[90.74042511 105.39649200]
[92.63371277 90.51645660]
[92.41038513 75.51811981]
[84.46848297 61.83467102]
[92.01543427 48.99361420]
[91.79210663 33.99527740]
[91.56877899 18.99693871]
[91.34545135 3.99860168]
[91.12212372 -10.99973583]
[81.31431580 -26.58461380]
[90.45299530 -41.56631470]
[90.00639343 -56.55966568]
[89.55978394 -71.55301666]
[89.11318207 -86.54636383]
[86.70104218 -90.15684509]
[85.66725159 -93.96417999]
[85.90444183 -97.51088715]
[87.16769409 -100.42134857]
[89.11318207 -102.43957520]
[89.55978394 -117.43292999]
[90.00639343 -132.42626953]
[90.22972107 -147.42460632]
[90.22972107 -162.42460632]
[90.22972107 -177.42460632]
[90.22972107 -192.42460632]
[90.22972107 -207.42460632]
[90.22972107 -222.42460632]
[90.22972107 -237.42460632]
[89.78311157 -252.41796875]
[88.89029694 -267.39135742]
[87.99748230 -282.36477661]
[87.10466766 -297.33819580]
[72.57006836 -301.64181519]
[60.38579178 -310.65954590]
[52.02314758 -323.30239868]
[48.49196625 -338.04373169]
[50.21865082 -353.10342407]
[56.99470139 -366.66296387]
[68.00186920 -377.08493042]
[81.91099548 -383.11090088]
[97.04248047 -384.01312256]
[111.56912231 -379.68270874]
[123.73675537 -370.64254761]
[132.07608032 -357.98431396]
[135.58009338 -343.23651123]
[133.82566833 -328.18002319]
[127.02463531 -314.63299561]
[115.99827576 -304.23129272]
[102.07807159 -298.23098755]
[102.97088623 -283.25759888]
[103.86370087 -268.28417969]
[104.75651550 -253.31077576]
[106.76123047 -251.35137939]
[108.11058044 -248.47981262]
[108.45326233 -244.94174194]
[107.53328705 -241.10531616]
[105.22972107 -237.42460632]
[105.22972107 -222.42460632]
[105.22972107 -207.42460632]
[105.22972107 -192.42460632]
[105.22972107 -177.42460632]
[105.22972107 -162.42460632]
[105.22972107 -147.42460632]
[107.91339874 -143.47406006]
[108.14385986 -137.79568481]
[104.99974060 -131.97967529]
[104.55313110 -116.98632050]
[104.10652924 -101.99297333]
[104.10652924 -86.99297333]
[104.55313110 -71.99961853]
[104.99974060 -57.00627136]
[105.44635010 -42.01292038]
[114.03279877 -33.49239349]
[114.52758026 -21.00483894]
[106.12046051 -11.22306347]
[106.34378815 3.77527380]
[106.56711578 18.77361107]
[106.79044342 33.77194977]
[107.01377106 48.77028656]
[114.93970490 61.38095093]
[107.40872192 75.29479218]
[107.63204956 90.29312897]
[114.34253693 76.87786102]
[124.66563416 65.99514008]
[137.70829773 58.58642197]
[152.34219360 55.29264450]
[167.30136108 56.39874649]
[181.29165649 61.80904388]
[193.10281372 71.05548859]
[201.71302795 83.33816528]
[206.37742615 97.59451294]
[206.69250488 112.59120178]
[202.63099670 127.03087616]
[194.54426575 139.66435242]
[183.13189697 149.39872742]
[169.38117981 155.39184570]
[154.48167419 157.12527466]
[139.72235107 154.44905090]
[126.38002014 147.59466553]
[115.60894775 137.15513611]
[108.34093475 124.03355408]
[105.20494843 109.36858368]
[101.23284912 123.83310699]
[101.97807312 132.93708801]
[97.09244537 138.48257446]
[92.90543365 152.88636780]
[88.82575989 167.32090759]
[84.85366821 181.78543091]
[80.88156891 196.24995422]
[76.90947723 210.71447754]
[73.26139069 225.26409912]
[69.93912506 239.89157104]
[66.61686707 254.51902771]
[63.29460907 269.14648438]
[67.78322601 284.31759644]
[57.41920471 295.01510620]
[54.09694672 309.64254761]
[50.77468491 324.27001953]
[47.45242691 338.89746094]
[61.75425339 343.45068359]
[75.61841583 349.20034790]
[88.94502258 356.10510254]
[101.63804626 364.11514282]
[113.60604095 373.17279053]
[124.76277161 383.21276855]
[135.02784729 394.16275024]
[144.32731628 405.94381714]
[152.59417725 418.47109985]
[159.76884460 431.65435791]
[165.79965210 445.39855957]
[170.64312744 459.60470581]
[174.26437378 474.17044067]
[176.63731384 488.99078369]
[177.74484253 503.95898438]
[177.57896423 518.96722412]
[176.14089966 533.90728760]
[173.44099426 548.67156982]
[169.49870300 563.15368652]
[164.34243774 577.24932861]
[158.00935364 590.85687256]
[150.54505920 603.87835693]
[142.00335693 616.21984863]
[132.44578552 627.79254150]
[121.94120026 638.51293945]
[110.56529236 648.30389404]
[98.40003967 657.09484863]
[85.53308105 664.82238770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 182]
[45 181]
[46 180]
[47 179]
[49 177]
[50 176]
[51 175]
[52 174]
[56 173]
[57 172]
[58 171]
[59 170]
[61 169]
[62 168]
[63 166]
[64 165]
[65 145]
[66 144]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[74 135]
[75 134]
[76 133]
[77 132]
[82 131]
[83 130]
[84 129]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
