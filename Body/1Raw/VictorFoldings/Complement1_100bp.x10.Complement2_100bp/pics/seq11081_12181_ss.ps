%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[72.09152985 925.07232666]
[57.09754181 924.55004883]
[42.14772797 923.28686523]
[27.27867699 921.28594971]
[12.52677250 918.55212402]
[-2.07188463 915.09210205]
[-16.48156738 910.91436768]
[-30.66701317 906.02911377]
[-44.59350967 900.44830322]
[-58.22697449 894.18566895]
[-71.53404236 887.25640869]
[-84.48214722 879.67755127]
[-97.03961182 871.46765137]
[-109.17569733 862.64672852]
[-120.86071014 853.23651123]
[-132.06605530 843.25988770]
[-142.76429749 832.74133301]
[-152.92927551 821.70660400]
[-162.53610229 810.18261719]
[-171.56126404 798.19769287]
[-179.98269653 785.78106689]
[-187.77976990 772.96319580]
[-194.93341064 759.77539062]
[-201.42610168 746.24993896]
[-207.24197388 732.41998291]
[-212.36679077 718.31933594]
[-216.78799438 703.98248291]
[-220.49478149 689.44451904]
[-223.47807312 674.74102783]
[-225.73057556 659.90802002]
[-227.24676514 644.98175049]
[-228.02294922 629.99871826]
[-228.05720520 614.99566650]
[-227.34947205 600.00933838]
[-225.90145874 585.07629395]
[-223.71673584 570.23309326]
[-220.80062866 555.51617432]
[-217.16027832 540.96142578]
[-212.80459595 526.60449219]
[-207.74424744 512.48059082]
[-201.99160767 498.62420654]
[-195.56074524 485.06924438]
[-188.46742249 471.84890747]
[-180.72897339 458.99554443]
[-172.36433411 446.54061890]
[-163.39401245 434.51458740]
[-153.83990479 422.94686890]
[-143.72544861 411.86581421]
[-133.07534790 401.29849243]
[-121.91569519 391.27081299]
[-110.27378082 381.80728149]
[-98.17810822 372.93106079]
[-85.65827942 364.66387939]
[-72.74491882 357.02597046]
[-59.46963501 350.03604126]
[-45.86491776 343.71115112]
[-31.96405792 338.06680298]
[-17.80107117 333.11682129]
[-3.41061974 328.87332153]
[11.17208195 325.34664917]
[25.91134644 322.54547119]
[40.77110672 320.47665405]
[55.71499252 319.14523315]
[70.70644379 318.55444336]
[85.70876312 318.70578003]
[86.60157776 303.73239136]
[87.49439240 288.75897217]
[88.38720703 273.78558350]
[88.94541931 258.79595947]
[89.16874695 243.79762268]
[89.39207458 228.79928589]
[81.84512329 215.95823669]
[89.78702545 202.27478027]
[90.01035309 187.27644348]
[86.96678925 180.54158020]
[90.35031891 172.05691528]
[90.79692841 157.06356812]
[91.24353027 142.07020569]
[77.39096069 136.54325867]
[66.26189423 126.61426544]
[59.19696426 113.47927856]
[57.04721451 98.72056580]
[60.07160950 84.11598206]
[67.90582275 71.42479706]
[79.60613251 62.17581558]
[93.76312256 57.48318100]
[94.20972443 42.48983002]
[94.65633392 27.49648094]
[87.33334351 13.47205830]
[95.44615173 0.98079747]
[95.66947937 -14.01753998]
[95.66947937 -29.01753998]
[87.93218231 -42.81771088]
[95.66947937 -55.54498291]
[95.66947937 -70.54498291]
[95.66947937 -85.54498291]
[95.66947937 -100.54498291]
[81.41680908 -105.70610809]
[69.79087830 -115.43305969]
[62.19557953 -128.55125427]
[59.54807663 -143.47662354]
[62.16806793 -158.40684509]
[69.73918152 -171.53901672]
[81.34716797 -181.28738403]
[95.59030151 -186.47476196]
[110.74865723 -186.47476196]
[124.99179077 -181.28738403]
[136.59977722 -171.53901672]
[144.17089844 -158.40684509]
[146.79087830 -143.47662354]
[144.14338684 -128.55125427]
[136.54808044 -115.43305969]
[124.92214966 -105.70610809]
[110.66947937 -100.54498291]
[110.66947937 -85.54498291]
[110.66947937 -70.54498291]
[110.66947937 -55.54498291]
[118.40677643 -42.81771088]
[110.66947937 -29.01753998]
[110.66947937 -14.01753998]
[113.35316467 -10.06698418]
[113.58362579 -4.38861227]
[110.43949890 1.42740345]
[117.79443359 14.37940121]
[109.64968109 27.94308662]
[109.20307159 42.93643570]
[108.75646973 57.92978668]
[122.60903931 63.45674133]
[133.73809814 73.38573456]
[140.80303955 86.52072144]
[142.95278931 101.27943420]
[139.92839050 115.88401794]
[132.09417725 128.57521057]
[120.39386749 137.82418823]
[106.23687744 142.51681519]
[105.79027557 157.51016235]
[105.34366608 172.50352478]
[105.00868988 187.49977112]
[104.78536224 202.49810791]
[112.31634521 216.41195679]
[104.39041138 229.02261353]
[104.16708374 244.02095032]
[103.94375610 259.01928711]
[106.48764038 263.57733154]
[106.97956848 268.19375610]
[105.74092865 272.07714844]
[103.36061096 274.67840576]
[102.46779633 289.65179443]
[101.57498169 304.62521362]
[100.68216705 319.59860229]
[115.59616852 321.23107910]
[130.41119385 323.59912109]
[145.09097290 326.69689941]
[159.59960938 330.51687622]
[173.90156555 335.04968262]
[187.96186829 340.28424072]
[201.74609375 346.20770264]
[215.22052002 352.80563354]
[228.35215759 360.06182861]
[241.10888672 367.95855713]
[253.45948792 376.47650146]
[265.37371826 385.59478760]
[276.82244873 395.29113770]
[287.77764893 405.54180908]
[298.21252441 416.32171631]
[308.10150146 427.60446167]
[317.42041016 439.36245728]
[326.14642334 451.56692505]
[334.25823975 464.18798828]
[341.73593140 477.19476318]
[348.56124878 490.55541992]
[354.71749878 504.23727417]
[360.18957520 518.20684814]
[364.96414185 532.42993164]
[369.02944946 546.87176514]
[372.37557983 561.49694824]
[374.99435425 576.26965332]
[376.87936401 591.15386963]
[378.02597046 606.11309814]
[378.43139648 621.11065674]
[378.09463501 636.10998535]
[377.01651001 651.07427979]
[375.19964600 665.96697998]
[372.64852905 680.75152588]
[369.36938477 695.39190674]
[365.37020874 709.85217285]
[360.66082764 724.09692383]
[355.25274658 738.09143066]
[349.15917969 751.80133057]
[342.39511108 765.19305420]
[334.97698975 778.23394775]
[326.92306519 790.89202881]
[318.25299072 803.13629150]
[308.98800659 814.93682861]
[299.15078735 826.26470947]
[288.76538086 837.09228516]
[277.85720825 847.39300537]
[266.45297241 857.14166260]
[254.58061218 866.31439209]
[242.26913452 874.88873291]
[229.54869080 882.84381104]
[216.45039368 890.16003418]
[203.00631714 896.81958008]
[189.24934387 902.80609131]
[175.21316528 908.10491943]
[160.93209839 912.70312500]
[146.44110107 916.58947754]
[131.77565002 919.75445557]
[116.97161865 922.19024658]
[102.06524658 923.89099121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 150]
[66 149]
[67 148]
[68 147]
[69 143]
[70 142]
[71 141]
[73 139]
[74 138]
[76 137]
[77 136]
[78 135]
[86 127]
[87 126]
[88 125]
[90 123]
[91 120]
[92 119]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
