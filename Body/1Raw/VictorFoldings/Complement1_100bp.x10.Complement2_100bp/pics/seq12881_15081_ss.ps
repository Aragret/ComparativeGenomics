%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[76.52927399 535.18499756]
[80.87776184 520.61932373]
[90.47315979 508.82962036]
[103.85224915 501.61376953]
[102.29172516 486.69515991]
[100.73120117 471.77655029]
[99.17067719 456.85794067]
[87.84127808 466.68875122]
[73.06446838 464.11080933]
[65.73315430 451.02450562]
[71.25171661 437.07653809]
[85.55207062 432.54885864]
[98.09167480 440.77767944]
[97.64507294 425.78433228]
[89.53226471 413.29309082]
[96.85524750 399.26864624]
[96.40864563 384.27529907]
[95.96203613 369.28195190]
[95.51543427 354.28860474]
[94.84564209 339.30355835]
[93.95282745 324.33016968]
[93.06001282 309.35675049]
[92.16719818 294.38336182]
[83.68607330 282.13919067]
[90.58825684 267.90295410]
[89.69544220 252.92953491]
[88.80262756 237.95613098]
[85.26657104 231.46627808]
[88.00966644 222.75346375]
[87.33988190 207.76841736]
[86.67009735 192.78338623]
[77.30907440 204.50393677]
[62.87770462 208.59484863]
[48.75854492 203.53034973]
[40.21768188 191.19934082]
[40.44065475 176.20100403]
[49.34429550 164.12933350]
[63.60776520 159.48677063]
[77.91114807 164.00488281]
[86.92001343 175.99961853]
[80.15075684 162.73211670]
[88.89303589 149.54563904]
[90.00868225 134.58718872]
[91.12432861 119.62873840]
[92.23998260 104.67028046]
[90.16294861 101.42092896]
[89.52827454 97.27182007]
[90.70567322 92.88767242]
[93.75413513 89.07365417]
[95.53659821 74.17993927]
[97.31906891 59.28622437]
[84.09368134 66.36358643]
[70.25483704 60.57684708]
[66.00401306 46.19176483]
[74.47476196 33.81249619]
[89.42276764 32.56456757]
[99.82837677 43.36634827]
[102.71365356 28.64645767]
[105.59892273 13.92656612]
[108.48419952 -0.79332554]
[111.36946869 -15.51321697]
[109.59159088 -21.88115883]
[111.07399750 -27.36746025]
[114.56600952 -30.62550545]
[110.07739258 -45.79662704]
[120.44141388 -56.49411392]
[123.76367188 -71.12157440]
[127.08592987 -85.74903870]
[130.40818787 -100.37649536]
[125.91957092 -115.54761505]
[136.28359985 -126.24510193]
[139.60585022 -140.87255859]
[142.92811584 -155.50003052]
[145.26359558 -170.31709290]
[138.78834534 -184.75251770]
[147.63026428 -196.73875427]
[141.15501404 -211.17417908]
[149.99693298 -223.16041565]
[151.33515930 -238.10060120]
[152.67340088 -253.04078674]
[154.01162720 -267.98095703]
[155.34986877 -282.92114258]
[140.64901733 -285.98736572]
[126.40354919 -290.73953247]
[112.80610657 -297.11340332]
[100.04059601 -305.02276611]
[88.27964020 -314.36068726]
[77.68229675 -325.00082397]
[68.39189148 -336.79934692]
[60.53405762 -349.59664917]
[54.21506119 -363.21966553]
[49.52036667 -377.48419189]
[46.51346207 -392.19726562]
[45.23500824 -407.15997314]
[45.70230103 -422.16989136]
[47.90901947 -437.02407837]
[51.82531357 -451.52163696]
[57.39823151 -465.46652222]
[64.55239868 -478.67007446]
[73.19105530 -490.95382690]
[83.19738770 -502.15158081]
[94.43607330 -512.11193848]
[106.75510406 -520.70019531]
[119.98789215 -527.80017090]
[133.95547485 -533.31585693]
[148.46896362 -537.17272949]
[163.33207703 -539.31854248]
[178.34379578 -539.72430420]
[193.30111694 -538.38452148]
[208.00177002 -535.31732178]
[222.24691772 -530.56420898]
[235.84393311 -524.18945312]
[248.60891724 -516.27923584]
[260.36926270 -506.94052124]
[270.96588135 -496.29965210]
[280.25549316 -484.50051880]
[288.11248779 -471.70269775]
[294.43057251 -458.07925415]
[299.12429810 -443.81442261]
[302.13021851 -429.10113525]
[303.40768433 -414.13836670]
[302.93939209 -399.12844849]
[300.73168945 -384.27441406]
[296.81442261 -369.77713013]
[291.24057007 -355.83264160]
[284.08554077 -342.62954712]
[275.44604492 -330.34637451]
[265.43896484 -319.14929199]
[254.19961548 -309.18969727]
[241.88002014 -300.60226440]
[228.64674377 -293.50317383]
[214.67880249 -287.98837280]
[200.16505432 -284.13250732]
[185.30180359 -281.98770142]
[170.29005432 -281.58291626]
[168.95181274 -266.64273071]
[167.61358643 -251.70254517]
[166.27534485 -236.76237488]
[164.93711853 -221.82218933]
[171.50808716 -208.45536804]
[162.57044983 -195.40052795]
[169.14141846 -182.03370667]
[160.20378113 -168.97885132]
[170.53182983 -179.85688782]
[185.07574463 -183.52763367]
[199.32896423 -178.85366821]
[208.87495422 -167.28327942]
[210.75578308 -152.40165710]
[204.38867188 -138.82005310]
[191.74653625 -130.74687195]
[176.74667358 -130.68367004]
[164.03694153 -138.65003967]
[157.55557251 -152.17776489]
[154.23332214 -137.55030823]
[150.91105652 -122.92284393]
[155.63731384 -108.79798126]
[145.03565979 -97.05423737]
[141.71339417 -82.42677307]
[138.39112854 -67.79931641]
[135.06887817 -53.17185593]
[139.79512024 -39.04698944]
[129.19346619 -27.30324745]
[126.08936310 -12.62794399]
[123.20408630 2.09194708]
[120.31881714 16.81183815]
[117.43354034 31.53173065]
[114.54827118 46.25162125]
[112.21278381 61.06868744]
[110.43031311 75.96240997]
[108.64785004 90.85612488]
[107.19843292 105.78593445]
[106.08278656 120.74438477]
[104.96713257 135.70283508]
[103.85148621 150.66128540]
[110.54094696 164.99871826]
[101.87846375 177.11526489]
[101.65513611 192.11360168]
[102.32492065 207.09863281]
[102.99470520 222.08367920]
[103.77603149 237.06330872]
[104.66884613 252.03671265]
[105.56166077 267.01013184]
[114.10664368 280.32528687]
[107.14060211 293.49053955]
[108.03341675 308.46395874]
[108.92623901 323.43734741]
[109.81905365 338.41076660]
[113.13494110 344.13058472]
[113.07365417 349.81329346]
[110.50878143 353.84201050]
[110.95538330 368.83535767]
[111.40199280 383.82870483]
[111.84859467 398.82205200]
[119.99335480 412.38574219]
[112.63842010 425.33773804]
[113.08502197 440.33108521]
[114.08928680 455.29742432]
[115.64981079 470.21603394]
[117.21033478 485.13464355]
[118.77085114 500.05325317]
[133.35357666 504.34420776]
[145.18104553 513.89300537]
[152.44963074 527.24353027]
[154.05094910 542.35986328]
[149.74079895 556.93695068]
[140.17645264 568.75183105]
[126.81639099 576.00286865]
[111.69793701 577.58428955]
[97.12654877 573.25494385]
[85.32424927 563.67510986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[13 196]
[14 195]
[16 193]
[17 192]
[18 191]
[19 190]
[20 187]
[21 186]
[22 185]
[23 184]
[25 182]
[26 181]
[27 180]
[29 179]
[30 178]
[31 177]
[40 176]
[42 174]
[43 173]
[44 172]
[45 171]
[49 170]
[50 169]
[51 168]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[64 162]
[66 160]
[67 159]
[68 158]
[69 157]
[71 155]
[72 154]
[73 153]
[74 143]
[76 141]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
