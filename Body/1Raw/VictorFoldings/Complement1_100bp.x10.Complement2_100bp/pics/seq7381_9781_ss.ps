%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[175.76278687 745.98822021]
[163.00088501 738.09667969]
[150.74899292 729.43438721]
[139.05358887 720.03430176]
[127.95905304 709.93212891]
[117.50746918 699.16601562]
[107.73847198 687.77697754]
[98.68913269 675.80816650]
[90.39376831 663.30493164]
[82.88384247 650.31475830]
[76.18785858 636.88690186]
[70.33120728 623.07232666]
[65.33610535 608.92333984]
[61.22150040 594.49371338]
[58.00300598 579.83819580]
[55.69282532 565.01232910]
[54.29972458 550.07232666]
[53.82898712 535.07495117]
[54.28239822 520.07702637]
[55.65824127 505.13543701]
[57.95129013 490.30688477]
[61.15285492 475.64764404]
[65.25078583 461.21328735]
[70.22953796 447.05859375]
[76.07022858 433.23721313]
[82.75069427 419.80163574]
[90.24560547 406.80279541]
[98.52651978 394.28997803]
[107.56202698 382.31069946]
[117.31786346 370.91036987]
[127.75700378 360.13226318]
[138.83985901 350.01724243]
[150.52439880 340.60363770]
[162.76626587 331.92724609]
[175.51905823 324.02090454]
[188.73437500 316.91464233]
[176.38095093 308.59347534]
[177.63288879 292.82186890]
[171.35552979 279.19854736]
[165.07817078 265.57522583]
[158.80081177 251.95191956]
[154.71015930 249.48704529]
[152.12451172 244.42626953]
[152.54611206 237.82826233]
[146.67715454 224.02407837]
[140.80819702 210.21989441]
[134.93922424 196.41572571]
[129.07026672 182.61154175]
[123.20130920 168.80737305]
[117.12747192 155.09210205]
[110.85011292 141.46878052]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[75.52657318 64.80857086]
[69.24920654 51.18525696]
[62.97184753 37.56193924]
[50.16942596 28.26632118]
[51.87035751 13.46915627]
[51.16675949 28.45264626]
[46.13448334 42.58332825]
[37.20886612 54.63875580]
[25.16206741 63.57601929]
[11.03625393 68.62194824]
[-3.94654822 69.34002686]
[-18.49017715 65.66812897]
[-31.33646584 57.92391205]
[-41.37408066 46.77732849]
[-47.73466492 33.19266891]
[-49.86796570 18.34514427]
[-47.58943558 3.51921177]
[-41.09618378 -10.00253677]
[-30.94994736 -21.05033493]
[-18.02847099 -28.66843796]
[-3.44959712 -32.19780350]
[11.52545834 -31.33310509]
[25.60120392 -26.14914894]
[37.55994415 -17.09439850]
[46.36550903 -4.95529985]
[44.14039230 -19.78934288]
[41.91527176 -34.62338638]
[39.69015503 -49.45743179]
[37.46503830 -64.29147339]
[35.23992157 -79.12551880]
[25.54109192 -91.62525177]
[31.30480957 -105.35946655]
[16.29359627 -106.74760437]
[2.05101418 -111.68847656]
[-10.59489346 -119.89484406]
[-20.90890884 -130.88960266]
[-28.29138756 -144.03350830]
[-32.31312561 -158.56240845]
[-32.74029922 -173.63162231]
[-29.54807854 -188.36502075]
[-22.92205238 -201.90603638]
[-13.24744797 -213.46742249]
[-1.08673549 -222.37699890]
[12.85307693 -228.11677551]
[27.76154709 -230.35305786]
[42.77191544 -228.95582581]
[57.01150131 -224.00631714]
[69.65242767 -215.79228210]
[79.95977783 -204.79127502]
[87.33428955 -191.64289856]
[91.34721375 -177.11155701]
[91.76525879 -162.04208374]
[88.56410217 -147.31062317]
[81.92986298 -133.77362061]
[72.24825287 -122.21811676]
[60.08214188 -113.31591797]
[46.13885498 -107.58458710]
[55.67852783 -96.14588928]
[50.07396698 -81.35063934]
[52.29908371 -66.51659393]
[54.52420044 -51.68254852]
[56.74931717 -36.84850311]
[58.97443390 -22.01446152]
[61.19955063 -7.18041706]
[65.49367523 7.19179583]
[77.84709930 15.51298428]
[76.59516144 31.28458023]
[82.87252808 44.90789413]
[89.14988708 58.53121185]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.47342682 135.19142151]
[130.75079346 148.81474304]
[135.91986084 152.93692017]
[137.92950439 158.25277710]
[137.00549316 162.93841553]
[142.87445068 176.74258423]
[148.74340820 190.54676819]
[154.61236572 204.35093689]
[160.48132324 218.15512085]
[166.35029602 231.95928955]
[172.42411804 245.67456055]
[178.70147705 259.29788208]
[184.97885132 272.92120361]
[191.25621033 286.54449463]
[204.05862427 295.84011841]
[202.35769653 310.63729858]
[216.34602356 305.20864868]
[230.64201355 300.65139771]
[245.19143677 296.98291016]
[259.93911743 294.21704102]
[274.82907104 292.36428833]
[289.80484009 291.43173218]
[304.80963135 291.42282104]
[319.78649902 292.33767700]
[334.67864990 294.17276001]
[349.42956543 296.92117310]
[363.98333740 300.57241821]
[378.28472900 305.11270142]
[392.27947998 310.52478027]
[405.91448975 316.78814697]
[419.13809204 323.87899780]
[431.90008545 331.77047729]
[444.15206909 340.43261719]
[455.84756470 349.83255005]
[466.94219971 359.93466187]
[477.39389038 370.70062256]
[487.16299438 382.08956909]
[496.21243286 394.05831909]
[504.50793457 406.56146240]
[512.01800537 419.55157471]
[518.71411133 432.97937012]
[524.57086182 446.79391479]
[529.56610107 460.94281006]
[533.68084717 475.37237549]
[536.89953613 490.02789307]
[539.20983887 504.85372925]
[540.60308838 519.79370117]
[541.07397461 534.79107666]
[540.62072754 549.78906250]
[539.24499512 564.73065186]
[536.95208740 579.55920410]
[533.75067139 594.21850586]
[529.65289307 608.65289307]
[524.67431641 622.80761719]
[518.83374023 636.62902832]
[512.15338135 650.06469727]
[504.65863037 663.06359863]
[496.37783813 675.57647705]
[487.34243774 687.55584717]
[477.58670044 698.95629883]
[467.14767456 709.73449707]
[456.06491089 719.84967041]
[444.38049316 729.26336670]
[432.13870239 737.93988037]
[419.38598633 745.84631348]
[406.17071533 752.95269775]
[392.54306030 759.23205566]
[378.55468750 764.66058350]
[364.25863647 769.21771240]
[349.70919800 772.88604736]
[334.96148682 775.65179443]
[320.07150269 777.50433350]
[305.09573364 778.43676758]
[290.09094238 778.44555664]
[275.11407471 777.53057861]
[260.22195435 775.69531250]
[245.47103882 772.94677734]
[230.91731262 769.29534912]
[216.61598206 764.75494385]
[202.62129211 759.34271240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 146]
[38 144]
[39 143]
[40 142]
[41 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 132]
[51 131]
[52 130]
[53 129]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[61 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
