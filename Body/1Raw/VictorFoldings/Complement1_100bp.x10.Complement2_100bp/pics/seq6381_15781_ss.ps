%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[107.57192993 842.22912598]
[92.68292999 840.38464355]
[77.89765167 837.83911133]
[63.24908447 834.59814453]
[48.76991272 830.66906738]
[34.49244308 826.06054688]
[20.44853592 820.78295898]
[6.66952896 814.84802246]
[-6.81383038 808.26904297]
[-19.97145653 801.06060791]
[-32.77398682 793.23889160]
[-45.19285965 784.82128906]
[-57.20035934 775.82659912]
[-68.76969147 766.27490234]
[-79.87504578 756.18756104]
[-90.49163055 745.58697510]
[-100.59577179 734.49682617]
[-110.16490936 722.94189453]
[-119.17769623 710.94799805]
[-127.61402130 698.54187012]
[-135.45506287 685.75115967]
[-142.68331909 672.60443115]
[-149.28265381 659.13098145]
[-155.23835754 645.36096191]
[-160.53713989 631.32501221]
[-165.16716003 617.05450439]
[-169.11810303 602.58129883]
[-172.38114929 587.93762207]
[-174.94902039 573.15618896]
[-176.81596375 558.27001953]
[-177.97784424 543.31225586]
[-178.43205261 528.31634521]
[-178.17758179 513.31567383]
[-177.21499634 498.34378052]
[-175.54644775 483.43405151]
[-173.17564392 468.61975098]
[-170.10789490 453.93392944]
[-166.35005188 439.40936279]
[-161.91046143 425.07846069]
[-156.79907227 410.97323608]
[-151.02726746 397.12509155]
[-144.60792542 383.56500244]
[-137.55538940 370.32318115]
[-129.88537598 357.42916870]
[-121.61500549 344.91177368]
[-112.76274109 332.79888916]
[-103.34832001 321.11758423]
[-93.39276886 309.89389038]
[-82.91828156 299.15289307]
[-71.94824982 288.91848755]
[-60.50714111 279.21359253]
[-48.62048340 270.05978394]
[-36.31481171 261.47756958]
[-23.61757278 253.48603821]
[-10.55710602 246.10305786]
[2.83744645 239.34507751]
[16.53619766 233.22718811]
[30.50857735 227.76304626]
[44.72341156 222.96482849]
[59.14897919 218.84326172]
[73.75308990 215.40753174]
[88.50315857 212.66531372]
[103.36627197 210.62271118]
[102.02803802 195.68252563]
[100.68980408 180.74234009]
[89.83557892 166.95275879]
[97.72192383 150.31283569]
[88.70252991 138.45956421]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[84.03815460 56.16775131]
[86.46872711 49.18820572]
[84.90820312 34.26959991]
[83.34767914 19.35099411]
[81.45438385 4.47095919]
[79.22927094 -10.36308479]
[77.00415039 -25.19712830]
[74.77903748 -40.03117371]
[64.88951111 -48.31127930]
[63.34159851 -60.71239853]
[70.42388916 -70.51891327]
[68.41987610 -85.38444519]
[53.39708328 -86.22842407]
[38.80556488 -89.90048981]
[25.17279243 -96.26790619]
[12.99158001 -105.10049438]
[2.70227289 -116.07895660]
[-5.32317781 -128.80642700]
[-10.79465675 -142.82283020]
[-13.51437378 -157.62145996]
[-13.38401318 -172.66737366]
[-10.40828609 -187.41667175]
[-4.69476461 -201.33615112]
[3.55001211 -213.92266846]
[14.02799988 -224.72119141]
[26.36042595 -233.34138489]
[40.10148239 -239.47163391]
[54.75443649 -242.89031982]
[69.78959656 -243.47387695]
[84.66344452 -241.20118713]
[98.83830261 -236.15441895]
[111.80176544 -228.51602173]
[123.08520508 -218.56210327]
[132.28073120 -206.65249634]
[139.05593872 -193.21772766]
[143.16589355 -178.74345398]
[144.46205139 -163.75289917]
[142.89752197 -148.78797913]
[138.52888489 -134.38966370]
[131.51405334 -121.07843781]
[122.10662079 -109.33550262]
[110.64664459 -99.58534241]
[97.54840851 -92.18043518]
[83.28540039 -87.38845825]
[85.28941345 -72.52292633]
[96.74855042 -59.23175812]
[89.61307526 -42.25629044]
[91.83819580 -27.42224503]
[94.06330872 -12.58820152]
[96.28842926 2.24584222]
[98.89132690 4.62434578]
[100.47148895 8.38175583]
[100.39337158 13.02365208]
[98.26628113 17.79047203]
[99.82680511 32.70907593]
[101.38732910 47.62768173]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[119.01176453 135.28915405]
[112.64053345 148.75230408]
[122.15045929 157.46574402]
[123.14309692 169.92361450]
[115.62998962 179.40411377]
[116.96822357 194.34429932]
[118.30645752 209.28448486]
[133.29597473 208.65309143]
[148.29858398 208.73028564]
[163.28080750 209.51588440]
[178.20922852 211.00813293]
[193.05050659 213.20370483]
[207.77156067 216.09770203]
[222.33950806 219.68367004]
[236.72186279 223.95358276]
[250.88652039 228.89794922]
[264.80187988 234.50570679]
[278.43688965 240.76435852]
[291.76113892 247.65992737]
[304.74487305 255.17703247]
[317.35913086 263.29891968]
[329.57574463 272.00741577]
[341.36749268 281.28314209]
[352.70806885 291.10537720]
[363.57211304 301.45220947]
[373.93539429 312.30053711]
[383.77484131 323.62615967]
[393.06845093 335.40380859]
[401.79550171 347.60720825]
[409.93649292 360.20913696]
[417.47329712 373.18145752]
[424.38909912 386.49520874]
[430.66842651 400.12069702]
[436.29730225 414.02755737]
[441.26315308 428.18469238]
[445.55490112 442.56054688]
[449.16296387 457.12304688]
[452.07928467 471.83966064]
[454.29739380 486.67761230]
[455.81228638 501.60372925]
[456.62063599 516.58477783]
[456.72058105 531.58721924]
[456.11196899 546.57769775]
[454.79608154 561.52270508]
[452.77590942 576.38885498]
[450.05593872 591.14306641]
[446.64224243 605.75231934]
[442.54244995 620.18408203]
[437.76571655 634.40612793]
[432.32266235 648.38677979]
[426.22543335 662.09472656]
[419.48767090 675.49945068]
[412.12438965 688.57104492]
[404.15203857 701.28033447]
[395.58837891 713.59893799]
[386.45254517 725.49938965]
[376.76492310 736.95513916]
[366.54708862 747.94061279]
[355.82189941 758.43127441]
[344.61322021 768.40374756]
[332.94613647 777.83581543]
[320.84664917 786.70629883]
[308.34173584 794.99554443]
[295.45932007 802.68499756]
[282.22814941 809.75756836]
[268.67773438 816.19732666]
[254.83834839 821.99005127]
[240.74082947 827.12268066]
[226.41665649 831.58386230]
[211.89778137 835.36364746]
[197.21661377 838.45355225]
[182.40589905 840.84667969]
[167.49868774 842.53778076]
[152.52825928 843.52294922]
[137.52801514 843.80004883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 142]
[64 141]
[65 140]
[67 137]
[69 135]
[70 134]
[71 132]
[72 131]
[73 130]
[75 129]
[76 128]
[77 127]
[78 123]
[79 122]
[80 121]
[81 120]
[84 118]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
