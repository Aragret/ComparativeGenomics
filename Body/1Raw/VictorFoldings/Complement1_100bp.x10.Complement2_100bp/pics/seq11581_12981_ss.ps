%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[159.27062988 499.38192749]
[153.33499146 485.59756470]
[148.51329041 471.38522339]
[144.83601379 456.83468628]
[142.32641602 442.03799438]
[141.00036621 427.08868408]
[140.86622620 412.08129883]
[141.92488098 397.11068726]
[144.16958618 382.27148438]
[147.58619690 367.65756226]
[152.15309143 353.36129761]
[157.84140015 339.47305298]
[164.61515808 326.08065796]
[172.43153381 313.26876831]
[181.24110413 301.11840820]
[190.98820496 289.70635986]
[201.61116028 279.10482788]
[213.04284668 269.38079834]
[204.26225281 257.21936035]
[195.48164368 245.05789185]
[186.70103455 232.89643860]
[177.92044067 220.73498535]
[169.13983154 208.57353210]
[160.35923767 196.41206360]
[151.57862854 184.25061035]
[136.77499390 185.89926147]
[123.04241180 179.87663269]
[114.10917664 167.70849609]
[112.45514679 152.60348511]
[118.62408447 138.60736084]
[109.84348297 126.44591522]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[77.99506378 82.33469391]
[69.21446228 70.17323303]
[60.34356308 58.07748413]
[51.38286972 46.04810715]
[38.77125931 54.17954254]
[25.63946915 61.44101715]
[12.04741478 67.79940033]
[-1.94288468 73.22567749]
[-16.26759529 77.69508362]
[-30.86135483 81.18724060]
[-45.65757370 83.68619537]
[-60.58874512 85.18056488]
[-75.58673096 85.66351318]
[-90.58311462 85.13285065]
[-105.50945282 83.59099579]
[-120.29764557 81.04497528]
[-134.88021851 77.50641632]
[-149.19064331 72.99145508]
[-163.16360474 67.52069855]
[-176.73536682 61.11911011]
[-189.84399414 53.81589508]
[-202.42967224 45.64437866]
[-214.43496704 36.64184570]
[-225.80513000 26.84937286]
[-236.48825073 16.31164169]
[-246.43559265 5.07673168]
[-255.60179138 -6.80409193]
[-263.94497681 -19.27662086]
[-271.42712402 -32.28394318]
[-278.01406860 -45.76671219]
[-283.67578125 -59.66340256]
[-288.38641357 -73.91061401]
[-292.12445068 -88.44333649]
[-294.87286377 -103.19525909]
[-296.61907959 -118.09906769]
[-297.35519409 -133.08676147]
[-297.07778931 -148.08996582]
[-295.78814697 -163.04020691]
[-293.49215698 -177.86927795]
[-290.20028687 -192.50952148]
[-285.92758179 -206.89413452]
[-280.69351196 -220.95747375]
[-274.52197266 -234.63536072]
[-267.44110107 -247.86541748]
[-259.48324585 -260.58728027]
[-250.68469238 -272.74285889]
[-241.08557129 -284.27670288]
[-230.72970581 -295.13623047]
[-219.66433716 -305.27182007]
[-207.93995667 -314.63729858]
[-195.61006165 -323.18988037]
[-182.73092651 -330.89056396]
[-169.36128235 -337.70419312]
[-155.56216431 -343.59973145]
[-141.39649963 -348.55020142]
[-126.92897034 -352.53308105]
[-112.22554779 -355.53015137]
[-97.35334015 -357.52774048]
[-82.38021088 -358.51678467]
[-67.37446594 -358.49270630]
[-52.40457916 -357.45568848]
[-37.53885651 -355.41036987]
[-22.84512711 -352.36614990]
[-8.39043522 -348.33691406]
[5.75926495 -343.34103394]
[19.53941154 -337.40127563]
[32.88712692 -330.54479980]
[45.74151230 -322.80285645]
[58.04391098 -314.21075439]
[69.73818970 -304.80773926]
[80.77098846 -294.63668823]
[91.09197235 -283.74401855]
[100.65404510 -272.17944336]
[109.41358185 -259.99569702]
[117.33060455 -247.24839783]
[124.36899567 -233.99569702]
[130.49664307 -220.29806519]
[135.68557739 -206.21801758]
[139.91212463 -191.81977844]
[143.15701294 -177.16906738]
[145.40542603 -162.33270264]
[146.64710999 -147.37840271]
[146.87638855 -132.37438965]
[146.09223938 -117.38912201]
[144.29820251 -102.49098969]
[141.50250244 -87.74796295]
[137.71786499 -73.22730255]
[132.96157837 -58.99527359]
[127.25533295 -45.11680984]
[120.62517548 -31.65523720]
[113.10134888 -18.67197800]
[104.71819305 -6.22627258]
[95.51394653 5.62509155]
[85.53061676 16.82803917]
[74.81375122 27.33145332]
[63.41224670 37.08740997]
[72.37294006 49.11678696]
[78.88965607 52.60307312]
[81.37591553 61.39263153]
[90.15651703 73.55408478]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[122.00493622 117.66530609]
[130.78553772 129.82676697]
[146.01187134 128.37545776]
[159.82904053 134.69862366]
[168.56796265 147.00706482]
[169.96331787 161.93719482]
[163.74008179 175.47001648]
[172.52069092 187.63146973]
[181.30128479 199.79292297]
[190.08189392 211.95437622]
[198.86250305 224.11582947]
[207.64309692 236.27728271]
[216.42370605 248.43875122]
[225.20429993 260.60018921]
[238.03161621 252.80917358]
[251.43737793 246.06190491]
[265.33685303 240.40106201]
[279.64212036 235.86244202]
[294.26275635 232.47471619]
[309.10635376 230.25933838]
[324.07904053 229.23030090]
[339.08615112 229.39408875]
[354.03280640 230.74969482]
[368.82449341 233.28854370]
[383.36773682 236.99456787]
[397.57052612 241.84436035]
[411.34310913 247.80722046]
[424.59841919 254.84548950]
[437.25262451 262.91464233]
[449.22570801 271.96368408]
[460.44201660 281.93539429]
[470.83059692 292.76672363]
[480.32577515 304.38916016]
[488.86752319 316.72927856]
[496.40185547 329.70904541]
[502.88110352 343.24636841]
[508.26431274 357.25570679]
[512.51745605 371.64843750]
[515.61364746 386.33358765]
[517.53332520 401.21829224]
[518.26434326 416.20849609]
[517.80200195 431.20938110]
[516.14935303 446.12609863]
[513.31677246 460.86437988]
[509.32214355 475.33099365]
[504.19079590 489.43450928]
[497.95513916 503.08575439]
[490.65457153 516.19842529]
[482.33526611 528.68957520]
[473.04983521 540.48028564]
[462.85699463 551.49603271]
[451.82116699 561.66705322]
[440.01211548 570.92919922]
[427.50451660 579.22375488]
[414.37744141 586.49841309]
[400.71389771 592.70703125]
[386.60028076 597.81054688]
[372.12576294 601.77655029]
[357.38192749 604.57995605]
[342.46197510 606.20312500]
[327.46020508 606.63580322]
[312.47149658 605.87518311]
[297.59060669 603.92608643]
[282.91159058 600.80090332]
[268.52728271 596.51928711]
[254.52864075 591.10839844]
[241.00413513 584.60235596]
[228.03930664 577.04241943]
[215.71609497 568.47631836]
[204.11242676 558.95812988]
[193.30166626 548.54815674]
[183.35215759 537.31219482]
[174.32679749 525.32122803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 151]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[25 144]
[30 139]
[31 138]
[32 137]
[34 135]
[35 134]
[36 133]
[37 131]
[38 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
