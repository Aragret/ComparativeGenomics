%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[170.18995667 779.83801270]
[155.86322021 775.38519287]
[141.76092529 770.26580811]
[127.91410065 764.49096680]
[114.35316467 758.07348633]
[101.10794067 751.02740479]
[88.20754242 743.36828613]
[75.68032837 735.11285400]
[63.55382919 726.27935791]
[51.85470581 716.88714600]
[40.60867691 706.95684814]
[29.84046364 696.51037598]
[19.57373619 685.57067871]
[9.83106041 674.16180420]
[0.63385683 662.30871582]
[-7.99765873 650.03765869]
[-16.04451180 637.37542725]
[-23.48901558 624.34997559]
[-30.31480217 610.98992920]
[-36.50687027 597.32458496]
[-42.05160522 583.38403320]
[-46.93681717 569.19891357]
[-51.15177155 554.80041504]
[-54.68720245 540.22015381]
[-57.53533936 525.49017334]
[-59.68991470 510.64294434]
[-61.14620209 495.71102905]
[-61.90098953 480.72726440]
[-61.95262527 465.72457886]
[-61.30099487 450.73596191]
[-59.94752884 435.79437256]
[-57.89520264 420.93264771]
[-55.14852905 406.18344116]
[-51.71354675 391.57919312]
[-47.59780121 377.15200806]
[-42.81034851 362.93359375]
[-37.36170197 348.95520020]
[-31.26384735 335.24758911]
[-24.53018761 321.84082031]
[-17.17552185 308.76443481]
[-9.21601868 296.04714966]
[-0.66917545 283.71691895]
[8.44622040 271.80087280]
[18.11013031 260.32516479]
[28.30131340 249.31503296]
[38.99736404 238.79469299]
[50.17477036 228.78726196]
[61.80896378 219.31474304]
[73.87437439 210.39796448]
[86.34446716 202.05650330]
[99.19183350 194.30873108]
[112.38824463 187.17164612]
[125.90467834 180.66096497]
[120.03572083 166.85679626]
[114.16675568 153.05261230]
[108.29779816 139.24842834]
[102.42883301 125.44425964]
[96.55987549 111.64008331]
[95.17337036 126.57586670]
[89.07245636 140.27909851]
[78.90097809 151.30366516]
[65.73236084 158.48611450]
[50.95631409 161.06845093]
[36.13219070 158.77816772]
[22.82441902 151.85694885]
[12.43739700 141.03521729]
[6.06729317 127.45502472]
[4.38635826 112.54950714]
[7.57198668 97.89168549]
[15.28799057 85.02842712]
[26.72008324 75.31723785]
[40.66180420 69.78295135]
[55.64185715 69.00961304]
[70.07935333 73.07884216]
[82.45068359 81.56119537]
[91.45034027 93.56168365]
[89.22522736 78.72763824]
[87.00010681 63.89359665]
[84.77499390 49.05955505]
[82.54987335 34.22550964]
[80.32475281 19.39146614]
[77.65895844 4.63024855]
[74.55484772 -10.04505348]
[71.45073700 -24.72035599]
[56.39439392 -24.72977257]
[41.66910172 -27.86976051]
[27.91859627 -34.00305176]
[15.74398708 -42.86152649]
[5.67749691 -54.05792999]
[-1.84081101 -67.10280609]
[-6.48226881 -81.42588043]
[-8.04397106 -96.40102386]
[-6.45764780 -111.37357330]
[-1.79264569 -125.68899536]
[5.74710131 -138.72149658]
[15.83198833 -149.90132141]
[28.02114677 -158.73977661]
[41.78171921 -164.85044861]
[56.51214981 -167.96621704]
[71.56849670 -167.95088196]
[86.29254913 -164.80509949]
[100.04064178 -158.66639709]
[112.21176147 -149.80313110]
[122.27384949 -138.60276794]
[129.78701782 -125.55493927]
[134.42285156 -111.23004150]
[135.97865295 -96.25428772]
[134.38644409 -81.28236389]
[129.71580505 -66.96877289]
[122.17093658 -53.93924332]
[112.08164978 -42.76337433]
[99.88901520 -33.92972565]
[86.12604523 -27.82446671]
[89.23015594 -13.14916420]
[92.33425903 1.52613866]
[94.60745239 3.16648674]
[96.36785126 5.80611229]
[97.23158264 9.25420856]
[96.89088440 13.18465996]
[95.15879822 17.16634941]
[97.38391876 32.00039291]
[99.60903168 46.83443451]
[101.83415222 61.66847992]
[104.05926514 76.50252533]
[106.28438568 91.33657074]
[110.36405182 105.77111816]
[116.23300934 119.57529449]
[122.10197449 133.37947083]
[127.97093201 147.18365479]
[133.83988953 160.98782349]
[139.70886230 174.79200745]
[153.77552795 169.57550049]
[168.07124329 165.02407837]
[182.56459045 161.14772034]
[197.22369385 157.95497131]
[212.01632690 155.45283508]
[226.91000366 153.64680481]
[241.87194824 152.54086304]
[256.86929321 152.13745117]
[271.86904907 152.43742371]
[286.83828735 153.44015503]
[301.74404907 155.14341736]
[316.55358887 157.54348755]
[331.23437500 160.63507080]
[345.75411987 164.41137695]
[360.08087158 168.86410522]
[374.18319702 173.98347473]
[388.03002930 179.75822449]
[401.59100342 186.17565918]
[414.83624268 193.22166443]
[427.73669434 200.88076782]
[440.26394653 209.13613892]
[452.39047241 217.96960449]
[464.08963013 227.36175537]
[475.33569336 237.29196167]
[486.10397339 247.73837280]
[496.37072754 258.67803955]
[506.11346436 270.08691406]
[515.31072998 281.93991089]
[523.94226074 294.21099854]
[531.98919678 306.87313843]
[539.43377686 319.89855957]
[546.25958252 333.25860596]
[552.45172119 346.92391968]
[557.99652100 360.86444092]
[562.88177490 375.04956055]
[567.09680176 389.44805908]
[570.63232422 404.02828979]
[573.48052979 418.75820923]
[575.63513184 433.60546875]
[577.09149170 448.53738403]
[577.84637451 463.52114868]
[577.89807129 478.52380371]
[577.24645996 493.51242065]
[575.89306641 508.45404053]
[573.84082031 523.31573486]
[571.09423828 538.06500244]
[567.65930176 552.66925049]
[563.54364014 567.09643555]
[558.75622559 581.31488037]
[553.30761719 595.29327393]
[547.20983887 609.00091553]
[540.47625732 622.40771484]
[533.12164307 635.48413086]
[525.16217041 648.20147705]
[516.61541748 660.53173828]
[507.50006104 672.44781494]
[497.83618164 683.92358398]
[487.64505005 694.93377686]
[476.94903564 705.45416260]
[465.77166748 715.46160889]
[454.13754272 724.93420410]
[442.07217407 733.85101318]
[429.60211182 742.19250488]
[416.75476074 749.94036865]
[403.55838013 757.07751465]
[390.04199219 763.58825684]
[376.23526001 769.45825195]
[362.16857910 774.67474365]
[347.87283325 779.22607422]
[333.37945557 783.10235596]
[318.72033691 786.29504395]
[303.92770386 788.79711914]
[289.03402710 790.60308838]
[274.07205200 791.70898438]
[259.07470703 792.11230469]
[244.07495117 791.81225586]
[229.10574341 790.80950928]
[214.19998169 789.10614014]
[199.39044189 786.70605469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
