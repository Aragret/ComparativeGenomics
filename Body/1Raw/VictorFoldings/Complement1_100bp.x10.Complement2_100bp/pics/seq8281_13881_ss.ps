%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[211.94375610 528.96911621]
[216.48278809 514.62048340]
[223.73416138 501.43322754]
[233.41914368 489.91424561]
[245.16546631 480.50625610]
[258.52163696 473.57089233]
[254.33460999 459.16711426]
[250.14759827 444.76333618]
[245.96058655 430.35955811]
[241.77357483 415.95578003]
[236.42239380 401.94274902]
[229.94290161 388.41439819]
[215.08192444 387.40591431]
[202.63829041 379.03860474]
[196.00978088 365.47656250]
[197.06652832 350.31805420]
[205.62464905 337.64108276]
[199.14515686 324.11273193]
[192.66566467 310.58438110]
[186.18617249 297.05603027]
[179.70666504 283.52767944]
[167.23072815 275.39135742]
[168.24771118 259.60287476]
[161.76821899 246.07452393]
[155.28871155 232.54617310]
[148.80921936 219.01782227]
[142.32972717 205.48948669]
[128.23986816 200.79785156]
[121.47602081 187.17048645]
[126.49256897 172.42355347]
[120.01306915 158.89520264]
[113.53357697 145.36686707]
[101.05763245 137.23051453]
[102.07460785 121.44203186]
[95.59511566 107.91368866]
[92.17609406 106.12968445]
[89.56003571 102.84729767]
[88.39849854 98.45891571]
[89.14351654 93.63348389]
[83.27455139 79.82930756]
[68.29267120 76.24470520]
[58.40976334 64.66102600]
[57.25642395 49.65656662]
[65.06599426 37.00158310]
[59.19702911 23.19740677]
[46.67704773 13.52473164]
[48.81779480 -1.21522963]
[42.94883347 -15.01940632]
[37.07987213 -28.82358360]
[31.21091270 -42.62776184]
[25.34195137 -56.43193817]
[19.47299004 -70.23611450]
[13.60402966 -84.04029083]
[7.73506927 -97.84446716]
[-7.23056889 -108.57345581]
[-4.42400980 -125.89656830]
[-10.49784374 -139.61183167]
[-16.57167816 -153.32710266]
[-17.19460678 -138.34004211]
[-21.21120834 -123.88780975]
[-28.41077805 -110.72854614]
[-38.41564178 -99.55255890]
[-50.70096207 -90.94612122]
[-64.62228394 -85.36069489]
[-79.44931030 -83.08929443]
[-94.40425110 -84.25106812]
[-108.70259857 -88.78507233]
[-121.59429169 -96.45346069]
[-132.40306091 -106.85397339]
[-140.56188965 -119.44100189]
[-145.64280701 -133.55427551]
[-147.37924194 -148.45343018]
[-145.68013000 -163.35688782]
[-140.63459778 -177.48283386]
[-132.50730896 -190.09027100]
[-121.72463226 -200.51782227]
[-108.85218048 -208.21847534]
[-94.56523895 -212.78828430]
[-79.61325073 -213.98751831]
[-64.78057861 -211.75326538]
[-50.84531784 -206.20272827]
[-38.53847504 -197.62709045]
[-28.50564957 -186.47619629]
[-21.27251053 -173.33346558]
[-21.94229698 -188.31851196]
[-22.61208153 -203.30354309]
[-23.28186607 -218.28858948]
[-23.95165062 -233.27362061]
[-32.29744339 -246.71453857]
[-25.13616371 -259.77459717]
[-39.97534561 -262.34613037]
[-53.91462708 -268.04794312]
[-66.30203247 -276.61334229]
[-76.55818939 -287.64172363]
[-84.20339966 -300.61727905]
[-88.88007355 -314.93310547]
[-90.36948395 -329.91961670]
[-88.60196686 -344.87588501]
[-83.66018677 -359.10238647]
[-75.77528381 -371.93368530]
[-65.31604767 -382.76965332]
[-52.77167892 -391.10348511]
[-38.72889709 -396.54541016]
[-23.84450912 -398.84085083]
[-8.81468582 -397.88247681]
[5.65760136 -393.71511841]
[18.89545631 -386.53366089]
[30.27972221 -376.67401123]
[39.27793503 -364.59732056]
[45.46923447 -350.86846924]
[48.56403732 -336.12951660]
[48.41759872 -321.06988525]
[45.03676605 -306.39392090]
[38.57966614 -292.78802490]
[29.34831238 -280.88861084]
[17.77446747 -271.25222778]
[4.39946413 -264.32955933]
[-10.15112495 -260.44439697]
[-1.85323977 -248.07530212]
[-8.96661282 -233.94340515]
[-8.29682732 -218.95837402]
[-7.62704229 -203.97332764]
[-6.95725727 -188.98829651]
[-6.28747225 -174.00325012]
[-2.85641122 -159.40093994]
[3.21742272 -145.68566895]
[9.29125690 -131.97039795]
[20.45898819 -127.32192230]
[25.63144684 -115.94522095]
[21.53924561 -103.71343231]
[27.40820694 -89.90924835]
[33.27716827 -76.10507202]
[39.14612961 -62.30089951]
[45.01509094 -48.49671936]
[50.88404846 -34.69254303]
[56.75300980 -20.88836670]
[62.62197113 -7.08419037]
[74.72216797 1.60111630]
[73.00120544 17.32844543]
[78.87017059 31.13262177]
[93.40204620 34.28895569]
[103.40719604 45.52999115]
[104.89210510 60.68415070]
[97.07872772 73.96034241]
[102.94769287 87.76451874]
[109.12345886 101.43418884]
[115.60295868 114.96253967]
[128.54235840 124.06652069]
[127.06192017 138.88735962]
[133.54141235 152.41571045]
[140.02091980 165.94406128]
[154.65573120 171.27882385]
[161.03414917 185.09078979]
[155.85806274 199.00997925]
[162.33757019 212.53833008]
[168.81706238 226.06668091]
[175.29655457 239.59501648]
[181.77604675 253.12336731]
[194.71545410 262.22735596]
[193.23501587 277.04818726]
[199.71450806 290.57653809]
[206.19401550 304.10488892]
[212.67350769 317.63323975]
[219.15299988 331.16159058]
[234.39486694 332.43939209]
[246.86833191 341.11749268]
[253.28068542 354.78308105]
[252.00045776 369.72351074]
[243.47123718 381.93490601]
[249.95074463 395.46325684]
[252.22763062 380.63705444]
[261.05935669 368.51269531]
[274.47286987 361.79870605]
[289.47158813 361.99508667]
[302.70474243 369.05792236]
[311.21600342 381.40936279]
[313.10394287 396.29010010]
[307.94680786 410.37567139]
[296.89669800 420.51937866]
[282.42221069 424.45507812]
[267.75704956 421.30352783]
[256.17736816 411.76876831]
[260.36437988 426.17254639]
[264.55139160 440.57632446]
[268.73840332 454.98010254]
[272.92541504 469.38388062]
[287.91815186 468.07855225]
[302.87744141 469.72351074]
[317.22827148 474.25558472]
[330.41906738 481.50054932]
[341.94274902 491.17993164]
[351.35644531 502.92169189]
[358.29827881 516.27447510]
[362.50143433 530.72509766]
[363.80435181 545.71801758]
[362.15695190 560.67706299]
[357.62255859 575.02716064]
[350.37545776 588.21679688]
[340.69421387 599.73889160]
[328.95092773 609.15069580]
[315.59701538 616.09039307]
[301.14575195 620.29119873]
[286.15258789 621.59167480]
[271.19381714 619.94183350]
[256.84445190 615.40515137]
[243.65602112 608.15588379]
[232.13545227 598.47277832]
[222.72557068 586.72796631]
[215.78805542 573.37292480]
[211.58956909 558.92102051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[11 170]
[12 169]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[30 151]
[31 150]
[32 149]
[34 147]
[35 146]
[39 145]
[40 144]
[44 140]
[45 139]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[54 130]
[56 127]
[57 126]
[58 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[90 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
