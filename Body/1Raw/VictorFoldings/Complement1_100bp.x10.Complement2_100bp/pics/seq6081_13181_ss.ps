%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[141.58294678 799.49145508]
[127.17903900 795.29296875]
[113.01035309 790.35852051]
[99.11447906 784.70123291]
[85.52825165 778.33612061]
[72.28771210 771.28002930]
[59.42797089 763.55169678]
[46.98312378 755.17156982]
[34.98617554 746.16192627]
[23.46893883 736.54669189]
[12.46195698 726.35125732]
[1.99441862 715.60272217]
[-7.90591908 704.32958984]
[-17.21280098 692.56176758]
[-25.90154839 680.33038330]
[-33.94911957 667.66796875]
[-41.33417511 654.60803223]
[-48.03712845 641.18530273]
[-54.04020309 627.43524170]
[-59.32748413 613.39440918]
[-63.88494873 599.10003662]
[-67.70051575 584.58996582]
[-70.76405334 569.90277100]
[-73.06745911 555.07727051]
[-74.60459900 540.15289307]
[-75.37142181 525.16912842]
[-75.36587524 510.16580200]
[-74.58798218 495.18264771]
[-73.03981018 480.25939941]
[-70.72545624 465.43563843]
[-67.65106201 450.75067139]
[-63.82477188 436.24343872]
[-59.25674438 421.95239258]
[-53.95908737 407.91546631]
[-47.94585419 394.16989136]
[-41.23298264 380.75207520]
[-33.83827972 367.69763184]
[-25.78135109 355.04116821]
[-17.08356667 342.81625366]
[-7.76799059 331.05526733]
[2.14067554 319.78945923]
[12.61615467 309.04867554]
[23.63066864 298.86138916]
[35.15500641 289.25460815]
[47.15861130 280.25384521]
[59.60964584 271.88296509]
[72.47509766 264.16412354]
[85.72084808 257.11782837]
[99.31176758 250.76274109]
[113.21182251 245.11572266]
[127.38415527 240.19175720]
[123.19714355 225.78797913]
[119.01013184 211.38420105]
[116.62123108 209.91746521]
[114.66938782 207.41607666]
[113.55158997 204.04177856]
[113.59900665 200.09687805]
[115.03015137 195.99739075]
[111.70789337 181.36993408]
[108.38563538 166.74246216]
[104.95456696 152.14015198]
[101.41490173 137.56376648]
[97.87522888 122.98739624]
[94.33555603 108.41101837]
[89.52436066 101.94380188]
[90.85340881 93.59128571]
[87.53115082 78.96382141]
[83.34413910 64.56004333]
[78.30722046 50.43101120]
[73.27030182 36.30198288]
[70.16552734 50.97714233]
[61.42633438 63.16839218]
[48.52543640 70.82128906]
[33.63685608 72.64617920]
[19.26958656 68.33554840]
[7.84476185 58.61580658]
[1.28766644 45.12490082]
[0.70328581 30.13628960]
[6.19009876 16.17581367]
[16.82348061 5.59605932]
[30.81151962 0.17990163]
[45.79698563 0.84005791]
[59.25456238 7.46528006]
[68.91720581 18.94056320]
[66.69208527 4.10651922]
[64.46696472 -10.72752476]
[62.24185181 -25.56156921]
[47.21948242 -26.69125175]
[32.82528687 -31.13590240]
[19.78127480 -38.67257690]
[8.74172497 -48.92324066]
[0.26037791 -61.37372208]
[-5.23734617 -75.39951324]
[-7.47568321 -90.29708099]
[-6.34235954 -105.31917572]
[-1.89422190 -119.71228790]
[5.64561272 -132.75447083]
[15.89894962 -143.79154968]
[28.35148621 -152.26986694]
[42.37860870 -157.76420593]
[57.27671814 -159.99893188]
[72.29853821 -158.86196899]
[86.69057465 -154.41033936]
[99.73093414 -146.86734009]
[110.76551819 -136.61132812]
[119.24082947 -124.15674591]
[124.73175812 -110.12828827]
[126.96287537 -95.22963715]
[125.82227325 -80.20809174]
[121.36715698 -65.81713104]
[113.82100677 -52.77860260]
[103.56231689 -41.74650574]
[91.10567474 -33.27421188]
[77.07589722 -27.78668594]
[79.30101013 -12.95264149]
[81.52613068 1.88140190]
[83.75124359 16.71544647]
[87.39933014 31.26506615]
[92.43624878 45.39409637]
[97.47316742 59.52312469]
[102.98340607 45.57188034]
[115.57936859 37.42683411]
[130.56306458 38.12589264]
[142.34596252 47.40832138]
[146.53330994 61.81200409]
[141.56335449 75.96472168]
[129.28974915 84.58786774]
[114.29024506 84.46520996]
[102.15860748 75.64156342]
[105.48086548 90.26902771]
[108.91192627 104.87134552]
[112.45159912 119.44772339]
[115.99127197 134.02409363]
[119.53094482 148.60047913]
[124.59705353 156.20127869]
[123.01309204 163.42021179]
[126.33535004 178.04766846]
[129.65760803 192.67512512]
[133.41390991 207.19718933]
[137.60092163 221.60096741]
[141.78793335 236.00474548]
[156.39138794 232.56393433]
[171.15261841 229.87944031]
[186.03247070 227.95840454]
[200.99147034 226.80590820]
[215.98999023 226.42501831]
[230.98820496 226.81674194]
[245.94638062 227.98002625]
[260.82482910 229.91180420]
[275.58413696 232.60694885]
[290.18508911 236.05830383]
[304.58905029 240.25672913]
[318.75775146 245.19108582]
[332.65365601 250.84829712]
[346.23992920 257.21334839]
[359.48049927 264.26934814]
[372.34030151 271.99761963]
[384.78518677 280.37765503]
[396.78219604 289.38720703]
[408.29946899 299.00241089]
[419.30651855 309.19778442]
[429.77410889 319.94625854]
[439.67453003 331.21932983]
[448.98147583 342.98712158]
[457.67028809 355.21841431]
[465.71792603 367.88079834]
[473.10305786 380.94064331]
[479.80609131 394.36337280]
[485.80923462 408.11337280]
[491.09661865 422.15417480]
[495.65414429 436.44854736]
[499.46978760 450.95858765]
[502.53341675 465.64581299]
[504.83691406 480.47125244]
[506.37414551 495.39566040]
[507.14105225 510.37936401]
[507.13558960 525.38269043]
[506.35778809 540.36590576]
[504.80969238 555.28912354]
[502.49542236 570.11291504]
[499.42111206 584.79791260]
[495.59490967 599.30517578]
[491.02697754 613.59619141]
[485.72940063 627.63317871]
[479.71621704 641.37878418]
[473.00344849 654.79663086]
[465.60879517 667.85113525]
[457.55194092 680.50762939]
[448.85424805 692.73260498]
[439.53872681 704.49365234]
[429.63012695 715.75952148]
[419.15472412 726.50036621]
[408.14025879 736.68768311]
[396.61596680 746.29455566]
[384.61242676 755.29534912]
[372.16143799 763.66632080]
[359.29602051 771.38525391]
[346.05032349 778.43164062]
[332.45944214 784.78680420]
[318.55941772 790.43389893]
[304.38711548 795.35791016]
[289.98010254 799.54583740]
[275.37664795 802.98657227]
[260.61538696 805.67102051]
[245.73553467 807.59197998]
[230.77651978 808.74438477]
[215.77801514 809.12518311]
[200.77978516 808.73339844]
[185.82162476 807.57000732]
[170.94317627 805.63812256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 141]
[52 140]
[53 139]
[58 138]
[59 137]
[60 136]
[61 134]
[62 133]
[63 132]
[64 131]
[66 130]
[67 129]
[68 120]
[69 119]
[70 118]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
