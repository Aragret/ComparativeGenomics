%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[114.91510010 634.30755615]
[101.06516266 640.09350586]
[86.75804901 644.63269043]
[72.10575104 647.88964844]
[57.22294235 649.83886719]
[42.22609329 650.46508789]
[27.23258400 649.76348877]
[12.35975933 647.73944092]
[-2.27597761 644.40887451]
[-16.56008148 639.79779053]
[-30.38075638 633.94232178]
[-43.62983322 626.88824463]
[-56.20362473 618.69085693]
[-68.00371552 609.41424561]
[-78.93775177 599.13104248]
[-88.92016602 587.92169189]
[-97.87281799 575.87396240]
[-105.72565460 563.08215332]
[-112.41720581 549.64636230]
[-117.89510345 535.67175293]
[-122.11647034 521.26763916]
[-125.04827881 506.54684448]
[-126.66757202 491.62451172]
[-126.96167755 476.61749268]
[-125.92829895 461.64318848]
[-123.57551575 446.81881714]
[-119.92176056 432.26037598]
[-114.99560547 418.08184814]
[-108.83561707 404.39419556]
[-101.49001312 391.30450439]
[-93.01627350 378.91528320]
[-83.48071289 367.32342529]
[-72.95797729 356.61972046]
[-61.53041458 346.88787842]
[-49.28746414 338.20413208]
[-36.32494354 330.63638306]
[-22.74430275 324.24389648]
[-8.65183353 319.07669067]
[5.84216976 315.17523193]
[20.62426949 312.57000732]
[35.57877731 311.28146362]
[50.58864594 311.31961060]
[65.53639984 312.68423462]
[80.30506134 315.36459351]
[84.27715302 300.90008545]
[88.24925232 286.43554688]
[92.22135162 271.97103882]
[96.19344330 257.50650024]
[99.07872009 242.78662109]
[100.86118317 227.89289856]
[102.64364624 212.99917603]
[104.42611694 198.10546875]
[106.20858002 183.21174622]
[107.99105072 168.31802368]
[106.87539673 153.35957336]
[102.90330505 138.89505005]
[98.93120575 124.43052673]
[94.95910645 109.96600342]
[90.87944031 95.53144836]
[86.69242859 81.12767029]
[75.41057587 70.03576660]
[79.28771973 55.65463257]
[75.10070801 41.25085068]
[70.91369629 26.84706879]
[66.72668457 12.44328785]
[62.53967285 -1.96049440]
[58.35266113 -16.36427689]
[47.07080460 -27.45617676]
[50.94794846 -41.83731079]
[39.66609192 -52.92921066]
[43.54323578 -67.31034851]
[28.71520996 -64.92092896]
[13.70594215 -64.37185669]
[-1.25703406 -65.67145538]
[-15.94688320 -68.80002594]
[-30.14091110 -73.71013641]
[-43.62393951 -80.32735443]
[-56.19157028 -88.55136108]
[-67.65328217 -98.25748444]
[-77.83531189 -109.29858398]
[-86.58331299 -121.50727081]
[-93.76465607 -134.69847107]
[-99.27048492 -148.67222595]
[-103.01732635 -163.21665955]
[-104.94837952 -178.11131287]
[-105.03437042 -193.13037109]
[-103.27400208 -208.04615784]
[-99.69394684 -222.63255310]
[-94.34849548 -236.66842651]
[-87.31866455 -249.94099426]
[-78.71104431 -262.24905396]
[-68.65610504 -273.40603638]
[-57.30629349 -283.24276733]
[-44.83366013 -291.61013794]
[-31.42728615 -298.38131714]
[-17.29041290 -303.45364380]
[-2.63735223 -306.75021362]
[12.30976200 -308.22106934]
[27.32433319 -307.84390259]
[42.17874527 -305.62442017]
[56.64780807 -301.59631348]
[70.51217651 -295.82058716]
[83.56166840 -288.38482666]
[95.59845734 -279.40176392]
[106.44007111 -269.00759888]
[115.92214966 -257.35986328]
[123.90094757 -244.63514709]
[130.25550842 -231.02635193]
[134.88951111 -216.73979187]
[137.73268127 -201.99205017]
[138.74192810 -187.00668335]
[137.90196228 -172.01089478]
[135.22550964 -157.23197937]
[130.75312805 -142.89399719]
[124.55265045 -129.21432495]
[116.71804810 -116.40032196]
[107.36810303 -104.64625549]
[96.64456177 -94.13030243]
[84.70997620 -85.01190186]
[71.74527740 -77.42926788]
[57.94701767 -71.49736023]
[68.92938995 -61.43571091]
[65.35173035 -46.02432251]
[76.33410645 -35.96267700]
[72.75644684 -20.55128860]
[76.94345856 -6.14750576]
[81.13047028 8.25627613]
[85.31747437 22.66005898]
[89.50448608 37.06383896]
[93.69149780 51.46762085]
[104.67387390 61.52927017]
[101.09621429 76.94065857]
[105.28322601 91.34443665]
[110.37839508 97.59037781]
[109.42363739 105.99390411]
[113.39572906 120.45843506]
[117.36782837 134.92295837]
[121.33992004 149.38748169]
[124.16928864 134.65673828]
[130.16358948 120.90652466]
[139.03034973 108.80773926]
[150.33692932 98.95071411]
[163.53167725 91.81638336]
[177.97079468 87.75286102]
[192.94973755 86.95841217]
[207.73767090 89.47178650]
[221.61305237 95.17037201]
[233.89886475 103.77610016]
[243.99566650 114.86909485]
[251.41081238 127.90810394]
[255.78250122 142.25691223]
[256.89743042 157.21542358]
[254.70117188 172.05377197]
[249.30093384 186.04795837]
[240.96015930 198.51518250]
[230.08584595 208.84713745]
[217.20857239 216.53970337]
[202.95663452 221.21754456]
[188.02542114 222.65242004]
[173.14344788 220.77430725]
[159.03686523 215.67486572]
[146.39395142 207.60289001]
[135.83158875 196.95223999]
[127.86512756 184.24258423]
[122.88476562 170.10049438]
[121.10229492 184.99421692]
[119.31983185 199.88792419]
[117.53736877 214.78164673]
[115.75489807 229.67536926]
[113.97243500 244.56907654]
[124.19831085 233.59495544]
[138.51199341 229.10960388]
[153.17193604 232.28549194]
[164.34605408 242.29244995]
[169.11344910 256.51467896]
[166.22795105 271.23452759]
[156.44381714 282.60427856]
[142.31860352 287.65185547]
[127.54459381 285.05789185]
[115.98368835 275.50039673]
[110.65796661 261.47860718]
[106.68587494 275.94311523]
[102.71377563 290.40765381]
[98.74168396 304.87216187]
[94.76958466 319.33670044]
[108.83589172 324.57467651]
[122.38422394 331.03536987]
[135.30853271 338.66818237]
[147.50765991 347.41339111]
[158.88615417 357.20257568]
[169.35493469 367.95904541]
[178.83209229 379.59869385]
[187.24342346 392.03039551]
[194.52313232 405.15682983]
[200.61421204 418.87530518]
[205.46902466 433.07843018]
[209.04953003 447.65502930]
[211.32774353 462.49102783]
[212.28582764 477.47033691]
[211.91625977 492.47570801]
[210.22196960 507.38970947]
[207.21618652 522.09558105]
[202.92243958 536.47827148]
[197.37434387 550.42517090]
[190.61532593 563.82714844]
[182.69827271 576.57934570]
[173.68516541 588.58190918]
[163.64651489 599.74090576]
[152.66090393 609.96899414]
[140.81433105 619.18615723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 185]
[45 184]
[46 183]
[47 182]
[48 181]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 138]
[56 137]
[57 136]
[58 135]
[59 133]
[60 132]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[69 123]
[71 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
