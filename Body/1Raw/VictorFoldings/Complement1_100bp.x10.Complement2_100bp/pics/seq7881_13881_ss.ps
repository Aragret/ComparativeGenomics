%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[210.76968384 379.73550415]
[222.57942200 370.43353271]
[215.30618286 357.31484985]
[208.03295898 344.19616699]
[200.75973511 331.07745361]
[193.38903809 318.01327515]
[185.92129517 305.00433350]
[182.08786011 319.50622559]
[169.90255737 328.25369263]
[154.93634033 327.24752808]
[144.03157043 316.94772339]
[142.17375183 302.06323242]
[150.21224976 289.39901733]
[164.47198486 284.74499512]
[178.43499756 290.23013306]
[172.36116028 276.51486206]
[166.28732300 262.79962158]
[160.21348572 249.08433533]
[145.49981689 239.52011108]
[147.61323547 221.22761536]
[141.33587646 207.60430908]
[135.05851746 193.98098755]
[121.04006195 189.08009338]
[114.47985840 175.35354614]
[119.71541595 160.68293762]
[113.43804932 147.05961609]
[107.16069031 133.43629456]
[94.80726624 125.11511230]
[96.05920410 109.34351349]
[90.09387207 103.92250824]
[89.79148102 95.47032166]
[83.71765137 81.75505066]
[77.64381409 68.03978729]
[64.98120880 58.55458832]
[66.90225983 43.78438950]
[60.62490082 30.16107178]
[54.14540482 16.63272667]
[47.66590881 3.10438132]
[41.18641663 -10.42396450]
[28.24701309 -19.52794456]
[29.72745132 -34.34879303]
[23.24795532 -47.87714005]
[16.76845932 -61.40548325]
[10.28896332 -74.93383026]
[-2.65043926 -84.03781128]
[-1.17000139 -98.85865784]
[-7.64949703 -112.38700104]
[-14.12899303 -125.91535187]
[-20.60848808 -139.44369507]
[-35.24330902 -144.77845764]
[-41.62172318 -158.59043884]
[-36.44564819 -172.50962830]
[-42.92514420 -186.03796387]
[-49.40463638 -199.56631470]
[-63.44215012 -194.25386047]
[-77.87961578 -190.15101624]
[-92.61302185 -187.28735352]
[-107.53620911 -185.68350220]
[-122.54165649 -185.35099792]
[-137.52124023 -186.29226685]
[-152.36701965 -188.50050354]
[-166.97206116 -191.95980835]
[-181.23110962 -196.64526367]
[-195.04142761 -202.52308655]
[-208.30351257 -209.55094910]
[-220.92182922 -217.67819214]
[-232.80541992 -226.84629822]
[-243.86869812 -236.98916626]
[-254.03193665 -248.03373718]
[-263.22189331 -259.90042114]
[-271.37237549 -272.50372314]
[-278.42465210 -285.75283813]
[-284.32791138 -299.55230713]
[-289.03964233 -313.80270386]
[-292.52584839 -328.40133667]
[-294.76141357 -343.24304199]
[-295.73028564 -358.22085571]
[-295.42541504 -373.22689819]
[-293.84906006 -388.15301514]
[-291.01254272 -402.89166260]
[-286.93630981 -417.33666992]
[-281.64971924 -431.38394165]
[-275.19088745 -444.93228149]
[-267.60632324 -457.88403320]
[-258.95071411 -470.14593506]
[-249.28636169 -481.62957764]
[-238.68295288 -492.25228882]
[-227.21687317 -501.93746948]
[-214.97071838 -510.61535645]
[-202.03274536 -518.22344971]
[-188.49617004 -524.70684814]
[-174.45852661 -530.01892090]
[-160.02095032 -534.12139893]
[-145.28747559 -536.98468018]
[-130.36424255 -538.58819580]
[-115.35879517 -538.92028809]
[-100.37923431 -537.97863770]
[-85.53350067 -535.77001953]
[-70.92855835 -532.31030273]
[-56.66963196 -527.62451172]
[-42.85945892 -521.74633789]
[-29.59755325 -514.71813965]
[-16.97945976 -506.59054565]
[-5.09609652 -497.42214966]
[5.96691513 -487.27899170]
[16.12986374 -476.23416138]
[25.31952667 -464.36721802]
[33.46968842 -451.76370239]
[40.52162552 -438.51440430]
[46.42453003 -424.71478271]
[51.13586807 -410.46426392]
[54.62169647 -395.86553955]
[56.85689926 -381.02380371]
[57.82537079 -366.04592896]
[57.52013016 -351.03991699]
[55.94338226 -336.11386108]
[53.10648346 -321.37527466]
[49.02987289 -306.93035889]
[43.74292755 -292.88323975]
[37.28374100 -279.33505249]
[29.69884682 -266.38348389]
[21.04290009 -254.12182617]
[11.37826538 -242.63841248]
[0.77458030 -232.01600647]
[-10.69175529 -222.33111572]
[-22.93812561 -213.65354919]
[-35.87629318 -206.04580688]
[-29.39679718 -192.51747131]
[-22.91730118 -178.98912048]
[-8.82744026 -174.29748535]
[-2.06359386 -160.67012024]
[-7.08014345 -145.92318726]
[-0.60064757 -132.39485168]
[5.87884808 -118.86650085]
[12.35834408 -105.33815765]
[24.83428955 -97.20181274]
[23.81730843 -81.41332245]
[30.29680443 -67.88497925]
[36.77629852 -54.35663605]
[43.25579453 -40.82828903]
[55.73174286 -32.69194794]
[54.71475983 -16.90345955]
[61.19425583 -3.37511444]
[67.67375183 10.15323067]
[74.15325165 23.68157578]
[78.28014374 26.08528137]
[80.94085693 31.10699463]
[80.61753082 37.71055603]
[92.84569550 46.21474457]
[91.35908508 61.96595383]
[97.43291473 75.68122101]
[103.50675201 89.39648438]
[109.68251801 103.06615448]
[122.48493958 112.36177826]
[120.78400421 127.15894318]
[127.06137085 140.78225708]
[133.33872986 154.40557861]
[147.89250183 159.95764160]
[154.06457520 173.86305237]
[148.68182373 187.70362854]
[154.95918274 201.32695007]
[161.23655701 214.95025635]
[173.04425049 220.14074707]
[177.99220276 231.61686707]
[173.92875671 243.01051331]
[180.00259399 256.72576904]
[186.07643127 270.44104004]
[192.15025330 284.15631104]
[198.93025208 297.53659058]
[206.39799500 310.54553223]
[213.38438416 316.43011475]
[213.87841797 323.80422974]
[221.15165710 336.92291260]
[228.42488098 350.04162598]
[235.69810486 363.16030884]
[249.84397888 358.07205200]
[264.62292480 355.31896973]
[279.65209961 354.97238159]
[294.54220581 357.04125977]
[308.90759277 361.47201538]
[322.37615967 368.14990234]
[334.59899902 376.90194702]
[345.25955200 387.50140381]
[354.08166504 399.67376709]
[360.83685303 413.10372925]
[365.35006714 427.44345093]
[367.50448608 442.32144165]
[367.24426270 457.35235596]
[364.57614136 472.14685059]
[359.56921387 486.32171631]
[352.35321045 499.50979614]
[343.11505127 511.36950684]
[332.09396362 521.59362793]
[319.57550049 529.91729736]
[305.88385010 536.12493896]
[291.37368774 540.05578613]
[276.42086792 541.60803223]
[261.41271973 540.74139404]
[246.73793030 537.47839355]
[232.77667236 531.90350342]
[219.89054871 524.16113281]
[208.41334534 514.45184326]
[198.64236450 503.02716064]
[190.83067322 490.18295288]
[185.18061829 476.25192261]
[181.83856201 461.59497070]
[180.89106750 446.59167480]
[182.36267090 431.63070679]
[186.21525574 417.09957886]
[192.34904480 403.37466431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 170]
[7 169]
[15 168]
[16 167]
[17 166]
[18 165]
[20 162]
[21 161]
[22 160]
[25 157]
[26 156]
[27 155]
[29 153]
[31 152]
[32 151]
[33 150]
[35 148]
[36 145]
[37 144]
[38 143]
[39 142]
[41 140]
[42 139]
[43 138]
[44 137]
[46 135]
[47 134]
[48 133]
[49 132]
[52 129]
[53 128]
[54 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
