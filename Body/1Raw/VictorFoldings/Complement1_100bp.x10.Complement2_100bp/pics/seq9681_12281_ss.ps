%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[200.82171631 490.84878540]
[201.96444702 475.86856079]
[205.13639832 461.18344116]
[210.27850342 447.06704712]
[217.29495239 433.78234863]
[226.05503845 421.57684326]
[236.39556885 410.67788696]
[248.12391663 401.28854370]
[261.02157593 393.58370972]
[255.15260315 379.77954102]
[249.28364563 365.97537231]
[243.77365112 361.04971313]
[243.43176270 351.92169189]
[237.76896667 338.03167725]
[225.79943848 329.16717529]
[227.75434875 313.46722412]
[222.09156799 299.57717896]
[216.42878723 285.68716431]
[210.76599121 271.79711914]
[205.10321045 257.90710449]
[199.44042969 244.01707458]
[193.77763367 230.12704468]
[186.02124023 217.28810120]
[176.36042786 205.81340027]
[166.69963074 194.33871460]
[157.03881836 182.86401367]
[147.37800598 171.38931274]
[137.71719360 159.91461182]
[133.11985779 158.62094116]
[129.28637695 154.42553711]
[127.94573975 147.95141602]
[118.63085938 136.19416809]
[109.31597900 124.43691254]
[100.00109863 112.67966461]
[103.06192017 127.36405182]
[102.27091217 142.34318542]
[97.68054962 156.62353516]
[89.59528351 169.25794983]
[78.55138397 179.40843201]
[65.28134918 186.40173340]
[50.66534424 189.77401733]
[35.67278290 189.30160522]
[21.29807663 185.01583862]
[8.49464417 177.20097351]
[-1.88830733 166.37535095]
[-9.16211510 153.25697327]
[-12.84433270 138.71595764]
[-12.69073200 123.71674347]
[-8.71150112 109.25417328]
[-1.17056799 96.28751373]
[9.43190479 85.67678833]
[22.39269257 78.12576294]
[36.85215378 74.13526917]
[51.85124207 73.96999359]
[66.39512634 77.64089203]
[79.51915741 84.90447998]
[90.35608673 95.28300476]
[85.31916809 81.15396881]
[80.28225708 67.02494049]
[75.24533844 52.89591217]
[63.32328033 42.49518585]
[66.33757019 27.90877724]
[61.30065536 13.77974701]
[59.34997177 28.65236664]
[53.34094238 42.39615250]
[43.74746704 53.92720413]
[31.32612419 62.33614349]
[17.05651283 66.95980072]
[2.06399584 67.43354034]
[-12.46905518 63.71999359]
[-25.39650345 56.11203003]
[-35.69883728 45.20964813]
[-42.56356812 31.87265396]
[-45.44932175 17.15285492]
[-44.12850571 2.21112037]
[-38.70529556 -11.77418518]
[-29.60737991 -23.70012093]
[-17.55226135 -32.62615967]
[-3.49065828 -37.84835052]
[11.46847439 -38.95486069]
[26.14539528 -35.85841370]
[39.38262558 -28.80321884]
[50.13621521 -18.34567261]
[57.55937195 -5.30727530]
[56.88958740 -20.29231453]
[56.21980286 -35.27735138]
[55.55001831 -50.26239014]
[47.11227036 -57.12628555]
[43.91091919 -67.29150391]
[46.77263641 -77.32937622]
[54.52033234 -83.99166870]
[46.57842636 -97.67511749]
[54.12538147 -110.51617432]
[53.90205383 -125.51451111]
[42.84295273 -136.48420715]
[42.83012009 -151.69783020]
[53.35619736 -162.17338562]
[53.13286972 -177.17172241]
[39.11334610 -183.11923218]
[28.72969627 -194.25924683]
[23.78094482 -208.66166687]
[25.12449837 -223.83119202]
[32.52757263 -237.13963318]
[44.70754242 -246.28118896]
[59.55415726 -249.67205811]
[74.49514771 -246.72473145]
[86.94189453 -237.94987488]
[94.73793030 -224.86775208]
[96.53253937 -209.74494934]
[92.01480103 -195.20156860]
[81.96743011 -183.75733948]
[68.13120270 -177.39505005]
[68.35453033 -162.39671326]
[79.18783569 -152.23919678]
[79.62798309 -137.03193665]
[68.90039062 -125.73783875]
[69.12371826 -110.73950195]
[77.04965210 -98.12883759]
[69.51866913 -84.21499634]
[80.62268829 -68.38503265]
[70.53505707 -50.93217850]
[71.20484161 -35.94713974]
[71.87462616 -20.96209908]
[72.54441071 -5.97706032]
[75.42968750 8.74283123]
[80.46659851 22.87186050]
[92.02838135 32.26198578]
[89.37436676 47.85899734]
[94.41128540 61.98802567]
[99.44820404 76.11705780]
[104.48511505 90.24608612]
[111.75834656 103.36477661]
[121.07322693 115.12203217]
[130.38810730 126.87928009]
[139.70298767 138.63653564]
[149.19189453 150.25379944]
[158.85270691 161.72850037]
[168.51351929 173.20320129]
[178.17433167 184.67790222]
[187.83512878 196.15260315]
[197.49594116 207.62730408]
[194.05288696 193.02780151]
[194.62120056 178.03857422]
[199.15985107 163.74169922]
[207.34120178 151.16928101]
[218.57461548 141.22892761]
[232.04914856 134.63825989]
[246.79206848 131.87304688]
[261.73907471 133.13291931]
[275.81109619 138.32693481]
[287.99230957 147.08010864]
[297.40332031 158.76055908]
[303.36474609 172.52507019]
[305.44619751 187.37994385]
[303.49746704 202.25282288]
[297.65917969 216.07000732]
[288.35284424 227.83401489]
[276.25027466 236.69560242]
[262.22515869 242.01506042]
[247.29000854 243.40834045]
[232.52299500 240.77487183]
[218.99015808 234.30477905]
[207.66766357 224.46426392]
[213.33044434 238.35429382]
[218.99324036 252.24430847]
[224.65602112 266.13433838]
[230.31881714 280.02438354]
[235.98159790 293.91439819]
[241.64437866 307.80441284]
[254.01896667 317.66241455]
[251.65899658 332.36889648]
[257.32177734 346.25891113]
[263.08782959 360.10638428]
[268.95678711 373.91058350]
[274.82574463 387.71475220]
[289.32302856 383.77239990]
[304.22213745 381.84085083]
[319.24545288 381.95614624]
[334.11315918 384.11611938]
[348.54821777 388.28051758]
[362.28176880 394.37176514]
[375.05795288 402.27639771]
[386.63873291 411.84713745]
[396.80838013 422.90573120]
[405.37744141 435.24609375]
[412.18627930 448.63839722]
[417.10806274 462.83309937]
[420.05105591 477.56579590]
[420.96051025 492.56201172]
[419.81939697 507.54238892]
[416.64901733 522.22784424]
[411.50845337 536.34478760]
[404.49343872 549.63024902]
[395.73468018 561.83673096]
[385.39532471 572.73681641]
[373.66799927 582.12738037]
[360.77117920 589.83361816]
[346.94512939 595.71191406]
[332.44741821 599.65270996]
[317.54809570 601.58258057]
[302.52478027 601.46569824]
[287.65731812 599.30407715]
[273.22268677 595.13812256]
[259.48980713 589.04541016]
[246.71449280 581.13940430]
[235.13475037 571.56738281]
[224.96629333 560.50769043]
[216.39855957 548.16644287]
[209.59117126 534.77337646]
[204.67094421 520.57812500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[13 172]
[14 171]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 163]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[28 136]
[31 135]
[32 134]
[33 133]
[34 132]
[57 131]
[58 130]
[59 129]
[60 128]
[62 126]
[63 125]
[84 124]
[85 123]
[86 122]
[87 121]
[91 119]
[93 117]
[94 116]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
