%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[199.05775452 408.23864746]
[197.49377441 393.31216431]
[197.13594055 378.30822754]
[197.98660278 363.32412720]
[200.04022217 348.45709229]
[203.28350830 333.80349731]
[207.69538879 319.45843506]
[213.24728394 305.51486206]
[219.90316772 292.06326294]
[227.61988831 279.19085693]
[236.34738159 266.98114014]
[246.02905273 255.51330566]
[235.38304138 244.94625854]
[224.73704529 234.37921143]
[214.09103394 223.81216431]
[203.44502258 213.24511719]
[192.79901123 202.67807007]
[182.15299988 192.11102295]
[168.12826538 197.18765259]
[153.22886658 195.66532898]
[140.41548157 187.79272461]
[132.25759888 175.08567810]
[130.41836548 160.03561401]
[135.31573486 145.62113953]
[124.66973114 135.05409241]
[114.02371979 124.48705292]
[103.37771606 113.91999817]
[89.90921021 110.16619110]
[86.05523682 96.72600555]
[73.17788696 95.99349976]
[64.52834320 86.97301483]
[64.34983063 74.87777710]
[53.86233139 64.15339661]
[43.37482834 53.42901993]
[28.19435883 48.97212982]
[24.82772255 34.46299362]
[13.37772846 44.16304016]
[1.26491141 53.02153397]
[-11.44900417 60.99333572]
[-24.69923019 68.03781891]
[-38.41824722 74.11909485]
[-52.53614426 79.20616150]
[-66.98097992 83.27310181]
[-81.67913818 86.29919434]
[-96.55573273 88.26902008]
[-111.53495026 89.17253113]
[-126.54045868 89.00513458]
[-141.49578857 87.76767731]
[-156.32473755 85.46646881]
[-170.95173645 82.11322784]
[-185.30224609 77.72505188]
[-199.30314636 72.32429504]
[-212.88308716 65.93848419]
[-225.97285461 58.60015869]
[-238.50576782 50.34671021]
[-250.41795349 41.22019958]
[-261.64868164 31.26713181]
[-272.14077759 20.53822708]
[-281.84072876 9.08815861]
[-290.69915771 -3.02472687]
[-298.67083740 -15.73870373]
[-305.71524048 -28.98898315]
[-311.79638672 -42.70804596]
[-316.88336182 -56.82598114]
[-320.95019531 -71.27085114]
[-323.97616577 -85.96903229]
[-325.94586182 -100.84564209]
[-326.84927368 -115.82486725]
[-326.68176270 -130.83036804]
[-325.44418335 -145.78569031]
[-323.14285278 -160.61462402]
[-319.78952026 -175.24159241]
[-315.40124512 -189.59207153]
[-310.00036621 -203.59292603]
[-303.61444092 -217.17282104]
[-296.27603149 -230.26254272]
[-288.02249146 -242.79537964]
[-278.89587402 -254.70748901]
[-268.94271851 -265.93817139]
[-258.21374512 -276.43017578]
[-246.76359558 -286.13003540]
[-234.65065002 -294.98834229]
[-221.93659973 -302.95996094]
[-208.68626404 -310.00424194]
[-194.96716309 -316.08529663]
[-180.84918213 -321.17214966]
[-166.40429688 -325.23886108]
[-151.70608521 -328.26473999]
[-136.82945251 -330.23434448]
[-121.85022736 -331.13763428]
[-106.84471893 -330.97000122]
[-91.88940430 -329.73229980]
[-77.06049347 -327.43087769]
[-62.43354797 -324.07739258]
[-48.08310318 -319.68899536]
[-34.08229065 -314.28802490]
[-20.50245285 -307.90200806]
[-7.41278982 -300.56347656]
[5.11999416 -292.30984497]
[17.03203583 -283.18316650]
[28.26263046 -273.22991943]
[38.75455475 -262.50085449]
[48.45433426 -251.05062866]
[57.31255341 -238.93760681]
[65.28405762 -226.22351074]
[72.32823944 -212.97312927]
[78.40919495 -199.25396729]
[83.49594116 -185.13595581]
[87.56255341 -170.69102478]
[90.58830261 -155.99279785]
[92.55778503 -141.11614990]
[93.46095276 -126.13691711]
[93.29321289 -111.13141632]
[92.05541229 -96.17610931]
[89.75386047 -81.34721375]
[86.40028381 -66.72029877]
[82.01177979 -52.36988831]
[76.61070251 -38.36911392]
[70.22457886 -24.78932381]
[62.88595200 -11.69971848]
[54.63221359 0.83300275]
[45.50542831 12.74497414]
[35.55210114 23.97549248]
[49.98243713 27.66530418]
[54.09920883 42.94152069]
[64.58670807 53.66589737]
[75.07421112 64.39028168]
[92.20383453 68.20378876]
[96.62228394 86.08000183]
[110.09078979 89.83380890]
[113.94476318 103.27399445]
[124.59076691 113.84104156]
[135.23678589 124.40808868]
[145.88278198 134.97514343]
[160.26040649 129.97058105]
[175.32373047 131.69772339]
[188.09115601 139.76078796]
[196.05894470 152.51521301]
[197.69213867 167.40286255]
[192.72004700 181.46501160]
[203.36605835 192.03205872]
[214.01206970 202.59910583]
[224.65808105 213.16615295]
[235.30409241 223.73320007]
[245.95008850 234.30024719]
[256.59609985 244.86729431]
[267.99154663 235.10050964]
[280.13595581 226.28236389]
[292.95056152 218.47004700]
[306.35223389 211.71420288]
[320.25408936 206.05865479]
[334.56591797 201.54010010]
[349.19494629 198.18782043]
[364.04629517 196.02357483]
[379.02362061 195.06140137]
[394.02981567 195.30751038]
[408.96752930 196.76034546]
[423.73992920 199.41046143]
[438.25115967 203.24066162]
[452.40713501 208.22613525]
[466.11602783 214.33451843]
[479.28894043 221.52621460]
[491.84045410 229.75457764]
[503.68914795 238.96624756]
[514.75817871 249.10147095]
[524.97576904 260.09451294]
[534.27563477 271.87411499]
[542.59747314 284.36383057]
[549.88732910 297.48269653]
[556.09790039 311.14559937]
[561.18896484 325.26394653]
[565.12738037 339.74618530]
[567.88775635 354.49835205]
[569.45202637 369.42480469]
[569.81018066 384.42874146]
[568.95989990 399.41284180]
[566.90655518 414.27993774]
[563.66363525 428.93359375]
[559.25207520 443.27877808]
[553.70050049 457.22244263]
[547.04486084 470.67419434]
[539.32843018 483.54678345]
[530.60125732 495.75668335]
[520.91979980 507.22473145]
[510.34698486 517.87658691]
[498.95129395 527.64312744]
[486.80670166 536.46099854]
[473.99194336 544.27301025]
[460.59011841 551.02856445]
[446.68814087 556.68377686]
[432.37619019 561.20202637]
[417.74710083 564.55401611]
[402.89572144 566.71789551]
[387.91836548 567.67974854]
[372.91217041 567.43334961]
[357.97448730 565.98016357]
[343.20214844 563.32971191]
[328.69100952 559.49920654]
[314.53515625 554.51342773]
[300.82638550 548.40472412]
[287.65362549 541.21276855]
[275.10229492 532.98413086]
[263.25381470 523.77215576]
[252.18499756 513.63671875]
[241.96765137 502.64343262]
[232.66802979 490.86364746]
[224.34645081 478.37374878]
[217.05688477 465.25473022]
[210.84661865 451.59167480]
[205.75590515 437.47320557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[18 140]
[24 134]
[25 133]
[26 132]
[27 131]
[29 129]
[32 127]
[33 126]
[34 125]
[36 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
