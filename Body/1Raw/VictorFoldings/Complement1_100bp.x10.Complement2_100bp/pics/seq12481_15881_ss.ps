%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[168.69941711 661.78631592]
[157.27937317 652.05206299]
[146.54252625 641.56909180]
[136.53788757 630.38519287]
[127.31109619 618.55133057]
[118.90426636 606.12164307]
[111.35573578 593.15270996]
[104.69996643 579.70379639]
[98.96731567 565.83618164]
[94.18394470 551.61328125]
[90.37167358 537.09985352]
[87.54790497 522.36212158]
[85.72552490 507.46743774]
[84.91283417 492.48370361]
[85.11355591 477.47927856]
[86.32676697 462.52264404]
[88.54693604 447.68203735]
[91.76393127 433.02517700]
[95.96306610 418.61889648]
[101.12519073 404.52899170]
[107.22675323 390.81973267]
[114.23990631 377.55368042]
[122.13264465 364.79132080]
[130.86897278 352.59091187]
[140.40901184 341.00814819]
[150.70924377 330.09585571]
[161.72265625 319.90383911]
[173.39901733 310.47857666]
[185.68504333 301.86306763]
[198.52465820 294.09667969]
[191.64524841 280.76724243]
[184.76583862 267.43780518]
[177.88642883 254.10838318]
[171.00701904 240.77896118]
[163.92991638 227.55342102]
[156.65667725 214.43473816]
[149.38345337 201.31604004]
[142.01275635 188.25184631]
[134.54501343 175.24290466]
[127.07727814 162.23394775]
[119.60953522 149.22499084]
[112.14179230 136.21604919]
[97.37225342 138.10668945]
[83.00202942 134.20663452]
[71.21482086 125.10853577]
[63.80181122 112.19493103]
[61.88949203 97.42817688]
[65.76845551 83.05224609]
[74.84925079 71.25169373]
[67.38150787 58.24274445]
[59.91376877 45.23379135]
[51.96708679 32.51175690]
[43.55246735 20.09426117]
[35.13784790 7.67676544]
[26.72322845 -4.74073029]
[22.02595711 -7.01729012]
[18.97657013 -10.51793861]
[17.76538849 -14.40999317]
[18.22466660 -17.90590477]
[10.37291145 -30.68674850]
[2.52115560 -43.46759033]
[-5.33059978 -56.24843216]
[-18.99655342 -50.01775742]
[-33.32461548 -45.51373291]
[-48.09757996 -42.80464935]
[-63.09149170 -41.93156815]
[-78.07904053 -42.90772629]
[-92.83303070 -45.71832657]
[-107.12978363 -50.32075882]
[-120.75257874 -56.64525604]
[-133.49487305 -64.59593964]
[-145.16352844 -74.05226898]
[-155.58161926 -84.87090302]
[-164.59124756 -96.88782501]
[-172.05578613 -109.92086792]
[-177.86210632 -123.77245331]
[-181.92218018 -138.23258972]
[-184.17443848 -153.08206177]
[-184.58476257 -168.09576416]
[-183.14692688 -183.04608154]
[-179.88270569 -197.70639038]
[-174.84161377 -211.85443115]
[-168.10006714 -225.27572632]
[-159.76025391 -237.76679993]
[-149.94860840 -249.13830566]
[-138.81387329 -259.21786499]
[-126.52484131 -267.85263062]
[-113.26782227 -274.91177368]
[-99.24378967 -280.28820801]
[-84.66533661 -283.90045166]
[-69.75347900 -285.69375610]
[-54.73426056 -285.64093018]
[-39.83538055 -283.74276733]
[-25.28269958 -280.02804565]
[-11.29683399 -274.55310059]
[1.91019678 -267.40090942]
[14.13817596 -258.67987061]
[25.20173073 -248.52224731]
[34.93313980 -237.08200073]
[43.18487930 -224.53256226]
[49.83185577 -211.06417847]
[54.77329636 -196.88102722]
[57.93429947 -182.19813538]
[59.26693726 -167.23805237]
[58.75101089 -152.22761536]
[56.39434052 -137.39434814]
[52.23265076 -122.96313477]
[46.32903671 -109.15274048]
[38.77299500 -96.17253113]
[29.67906952 -84.21928406]
[19.18512344 -73.47420502]
[7.45024252 -64.10018921]
[15.30199814 -51.31934738]
[23.15375328 -38.53850174]
[31.00550842 -25.75765991]
[39.14072418 -13.15534878]
[47.55534363 -0.73785335]
[55.96996307 11.67964172]
[64.38458252 24.09713745]
[69.73548889 10.08400917]
[83.98052216 5.38518000]
[96.61877441 13.46445179]
[98.33379364 28.36608696]
[87.86132812 39.10515213]
[72.92272186 37.76605225]
[80.39046478 50.77500534]
[87.85820770 63.78395462]
[102.62774658 61.89330673]
[116.99797058 65.79336548]
[128.78518677 74.89146423]
[136.19818115 87.80506897]
[138.11050415 102.57182312]
[134.23155212 116.94775391]
[125.15074921 128.74830627]
[132.61848450 141.75724792]
[140.08622742 154.76620483]
[147.55397034 167.77516174]
[155.02171326 180.78411865]
[162.00810242 186.66868591]
[162.50215149 194.04281616]
[169.77537537 207.16149902]
[177.04859924 220.28019714]
[182.50994873 224.00650024]
[184.90940857 229.15815735]
[184.33644104 233.89953613]
[191.21585083 247.22897339]
[198.09527588 260.55841064]
[204.97468567 273.88781738]
[211.85409546 287.21725464]
[225.62275696 281.25094604]
[239.76278687 276.22775269]
[254.20967102 272.17062378]
[268.89749146 269.09805298]
[283.75924683 267.02407837]
[298.72711182 265.95816040]
[313.73278809 265.90515137]
[328.70779419 266.86526489]
[343.58383179 268.83416748]
[358.29299927 271.80288696]
[372.76818848 275.75781250]
[386.94338989 280.68096924]
[400.75384521 286.54983521]
[414.13662720 293.33767700]
[427.03060913 301.01348877]
[439.37695312 309.54226685]
[451.11938477 318.88510132]
[462.20428467 328.99932861]
[472.58108521 339.83883667]
[482.20245361 351.35415649]
[491.02444458 363.49273682]
[499.00683594 376.19921875]
[506.11322021 389.41558838]
[512.31115723 403.08154297]
[517.57232666 417.13476562]
[521.87280273 431.51107788]
[525.19293213 446.14495850]
[527.51751709 460.96957397]
[528.83599854 475.91729736]
[529.14233398 490.91992188]
[528.43518066 505.90902710]
[526.71771240 520.81616211]
[523.99774170 535.57336426]
[520.28771973 550.11328125]
[515.60461426 564.36956787]
[509.96975708 578.27716064]
[503.40884399 591.77258301]
[495.95181274 604.79431152]
[487.63269043 617.28295898]
[478.48944092 629.18139648]
[468.56378174 640.43548584]
[457.90100098 650.99383545]
[446.54977417 660.80822754]
[434.56185913 669.83392334]
[421.99197388 678.02966309]
[408.89746094 685.35821533]
[395.33807373 691.78594971]
[381.37570190 697.28363037]
[367.07403564 701.82623291]
[352.49829102 705.39294434]
[337.71505737 707.96746826]
[322.79171753 709.53814697]
[307.79638672 710.09771729]
[292.79748535 709.64367676]
[277.86346436 708.17816162]
[263.06243896 705.70776367]
[248.46197510 702.24377441]
[234.12867737 697.80200195]
[220.12792969 692.40270996]
[206.52363586 686.07055664]
[193.37785339 678.83447266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 149]
[31 148]
[32 147]
[33 146]
[34 145]
[35 142]
[36 141]
[37 140]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
[49 127]
[50 126]
[51 125]
[52 119]
[53 118]
[54 117]
[55 116]
[59 115]
[60 114]
[61 113]
[62 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
