%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[99.03820801 297.23214722]
[99.63274384 312.25189209]
[97.87023926 327.17971802]
[93.79408264 341.64801025]
[87.50466156 355.30047607]
[79.15685272 367.80090332]
[68.95623016 378.84146118]
[57.15399170 388.15026855]
[44.04078674 395.49807739]
[29.93953133 400.70394897]
[15.19748306 403.63967896]
[0.17768048 404.23297119]
[-14.75000191 402.46923828]
[-29.21795654 398.39187622]
[-42.86989594 392.10131836]
[-55.36963272 383.75250244]
[-66.40933990 373.55096436]
[-75.71717072 361.74795532]
[-83.06389618 348.63415527]
[-88.26860046 334.53244019]
[-91.20311737 319.79016113]
[-91.79518127 304.77032471]
[-90.03021240 289.84277344]
[-85.95166779 275.37515259]
[-79.65998840 261.72372437]
[-71.31011963 249.22468567]
[-61.10767365 238.18582153]
[-49.30390549 228.87896729]
[-36.18948364 221.53332520]
[-22.08736992 216.32978821]
[-7.34483862 213.39648438]
[7.67506218 212.80566406]
[22.60245323 214.57186890]
[37.06973648 218.65159607]
[43.34709549 205.02828979]
[49.62445831 191.40496826]
[55.90181732 177.78164673]
[62.17917633 164.15834045]
[68.45653534 150.53501892]
[66.75560760 135.73785400]
[79.55802917 126.44223785]
[70.11917877 114.97338867]
[66.58193970 100.54722595]
[69.64494324 86.01297760]
[78.70323181 74.24124146]
[91.96773529 67.55699158]
[106.81865692 67.28040314]
[113.09601593 53.65708923]
[119.37337494 40.03377151]
[125.65074158 26.41045570]
[131.92810059 12.78713894]
[130.67616272 -2.98445654]
[143.02958679 -11.30564499]
[129.71063232 -18.21123695]
[116.72737885 -25.72901917]
[104.10796356 -33.84271240]
[91.87969971 -42.53474426]
[80.06907654 -51.78628540]
[68.70167542 -61.57730103]
[57.80211258 -71.88658905]
[47.39399719 -82.69181824]
[37.49987411 -93.96958923]
[28.14116478 -105.69547272]
[19.33814049 -117.84407806]
[11.10986900 -130.38908386]
[3.47416806 -143.30334473]
[-3.55242324 -156.55886841]
[-9.95468807 -170.12693787]
[-15.71875858 -183.97819519]
[-20.83215332 -198.08262634]
[-25.28379631 -212.40969849]
[-29.06404686 -226.92835999]
[-32.16471863 -241.60717773]
[-34.57909393 -256.41436768]
[-36.30194473 -271.31784058]
[-37.32954407 -286.28530884]
[-37.65965652 -301.28442383]
[-37.29157639 -316.28262329]
[-36.22609711 -331.24746704]
[-34.46552658 -346.14654541]
[-32.01367569 -360.94757080]
[-28.87586021 -375.61846924]
[-25.05887032 -390.12753296]
[-20.57097626 -404.44326782]
[-15.42189598 -418.53472900]
[-9.62278271 -432.37133789]
[-3.18619418 -445.92318726]
[3.87392783 -459.16085815]
[11.54229355 -472.05575562]
[19.80229378 -484.57989502]
[28.63603973 -496.70617676]
[38.02439880 -508.40832520]
[47.94704056 -519.66101074]
[58.38247299 -530.43988037]
[69.30809784 -540.72155762]
[80.70024109 -550.48376465]
[92.53424072 -559.70538330]
[104.78446960 -568.36639404]
[117.42439270 -576.44812012]
[130.42662048 -583.93304443]
[143.76301575 -590.80487061]
[157.40469360 -597.04882812]
[171.32208252 -602.65130615]
[185.48507690 -607.60021973]
[199.86296082 -611.88482666]
[214.42463684 -615.49584961]
[229.13854980 -618.42553711]
[243.97282410 -620.66741943]
[258.89532471 -622.21667480]
[273.87377930 -623.07006836]
[288.87570190 -623.22558594]
[303.86862183 -622.68298340]
[318.82003784 -621.44342041]
[333.69760132 -619.50958252]
[348.46908569 -616.88568115]
[363.10250854 -613.57733154]
[377.56616211 -609.59173584]
[391.82870483 -604.93756104]
[405.85928345 -599.62481689]
[419.62747192 -593.66510010]
[433.10348511 -587.07122803]
[446.25811768 -579.85754395]
[459.06286621 -572.03961182]
[471.49005127 -563.63446045]
[483.51272583 -554.66015625]
[495.10482788 -545.13629150]
[506.24127197 -535.08337402]
[516.89794922 -524.52319336]
[527.05175781 -513.47863770]
[536.68072510 -501.97366333]
[545.76403809 -490.03314209]
[554.28192139 -477.68295288]
[562.21600342 -464.94985962]
[569.54907227 -451.86138916]
[576.26525879 -438.44592285]
[582.35003662 -424.73251343]
[587.79016113 -410.75085449]
[592.57391357 -396.53125000]
[596.69091797 -382.10446167]
[600.13226318 -367.50177002]
[602.89044189 -352.75476074]
[604.95959473 -337.89538574]
[606.33514404 -322.95587158]
[607.01409912 -307.96850586]
[606.99505615 -292.96578979]
[606.27801514 -277.98019409]
[604.86450195 -263.04421997]
[602.75769043 -248.19015503]
[599.96203613 -233.45021057]
[596.48364258 -218.85627747]
[592.33001709 -204.44000244]
[587.51013184 -190.23257446]
[582.03448486 -176.26478577]
[575.91491699 -162.56687927]
[569.16473389 -149.16851807]
[561.79840088 -136.09872437]
[553.83203125 -123.38580322]
[545.28277588 -111.05728149]
[536.16918945 -99.13987732]
[526.51104736 -87.65938568]
[516.32922363 -76.64067078]
[505.64575195 -66.10761261]
[494.48379517 -56.08300400]
[482.86752319 -46.58856964]
[470.82211304 -37.64486694]
[458.37362671 -29.27126503]
[445.54904175 -21.48590279]
[432.37612915 -14.30563831]
[418.88342285 -7.74602461]
[405.10012817 -1.82126772]
[391.05612183 3.45580077]
[376.78179932 8.07375145]
[362.30807495 12.02258301]
[347.66632080 15.29374313]
[332.88821411 17.88014793]
[318.00576782 19.77619362]
[303.05123901 20.97777748]
[288.05700684 21.48229408]
[273.05551147 21.28865051]
[258.07931519 20.39726830]
[243.16076660 18.81007767]
[228.33222961 16.53051376]
[213.62582397 13.56351662]
[199.07336426 9.91551018]
[184.70639038 5.59439611]
[170.55603027 0.60953259]
[156.65290833 -5.02828407]
[158.35383606 9.76888084]
[145.55142212 19.06450081]
[139.27404785 32.68781662]
[132.99668884 46.31113052]
[126.71932983 59.93444824]
[120.44197083 73.55776215]
[129.88082886 85.02661133]
[133.41806030 99.45277405]
[130.35505676 113.98702240]
[121.29676819 125.75875854]
[108.03226471 132.44300842]
[93.18134308 132.71958923]
[94.43328094 148.49119568]
[82.07985687 156.81237793]
[75.80249786 170.43569946]
[69.52513123 184.05900574]
[63.24777222 197.68232727]
[56.97041321 211.30564880]
[50.69305038 224.92895508]
[63.19416428 233.27574158]
[74.23555756 243.47544861]
[83.54533386 255.27691650]
[90.89421844 268.38952637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 206]
[35 205]
[36 204]
[37 203]
[38 202]
[39 201]
[41 199]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[53 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
