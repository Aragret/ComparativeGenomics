%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[64.37362671 591.70025635]
[56.41936874 604.50622559]
[45.63108063 615.03601074]
[32.63598251 622.67742920]
[18.18959427 626.98614502]
[3.13180685 627.71173096]
[-11.66193867 624.81201172]
[-25.33155251 618.45550537]
[-37.08230209 609.01177979]
[-46.23101425 597.02996826]
[-52.24579239 583.20660400]
[-54.77695084 568.34533691]
[-53.67732620 553.31024170]
[-49.01084900 538.97540283]
[-41.04882812 526.17425537]
[-30.25415802 515.65100098]
[-17.25443077 508.01748657]
[-2.80543184 503.71749878]
[12.25279236 503.00103760]
[15.13806534 488.28115845]
[18.02333832 473.56124878]
[20.90861130 458.84136963]
[23.79388237 444.12145996]
[26.67915535 429.40158081]
[12.98319530 423.34991455]
[0.97161615 414.39782715]
[-8.75124836 402.99163818]
[-15.69532585 389.70138550]
[-19.50950241 375.19204712]
[-19.99937630 360.19055176]
[-17.13716507 345.44912720]
[-11.06326103 331.70770264]
[-2.07934284 319.65673828]
[9.36660099 309.90255737]
[22.70261383 302.93682861]
[37.26135254 299.11169434]
[52.31346893 298.62216187]
[55.19874191 283.90225220]
[58.08401489 269.18237305]
[60.96928787 254.46247864]
[63.85456085 239.74258423]
[66.73983002 225.02268982]
[69.62510681 210.30279541]
[72.51037598 195.58290100]
[75.39565277 180.86302185]
[68.90961456 170.65234375]
[71.19290924 158.36534119]
[81.55773926 150.68855286]
[84.66184998 136.01324463]
[87.76596069 121.33794403]
[90.87007141 106.66264343]
[78.87225342 115.66555023]
[63.87625885 116.01222992]
[51.47522354 107.57336426]
[46.29442978 93.49645996]
[50.26618195 79.03183746]
[61.90911484 69.57445526]
[76.88070679 68.65167999]
[89.59691620 76.60768127]
[95.31501007 90.47623444]
[92.42907715 74.92046356]
[103.84976959 65.35924530]
[108.67576599 51.15678787]
[113.50177002 36.95433044]
[118.32776642 22.75187492]
[123.15376282 8.54941940]
[122.24258423 2.00103903]
[124.44467163 -3.23802805]
[128.34066772 -6.00033045]
[133.58738708 -20.05280113]
[138.83410645 -34.10527420]
[144.08081055 -48.15774536]
[149.32752991 -62.21021652]
[146.90603638 -77.84500885]
[158.60633850 -87.06195831]
[144.96810913 -93.32303619]
[131.82330322 -100.56295013]
[119.24203491 -108.74306488]
[107.29144287 -117.81972504]
[96.03530121 -127.74452209]
[85.53364563 -138.46449280]
[75.84252167 -149.92243958]
[67.01362610 -162.05722046]
[59.09407806 -174.80410767]
[52.12612152 -188.09507751]
[46.14694214 -201.85923767]
[41.18843079 -216.02311707]
[37.27705383 -230.51116943]
[34.43367767 -245.24607849]
[32.67346954 -260.14923096]
[32.00582504 -275.14111328]
[32.43430328 -290.14175415]
[33.95661926 -305.07107544]
[36.56465149 -319.84945679]
[40.24448395 -334.39804077]
[44.97648621 -348.63919067]
[50.73540497 -362.49694824]
[57.49051666 -375.89733887]
[65.20578003 -388.76892090]
[73.84003448 -401.04296875]
[83.34719849 -412.65399170]
[93.67655945 -423.54006958]
[104.77300262 -433.64309692]
[116.57732391 -442.90921021]
[129.02653503 -451.28890991]
[142.05421448 -458.73751831]
[155.59086609 -465.21530151]
[169.56423950 -470.68768311]
[183.89981079 -475.12548828]
[198.52107239 -478.50500488]
[213.35002136 -480.80819702]
[228.30752563 -482.02279663]
[243.31379700 -482.14236450]
[258.28875732 -481.16616821]
[273.15252686 -479.09951782]
[287.82577515 -475.95333862]
[302.23022461 -471.74450684]
[316.28900146 -466.49542236]
[329.92712402 -460.23413086]
[343.07180786 -452.99398804]
[355.65295410 -444.81369019]
[367.60339355 -435.73681641]
[378.85937500 -425.81182861]
[389.36083984 -415.09170532]
[399.05178833 -403.63360596]
[407.88046265 -391.49865723]
[415.79980469 -378.75164795]
[422.76754761 -365.46054077]
[428.74652100 -351.69631958]
[433.70477295 -337.53234863]
[437.61593628 -323.04421997]
[440.45907593 -308.30926514]
[442.21902466 -293.40609741]
[442.88641357 -278.41418457]
[442.45770264 -263.41357422]
[440.93515015 -248.48426819]
[438.32687378 -233.70593262]
[434.64678955 -219.15740967]
[429.91455078 -204.91632080]
[424.15539551 -191.05867004]
[417.40008545 -177.65837097]
[409.68460083 -164.78694153]
[401.05014038 -152.51303101]
[391.54278564 -140.90216064]
[381.21325684 -130.01625061]
[370.11663818 -119.91339111]
[358.31216431 -110.64749146]
[345.86282349 -102.26799011]
[332.83502197 -94.81958771]
[319.29824829 -88.34203339]
[305.32479858 -82.86988068]
[290.98913574 -78.43232727]
[276.36782837 -75.05305481]
[261.53884888 -72.75009155]
[246.58131409 -71.53572083]
[231.57504272 -71.41642761]
[216.60009766 -72.39284515]
[201.73637390 -74.45977020]
[187.06318665 -77.60616302]
[172.65881348 -81.81523895]
[175.45559692 -67.18556976]
[163.38000488 -56.96349716]
[158.13328552 -42.91102600]
[152.88656616 -28.85855484]
[147.63984680 -14.80608368]
[142.39312744 -0.75361210]
[137.35621643 13.37541771]
[132.53022766 27.57787323]
[127.70422363 41.78032684]
[122.87822723 55.98278427]
[118.05223083 70.18524170]
[121.28335571 84.72515106]
[109.51747131 95.30223083]
[105.54537201 109.76675415]
[102.44126129 124.44205475]
[99.33715057 139.11735535]
[96.23303986 153.79266357]
[102.34546661 171.16275024]
[90.11553955 183.74829102]
[87.23027039 198.46818542]
[84.34499359 213.18807983]
[81.45972443 227.90795898]
[78.57445526 242.62785339]
[75.68917847 257.34774780]
[72.80390930 272.06762695]
[69.91863251 286.78753662]
[67.03336334 301.50741577]
[80.78683472 307.64321899]
[92.82419586 316.68148804]
[102.54366302 328.16638184]
[109.46024323 341.51980591]
[113.22990417 356.07061768]
[113.66669464 371.08822632]
[110.75193787 385.81936646]
[104.63495636 399.52584839]
[95.62548065 411.52157593]
[84.17792511 421.20684814]
[70.86848450 428.09841919]
[56.36614609 431.85348511]
[41.39904785 432.28686523]
[38.51377487 447.00674438]
[35.62850189 461.72662354]
[32.74322891 476.44653320]
[29.85795593 491.16641235]
[26.97268295 505.88632202]
[40.64614868 512.23449707]
[52.40262222 521.67108154]
[61.55859756 533.64739990]
[67.58175659 547.46710205]
[70.12192535 562.32684326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[48 177]
[49 176]
[50 175]
[51 174]
[60 173]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[75 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
