%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[114.06935120 357.47921753]
[110.94743347 342.79971313]
[108.98689270 327.92053223]
[108.19980621 312.93338013]
[108.59103394 297.93066406]
[110.15815735 283.00491333]
[112.89152527 268.24813843]
[116.77427673 253.75129700]
[121.78247070 239.60379028]
[127.88523865 225.89282227]
[135.04495239 212.70295715]
[143.21745300 200.11549377]
[152.35238647 188.20805359]
[162.39340210 177.05403137]
[152.06672668 166.17469788]
[141.74006653 155.29536438]
[131.41339111 144.41603088]
[117.03959656 140.51177979]
[113.15071869 125.17597198]
[106.26589966 122.48877716]
[102.75278473 114.05693817]
[89.46533203 109.70547485]
[86.21533966 96.10660553]
[76.05178833 85.07472992]
[65.88824463 74.04285431]
[55.72469711 63.01097488]
[38.02530289 57.93033981]
[34.85189438 40.67066193]
[24.52522659 29.79132843]
[14.19855690 18.91199493]
[-0.91387504 14.22958374]
[-4.06411791 -0.32806832]
[-14.39078617 -11.20740223]
[-24.71745491 -22.08673668]
[-36.27343750 -12.51426506]
[-48.44929504 -3.74377656]
[-61.18946838 4.18471050]
[-74.43582916 11.23501968]
[-88.12793732 17.37498283]
[-102.20331573 22.57658386]
[-116.59774017 26.81608772]
[-131.24554443 30.07415199]
[-146.07986450 32.33591080]
[-161.03305054 33.59104156]
[-176.03684998 33.83382034]
[-191.02281189 33.06314087]
[-205.92254639 31.28251266]
[-220.66809082 28.50006676]
[-235.19215393 24.72849846]
[-249.42845154 19.98501396]
[-263.31204224 14.29125690]
[-276.77957153 7.67320967]
[-289.76959229 0.16106717]
[-302.22283936 -8.21089363]
[-314.08248901 -17.40447426]
[-325.29440308 -27.37772369]
[-335.80743408 -38.08513641]
[-345.57366943 -49.47785950]
[-354.54846191 -61.50391006]
[-362.69091797 -74.10840607]
[-369.96386719 -87.23384857]
[-376.33410645 -100.82034302]
[-381.77261353 -114.80590057]
[-386.25451660 -129.12669373]
[-389.75942993 -143.71740723]
[-392.27130127 -158.51142883]
[-393.77871704 -173.44129944]
[-394.27478027 -188.43885803]
[-393.75720215 -203.43568420]
[-392.22839355 -218.36337280]
[-389.69528198 -233.15379333]
[-386.16946411 -247.73944092]
[-381.66702271 -262.05380249]
[-376.20846558 -276.03155518]
[-369.81872559 -289.60888672]
[-362.52697754 -302.72387695]
[-354.36645508 -315.31671143]
[-345.37442017 -327.32986450]
[-335.59188843 -338.70855713]
[-325.06347656 -349.40087891]
[-313.83724976 -359.35806274]
[-301.96444702 -368.53460693]
[-289.49920654 -376.88870239]
[-276.49844360 -384.38220215]
[-263.02142334 -390.98092651]
[-249.12968445 -396.65478516]
[-234.88659668 -401.37783813]
[-220.35714722 -405.12857056]
[-205.60762024 -407.88986206]
[-190.70535278 -409.64913940]
[-175.71829224 -410.39831543]
[-160.71485901 -410.13400269]
[-145.76350403 -408.85745239]
[-130.93241882 -406.57440186]
[-116.28931427 -403.29534912]
[-101.90097809 -399.03518677]
[-87.83307648 -393.81341553]
[-74.14978790 -387.65380859]
[-60.91355515 -380.58453369]
[-48.18476486 -372.63775635]
[-36.02149963 -363.84982300]
[-24.47925568 -354.26080322]
[-13.61070347 -343.91442871]
[-3.46542978 -332.85791016]
[5.91027308 -321.14172363]
[14.47362614 -308.81930542]
[22.18555641 -295.94689941]
[29.01087379 -282.58319092]
[34.91843796 -268.78924561]
[39.88129425 -254.62791443]
[43.87679672 -240.16386414]
[46.88671494 -225.46305847]
[48.89731598 -210.59260559]
[49.89942551 -195.62034607]
[49.88846970 -180.61459351]
[48.86450195 -165.64379883]
[46.83219147 -150.77629089]
[43.80080795 -136.07991028]
[39.78419113 -121.62170410]
[34.80066299 -107.46765137]
[28.87296295 -93.68231964]
[22.02813911 -80.32862091]
[14.29742241 -67.46747589]
[5.71608639 -55.15757751]
[-3.67671394 -43.45508957]
[-13.83812046 -32.41340637]
[-3.51145196 -21.53407097]
[6.81521654 -10.65473652]
[21.18901634 -6.75048971]
[25.07789230 8.58532524]
[35.40456009 19.46466064]
[45.73122787 30.34399414]
[57.81144333 30.97249603]
[66.50379944 39.95173264]
[66.75657654 52.84742737]
[76.92012024 63.87930679]
[87.08367157 74.91117859]
[97.24721527 85.94306183]
[110.53466797 90.29452515]
[113.78466034 103.89339447]
[124.03005219 114.84930420]
[139.14248657 119.53171539]
[142.29272461 134.08937073]
[152.61940002 144.96870422]
[162.94606018 155.84803772]
[173.27273560 166.72737122]
[184.93463135 157.28097534]
[197.30172729 148.77868652]
[210.29779053 141.27293396]
[223.84269714 134.80996704]
[237.85292053 129.42967224]
[252.24209595 125.16519165]
[266.92150879 122.04282379]
[281.80062866 120.08182526]
[296.78775024 119.29428101]
[311.79046631 119.68504333]
[326.71627808 121.25171661]
[341.47314453 123.98462677]
[355.97009277 127.86693573]
[370.11776733 132.87469482]
[383.82891846 138.97705078]
[397.01898193 146.13635254]
[409.60668945 154.30847168]
[421.51443481 163.44303894]
[432.66876221 173.48370361]
[443.00091553 184.36859131]
[452.44717407 196.03057861]
[460.94934082 208.39778137]
[468.45495605 221.39392090]
[474.91778564 234.93887329]
[480.29794312 248.94915771]
[484.56228638 263.33837891]
[487.68447876 278.01782227]
[489.64532471 292.89697266]
[490.43273926 307.88409424]
[490.04180908 322.88681030]
[488.47497559 337.81259155]
[485.74191284 352.56942749]
[481.85946655 367.06634521]
[476.85156250 381.21395874]
[470.74908447 394.92504883]
[463.58963013 408.11508179]
[455.41738892 420.70269775]
[446.28271484 432.61032104]
[436.24191284 443.76455688]
[425.35693359 454.09658813]
[413.69482422 463.54275513]
[401.32754517 472.04476929]
[388.33132935 479.55026245]
[374.78631592 486.01293945]
[360.77597046 491.39297485]
[346.38671875 495.65716553]
[331.70724487 498.77920532]
[316.82806396 500.73992920]
[301.84094238 501.52716064]
[286.83822632 501.13607788]
[271.91244507 499.56909180]
[257.15563965 496.83587646]
[242.65876770 492.95327759]
[228.51119995 487.94522095]
[214.80018616 481.84262085]
[201.61024475 474.68304443]
[189.02268982 466.51065063]
[177.11515808 457.37585449]
[165.96104431 447.33496094]
[155.62910461 436.44985962]
[146.18307495 424.78765869]
[137.68116760 412.42031860]
[130.17581177 399.42401123]
[123.71326447 385.87890625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 146]
[15 145]
[16 144]
[17 143]
[19 141]
[21 140]
[23 138]
[24 137]
[25 136]
[26 135]
[28 132]
[29 131]
[30 130]
[32 128]
[33 127]
[34 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
