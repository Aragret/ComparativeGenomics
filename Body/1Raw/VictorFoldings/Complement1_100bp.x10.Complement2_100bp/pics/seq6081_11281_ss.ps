%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[109.36681366 518.39184570]
[111.41008759 503.44940186]
[117.10595703 489.48489380]
[126.09637451 477.37609863]
[137.81619263 467.88415527]
[151.52870178 461.60580444]
[148.86291504 446.84457397]
[136.51841736 438.58935547]
[133.60462952 423.65734863]
[142.34718323 410.76528931]
[139.68139648 396.00405884]
[137.01559448 381.24282837]
[134.34979248 366.48162842]
[124.59439850 359.32910156]
[122.25267792 347.05310059]
[129.11573792 336.13241577]
[126.67001343 321.33316040]
[124.22428894 306.53387451]
[114.51536560 295.23846436]
[119.89902496 280.36141968]
[117.45330048 265.56216431]
[106.03157043 259.59777832]
[100.04114532 247.97036743]
[101.86823273 234.82228088]
[111.06772614 224.98439026]
[108.84260559 210.15034485]
[106.61749268 195.31629944]
[104.39237213 180.48226929]
[102.16725159 165.64822388]
[92.62757874 154.20951843]
[98.23214722 139.41426086]
[96.00702667 124.58022308]
[93.78190613 109.74617767]
[87.25522614 123.25182343]
[75.25489807 132.25138855]
[60.46183014 134.73434448]
[46.18082809 130.14599609]
[35.60230255 119.51139069]
[31.08952904 105.20632935]
[33.65066910 90.42658997]
[42.71355438 78.47401428]
[56.25352097 72.01883698]
[71.24569702 72.50315857]
[84.34080505 79.81877899]
[92.61335754 92.33139038]
[92.83668518 77.33305359]
[93.06001282 62.33471680]
[93.28334045 47.33638000]
[82.55574799 36.04228210]
[82.99589539 20.83501816]
[93.82919312 10.67750263]
[94.05252075 -4.32083464]
[94.27584839 -19.31917191]
[94.49917603 -34.31750870]
[83.77159119 -45.61160278]
[84.21173096 -60.81887054]
[95.04503632 -70.97638702]
[95.26836395 -85.97472382]
[82.19049835 -93.90673065]
[74.88703918 -107.23175049]
[75.23159790 -122.32305908]
[83.03153229 -135.12997437]
[96.10653687 -142.26509094]
[96.32986450 -157.26342773]
[96.55319214 -172.26176453]
[93.55189514 -180.88905334]
[96.89315796 -187.48130798]
[97.33975983 -202.47465515]
[97.78636932 -217.46800232]
[98.23297119 -232.46134949]
[98.67958069 -247.45469666]
[99.12618256 -262.44805908]
[99.57279205 -277.44140625]
[89.91053772 -265.96792603]
[75.61088562 -261.43801880]
[61.10474396 -265.25534058]
[50.88699722 -276.23703003]
[48.12372589 -290.98031616]
[53.67115784 -304.91680908]
[65.81035614 -313.72814941]
[80.77986908 -314.68405151]
[93.94122314 -307.48828125]
[101.21628571 -294.37033081]
[103.66201782 -309.16961670]
[106.10774231 -323.96887207]
[104.41943359 -332.94592285]
[108.70162964 -338.96960449]
[111.36742401 -353.73080444]
[97.05924988 -358.30587769]
[83.47067261 -364.70944214]
[70.83421326 -372.83190918]
[59.36609650 -382.53436279]
[49.26255798 -393.65072632]
[40.69647980 -405.99078369]
[33.81444550 -419.34341431]
[28.73420715 -433.48013306]
[25.54270172 -448.15899658]
[24.29453468 -463.12887573]
[25.01106644 -478.13357544]
[27.68003654 -492.91641235]
[32.25577164 -507.22436523]
[38.65998077 -520.81262207]
[46.78307724 -533.44873047]
[56.48606110 -544.91638184]
[67.60290527 -555.01934814]
[79.94338226 -563.58483887]
[93.29633331 -570.46624756]
[107.43327332 -575.54583740]
[122.11229706 -578.73663330]
[137.08222961 -579.98406982]
[152.08691406 -579.26684570]
[166.86959839 -576.59716797]
[181.17733765 -572.02075195]
[194.76530457 -565.61590576]
[207.40100098 -557.49218750]
[218.86819458 -547.78863525]
[228.97067261 -536.67132568]
[237.53556824 -524.33044434]
[244.41633606 -510.97717285]
[249.49522400 -496.83999634]
[252.68533325 -482.16082764]
[253.93208313 -467.19082642]
[253.21412659 -452.18615723]
[250.54374695 -437.40359497]
[245.96664429 -423.09609985]
[239.56114197 -409.50842285]
[231.43684387 -396.87313843]
[221.73277283 -385.40640259]
[210.61495972 -375.30444336]
[198.27366638 -366.74014282]
[184.92005920 -359.85998535]
[170.78263855 -354.78176880]
[156.10330200 -351.59237671]
[141.13325500 -350.34634399]
[126.12863922 -351.06500244]
[123.46284485 -336.30380249]
[120.90701294 -321.52313232]
[118.46128845 -306.72387695]
[116.01555634 -291.92459106]
[114.56613922 -276.99478149]
[114.11953735 -262.00143433]
[113.67292786 -247.00810242]
[113.22632599 -232.01473999]
[112.77971649 -217.02139282]
[112.33310699 -202.02804565]
[111.88650513 -187.03469849]
[111.55152893 -172.03843689]
[111.32820129 -157.04010010]
[111.10487366 -142.04176331]
[123.96163940 -134.52052307]
[131.37681580 -121.48705292]
[131.27189636 -106.39217377]
[123.57492828 -93.29050446]
[110.26670074 -85.75139618]
[110.04337311 -70.75305939]
[120.56944275 -60.27749634]
[120.55661774 -45.06386948]
[109.49751282 -34.09418106]
[109.27418518 -19.09584427]
[109.05085754 -4.09750700]
[108.82752991 10.90083027]
[119.35360718 21.37639046]
[119.34077454 36.59001923]
[108.28167725 47.55970764]
[108.05834961 62.55804443]
[107.83502197 77.55638123]
[107.61169434 92.55471802]
[108.61595154 107.52106476]
[110.84107208 122.35510254]
[113.06618500 137.18914795]
[122.76501465 149.68887329]
[117.00129700 163.42309570]
[119.22641754 178.25714111]
[121.45153046 193.09118652]
[123.67665100 207.92523193]
[125.90176392 222.75927734]
[140.15760803 232.89784241]
[142.62168884 249.87556458]
[132.25256348 263.11642456]
[134.69830322 277.91567993]
[144.58215332 290.26962280]
[139.02355957 304.08813477]
[141.46928406 318.88742065]
[143.91500854 333.68667603]
[155.92619324 347.64422607]
[149.11100769 363.81582642]
[151.77680969 378.57705688]
[154.44261169 393.33825684]
[157.10839844 408.09948730]
[169.80810547 417.11920166]
[172.30131531 432.12713623]
[163.62413025 444.17880249]
[166.28991699 458.94000244]
[181.33229065 460.02539062]
[195.63188171 464.81835938]
[208.28982544 473.01757812]
[218.51042175 484.10766602]
[225.65119934 497.39151001]
[229.26327515 512.03405762]
[229.11959839 527.11480713]
[225.22921753 541.68585205]
[217.83665466 554.83123779]
[207.40663147 565.72460938]
[194.59477234 573.68121338]
[180.20646667 578.20086670]
[165.14614868 578.99945068]
[150.36053467 576.02685547]
[136.77906799 569.46978760]
[125.25547791 559.74060059]
[116.51416016 547.45074463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[10 189]
[11 188]
[12 187]
[13 186]
[16 184]
[17 183]
[18 182]
[20 180]
[21 179]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[31 170]
[32 169]
[33 168]
[45 167]
[46 166]
[47 165]
[48 164]
[51 161]
[52 160]
[53 159]
[54 158]
[57 155]
[58 154]
[63 149]
[64 148]
[65 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[83 139]
[84 138]
[85 137]
[87 136]
[88 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
