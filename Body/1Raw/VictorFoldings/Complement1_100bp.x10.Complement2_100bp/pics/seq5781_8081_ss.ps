%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[87.96624756 705.34851074]
[73.28771973 708.50207520]
[58.36274338 710.12963867]
[43.34951782 710.21392822]
[28.40719604 708.75408936]
[13.69417763 705.76562500]
[-0.63357347 701.28015137]
[-14.42417431 695.34521484]
[-27.53143692 688.02374268]
[-39.81641769 679.39337158]
[-51.14888763 669.54559326]
[-61.40871811 658.58477783]
[-70.48715210 646.62707520]
[-78.28794098 633.79931641]
[-84.72840118 620.23742676]
[-89.74026489 606.08520508]
[-93.27039337 591.49267578]
[-95.28137207 576.61450195]
[-95.75188446 561.60839844]
[-94.67693329 546.63348389]
[-92.06791687 531.84844971]
[-87.95250702 517.41003418]
[-82.37430573 503.47134399]
[-75.39246368 490.18005371]
[-67.08098602 477.67712402]
[-57.52797318 466.09506226]
[-46.83470154 455.55667114]
[-35.11452103 446.17364502]
[-22.49167633 438.04544067]
[-9.09997082 431.25820923]
[4.91863298 425.88394165]
[19.41552925 421.97958374]
[34.23704529 419.58651733]
[49.22606277 418.73013306]
[64.22368622 419.41949463]
[66.44880676 404.58544922]
[68.67392731 389.75140381]
[61.38028336 373.78991699]
[72.97056580 359.48092651]
[74.97457886 344.61538696]
[76.97859192 329.74987793]
[78.31682587 314.80969238]
[78.98661041 299.82464600]
[79.65640259 284.83959961]
[76.81470490 278.01712036]
[80.44935608 269.63693237]
[81.34217072 254.66354370]
[82.23498535 239.69012451]
[74.44293976 230.43753052]
[75.06421661 217.95562744]
[84.31049347 208.96290588]
[85.42614746 194.00445557]
[86.54179382 179.04600525]
[87.65744019 164.08755493]
[80.88818359 150.82005310]
[89.63046265 137.63357544]
[90.74610901 122.67512512]
[91.86176300 107.71667480]
[80.55312347 117.57135773]
[65.55861664 117.97716522]
[53.73352051 108.74856567]
[50.48410797 94.10475159]
[57.29597473 80.74067688]
[71.05481720 74.76621246]
[85.47028351 78.91281128]
[93.95228577 91.28649139]
[96.61808777 76.52527618]
[99.28388214 61.76405716]
[92.58416748 50.74241257]
[95.10840607 38.50264359]
[104.96921539 31.49614334]
[107.85448456 16.77625084]
[110.73975372 2.05636001]
[113.62503052 -12.66353130]
[116.51029968 -27.38342285]
[114.95773315 -31.43848228]
[114.79288483 -35.38022614]
[115.80972290 -38.78631592]
[117.68622589 -41.34470367]
[120.03039551 -42.88191223]
[123.78669739 -57.40396881]
[122.90601349 -66.49584961]
[127.70853424 -72.11345673]
[131.68063354 -86.57798004]
[135.65272522 -101.04250336]
[139.62481689 -115.50703430]
[143.59692383 -129.97155762]
[147.56901550 -144.43608093]
[151.10868835 -159.01245117]
[154.21279907 -173.68775940]
[157.31690979 -188.36305237]
[152.60290527 -203.46566772]
[162.80651855 -214.31626892]
[165.91062927 -228.99157715]
[151.91285706 -234.47903442]
[139.00927734 -242.19573975]
[127.55191040 -251.93118286]
[117.85333252 -263.41973877]
[110.17810822 -276.34805298]
[104.73564148 -290.36337280]
[101.67440033 -305.08337402]
[101.07788849 -320.10650635]
[102.96239471 -335.02288818]
[107.27649689 -349.42559814]
[113.90250397 -362.92175293]
[122.65966797 -375.14312744]
[133.30906677 -385.75631714]
[145.56018066 -394.47183228]
[159.07881165 -401.05184937]
[173.49613953 -405.31689453]
[188.41885376 -407.15060425]
[203.43984985 -406.50296021]
[218.14935303 -403.39160156]
[232.14605713 -397.90145874]
[245.04815674 -390.18225098]
[256.50363159 -380.44461060]
[266.20001221 -368.95416260]
[273.87274170 -356.02438354]
[279.31250000 -342.00802612]
[282.37091064 -327.28741455]
[282.96453857 -312.26419067]
[281.07714844 -297.34817505]
[276.76028442 -282.94628906]
[270.13165283 -269.45141602]
[261.37216187 -257.23171997]
[250.72070312 -246.62057495]
[238.46791077 -237.90744019]
[224.94801331 -231.33001709]
[210.52987671 -227.06774902]
[195.60679626 -225.23692322]
[180.58592224 -225.88746643]
[177.48182678 -211.21217346]
[182.41784668 -197.15922546]
[171.99221802 -185.25894165]
[168.88810730 -170.58364868]
[165.78399658 -155.90834045]
[167.19827271 -153.48802185]
[167.73904419 -150.36166382]
[167.13259888 -146.85914612]
[165.22955322 -143.40328979]
[162.03353882 -140.46398926]
[158.06144714 -125.99945831]
[154.08935547 -111.53493500]
[150.11724854 -97.07041168]
[146.14515686 -82.60588837]
[142.17306519 -68.14136505]
[138.30876160 -53.64767075]
[134.55245972 -39.12561035]
[131.23019409 -24.49814987]
[128.34492493 -9.77825832]
[125.45964813 4.94163275]
[122.57437897 19.66152382]
[119.68910217 34.38141632]
[126.26274872 50.65268326]
[114.04509735 64.42985535]
[111.37930298 79.19107056]
[108.71350861 93.95228577]
[106.82021332 108.83232117]
[105.70456696 123.79077911]
[104.58892059 138.74923706]
[111.27837372 153.08665466]
[102.61589813 165.20320129]
[101.50024414 180.16165161]
[100.38459778 195.12010193]
[99.26895142 210.07856750]
[107.64723206 226.47630310]
[97.20838928 240.58294678]
[96.31557465 255.55635071]
[95.42276001 270.52975464]
[94.64144135 285.50939941]
[93.97164917 300.49444580]
[93.30186462 315.47946167]
[105.07351685 306.18280029]
[119.98653412 307.79583740]
[129.49806213 319.39456177]
[128.15946960 334.33471680]
[116.73756409 344.05789185]
[101.77532959 342.99420166]
[91.84412384 331.75387573]
[89.84011078 346.61941528]
[87.83609772 361.48495483]
[95.02127075 372.19644165]
[93.04608154 384.53671265]
[83.50796509 391.97653198]
[81.28285217 406.81057739]
[79.05773163 421.64462280]
[93.59757233 425.38589478]
[107.67565155 430.60238647]
[121.14274597 437.23873901]
[133.85609436 445.22463989]
[145.68092346 454.47546387]
[156.49189758 464.89309692]
[166.17439270 476.36712646]
[174.62577820 488.77590942]
[181.75646973 501.98791504]
[187.49087524 515.86309814]
[191.76821899 530.25433350]
[194.54312134 545.00915527]
[195.78620911 559.97106934]
[195.48428345 574.98150635]
[193.64054871 589.88128662]
[190.27453613 604.51257324]
[185.42195129 618.72021484]
[179.13423157 632.35357666]
[171.47801208 645.26812744]
[162.53446960 657.32702637]
[152.39839172 668.40240479]
[141.17724609 678.37689209]
[128.98997498 687.14471436]
[115.96578217 694.61291504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 186]
[36 185]
[37 184]
[39 181]
[40 180]
[41 179]
[42 172]
[43 171]
[44 170]
[46 169]
[47 168]
[48 167]
[51 165]
[52 164]
[53 163]
[54 162]
[56 160]
[57 159]
[58 158]
[66 157]
[67 156]
[68 155]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[80 148]
[81 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
[88 141]
[89 136]
[90 135]
[91 134]
[93 132]
[94 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
