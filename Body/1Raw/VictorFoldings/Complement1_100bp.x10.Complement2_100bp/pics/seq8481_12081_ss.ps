%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[21.46107101 353.05508423]
[15.72372341 366.92059326]
[9.07307148 380.37191772]
[1.53881931 393.34896851]
[-6.84538412 405.79382324]
[-16.04209328 417.65087891]
[-26.01023102 428.86718750]
[-36.70527649 439.39263916]
[-48.07946777 449.18023682]
[-60.08200073 458.18627930]
[-72.65926361 466.37051392]
[-85.75509644 473.69638062]
[-99.31099701 480.13119507]
[-113.26642609 485.64620972]
[-127.55905151 490.21676636]
[-142.12504578 493.82247925]
[-156.89933777 496.44723511]
[-171.81596375 498.07931519]
[-186.80828857 498.71142578]
[-201.80934143 498.34072876]
[-216.75215149 496.96890259]
[-231.56996155 494.60208130]
[-246.19657898 491.25082397]
[-260.56671143 486.93008423]
[-274.61614990 481.65914917]
[-288.28216553 475.46160889]
[-301.50369263 468.36511230]
[-314.22171021 460.40136719]
[-326.37939453 451.60592651]
[-337.92245483 442.01806641]
[-348.79934692 431.68063354]
[-358.96148682 420.63980103]
[-368.36346436 408.94482422]
[-376.96331787 396.64801025]
[-384.72262573 383.80426025]
[-391.60675049 370.47088623]
[-397.58489990 356.70751953]
[-402.63040161 342.57556152]
[-406.72073364 328.13815308]
[-409.83764648 313.45980835]
[-411.96713257 298.60601807]
[-413.09976196 283.64318848]
[-413.23046875 268.63812256]
[-412.35864258 253.65782166]
[-410.48815918 238.76922607]
[-407.62744141 224.03880310]
[-403.78918457 209.53234863]
[-398.99060059 195.31465149]
[-393.25308228 181.44921875]
[-386.60226440 167.99798584]
[-379.06784058 155.02101135]
[-370.68347168 142.57626343]
[-361.48663330 130.71931458]
[-351.51834106 119.50313568]
[-340.82315063 108.97781372]
[-329.44885254 99.19036102]
[-317.44619751 90.18448639]
[-304.86883545 82.00041199]
[-291.77291870 74.67469788]
[-278.21691895 68.24005127]
[-264.26144409 62.72522354]
[-249.96875000 58.15483856]
[-235.40270996 54.54930496]
[-220.62838745 51.92473602]
[-205.71174622 50.29284668]
[-190.71940613 49.66092682]
[-175.71835327 50.03179932]
[-160.77555847 51.40380859]
[-145.95779419 53.77082443]
[-131.33120728 57.12227631]
[-116.96113586 61.44319916]
[-102.91175842 66.71428680]
[-89.24583435 72.91201019]
[-76.02439117 80.00867462]
[-63.30647659 87.97258759]
[-51.14889526 96.76818085]
[-39.60594940 106.35617828]
[-28.72918892 116.69374847]
[-18.56719589 127.73472595]
[-9.16535282 139.42979431]
[-0.56565434 151.72671509]
[12.27328587 143.97033691]
[25.11222649 136.21394348]
[37.95116806 128.45755005]
[50.79010773 120.70115662]
[63.62904739 112.94476318]
[76.46798706 105.18836975]
[80.56765747 99.03902435]
[89.55632782 97.41371918]
[100.66355896 87.33258057]
[109.44416809 75.17111969]
[118.22476959 63.00966644]
[113.54591370 48.33266068]
[118.35034180 33.88375854]
[130.59671021 25.13788033]
[145.46675110 25.27851677]
[154.24736023 13.11706161]
[163.02796936 0.95560616]
[171.80856323 -11.20584965]
[180.58917236 -23.36730576]
[169.51597595 -33.51131058]
[159.69532776 -44.87226486]
[151.26004028 -57.29653549]
[144.32418823 -70.61608887]
[138.98156738 -84.65079498]
[135.30444336 -99.21085358]
[133.34254456 -114.09935760]
[133.12240601 -129.11494446]
[134.64698792 -144.05456543]
[137.89567566 -158.71617126]
[142.82453918 -172.90147400]
[149.36692810 -186.41862488]
[157.43435669 -199.08485413]
[166.91772461 -210.72883606]
[177.68878174 -221.19309998]
[189.60185242 -230.33613586]
[202.49583435 -238.03430176]
[216.19635010 -244.18348694]
[230.51811218 -248.70051575]
[245.26744080 -251.52432251]
[260.24487305 -252.61668396]
[275.24783325 -251.96286011]
[290.07345581 -249.57168579]
[304.52120972 -245.47549438]
[318.39572144 -239.72969055]
[331.50936890 -232.41195679]
[343.68475342 -223.62129211]
[354.75729370 -213.47654724]
[364.57717896 -202.11492920]
[373.01162720 -189.69009399]
[379.94659424 -176.37008667]
[385.28826904 -162.33502197]
[388.96441650 -147.77471924]
[390.92532349 -132.88607788]
[391.14447021 -117.87047577]
[389.61889648 -102.93096161]
[386.36923218 -88.26957703]
[381.43942261 -74.08460236]
[374.89611816 -60.56787872]
[366.82785034 -47.90219498]
[357.34368896 -36.25885010]
[346.57196045 -25.79529762]
[334.65826416 -16.65305138]
[321.76376343 -8.95574760]
[308.06283569 -2.80748320]
[293.74078369 1.70859277]
[278.99127197 4.53140593]
[264.01376343 5.62278080]
[249.01084900 4.96795750]
[234.18539429 2.57579231]
[219.73789978 -1.52136374]
[205.86376953 -7.26810122]
[192.75062561 -14.58670235]
[183.97001648 -2.42524648]
[175.18942261 9.73620892]
[166.40881348 21.89766502]
[157.62821960 34.05912018]
[162.44094849 48.12950134]
[157.99299622 62.50586319]
[145.78994751 71.61293793]
[130.38623047 71.79026794]
[121.60562134 83.95172882]
[112.82501984 96.11318207]
[126.07813263 89.08787537]
[140.49041748 84.93022156]
[155.44905090 83.81700897]
[170.31799316 85.79557037]
[184.46499634 90.78177643]
[197.28852844 98.56361389]
[208.24333191 108.81019592]
[216.86358643 121.08582306]
[222.78277588 134.86853027]
[225.74920654 149.57228088]
[225.63673401 164.57186890]
[222.45014954 179.22947693]
[216.32495117 192.92189026]
[207.52157593 205.06686401]
[196.41435242 215.14802551]
[183.47557068 222.73667908]
[169.25538635 227.51019287]
[154.35845947 229.26556396]
[139.41819763 227.92816162]
[125.06987762 223.55485535]
[111.92359924 216.33160400]
[100.53834534 206.56553650]
[91.39823151 194.67192078]
[84.89189148 181.15646362]
[81.29597473 166.59385681]
[80.76338959 151.60331726]
[83.31678009 136.82223511]
[88.84757233 122.87912750]
[97.12070465 110.36671448]
[84.22438049 118.02731323]
[71.38543701 125.78370667]
[58.54649734 133.54010010]
[45.70755768 141.29649353]
[32.86861801 149.05288696]
[20.02967834 156.80926514]
[7.19073725 164.56565857]
[14.07501316 177.89892578]
[20.05334663 191.66224670]
[25.09904099 205.79412842]
[29.18955421 220.23147583]
[32.30662155 234.90980530]
[34.43632126 249.76353455]
[35.56914139 264.72634888]
[35.70001984 279.73144531]
[34.82837677 294.71173096]
[32.95809937 309.60037231]
[30.09754562 324.33084106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 199]
[82 198]
[83 197]
[84 196]
[85 195]
[86 194]
[87 193]
[89 192]
[90 163]
[91 162]
[92 161]
[96 157]
[97 156]
[98 155]
[99 154]
[100 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
