%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[119.93657684 793.16162109]
[106.22987366 787.05267334]
[92.99390411 779.98138428]
[80.29611206 771.98394775]
[68.20121765 763.10101318]
[56.77083588 753.37786865]
[46.06322861 742.86401367]
[36.13294983 731.61309814]
[27.03061104 719.68243408]
[18.80259132 707.13287354]
[11.49081802 694.02819824]
[5.13255310 680.43536377]
[-0.23980330 666.42352295]
[-4.59887505 652.06414795]
[-7.92244911 637.43041992]
[-10.19358826 622.59680176]
[-11.40072060 607.63897705]
[-11.53769398 592.63317871]
[-10.60381031 577.65582275]
[-8.60382938 562.78326416]
[-5.54794121 548.09124756]
[-1.45171928 533.65472412]
[3.66396332 519.54718018]
[9.77303791 505.84048462]
[16.84437370 492.60458374]
[24.84193611 479.90686035]
[33.72497177 467.81201172]
[43.44821167 456.38171387]
[53.96211243 445.67419434]
[65.21309662 435.74398804]
[77.14382172 426.64175415]
[89.69350433 418.41381836]
[102.79818726 411.10214233]
[116.39109802 404.74398804]
[130.40295410 399.37173462]
[144.76235962 395.01278687]
[141.44010925 380.38531494]
[138.11784363 365.75787354]
[134.79559326 351.13040161]
[122.19637299 338.91458130]
[127.78890991 321.37020874]
[124.24923706 306.79382324]
[120.70956421 292.21743774]
[117.16989136 277.64108276]
[109.44085693 290.49649048]
[95.29817200 295.49496460]
[81.20768738 290.35119629]
[73.61137390 277.41690063]
[75.98217010 262.60543823]
[87.23618317 252.68841553]
[102.22821808 252.19976807]
[114.10512543 261.36444092]
[112.10111237 246.49891663]
[102.73280334 234.91944885]
[108.55702209 220.20928955]
[106.55300903 205.34376526]
[94.58943939 196.54554749]
[92.34532166 181.49833679]
[101.65480804 169.00949097]
[99.65079498 154.14396667]
[97.64678192 139.27844238]
[95.64276886 124.41291046]
[93.63875580 109.54738617]
[86.48684692 122.73261261]
[73.75244904 130.65946960]
[58.76431274 131.25592041]
[45.44029617 124.36603546]
[37.26326370 111.79080963]
[36.37067413 96.81739044]
[42.99584579 83.35978699]
[55.40697861 74.93579102]
[70.35983276 73.74740601]
[83.94576263 80.10527039]
[92.61312866 92.34663391]
[89.61183167 83.71935272]
[92.95309448 77.12709808]
[93.39969635 62.13375092]
[93.84630585 47.14039993]
[84.74417877 31.13312531]
[94.54271698 16.57443047]
[94.76604462 1.57609236]
[94.98937225 -13.42224503]
[82.37105560 -18.05227470]
[71.81132507 -26.33112526]
[64.32914734 -37.44208908]
[60.64101410 -50.29605103]
[61.09234238 -63.63825226]
[65.62518311 -76.17076111]
[73.78521729 -86.67873383]
[84.76725769 -94.14820099]
[97.49468231 -97.86386108]
[98.16446686 -112.84889984]
[98.83425140 -127.83393860]
[91.72087860 -141.96583557]
[100.01876831 -154.33493042]
[100.68855286 -169.31996155]
[101.35833740 -184.30500793]
[87.12199402 -189.38613892]
[75.01682281 -198.43910217]
[66.11920166 -210.65892029]
[61.22031021 -224.95899963]
[60.75574493 -240.06779480]
[64.76681519 -254.64183044]
[72.89686584 -267.38522339]
[84.42297363 -277.16479492]
[98.32025146 -283.11099243]
[113.35295105 -284.69506836]
[128.18438721 -281.77615356]
[141.49574280 -274.61380005]
[152.10340881 -263.84490967]
[159.06413269 -250.42703247]
[161.75897217 -235.55325317]
[159.94831848 -220.54615784]
[153.79316711 -206.74015808]
[143.84083557 -195.36288452]
[130.97627258 -187.42599487]
[116.34337616 -183.63522339]
[115.67359161 -168.65017700]
[115.00380707 -153.66514587]
[122.16508484 -140.60507202]
[113.81929016 -127.16415405]
[113.14950562 -112.17911530]
[112.47972107 -97.19407654]
[127.72547150 -90.49908447]
[139.25573730 -78.43531036]
[145.28128052 -62.83391953]
[144.85136414 -46.07811737]
[138.00370789 -30.73910332]
[125.76301575 -19.18151474]
[109.98770905 -13.19891739]
[109.76438141 1.79942000]
[109.54105377 16.79775810]
[117.73847961 25.69319344]
[117.67517090 38.19038391]
[108.83965302 47.58700562]
[108.39305115 62.58035660]
[107.94644165 77.57370758]
[107.61146545 92.56996155]
[108.50428009 107.54337311]
[110.50829315 122.40889740]
[112.51230621 137.27442932]
[114.51631927 152.13995361]
[116.52033997 167.00547791]
[128.80461121 176.58328247]
[130.62521362 191.68759155]
[121.41854095 203.33975220]
[123.42255402 218.20527649]
[132.93420410 230.84802246]
[126.96664429 244.49490356]
[128.97065735 259.36044312]
[131.74626160 274.10140991]
[135.28593445 288.67776489]
[138.82560730 303.25415039]
[142.36528015 317.83053589]
[152.95408630 325.19531250]
[155.60220337 337.40887451]
[149.42304993 347.80813599]
[152.74530029 362.43560791]
[156.06756592 377.06304932]
[159.38983154 391.69052124]
[174.22335815 389.41903687]
[189.18113708 388.21157837]
[204.18695068 388.07424927]
[219.16432190 389.00778198]
[234.03694153 391.00741577]
[248.72901917 394.06298828]
[263.16567993 398.15887451]
[277.27334595 403.27423096]
[290.98013306 409.38299561]
[304.21621704 416.45401001]
[316.91412354 424.45129395]
[329.00915527 433.33404541]
[340.43969727 443.05703735]
[351.14746094 453.57067871]
[361.07791138 464.82144165]
[370.18041992 476.75195312]
[378.40863037 489.30145264]
[385.72061157 502.40594482]
[392.07910156 515.99871826]
[397.45166016 530.01043701]
[401.81094360 544.36975098]
[405.13473511 559.00347900]
[407.40612793 573.83703613]
[408.61346436 588.79479980]
[408.75067139 603.80065918]
[407.81701660 618.77801514]
[405.81726074 633.65057373]
[402.76159668 648.34265137]
[398.66561890 662.77929688]
[393.55014038 676.88690186]
[387.44128418 690.59362793]
[380.37014771 703.82965088]
[372.37277222 716.52752686]
[363.48992920 728.62249756]
[353.76687622 740.05291748]
[343.25311279 750.76062012]
[332.00228882 760.69097900]
[320.07171631 769.79345703]
[307.52215576 778.02154541]
[294.41757202 785.33343506]
[280.82476807 791.69177246]
[266.81298828 797.06427002]
[252.45364380 801.42346191]
[237.81991577 804.74713135]
[222.98634338 807.01837158]
[208.02854919 808.22564697]
[193.02272034 808.36273193]
[178.04536438 807.42895508]
[163.17277527 805.42907715]
[148.48075867 802.37329102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 160]
[37 159]
[38 158]
[39 157]
[41 154]
[42 153]
[43 152]
[44 151]
[52 150]
[53 149]
[55 147]
[56 146]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[74 138]
[76 137]
[77 136]
[78 135]
[80 132]
[81 131]
[82 130]
[91 123]
[92 122]
[93 121]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
