%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[302.05987549 386.73645020]
[304.54791260 371.93545532]
[308.24972534 357.39047241]
[313.14001465 343.20089722]
[319.18536377 329.46359253]
[326.34451294 316.27246094]
[334.56851196 303.71755981]
[322.74224854 294.49044800]
[310.91595459 285.26336670]
[299.08969116 276.03625488]
[287.26342773 266.80917358]
[275.43716431 257.58206177]
[263.61090088 248.35496521]
[254.13856506 252.31048584]
[243.79821777 251.97457886]
[234.45788574 247.34089661]
[227.83271790 239.18548584]
[225.17019653 228.93765259]
[227.01557922 218.42964172]
[215.61311340 208.68367004]
[204.21066284 198.93769836]
[192.80819702 189.19174194]
[178.81169128 194.28715515]
[164.04571533 191.67521667]
[152.49336243 181.95877075]
[147.32159424 167.67066956]
[150.01353455 152.61408997]
[138.61106873 142.86811829]
[127.20860291 133.12216187]
[115.80614471 123.37619019]
[104.40367889 113.63022614]
[90.69329071 110.88854980]
[85.85035706 97.77223969]
[91.77338409 111.55329895]
[94.63906860 126.27702332]
[94.31702423 141.27355957]
[90.82191467 155.86068726]
[84.31273651 169.37477112]
[75.08561707 181.20103455]
[63.56032562 190.80143738]
[50.26119232 197.73922729]
[35.79323196 201.69879150]
[20.81464577 202.50000000]
[6.00685644 200.10638428]
[-7.95648050 194.62686157]
[-20.44012642 186.31069946]
[-30.87615585 175.53622437]
[-38.78980255 162.79360962]
[-43.82104874 148.66256714]
[-45.74100113 133.78593445]
[-44.46232224 118.84053802]
[-40.04317856 104.50627899]
[-32.68461227 91.43525696]
[-22.72138786 80.22212982]
[-10.60676861 71.37702179]
[3.10811329 65.30232239]
[17.79932213 62.27438354]
[32.79850388 62.43096161]
[47.42329788 65.76493835]
[61.00837326 72.12463379]
[72.93884277 81.22370148]
[66.25865173 67.79332733]
[59.57845688 54.36294937]
[52.89826202 40.93257141]
[46.21806717 27.50219727]
[39.43807602 14.12192345]
[32.55866241 0.79249454]
[18.39474297 5.80219936]
[3.68057871 8.83652115]
[-11.30971622 9.83893204]
[-26.29688072 8.79075718]
[-41.00171280 5.71152449]
[-55.15026855 0.65859723]
[-68.47897339 -6.27389097]
[-80.73951721 -14.95679188]
[-91.70349884 -25.22834969]
[-101.16666412 -36.89720917]
[-108.95271301 -49.74599075]
[-114.91661072 -63.53532410]
[-118.94723511 -78.00832367]
[-120.96951294 -92.89537048]
[-120.94576263 -107.91912842]
[-118.87643433 -122.79970551]
[-114.80007172 -137.25988770]
[-108.79261017 -151.03030396]
[-100.96598053 -163.85440063]
[-91.46597290 -175.49328613]
[-80.46957397 -185.73013306]
[-68.18164062 -194.37423706]
[-54.83108521 -201.26454163]
[-40.66662216 -206.27272034]
[-25.95212936 -209.30545044]
[-10.96172619 -210.30622864]
[4.02532482 -209.25643921]
[18.72982407 -206.17561340]
[32.87783432 -201.12115479]
[46.20578766 -194.18722534]
[58.46539307 -185.50299072]
[69.42826080 -175.23025513]
[78.89015961 -163.56036377]
[86.67481995 -150.71073914]
[92.63722229 -136.92076111]
[96.66628265 -122.44732666]
[98.68695068 -107.56005859]
[98.66157532 -92.53630829]
[96.59063721 -77.65595245]
[92.51270294 -63.19620895]
[86.50375366 -49.42644882]
[78.67573547 -36.60319519]
[69.17446899 -24.96533775]
[58.17696381 -14.72968483]
[45.88809204 -6.08691788]
[52.76750565 7.24251127]
[58.62858200 11.74468422]
[59.64844131 20.82200241]
[66.32863617 34.25238037]
[73.00883484 47.68275452]
[79.68902588 61.11312866]
[86.36922455 74.54350281]
[95.59632111 86.36977386]
[109.30670929 89.11145020]
[114.14964294 102.22776031]
[125.55210876 111.97372437]
[136.95457458 121.71969604]
[148.35704041 131.46565247]
[159.75949097 141.21162415]
[174.21333313 136.20822144]
[189.13241577 139.09226990]
[200.52905273 148.99090576]
[205.40818787 163.17010498]
[202.55415344 177.78927612]
[213.95661926 187.53524780]
[225.35908508 197.28120422]
[236.76155090 207.02717590]
[256.68066406 204.39877319]
[271.87637329 217.07131958]
[272.83798218 236.52870178]
[284.66424561 245.75579834]
[296.49053955 254.98289490]
[308.31680298 264.20999146]
[320.14306641 273.43710327]
[331.96932983 282.66418457]
[343.79559326 291.89129639]
[353.97338867 280.86077881]
[365.02734375 270.70843506]
[376.88189697 261.50360107]
[389.45608521 253.30915833]
[402.66406250 246.18107605]
[416.41552734 240.16806030]
[430.61657715 235.31117249]
[445.17022705 231.64360046]
[459.97702026 229.19038391]
[474.93585205 227.96830750]
[489.94448853 227.98568726]
[504.90042114 229.24243164]
[519.70147705 231.72994995]
[534.24658203 235.43122864]
[548.43634033 240.32101440]
[562.17388916 246.36587524]
[575.36529541 253.52453613]
[587.92047119 261.74810791]
[599.75366211 270.98037720]
[610.78405762 281.15829468]
[620.93627930 292.21237183]
[630.14093018 304.06701660]
[638.33526611 316.64132690]
[645.46313477 329.84936523]
[651.47601318 343.60092163]
[656.33276367 357.80203247]
[660.00012207 372.35571289]
[662.45318604 387.16253662]
[663.67504883 402.12136841]
[663.65753174 417.13000488]
[662.40057373 432.08593750]
[659.91290283 446.88699341]
[656.21142578 461.43203735]
[651.32147217 475.62176514]
[645.27648926 489.35919189]
[638.11761475 502.55050659]
[629.89392090 515.10559082]
[620.66149902 526.93865967]
[610.48345947 537.96893311]
[599.42926025 548.12103271]
[587.57452393 557.32556152]
[575.00012207 565.51971436]
[561.79199219 572.64746094]
[548.04034424 578.66015625]
[533.83917236 583.51672363]
[519.28546143 587.18395996]
[504.47860718 589.63677979]
[489.51974487 590.85852051]
[474.51110840 590.84082031]
[459.55520630 589.58367920]
[444.75418091 587.09582520]
[430.20916748 583.39422607]
[416.01953125 578.50408936]
[402.28216553 572.45886230]
[389.09094238 565.29992676]
[376.53594971 557.07604980]
[364.70297241 547.84350586]
[353.67282104 537.66528320]
[343.52087402 526.61102295]
[334.31646729 514.75610352]
[326.12246704 502.18161011]
[318.99487305 488.97341919]
[312.98233032 475.22171021]
[308.12594604 461.02047729]
[304.45889282 446.46670532]
[302.00622559 431.65982056]
[300.78466797 416.70095825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 143]
[8 142]
[9 141]
[10 140]
[11 139]
[12 138]
[13 137]
[19 134]
[20 133]
[21 132]
[22 131]
[27 126]
[28 125]
[29 124]
[30 123]
[31 122]
[33 120]
[61 119]
[62 118]
[63 117]
[64 116]
[65 115]
[66 113]
[67 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
