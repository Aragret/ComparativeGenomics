%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[65.65776062 493.20513916]
[62.75782394 508.05255127]
[55.40994263 521.27618408]
[44.33399582 531.58044434]
[30.61508369 537.95593262]
[15.59724903 539.77795410]
[0.75178725 536.86810303]
[-12.46689606 529.51135254]
[-22.76376915 518.42852783]
[-29.13004875 504.70532227]
[-30.94203186 489.68627930]
[-28.02219963 474.84277344]
[-20.65660667 461.62902832]
[-9.56685734 451.33956909]
[4.16058493 444.98248291]
[19.18084717 443.18057251]
[22.06612015 428.46069336]
[20.26792336 421.29211426]
[25.10548210 413.54382324]
[28.20959282 398.86853027]
[31.31370354 384.19323730]
[34.41781235 369.51794434]
[37.52192307 354.84262085]
[40.62603378 340.16732788]
[35.69001007 326.11437988]
[46.11564255 314.21411133]
[37.64525604 304.50421143]
[36.29384232 291.49438477]
[42.77764130 279.91116333]
[54.92509460 274.09274292]
[58.24735260 259.46530151]
[61.56961441 244.83782959]
[64.89187622 230.21037292]
[60.16562271 216.08551025]
[70.76727295 204.34176636]
[74.08953857 189.71429443]
[77.41179657 175.08683777]
[80.51590729 160.41154480]
[75.37120056 146.43365479]
[85.61849976 134.37947083]
[88.50376892 119.65957642]
[77.81577301 105.14997864]
[81.01848602 87.41571045]
[96.10652161 77.56112671]
[98.55224609 62.76185989]
[100.99797821 47.96258926]
[103.44370270 33.16331863]
[105.88943481 18.36404610]
[108.33515930 3.56477594]
[110.78088379 -11.23449516]
[112.56335449 -26.12821198]
[113.67900085 -41.08666611]
[114.79464722 -56.04512024]
[115.91030121 -71.00357056]
[117.02594757 -85.96202850]
[118.14159393 -100.92047882]
[107.97666168 -89.88988495]
[93.48900604 -86.00300598]
[79.16778564 -90.46424866]
[69.45058441 -101.89123535]
[67.34838867 -116.74319458]
[73.51258850 -130.41809082]
[86.03312683 -138.67860413]
[101.03038788 -138.96511841]
[113.85730743 -131.18885803]
[120.53936768 -117.75914001]
[123.64347839 -132.43443298]
[126.74758911 -147.10974121]
[129.85169983 -161.78504944]
[132.95581055 -176.46034241]
[135.73141479 -191.20130920]
[138.17715454 -206.00057983]
[140.62287903 -220.79985046]
[143.06860352 -235.59912109]
[143.84992981 -250.57876587]
[142.95710754 -265.55215454]
[132.69931030 -271.56167603]
[126.67774200 -281.67312622]
[126.28892517 -293.31539917]
[131.51385498 -303.59237671]
[140.95135498 -310.00329590]
[140.50474548 -324.99664307]
[140.05813599 -339.98999023]
[139.61152649 -354.98333740]
[139.16493225 -369.97668457]
[138.71832275 -384.97003174]
[138.27171326 -399.96337891]
[135.12759399 -405.77938843]
[135.35804749 -411.45776367]
[138.04173279 -415.40832520]
[138.04173279 -430.40832520]
[138.04173279 -445.40832520]
[130.30442810 -459.20849609]
[138.04173279 -471.93576050]
[138.04173279 -486.93576050]
[123.54421997 -491.17825317]
[110.82994080 -499.33447266]
[100.92958832 -510.74322510]
[94.64574432 -524.47967529]
[92.48781586 -539.43023682]
[94.63072968 -554.38299561]
[100.90076447 -568.12573242]
[110.78964996 -579.54443359]
[123.49572754 -587.71343994]
[137.98898315 -591.97045898]
[153.09449768 -591.97045898]
[167.58773804 -587.71343994]
[180.29382324 -579.54443359]
[190.18270874 -568.12573242]
[196.45274353 -554.38299561]
[198.59565735 -539.43023682]
[196.43772888 -524.47967529]
[190.15388489 -510.74322510]
[180.25354004 -499.33447266]
[167.53926086 -491.17825317]
[153.04173279 -486.93576050]
[153.04173279 -471.93576050]
[160.77903748 -459.20849609]
[153.04173279 -445.40832520]
[153.04173279 -430.40832520]
[153.04173279 -415.40832520]
[153.26506042 -400.40997314]
[153.71166992 -385.41662598]
[154.15827942 -370.42327881]
[154.60488892 -355.42993164]
[155.05148315 -340.43658447]
[155.49809265 -325.44323730]
[155.94470215 -310.44989014]
[170.00022888 -298.72137451]
[171.03703308 -280.12466431]
[157.93051147 -266.44497681]
[158.82333374 -251.47157288]
[165.45730591 -264.92483521]
[176.45375061 -275.12670898]
[190.36589050 -280.73498535]
[205.36332703 -281.01174927]
[219.47291565 -275.92062378]
[230.83828735 -266.13140869]
[237.96412659 -252.93208313]
[239.91291809 -238.05921936]
[236.42823792 -223.46958923]
[227.96859741 -211.08273315]
[215.64697266 -202.52833557]
[201.08450317 -198.93188477]
[186.19712830 -200.76655579]
[172.94352722 -207.79095459]
[163.06745911 -219.08091736]
[157.86787415 -233.15339661]
[155.42214966 -218.35412598]
[152.97642517 -203.55485535]
[150.53068542 -188.75558472]
[152.27575684 -185.69174194]
[152.62351990 -181.63044739]
[151.12135315 -177.23764038]
[147.63111877 -173.35623169]
[144.52700806 -158.68093872]
[141.42289734 -144.00563049]
[138.31878662 -129.33033752]
[135.21467590 -114.65502930]
[133.10005188 -99.80483246]
[131.98440552 -84.84637451]
[130.86874390 -69.88792419]
[129.75309753 -54.92947006]
[128.63745117 -39.97101593]
[127.52180481 -25.01256371]
[139.56503296 -33.95463562]
[154.42341614 -31.89829254]
[163.58538818 -20.02150154]
[161.80256653 -5.12782621]
[150.09622192 4.25095797]
[135.17228699 2.74225855]
[125.58015442 -8.78876781]
[123.13442993 6.01050329]
[120.68870544 20.80977440]
[118.24297333 35.60904312]
[115.79724884 50.40831757]
[113.35151672 65.20758820]
[110.90579224 80.00685883]
[119.15645599 87.68366241]
[122.71620941 98.37641144]
[120.71335602 109.46673584]
[113.63834381 118.23890686]
[103.22366333 122.54484558]
[100.33839417 137.26473999]
[105.27671814 152.29548645]
[95.23579407 163.29681396]
[97.01367950 169.66474915]
[95.53127289 175.15104675]
[92.03925323 178.40910339]
[88.71699524 193.03656006]
[85.39473724 207.66401672]
[89.88335419 222.83514404]
[79.51933289 233.53262329]
[76.19707489 248.16009521]
[72.87481689 262.78753662]
[69.55255127 277.41500854]
[79.14485168 292.04400635]
[75.26554871 308.75524902]
[60.79094315 317.31820679]
[65.50494385 332.42083740]
[55.30133438 343.27142334]
[52.19722748 357.94674683]
[49.09311676 372.62203979]
[45.98900604 387.29733276]
[42.88489532 401.97265625]
[39.78078461 416.64794922]
[36.78601074 431.34594727]
[33.90073776 446.06585693]
[47.12926865 453.40484619]
[57.44098663 464.47390747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 208]
[17 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[26 199]
[30 196]
[31 195]
[32 194]
[33 193]
[35 191]
[36 190]
[37 189]
[38 186]
[40 184]
[41 183]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[50 172]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 151]
[72 150]
[73 149]
[74 148]
[75 132]
[76 131]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[90 121]
[91 120]
[92 119]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
