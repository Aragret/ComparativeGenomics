%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[148.93838501 356.89175415]
[159.76493835 346.44271851]
[172.37347412 338.23168945]
[166.71069336 324.34167480]
[161.04791260 310.45162964]
[155.61186218 305.44451904]
[155.40591431 296.31240845]
[149.95054626 282.33959961]
[138.11431885 273.29788208]
[140.30278015 257.62878418]
[134.84741211 243.65597534]
[126.52571869 256.13592529]
[111.59375763 257.56301880]
[101.05882263 246.88522339]
[102.68686676 231.97384644]
[115.27777100 223.82096863]
[129.54876709 228.43547058]
[125.14777374 214.09562683]
[120.74678040 199.75578308]
[116.34577942 185.41593933]
[105.34746552 182.38224792]
[97.09391022 174.33273315]
[93.71633911 163.18437195]
[96.16455078 151.67320251]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.05644989 61.44698334]
[76.01953125 47.31795502]
[70.98261261 33.18892288]
[56.51681900 35.42351532]
[41.89111710 34.95359802]
[27.60665321 31.79679680]
[14.15259743 26.06277275]
[1.98939419 17.94941902]
[-8.46699333 7.73602438]
[-16.85931015 -4.22633076]
[-22.90121460 -17.52684975]
[-26.38704681 -31.70912552]
[-27.19883156 -46.28679657]
[-25.31026840 -60.76023483]
[-20.78758240 -74.63366699]
[-13.78719997 -87.43214417]
[-4.55034542 -98.71782684]
[6.60527945 -108.10493469]
[19.29641533 -115.27296448]
[14.47041893 -129.47541809]
[9.64442062 -143.67787170]
[3.87838745 -157.52536011]
[-2.80180717 -170.95573425]
[-9.48200130 -184.38610840]
[-16.16219711 -197.81649780]
[-22.84239197 -211.24687195]
[-29.52258492 -224.67724609]
[-41.47958374 -229.51387024]
[-46.76704025 -240.83758545]
[-43.04462433 -252.34715271]
[-49.52412033 -265.87548828]
[-56.00361633 -279.40383911]
[-62.48311234 -292.93218994]
[-68.96260834 -306.46054077]
[-73.86402130 -292.28393555]
[-86.66618347 -284.46697998]
[-101.51611328 -286.58349609]
[-111.62462616 -297.66583252]
[-112.37023926 -312.64727783]
[-103.41207886 -324.67855835]
[-88.84568787 -328.25909424]
[-75.32932281 -321.75061035]
[-80.36624146 -335.87963867]
[-85.40316010 -350.00866699]
[-90.44007111 -364.13769531]
[-95.47698975 -378.26672363]
[-110.28985596 -375.68081665]
[-125.32668304 -375.63565063]
[-140.15481567 -378.13253784]
[-154.34762573 -383.09967041]
[-167.49674988 -390.39407349]
[-179.22387695 -399.80587769]
[-189.19158936 -411.06433105]
[-197.11309814 -423.84548950]
[-202.76046753 -437.78161621]
[-205.97123718 -452.47171021]
[-206.65299988 -467.49313354]
[-204.78616333 -482.41366577]
[-200.42443848 -496.80407715]
[-193.69329834 -510.25024414]
[-184.78643799 -522.36535645]
[-173.96011353 -532.80078125]
[-161.52581787 -541.25634766]
[-147.84130859 -547.48870850]
[-133.30032349 -551.31860352]
[-118.32123566 -552.63574219]
[-103.33502197 -551.40228271]
[-88.77286530 -547.65374756]
[-75.05374146 -541.49798584]
[-62.57238770 -533.11206055]
[-51.68791199 -522.73724365]
[-42.71347809 -510.67211914]
[-35.90730667 -497.26376343]
[-31.46522331 -482.89797974]
[-29.51503181 -467.98809814]
[-30.11284447 -452.96310425]
[-33.24146271 -438.25527954]
[-38.81086731 -424.28784180]
[-46.66081619 -411.46261597]
[-56.56545258 -400.14862061]
[-68.23979950 -390.67141724]
[-81.34796143 -383.30364990]
[-76.31104279 -369.17462158]
[-71.27413177 -355.04559326]
[-66.23721313 -340.91656494]
[-61.20029449 -326.78750610]
[-55.43426132 -312.94003296]
[-48.95476532 -299.41168213]
[-42.47526932 -285.88333130]
[-35.99577332 -272.35501099]
[-29.51627922 -258.82666016]
[-14.52436256 -249.70474243]
[-16.09220886 -231.35743713]
[-9.41201496 -217.92706299]
[-2.73182034 -204.49668884]
[3.94837427 -191.06631470]
[10.62856865 -177.63594055]
[17.30876350 -164.20555115]
[20.41472244 -178.88046265]
[30.88550758 -189.62117004]
[45.47663498 -193.09953308]
[59.66688156 -188.23776245]
[69.05924988 -176.54231262]
[70.74340820 -161.63716125]
[64.19750214 -148.14082336]
[51.44985199 -140.23529053]
[36.45045853 -140.37017822]
[23.84687614 -148.50387573]
[28.67287445 -134.30142212]
[33.49887085 -120.09896088]
[48.74591446 -122.18244934]
[64.11164093 -121.26021576]
[79.00901794 -117.36568451]
[92.86853790 -110.64586639]
[105.16001129 -101.35581970]
[115.41284180 -89.84895325]
[123.23405457 -76.56361389]
[128.32333374 -62.00634384]
[130.48457336 -46.73260498]
[129.63343811 -31.32556343]
[125.80062103 -16.37383080]
[119.13079071 -2.44897652]
[109.87709045 9.91632080]
[98.39154053 20.24865341]
[85.11164856 28.15200806]
[90.14855957 42.28103638]
[95.18547821 56.41006851]
[103.87506104 44.18341064]
[118.84288788 43.20154190]
[129.05523682 54.18825531]
[126.98394775 69.04455566]
[114.15588379 76.81893921]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[135.21887207 147.44638062]
[140.22036743 165.38789368]
[130.68562317 181.01493835]
[135.08662415 195.35478210]
[139.48762512 209.69462585]
[143.88862610 224.03448486]
[148.82022095 238.20062256]
[154.27557373 252.17341614]
[166.50201416 262.21456909]
[163.92335510 276.88424683]
[169.37870789 290.85705566]
[174.93792725 304.78884888]
[180.60072327 318.67886353]
[186.26350403 332.56890869]
[201.01898193 329.62399292]
[216.06512451 329.52505493]
[230.85804749 332.27566528]
[244.86299133 337.77639771]
[257.57369995 345.82839966]
[268.53063965 356.14062500]
[277.33776855 368.34024048]
[283.67669678 381.98626709]
[287.31829834 396.58544922]
[288.13088989 411.60995483]
[286.08514404 426.51672363]
[281.25497437 440.76684570]
[273.81503296 453.84518433]
[264.03421021 465.27902222]
[252.26611328 474.65496826]
[238.93615723 481.63412476]
[224.52618408 485.96417236]
[209.55712891 487.48861694]
[194.57011414 486.15234375]
[180.10688782 482.00363159]
[166.69032288 475.19244385]
[154.80537415 465.96505737]
[144.88171387 454.65499878]
[137.27806091 441.67114258]
[132.26927185 427.48281860]
[130.03643799 412.60293579]
[130.66024780 397.56939697]
[134.11816406 382.92562866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[5 180]
[7 179]
[8 178]
[10 176]
[11 175]
[17 174]
[18 173]
[19 172]
[20 171]
[25 168]
[26 167]
[27 166]
[29 164]
[30 163]
[31 157]
[32 156]
[33 155]
[49 140]
[50 139]
[51 138]
[52 128]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
