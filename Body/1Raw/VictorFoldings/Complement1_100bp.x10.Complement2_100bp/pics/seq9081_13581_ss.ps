%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[153.68173218 599.58386230]
[143.43598938 588.62036133]
[133.95375061 576.99023438]
[125.27828979 564.74645996]
[117.44920349 551.94500732]
[110.50221252 538.64416504]
[104.46900940 524.90466309]
[99.37711334 510.78924561]
[95.24977875 496.36224365]
[92.10581970 481.68954468]
[89.95959473 466.83804321]
[88.82088470 451.87554932]
[88.69489288 436.87033081]
[89.58219147 421.89080811]
[91.47873688 407.00537109]
[94.37586212 392.28195190]
[98.26036835 377.78768921]
[103.11450958 363.58874512]
[108.91616058 349.74987793]
[115.63882446 336.33425903]
[123.25184631 323.40310669]
[131.72048950 311.01541138]
[141.00608826 299.22769165]
[151.06629944 288.09371948]
[161.85522461 277.66433716]
[173.32360840 267.98709106]
[185.41915894 259.10617065]
[177.37797546 246.44363403]
[169.33680725 233.78111267]
[161.29563904 221.11859131]
[157.95256042 219.99777222]
[154.98628235 217.20202637]
[153.17810059 212.92607117]
[153.19281006 207.70622253]
[145.72506714 194.69726562]
[138.25733948 181.68830872]
[130.78959656 168.67935181]
[117.74304962 161.49346924]
[117.58291626 145.67308044]
[104.53637695 138.48718262]
[104.37624359 122.66679382]
[96.90850830 109.65783691]
[90.48332214 104.79064178]
[89.42807007 96.39913940]
[82.15484619 83.28044891]
[74.88161469 70.16175079]
[70.40618134 67.47520447]
[67.68126678 63.71646118]
[66.82214355 59.73186874]
[67.59148407 56.29087448]
[60.91128540 42.86049652]
[54.23109055 29.43012047]
[47.55089569 15.99974442]
[43.19988632 13.11603355]
[40.64552689 9.23936749]
[39.96518326 5.22038937]
[40.88740158 1.81717718]
[34.81356812 -11.89808941]
[28.73973274 -25.61335564]
[22.66589928 -39.32862473]
[16.49013138 -52.99829483]
[10.21276951 -66.62161255]
[3.93540907 -80.24492645]
[-10.31016541 -75.49868774]
[-24.99141121 -72.34841156]
[-39.93011093 -70.83234406]
[-54.94491959 -70.96888733]
[-69.85357666 -72.75638580]
[-84.47510529 -76.17313385]
[-98.63200378 -81.17766571]
[-112.15242767 -87.70922089]
[-124.87225342 -95.68852234]
[-136.63706970 -105.01870728]
[-147.30406189 -115.58650208]
[-156.74375916 -127.26364136]
[-164.84153748 -139.90837097]
[-171.49913025 -153.36717224]
[-176.63569641 -167.47671509]
[-180.18890381 -182.06567383]
[-182.11561584 -196.95698547]
[-182.39242554 -211.96986389]
[-181.01599121 -226.92207336]
[-178.00300598 -241.63211060]
[-173.39006042 -255.92140198]
[-167.23315430 -269.61648560]
[-159.60700989 -282.55114746]
[-150.60420227 -294.56832886]
[-140.33403015 -305.52218628]
[-128.92117310 -315.27972412]
[-116.50413513 -323.72250366]
[-103.23368073 -330.74804688]
[-89.27088928 -336.27105713]
[-74.78526306 -340.22448730]
[-59.95263290 -342.56036377]
[-44.95306015 -343.25033569]
[-29.96862793 -342.28601074]
[-15.18122959 -339.67907715]
[-0.77037144 -335.46121216]
[13.08901119 -329.68362427]
[26.22867966 -322.41641235]
[38.48912811 -313.74780273]
[49.72152710 -303.78305054]
[59.78952408 -292.64309692]
[68.57090759 -280.46316528]
[75.95907593 -267.39114380]
[81.86434174 -253.58566284]
[86.21502686 -239.21435547]
[88.95830536 -224.45164490]
[90.06089020 -209.47674561]
[89.50939178 -194.47145081]
[87.31050873 -179.61788940]
[83.49092102 -165.09638977]
[78.09700775 -151.08322144]
[71.19424438 -137.74848938]
[62.86641693 -125.25407410]
[53.21462250 -113.75163269]
[42.35602570 -103.38080597]
[30.42243958 -94.26747894]
[17.55872536 -86.52228546]
[23.83608627 -72.89897156]
[30.11344719 -59.27565384]
[35.76764679 -54.51626205]
[36.38116455 -45.40245819]
[42.45499802 -31.68719101]
[48.52883530 -17.97192383]
[54.60266876 -4.25665665]
[60.98127365 9.31955051]
[67.66146851 22.74992561]
[74.34165955 36.18030167]
[81.02185822 49.61067963]
[88.00030518 62.88852310]
[95.27353668 76.00721741]
[102.54676819 89.12591553]
[109.91745758 102.19010162]
[117.38520050 115.19905090]
[130.96588135 123.31542206]
[130.59187317 138.20533752]
[144.17256165 146.32171631]
[143.79853821 161.21162415]
[151.26628113 174.22056580]
[158.73402405 187.22952271]
[166.20176697 200.23847961]
[173.95816040 213.07742310]
[181.99932861 225.73994446]
[190.04049683 238.40246582]
[198.08168030 251.06498718]
[211.26313782 243.89408875]
[224.89865112 237.62942505]
[238.92596436 232.29957581]
[253.28109741 227.92887878]
[267.89855957 224.53727722]
[282.71163940 222.14022827]
[297.65274048 220.74868774]
[312.65368652 220.36898804]
[327.64605713 221.00286865]
[342.56143188 222.64744568]
[357.33175659 225.29519653]
[371.88961792 228.93406677]
[386.16860962 233.54742432]
[400.10360718 239.11424255]
[413.63098145 245.60910034]
[426.68899536 253.00238037]
[439.21813965 261.26034546]
[451.16119385 270.34530640]
[462.46365356 280.21582031]
[473.07397461 290.82684326]
[482.94375610 302.12997437]
[492.02795410 314.07360840]
[500.28509521 326.60327148]
[507.67752075 339.66177368]
[514.17150879 353.18957520]
[519.73742676 367.12490845]
[524.34985352 381.40420532]
[527.98773193 395.96234131]
[530.63452148 410.73281860]
[532.27813721 425.64828491]
[532.91107178 440.64071655]
[532.53039551 455.64163208]
[531.13781738 470.58264160]
[528.73980713 485.39556885]
[525.34729004 500.01281738]
[520.97564697 514.36767578]
[515.64489746 528.39465332]
[509.37933350 542.02972412]
[502.20755005 555.21069336]
[494.16232300 567.87750244]
[485.28027344 579.97222900]
[475.60198975 591.43969727]
[465.17160034 602.22766113]
[454.03674316 612.28686523]
[442.24816895 621.57141113]
[429.85968018 630.03894043]
[416.92785645 637.65075684]
[403.51162720 644.37219238]
[389.67224121 650.17260742]
[375.47283936 655.02545166]
[360.97821045 658.90863037]
[346.25451660 661.80438232]
[331.36892700 663.69958496]
[316.38934326 664.58551025]
[301.38409424 664.45819092]
[286.42172241 663.31811523]
[271.57043457 661.17053223]
[256.89801025 658.02520752]
[242.47138977 653.89654541]
[228.35641479 648.80340576]
[214.61747742 642.76892090]
[201.31727600 635.82073975]
[188.51649475 627.99047852]
[176.27354431 619.31390381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 146]
[28 145]
[29 144]
[30 143]
[34 142]
[35 141]
[36 140]
[37 139]
[39 137]
[41 135]
[42 134]
[44 133]
[45 132]
[46 131]
[50 130]
[51 129]
[52 128]
[53 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 121]
[62 120]
[63 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
