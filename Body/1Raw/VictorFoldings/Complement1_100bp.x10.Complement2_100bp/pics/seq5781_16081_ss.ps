%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[101.54682159 490.16030884]
[93.07714844 477.77084351]
[85.60565948 464.75506592]
[79.17841339 451.19317627]
[73.83503723 437.16882324]
[69.60848236 422.76846313]
[66.52480316 408.08087158]
[64.60301208 393.19662476]
[63.85495758 378.20748901]
[64.28524780 363.20587158]
[65.89124298 348.28424072]
[68.66302490 333.53460693]
[72.58351135 319.04794312]
[77.62853241 304.91351318]
[83.76698303 291.21850586]
[90.96101379 278.04730225]
[99.16627502 265.48117065]
[108.33217621 253.59756470]
[118.40220642 242.46972656]
[129.31427002 232.16629028]
[141.00111389 222.75077820]
[153.39065552 214.28123474]
[145.92291260 201.27227783]
[138.45516968 188.26332092]
[130.98744202 175.25437927]
[123.51969147 162.24542236]
[116.05194855 149.23646545]
[109.67361450 162.81280518]
[95.11855316 166.43911743]
[83.11621857 157.44223022]
[82.51428223 142.45431519]
[93.75646973 132.52391052]
[108.55410767 134.97038269]
[102.07460785 121.44203186]
[95.59511566 107.91368866]
[92.17609406 106.12968445]
[89.56003571 102.84729767]
[88.39849854 98.45891571]
[89.14351654 93.63348389]
[83.27455139 79.82930756]
[77.40559387 66.02513123]
[62.43995667 55.29613876]
[65.24651337 37.97303009]
[59.17267990 24.25776291]
[53.09884644 10.54249668]
[47.02501297 -3.17277002]
[40.95117950 -16.88803673]
[26.83991432 -11.78343487]
[12.40694427 -7.67562485]
[-2.27741456 -4.58461857]
[-17.14162254 -2.52547574]
[-32.11325836 -1.50822842]
[-47.11938477 -1.53783250]
[-62.08689499 -2.61414361]
[-76.94286346 -4.73191833]
[-91.61491394 -7.88083839]
[-106.03156281 -12.04556370]
[-120.12257385 -17.20580292]
[-133.81930542 -23.33641434]
[-147.05500793 -30.40753365]
[-159.76521301 -38.38470840]
[-171.88800049 -47.22907257]
[-183.36430359 -56.89753723]
[-194.13821411 -67.34300232]
[-204.15722656 -78.51457977]
[-213.37254333 -90.35783386]
[-221.73925781 -102.81506348]
[-229.21662903 -115.82559204]
[-235.76820374 -129.32601929]
[-241.36207581 -143.25057983]
[-245.97099304 -157.53143311]
[-249.57247925 -172.09899902]
[-252.14901733 -186.88229370]
[-253.68804932 -201.80932617]
[-254.18206787 -216.80734253]
[-253.62866211 -231.80329895]
[-252.03053284 -246.72410583]
[-249.39547729 -261.49710083]
[-245.73632812 -276.05029297]
[-241.07089233 -290.31277466]
[-235.42193604 -304.21508789]
[-228.81694031 -317.68945312]
[-221.28811646 -330.67025757]
[-212.87213135 -343.09426880]
[-203.60998535 -354.90093994]
[-193.54681396 -366.03274536]
[-182.73162842 -376.43548584]
[-171.21713257 -386.05841064]
[-159.05941772 -394.85470581]
[-146.31771851 -402.78149414]
[-133.05412292 -409.80014038]
[-119.33322144 -415.87646484]
[-105.22188568 -420.98086548]
[-90.78885651 -425.08847046]
[-76.10445404 -428.17926025]
[-61.24021530 -430.23818970]
[-46.26856232 -431.25521851]
[-31.26243782 -431.22540283]
[-16.29494476 -430.14889526]
[-1.43900871 -428.03088379]
[13.23299503 -424.88177490]
[27.64958572 -420.71682739]
[41.74052429 -415.55639648]
[55.43716431 -409.42559814]
[68.67277527 -402.35427856]
[81.38286591 -394.37692261]
[93.50552368 -385.53237915]
[104.98168945 -375.86373901]
[115.75543976 -365.41812134]
[125.77429962 -354.24642944]
[134.98944092 -342.40301514]
[143.35598755 -329.94567871]
[150.83316040 -316.93505859]
[157.38455200 -303.43450928]
[162.97822571 -289.50988770]
[167.58692932 -275.22897339]
[171.18821716 -260.66134644]
[173.76454163 -245.87800598]
[175.30335999 -230.95095825]
[175.79714966 -215.95292664]
[175.24353027 -200.95698547]
[173.64520264 -186.03619385]
[171.00993347 -171.26324463]
[167.35057068 -156.71011353]
[162.68493652 -142.44769287]
[157.03576660 -128.54547119]
[150.43058777 -115.07118225]
[142.90158081 -102.09047699]
[134.48541260 -89.66659546]
[125.22310638 -77.86006165]
[115.15976715 -66.72839355]
[104.34443665 -56.32582855]
[92.82980347 -46.70304489]
[80.67196655 -37.90692902]
[67.93015289 -29.98033142]
[54.66644669 -22.96187019]
[60.74028015 -9.24660397]
[66.81410980 4.46866274]
[72.88794708 18.18392944]
[78.96178436 31.89919662]
[90.12951660 36.54767227]
[95.30197144 47.92437744]
[91.20977020 60.15616989]
[97.07872772 73.96034241]
[102.94769287 87.76451874]
[109.12345886 101.43418884]
[115.60295868 114.96253967]
[122.08245087 128.49089050]
[129.06089783 141.76872253]
[136.52864075 154.77767944]
[143.99638367 167.78663635]
[151.46412659 180.79559326]
[158.93186951 193.80453491]
[166.39961243 206.81349182]
[179.96128845 200.38583374]
[193.98548889 195.04202271]
[208.38571167 190.81503296]
[223.07319641 187.73089600]
[237.95738220 185.80865479]
[252.94650269 185.06013489]
[267.94815063 185.48997498]
[282.86984253 187.09550476]
[297.61953735 189.86683655]
[312.10632324 193.78688049]
[326.24090576 198.83146667]
[339.93612671 204.96949768]
[353.10751343 212.16313171]
[365.67388916 220.36801147]
[377.55780029 229.53353882]
[388.68594360 239.60322571]
[398.98971558 250.51498413]
[408.40557861 262.20153809]
[416.87551880 274.59082031]
[424.34725952 287.60644531]
[430.77478027 301.16821289]
[436.11843872 315.19244385]
[440.34530640 329.59271240]
[443.42929077 344.28024292]
[445.35137939 359.16445923]
[446.09973145 374.15359497]
[445.66973877 389.15521240]
[444.06405640 404.07687378]
[441.29257202 418.82656860]
[437.37240601 433.31332397]
[432.32766724 447.44784546]
[426.18948364 461.14297485]
[418.99572754 474.31430054]
[410.79071045 486.88061523]
[401.62506104 498.76440430]
[391.55526733 509.89245605]
[380.64340210 520.19610596]
[368.95675659 529.61187744]
[356.56738281 538.08166504]
[343.55166626 545.55328369]
[329.98983765 551.98065186]
[315.96554565 557.32421875]
[301.56524658 561.55090332]
[286.87768555 564.63470459]
[271.99346924 566.55664062]
[257.00433350 567.30487061]
[242.00268555 566.87475586]
[227.08103943 565.26892090]
[212.33139038 562.49725342]
[197.84468079 558.57690430]
[183.71020508 553.53204346]
[170.01512146 547.39373779]
[156.84387207 540.19982910]
[144.27764893 531.99468994]
[132.39393616 522.82891846]
[121.26600647 512.75903320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[33 148]
[34 147]
[35 146]
[39 145]
[40 144]
[41 143]
[43 140]
[44 139]
[45 138]
[46 137]
[47 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
