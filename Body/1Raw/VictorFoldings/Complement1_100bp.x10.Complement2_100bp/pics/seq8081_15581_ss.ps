%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[118.77272034 621.96478271]
[109.37661743 610.26300049]
[100.89241028 597.88415527]
[93.36871338 584.89916992]
[86.84860229 571.38226318]
[81.36944580 557.41101074]
[76.96260834 543.06536865]
[73.65334320 528.42755127]
[71.46060181 513.58135986]
[70.39694214 498.61184692]
[70.46846771 483.60479736]
[71.67475891 468.64608765]
[74.00890350 453.82150269]
[77.45754242 439.21585083]
[82.00091553 424.91287231]
[87.61299896 410.99447632]
[94.26164246 397.54037476]
[101.90876770 384.62765503]
[110.51057434 372.33023071]
[120.01779175 360.71859741]
[130.37594604 349.85922241]
[141.52574158 339.81433105]
[153.40327454 330.64147949]
[165.94053650 322.39315796]
[158.66729736 309.27447510]
[151.39407349 296.15576172]
[144.12084961 283.03707886]
[137.54107666 296.51693726]
[122.93363953 299.92614746]
[111.06658936 290.75158691]
[110.68786621 275.75634766]
[122.07666016 265.99441528]
[136.83622742 268.66094971]
[130.55886841 255.03762817]
[124.28150940 241.41430664]
[118.00415039 227.79098511]
[111.72678375 214.16767883]
[111.11074829 229.15501404]
[106.35184479 243.38009644]
[97.82537079 255.72105408]
[86.20377350 265.20465088]
[72.40356445 271.08294678]
[57.51309967 272.89233398]
[42.70669556 270.49017334]
[29.15204811 264.06588745]
[17.91813469 254.12611389]
[9.89090729 241.45474243]
[5.70342827 227.05110168]
[5.68593836 212.05110168]
[9.83981800 197.63774109]
[17.83747292 184.94767761]
[29.04817772 174.98173523]
[42.58780670 168.52584839]
[57.38856888 166.08915710]
[72.28321838 167.86384583]
[86.09709167 173.70994568]
[97.74077606 183.16639709]
[106.29756165 195.49053955]
[104.29354858 180.62501526]
[92.83441162 167.33384705]
[99.96988678 150.35838318]
[97.74476624 135.52433777]
[95.51965332 120.69029236]
[82.02717590 111.18656158]
[79.45758057 94.88426208]
[89.37253571 81.69102478]
[86.92680359 66.89175415]
[77.04294586 54.53780746]
[82.60154724 40.71929932]
[72.71768951 28.36535454]
[78.27628326 14.54684258]
[75.83055878 -0.25242844]
[73.38483429 -15.05169964]
[65.48289490 -2.30181932]
[51.63991165 3.47501445]
[37.01897049 0.12418617]
[27.07332039 -11.10452843]
[25.51244164 -26.02309608]
[32.91850662 -39.06726074]
[46.52923203 -45.37186813]
[61.26815796 -42.58546066]
[71.63854218 -31.74624634]
[70.96875763 -46.73128510]
[70.29897308 -61.71632385]
[69.62918091 -76.70136261]
[68.84786224 -91.68099976]
[67.95504761 -106.65440369]
[67.06223297 -121.62781525]
[52.15273666 -123.67553711]
[37.92931366 -128.59289551]
[24.93867302 -136.19090271]
[13.68014240 -146.17747498]
[4.58646870 -158.16877747]
[-1.99281192 -171.70388794]
[-5.80480957 -186.26255798]
[-6.70300055 -201.28518677]
[-4.65286160 -216.19435120]
[0.26680577 -230.41697693]
[7.86690283 -243.40638733]
[17.85530281 -254.66329956]
[29.84807587 -263.75503540]
[43.38425446 -270.33212280]
[57.94354248 -274.14178467]
[72.96631622 -275.03753662]
[87.87515259 -272.98498535]
[102.09697723 -268.06301880]
[115.08515930 -260.46081543]
[126.34045410 -250.47058105]
[135.43025208 -238.47634888]
[142.00514221 -224.93910217]
[145.81243896 -210.37919617]
[146.70576477 -195.35627747]
[144.65080261 -180.44776917]
[139.72651672 -166.22674561]
[132.12222290 -153.23979187]
[122.13018036 -141.98611450]
[110.13446045 -132.89826965]
[96.59615326 -126.32555389]
[82.03563690 -122.52062988]
[82.92845154 -107.54721832]
[83.82126617 -92.57381439]
[87.35732269 -86.08396912]
[84.61421967 -77.37114716]
[85.28401184 -62.38610840]
[85.95379639 -47.40106964]
[86.62358093 -32.41603088]
[88.18410492 -17.49742699]
[90.62982941 -2.69815588]
[93.07555389 12.10111523]
[102.78447723 23.39651680]
[97.40081787 38.27357101]
[107.10974121 49.56896973]
[101.72607422 64.44602966]
[104.17180634 79.24530029]
[115.28055573 85.34851074]
[120.91165161 96.70387268]
[119.04649353 109.24081421]
[110.35369873 118.46517181]
[112.57881165 133.29922485]
[114.80393219 148.13325500]
[124.69345093 156.41337585]
[126.24136353 168.81448364]
[119.15908051 178.62100220]
[121.16309357 193.48652649]
[125.35010529 207.89031982]
[131.62745667 221.51362610]
[137.90483093 235.13694763]
[144.18218994 248.76026917]
[150.45954895 262.38357544]
[157.23953247 275.76385498]
[164.51277161 288.88253784]
[171.78599548 302.00125122]
[179.05921936 315.11993408]
[192.69688416 308.85641479]
[206.76919556 303.64224243]
[221.19554138 299.50729370]
[235.89329529 296.47521973]
[250.77825928 294.56341553]
[265.76519775 293.78283691]
[280.76824951 294.13790894]
[295.70144653 295.62667847]
[310.47930908 298.24053955]
[325.01715088 301.96456909]
[339.23171997 306.77740479]
[353.04159546 312.65148926]
[366.36764526 319.55319214]
[379.13357544 327.44296265]
[391.26626587 336.27560425]
[402.69616699 346.00054932]
[413.35784912 356.56207275]
[423.19024658 367.89968872]
[432.13702393 379.94842529]
[440.14694214 392.63931274]
[447.17413330 405.89965820]
[453.17831421 419.65344238]
[458.12512207 433.82196045]
[461.98620605 448.32400513]
[464.73944092 463.07653809]
[466.36907959 477.99502563]
[466.86578369 492.99404907]
[466.22668457 507.98767090]
[464.45547485 522.89001465]
[461.56228638 537.61578369]
[457.56369019 552.08050537]
[452.48257446 566.20141602]
[446.34805298 579.89758301]
[439.19528198 593.09057617]
[431.06524658 605.70483398]
[422.00445557 617.66809082]
[412.06484985 628.91180420]
[401.30334473 639.37164307]
[389.78161621 648.98760986]
[377.56564331 657.70465088]
[364.72537231 665.47290039]
[351.33438110 672.24774170]
[337.46936035 677.99041748]
[323.20971680 682.66809082]
[308.63717651 686.25390625]
[293.83517456 688.72735596]
[278.88848877 690.07421875]
[263.88275146 690.28686523]
[248.90390015 689.36401367]
[234.03775024 687.31097412]
[219.36946106 684.13946533]
[204.98301697 679.86773682]
[190.96086121 674.52014160]
[177.38328552 668.12744141]
[164.32807922 660.72613525]
[151.87001038 652.35870361]
[140.08044434 643.07305908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 153]
[25 152]
[26 151]
[27 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[58 144]
[59 143]
[61 140]
[62 139]
[63 138]
[66 134]
[67 133]
[69 131]
[71 129]
[72 128]
[73 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 121]
[87 120]
[88 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
