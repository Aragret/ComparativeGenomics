%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[8.72423172 723.75891113]
[0.03009069 736.04296875]
[-10.89370537 746.39465332]
[-23.62727547 754.41601562]
[-37.68117523 759.79876709]
[-52.51520920 762.33599854]
[-67.55919647 761.93023682]
[-82.23488617 758.59704590]
[-95.97818756 752.46447754]
[-108.26084137 743.76837158]
[-118.61073303 732.84289551]
[-126.63005066 720.10803223]
[-132.01054382 706.05328369]
[-134.54539490 691.21881104]
[-134.13717651 676.17486572]
[-130.80158997 661.49975586]
[-124.66683197 647.75744629]
[-115.96871948 635.47619629]
[-105.04157257 625.12805176]
[-92.30540466 617.11083984]
[-78.24976349 611.73260498]
[-63.41490936 609.20013428]
[-48.37105179 609.61077881]
[-45.04879379 594.98333740]
[-41.72653580 580.35589600]
[-38.40427399 565.72839355]
[-35.08201599 551.10095215]
[-31.75975609 536.47351074]
[-28.43749619 521.84600830]
[-30.17954254 517.39916992]
[-29.14661026 511.81082153]
[-24.79242325 506.83560181]
[-21.03612137 492.31356812]
[-17.27982140 477.79150391]
[-13.52352047 463.26943970]
[-9.76722050 448.74737549]
[-22.63078880 441.11154175]
[-32.83181000 430.14932251]
[-39.53730774 416.74325562]
[-42.19621277 401.97604370]
[-40.58462143 387.04290771]
[-34.82464981 373.15496826]
[-25.37520027 361.44104004]
[-12.99542713 352.85580444]
[1.31625152 348.10205078]
[16.40267754 347.57315063]
[20.15897751 333.05108643]
[23.80706596 318.50146484]
[27.34673882 303.92510986]
[30.88641167 289.34872437]
[34.42608261 274.77233887]
[29.91065598 260.57867432]
[40.68598175 248.99407959]
[44.22565460 234.41770935]
[47.76532745 219.84133911]
[51.30499649 205.26495361]
[54.84466934 190.68858337]
[43.70231247 200.73088074]
[29.19248199 204.53414917]
[14.55670834 201.24870300]
[3.06466293 191.60853577]
[-2.71630239 177.76727295]
[-1.49470520 162.81709290]
[6.45654678 150.09791565]
[19.36112213 142.45121765]
[34.33610916 141.58531189]
[48.03605270 147.69361877]
[57.40035629 159.41156006]
[60.33700180 174.12130737]
[66.20596313 160.31712341]
[72.07492828 146.51295471]
[69.93418121 131.77299500]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[109.61062622 58.22654724]
[114.22463226 43.95381546]
[117.54689026 29.32635498]
[120.86915588 14.69889450]
[124.19141388 0.07143430]
[126.08470154 -14.80860043]
[118.76171875 -28.83302307]
[126.87452698 -41.32428360]
[127.32112885 -56.31763458]
[127.76773834 -71.31098175]
[120.44474792 -85.33540344]
[128.55755615 -97.82666779]
[129.00416565 -112.82001495]
[129.33914185 -127.81627655]
[129.56246948 -142.81462097]
[122.03148651 -156.72845459]
[129.95742798 -169.33911133]
[130.18075562 -184.33746338]
[130.40408325 -199.33580017]
[130.62741089 -214.33413696]
[116.37350464 -219.44343567]
[104.55246735 -228.90609741]
[96.44655609 -241.69566345]
[92.93503571 -256.42480469]
[94.39881134 -271.49584961]
[100.67910004 -285.27398682]
[111.09466553 -296.26464844]
[124.51570129 -303.27566528]
[139.48640442 -305.54653931]
[154.38285828 -302.83093262]
[167.58920288 -295.42343140]
[177.67291260 -284.12753296]
[183.54019165 -270.16851807]
[184.55459595 -255.06057739]
[180.60609436 -240.44250488]
[172.12298584 -227.89996338]
[160.02545166 -218.79345703]
[145.62574768 -214.11080933]
[145.40242004 -199.11247253]
[145.17909241 -184.11413574]
[144.95576477 -169.11578369]
[152.50271606 -156.27473450]
[144.56080627 -142.59129333]
[144.33747864 -127.59294891]
[147.38104248 -120.85807800]
[143.99751282 -112.37341309]
[143.55090332 -97.38006592]
[150.90583801 -84.42806244]
[142.76109314 -70.86437988]
[142.31448364 -55.87102890]
[141.86787415 -40.87767792]
[149.22280884 -27.92568016]
[141.07804871 -14.36199474]
[149.30743408 -26.90302086]
[161.88200378 -35.08104706]
[176.68273926 -37.51793671]
[191.21543884 -33.80302811]
[203.03109741 -24.56235123]
[210.13856506 -11.35311794]
[211.34011841 3.59868002]
[206.43327332 17.77340317]
[196.24490356 28.78236198]
[182.49194336 34.77035522]
[167.49200439 34.72829437]
[153.77282715 28.66327667]
[143.64636230 17.59735680]
[138.81887817 3.39369392]
[135.49661255 18.02115440]
[132.17434692 32.64861298]
[128.85209656 47.27607346]
[139.57135010 36.78334427]
[153.75375366 31.89870453]
[168.66087341 33.56530380]
[181.41439819 41.46134949]
[189.55183411 54.06223679]
[191.50193787 68.93493652]
[186.88819885 83.20775604]
[176.60144043 94.12483978]
[162.62789917 99.57826996]
[147.66561890 98.51508331]
[134.60360718 91.14054871]
[125.96391296 78.87858582]
[123.41480255 64.09551239]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[97.97929382 143.69660950]
[85.87910461 152.38191223]
[80.01013947 166.18608093]
[74.14118195 179.99026489]
[69.42104340 194.22825623]
[65.88137054 208.80462646]
[62.34170151 223.38099670]
[58.80202866 237.95738220]
[55.26235580 252.53375244]
[59.52460480 267.77001953]
[49.00245667 278.31201172]
[45.46278763 292.88839722]
[41.92311478 307.46478271]
[38.38344193 322.04113770]
[39.39939117 331.11889648]
[34.68103790 336.80740356]
[30.92473602 351.32946777]
[43.86256409 359.10714722]
[54.07426071 370.20416260]
[60.73853302 383.71536255]
[63.32295227 398.54199219]
[61.62649918 413.48098755]
[55.79515076 427.32266235]
[46.30936432 438.94851685]
[33.94452286 447.42178345]
[19.70753098 452.06283569]
[4.75483894 452.50369263]
[0.99853837 467.02572632]
[-2.75776243 481.54779053]
[-6.51406288 496.06985474]
[-10.27036381 510.59191895]
[-13.81003571 525.16827393]
[-17.13229561 539.79577637]
[-20.45455551 554.42321777]
[-23.77681541 569.05065918]
[-27.09907341 583.67816162]
[-30.42133331 598.30560303]
[-33.74359512 612.93304443]
[-19.99830818 619.06115723]
[-7.71284103 627.75329590]
[2.64058900 638.67541504]
[10.66402340 651.40765381]
[16.04906273 665.46069336]
[18.58871841 680.29431152]
[18.18537712 695.33837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[46 182]
[47 181]
[48 179]
[49 178]
[50 177]
[51 176]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[69 169]
[70 168]
[71 167]
[73 165]
[74 164]
[76 162]
[77 161]
[78 160]
[79 147]
[80 146]
[81 145]
[82 144]
[83 130]
[85 128]
[86 127]
[87 126]
[89 124]
[90 123]
[91 121]
[92 120]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
