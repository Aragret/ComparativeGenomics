%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[86.07548523 837.51080322]
[71.10594940 836.50256348]
[56.20968628 834.71228027]
[41.42753601 832.14489746]
[26.80001450 828.80731201]
[12.36721420 824.70880127]
[-1.83130610 819.86053467]
[-15.75662899 814.27581787]
[-29.37058640 807.96997070]
[-42.63586044 800.96026611]
[-55.51609802 793.26586914]
[-67.97599030 784.90795898]
[-79.98138428 775.90942383]
[-91.49937439 766.29486084]
[-102.49839020 756.09069824]
[-112.94829559 745.32482910]
[-122.82042694 734.02685547]
[-132.08773804 722.22766113]
[-140.72483826 709.95965576]
[-148.70803833 697.25640869]
[-156.01544189 684.15277100]
[-162.62705994 670.68469238]
[-168.52473450 656.88897705]
[-173.69232178 642.80352783]
[-178.11564636 628.46697998]
[-181.78259277 613.91851807]
[-184.68310547 599.19812012]
[-186.80923462 584.34606934]
[-188.15515137 569.40307617]
[-188.71716309 554.41015625]
[-188.49374390 539.40838623]
[-187.48548889 524.43884277]
[-185.69517517 509.54257202]
[-183.12770081 494.76043701]
[-179.79010010 480.13293457]
[-175.69154358 465.70013428]
[-170.84323120 451.50164795]
[-165.25846863 437.57632446]
[-158.95257568 423.96240234]
[-151.94282532 410.69714355]
[-144.24842834 397.81692505]
[-135.89047241 385.35705566]
[-126.89186859 373.35168457]
[-117.27729034 361.83374023]
[-107.07308197 350.83474731]
[-96.30721283 340.38485718]
[-85.00919342 330.51275635]
[-73.20999146 321.24548340]
[-60.94194412 312.60842896]
[-48.23868561 304.62527466]
[-35.13502502 297.31790161]
[-21.66688538 290.70632935]
[-7.87117958 284.80868530]
[6.21427870 279.64114380]
[20.55088234 275.21786499]
[35.09933472 271.55096436]
[49.81975937 268.65048218]
[64.67181396 266.52441406]
[79.61477661 265.17852783]
[94.60770416 264.61657715]
[94.83103180 249.61822510]
[95.05435944 234.61988831]
[95.05435944 219.61988831]
[94.83103180 204.62155151]
[94.60770416 189.62321472]
[94.38437653 174.62487793]
[94.16104889 159.62654114]
[93.82607269 144.63027954]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[83.75152588 100.60508728]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[89.85394287 40.96748734]
[89.18415833 25.98244858]
[87.84592438 11.04226303]
[78.33426666 -1.60048342]
[84.30182648 -15.24736881]
[82.29781342 -30.11289597]
[80.29380035 -44.97842407]
[78.28978729 -59.84395218]
[68.77813721 -72.48670197]
[74.74569702 -86.13358307]
[59.71984863 -86.81449890]
[45.05710220 -90.16764832]
[31.22879982 -96.08523560]
[18.67947006 -104.37704468]
[7.81251812 -114.77651978]
[-1.02272725 -126.94937134]
[-7.54224920 -140.50427246]
[-11.53647232 -155.00552368]
[-12.87699890 -169.98693848]
[-11.52073669 -184.96693420]
[-7.51128292 -199.46397400]
[-0.97752637 -213.01202393]
[7.87050056 -225.17558289]
[18.74836922 -235.56364441]
[31.30640411 -243.84225464]
[45.14091110 -249.74531555]
[59.80717468 -253.08306885]
[74.83373260 -253.74819946]
[89.73754120 -251.71932983]
[104.03950500 -247.06169128]
[117.27987671 -239.92500305]
[129.03303528 -230.53866577]
[138.92115784 -219.20443726]
[146.62638855 -206.28665161]
[151.90103149 -192.20056152]
[154.57553101 -177.39898682]
[154.56391907 -162.35772705]
[151.86656189 -147.56028748]
[146.57015991 -133.48236084]
[138.84500122 -120.57649231]
[128.93937683 -109.25754547]
[117.17174530 -99.88938141]
[103.92036438 -92.77314758]
[89.61122894 -88.13759613]
[98.97953796 -76.55813599]
[93.15531921 -61.84796524]
[95.15933228 -46.98243713]
[97.16334534 -32.11690903]
[99.16735840 -17.25138283]
[108.53566742 -5.67191792]
[102.71144867 9.03824902]
[112.64350891 -2.20249200]
[127.60579681 -3.26546454]
[139.02723694 6.45825052]
[140.36511230 21.39846802]
[130.85302734 32.99675369]
[115.93993378 34.60908127]
[104.16919708 25.31266212]
[104.83898163 40.29770279]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[114.95397186 93.61582184]
[115.38739014 105.25426483]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[108.81941986 144.18368530]
[112.20294952 152.66835022]
[109.15938568 159.40321350]
[109.38271332 174.40155029]
[109.60604095 189.39988708]
[109.82936859 204.39822388]
[110.05269623 219.39656067]
[113.10987854 225.25874329]
[112.79489899 230.93305969]
[110.05269623 234.84321594]
[109.82936859 249.84155273]
[109.60604095 264.83990479]
[124.57559204 265.84802246]
[139.47186279 267.63818359]
[154.25402832 270.20553589]
[168.88156128 273.54299927]
[183.31439209 277.64144897]
[197.51293945 282.48962402]
[211.43829346 288.07424927]
[225.05229187 294.38003540]
[238.31761169 301.38964844]
[251.19789124 309.08392334]
[263.65783691 317.44177246]
[275.66326904 326.44027710]
[287.18133545 336.05474854]
[298.18041992 346.25885010]
[308.63037109 357.02462769]
[318.50259399 368.32257080]
[327.76995850 380.12167358]
[336.40713501 392.38964844]
[344.39041138 405.09283447]
[351.69790649 418.19644165]
[358.30960083 431.66452026]
[364.20736694 445.46017456]
[369.37503052 459.54556274]
[373.79843140 473.88214111]
[377.46548462 488.43054199]
[380.36608887 503.15093994]
[382.49227905 518.00299072]
[383.83828735 532.94592285]
[384.40042114 547.93884277]
[384.17706299 562.94067383]
[383.16891479 577.91021729]
[381.37869263 592.80645752]
[378.81130981 607.58862305]
[375.47378540 622.21612549]
[371.37530518 636.64898682]
[366.52709961 650.84747314]
[360.94241333 664.77282715]
[354.63659668 678.38684082]
[347.62692261 691.65209961]
[339.93261719 704.53234863]
[331.57473755 716.99230957]
[322.57620239 728.99768066]
[312.96170044 740.51574707]
[302.75753784 751.51477051]
[291.99172974 761.96472168]
[280.69378662 771.83685303]
[268.89462280 781.10424805]
[256.62664795 789.74133301]
[243.92343140 797.72460938]
[230.81980896 805.03204346]
[217.35171509 811.64367676]
[203.55604553 817.54144287]
[189.47061157 822.70904541]
[175.13403320 827.13244629]
[160.58560181 830.79943848]
[145.86520386 833.69995117]
[131.01316833 835.82617188]
[116.07019806 837.17211914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 152]
[61 151]
[62 150]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 141]
[69 140]
[70 139]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[77 125]
[79 123]
[80 122]
[81 121]
[82 120]
[84 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
