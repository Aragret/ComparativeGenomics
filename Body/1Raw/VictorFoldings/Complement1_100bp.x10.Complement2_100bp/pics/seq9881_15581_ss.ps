%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[144.19580078 627.53820801]
[134.27241516 616.28015137]
[125.22887421 604.30383301]
[117.11699677 591.67785645]
[109.98324585 578.47454834]
[103.86847687 564.76959229]
[98.80772400 550.64135742]
[94.82996368 536.17089844]
[91.95798492 521.44104004]
[90.20824432 506.53613281]
[89.59075928 491.54159546]
[90.10906219 476.54330444]
[91.76020050 461.62716675]
[94.53469086 446.87863159]
[98.41666412 432.38214111]
[103.38387299 418.22079468]
[109.40787506 404.47564697]
[116.45414734 391.22546387]
[124.48234558 378.54614258]
[133.44648743 366.51028442]
[143.29519653 355.18685913]
[153.97209167 344.64071655]
[165.41601562 334.93225098]
[177.56138611 326.11706543]
[190.33866882 318.24569702]
[183.45925903 304.91629028]
[176.57984924 291.58685303]
[173.95343018 290.60702515]
[171.55688477 288.52777100]
[169.81091309 285.43148804]
[169.09863281 281.55114746]
[169.71452332 277.25292969]
[163.64068604 263.53765869]
[157.56684875 249.82238770]
[142.85316467 240.25814819]
[144.96659851 221.96566772]
[138.68922424 208.34236145]
[132.41186523 194.71903992]
[126.13450623 181.09571838]
[113.78108215 172.77453613]
[115.03302002 157.00294495]
[108.75566101 143.37962341]
[102.47830200 129.75630188]
[98.93679047 144.33222961]
[88.15085602 154.75642395]
[73.46263123 157.79881287]
[59.42343140 152.51669312]
[50.38344574 140.54678345]
[49.14381790 125.59809875]
[56.08865356 112.30264282]
[69.06603241 104.78015137]
[84.05475616 105.36156464]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[71.64557648 33.17469025]
[67.13794708 18.86800194]
[62.52394104 4.59526920]
[57.90993118 -9.67746449]
[51.98675537 4.10353613]
[39.15386963 11.86994076]
[24.19762230 10.72507286]
[12.69632816 1.09593904]
[8.93968201 -13.42603111]
[14.32882118 -27.42450142]
[26.85372925 -35.67839050]
[41.84292603 -35.10919952]
[53.70647430 -25.92826080]
[50.82120132 -40.64815140]
[47.93592834 -55.36804199]
[37.68862915 -67.42223358]
[42.83333588 -81.40011597]
[32.58395004 -89.23037720]
[30.48384094 -101.55000305]
[37.12118149 -111.66297913]
[34.45538712 -126.42420197]
[24.38869095 -138.62962341]
[29.74093628 -152.52935791]
[14.70735264 -152.32632446]
[-0.15458731 -154.60066223]
[-14.43943882 -159.29031372]
[-27.75750160 -166.26736450]
[-39.74544525 -175.34144592]
[-50.07623672 -186.26502991]
[-58.46804047 -198.74009705]
[-64.69191742 -212.42634583]
[-68.57808685 -226.95037842]
[-70.02052307 -241.91598511]
[-68.97987366 -256.91488647]
[-65.48453522 -271.53787231]
[-59.62985611 -285.38607788]
[-51.57556152 -298.08169556]
[-41.54137802 -309.27832031]
[-29.80104256 -318.67059326]
[-16.67484283 -326.00222778]
[-2.52086997 -331.07321167]
[12.27474594 -333.74520874]
[27.30836868 -333.94534302]
[42.16986847 -331.66815186]
[56.45381546 -326.97573853]
[69.77053833 -319.99612427]
[81.75672913 -310.91973877]
[92.08541870 -299.99417114]
[100.47481537 -287.51745605]
[106.69606018 -273.83001709]
[110.57942963 -259.30523682]
[112.01898193 -244.33937073]
[110.97544098 -229.34066772]
[107.47728729 -214.71833801]
[101.61994171 -200.87126160]
[93.56320190 -188.17721558]
[83.52686310 -176.98249817]
[71.78471375 -167.59251404]
[58.65710449 -160.26341248]
[44.50215530 -155.19514465]
[54.37817001 -144.04554749]
[49.21660233 -129.08999634]
[51.88239670 -114.32877350]
[63.92358398 -101.56254578]
[57.55322647 -84.28538513]
[67.59414673 -73.28406525]
[62.65581894 -58.25331497]
[65.54109192 -43.53342438]
[68.42636108 -28.81353188]
[72.18266296 -14.29147339]
[76.79667664 -0.01873996]
[81.41068268 14.25399303]
[86.45925903 19.65155792]
[85.98542786 28.77369118]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[116.10161591 123.47894287]
[122.37897491 137.10226440]
[128.65634155 150.72557068]
[141.45875549 160.02119446]
[139.75782776 174.81835938]
[146.03518677 188.44168091]
[152.31254578 202.06498718]
[158.58990479 215.68830872]
[170.39759827 220.87879944]
[175.34556580 232.35491943]
[171.28211975 243.74856567]
[177.35594177 257.46383667]
[183.42977905 271.17907715]
[189.90927124 284.70742798]
[196.78869629 298.03686523]
[203.66810608 311.36630249]
[217.48620605 305.51159668]
[231.70751953 300.71871948]
[246.25057983 297.01513672]
[261.03210449 294.42199707]
[275.96737671 292.95422363]
[290.97091675 292.62020874]
[305.95672607 293.42184448]
[320.83901978 295.35455322]
[335.53250122 298.40725708]
[349.95300293 302.56246948]
[364.01797485 307.79638672]
[377.64685059 314.07904053]
[390.76150513 321.37445068]
[403.28686523 329.64080811]
[415.15118408 338.83078003]
[426.28646851 348.89172363]
[436.62896729 359.76602173]
[446.11944580 371.39132690]
[454.70352173 383.70114136]
[462.33203125 396.62487793]
[468.96130371 410.08853149]
[474.55331421 424.01501465]
[479.07608032 438.32452393]
[482.50366211 452.93511963]
[484.81646729 467.76306152]
[486.00119019 482.72348022]
[486.05108643 497.73062134]
[484.96588135 512.69860840]
[482.75173950 527.54162598]
[479.42138672 542.17462158]
[474.99389648 556.51391602]
[469.49459839 570.47729492]
[462.95501709 583.98474121]
[455.41262817 596.95892334]
[446.91058350 609.32550049]
[437.49765015 621.01373291]
[427.22766113 631.95654297]
[416.15951538 642.09130859]
[404.35659790 651.35992432]
[391.88647461 659.70941162]
[378.82061768 667.09185791]
[365.23385620 673.46502686]
[351.20401001 678.79235840]
[336.81143188 683.04339600]
[322.13858032 686.19372559]
[307.26947021 688.22540283]
[292.28930664 689.12664795]
[277.28390503 688.89239502]
[262.33917236 687.52398682]
[247.54074097 685.02923584]
[232.97337341 681.42242432]
[218.72050476 676.72424316]
[204.86376953 670.96154785]
[191.48255920 664.16741943]
[178.65350342 656.38067627]
[166.45008850 647.64605713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 154]
[26 153]
[27 152]
[32 151]
[33 150]
[34 149]
[36 146]
[37 145]
[38 144]
[39 143]
[41 141]
[42 140]
[43 139]
[53 138]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 130]
[61 129]
[62 128]
[71 127]
[72 126]
[73 125]
[75 123]
[78 121]
[79 120]
[81 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
