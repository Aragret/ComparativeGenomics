%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[63.52924728 610.68920898]
[55.18232727 623.22491455]
[44.33544159 633.67285156]
[31.49592209 641.54431152]
[17.26428986 646.47125244]
[2.30618572 648.22320557]
[-12.67877102 646.71813965]
[-26.98970795 642.02655029]
[-39.95727539 634.36779785]
[-50.97495651 624.10015869]
[-59.52743530 611.70379639]
[-65.21469879 597.75860596]
[-67.77074432 582.91674805]
[-67.07601166 567.87243652]
[-63.16300201 553.32928467]
[-56.21473694 539.96759033]
[-46.55619431 528.41223145]
[-34.63912201 519.20367432]
[-21.02090263 512.77264404]
[-6.33848858 509.41989136]
[8.72139931 509.30227661]
[11.82551003 494.62698364]
[14.92961979 479.95169067]
[18.03372955 465.27639771]
[5.50988102 473.53189087]
[-9.40442181 471.93075562]
[-19.89056206 461.20504761]
[-21.15441322 446.25839233]
[-12.61816502 433.92419434]
[1.81552911 429.84149170]
[15.54777622 435.87683105]
[22.30060387 449.27279663]
[26.91461372 435.00006104]
[23.46736908 420.50985718]
[35.07447052 409.75878906]
[39.68848038 395.48605347]
[44.30249023 381.21331787]
[39.07575607 370.30422974]
[42.80295181 358.37564087]
[54.00658035 351.98489380]
[58.83258057 337.78244019]
[63.65857697 323.57998657]
[68.48457336 309.37753296]
[73.31056976 295.17507935]
[78.13657379 280.97262573]
[82.96257019 266.77017212]
[87.78856659 252.56770325]
[92.61456299 238.36524963]
[95.06028748 223.56597900]
[95.06028748 208.56597900]
[95.06028748 193.56597900]
[94.83695984 178.56764221]
[86.72415161 166.07638550]
[94.04714203 152.05195618]
[93.60053253 137.05860901]
[78.06612396 130.54830933]
[66.93157196 117.91012573]
[62.43041229 101.67924500]
[65.46557617 85.11151123]
[75.42820740 71.53035736]
[90.31984711 63.66009903]
[89.42703247 48.68669510]
[88.53421783 33.71328735]
[87.64140320 18.73988152]
[86.74858856 3.76647615]
[78.20359802 -9.54869652]
[85.16963959 -22.71393585]
[84.27682495 -37.68734360]
[83.38401031 -52.66074753]
[72.89008331 -67.79213715]
[81.35068512 -83.16696167]
[72.60840607 -96.35343933]
[79.37766266 -109.62093353]
[75.97698212 -115.29075623]
[75.95365906 -120.97375488]
[78.45825958 -125.04019928]
[77.78847504 -140.02523804]
[77.11869049 -155.01028442]
[76.44890594 -169.99531555]
[75.77912140 -184.98036194]
[64.39831543 -195.61590576]
[63.93252563 -210.82240295]
[74.14203644 -221.60671997]
[73.47225189 -236.59176636]
[72.80246735 -251.57679749]
[64.45667267 -265.01773071]
[71.61795044 -278.07778931]
[70.94816589 -293.06283569]
[70.27838135 -308.04788208]
[69.60859680 -323.03289795]
[68.93881226 -338.01794434]
[68.26902771 -353.00299072]
[59.92323303 -366.44390869]
[67.08451080 -379.50396729]
[52.45162582 -383.29473877]
[39.58705902 -391.23162842]
[29.63472176 -402.60891724]
[23.47957230 -416.41491699]
[21.66891861 -431.42199707]
[24.36376572 -446.29577637]
[31.32448769 -459.71368408]
[41.93214417 -470.48257446]
[55.24350739 -477.64489746]
[70.07493591 -480.56381226]
[85.10764313 -478.97973633]
[99.00491333 -473.03353882]
[110.53102112 -463.25396729]
[118.66107178 -450.51058960]
[122.67214966 -435.93655396]
[122.20758057 -420.82775879]
[117.30868530 -406.52767944]
[108.41106415 -394.30786133]
[96.30589294 -385.25488281]
[82.06954956 -380.17376709]
[90.36743927 -367.80465698]
[83.25406647 -353.67276001]
[83.92385101 -338.68774414]
[84.59363556 -323.70269775]
[85.26342010 -308.71765137]
[85.93320465 -293.73260498]
[86.60298920 -278.74758911]
[94.90087891 -266.37847900]
[87.78750610 -252.24658203]
[88.45729065 -237.26155090]
[89.12707520 -222.27650452]
[100.25800323 -212.44604492]
[101.15072632 -197.25862122]
[90.76416016 -185.65014648]
[91.43394470 -170.66510010]
[92.10372925 -155.68006897]
[92.77351379 -140.69502258]
[93.44329834 -125.70998383]
[94.33611298 -110.73657990]
[102.99859619 -98.62003326]
[96.30913544 -84.28260803]
[105.26748657 -76.15398407]
[106.31937408 -63.70098114]
[98.35741425 -53.55356216]
[99.25023651 -38.58015823]
[100.14305115 -23.60675240]
[108.62416840 -11.36257744]
[101.72199249 2.87366033]
[102.61480713 17.84706688]
[103.50762177 32.82047272]
[104.40043640 47.79387665]
[105.29325104 62.76728439]
[117.61412048 66.77295685]
[127.84453583 74.72203064]
[134.77033997 85.67111206]
[137.56958008 98.32075500]
[135.91004944 111.16969299]
[129.98869324 122.69300079]
[120.50825500 131.52308655]
[108.59388733 136.61199951]
[109.04048920 151.60534668]
[117.18524170 165.16903687]
[109.83031464 178.12103271]
[112.97443390 183.93705750]
[112.74397278 189.61543274]
[110.06028748 193.56597900]
[110.06028748 208.56597900]
[110.06028748 223.56597900]
[116.78005981 210.15536499]
[126.70198059 198.90567017]
[139.16798401 190.56307983]
[153.35121155 185.68089294]
[168.31098938 184.58296204]
[183.05503845 187.34207153]
[196.60546875 193.77525330]
[208.06353760 203.45579529]
[216.66923523 215.74162292]
[221.85180664 229.81788635]
[223.26751709 244.75093079]
[220.82243347 259.55029297]
[214.67875671 273.23443604]
[205.24397278 284.89569092]
[193.14384460 293.76062012]
[179.18093872 299.24124146]
[164.28135681 300.97406006]
[149.43334961 298.84411621]
[135.62171936 292.99270630]
[123.76255035 283.80795288]
[114.64241028 271.89901733]
[108.86621094 258.05575562]
[106.81701660 243.19125366]
[101.99102020 257.39370728]
[97.16502380 271.59616089]
[92.33902740 285.79861450]
[87.51303101 300.00106812]
[82.68702698 314.20352173]
[77.86103058 328.40597534]
[73.03503418 342.60842896]
[68.20903778 356.81088257]
[72.21404266 374.78424072]
[58.57522583 385.82733154]
[53.96121597 400.10006714]
[49.34720612 414.37280273]
[52.46442413 429.88388062]
[41.18734741 439.61407471]
[36.57333755 453.88681030]
[32.70903397 468.38049316]
[29.60492325 483.05578613]
[26.50081253 497.73110962]
[23.39670181 512.40637207]
[37.11910629 518.61199951]
[49.18639755 527.62280273]
[59.03416061 539.01733398]
[66.20179749 552.26269531]
[70.35407257 566.73931885]
[71.29676819 581.77014160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 204]
[22 203]
[23 202]
[24 201]
[32 200]
[33 199]
[35 197]
[36 196]
[37 195]
[40 193]
[41 192]
[42 191]
[43 190]
[44 189]
[45 188]
[46 187]
[47 186]
[48 185]
[49 162]
[50 161]
[51 160]
[52 157]
[54 155]
[55 154]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[67 140]
[68 139]
[69 138]
[71 135]
[73 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[83 125]
[84 124]
[85 123]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
