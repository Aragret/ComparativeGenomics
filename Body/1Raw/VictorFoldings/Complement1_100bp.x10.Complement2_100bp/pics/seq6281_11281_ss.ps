%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[124.72975922 420.71466064]
[118.15586090 407.22579956]
[112.48783112 393.33193970]
[107.75045013 379.09387207]
[103.96443939 364.57382202]
[101.14633942 349.83529663]
[99.30848694 334.94274902]
[98.45891571 319.96130371]
[98.60133362 304.95645142]
[99.73513031 289.99380493]
[101.85533142 275.13882446]
[104.95268250 260.45645142]
[109.01362610 246.01089478]
[114.02041626 231.86531067]
[119.95114899 218.08154297]
[126.77989960 204.71987915]
[134.47679138 191.83876038]
[143.00819397 179.49449158]
[152.33677673 167.74105835]
[141.22955322 157.65991211]
[130.12231445 147.57878113]
[119.01508331 137.49763489]
[123.85755920 151.69448853]
[123.62157440 166.69262695]
[118.33486176 180.73010254]
[108.61849976 192.15780640]
[95.61394501 199.63320923]
[80.84897614 202.27810669]
[66.05815125 199.78179932]
[52.97909164 192.43754578]
[43.14830780 181.10812378]
[37.72071075 167.12452698]
[37.33393097 152.12951660]
[42.03340530 137.88468933]
[51.26704788 126.06352234]
[63.95009232 118.05476379]
[78.59255219 114.79925537]
[93.47425079 116.67945862]
[106.84814453 123.47543335]
[98.43352509 111.05793762]
[89.92669678 98.70343018]
[81.32813263 86.41259003]
[72.72956848 74.12174988]
[64.13100433 61.83091354]
[46.85175323 59.10204697]
[37.08454895 44.99826813]
[40.47185898 28.52511024]
[26.12047958 21.86564255]
[24.94339371 7.01762104]
[16.16279030 -5.14383459]
[7.38218689 -17.30529022]
[-1.39841616 -29.46674538]
[-10.17901897 -41.62820053]
[-23.15283394 -34.07526016]
[-36.80450058 -27.83036041]
[-51.00254440 -22.95364761]
[-65.61022949 -19.49208641]
[-80.48686218 -17.47901535]
[-95.48918152 -16.93382263]
[-110.47270203 -17.86175728]
[-125.29310608 -20.25388527]
[-139.80767822 -24.08716583]
[-153.87661743 -29.32468224]
[-167.36444092 -35.91599274]
[-180.14125061 -43.79761887]
[-192.08398438 -52.89365387]
[-203.07763672 -63.11649323]
[-213.01632690 -74.36769104]
[-221.80432129 -86.53887939]
[-229.35700989 -99.51284027]
[-235.60162354 -113.16463470]
[-240.47805786 -127.36277771]
[-243.93933105 -141.97053528]
[-245.95210266 -156.84721375]
[-246.49699402 -171.84953308]
[-245.56875610 -186.83303833]
[-243.17633057 -201.65339661]
[-239.34275818 -216.16789246]
[-234.10496521 -230.23672485]
[-227.51338196 -243.72442627]
[-219.63150024 -256.50106812]
[-210.53523254 -268.44363403]
[-200.31216431 -279.43707275]
[-189.06077576 -289.37551880]
[-176.88941956 -298.16326904]
[-163.91529846 -305.71569824]
[-150.26338196 -311.96005249]
[-136.06513977 -316.83621216]
[-121.45732117 -320.29718018]
[-106.58060455 -322.30966187]
[-91.57826233 -322.85424805]
[-76.59478760 -321.92572021]
[-61.77447128 -319.53298950]
[-47.26005554 -315.69912720]
[-33.19131851 -310.46105957]
[-19.70375824 -303.86920166]
[-6.92726707 -295.98706055]
[5.01510525 -286.89056396]
[16.00834465 -276.66726685]
[25.94657898 -265.41567993]
[34.73409271 -253.24414062]
[42.28625488 -240.26988220]
[48.53033829 -226.61782837]
[53.40619659 -212.41949463]
[56.86688232 -197.81159973]
[58.87905884 -182.93484497]
[59.42335510 -167.93249512]
[58.49451828 -152.94903564]
[56.10150146 -138.12876892]
[52.26735306 -123.61443329]
[47.02899170 -109.54579926]
[40.43687057 -96.05837250]
[32.55447769 -83.28203583]
[23.45772743 -71.33985138]
[13.23422623 -60.34681320]
[1.98243642 -50.40880585]
[10.76303959 -38.24734879]
[19.54364204 -26.08589363]
[28.32424545 -13.92443752]
[37.10485077 -1.76298201]
[50.82817841 4.02661753]
[52.63331223 19.74450684]
[65.51605988 19.99812317]
[76.05786133 27.74102211]
[80.27742004 40.32695770]
[76.42184448 53.23234940]
[85.02040863 65.52318573]
[93.61897278 77.81402588]
[102.21753693 90.10486603]
[109.05133057 94.37942505]
[110.85102081 102.64331818]
[119.26564026 115.06081390]
[129.09622192 126.39040375]
[140.20346069 136.47154236]
[151.31068420 146.55268860]
[162.41792297 156.63381958]
[173.21495056 146.21318054]
[184.67709351 136.52890015]
[196.75419617 127.62334442]
[209.39349365 119.53543854]
[222.53967285 112.30056000]
[236.13528442 105.95034027]
[250.12084961 100.51255035]
[264.43521118 96.01097107]
[279.01580811 92.46527863]
[293.79888916 89.89099121]
[308.71975708 88.29934692]
[323.71319580 87.69731903]
[338.71362305 88.08753967]
[353.65548706 89.46829224]
[368.47344971 91.83354950]
[383.10266113 95.17296600]
[397.47918701 99.47193909]
[411.54016113 104.71166992]
[425.22409058 110.86923981]
[438.47113037 117.91773987]
[451.22338867 125.82633209]
[463.42507935 134.56044006]
[475.02282715 144.08186340]
[485.96594238 154.34898376]
[496.20657349 165.31690979]
[505.69995117 176.93765259]
[514.40454102 189.16041565]
[522.28228760 201.93173218]
[529.29870605 215.19580078]
[535.42321777 228.89457703]
[540.62890625 242.96817017]
[544.89312744 257.35504150]
[548.19720459 271.99230957]
[550.52661133 286.81591797]
[551.87121582 301.76104736]
[552.22515869 316.76242065]
[551.58691406 331.75436401]
[549.95922852 346.67132568]
[547.34918213 361.44812012]
[543.76824951 376.02011108]
[539.23205566 390.32354736]
[533.76049805 404.29592896]
[527.37744141 417.87615967]
[520.11077881 431.00482178]
[511.99237061 443.62451172]
[503.05761719 455.68005371]
[493.34567261 467.11874390]
[482.89895630 477.89056396]
[471.76315308 487.94836426]
[459.98699951 497.24822998]
[447.62191772 505.74945068]
[434.72204590 513.41491699]
[421.34375000 520.21099854]
[407.54556274 526.10803223]
[393.38778687 531.08026123]
[378.93234253 535.10595703]
[364.24243164 538.16741943]
[349.38232422 540.25134277]
[334.41696167 541.34863281]
[319.41183472 541.45440674]
[304.43249512 540.56823730]
[289.54446411 538.69403076]
[274.81286621 535.83996582]
[260.30212402 532.01849365]
[246.07565308 527.24633789]
[232.19567871 521.54443359]
[218.72290039 514.93762207]
[205.71623230 507.45480347]
[193.23252869 499.12875366]
[181.32641602 489.99584961]
[170.04992676 480.09600830]
[159.45237732 469.47256470]
[149.58012390 458.17193604]
[140.47631836 446.24356079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 136]
[20 135]
[21 134]
[22 133]
[39 132]
[40 131]
[41 129]
[42 128]
[43 127]
[44 126]
[47 122]
[49 120]
[50 119]
[51 118]
[52 117]
[53 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
