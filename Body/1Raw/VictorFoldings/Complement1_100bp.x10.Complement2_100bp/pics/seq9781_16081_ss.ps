%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[93.17330933 608.96734619]
[79.80072784 602.05657959]
[68.09323883 592.59509277]
[58.53024673 580.97033691]
[51.50335693 567.65844727]
[47.30031586 553.20440674]
[46.09323120 538.20013428]
[47.93153381 523.26007080]
[52.73994827 508.99597168]
[60.32157135 495.99197388]
[70.36593628 484.78057861]
[82.46174622 475.82086182]
[96.11367035 469.47973633]
[110.76268005 466.01687622]
[110.31607056 451.02352905]
[109.86946869 436.03018188]
[109.42285919 421.03683472]
[108.97624969 406.04348755]
[108.41804504 391.05386353]
[107.74826050 376.06881714]
[107.07846832 361.08377075]
[106.40868378 346.09875488]
[102.96965027 339.55697632]
[105.84216309 330.88595581]
[105.39556122 315.89260864]
[104.94895172 300.89926147]
[104.50234985 285.90591431]
[104.05574036 270.91256714]
[103.60913849 255.91920471]
[103.16252899 240.92585754]
[102.71591949 225.93251038]
[92.70171356 211.52131653]
[101.56450653 195.38029480]
[100.89472198 180.39526367]
[92.59683990 168.02616882]
[99.71021271 153.89427185]
[98.26078796 138.96446228]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[86.15646362 76.42418671]
[84.62327576 72.78910065]
[84.38449860 69.24250031]
[85.24758911 66.18935394]
[86.90599823 63.92930222]
[85.34547424 49.01070023]
[83.78495026 34.09209442]
[82.11341095 19.18552017]
[80.33094025 4.29180288]
[71.00857544 -8.49115658]
[77.17865753 -22.04767990]
[75.39619446 -36.94139862]
[73.61372375 -51.83511734]
[71.16799927 -66.63438416]
[68.06388855 -81.30969238]
[64.95977783 -95.98499298]
[61.85566711 -110.66029358]
[58.75155640 -125.33559418]
[48.32592773 -137.23588562]
[53.26195145 -151.28881836]
[38.37189865 -149.40574646]
[23.37720299 -148.75874329]
[8.38029289 -149.35220337]
[-6.51638746 -151.18208313]
[-21.21107674 -154.23588562]
[-35.60338974 -158.49273682]
[-49.59501648 -163.92356873]
[-63.09037781 -170.49127197]
[-75.99728394 -178.15100098]
[-88.22756195 -186.85040283]
[-99.69766998 -196.53007507]
[-110.32925415 -207.12390137]
[-120.04969025 -218.55947876]
[-128.79257202 -230.75872803]
[-136.49818420 -243.63829041]
[-143.11389160 -257.11019897]
[-148.59448242 -271.08239746]
[-152.90252686 -285.45947266]
[-156.00860596 -300.14318848]
[-157.89147949 -315.03326416]
[-158.53831482 -330.02798462]
[-157.94467163 -345.02487183]
[-156.11462402 -359.92153931]
[-153.06063843 -374.61618042]
[-148.80361938 -389.00845337]
[-143.37261963 -403.00003052]
[-136.80474854 -416.49530029]
[-129.14488220 -429.40209961]
[-120.44532013 -441.63229370]
[-110.76551056 -453.10229492]
[-100.17156219 -463.73373413]
[-88.73586273 -473.45404053]
[-76.53651428 -482.19677734]
[-63.65686035 -489.90225220]
[-50.18488312 -496.51776123]
[-36.21260834 -501.99819946]
[-21.83548355 -506.30606079]
[-7.15171862 -509.41198730]
[7.73837709 -511.29467773]
[22.73308754 -511.94134521]
[37.72998428 -511.34750366]
[52.62662125 -509.51727295]
[67.32123566 -506.46313477]
[81.71344757 -502.20593262]
[95.70494843 -496.77478027]
[109.20014954 -490.20675659]
[122.10687256 -482.54672241]
[134.33694458 -473.84701538]
[145.80682373 -464.16705322]
[156.43815613 -453.57299805]
[166.15832520 -442.13717651]
[174.90090942 -429.93771362]
[182.60621643 -417.05798340]
[189.22158813 -403.58590698]
[194.70185852 -389.61358643]
[199.00955200 -375.23638916]
[202.11528015 -360.55261230]
[203.99781799 -345.66247559]
[204.64428711 -330.66775513]
[204.05029297 -315.67086792]
[202.21987915 -300.77426147]
[199.16555786 -286.07968140]
[194.90818787 -271.68753052]
[189.47685242 -257.69607544]
[182.90866089 -244.20095825]
[175.24847412 -231.29432678]
[166.54862976 -219.06436157]
[156.86854553 -207.59458923]
[146.27435303 -196.96339417]
[134.83840942 -187.24336243]
[122.63886261 -178.50091553]
[109.75902557 -170.79576111]
[96.28688812 -164.18054199]
[82.31448364 -158.70045471]
[67.93725586 -154.39292908]
[78.14086151 -143.54231262]
[73.42685699 -128.43971252]
[76.53096771 -113.76440430]
[79.63507843 -99.08910370]
[82.73918915 -84.41379547]
[85.84329987 -69.73849487]
[94.91179657 -81.68681335]
[109.75358582 -83.85968781]
[121.86660767 -75.01239014]
[124.31198120 -60.21306229]
[115.68888092 -47.93942642]
[100.93701172 -45.22238159]
[88.50744629 -53.61758041]
[90.28990936 -38.72386551]
[92.07237244 -23.83014679]
[101.26725006 -12.11248589]
[95.22466278 2.50933695]
[97.00712585 17.40305519]
[100.92318726 23.67092705]
[98.70355225 32.53157043]
[100.26407623 47.45017624]
[101.82460022 62.36878204]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[113.09483337 136.73934937]
[121.93994904 124.62473297]
[136.47218323 120.90795898]
[150.04757690 127.28829193]
[156.45965576 140.84872437]
[152.77690125 155.38960266]
[140.68301392 164.26304626]
[125.70716095 163.41223145]
[114.69525146 153.22448730]
[123.04103851 166.66540527]
[115.87976074 179.72547913]
[116.54954529 194.71051025]
[125.52397919 203.97454834]
[125.77335358 216.46940613]
[117.70927429 225.48590088]
[118.15587616 240.47924805]
[118.60248566 255.47259521]
[119.04908752 270.46594238]
[119.49569702 285.45928955]
[119.94229889 300.45266724]
[120.38890839 315.44601440]
[120.83551788 330.43936157]
[121.39372253 345.42895508]
[122.06350708 360.41400146]
[122.73329926 375.39904785]
[123.40308380 390.38406372]
[126.91255951 398.81741333]
[123.96960449 405.59686279]
[124.41620636 420.59020996]
[124.86281586 435.58355713]
[125.30941772 450.57690430]
[125.75602722 465.57028198]
[140.58517456 468.15505981]
[154.59033203 473.67236328]
[167.19798279 481.89624023]
[177.89186096 492.48992920]
[186.23403931 505.01959229]
[191.88294983 518.97216797]
[194.60723877 533.77636719]
[194.29536438 548.82586670]
[190.96009827 563.50445557]
[184.73800659 577.21099854]
[175.88388062 589.38433838]
[164.76029968 599.52587891]
[151.82276917 607.22033691]
[137.60107422 612.15270996]
[122.67756653 614.12091064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 189]
[20 188]
[21 187]
[22 186]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 179]
[31 178]
[33 175]
[34 174]
[36 172]
[37 164]
[38 163]
[39 162]
[40 160]
[41 159]
[46 158]
[47 157]
[48 156]
[49 154]
[50 153]
[52 151]
[53 150]
[54 149]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[61 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
