%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[76.15466309 340.12963867]
[71.54493713 325.84826660]
[68.00252533 311.26544189]
[65.54676819 296.46081543]
[64.19108582 281.51528931]
[63.94287109 266.51043701]
[64.80348969 251.52821350]
[66.76824188 236.65048218]
[69.82638550 221.95848083]
[73.96123505 207.53245544]
[79.15019226 193.45118713]
[85.36492157 179.79161072]
[92.57147217 166.62829590]
[100.73049927 154.03315735]
[109.79743958 142.07498169]
[119.72275543 130.81907654]
[109.23525238 120.09470367]
[98.74775696 109.37032318]
[93.65214539 108.12584686]
[89.61651611 104.11498260]
[88.11358643 98.16703033]
[77.95004272 87.13515472]
[67.78649139 76.10327911]
[57.62294769 65.07140350]
[47.45940018 54.03952408]
[37.13273239 43.16019058]
[26.64522934 32.43581009]
[16.15772820 21.71142960]
[5.67022800 10.98705006]
[-5.68295908 20.79769707]
[-17.61856651 29.89082146]
[-30.09132004 38.23192978]
[-43.05390167 45.78938293]
[-56.45714569 52.53450775]
[-70.25020599 58.44172287]
[-84.38075256 63.48861694]
[-98.79519653 67.65605164]
[-113.43885040 70.92820740]
[-128.25616455 73.29267883]
[-143.19094849 74.74049377]
[-158.18652344 75.26616669]
[-173.18601990 74.86769104]
[-188.13253784 73.54659271]
[-202.96937561 71.30786896]
[-217.64025879 68.16002655]
[-232.08952332 64.11499786]
[-246.26237488 59.18812180]
[-260.10504150 53.39810181]
[-273.56500244 46.76689148]
[-286.59121704 39.31964493]
[-299.13424683 31.08461952]
[-311.14654541 22.09305000]
[-322.58255005 12.37904263]
[-333.39883423 1.97944868]
[-343.55438232 -9.06628323]
[-353.01071167 -20.71625328]
[-361.73190308 -32.92626572]
[-369.68487549 -45.65000916]
[-376.83950806 -58.83921051]
[-383.16860962 -72.44384766]
[-388.64819336 -86.41230011]
[-393.25747681 -100.69159698]
[-396.97894287 -115.22755432]
[-399.79852295 -129.96504211]
[-401.70550537 -144.84815979]
[-402.69265747 -159.82044983]
[-402.75619507 -174.82508850]
[-401.89593506 -189.80520630]
[-400.11511230 -204.70393372]
[-397.42047119 -219.46478271]
[-393.82226562 -234.03175354]
[-389.33410645 -248.34957886]
[-383.97305298 -262.36395264]
[-377.75942993 -276.02169800]
[-370.71679688 -289.27105713]
[-362.87185669 -302.06170654]
[-354.25442505 -314.34515381]
[-344.89712524 -326.07482910]
[-334.83551025 -337.20617676]
[-324.10769653 -347.69702148]
[-312.75442505 -357.50756836]
[-300.81872559 -366.60058594]
[-288.34588623 -374.94155884]
[-275.38323975 -382.49887085]
[-261.97991943 -389.24386597]
[-248.18681335 -395.15097046]
[-234.05621338 -400.19772339]
[-219.64172363 -404.36499023]
[-204.99803162 -407.63702393]
[-190.18069458 -410.00134277]
[-175.24591064 -411.44900513]
[-160.25032043 -411.97454834]
[-145.25083923 -411.57592773]
[-130.30433655 -410.25466919]
[-115.46751404 -408.01580811]
[-100.79666901 -404.86779785]
[-86.34743500 -400.82263184]
[-72.17463684 -395.89562988]
[-58.33203506 -390.10546875]
[-44.87213135 -383.47412109]
[-31.84599304 -376.02676392]
[-19.30302811 -367.79159546]
[-7.29081917 -358.79992676]
[4.14506865 -349.08578491]
[14.96125412 -338.68609619]
[25.11670876 -327.64025879]
[34.57290649 -315.99020386]
[43.29397964 -303.78009033]
[51.24684525 -291.05627441]
[58.40133286 -277.86700439]
[64.73030853 -264.26232910]
[70.20975494 -250.29380798]
[74.81889343 -236.01446533]
[78.54023743 -221.47846985]
[81.35967255 -206.74095154]
[83.26650238 -191.85781860]
[84.25348663 -176.88552856]
[84.31689453 -161.88087463]
[83.45648193 -146.90077209]
[81.67550659 -132.00205994]
[78.98072815 -117.24124146]
[75.38237000 -102.67430878]
[70.89408112 -88.35652924]
[65.53288269 -74.34220123]
[59.31911850 -60.68450165]
[52.27635574 -47.43523407]
[44.43130875 -34.64465332]
[35.81374359 -22.36128426]
[26.45634460 -10.63171768]
[16.39460754 0.49954912]
[26.88210869 11.22392845]
[37.36960983 21.94830894]
[47.85710907 32.67268753]
[52.53792953 33.62083054]
[56.67282867 37.51950073]
[58.49127579 43.87597656]
[68.65482330 54.90785599]
[78.81836700 65.93972778]
[88.98191833 76.97161102]
[99.14546204 88.00348663]
[109.47212982 98.88282013]
[119.95963287 109.60720062]
[130.44712830 120.33158112]
[141.92187500 110.66010284]
[154.07954407 101.86247253]
[166.85374451 93.98675537]
[180.17471313 87.07595062]
[193.96968079 81.16781616]
[208.16331482 76.29460907]
[222.67808533 72.48295593]
[237.43470764 69.75366974]
[252.35261536 68.12165833]
[267.35031128 67.59583282]
[282.34588623 68.17906189]
[297.25741577 69.86817169]
[312.00347900 72.65393066]
[326.50357056 76.52111816]
[340.67843628 81.44861603]
[354.45068359 87.40951538]
[367.74508667 94.37126160]
[380.48904419 102.29582214]
[392.61297607 111.13992310]
[404.05059814 120.85526276]
[414.73950195 131.38876343]
[424.62127686 142.68290710]
[433.64193726 154.67601013]
[441.75228882 167.30256653]
[448.90792847 180.49362183]
[455.06985474 194.17710876]
[460.20440674 208.27830505]
[464.28350830 222.72018433]
[467.28488159 237.42388916]
[469.19216919 252.30911255]
[469.99490356 267.29452515]
[469.68875122 282.29830933]
[468.27536011 297.23849487]
[465.76245117 312.03350830]
[462.16375732 326.60253906]
[457.49890137 340.86602783]
[451.79339600 354.74600220]
[445.07839966 368.16674805]
[437.39056396 381.05490112]
[428.77191162 393.34008789]
[419.26950073 404.95523071]
[408.93521118 415.83685303]
[397.82553101 425.92556763]
[386.00106812 435.16622925]
[373.52648926 443.50836182]
[360.46984863 450.90646362]
[346.90252686 457.32009888]
[332.89855957 462.71420288]
[318.53448486 467.05935669]
[303.88870239 470.33181763]
[289.04125977 472.51370239]
[274.07324219 473.59310913]
[259.06634521 473.56411743]
[244.10260010 472.42691040]
[229.26370239 470.18771362]
[214.63069153 466.85870361]
[200.28349304 462.45812988]
[186.30047607 457.00994873]
[172.75799561 450.54397583]
[159.73004150 443.09552002]
[147.28776550 434.70526123]
[135.49909973 425.41900635]
[124.42844391 415.28747559]
[114.13626099 404.36599731]
[104.67877197 392.71426392]
[96.10762787 380.39587402]
[88.46963501 367.47811890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 143]
[17 142]
[18 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[26 133]
[27 132]
[28 131]
[29 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
