%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[88.78509521 839.56542969]
[73.82899475 838.38305664]
[58.94474030 836.50103760]
[44.16506958 833.92333984]
[29.52246284 830.65576172]
[15.04910851 826.70544434]
[0.77682281 822.08105469]
[-13.26302052 816.79278564]
[-27.03955841 810.85223389]
[-40.52250671 804.27246094]
[-53.68222809 797.06799316]
[-66.48979187 789.25457764]
[-78.91704559 780.84942627]
[-90.93667603 771.87103271]
[-102.52225494 762.33911133]
[-113.64832306 752.27465820]
[-124.29040527 741.69970703]
[-134.42512512 730.63763428]
[-144.03019714 719.11260986]
[-153.08451843 707.15008545]
[-161.56816101 694.77630615]
[-169.46249390 682.01843262]
[-176.75016785 668.90460205]
[-183.41516113 655.46356201]
[-189.44279480 641.72491455]
[-194.81985474 627.71881104]
[-199.53451538 613.47613525]
[-203.57638550 599.02807617]
[-206.93661499 584.40643311]
[-209.60778809 569.64337158]
[-211.58406067 554.77136230]
[-212.86106873 539.82299805]
[-213.43600464 524.83129883]
[-213.30761719 509.82907104]
[-212.47618103 494.84933472]
[-210.94351196 479.92507935]
[-208.71301270 465.08905029]
[-205.78955078 450.37387085]
[-202.17958069 435.81188965]
[-197.89100647 421.43511963]
[-192.93328857 407.27517700]
[-187.31730652 393.36318970]
[-181.05540466 379.72970581]
[-174.16136169 366.40472412]
[-166.65031433 353.41751099]
[-158.53878784 340.79666138]
[-149.84460449 328.56988525]
[-140.58688354 316.76403809]
[-130.78596497 305.40512085]
[-120.46340179 294.51809692]
[-109.64188385 284.12683105]
[-98.34519958 274.25427246]
[-86.59817505 264.92202759]
[-74.42664337 256.15066528]
[-61.85735703 247.95944214]
[-48.91794205 240.36637878]
[-35.63684464 233.38816833]
[-22.04325867 227.04014587]
[-8.16706657 221.33624268]
[5.96122789 216.28903198]
[20.31056786 211.90960693]
[34.84941101 208.20756531]
[49.54579926 205.19107056]
[64.36742401 202.86672974]
[79.28170013 201.23968506]
[94.25585175 200.31349182]
[94.03252411 185.31515503]
[93.80919647 170.31681824]
[93.58586884 155.31848145]
[93.36254120 140.32014465]
[93.13921356 125.32180023]
[92.80423737 110.32554626]
[92.02291870 95.34590912]
[90.90727234 80.38745117]
[89.79161835 65.42900085]
[88.67597198 50.47054672]
[87.56032562 35.51209259]
[78.81804657 22.32561684]
[85.58730316 9.05812263]
[74.86925507 -5.91535187]
[83.10000610 -21.41443634]
[81.76177216 -36.35462189]
[80.42353821 -51.29480743]
[79.08530426 -66.23499298]
[77.74707031 -81.17517853]
[76.40883636 -96.11536407]
[75.07060242 -111.05554962]
[73.73236847 -125.99573517]
[72.39413452 -140.93591309]
[57.46564102 -142.95774841]
[43.36151505 -148.25126648]
[30.78922081 -156.55097961]
[20.37937355 -167.44055176]
[12.65412903 -180.37377930]
[8.00098133 -194.70193481]
[6.65333223 -209.70631409]
[8.67877769 -224.63432312]
[13.97572231 -238.73716736]
[22.27847481 -251.30744934]
[33.17057037 -261.71466064]
[46.10566711 -269.43676758]
[60.43494797 -274.08642578]
[75.43965912 -275.43045044]
[90.36717224 -273.40139771]
[104.46872711 -268.10104370]
[117.03700256 -259.79522705]
[127.44156647 -248.90061951]
[135.16055298 -235.96365356]
[139.80674744 -221.63323975]
[141.14712524 -206.62820435]
[139.11444092 -191.70118713]
[133.81066895 -177.60090637]
[125.50183105 -165.03465271]
[114.60469055 -154.63272095]
[101.66584778 -146.91688538]
[87.33432007 -142.27415466]
[88.67255402 -127.33396912]
[90.01078796 -112.39378357]
[91.34902191 -97.45359802]
[92.68725586 -82.51341248]
[94.02548981 -67.57322693]
[95.36372375 -52.63304138]
[96.70195770 -37.69285583]
[98.04019165 -22.75267029]
[107.11856842 -14.75832272]
[108.35575104 -2.32236004]
[100.54575348 7.94247389]
[109.20823669 20.05902100]
[102.51877594 34.39644241]
[103.63442230 49.35489655]
[104.75007629 64.31334686]
[105.86572266 79.27180481]
[106.98136902 94.23025513]
[109.51743317 97.13555908]
[110.76057434 101.14460754]
[110.24655151 105.65490723]
[107.79759216 109.87893677]
[111.18112183 118.36360168]
[108.13755035 125.09847260]
[108.36087799 140.09681702]
[108.58420563 155.09515381]
[108.80753326 170.09349060]
[109.03086090 185.09182739]
[109.25418854 200.09016418]
[124.24928284 200.57011414]
[139.20539856 201.75238037]
[154.08964539 203.63438416]
[168.86933899 206.21199036]
[183.51194763 209.47950745]
[197.98532104 213.42976379]
[212.25762939 218.05409241]
[226.29750061 223.34230042]
[240.07406616 229.28279114]
[253.55703735 235.86248779]
[266.71679688 243.06692505]
[279.52438354 250.88027954]
[291.95169067 259.28536987]
[303.97134399 268.26370239]
[315.55697632 277.79556274]
[326.68307495 287.85998535]
[337.32522583 298.43487549]
[347.45999146 309.49694824]
[357.06509399 321.02191162]
[366.11947632 332.98440552]
[374.60317993 345.35815430]
[382.49755859 358.11596680]
[389.78527832 371.22979736]
[396.45031738 384.67077637]
[402.47802734 398.40939331]
[407.85516357 412.41546631]
[412.56985474 426.65817261]
[416.61181641 441.10620117]
[419.97210693 455.72781372]
[422.64334106 470.49084473]
[424.61965942 485.36288452]
[425.89672852 500.31118774]
[426.47174072 515.30291748]
[426.34341431 530.30517578]
[425.51205444 545.28485107]
[423.97946167 560.20916748]
[421.74899292 575.04522705]
[418.82562256 589.76037598]
[415.21569824 604.32238770]
[410.92718506 618.69915771]
[405.96954346 632.85913086]
[400.35360718 646.77117920]
[394.09176636 660.40466309]
[387.19778442 673.72967529]
[379.68679810 686.71691895]
[371.57531738 699.33776855]
[362.88119507 711.56463623]
[353.62350464 723.37048340]
[343.82266235 734.72943115]
[333.50015259 745.61651611]
[322.67864990 756.00781250]
[311.38201904 765.88043213]
[299.63504028 775.21276855]
[287.46356201 783.98413086]
[274.89428711 792.17541504]
[261.95492554 799.76855469]
[248.67384338 806.74682617]
[235.08029175 813.09490967]
[221.20411682 818.79888916]
[207.07585144 823.84613037]
[192.72653198 828.22564697]
[178.18769836 831.92773438]
[163.49131775 834.94427490]
[148.66970825 837.26867676]
[133.75543213 838.89581299]
[118.78128815 839.82208252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[72 137]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[79 127]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
