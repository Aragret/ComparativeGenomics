%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[54.59518814 455.69369507]
[52.79639816 470.60940552]
[48.98326874 485.14120483]
[43.22684097 499.01843262]
[35.63435364 511.98254395]
[26.34725189 523.79199219]
[15.53854370 534.22680664]
[3.40959239 543.09265137]
[-9.81364822 550.22424316]
[-23.88483810 555.48876953]
[-38.54183578 558.78814697]
[-53.51159668 560.06097412]
[-68.51523590 559.28350830]
[-83.27325439 556.47015381]
[-97.51071167 551.67346191]
[-110.96237183 544.98266602]
[-123.37763977 536.52246094]
[-134.52523804 526.45050049]
[-144.19746399 514.95434570]
[-152.21417236 502.24819946]
[-158.42597961 488.56875610]
[-162.71717834 474.17083740]
[-165.00784302 459.32272339]
[-165.25526428 444.30099487]
[-163.45486450 429.38549805]
[-159.64015198 414.85409546]
[-153.88223267 400.97747803]
[-146.28834534 388.01419067]
[-136.99995422 376.20574951]
[-126.19011688 365.77209473]
[-114.06021118 356.90759277]
[-100.83619690 349.77743530]
[-86.76443481 344.51443481]
[-72.10707855 341.21661377]
[-57.13718414 339.94540405]
[-42.13362503 340.72451782]
[-27.37591553 343.53942871]
[-13.13897800 348.33770752]
[-6.45878363 334.90731812]
[0.22141106 321.47695923]
[6.90160561 308.04656982]
[13.58180046 294.61621094]
[20.26199532 281.18582153]
[26.94219017 267.75546265]
[33.62238312 254.32507324]
[40.30257797 240.89469910]
[46.98277283 227.46432495]
[53.66296768 214.03395081]
[60.34316254 200.60356140]
[67.02335358 187.17318726]
[72.47871399 173.20039368]
[76.66572571 158.79661560]
[80.85273743 144.39283752]
[85.03974915 129.98904419]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[99.78976440 66.55896759]
[102.89387512 51.88366318]
[105.99798584 37.20835876]
[104.71221161 28.16487694]
[109.25910187 22.33842278]
[112.58135986 7.71096277]
[108.09274292 -7.46015644]
[118.45676422 -18.15764618]
[121.77902222 -32.78510666]
[107.40364075 -37.08875275]
[93.35160065 -42.35306549]
[79.68700409 -48.55401993]
[66.47221375 -55.66332245]
[53.76751709 -63.64854050]
[41.63088989 -72.47323608]
[30.11770630 -82.09713745]
[19.28049850 -92.47634125]
[9.16871548 -103.56348419]
[-0.17150488 -115.30798340]
[-8.69754505 -127.65625000]
[-16.37050247 -140.55192566]
[-23.15536880 -153.93620300]
[-29.02118111 -167.74797058]
[-33.94118118 -181.92424011]
[-37.89291382 -196.40031433]
[-40.85834885 -211.11015320]
[-42.82396317 -225.98661804]
[-43.78077698 -240.96183777]
[-43.72443390 -255.96749878]
[-42.65518188 -270.93511963]
[-40.57791138 -285.79641724]
[-37.50209045 -300.48355103]
[-33.44175720 -314.92953491]
[-28.41543770 -329.06845093]
[-22.44606590 -342.83581543]
[-15.56088161 -356.16873169]
[-7.79129696 -369.00643921]
[0.82723510 -381.29031372]
[10.25539017 -392.96435547]
[20.45014954 -403.97525024]
[31.36499596 -414.27276611]
[42.95013046 -423.80993652]
[55.15268326 -432.54324341]
[67.91698456 -440.43283081]
[81.18479919 -447.44268799]
[94.89556885 -453.54086304]
[108.98675537 -458.69949341]
[123.39405060 -462.89505005]
[138.05171204 -466.10842896]
[152.89288330 -468.32492065]
[167.84982300 -469.53442383]
[182.85429382 -469.73141479]
[197.83782959 -468.91503906]
[212.73207092 -467.08895874]
[227.46905518 -464.26153564]
[241.98153687 -460.44567871]
[256.20330811 -455.65878296]
[270.06945801 -449.92269897]
[283.51672363 -443.26358032]
[296.48376465 -435.71185303]
[308.91140747 -427.30194092]
[320.74295044 -418.07223511]
[331.92440796 -408.06481934]
[342.40472412 -397.32537842]
[352.13613892 -385.90292358]
[361.07421875 -373.84954834]
[369.17816162 -361.22024536]
[376.41104126 -348.07269287]
[382.73980713 -334.46682739]
[388.13562012 -320.46475220]
[392.57382202 -306.13034058]
[396.03421021 -291.52899170]
[398.50094604 -276.72738647]
[399.96279907 -261.79299927]
[400.41308594 -246.79399109]
[399.84976196 -231.79879761]
[398.27542114 -216.87585449]
[395.69720459 -202.09323120]
[392.12692261 -187.51840210]
[387.58081055 -173.21783447]
[382.07965088 -159.25682068]
[375.64852905 -145.69903564]
[368.31677246 -132.60633850]
[360.11788940 -120.03848267]
[351.08923340 -108.05281067]
[341.27203369 -96.70400238]
[330.71105957 -86.04384613]
[319.45452881 -76.12097931]
[307.55377197 -66.98068237]
[295.06311035 -58.66465759]
[282.03952026 -51.21084976]
[268.54244995 -44.65327072]
[254.63345337 -39.02183914]
[240.37602234 -34.34225082]
[225.83518982 -30.63586044]
[211.07733154 -27.91957474]
[196.16975403 -26.20579147]
[181.18048096 -25.50232887]
[166.17791748 -25.81239700]
[151.23052979 -27.13458061]
[136.40647888 -29.46284676]
[133.08422852 -14.83538628]
[137.81047058 -0.71052110]
[127.20882416 11.03322220]
[123.88655853 25.66068268]
[120.67328644 40.31246948]
[117.56917572 54.98777390]
[114.46506500 69.66307831]
[116.15633392 76.85761261]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[104.85465240 122.88873291]
[104.90206909 126.83364105]
[103.78427124 130.20794678]
[101.83242798 132.70932007]
[99.44352722 134.17605591]
[95.25651550 148.57983398]
[91.06951141 162.98362732]
[86.88249969 177.38740540]
[98.20729065 167.55130005]
[112.65528107 163.51947021]
[127.43678284 166.07040405]
[139.69772339 174.71154785]
[147.07069397 187.77444458]
[148.13211060 202.73684692]
[142.67700195 216.70974731]
[131.75869751 226.99519348]
[117.48532867 231.60723877]
[102.61286926 229.65536499]
[90.01294708 221.51644897]
[82.11841583 208.76197815]
[80.45373535 193.85339355]
[73.77353668 207.28376770]
[67.09334564 220.71414185]
[60.41315079 234.14451599]
[53.73295593 247.57489014]
[47.05276108 261.00527954]
[40.37256622 274.43563843]
[33.69237137 287.86602783]
[27.01217651 301.29638672]
[20.33198166 314.72677612]
[13.65178680 328.15713501]
[6.97159243 341.58752441]
[0.29139781 355.01791382]
[12.70758438 363.47674561]
[23.85626602 373.54751587]
[33.52974701 385.04263306]
[41.54782104 397.74792480]
[47.76111603 411.42669678]
[52.05387497 425.82412720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[50 192]
[51 179]
[52 178]
[53 177]
[54 176]
[55 171]
[58 168]
[59 166]
[60 165]
[61 164]
[63 163]
[64 162]
[66 160]
[67 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
