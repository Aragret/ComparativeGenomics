%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[153.25627136 261.45834351]
[149.45870972 275.98312378]
[144.21118164 290.04919434]
[137.56750488 303.51220703]
[129.59587097 316.23400879]
[120.37807465 328.08401489]
[110.00870514 338.94070435]
[98.59417725 348.69259644]
[86.25161743 357.23965454]
[73.10768127 364.49417114]
[59.29724884 370.38168335]
[44.96203613 374.84179688]
[30.24914551 377.82876587]
[15.30955410 379.31185913]
[0.29656896 379.27593994]
[-14.63575268 377.72134399]
[-29.33418083 374.66403198]
[-43.64788437 370.13534546]
[-57.42998505 364.18179321]
[-70.53904724 356.86447144]
[-82.84056091 348.25842285]
[-94.20829010 338.45202637]
[-104.52557373 327.54583740]
[-113.68655396 315.65182495]
[-121.59721375 302.89202881]
[-128.17637634 289.39736938]
[-133.35653687 275.30636597]
[-137.08453369 260.76354980]
[-139.32211304 245.91821289]
[-140.04631042 230.92266846]
[-139.24969482 215.93078613]
[-136.94044495 201.09642029]
[-133.14224243 186.57179260]
[-127.89409637 172.50595093]
[-121.24982452 159.04324341]
[-113.27762604 146.32179260]
[-104.05931091 134.47216797]
[-93.68946838 123.61595917]
[-82.27451324 113.86455536]
[-69.93157959 105.31803894]
[-56.78732300 98.06410980]
[-42.97662735 92.17719269]
[-28.64121819 87.71770477]
[-13.92819595 84.73140717]
[1.01146042 83.24894714]
[16.02444458 83.28553009]
[30.95669746 84.84078979]
[45.65499115 87.89875793]
[59.96849442 92.42806244]
[73.75033569 98.38222504]
[86.85907745 105.70013428]
[88.26311493 91.78897858]
[100.85008240 85.70130157]
[109.44864655 73.41046143]
[118.04721069 61.11962509]
[126.64577484 48.82878876]
[135.24433899 36.53795242]
[123.35253143 27.39125633]
[111.88618469 17.71654510]
[100.86872101 7.53358126]
[90.32266235 -3.13683152]
[80.26953888 -14.27289486]
[70.72989655 -25.85185623]
[61.72322083 -37.85006332]
[53.26791382 -50.24300385]
[45.38124847 -63.00535583]
[38.07933807 -76.11105347]
[31.37709999 -89.53331757]
[25.28822517 -103.24472809]
[19.82515335 -117.21726990]
[14.99904537 -131.42240906]
[10.81976032 -145.83111572]
[7.29583645 -160.41394043]
[4.43447351 -175.14112854]
[2.24151707 -189.98255920]
[0.72144651 -204.90792847]
[-0.12263222 -219.88673401]
[-0.28899482 -234.88838196]
[0.22269858 -249.88221741]
[1.41140258 -264.83761597]
[3.27468872 -279.72402954]
[5.80875063 -294.51104736]
[9.00841141 -309.16845703]
[12.86713314 -323.66629028]
[17.37703514 -337.97494507]
[22.52890015 -352.06521606]
[28.31220627 -365.90829468]
[34.71513748 -379.47589111]
[41.72461319 -392.74029541]
[49.32631683 -405.67440796]
[57.50471115 -418.25180054]
[66.24309540 -430.44680786]
[75.52360535 -442.23446655]
[85.32730103 -453.59072876]
[95.63413239 -464.49240112]
[106.42306519 -474.91717529]
[117.67203522 -484.84381104]
[129.35807800 -494.25195312]
[141.45732117 -503.12246704]
[153.94503784 -511.43716431]
[166.79571533 -519.17907715]
[179.98309326 -526.33239746]
[193.48025513 -532.88250732]
[207.25961304 -538.81597900]
[221.29301453 -544.12078857]
[235.55178833 -548.78607178]
[250.00680542 -552.80224609]
[264.62854004 -556.16107178]
[279.38711548 -558.85583496]
[294.25238037 -560.88092041]
[309.19396973 -562.23217773]
[324.18136597 -562.90692139]
[339.18392944 -562.90368652]
[354.17105103 -562.22259521]
[369.11206055 -560.86492920]
[383.97647095 -558.83349609]
[398.73388672 -556.13244629]
[413.35418701 -552.76733398]
[427.80749512 -548.74499512]
[442.06427002 -544.07366943]
[456.09539795 -538.76287842]
[469.87222290 -532.82348633]
[483.36657715 -526.26763916]
[496.55090332 -519.10864258]
[509.39828491 -511.36126709]
[521.88244629 -503.04122925]
[533.97790527 -494.16558838]
[545.65991211 -484.75244141]
[556.90466309 -474.82101440]
[567.68914795 -464.39163208]
[577.99133301 -453.48556519]
[587.79016113 -442.12512207]
[597.06561279 -430.33346558]
[605.79882812 -418.13476562]
[613.97180176 -405.55386353]
[621.56799316 -392.61651611]
[628.57183838 -379.34912109]
[634.96893311 -365.77877808]
[640.74633789 -351.93325806]
[645.89221191 -337.84078979]
[650.39599609 -323.53018188]
[654.24853516 -309.03070068]
[657.44195557 -294.37194824]
[659.96966553 -279.58386230]
[661.82659912 -264.69665527]
[663.00891113 -249.74073792]
[663.51422119 -234.74667358]
[663.34143066 -219.74510193]
[662.49096680 -204.76664734]
[660.96453857 -189.84193420]
[658.76525879 -175.00143433]
[655.89758301 -160.27548218]
[652.36743164 -145.69415283]
[648.18200684 -131.28723145]
[643.34985352 -117.08415985]
[637.88079834 -103.11395264]
[631.78607178 -89.40514374]
[625.07812500 -75.98574066]
[617.77056885 -62.88316345]
[609.87847900 -50.12417984]
[601.41790771 -37.73485184]
[592.40606689 -25.74048996]
[582.86151123 -14.16560173]
[572.80364990 -3.03383231]
[562.25299072 7.63207674]
[551.23120117 17.81033516]
[539.76074219 27.48015022]
[527.86499023 36.62176514]
[515.56835938 45.21650696]
[502.89590454 53.24681473]
[489.87350464 60.69628525]
[476.52780151 67.54969788]
[462.88604736 73.79304504]
[448.97607422 79.41358948]
[434.82635498 84.39982605]
[420.46578979 88.74159241]
[405.92367554 92.42999268]
[391.22976685 95.45751190]
[376.41403198 97.81796265]
[361.50680542 99.50650787]
[346.53848267 100.51971436]
[331.53967285 100.85550690]
[316.54098511 100.51319885]
[301.57312012 99.49348450]
[286.66662598 97.79845428]
[271.85192871 95.43156433]
[257.15933228 92.39765930]
[242.61882019 88.70293427]
[228.26013184 84.35493469]
[214.11257935 79.36254120]
[200.20507812 73.73595428]
[186.56602478 67.48667145]
[173.22329712 60.62746048]
[160.20414734 53.17232895]
[147.53518677 45.13651276]
[138.93661499 57.42735291]
[130.33805847 69.71819305]
[121.73948669 82.00902557]
[113.14092255 94.29986572]
[111.73688507 108.21102142]
[99.14991760 114.29869843]
[110.51807404 124.10461426]
[120.83583832 135.01033020]
[129.99734497 146.90394592]
[137.90856934 159.66339111]
[144.48832703 173.15774536]
[149.66909790 187.24855042]
[153.39773560 201.79118347]
[155.63597107 216.63642883]
[156.36082458 231.63194275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 201]
[53 199]
[54 198]
[55 197]
[56 196]
[57 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
