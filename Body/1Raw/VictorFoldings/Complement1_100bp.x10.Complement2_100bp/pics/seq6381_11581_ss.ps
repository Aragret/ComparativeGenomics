%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[113.53771210 1000.87530518]
[98.59197235 999.57684326]
[83.71063995 997.67761230]
[68.91784668 995.18066406]
[54.23759079 992.09014893]
[39.69368362 988.41101074]
[25.30971909 984.14923096]
[11.10902309 979.31176758]
[-2.88537002 973.90637207]
[-16.65076065 967.94189453]
[-30.16481972 961.42791748]
[-43.40562820 954.37512207]
[-56.35171509 946.79486084]
[-68.98207092 938.69946289]
[-81.27621460 930.10211182]
[-93.21421051 921.01660156]
[-104.77668762 911.45782471]
[-115.94489288 901.44122314]
[-126.70071411 890.98303223]
[-137.02670288 880.10028076]
[-146.90611267 868.81048584]
[-156.32290649 857.13214111]
[-165.26182556 845.08398438]
[-173.70837402 832.68572998]
[-181.64883423 819.95739746]
[-189.07034302 806.91967773]
[-195.96086121 793.59368896]
[-202.30920410 780.00103760]
[-208.10507202 766.16381836]
[-213.33906555 752.10443115]
[-218.00271606 737.84570312]
[-222.08842468 723.41070557]
[-225.58958435 708.82293701]
[-228.50051880 694.10601807]
[-230.81649780 679.28381348]
[-232.53378296 664.38043213]
[-233.64955139 649.41992188]
[-234.16203308 634.42663574]
[-234.07037354 619.42486572]
[-233.37472534 604.43896484]
[-232.07623291 589.49322510]
[-230.17697144 574.61187744]
[-227.68005371 559.81909180]
[-224.58950806 545.13885498]
[-220.91035461 530.59497070]
[-216.64855957 516.21099854]
[-211.81103516 502.01031494]
[-206.40562439 488.01593018]
[-200.44111633 474.25054932]
[-193.92715454 460.73648071]
[-186.87432861 447.49569702]
[-179.29405212 434.54962158]
[-171.19865417 421.91928101]
[-162.60124207 409.62515259]
[-153.51576233 397.68716431]
[-143.95697021 386.12469482]
[-133.94035339 374.95651245]
[-123.48214722 364.20068359]
[-112.59934235 353.87472534]
[-101.30957794 343.99533081]
[-89.63116455 334.57855225]
[-77.58304596 325.63964844]
[-65.18476105 317.19311523]
[-52.45642471 309.25265503]
[-39.41868591 301.83117676]
[-26.09268379 294.94067383]
[-12.50003624 288.59234619]
[1.33720767 282.79650879]
[15.39660549 277.56253052]
[29.65535164 272.89889526]
[44.09032059 268.81320190]
[58.67809677 265.31207275]
[73.39501953 262.40115356]
[88.21721649 260.08520508]
[103.12064362 258.36795044]
[102.00499725 243.40948486]
[100.88935089 228.45103455]
[99.77369690 213.49258423]
[98.65805054 198.53413391]
[87.81398010 191.57455444]
[82.88479614 179.45906067]
[85.87760925 166.52639771]
[95.91811371 157.54849243]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[79.13704681 82.60625458]
[64.49008179 79.37106323]
[57.75041962 65.97043610]
[63.88628769 52.28280640]
[78.37454987 48.39819336]
[90.53421021 57.17873764]
[90.75753784 42.18039703]
[90.98086548 27.18206215]
[91.20419312 12.18372440]
[91.42752075 -2.81461334]
[77.59129333 -9.17690277]
[67.54392242 -20.62112808]
[63.02618408 -35.16450882]
[64.82079315 -50.28731155]
[72.61682892 -63.36942673]
[85.06357574 -72.14429474]
[100.00457001 -75.09162140]
[114.85118103 -71.70075226]
[127.03115082 -62.55918884]
[134.43421936 -49.25075912]
[135.77778625 -34.08122253]
[130.82902527 -19.67880249]
[120.44538116 -8.53879833]
[106.42585754 -2.59128571]
[106.20252991 12.40705204]
[105.97920227 27.40538979]
[105.75587463 42.40372467]
[105.53254700 57.40206528]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[110.89151764 156.65567017]
[124.18598175 168.02565002]
[125.12556458 185.15550232]
[113.61650848 197.41847229]
[114.73215485 212.37693787]
[115.84780121 227.33538818]
[116.96344757 242.29383850]
[118.07910156 257.25228882]
[133.07238770 256.73974609]
[148.07414246 256.83135986]
[163.06004333 257.52694702]
[178.00579834 258.82537842]
[192.88713074 260.72457886]
[207.67993164 263.22143555]
[222.36019897 266.31192017]
[236.90411377 269.99102783]
[251.28808594 274.25274658]
[265.48880005 279.09020996]
[279.48321533 284.49554443]
[293.24862671 290.46002197]
[306.76269531 296.97390747]
[320.00350952 304.02670288]
[332.94961548 311.60690308]
[345.58001709 319.70227051]
[357.87417603 328.29962158]
[369.81219482 337.38504028]
[381.37469482 346.94378662]
[392.54293823 356.96038818]
[403.29876709 367.41851807]
[413.62478638 378.30130005]
[423.50424194 389.59103394]
[432.92105103 401.26940918]
[441.86001587 413.31747437]
[450.30661011 425.71572876]
[458.24710083 438.44403076]
[465.66864014 451.48175049]
[472.55917358 464.80770874]
[478.90756226 478.40032959]
[484.70346069 492.23754883]
[489.93750000 506.29693604]
[494.60119629 520.55566406]
[498.68695068 534.99060059]
[502.18814087 549.57836914]
[505.09912109 564.29528809]
[507.41516113 579.11749268]
[509.13244629 594.02087402]
[510.24829102 608.98138428]
[510.76080322 623.97467041]
[510.66918945 638.97644043]
[509.97357178 653.96234131]
[508.67510986 668.90808105]
[506.77590942 683.78942871]
[504.27902222 698.58221436]
[501.18850708 713.26245117]
[497.50939941 727.80639648]
[493.24765015 742.19036865]
[488.41015625 756.39105225]
[483.00479126 770.38543701]
[477.04031372 784.15081787]
[470.52639771 797.66491699]
[463.47360229 810.90570068]
[455.89337158 823.85180664]
[447.79800415 836.48217773]
[439.20062256 848.77636719]
[430.11517334 860.71435547]
[420.55642700 872.27685547]
[410.53982544 883.44506836]
[400.08166504 894.20092773]
[389.19888306 904.52691650]
[377.90914917 914.40631104]
[366.23074341 923.82312012]
[354.18264771 932.76208496]
[341.78439331 941.20861816]
[329.05609131 949.14910889]
[316.01837158 956.57067871]
[302.69238281 963.46118164]
[289.09976196 969.80950928]
[275.26251221 975.60540771]
[261.20312500 980.83941650]
[246.94439697 985.50311279]
[232.50944519 989.58886719]
[217.92167664 993.09002686]
[203.20477295 996.00097656]
[188.38256836 998.31695557]
[173.47914124 1000.03430176]
[158.51866150 1001.15008545]
[143.52537537 1001.66259766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[83 124]
[84 123]
[85 122]
[86 121]
[88 119]
[89 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
