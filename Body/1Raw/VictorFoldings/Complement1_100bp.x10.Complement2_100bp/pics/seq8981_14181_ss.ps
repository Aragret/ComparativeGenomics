%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[121.92775726 389.33224487]
[112.68386841 401.16723633]
[102.12850189 411.84902954]
[90.40439606 421.23315430]
[77.67012024 429.19271851]
[64.09787750 435.62008667]
[49.87122726 440.42828369]
[35.18256760 443.55233765]
[20.23053932 444.94998169]
[5.21735668 444.60232544]
[-9.65394497 442.51403809]
[-24.18224907 438.71340942]
[-38.17107391 433.25177002]
[-51.43124390 426.20306396]
[-63.78342056 417.66256714]
[-75.06056213 407.74575806]
[-85.11016083 396.58682251]
[-93.79629517 384.33660889]
[-101.00150299 371.16082764]
[-106.62834167 357.23764038]
[-110.60071564 342.75534058]
[-112.86489868 327.90979004]
[-113.39028168 312.90179443]
[-112.16973877 297.93426514]
[-109.21980286 283.20965576]
[-104.58034515 268.92706299]
[-98.31411743 255.27969360]
[-90.50586700 242.45207214]
[-81.26118469 230.61770630]
[-70.70510101 219.93661499]
[-58.98037720 210.55326843]
[-46.24556732 202.59454346]
[-32.67289734 196.16810608]
[-18.44592667 191.36083984]
[-3.75705504 188.23776245]
[11.19506550 186.84111023]
[26.20822525 187.18978882]
[41.07938766 189.27905273]
[55.60743713 193.08067322]
[53.02877426 178.41098022]
[65.25521851 168.36982727]
[62.67655563 153.70014954]
[74.90299225 143.65899658]
[80.35835266 129.68618774]
[85.81370544 115.71339417]
[79.37985229 104.79281616]
[80.33774567 92.15414429]
[88.34401703 82.32799530]
[100.52864075 78.83676910]
[106.19142914 64.94674683]
[111.85421753 51.05671692]
[117.51699829 37.16669083]
[105.42084503 46.03703690]
[90.78006744 49.30012131]
[76.06190491 46.40605927]
[63.74661636 37.84254837]
[55.90954971 25.05269432]
[53.87138748 10.19181061]
[57.97559357 -4.23578405]
[67.53054047 -15.79878521]
[80.92604828 -22.54862404]
[95.90474701 -23.34783554]
[109.94245148 -18.06173706]
[120.67356873 -7.58112860]
[126.28971100 6.32782173]
[125.84407806 21.32282448]
[134.07289124 8.78142357]
[142.30169678 -3.75997639]
[150.53050232 -16.30137634]
[148.67727661 -29.06571579]
[155.78926086 -39.34207153]
[167.60534668 -41.93181992]
[176.01995850 -54.34931564]
[184.43457031 -66.76681519]
[172.54406738 -75.91852570]
[161.22781372 -85.77148438]
[150.52713013 -96.28971863]
[140.48103333 -107.43486023]
[131.12619019 -119.16623688]
[122.49674988 -131.44104004]
[114.62419128 -144.21449280]
[107.53723145 -157.43995667]
[101.26174164 -171.06921387]
[95.82061768 -185.05249023]
[91.23371124 -199.33879089]
[87.51776123 -213.87599182]
[84.68633270 -228.61102295]
[82.74974823 -243.49012756]
[81.71507263 -258.45901489]
[81.58609009 -273.46307373]
[82.36327362 -288.44754028]
[84.04376984 -303.35772705]
[86.62146759 -318.13925171]
[90.08694458 -332.73818970]
[94.42756653 -347.10122681]
[99.62749481 -361.17599487]
[105.66774750 -374.91110229]
[112.52628326 -388.25646973]
[120.17809296 -401.16336060]
[128.59523010 -413.58471680]
[137.74700928 -425.47518921]
[147.60000610 -436.79138184]
[158.11830139 -447.49203491]
[169.26348877 -457.53805542]
[180.99490356 -466.89285278]
[193.26974487 -475.52224731]
[206.04322815 -483.39474487]
[219.26873779 -490.48162842]
[232.89801025 -496.75704956]
[246.88133240 -502.19812012]
[261.16766357 -506.78497314]
[275.70486450 -510.50085449]
[290.43991089 -513.33221436]
[305.31903076 -515.26873779]
[320.28790283 -516.30334473]
[335.29196167 -516.43225098]
[350.27642822 -515.65496826]
[365.18661499 -513.97442627]
[379.96813965 -511.39666748]
[394.56704712 -507.93112183]
[408.93005371 -503.59042358]
[423.00479126 -498.39044189]
[436.73989868 -492.35012817]
[450.08523560 -485.49151611]
[462.99209595 -477.83966064]
[475.41339111 -469.42245483]
[487.30383301 -460.27062988]
[498.61996460 -450.41757202]
[509.32055664 -439.89923096]
[519.36657715 -428.75399780]
[528.72131348 -417.02252197]
[537.35064697 -404.74765015]
[545.22308350 -391.97412109]
[552.30987549 -378.74859619]
[558.58526611 -365.11929321]
[564.02624512 -351.13595581]
[568.61303711 -336.84960938]
[572.32885742 -322.31237793]
[575.16015625 -307.57733154]
[577.09655762 -292.69818115]
[578.13110352 -277.72930908]
[578.25994873 -262.72525024]
[577.48266602 -247.74078369]
[575.80200195 -232.83061218]
[573.22418213 -218.04910278]
[569.75854492 -203.45021057]
[565.41778564 -189.08720398]
[560.21777344 -175.01248169]
[554.17736816 -161.27742004]
[547.31872559 -147.93212891]
[539.66680908 -135.02529907]
[531.24951172 -122.60402679]
[522.09765625 -110.71364594]
[512.24450684 -99.39753723]
[501.72613525 -88.69699097]
[490.58087158 -78.65104675]
[478.84936523 -69.29637909]
[466.57443237 -60.66710281]
[453.80087280 -52.79471970]
[440.57531738 -45.70794678]
[426.94595337 -39.43264389]
[412.96261597 -33.99171448]
[398.67623901 -29.40500832]
[384.13900757 -25.68926239]
[369.40393066 -22.85803604]
[354.52478027 -20.92165756]
[339.55587769 -19.88719368]
[324.55184937 -19.75842094]
[309.56738281 -20.53580666]
[294.65722656 -22.21651649]
[279.87570190 -24.79441643]
[265.27685547 -28.26009941]
[250.91384888 -32.60092163]
[236.83915710 -37.80104065]
[223.10412598 -43.84148407]
[209.75886536 -50.70021057]
[196.85206604 -58.35219574]
[188.43745422 -45.93470001]
[180.02284241 -33.51720428]
[179.70605469 -15.97107601]
[163.07189941 -8.07256889]
[154.84309387 4.46883154]
[146.61428833 17.01023102]
[138.38548279 29.55163193]
[131.40702820 42.82947922]
[125.74423981 56.71950531]
[120.08145142 70.60953522]
[114.41867065 84.49955750]
[121.16527557 99.56113434]
[115.04880524 114.88942719]
[99.78650665 121.16875458]
[94.33114624 135.14155579]
[88.87579346 149.11434937]
[91.06424713 164.78346252]
[79.22801208 173.82519531]
[81.41647339 189.49430847]
[69.58023834 198.53602600]
[82.84087372 205.58386230]
[95.19361877 214.12355042]
[106.47142792 224.03958130]
[116.52176666 235.19786072]
[125.20871735 247.44747925]
[132.41481018 260.62280273]
[138.04257202 274.54562378]
[142.01591492 289.02764893]
[144.28109741 303.87301636]
[144.80746460 318.88101196]
[143.58793640 333.84860229]
[140.63897705 348.57342529]
[136.00047302 362.85629272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 197]
[41 195]
[43 193]
[44 192]
[45 191]
[49 188]
[50 187]
[51 186]
[52 185]
[66 184]
[67 183]
[68 182]
[69 181]
[72 179]
[73 178]
[74 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
