%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[139.85693359 466.09469604]
[132.81031799 452.84509277]
[126.76147461 439.11123657]
[121.74343872 424.96817017]
[117.78360748 410.49310303]
[114.90361786 395.76513672]
[113.11920166 380.86471558]
[112.44009399 365.87316895]
[112.87001038 350.87243652]
[114.40660095 335.94439697]
[117.04147339 321.17062378]
[120.76023865 306.63177490]
[125.54257965 292.40728760]
[131.36238098 278.57479858]
[138.18786621 265.20993042]
[145.98175049 252.38563538]
[154.70144653 240.17195129]
[164.29936218 228.63560486]
[174.72305298 217.83958435]
[185.91560364 207.84288025]
[176.77679443 195.94824219]
[167.63800049 184.05361938]
[158.49919128 172.15898132]
[149.36038208 160.26434326]
[140.22158813 148.36972046]
[130.05804443 137.33784485]
[118.95080566 127.25669861]
[104.32643127 124.43234253]
[99.30770111 109.42824554]
[94.14705658 108.48927307]
[89.87985229 104.72572327]
[88.02555847 98.87777710]
[77.22340393 88.47039795]
[66.42124939 78.06302643]
[55.61909103 67.65565491]
[55.98600006 82.65116882]
[46.72675705 94.45228577]
[32.07456207 97.66369629]
[18.72820091 90.81719208]
[12.78945255 77.04289246]
[16.97343063 62.63822937]
[29.36727715 54.18881989]
[44.30637360 55.55839920]
[34.64556122 44.08369827]
[24.98475266 32.60899734]
[10.17781639 27.03538322]
[7.89964533 12.31603432]
[-1.76116526 0.84133470]
[-14.07518005 9.42505646]
[-27.11874199 16.85342979]
[-40.78376770 23.06489754]
[-54.95701981 28.00799179]
[-69.52104950 31.64174843]
[-84.35517883 33.93605804]
[-99.33648682 34.87191010]
[-114.34082031 34.44154739]
[-129.24385071 32.64853668]
[-143.92208862 29.50773430]
[-158.25389099 25.04516983]
[-172.12051392 19.29782104]
[-185.40704346 12.31331158]
[-198.00338745 4.14952040]
[-209.80516052 -5.12590408]
[-220.71455383 -15.43610191]
[-230.64118958 -26.69563675]
[-239.50280762 -38.81120682]
[-247.22596741 -51.68241882]
[-253.74667358 -65.20261383]
[-259.01089478 -79.25975037]
[-262.97500610 -93.73735809]
[-265.60617065 -108.51545715]
[-266.88256836 -123.47159576]
[-266.79360962 -138.48184204]
[-265.34008789 -153.42179871]
[-262.53396606 -168.16767883]
[-258.39859009 -182.59729004]
[-252.96815491 -196.59106445]
[-246.28768921 -210.03303528]
[-238.41253662 -222.81182861]
[-229.40797424 -234.82153320]
[-219.34860229 -245.96264648]
[-208.31779480 -256.14285278]
[-196.40693665 -265.27777100]
[-183.71473694 -273.29171753]
[-170.34637451 -280.11828613]
[-156.41261292 -285.70089722]
[-142.02893066 -289.99331665]
[-127.31450653 -292.95996094]
[-112.39127350 -294.57623291]
[-97.38289642 -294.82876587]
[-82.41373444 -293.71545410]
[-67.60783386 -291.24551392]
[-53.08788681 -287.43942261]
[-38.97420883 -282.32870483]
[-25.38374901 -275.95574951]
[-12.42913151 -268.37332153]
[-0.21770012 -259.64428711]
[11.14935303 -249.84094238]
[21.57783699 -239.04455566]
[30.98133469 -227.34458923]
[39.28192520 -214.83796692]
[46.41082382 -201.62835693]
[52.30895996 -187.82519531]
[56.92745972 -173.54286194]
[60.22804642 -158.89973450]
[62.18337631 -144.01713562]
[62.77724075 -129.01837158]
[62.00472260 -114.02776337]
[59.87221909 -99.16950989]
[56.39740753 -84.56674194]
[51.60907745 -70.34045410]
[45.54690933 -56.60854721]
[38.26113510 -43.48479843]
[29.81212997 -31.07796478]
[20.26990700 -19.49085236]
[9.71353531 -8.81947613]
[19.37434578 2.65522432]
[33.49027634 7.40809345]
[36.45945358 22.94818878]
[46.12026215 34.42288971]
[55.78107452 45.89759064]
[66.02646637 56.85349655]
[76.82862091 67.26087189]
[87.63077545 77.66824341]
[98.43293762 88.07561493]
[109.38884735 98.32100677]
[124.80767822 101.86643982]
[129.03195190 116.14946747]
[140.13917542 126.23060608]
[136.26780701 111.73880005]
[138.98248291 96.98649597]
[147.75906372 84.82212830]
[160.90290833 77.59445190]
[175.87614441 76.69901276]
[189.78770447 82.30871582]
[199.95146179 93.34040070]
[204.40495300 107.66403198]
[202.28828430 122.51393890]
[194.01014709 135.02282715]
[181.16893005 142.77545166]
[166.24406433 144.27487183]
[152.11622620 139.23091125]
[161.25502014 151.12554932]
[170.39382935 163.02017212]
[179.53262329 174.91481018]
[188.67143250 186.80944824]
[197.81022644 198.70407104]
[210.35293579 190.46467590]
[223.46989441 183.17410278]
[237.08947754 176.87216187]
[251.13726807 171.59326172]
[265.53656006 167.36625671]
[280.20870972 164.21423340]
[295.07357788 162.15438843]
[310.04998779 161.19798279]
[325.05612183 161.35025024]
[340.01000977 162.61033630]
[354.83001709 164.97137451]
[369.43521118 168.42047119]
[383.74575806 172.93878174]
[397.68353271 178.50163269]
[411.17242432 185.07862854]
[424.13876343 192.63386536]
[436.51171875 201.12606812]
[448.22369385 210.50886536]
[459.21072388 220.73098755]
[469.41284180 231.73663330]
[478.77429199 243.46568298]
[487.24395752 255.85406494]
[494.77557373 268.83413696]
[501.32800293 282.33496094]
[506.86544800 296.28286743]
[511.35769653 310.60162354]
[514.78021240 325.21304321]
[517.11425781 340.03735352]
[518.34710693 354.99353027]
[518.47204590 369.99990845]
[517.48840332 384.97454834]
[515.40148926 399.83563232]
[512.22271729 414.50201416]
[507.96951294 428.89358521]
[502.66506958 442.93176270]
[496.33831787 456.53982544]
[489.02386475 469.64349365]
[480.76165771 482.17117310]
[471.59680176 494.05444336]
[461.57934570 505.22842407]
[450.76400757 515.63208008]
[439.20986938 525.20855713]
[426.98004150 533.90563965]
[414.14129639 541.67572021]
[400.76379395 548.47637939]
[386.92056274 554.27050781]
[372.68719482 559.02648926]
[358.14147949 562.71826172]
[343.36285400 565.32574463]
[328.43197632 566.83459473]
[313.43048096 567.23669434]
[298.44021606 566.52978516]
[283.54312134 564.71777344]
[268.82052612 561.81042480]
[254.35284424 557.82379150]
[240.21911621 552.77947998]
[226.49650574 546.70520020]
[213.25996399 539.63403320]
[200.58181763 531.60461426]
[188.53128052 522.66082764]
[177.17417908 512.85144043]
[166.57254028 502.23013306]
[156.78425598 490.85485840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 147]
[21 146]
[22 145]
[23 144]
[24 143]
[25 142]
[26 129]
[27 128]
[29 126]
[32 125]
[33 124]
[34 123]
[35 122]
[43 121]
[44 120]
[45 119]
[47 117]
[48 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
