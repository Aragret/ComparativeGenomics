%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[-35.05059814 810.46752930]
[-49.89440918 812.64221191]
[-64.81714630 814.18499756]
[-79.79190826 815.09301758]
[-94.79170990 815.36468506]
[-109.78953552 814.99945068]
[-124.75834656 813.99810791]
[-139.67117310 812.36230469]
[-154.50112915 810.09509277]
[-169.22149658 807.20050049]
[-183.80575562 803.68371582]
[-198.22761536 799.55120850]
[-212.46110535 794.81030273]
[-226.48054504 789.46960449]
[-240.26069641 783.53869629]
[-253.77670288 777.02825928]
[-267.00424194 769.95013428]
[-279.91943359 762.31689453]
[-292.49902344 754.14245605]
[-304.72036743 745.44146729]
[-316.56140137 736.22967529]
[-328.00082397 726.52362061]
[-339.01800537 716.34075928]
[-349.59304810 705.69952393]
[-359.70697021 694.61901855]
[-369.34149170 683.11932373]
[-378.47927856 671.22106934]
[-387.10385132 658.94567871]
[-395.19967651 646.31530762]
[-402.75216675 633.35278320]
[-409.74768066 620.08135986]
[-416.17364502 606.52496338]
[-422.01846313 592.70806885]
[-427.27163696 578.65557861]
[-431.92364502 564.39282227]
[-435.96615601 549.94549561]
[-439.39184570 535.33953857]
[-442.19454956 520.60144043]
[-444.36923218 505.75759888]
[-445.91195679 490.83486938]
[-446.81994629 475.86010742]
[-447.09158325 460.86029053]
[-446.72637939 445.86245728]
[-445.72494507 430.89367676]
[-444.08914185 415.98083496]
[-441.82189941 401.15087891]
[-438.92727661 386.43051147]
[-435.41052246 371.84628296]
[-431.27795410 357.42440796]
[-426.53704834 343.19094849]
[-421.19628906 329.17150879]
[-415.26538086 315.39135742]
[-408.75494385 301.87536621]
[-401.67675781 288.64785767]
[-394.04354858 275.73266602]
[-385.86907959 263.15307617]
[-377.16809082 250.93174744]
[-367.95623779 239.09071350]
[-358.25015259 227.65132141]
[-348.06729126 216.63417053]
[-337.42602539 206.05912781]
[-326.34555054 195.94523621]
[-314.84579468 186.31071472]
[-302.94750977 177.17295837]
[-290.67211914 168.54840088]
[-278.04174805 160.45260620]
[-265.07919312 152.90014648]
[-251.80773926 145.90463257]
[-238.25137329 139.47869873]
[-224.43449402 133.63388062]
[-210.38198853 128.38075256]
[-196.11921692 123.72875977]
[-181.67184448 119.68628693]
[-167.06591797 116.26062012]
[-152.32777405 113.45793152]
[-137.48396301 111.28327942]
[-122.56121826 109.74057007]
[-107.58645630 108.83259583]
[-92.58664703 108.56098175]
[-77.58882904 108.92622375]
[-62.62002182 109.92766571]
[-47.70720291 111.56349945]
[-32.87725067 113.83078003]
[-18.15688896 116.72541809]
[-3.57264066 120.24219513]
[10.84920979 124.37478638]
[25.08267403 129.11572266]
[39.10210037 134.45648193]
[52.88222885 140.38743591]
[66.39822388 146.89787292]
[73.47532654 133.67234802]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.29914093 59.25054550]
[120.37625122 46.02501678]
[127.35469818 32.74716949]
[134.23411560 19.41774178]
[121.99720001 10.69772911]
[111.12587738 0.32491726]
[101.84149170 -11.48951626]
[94.33303833 -24.50504494]
[88.75340271 -38.45668793]
[85.21615601 -53.06040955]
[83.79333496 -68.01889801]
[84.51388550 -83.02761078]
[87.36315918 -97.78099823]
[92.28312683 -111.97869873]
[99.17363739 -125.33166504]
[107.89440918 -137.56803894]
[118.26789093 -148.43872070]
[130.08290100 -157.72238159]
[143.09889221 -165.23001099]
[157.05088806 -170.80879211]
[171.65483093 -174.34513855]
[186.61340332 -175.76702881]
[201.62207031 -175.04554749]
[216.37527466 -172.19537354]
[230.57267761 -167.27452087]
[243.92521667 -160.38317871]
[256.16104126 -151.66165161]
[267.03109741 -141.28749084]
[276.31402588 -129.47190857]
[283.82086182 -116.45545197]
[289.39877319 -102.50312042]
[292.93420410 -87.89895630]
[294.35516357 -72.94029999]
[293.63275146 -57.93167114]
[290.78167725 -43.17863464]
[285.85992432 -28.98154640]
[278.96777344 -15.62943649]
[270.24548340 -3.39413857]
[259.87066650 7.47525263]
[248.05450439 16.75745010]
[235.03758240 24.26348114]
[221.08489990 29.84053230]
[206.48051453 33.37506104]
[191.52177429 34.79510880]
[176.51318359 34.07176971]
[161.76033020 31.21976089]
[147.56353760 26.29715347]
[140.68412781 39.62658310]
[140.40986633 47.01214981]
[133.60177612 53.10212326]
[126.52467346 66.32765198]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[86.70085907 140.74945068]
[79.62374878 153.97497559]
[92.53897858 161.60813904]
[105.11860657 169.78254700]
[117.33996582 178.48347473]
[129.18104553 187.69526672]
[140.62048340 197.40130615]
[151.63768005 207.58410645]
[162.21278381 218.22531128]
[172.32672119 229.30575562]
[181.96128845 240.80545044]
[191.09912109 252.70370483]
[199.72372437 264.97903442]
[207.81959534 277.60937500]
[215.37211609 290.57189941]
[222.36767578 303.84329224]
[228.79368591 317.39965820]
[234.63856506 331.21649170]
[239.89176941 345.26898193]
[244.54382324 359.53173828]
[248.58636475 373.97909546]
[252.01211548 388.58499146]
[254.81486511 403.32312012]
[256.98959351 418.16693115]
[258.53237915 433.08966064]
[259.44042969 448.06442261]
[259.71209717 463.06423950]
[259.34692383 478.06204224]
[258.34555054 493.03085327]
[256.70980835 507.94369507]
[254.44259644 522.77362061]
[251.54801941 537.49401855]
[248.03131104 552.07830811]
[243.89880371 566.50018311]
[239.15792847 580.73364258]
[233.81723022 594.75311279]
[227.88635254 608.53326416]
[221.37597656 622.04925537]
[214.29782104 635.27679443]
[206.66464233 648.19201660]
[198.49021912 660.77166748]
[189.78926086 672.99298096]
[180.57745361 684.83404541]
[170.87139893 696.27349854]
[160.68858337 707.29064941]
[150.04736328 717.86572266]
[138.96690369 727.97967529]
[127.46718597 737.61419678]
[115.56892395 746.75201416]
[103.29356384 755.37664795]
[90.66323090 763.47247314]
[77.70067596 771.02496338]
[64.42926788 778.02050781]
[50.87291336 784.44647217]
[37.05604553 790.29132080]
[23.00356865 795.54455566]
[8.74080086 800.19659424]
[-5.70655441 804.23907471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 154]
[91 153]
[92 152]
[93 151]
[95 149]
[96 148]
[97 147]
[98 146]
[99 144]
[100 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
