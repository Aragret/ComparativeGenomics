%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[34.95421219 679.01367188]
[23.35397720 688.53271484]
[11.13118362 697.23785400]
[-1.65718043 705.08862305]
[-14.95148945 712.04840088]
[-28.68975830 718.08465576]
[-42.80792999 723.16931152]
[-57.24018478 727.27868652]
[-71.91922760 730.39355469]
[-86.77661133 732.49945068]
[-101.74307251 733.58654785]
[-116.74883270 733.64971924]
[-131.72392273 732.68872070]
[-146.59851074 730.70800781]
[-161.30326843 727.71685791]
[-175.76960754 723.72918701]
[-189.93009949 718.76354980]
[-203.71870422 712.84313965]
[-217.07115173 705.99560547]
[-229.92517090 698.25280762]
[-242.22084045 689.65087891]
[-253.90081787 680.22991943]
[-264.91064453 670.03381348]
[-275.19900513 659.11016846]
[-284.71792603 647.50982666]
[-293.42303467 635.28698730]
[-301.27371216 622.49859619]
[-308.23336792 609.20422363]
[-314.26956177 595.46594238]
[-319.35412598 581.34771729]
[-323.46340942 566.91540527]
[-326.57818604 552.23638916]
[-328.68395996 537.37896729]
[-329.77093506 522.41247559]
[-329.83401489 507.40673828]
[-328.87292480 492.43167114]
[-326.89212036 477.55706787]
[-323.90084839 462.85235596]
[-319.91308594 448.38601685]
[-314.94735718 434.22558594]
[-309.02688599 420.43701172]
[-302.17926025 407.08459473]
[-294.43637085 394.23065186]
[-285.83435059 381.93502808]
[-276.41329956 370.25512695]
[-266.21713257 359.24533081]
[-255.29339600 348.95706177]
[-243.69303894 339.43820190]
[-231.47012329 330.73321533]
[-218.68165588 322.88259888]
[-205.38725281 315.92303467]
[-191.64889526 309.88693237]
[-177.53065491 304.80245972]
[-163.09835815 300.69329834]
[-148.41926575 297.57861328]
[-133.56185913 295.47293091]
[-118.59537506 294.38604736]
[-103.58961487 294.32305908]
[-88.61454773 295.28427124]
[-73.73997498 297.26516724]
[-59.03526688 300.25653076]
[-44.56897354 304.24441528]
[-30.40855217 309.21020508]
[-16.62001991 315.13076782]
[-3.26766920 321.97851562]
[9.58624649 329.72149658]
[18.18481064 317.43063354]
[26.78337479 305.13980103]
[35.38193893 292.84896851]
[42.45904541 279.62344360]
[47.91440201 265.65063477]
[53.36975861 251.67784119]
[58.82511520 237.70504761]
[64.28047180 223.73225403]
[69.73583221 209.75946045]
[75.19118500 195.78665161]
[80.64654541 181.81385803]
[86.10189819 167.84106445]
[89.31517792 153.18927002]
[90.20799255 138.21586609]
[83.24195099 125.05062866]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[95.02529144 57.42491913]
[88.12311554 43.18867874]
[96.60423279 30.94450569]
[96.93920898 15.94824600]
[96.71588135 0.94990832]
[96.49255371 -14.04842949]
[83.18432617 -21.58754158]
[75.48736572 -34.68920517]
[75.38244629 -49.78408432]
[82.79761505 -62.81755066]
[95.65438080 -70.33879852]
[95.43105316 -85.33713531]
[95.20772552 -100.33547211]
[81.18820953 -106.28298187]
[70.80455780 -117.42298889]
[65.85580444 -131.82540894]
[67.19935608 -146.99494934]
[74.60243225 -160.30337524]
[86.78240204 -169.44494629]
[101.62902069 -172.83580017]
[116.57000732 -169.88848877]
[129.01675415 -161.11361694]
[136.81278992 -148.03149414]
[138.60740662 -132.90869141]
[134.08966064 -118.36531067]
[124.04228973 -106.92108917]
[110.20606232 -100.55879974]
[110.42938995 -85.56046295]
[110.65271759 -70.56212616]
[123.72772217 -63.42700577]
[131.52766418 -50.62009811]
[131.87222290 -35.52878571]
[124.56875610 -22.20376396]
[111.49089050 -14.27175713]
[111.71421814 0.72658062]
[111.93754578 15.72491837]
[124.09883118 6.94407511]
[138.58673096 10.83005810]
[144.72129822 24.51826668]
[137.98036194 37.91826248]
[123.33309937 41.15206528]
[111.57764435 31.83732033]
[118.54368591 45.00255966]
[109.99870300 58.31773376]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[113.66252136 126.86450958]
[105.18139648 139.10868835]
[104.28858185 154.08209229]
[111.84231567 141.12287903]
[122.57376099 130.64260864]
[135.70820618 123.39785767]
[150.29745483 119.91162109]
[165.28829956 120.43558502]
[179.59854126 124.93191528]
[192.19511414 133.07601929]
[202.16865540 144.27996826]
[208.79916382 157.73493958]
[211.60797119 172.46961975]
[210.39233398 187.42027283]
[205.23999023 201.50761414]
[196.52288818 213.71467590]
[184.87033081 223.16020203]
[171.12353516 229.16232300]
[156.27487183 231.28773499]
[141.39630127 229.38299561]
[127.56190491 223.58563232]
[115.77040863 214.31414795]
[106.87303925 202.23783875]
[101.51212311 188.22854614]
[100.07469940 173.29641724]
[94.61933899 187.26921082]
[89.16398621 201.24201965]
[83.70862579 215.21481323]
[78.25327301 229.18760681]
[72.79791260 243.16040039]
[67.34255981 257.13320923]
[61.88719940 271.10598755]
[56.43184280 285.07879639]
[67.96702576 275.49029541]
[82.06250000 270.36022949]
[97.06233978 270.29125977]
[111.20438385 275.29153442]
[122.82723236 284.77359009]
[130.56546021 297.62347412]
[133.50996399 312.33163452]
[131.31483459 327.17013550]
[124.23797607 340.39581299]
[113.11074066 350.45486450]
[99.24035645 356.16558838]
[84.25630951 356.85711670]
[69.91889954 352.44818115]
[57.91247177 343.45675659]
[49.64753723 330.93914795]
[46.09504700 316.36587524]
[47.67277527 301.44754028]
[39.07421112 313.73837280]
[30.47564888 326.02920532]
[21.87708473 338.32003784]
[33.55718994 347.74087524]
[44.56716537 357.93679810]
[54.85567474 368.86032104]
[64.37474823 380.46051025]
[73.08000946 392.68322754]
[80.93085480 405.47155762]
[87.89069366 418.76580811]
[93.92707062 432.50402832]
[99.01184082 446.62219238]
[103.12129211 461.05441284]
[106.23627472 475.73342896]
[108.34226227 490.59078979]
[109.42942810 505.55725098]
[109.49270630 520.56298828]
[108.53180695 535.53808594]
[106.55120850 550.41271973]
[103.56014252 565.11749268]
[99.57255554 579.58386230]
[94.60704041 593.74438477]
[88.68675232 607.53302002]
[81.83928680 620.88549805]
[74.09657288 633.73956299]
[65.49471283 646.03527832]
[56.07381821 657.71533203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 186]
[67 185]
[68 184]
[69 183]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[78 158]
[79 136]
[80 135]
[82 133]
[84 131]
[85 130]
[86 129]
[88 127]
[89 121]
[90 120]
[91 119]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
