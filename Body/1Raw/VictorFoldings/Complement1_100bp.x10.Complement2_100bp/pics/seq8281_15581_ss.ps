%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[93.42464447 415.05816650]
[78.44103241 414.38845825]
[63.50625229 413.00656128]
[48.65414810 410.91558838]
[33.91835785 408.12026978]
[19.33226204 404.62698364]
[4.92890596 400.44363403]
[-9.25908470 395.57968140]
[-23.19956779 390.04614258]
[-36.86096573 383.85552979]
[-50.21232986 377.02194214]
[-63.22341537 369.56076050]
[-75.86474609 361.48898315]
[-88.10768890 352.82482910]
[-99.92450714 343.58795166]
[-111.28843689 333.79925537]
[-122.17372131 323.48092651]
[-132.55572510 312.65637207]
[-142.41090393 301.35006714]
[-151.71694946 289.58761597]
[-160.45277405 277.39572144]
[-168.59860229 264.80197144]
[-176.13595581 251.83486938]
[-183.04777527 238.52381897]
[-189.31840515 224.89898682]
[-194.93362427 210.99119568]
[-199.88073730 196.83198547]
[-204.14852905 182.45341492]
[-207.72732544 167.88806152]
[-210.60900879 153.16893005]
[-212.78707886 138.32934570]
[-214.25657654 123.40293121]
[-215.01419067 108.42350769]
[-215.05818176 93.42499542]
[-214.38848877 78.44138336]
[-213.00659180 63.50660706]
[-210.91563416 48.65449905]
[-208.12036133 33.91870499]
[-204.62709045 19.33260727]
[-200.44374084 4.92924595]
[-195.57980347 -9.25874996]
[-190.04626465 -23.19923973]
[-183.85569763 -36.86064529]
[-177.02209473 -50.21201706]
[-169.56095886 -63.22311020]
[-161.48916626 -75.86444855]
[-152.82502747 -88.10740662]
[-143.58816528 -99.92423248]
[-133.79948425 -111.28816986]
[-123.48118591 -122.17346954]
[-112.65662384 -132.55548096]
[-101.35033417 -142.41067505]
[-89.58791351 -151.71673584]
[-77.39601898 -160.45257568]
[-64.80226898 -168.59840393]
[-51.83518600 -176.13577271]
[-38.52414703 -183.04762268]
[-24.89930725 -189.31825256]
[-10.99153233 -194.93350220]
[3.16767406 -199.88063049]
[17.54623604 -204.14843750]
[32.11158371 -207.72723389]
[46.83071899 -210.60894775]
[61.67029953 -212.78703308]
[76.59671021 -214.25654602]
[91.57613373 -215.01417542]
[106.57464600 -215.05819702]
[107.24443054 -230.04322815]
[107.91421509 -245.02827454]
[108.58399963 -260.01330566]
[109.25378418 -274.99835205]
[109.92356873 -289.98339844]
[110.59335327 -304.96841431]
[95.72084045 -306.99905396]
[81.09459686 -310.37371826]
[66.83583832 -315.06445312]
[53.06270599 -321.03237915]
[39.88934326 -328.22805786]
[27.42490005 -336.59182739]
[15.77266979 -346.05444336]
[5.02920675 -356.53744507]
[-4.71646452 -367.95397949]
[-13.38358593 -380.20941162]
[-20.90033722 -393.20227051]
[-27.20443344 -406.82479858]
[-32.24363327 -420.96417236]
[-35.97617722 -435.50320435]
[-38.37113953 -450.32141113]
[-39.40867615 -465.29602051]
[-39.08018494 -480.30291748]
[-37.38838959 -495.21777344]
[-34.34730911 -509.91699219]
[-29.98214149 -524.27874756]
[-24.32906342 -538.18408203]
[-17.43491554 -551.51776123]
[-9.35682583 -564.16918945]
[-0.16173483 -576.03369141]
[10.07416344 -587.01281738]
[21.26604843 -597.01568604]
[33.32117844 -605.95935059]
[46.13966370 -613.76971436]
[59.61527634 -620.38201904]
[73.63636017 -625.74157715]
[88.08671570 -629.80389404]
[102.84661102 -632.53527832]
[117.79373932 -633.91320801]
[132.80424500 -633.92614746]
[147.75372314 -632.57409668]
[162.51832581 -629.86816406]
[176.97567749 -625.83081055]
[191.00599670 -620.49548340]
[204.49301147 -613.90643311]
[217.32496643 -606.11822510]
[229.39552307 -597.19543457]
[240.60466003 -587.21191406]
[250.85951233 -576.25042725]
[260.07507324 -564.40191650]
[268.17501831 -551.76440430]
[275.09216309 -538.44268799]
[280.76925659 -524.54711914]
[285.15924072 -510.19293213]
[288.22570801 -495.49899292]
[289.94323730 -480.58706665]
[290.29766846 -465.58074951]
[289.28598022 -450.60437012]
[286.91662598 -435.78204346]
[283.20919800 -421.23660278]
[278.19442749 -407.08853149]
[271.91387939 -393.45513916]
[264.41955566 -380.44934082]
[255.77362061 -368.17892456]
[246.04768372 -356.74557495]
[235.32234192 -346.24404907]
[223.68647766 -336.76132202]
[211.23649597 -328.37603760]
[198.07559204 -321.15762329]
[184.31278992 -315.16589355]
[170.06214905 -310.45056152]
[155.44175720 -307.05062866]
[140.57276917 -304.99432373]
[125.57839203 -304.29864502]
[124.90860748 -289.31359863]
[124.23882294 -274.32855225]
[123.56903839 -259.34353638]
[122.89925385 -244.35848999]
[122.22946930 -229.37344360]
[121.55968475 -214.38841248]
[136.49446106 -213.00646973]
[151.34655762 -210.91546631]
[166.08233643 -208.12013245]
[180.66842651 -204.62681580]
[195.07177734 -200.44342041]
[209.25975037 -195.57942200]
[223.20022583 -190.04585266]
[236.86160278 -183.85522461]
[250.21295166 -177.02159119]
[263.22402954 -169.56039429]
[275.86532593 -161.48857117]
[288.10827637 -152.82438660]
[299.92504883 -143.58747864]
[311.28897095 -133.79876709]
[322.17422485 -123.48043060]
[332.55621338 -112.65583801]
[342.41134644 -101.34951019]
[351.71737671 -89.58705902]
[360.45318604 -77.39513397]
[368.59896851 -64.80135345]
[376.13629150 -51.83424759]
[383.04809570 -38.52318573]
[389.31869507 -24.89832497]
[394.93386841 -10.99053097]
[399.88095093 3.16869259]
[404.14871216 17.54726982]
[407.72747803 32.11262894]
[410.60913086 46.83177567]
[412.78717041 61.67136383]
[414.25662231 76.59777832]
[415.01419067 91.57720184]
[415.05816650 106.57571411]
[414.38842773 121.55932617]
[413.00650024 136.49409485]
[410.91552734 151.34620667]
[408.12020874 166.08198547]
[404.62689209 180.66807556]
[400.44354248 195.07144165]
[395.57955933 209.25941467]
[390.04598999 223.19989014]
[383.85537720 236.86128235]
[377.02175903 250.21264648]
[369.56057739 263.22372437]
[361.48876953 275.86505127]
[352.82461548 288.10797119]
[343.58770752 299.92477417]
[333.79901123 311.28869629]
[323.48068237 322.17398071]
[312.65609741 332.55596924]
[301.34979248 342.41113281]
[289.58734131 351.71716309]
[277.39541626 360.45297241]
[264.80166626 368.59878540]
[251.83456421 376.13610840]
[238.52349854 383.04794312]
[224.89865112 389.31854248]
[210.99085999 394.93374634]
[196.83164978 399.88085938]
[182.45307922 404.14862061]
[167.88772583 407.72738647]
[153.16857910 410.60906982]
[138.32899475 412.78710938]
[123.40258026 414.25659180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
