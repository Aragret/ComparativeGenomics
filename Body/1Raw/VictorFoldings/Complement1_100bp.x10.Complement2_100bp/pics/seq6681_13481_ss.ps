%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[91.49704742 501.25485229]
[80.65367889 511.65084839]
[68.54608917 520.54248047]
[55.38146591 527.77764893]
[41.38506699 533.23254395]
[26.79638863 536.81378174]
[11.86506176 538.46014404]
[-3.15341711 538.14343262]
[-18.00206375 535.86907959]
[-32.42679596 531.67602539]
[-46.18078995 525.63592529]
[-59.02869415 517.85217285]
[-70.75067139 508.45800781]
[-81.14613342 497.61416626]
[-90.03720093 485.50613403]
[-97.27174377 472.34118652]
[-102.72596741 458.34451294]
[-106.30653381 443.75567627]
[-107.95218658 428.82427979]
[-107.63476562 413.80578613]
[-105.35969543 398.95727539]
[-101.16590881 384.53271484]
[-95.12516022 370.77902222]
[-87.34082794 357.93148804]
[-77.94610596 346.20996094]
[-67.10174561 335.81500244]
[-54.99331284 326.92453003]
[-41.82799911 319.69061279]
[-27.83108139 314.23706055]
[-13.24206161 310.65716553]
[1.68942130 309.01223755]
[16.70787048 309.33038330]
[31.55629921 311.60614014]
[35.74330902 297.20236206]
[39.93032074 282.79858398]
[44.11733246 268.39480591]
[40.24018860 254.01367188]
[51.52204514 242.92176819]
[55.70905685 228.51799011]
[51.83191299 214.13685608]
[63.11377335 203.04495239]
[67.30078125 188.64117432]
[71.38044739 174.20661926]
[75.35254669 159.74209595]
[71.26171875 145.42027283]
[82.37718201 134.16163635]
[81.11714172 126.87918854]
[86.51759338 119.51216888]
[90.70460510 105.10838318]
[94.13566589 90.50606537]
[96.80146027 75.74484253]
[99.46725464 60.98362732]
[102.13304901 46.22241211]
[104.79884338 31.46119499]
[107.46464539 16.69997787]
[110.13043976 1.93875992]
[112.79623413 -12.82245731]
[99.88806915 -5.18182373]
[85.32424927 -8.77279854]
[77.44758606 -21.53830719]
[80.77019501 -36.16568756]
[93.38873291 -44.27571106]
[108.07472992 -41.22258759]
[116.41518402 -28.75621796]
[120.38728333 -43.22074127]
[124.35937500 -57.68526459]
[128.33146667 -72.14978790]
[124.52475739 -87.50620270]
[135.35610962 -97.73024750]
[134.03471375 -102.78009796]
[134.71449280 -107.37261200]
[136.88615417 -110.82209778]
[139.84202576 -112.74436951]
[144.45603943 -127.01710510]
[149.07003784 -141.28984070]
[153.68405151 -155.56257629]
[152.67547607 -162.09666443]
[154.79933167 -167.36793518]
[158.65374756 -170.18794250]
[163.69067383 -184.31697083]
[168.72758484 -198.44599915]
[170.95269775 -213.28004456]
[170.28291321 -228.26507568]
[169.61312866 -243.25012207]
[168.94334412 -258.23516846]
[168.27355957 -273.22018433]
[167.60377502 -288.20523071]
[159.25798035 -301.64614868]
[166.41926575 -314.70620728]
[151.55328369 -317.06994629]
[137.46752930 -322.37811279]
[124.73883820 -330.41339111]
[113.88842773 -340.84664917]
[105.36061096 -353.25073242]
[99.50460052 -367.11767578]
[96.56019592 -381.87963867]
[96.64797211 -396.93212891]
[99.76433563 -411.65872192]
[105.78166199 -425.45645142]
[114.45355988 -437.76022339]
[125.42491150 -448.06625366]
[138.24644470 -455.95251465]
[152.39314270 -461.09606934]
[167.28569031 -463.28625488]
[182.31423950 -462.43344116]
[196.86340332 -458.57250977]
[210.33738708 -451.86157227]
[222.18444824 -442.57546997]
[231.91946411 -431.09442139]
[239.14376831 -417.88858032]
[243.56153870 -403.49871826]
[244.99188232 -388.51406860]
[243.37622070 -373.54830933]
[238.78071594 -359.21420288]
[231.39353943 -346.09878540]
[221.51719666 -334.73907471]
[209.55613708 -325.60028076]
[196.00013733 -319.05657959]
[181.40431213 -315.37600708]
[189.70219421 -303.00692749]
[182.58882141 -288.87503052]
[183.25860596 -273.88998413]
[183.92839050 -258.90493774]
[184.59817505 -243.91990662]
[185.26795959 -228.93486023]
[185.93774414 -213.94982910]
[191.95945740 -227.68804932]
[200.85034180 -239.76911926]
[212.17655945 -249.60357666]
[225.38552856 -256.71157837]
[239.83270264 -260.74627686]
[254.81320190 -261.51086426]
[269.59609985 -258.96798706]
[283.46008301 -253.24172974]
[295.72869873 -244.61151123]
[305.80337524 -233.49839783]
[313.19247437 -220.44462585]
[317.53552246 -206.08712769]
[318.62060547 -191.12641907]
[316.39477539 -176.29248047]
[310.96661377 -162.30909729]
[302.60101318 -149.85853577]
[291.70611572 -139.54829407]
[278.81350708 -131.88142395]
[264.55224609 -127.23202515]
[249.61820984 -125.82694244]
[234.74002075 -127.73472595]
[220.64364624 -132.86230469]
[208.01686096 -140.95947266]
[197.47575378 -151.63117981]
[189.53466797 -164.35670471]
[184.58103943 -178.51515198]
[182.85661316 -193.40907288]
[177.81970215 -179.28004456]
[172.78279114 -165.15101624]
[167.95678711 -150.94856262]
[163.34277344 -136.67582703]
[158.72877502 -122.40309906]
[154.11476135 -108.13036346]
[149.82063293 -93.75814819]
[153.91146851 -79.43633270]
[142.79600525 -68.17769623]
[138.82389832 -53.71316910]
[134.85180664 -39.24864578]
[130.87971497 -24.78412247]
[127.55744934 -10.15666199]
[124.89165497 4.60455561]
[122.22586060 19.36577225]
[119.56006622 34.12699127]
[116.89426422 48.88820648]
[114.22846985 63.64942551]
[111.56267548 78.41064453]
[108.89688110 93.17185974]
[121.16938019 84.54714203]
[136.12474060 85.70349121]
[146.92558289 96.11223602]
[148.63389587 111.01464081]
[140.46865845 123.59752655]
[126.16291809 128.10816956]
[112.25706482 122.48435974]
[105.10838318 109.29539490]
[100.92137146 123.69918060]
[96.84170532 138.13372803]
[100.64842224 153.49014282]
[89.81707001 163.71418762]
[85.84497070 178.17871094]
[86.59019470 187.28269958]
[81.70456696 192.82818604]
[77.51755524 207.23196411]
[81.09521484 222.64335632]
[70.11283875 232.70500183]
[65.92582703 247.10877991]
[69.50348663 262.52017212]
[58.52111435 272.58181763]
[54.33410263 286.98559570]
[50.14709091 301.38937378]
[45.96008301 315.79315186]
[59.71464920 321.83193970]
[72.56329346 329.61444092]
[84.28616333 339.00747681]
[94.68265533 349.85037231]
[103.57488251 361.95751953]
[110.81067657 375.12179565]
[116.26623535 389.11795044]
[119.84819031 403.70645142]
[121.49526978 418.63769531]
[121.17926788 433.65618896]
[118.90561676 448.50494385]
[114.71319580 462.92987061]
[108.67376709 476.68417358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 197]
[34 196]
[35 195]
[36 194]
[38 192]
[39 191]
[41 189]
[42 188]
[43 186]
[44 185]
[46 183]
[48 182]
[49 181]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[64 165]
[65 164]
[66 163]
[67 162]
[69 160]
[73 159]
[74 158]
[75 157]
[76 156]
[79 155]
[80 154]
[81 153]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[89 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
