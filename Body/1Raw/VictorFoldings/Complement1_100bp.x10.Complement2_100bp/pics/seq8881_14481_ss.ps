%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[38.76158142 584.13592529]
[26.19865799 592.34112549]
[13.14062214 599.73303223]
[-0.35994956 606.28186035]
[-14.24869347 611.96124268]
[-28.46968460 616.74829102]
[-42.96565628 620.62377930]
[-57.67824554 623.57202148]
[-72.54820251 625.58123779]
[-87.51565552 626.64324951]
[-102.52033234 626.75384521]
[-117.50180817 625.91259766]
[-132.39976501 624.12286377]
[-147.15422058 621.39178467]
[-161.70574951 617.73040771]
[-175.99577332 613.15356445]
[-189.96673584 607.67950439]
[-203.56237793 601.33044434]
[-216.72798157 594.13183594]
[-229.41049194 586.11273193]
[-241.55886841 577.30541992]
[-253.12419128 567.74530029]
[-264.05990601 557.47088623]
[-274.32192993 546.52362061]
[-283.86898804 534.94750977]
[-292.66259766 522.78918457]
[-300.66738892 510.09759521]
[-307.85110474 496.92388916]
[-314.18484497 483.32107544]
[-319.64306641 469.34393311]
[-324.20382690 455.04876709]
[-327.84872437 440.49310303]
[-330.56311035 425.73559570]
[-332.33605957 410.83560181]
[-333.16040039 395.85317993]
[-333.03286743 380.84863281]
[-331.95391846 365.88241577]
[-329.92791748 351.01473999]
[-326.96304321 336.30548096]
[-323.07119751 321.81390381]
[-318.26809692 307.59832764]
[-312.57302856 293.71600342]
[-306.00897217 280.22283936]
[-298.60232544 267.17315674]
[-290.38293457 254.61949158]
[-281.38388062 242.61242676]
[-271.64141846 231.20030212]
[-261.19473267 220.42904663]
[-250.08595276 210.34205627]
[-238.35978699 200.97993469]
[-226.06343079 192.38038635]
[-213.24641418 184.57804871]
[-199.96034241 177.60430908]
[-186.25872803 171.48727417]
[-172.19671631 166.25157166]
[-157.83096313 161.91828918]
[-143.21928406 158.50485229]
[-128.42053223 156.02502441]
[-113.49430084 154.48878479]
[-98.50067902 153.90232849]
[-83.50005341 154.26800537]
[-68.55281830 155.58435059]
[-53.71916962 157.84605408]
[-39.05883026 161.04402161]
[-24.63083839 165.16537476]
[-10.49328518 170.19351196]
[3.29689932 176.10818481]
[16.68418694 182.88557434]
[29.61466980 190.49839783]
[38.02928925 178.08090210]
[46.44390869 165.66340637]
[54.85852432 153.24591064]
[63.27314377 140.82841492]
[71.68775940 128.41091919]
[80.10237885 115.99342346]
[88.51699829 103.57593536]
[96.74581146 91.03453064]
[104.78697968 78.37200928]
[112.82815552 65.70948029]
[120.86932373 53.04695511]
[108.79349518 44.13859177]
[97.36849213 34.40955734]
[86.64999390 23.90725136]
[76.69020844 12.68284035]
[67.53765869 0.79100907]
[59.23694611 -11.71030617]
[51.82850647 -24.76020050]
[45.34843063 -38.29509354]
[39.82829285 -52.24904633]
[35.29498291 -66.55407715]
[31.77058792 -81.14048767]
[29.27228165 -95.93721771]
[27.81223297 -110.87216949]
[27.39755440 -125.87259674]
[28.03026772 -140.86540222]
[29.70729256 -155.77755737]
[32.42045212 -170.53640747]
[36.15653610 -185.07003784]
[40.89733505 -199.30764771]
[46.61975861 -213.17987061]
[53.29592514 -226.61912537]
[60.89330292 -239.55993652]
[69.37488556 -251.93925476]
[78.69934845 -263.69677734]
[88.82126617 -274.77517700]
[99.69132233 -285.12054443]
[111.25655365 -294.68246460]
[123.46062469 -303.41433716]
[136.24407959 -311.27359009]
[149.54461670 -318.22198486]
[163.29747009 -324.22564697]
[177.43560791 -329.25534058]
[191.89015198 -333.28656006]
[206.59069824 -336.29962158]
[221.46562195 -338.27990723]
[236.44244385 -339.21774292]
[251.44821167 -339.10855103]
[266.40979004 -337.95288086]
[281.25433350 -335.75631714]
[295.90945435 -332.52963257]
[310.30383301 -328.28851318]
[324.36727905 -323.05361938]
[338.03128052 -316.85043335]
[351.22930908 -309.70922852]
[363.89703369 -301.66473389]
[375.97274780 -292.75622559]
[387.39758301 -283.02700806]
[398.11593628 -272.52456665]
[408.07556152 -261.29998779]
[417.22793579 -249.40803528]
[425.52847290 -236.90660095]
[432.93673706 -223.85659790]
[439.41662598 -210.32160950]
[444.93655396 -196.36758423]
[449.46966553 -182.06248474]
[452.99383545 -167.47602844]
[455.49194336 -152.67926025]
[456.95178223 -137.74427795]
[457.36624146 -122.74385071]
[456.73330688 -107.75105286]
[455.05606079 -92.83892059]
[452.34271240 -78.08011627]
[448.60641479 -63.54653931]
[443.86541748 -49.30899811]
[438.14279175 -35.43685532]
[431.46643066 -21.99769592]
[423.86886597 -9.05699730]
[415.38708496 3.32219815]
[406.06246948 15.07957745]
[395.94039917 26.15785980]
[385.07019043 36.50307083]
[373.50482178 46.06481171]
[361.30062866 54.79649734]
[348.51705933 62.65559006]
[335.21640015 69.60379028]
[321.46347046 75.60726166]
[307.32528687 80.63674927]
[292.87066650 84.66774750]
[278.17007446 87.68061829]
[263.29513550 89.66068268]
[248.31828308 90.59828949]
[233.31253052 90.48888397]
[218.35095215 89.33299255]
[203.50646973 87.13624573]
[188.85136414 83.90933990]
[174.45707703 79.66800690]
[160.39369202 74.43289948]
[146.72976685 68.22953796]
[133.53184509 61.08813095]
[125.49067688 73.75065613]
[117.44950867 86.41317749]
[109.40833282 99.07570648]
[109.36241150 104.32087708]
[106.38098145 109.16694641]
[100.93449402 111.99054718]
[92.51987457 124.40804291]
[84.10525513 136.82554626]
[75.69064331 149.24304199]
[67.27602386 161.66053772]
[58.86140060 174.07803345]
[50.44678497 186.49552917]
[42.03216553 198.91302490]
[53.89508820 208.10125732]
[65.15136719 218.02337646]
[75.75569153 228.63945007]
[85.66534424 239.90672302]
[94.84042358 251.77981567]
[103.24399567 264.21090698]
[110.84221649 277.14999390]
[117.60448456 290.54492188]
[123.50358582 304.34176636]
[128.51574707 318.48501587]
[132.62080383 332.91763306]
[135.80221558 347.58157349]
[138.04716492 362.41778564]
[139.34663391 377.36648560]
[139.69537354 392.36752319]
[139.09197998 407.36047363]
[137.53889465 422.28494263]
[135.04235840 437.08090210]
[131.61242676 451.68869019]
[127.26290894 466.04956055]
[122.01132965 480.10565186]
[115.87882996 493.80035400]
[108.89009857 507.07852173]
[101.07328033 519.88671875]
[92.45985413 532.17333984]
[83.08449554 543.88897705]
[72.98497009 554.98632812]
[62.20192719 565.42083740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 182]
[70 181]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 172]
[78 171]
[79 170]
[80 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
