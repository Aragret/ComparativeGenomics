%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[88.93400574 490.04464722]
[95.66065216 476.23712158]
[108.39883423 467.65606689]
[107.28318024 452.69763184]
[106.16753387 437.73916626]
[105.05188751 422.78070068]
[96.09353638 414.65209961]
[95.04164886 402.19909668]
[103.00360107 392.05166626]
[102.11078644 377.07824707]
[93.62966919 364.83407593]
[100.53184509 350.59783936]
[99.63903046 335.62445068]
[98.74621582 320.65103149]
[96.36589813 318.04980469]
[95.12725830 314.16638184]
[95.61918640 309.54998779]
[98.16307068 304.99194336]
[97.93974304 289.99359131]
[97.71641541 274.99526978]
[97.49308777 259.99691772]
[97.26976013 244.99858093]
[97.04643250 230.00024414]
[96.82310486 215.00190735]
[96.59977722 200.00357056]
[93.85757446 196.09341431]
[93.54259491 190.41909790]
[96.59977722 184.55691528]
[96.82310486 169.55857849]
[96.37650299 154.56523132]
[95.26084900 139.60678101]
[94.14520264 124.64832306]
[93.02955627 109.68987274]
[86.59661102 123.24041748]
[75.75328064 133.60488892]
[61.92618561 139.41964722]
[46.93452072 139.91967773]
[32.75069809 135.03918457]
[21.24084473 125.42028046]
[13.91927719 112.32850647]
[11.74927330 97.48629761]
[15.01633644 82.84641266]
[23.29062653 70.33496857]
[35.48352051 61.59807587]
[49.99082947 57.78520966]
[64.90386963 59.39802551]
[78.26058197 66.22432709]
[88.30364227 77.36599731]
[93.71217346 91.35949707]
[95.93729401 76.52545166]
[90.33272552 61.73020172]
[99.87240601 50.29150391]
[102.09751892 35.45745850]
[104.32263947 20.62341499]
[106.54775238 5.78937101]
[108.77287292 -9.04467297]
[110.99798584 -23.87871742]
[113.22310638 -38.71276093]
[115.44822693 -53.54680252]
[108.42332458 -64.36408997]
[110.58202362 -76.67359161]
[120.22984314 -83.97057343]
[114.84618378 -98.84762573]
[124.55510712 -110.14302826]
[127.00083160 -124.94229889]
[129.44656372 -139.74157715]
[131.89228821 -154.54084778]
[134.33801270 -169.34011841]
[127.47495270 -180.26078796]
[129.81668091 -192.53678894]
[139.57206726 -199.68931580]
[142.23786926 -214.45053101]
[144.90367126 -229.21176147]
[146.79695129 -244.09179688]
[147.91261292 -259.05023193]
[149.02825928 -274.00869751]
[142.33879089 -288.34613037]
[151.00128174 -300.46267700]
[152.11692810 -315.42111206]
[153.23257446 -330.37957764]
[138.47232056 -333.13601685]
[124.10488892 -337.49954224]
[110.30469513 -343.41711426]
[97.23925018 -350.81695557]
[85.06716919 -359.60919189]
[73.93620300 -369.68713379]
[63.98147202 -380.92840576]
[55.32381821 -393.19659424]
[48.06834030 -406.34274292]
[42.30310440 -420.20727539]
[38.09810257 -434.62188721]
[35.50437927 -449.41162109]
[34.55342102 -464.39691162]
[35.25676346 -479.39584351]
[37.60587692 -494.22637939]
[41.57224655 -508.70849609]
[47.10771561 -522.66632080]
[54.14509583 -535.93054199]
[62.59895706 -548.34002686]
[72.36667633 -559.74414062]
[83.32968140 -570.00457764]
[95.35489655 -578.99664307]
[108.29634857 -586.61120605]
[121.99693298 -592.75592041]
[136.29032898 -597.35614014]
[151.00305176 -600.35595703]
[165.95648193 -601.71905518]
[180.96911621 -601.42883301]
[195.85868835 -599.48883057]
[210.44448853 -595.92260742]
[224.54942322 -590.77349854]
[238.00228882 -584.10388184]
[250.63978577 -575.99481201]
[262.30850220 -566.54467773]
[272.86676025 -555.86828613]
[282.18646240 -544.09515381]
[290.15438843 -531.36822510]
[296.67388916 -517.84197998]
[301.66577148 -503.68060303]
[305.06948853 -489.05603027]
[306.84368896 -474.14578247]
[306.96682739 -459.13085938]
[305.43743896 -444.19351196]
[302.27404785 -429.51507568]
[297.51510620 -415.27374268]
[291.21835327 -401.64239502]
[283.46020508 -388.78646851]
[274.33489990 -376.86206055]
[263.95315552 -366.01388550]
[252.44100952 -356.37368774]
[239.93821716 -348.05841064]
[226.59655762 -341.16906738]
[212.57797241 -335.78924561]
[198.05262756 -331.98428345]
[183.19686890 -329.80032349]
[168.19102478 -329.26391602]
[167.07537842 -314.30548096]
[165.95973206 -299.34701538]
[172.72898865 -286.07952881]
[163.98670959 -272.89303589]
[162.87106323 -257.93460083]
[161.75541687 -242.97613525]
[173.06404114 -252.83082581]
[188.05854797 -253.23663330]
[199.88365173 -244.00802612]
[203.13305664 -229.36421204]
[196.32119751 -216.00013733]
[182.56234741 -210.02568054]
[168.14688110 -214.17227173]
[159.66488647 -226.54595947]
[156.99908447 -211.78474426]
[154.33329773 -197.02352905]
[161.14846802 -180.85192871]
[149.13728333 -166.89437866]
[146.69155884 -152.09510803]
[144.24583435 -137.29583740]
[141.80010986 -122.49657440]
[139.35437012 -107.69730377]
[144.91297913 -93.87879181]
[135.02911377 -81.52484894]
[142.08430481 -65.45652008]
[130.28227234 -51.32168579]
[128.05714417 -36.48764420]
[125.83203125 -21.65359879]
[123.60691833 -6.81955576]
[121.38179779 8.01448822]
[119.15668488 22.84853172]
[116.93156433 37.68257523]
[114.70644379 52.51662064]
[120.47016907 66.25083923]
[110.77133942 78.75057220]
[108.54621887 93.58461761]
[107.98800659 108.57422638]
[109.10365295 123.53267670]
[110.21930695 138.49113464]
[111.33495331 153.44958496]
[121.91846466 142.81994629]
[136.91749573 142.64942932]
[147.73991394 153.03572083]
[148.18617249 168.02906799]
[138.00059509 179.04061890]
[123.01798248 179.76245117]
[111.82144165 169.78190613]
[111.59811401 184.78024292]
[111.59811401 199.78024292]
[111.82144165 214.77857971]
[112.04476929 229.77691650]
[112.26809692 244.77525330]
[112.49142456 259.77359009]
[112.71475220 274.77194214]
[112.93807983 289.77026367]
[113.16140747 304.76861572]
[113.71961975 319.75820923]
[114.61243439 334.73162842]
[115.50525665 349.70501709]
[124.05023956 363.02020264]
[117.08419800 376.18545532]
[117.97701263 391.15884399]
[128.47093201 406.29025269]
[120.01033783 421.66506958]
[121.12598419 436.62350464]
[122.24163818 451.58197021]
[123.35728455 466.54043579]
[137.22744751 473.13693237]
[145.92790222 485.79385376]
[147.11824036 501.10656738]
[140.47830200 514.95599365]
[127.79415894 523.61669922]
[112.47780609 524.75903320]
[98.64926147 518.07574463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[6 200]
[9 198]
[10 197]
[12 195]
[13 194]
[14 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[24 186]
[25 185]
[28 184]
[29 183]
[30 176]
[31 175]
[32 174]
[33 173]
[49 172]
[50 171]
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[59 162]
[62 160]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[71 152]
[72 151]
[73 150]
[74 142]
[75 141]
[76 140]
[78 138]
[79 137]
[80 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
