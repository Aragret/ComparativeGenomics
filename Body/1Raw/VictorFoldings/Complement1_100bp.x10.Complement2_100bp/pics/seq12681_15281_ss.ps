%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[10.20761776 861.98797607]
[-4.76644945 862.90838623]
[-19.76625252 863.18377686]
[-34.76401520 862.81359863]
[-49.73196411 861.79846191]
[-64.64237976 860.14038086]
[-79.46765900 857.84228516]
[-94.18034363 854.90856934]
[-108.75318909 851.34454346]
[-123.15920258 847.15692139]
[-137.37171936 842.35333252]
[-151.36442566 836.94274902]
[-165.11138916 830.93518066]
[-178.58717346 824.34179688]
[-191.76681519 817.17468262]
[-204.62590027 809.44726562]
[-217.14064026 801.17370605]
[-229.28784180 792.36944580]
[-241.04501343 783.05065918]
[-252.39039612 773.23474121]
[-263.30294800 762.93981934]
[-273.76251221 752.18493652]
[-283.74966431 740.98999023]
[-293.24597168 729.37579346]
[-302.23379517 717.36370850]
[-310.69650269 704.97613525]
[-318.61843872 692.23596191]
[-325.98495483 679.16668701]
[-332.78234863 665.79266357]
[-338.99807739 652.13854980]
[-344.62060547 638.22967529]
[-349.63955688 624.09179688]
[-354.04562378 609.75103760]
[-357.83062744 595.23406982]
[-360.98757935 580.56762695]
[-363.51062012 565.77899170]
[-365.39508057 550.89544678]
[-366.63745117 535.94470215]
[-367.23547363 520.95428467]
[-367.18804932 505.95202637]
[-366.49520874 490.96569824]
[-365.15826416 476.02304077]
[-363.17968750 461.15176392]
[-360.56317139 446.37936401]
[-357.31350708 431.73321533]
[-353.43676758 417.24044800]
[-348.94006348 402.92785645]
[-343.83178711 388.82199097]
[-338.12139893 374.94897461]
[-331.81942749 361.33444214]
[-324.93756104 348.00366211]
[-317.48852539 334.98129272]
[-309.48617554 322.29144287]
[-300.94525146 309.95764160]
[-291.88162231 298.00271606]
[-282.31207275 286.44876099]
[-272.25430298 275.31723022]
[-261.72692871 264.62872314]
[-250.74945068 254.40301514]
[-239.34220886 244.65905762]
[-227.52632141 235.41487122]
[-215.32368469 226.68760681]
[-202.75686646 218.49339294]
[-189.84915161 210.84742737]
[-176.62443542 203.76387024]
[-163.10720825 197.25581360]
[-149.32252502 191.33532715]
[-135.29588318 186.01338196]
[-121.05326080 181.29980469]
[-106.62104034 177.20335388]
[-92.02593994 173.73159790]
[-77.29499817 170.89097595]
[-62.45547867 168.68673706]
[-47.53487015 167.12297058]
[-32.56079865 166.20257568]
[-17.56099701 165.92724609]
[-2.56323552 166.29750061]
[12.40470982 167.31265259]
[27.31512260 168.97080994]
[42.14039230 171.26892090]
[56.85306549 174.20271301]
[71.42589569 177.76676941]
[75.61290741 163.36299133]
[79.79991913 148.95921326]
[83.98693085 134.55541992]
[88.17394257 120.15164185]
[91.49620056 105.52418518]
[89.59895325 97.69009399]
[94.09008789 90.52346039]
[96.75588226 75.76224518]
[99.42167664 61.00102997]
[102.08747101 46.23981094]
[104.75327301 31.47859383]
[106.53573608 16.58487701]
[107.42855072 1.61147141]
[107.98676300 -13.37813854]
[108.21009064 -28.37647629]
[108.43341827 -43.37481308]
[94.35279846 -49.04055786]
[83.27239227 -59.41306686]
[76.69071960 -73.08954620]
[75.49791718 -88.22035980]
[79.85528564 -102.75920105]
[89.17353058 -114.73979950]
[102.19243622 -122.54187775]
[117.15130615 -125.11027527]
[132.02706909 -122.09764099]
[144.80790710 -113.91139221]
[153.76531982 -101.65866852]
[157.68788147 -86.99654388]
[156.04508972 -71.90794373]
[149.05914307 -58.43349075]
[137.67481995 -48.39548492]
[123.43175507 -43.15148544]
[123.20842743 -28.15314865]
[122.98509979 -13.15481091]
[125.16535187 -10.38373852]
[126.11173248 -6.41896582]
[125.27780914 -1.85192394]
[122.40195465 2.50428724]
[121.50914001 17.47769356]
[132.03871155 6.79462099]
[146.81736755 4.22725916]
[160.33303833 10.73317051]
[167.54469299 23.88581085]
[165.76258850 38.77957153]
[155.65138245 49.85944748]
[140.98231506 52.99291611]
[127.22660065 47.01127625]
[119.51448822 34.14439011]
[116.84869385 48.90560532]
[114.18289948 63.66682434]
[111.51709747 78.42803955]
[108.85130310 93.18926239]
[106.29547119 107.96990967]
[117.87932587 98.44025421]
[132.84487915 97.42431641]
[145.61036682 105.30102539]
[151.41455078 119.13256073]
[148.09263611 133.76010132]
[136.88362122 143.72793579]
[121.96816254 145.31831360]
[108.90937805 137.93804932]
[102.57772827 124.33865356]
[98.39071655 138.74243164]
[94.20370483 153.14622498]
[90.01669312 167.55000305]
[85.82968140 181.95378113]
[100.04221344 186.75730896]
[114.03493500 192.16783142]
[127.78192139 198.17533875]
[141.25772095 204.76872253]
[154.43739319 211.93574524]
[167.29650879 219.66316223]
[179.81126404 227.93666077]
[191.95849609 236.74090576]
[203.71569824 246.05960083]
[215.06111145 255.87548828]
[225.97370911 266.17037964]
[236.43330383 276.92523193]
[246.42050171 288.12014771]
[255.91682434 299.73434448]
[264.90469360 311.74633789]
[273.36746216 324.13391113]
[281.28942871 336.87408447]
[288.65597534 349.94326782]
[295.45343018 363.31732178]
[301.66918945 376.97140503]
[307.29177856 390.88024902]
[312.31079102 405.01812744]
[316.71688843 419.35885620]
[320.50195312 433.87585449]
[323.65893555 448.54226685]
[326.18200684 463.33090210]
[328.06652832 478.21438599]
[329.30899048 493.16519165]
[329.90704346 508.15557861]
[329.85964966 523.15783691]
[329.16687012 538.14416504]
[327.82998657 553.08679199]
[325.85147095 567.95812988]
[323.23498535 582.73052979]
[319.98538208 597.37664795]
[316.10867310 611.86944580]
[311.61203003 626.18206787]
[306.50381470 640.28796387]
[300.79345703 654.16101074]
[294.49151611 667.77551270]
[287.60968018 681.10632324]
[280.16073608 694.12872314]
[272.15838623 706.81860352]
[263.61752319 719.15246582]
[254.55393982 731.10742188]
[244.98442078 742.66137695]
[234.92668152 753.79296875]
[224.39933777 764.48150635]
[213.42190552 774.70721436]
[202.01469421 784.45123291]
[190.19885254 793.69543457]
[177.99623108 802.42279053]
[165.42944336 810.61700439]
[152.52174377 818.26300049]
[139.29705811 825.34661865]
[125.77986145 831.85473633]
[111.99518585 837.77526855]
[97.96855927 843.09729004]
[83.72595978 847.81085205]
[69.29375458 851.90734863]
[54.69866562 855.37915039]
[39.96773148 858.21984863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 121]
[95 120]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
