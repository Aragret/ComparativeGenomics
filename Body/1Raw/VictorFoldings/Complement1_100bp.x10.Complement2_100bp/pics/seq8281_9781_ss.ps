%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[48.34458923 711.93011475]
[33.85507965 715.87860107]
[19.00026512 718.08557129]
[3.98868489 718.52014160]
[-10.96892166 717.17608643]
[-25.66257286 714.07238770]
[-39.88599396 709.25262451]
[-53.43951035 702.78430176]
[-66.13285065 694.75842285]
[-77.78781891 685.28747559]
[-88.24080658 674.50457764]
[-97.34505463 662.56097412]
[-104.97277069 649.62445068]
[-111.01686096 635.87652588]
[-115.39247894 621.51025391]
[-118.03819275 606.72723389]
[-118.91687775 591.73510742]
[-118.01618195 576.74426270]
[-115.34875488 561.96520996]
[-110.95204163 547.60534668]
[-104.88777161 533.86633301]
[-97.24106598 520.94097900]
[-88.11928558 509.01077271]
[-77.65047455 498.24322510]
[-65.98161316 488.78945923]
[-53.27649689 480.78216553]
[-39.71349716 474.33380127]
[-25.48301315 469.53488159]
[-10.78481865 466.45275879]
[4.17474556 465.13073730]
[19.18567085 465.58731079]
[21.41078758 450.75326538]
[23.63590622 435.91921997]
[25.86102295 421.08517456]
[18.56738281 405.12368774]
[30.15766716 390.81469727]
[32.16167831 375.94915771]
[18.89836502 369.06658936]
[8.77109241 358.04083252]
[3.01637244 344.18957520]
[2.34658837 329.17715454]
[6.86185980 314.81460571]
[16.03563499 302.84121704]
[28.77602196 294.71383667]
[43.55571365 291.42962646]
[45.55972672 276.56408691]
[47.56374359 261.69854736]
[49.56775665 246.83303833]
[51.57176971 231.96749878]
[41.53462601 243.11450195]
[27.49919891 248.40666199]
[12.60104465 246.66166687]
[0.16844492 238.26937866]
[-7.02112436 225.10466003]
[-7.36149549 210.10852051]
[-0.77662832 196.63114929]
[11.26240063 187.68342590]
[26.06604195 185.26428223]
[40.32712555 189.91418457]
[50.85968399 200.59431458]
[55.31072235 214.91873169]
[59.71172333 200.57888794]
[64.11271667 186.23904419]
[68.51371765 171.89918518]
[72.91471863 157.55934143]
[77.31571198 143.21949768]
[81.71671295 128.87965393]
[80.52400208 126.34280396]
[80.26430511 123.18065643]
[81.18081665 119.74621582]
[83.38459015 116.47391510]
[86.83008575 113.83147430]
[80.91102600 100.60607910]
[85.97918701 87.03184509]
[99.11743927 80.92180634]
[96.69593811 65.28701019]
[108.39624786 56.07006454]
[113.64295959 42.01759338]
[113.71292877 32.88343430]
[119.07382202 27.79593277]
[124.52918243 13.82313538]
[129.98454285 -0.14966236]
[135.43989563 -14.12246037]
[140.89524841 -28.09525871]
[146.35060120 -42.06805420]
[151.80596924 -56.04085541]
[155.67027283 -70.53454590]
[157.89538574 -85.36859131]
[160.12049866 -100.20263672]
[154.51594543 -114.99788666]
[164.05561829 -126.43658447]
[166.28073120 -141.27062988]
[168.50584412 -156.10467529]
[161.48095703 -166.92195129]
[163.63964844 -179.23146057]
[173.28747559 -186.52844238]
[175.73320007 -201.32771301]
[178.17892456 -216.12698364]
[180.62464905 -230.92625427]
[166.82019043 -236.99977112]
[154.96034241 -246.31614685]
[145.79063416 -258.28976440]
[139.88749695 -272.16793823]
[137.62197876 -287.07827759]
[139.13650513 -302.08349609]
[144.33587646 -316.24038696]
[152.89326477 -328.65899658]
[164.27072144 -338.55871582]
[177.75305176 -345.31719971]
[192.49276733 -348.50964355]
[207.56330872 -347.93536377]
[222.01731873 -343.63043213]
[234.94621277 -335.86547852]
[245.53726196 -325.12860107]
[253.12472534 -312.09475708]
[257.23162842 -297.58322144]
[257.59979248 -282.50625610]
[254.20613098 -267.81158447]
[247.26391602 -254.42289734]
[237.20957947 -243.18185425]
[224.67510986 -234.79507446]
[210.44847107 -229.78974915]
[195.42391968 -228.48052979]
[192.97819519 -213.68125916]
[190.53247070 -198.88198853]
[188.08674622 -184.08271790]
[195.14193726 -168.01438904]
[183.33988953 -153.87956238]
[181.11477661 -139.04551697]
[178.88966370 -124.21147156]
[184.65338135 -110.47724915]
[174.95454407 -97.97751617]
[172.72943115 -83.14347076]
[170.50431824 -68.30943298]
[179.77871704 -80.09864044]
[192.64830017 -87.80406952]
[207.41987610 -90.41193390]
[222.14994812 -87.57913208]
[234.90054321 -79.67836761]
[243.99411011 -67.74911499]
[248.23422241 -53.36087036]
[247.06301880 -38.40666580]
[240.63459778 -24.85397530]
[229.79472351 -14.48589230]
[215.96957397 -8.66651535]
[200.97807312 -8.16148376]
[186.79263306 -13.03724289]
[175.27957153 -22.65230370]
[167.95362854 -35.74163818]
[165.77876282 -50.58549500]
[160.32341003 -36.61269760]
[154.86804199 -22.63990021]
[149.41268921 -8.66710281]
[143.95733643 5.30569458]
[138.50198364 19.27849197]
[133.04661560 33.25128937]
[127.69543457 47.26431274]
[122.44871521 61.31678391]
[125.24549866 75.94645691]
[113.16991425 86.16852570]
[119.08897400 99.39392090]
[114.02081299 112.96815491]
[100.88256073 119.07819366]
[96.05655670 133.28063965]
[91.65556335 147.62049866]
[87.25456238 161.96034241]
[82.85356903 176.30018616]
[78.45256805 190.64002991]
[74.05156708 204.97988892]
[69.65057373 219.31973267]
[66.43729401 233.97151184]
[64.43328094 248.83705139]
[62.42927170 263.70257568]
[60.42525482 278.56811523]
[58.42124176 293.43362427]
[71.80364227 300.51434326]
[81.93703461 311.72534180]
[87.61268616 325.70059204]
[88.16348267 340.74606323]
[83.54222107 355.04522705]
[74.32502747 366.87811279]
[61.63959122 374.82852173]
[47.02720642 377.95318604]
[45.02319336 392.81872559]
[52.20836639 403.53021240]
[50.23318100 415.87048340]
[40.69506836 423.31030273]
[38.46994781 438.14434814]
[36.24483109 452.97839355]
[34.01971436 467.81243896]
[48.50397110 471.78015137]
[62.41727448 477.43313599]
[75.56430817 484.69204712]
[87.76049805 493.45498657]
[98.83464050 503.59893799]
[108.63127136 514.98150635]
[117.01284790 527.44287109]
[123.86171722 540.80810547]
[129.08174133 554.88958740]
[132.59960938 569.48956299]
[134.36596680 584.40319824]
[134.35600281 599.42108154]
[132.56985474 614.33233643]
[129.03259277 628.92773438]
[123.79389191 643.00225830]
[116.92729187 656.35833740]
[108.52917480 668.80859375]
[98.71745300 680.17810059]
[87.62985229 690.30737305]
[75.42203522 699.05413818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 190]
[32 189]
[33 188]
[34 187]
[36 184]
[37 183]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[66 165]
[67 164]
[72 163]
[75 160]
[77 158]
[78 157]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 134]
[88 133]
[89 132]
[91 130]
[92 129]
[93 128]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
