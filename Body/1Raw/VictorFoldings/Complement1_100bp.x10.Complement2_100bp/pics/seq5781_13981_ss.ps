%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[72.94245911 593.34857178]
[59.17436981 599.33337402]
[44.87879562 603.91760254]
[30.19780922 607.05566406]
[15.27732849 608.71630859]
[0.26563969 608.88311768]
[-14.68805885 607.55438232]
[-29.43514633 604.74334717]
[-43.82905579 600.47790527]
[-57.72673035 594.80047607]
[-70.99004364 587.76745605]
[-83.48718262 579.44879150]
[-95.09393311 569.92718506]
[-105.69493866 559.29711914]
[-115.18484497 547.66442871]
[-123.46933746 535.14459229]
[-130.46606445 521.86212158]
[-136.10549927 507.94897461]
[-140.33158875 493.54345703]
[-143.10234070 478.78875732]
[-144.39019775 463.83148193]
[-144.18237305 448.82031250]
[-142.48094177 433.90441895]
[-139.30279541 419.23205566]
[-134.67953491 404.94906616]
[-128.65708923 391.19738770]
[-121.29533386 378.11367798]
[-112.66742706 365.82800293]
[-102.85912323 354.46243286]
[-91.96790314 344.12997437]
[-80.10200500 334.93328857]
[-67.37937164 326.96377563]
[-53.92644119 320.30062866]
[-39.87692261 315.01013184]
[-25.37044525 311.14480591]
[-10.55118942 308.74307251]
[4.43356133 307.82882690]
[19.43487930 308.41113281]
[34.30366898 310.48422241]
[37.84334183 295.90786743]
[41.38301468 281.33148193]
[44.92268753 266.75509644]
[48.46235657 252.17872620]
[43.94692993 237.98506165]
[54.72225571 226.40046692]
[58.26192856 211.82408142]
[61.80160141 197.24771118]
[47.82891083 202.70333862]
[34.77576447 195.31312561]
[32.26446152 180.52484131]
[42.14623260 169.23986816]
[57.13661194 169.77706909]
[66.18490601 181.73881531]
[70.79891968 167.46609497]
[75.41292572 153.19335938]
[79.70705414 138.82113647]
[83.67914581 124.35662079]
[70.14079285 130.81517029]
[55.95541763 125.93920135]
[49.24905014 112.52187347]
[53.86339951 98.24925232]
[67.15515900 91.29733276]
[81.51020813 95.64850616]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[112.98247528 43.78660583]
[117.49010468 29.47991943]
[121.24640656 14.95785999]
[125.00270081 0.43580031]
[128.75900269 -14.08625889]
[132.51530457 -28.60831833]
[136.27160645 -43.13037872]
[140.02790833 -57.65243530]
[128.06442261 -48.60394287]
[113.11662292 -47.35368729]
[99.81623077 -54.28907013]
[92.28452301 -67.26109314]
[92.85527802 -82.25022888]
[101.35164642 -94.61193848]
[115.14093018 -100.51580048]
[129.95037842 -98.13244629]
[141.19111633 -88.20038605]
[145.38006592 -73.79691315]
[151.04286194 -87.68693542]
[156.70564270 -101.57696533]
[162.36843872 -115.46699524]
[167.92765808 -129.39878845]
[173.38301086 -143.37158203]
[178.83837891 -157.34439087]
[184.29373169 -171.31718445]
[189.43568420 -185.40832520]
[194.26168823 -199.61077881]
[191.37574768 -215.16654968]
[202.79644775 -224.72776794]
[207.62243652 -238.93022156]
[212.44844055 -253.13267517]
[217.27444458 -267.33514404]
[204.16056824 -274.70678711]
[192.62467957 -284.36276245]
[183.05967712 -295.97418213]
[175.79135132 -309.14559937]
[171.06723022 -323.42837524]
[169.04824829 -338.33602905]
[169.80314636 -353.36083984]
[173.30622864 -367.99102783]
[179.43817139 -381.72836304]
[187.99012756 -394.10488892]
[198.67083740 -404.69909668]
[211.11648560 -413.15017700]
[224.90319824 -419.17022705]
[239.56140137 -422.55426025]
[254.59185791 -423.18698120]
[269.48260498 -421.04684448]
[283.72650146 -416.20678711]
[296.83837891 -408.83160400]
[308.37164307 -399.17251587]
[317.93353271 -387.55850220]
[325.19830322 -374.38513184]
[329.91857910 -360.10110474]
[331.93356323 -345.19290161]
[331.17459106 -330.16827393]
[327.66757202 -315.53903198]
[321.53192139 -301.80334473]
[312.97662354 -289.42913818]
[302.29306030 -278.83779907]
[289.84515381 -270.39010620]
[276.05679321 -264.37374878]
[261.39767456 -260.99368286]
[246.36706543 -260.36502075]
[231.47689819 -262.50915527]
[226.65089417 -248.30668640]
[221.82490540 -234.10423279]
[216.99890137 -219.90177917]
[220.23002625 -205.36186218]
[208.46414185 -194.78479004]
[203.63813782 -180.58232117]
[204.86030579 -177.27496338]
[204.54122925 -173.21131897]
[202.34291077 -169.12222290]
[198.26652527 -165.86183167]
[192.81117249 -151.88902283]
[187.35581970 -137.91622925]
[181.90045166 -123.94343567]
[182.39602661 -116.56941223]
[176.25845337 -109.80420685]
[170.59567261 -95.91417694]
[164.93289185 -82.02415466]
[159.27009583 -68.13412476]
[154.54997253 -53.89613724]
[150.79367065 -39.37407684]
[147.03736877 -24.85201836]
[143.28106689 -10.32995796]
[139.52476501 4.19210100]
[135.76846313 18.71416092]
[132.01216125 33.23622131]
[144.89215088 25.54817772]
[159.72007751 27.81365013]
[169.71682739 38.99689484]
[170.31202698 53.98508072]
[161.23353577 65.92581177]
[146.63194275 69.35994720]
[133.18287659 62.71744919]
[127.03494263 49.03332520]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[98.14366913 128.32872009]
[94.17157745 142.79324341]
[95.49298096 147.84309387]
[94.81319427 152.43560791]
[92.64153290 155.88508606]
[89.68566132 157.80735779]
[85.07165527 172.08009338]
[80.45764160 186.35282898]
[76.37797546 200.78738403]
[72.83830261 215.36375427]
[69.29862976 229.94013977]
[73.56087494 245.17640686]
[63.03873444 255.71839905]
[59.49906158 270.29476929]
[55.95938873 284.87115479]
[52.41971588 299.44754028]
[48.88004303 314.02389526]
[63.04365158 319.00091553]
[76.64131927 325.36349487]
[89.53789520 333.04833984]
[101.60521698 341.97909546]
[112.72333527 352.06698608]
[122.78176880 363.21179199]
[131.68052673 375.30273438]
[139.33119202 388.21963501]
[145.65771484 401.83410645]
[150.59721375 416.01083374]
[154.10058594 430.60894775]
[156.13304138 445.48333740]
[156.67436218 460.48620605]
[155.71917725 475.46838379]
[153.27697754 490.28103638]
[149.37200928 504.77688599]
[144.04312134 518.81188965]
[137.34326172 532.24658203]
[129.33901978 544.94738770]
[120.10993195 556.78808594]
[109.74774170 567.65106201]
[98.35543060 577.42828369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 188]
[40 187]
[41 186]
[42 185]
[43 184]
[45 182]
[46 181]
[47 180]
[53 179]
[54 178]
[55 177]
[56 173]
[57 172]
[64 171]
[66 169]
[67 168]
[68 167]
[69 166]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[86 151]
[87 150]
[88 149]
[89 148]
[90 146]
[91 145]
[92 144]
[93 143]
[94 139]
[95 138]
[97 136]
[98 135]
[99 134]
[100 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
