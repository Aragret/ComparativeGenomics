%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[84.54493713 602.59228516]
[69.85095215 605.66009521]
[54.93658066 607.35900879]
[39.92908096 607.67449951]
[24.95648766 606.60394287]
[10.14654350 604.15649414]
[-4.37439346 600.35290527]
[-18.48243523 595.22576904]
[-32.05721283 588.81872559]
[-44.98290634 581.18646240]
[-57.14924240 572.39416504]
[-68.45241547 562.51678467]
[-78.79598236 551.63854980]
[-88.09171295 539.85241699]
[-96.26027679 527.25878906]
[-103.23198700 513.96514893]
[-108.94737244 500.08499146]
[-113.35765839 485.73669434]
[-116.42522430 471.04266357]
[-118.12389374 456.12826538]
[-118.43917084 441.12075806]
[-117.36837769 426.14819336]
[-114.92063904 411.33828735]
[-111.11684418 396.81741333]
[-105.98944092 382.70944214]
[-99.58218384 369.13476562]
[-91.94972992 356.20919800]
[-83.15720367 344.04302979]
[-73.27961731 332.74002075]
[-62.40125275 322.39663696]
[-50.61491013 313.10110474]
[-38.02116013 304.93273926]
[-24.72743988 297.96124268]
[-10.84717751 292.24609375]
[3.50120592 287.83605957]
[18.19529343 284.76873779]
[33.10971451 283.07031250]
[48.11722565 282.75527954]
[63.08978653 283.82632446]
[65.53551483 269.02703857]
[67.98123932 254.22778320]
[62.42264175 240.40927124]
[72.30650330 228.05532837]
[74.75222778 213.25605774]
[77.19795227 198.45678711]
[64.46157837 188.51206970]
[58.44363785 173.41438293]
[60.87461090 157.24938965]
[71.18463898 144.44317627]
[86.63349915 138.55043030]
[88.85861969 123.71638489]
[91.08373260 108.88234711]
[92.97702789 94.00231171]
[94.53755188 79.08370209]
[88.27793121 64.55346680]
[97.29733276 52.70020676]
[98.85785675 37.78160095]
[100.41837311 22.86299706]
[101.97889709 7.94439268]
[92.30169678 -4.26173353]
[94.09680939 -19.36908913]
[105.79312134 -28.51960182]
[107.35364532 -43.43820572]
[108.91416931 -58.35681152]
[110.47469330 -73.27541351]
[112.03521729 -88.19402313]
[113.59574127 -103.11262512]
[115.15625763 -118.03122711]
[100.39122772 -120.71659088]
[85.87157440 -124.51093292]
[71.68046570 -129.39251709]
[57.89918900 -135.33337402]
[44.60668564 -142.29948425]
[31.87909508 -150.25096130]
[19.78931808 -159.14222717]
[8.40660477 -168.92236328]
[-2.20384336 -179.53536987]
[-11.98125076 -190.92042542]
[-20.86961365 -203.01234436]
[-28.81801796 -215.74185181]
[-35.78093719 -229.03602600]
[-41.71848297 -242.81872559]
[-46.59665298 -257.01101685]
[-50.38750076 -271.53158569]
[-53.06931305 -286.29727173]
[-54.62672806 -301.22348022]
[-55.05082703 -316.22473145]
[-54.33917618 -331.21508789]
[-52.49585342 -346.10870361]
[-49.53142166 -360.82022095]
[-45.46285629 -375.26544189]
[-40.31346512 -389.36160278]
[-34.11274338 -403.02792358]
[-26.89620399 -416.18612671]
[-18.70518684 -428.76089478]
[-9.58661175 -440.68017578]
[0.40729317 -451.87567139]
[11.21928215 -462.28326416]
[22.78742409 -471.84338379]
[35.04545975 -480.50119019]
[47.92317200 -488.20718384]
[61.34679794 -494.91714478]
[75.23944855 -500.59268188]
[89.52154541 -505.20126343]
[104.11128235 -508.71649170]
[118.92508698 -511.11825562]
[133.87811279 -512.39282227]
[148.88470459 -512.53277588]
[163.85890198 -511.53744507]
[178.71495056 -509.41247559]
[193.36772156 -506.17004395]
[207.73332214 -501.82870483]
[221.72943115 -496.41336060]
[235.27590942 -489.95498657]
[248.29513550 -482.49060059]
[260.71255493 -474.06298828]
[272.45706177 -464.72036743]
[283.46133423 -454.51629639]
[293.66235352 -443.50918579]
[303.00170898 -431.76211548]
[311.42590332 -419.34234619]
[318.88668823 -406.32104492]
[325.34127808 -392.77279663]
[330.75277710 -378.77517700]
[335.09011841 -364.40838623]
[338.32849121 -349.75469971]
[340.44937134 -334.89807129]
[341.44055176 -319.92358398]
[341.29641724 -304.91705322]
[340.01773071 -289.96438599]
[337.61184692 -275.15124512]
[334.09255981 -260.56246948]
[329.48004150 -246.28164673]
[323.80065918 -232.39057922]
[317.08697510 -218.96881104]
[309.37744141 -206.09323120]
[300.71621704 -193.83760071]
[291.15289307 -182.27209473]
[280.74230957 -171.46299744]
[269.54403687 -161.47218323]
[257.62225342 -152.35691833]
[245.04521179 -144.16938782]
[231.88497925 -136.95649719]
[218.21694946 -130.75955200]
[204.11938477 -125.61406708]
[189.67303467 -121.54950714]
[174.96067810 -118.58914948]
[160.06655884 -116.74995422]
[145.07600403 -116.04245758]
[130.07485962 -116.47070312]
[128.51434326 -101.55210114]
[126.95381927 -86.63349915]
[125.39329529 -71.71488953]
[123.83277130 -56.79628754]
[122.27224731 -41.87768173]
[120.71173096 -26.95907784]
[130.26124573 -15.58620071]
[128.89117432 -0.43438360]
[116.89750671 9.50491524]
[115.33698273 24.42352104]
[113.77645874 39.34212494]
[112.21593475 54.26073074]
[118.58717346 67.72388458]
[109.45615387 80.64422607]
[107.89562988 95.56282806]
[109.87499237 98.87258911]
[110.38585663 103.03874969]
[109.07845306 107.38590240]
[105.91777802 111.10746002]
[103.69266510 125.94150543]
[101.46754456 140.77554321]
[112.84738922 148.90954590]
[119.58030701 161.09495544]
[120.40226746 174.92616272]
[115.20977020 187.70063782]
[105.06894684 196.94685364]
[91.99722290 200.90251160]
[89.55149841 215.70178223]
[87.10577393 230.50105286]
[92.48943329 245.37811279]
[82.78050995 256.67349243]
[80.33478546 271.47277832]
[77.88905334 286.27203369]
[92.41011810 290.07510376]
[106.51833344 295.20181274]
[120.09332275 301.60839844]
[133.01927185 309.24020386]
[145.18589783 318.03213501]
[156.48939514 327.90914917]
[166.83332825 338.78698730]
[176.12945557 350.57287598]
[184.29843140 363.16619873]
[191.27059937 376.45959473]
[196.98643494 390.33956909]
[201.39720154 404.68771362]
[204.46525574 419.38165283]
[206.16442871 434.29598999]
[206.48020935 449.30349731]
[205.40991211 464.27609253]
[202.96266174 479.08609009]
[199.15934753 493.60708618]
[194.03242493 507.71520996]
[187.62561035 521.29010010]
[179.99359131 534.21594238]
[171.20147705 546.38238525]
[161.32426453 557.68572998]
[150.44624329 568.02947998]
[138.66020203 577.32537842]
[126.06672668 585.49420166]
[112.77324677 592.46612549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 183]
[40 182]
[41 181]
[43 179]
[44 178]
[45 177]
[50 171]
[51 170]
[52 169]
[53 165]
[54 164]
[56 162]
[57 161]
[58 160]
[59 159]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
