%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[118.82503510 829.12298584]
[103.98910522 826.89263916]
[89.27102661 823.98443604]
[74.70175171 820.40454102]
[60.31192017 816.16046143]
[46.13180161 811.26110840]
[32.19121170 805.71679688]
[18.51947021 799.53918457]
[5.14532566 792.74127197]
[-7.90309381 785.33734131]
[-20.59834671 777.34295654]
[-32.91373444 768.77496338]
[-44.82336044 759.65130615]
[-56.30217743 749.99127197]
[-67.32604218 739.81518555]
[-77.87177277 729.14428711]
[-87.91719055 718.00122070]
[-97.44116974 706.40924072]
[-106.42369080 694.39288330]
[-114.84584808 681.97729492]
[-122.68993378 669.18859863]
[-129.93946838 656.05377197]
[-136.57917786 642.60040283]
[-142.59512329 628.85675049]
[-147.97462463 614.85174561]
[-152.70640564 600.61480713]
[-156.78048706 586.17596436]
[-160.18830872 571.56549072]
[-162.92271423 556.81408691]
[-164.97793579 541.95288086]
[-166.34967041 527.01306152]
[-167.03500366 512.02612305]
[-167.03253174 497.02346802]
[-166.34223938 482.03671265]
[-164.96556091 467.09735107]
[-162.90542603 452.23681641]
[-160.16615295 437.48635864]
[-156.75350952 422.87701416]
[-152.67465210 408.43948364]
[-147.93817139 394.20413208]
[-142.55403137 380.20089722]
[-136.53355408 366.45922852]
[-129.88938904 353.00805664]
[-122.63552094 339.87561035]
[-114.78720856 327.08953857]
[-106.36094666 314.67675781]
[-97.37445831 302.66333008]
[-87.84664917 291.07452393]
[-77.79754639 279.93472290]
[-67.24829102 269.26736450]
[-56.22106171 259.09487915]
[-44.73905563 249.43862915]
[-32.82641602 240.31895447]
[-20.50819588 231.75502014]
[-7.81030226 223.76484680]
[5.24056292 216.36523438]
[18.61695290 209.57173157]
[32.29073715 203.39863586]
[46.23315811 197.85893250]
[60.41489410 192.96426392]
[74.80612183 188.72492981]
[89.37657928 185.14984131]
[104.09561920 182.24652100]
[101.87050629 167.41247559]
[99.64538574 152.57843018]
[95.54444122 146.42993164]
[97.49927521 137.50714111]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[88.00483704 62.88706207]
[86.22237396 47.99334335]
[74.08205414 38.23371506]
[72.48654175 23.10397339]
[81.86567688 11.59017944]
[80.08321381 -3.30353808]
[78.30074310 -18.19725609]
[76.51828003 -33.09097290]
[74.73580933 -47.98469162]
[64.63749695 -36.89306641]
[49.66104126 -36.05297852]
[38.38563919 -45.94566727]
[37.27034760 -60.90414429]
[46.95405960 -72.35951996]
[61.88950729 -73.74964142]
[73.52053070 -64.27900696]
[73.07392883 -79.27235413]
[72.62731934 -94.26570129]
[72.18070984 -109.25905609]
[71.73410797 -124.25240326]
[71.28749847 -139.24575806]
[70.84089661 -154.23910522]
[70.39428711 -169.23245239]
[55.86882782 -173.45928955]
[43.36159897 -181.96954346]
[34.09793091 -193.92945862]
[28.98538589 -208.16732788]
[28.52483749 -223.28828430]
[32.76140594 -237.81091309]
[41.28003693 -250.31243896]
[53.24615860 -259.56808472]
[67.48745728 -264.67108154]
[82.60871124 -265.12149048]
[97.12849426 -260.87521362]
[109.62430573 -252.34820557]
[118.87194061 -240.37588501]
[123.96540070 -226.13116455]
[124.40568542 -211.00961304]
[120.14965820 -196.49267578]
[111.61428070 -184.00257874]
[99.63576508 -174.76296997]
[85.38764191 -169.67906189]
[85.83424377 -154.68571472]
[86.28085327 -139.69235229]
[86.72745514 -124.69901276]
[87.17406464 -109.70565796]
[87.62066650 -94.71231079]
[88.06727600 -79.71895599]
[88.51387787 -64.72560883]
[89.62953186 -49.76715469]
[91.41199493 -34.87343979]
[93.19445801 -19.97972107]
[94.97692871 -5.08600378]
[96.75939178 9.80771351]
[108.59064484 18.78306961]
[110.61048889 33.86202621]
[101.11608887 46.21087646]
[102.89855194 61.10459518]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[112.36480713 135.50312805]
[114.47943115 150.35331726]
[116.70455170 165.18736267]
[118.92966461 180.02140808]
[133.85275269 178.47839355]
[148.83088684 177.62117004]
[163.83258057 177.45153809]
[178.82626343 177.96986389]
[193.78042603 179.17506409]
[208.66362000 181.06459045]
[223.44451904 183.63447571]
[238.09205627 186.87931824]
[252.57543945 190.79228210]
[266.86419678 195.36515808]
[280.92825317 200.58830261]
[294.73806763 206.45074463]
[308.26458740 212.94017029]
[321.47940063 220.04290771]
[334.35464478 227.74403381]
[346.86328125 236.02734375]
[358.97900391 244.87542725]
[370.67633057 254.26966858]
[381.93069458 264.19030762]
[392.71835327 274.61651611]
[403.01669312 285.52630615]
[412.80401611 296.89678955]
[422.05972290 308.70404053]
[430.76440430 320.92321777]
[438.89971924 333.52859497]
[446.44857788 346.49371338]
[453.39508057 359.79129028]
[459.72460938 373.39337158]
[465.42388916 387.27133179]
[470.48092651 401.39599609]
[474.88507080 415.73764038]
[478.62707520 430.26611328]
[481.69903564 444.95089722]
[484.09454346 459.76104736]
[485.80853271 474.66546631]
[486.83740234 489.63281250]
[487.17898560 504.63156128]
[486.83258057 519.63018799]
[485.79888916 534.59716797]
[484.08007812 549.50103760]
[481.67980957 564.31048584]
[478.60308838 578.99420166]
[474.85641479 593.52148438]
[470.44766235 607.86175537]
[465.38607788 621.98474121]
[459.68231201 635.86090088]
[453.34838867 649.46093750]
[446.39758301 662.75622559]
[438.84457397 675.71893311]
[430.70520020 688.32171631]
[421.99658203 700.53808594]
[412.73703003 712.34234619]
[402.94604492 723.70965576]
[392.64422607 734.61614990]
[381.85317993 745.03887939]
[370.59564209 754.95587158]
[358.89526367 764.34637451]
[346.77670288 773.19055176]
[334.26538086 781.46978760]
[321.38766479 789.16674805]
[308.17056274 796.26525879]
[294.64196777 802.75030518]
[280.83026123 808.60833740]
[266.76449585 813.82690430]
[252.47427368 818.39520264]
[237.98963928 822.30346680]
[223.34104919 825.54357910]
[208.55931091 828.10870361]
[193.67552185 829.99346924]
[178.72097778 831.19384766]
[163.72712708 831.70733643]
[148.72549438 831.53283691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 138]
[64 137]
[65 136]
[67 135]
[68 134]
[69 133]
[71 132]
[72 131]
[73 130]
[74 129]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
