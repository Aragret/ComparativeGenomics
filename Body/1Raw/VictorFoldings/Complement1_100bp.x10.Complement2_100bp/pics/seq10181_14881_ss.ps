%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[37.39655685 477.28201294]
[38.46770096 492.29031372]
[36.67887878 507.23007202]
[32.09475708 521.56127930]
[24.88104820 534.76574707]
[15.29852676 546.36627197]
[3.69359136 555.94342041]
[-9.51424599 563.15100098]
[-23.84753036 567.72851562]
[-38.78812027 569.51043701]
[-53.79592896 568.43237305]
[-68.32842255 564.53326416]
[-81.86027527 557.95410156]
[-93.90230560 548.93267822]
[-104.01921082 537.79510498]
[-111.84526825 524.94409180]
[-117.09756470 510.84408569]
[-119.58624268 496.00485229]
[-119.22133636 480.96279907]
[-116.01602936 466.26168823]
[-110.08619690 452.43295288]
[-101.64620209 439.97653198]
[-91.00113678 429.34265137]
[-78.53582001 420.91577148]
[-64.70086670 415.00048828]
[-49.99639511 411.81066895]
[-34.95396805 411.46157837]
[-20.11735535 413.96585083]
[-14.87063789 399.91339111]
[-9.62391949 385.86093140]
[-13.45659256 368.73556519]
[0.84391135 357.13482666]
[5.88082743 343.00579834]
[10.91774368 328.87677002]
[15.95466042 314.74774170]
[20.99157715 300.61871338]
[26.02849197 286.48968506]
[21.12887764 275.42984009]
[25.20958328 263.61749268]
[36.59852219 257.56314087]
[41.84523773 243.51068115]
[46.98719788 229.41954041]
[43.97290802 214.83312988]
[55.89496613 204.43240356]
[60.93188095 190.30337524]
[65.96879578 176.17434692]
[61.88158035 159.10795593]
[76.00778198 147.29559326]
[80.83377838 133.09313965]
[85.65977478 118.89068604]
[90.48577118 104.68823242]
[94.67278290 90.28444672]
[98.21245575 75.70806885]
[93.95021057 60.47180557]
[104.47235107 49.92980576]
[108.01202393 35.35343170]
[111.55169678 20.77705574]
[115.09136963 6.20068026]
[101.62559509 -0.54311001]
[90.00382233 -10.10986328]
[80.80686951 -22.01729965]
[74.49345398 -35.66626740]
[71.37728119 -50.37088394]
[71.61149597 -65.39300537]
[75.18112183 -79.97929382]
[81.90402985 -93.39897156]
[91.44016266 -104.98043823]
[103.30876923 -114.14491272]
[116.91265869 -120.43531036]
[131.56820679 -123.53907013]
[146.53971863 -123.30368042]
[150.07939148 -137.88005066]
[153.61906433 -152.45643616]
[157.15873718 -167.03280640]
[160.26284790 -181.70811462]
[162.92864990 -196.46932983]
[165.59445190 -211.23054504]
[166.26423645 -226.21557617]
[164.92599487 -241.15576172]
[163.58776855 -256.09594727]
[162.24952698 -271.03613281]
[160.91128540 -285.97631836]
[159.57305908 -300.91650391]
[150.63542175 -313.97137451]
[157.20639038 -327.33816528]
[155.86816406 -342.27835083]
[154.52992249 -357.21853638]
[153.19169617 -372.15872192]
[151.85345459 -387.09890747]
[136.92497253 -389.12072754]
[122.82083893 -394.41427612]
[110.24854279 -402.71395874]
[99.83869934 -413.60354614]
[92.11345673 -426.53677368]
[87.46030426 -440.86492920]
[86.11265564 -455.86932373]
[88.13809967 -470.79730225]
[93.43505096 -484.90014648]
[101.73780060 -497.47042847]
[112.62989807 -507.87765503]
[125.56499481 -515.59973145]
[139.89427185 -520.24945068]
[154.89898682 -521.59344482]
[169.82649231 -519.56439209]
[183.92805481 -514.26403809]
[196.49632263 -505.95822144]
[206.90089417 -495.06359863]
[214.61987305 -482.12664795]
[219.26606750 -467.79623413]
[220.60644531 -452.79119873]
[218.57377625 -437.86416626]
[213.26998901 -423.76391602]
[204.96115112 -411.19763184]
[194.06401062 -400.79571533]
[181.12518311 -393.07986450]
[166.79364014 -388.43713379]
[168.13188171 -373.49694824]
[169.47010803 -358.55676270]
[170.80834961 -343.61657715]
[172.14657593 -328.67639160]
[180.98849487 -316.69018555]
[174.51324463 -302.25473022]
[175.85147095 -287.31454468]
[177.18971252 -272.37435913]
[178.52793884 -257.43417358]
[179.86618042 -242.49400330]
[181.20442200 -227.55381775]
[186.99774170 -241.38990784]
[196.73538208 -252.79948425]
[209.48919678 -260.69506836]
[224.04357910 -264.32406616]
[239.01130676 -263.34063721]
[252.96574402 -257.83847046]
[264.57684326 -248.34204102]
[272.73791504 -235.75645447]
[276.67108154 -221.28129578]
[276.00146484 -206.29624939]
[270.79290771 -192.22959900]
[261.54183960 -180.42207336]
[249.12998962 -171.99909973]
[234.74043274 -167.76350403]
[219.74464417 -168.11898804]
[205.57194519 -173.03169250]
[193.57318115 -182.03334045]
[184.89199829 -194.26596069]
[180.35566711 -208.56474304]
[177.68986511 -193.80352783]
[175.02407837 -179.04231262]
[176.50978088 -176.66517639]
[177.14340210 -173.55628967]
[176.64151001 -170.03727722]
[174.84219360 -166.52629089]
[171.73512268 -163.49313354]
[168.19544983 -148.91676331]
[164.65577698 -134.34037781]
[161.11610413 -119.76400757]
[174.52818298 -113.10682678]
[186.12805176 -103.62730408]
[195.33189392 -91.79836273]
[201.67561340 -78.21127319]
[204.83810425 -63.54611588]
[204.65763855 -48.53770065]
[201.14004517 -33.93877792]
[194.45861816 -20.48227310]
[184.94555664 -8.84449291]
[173.07546997 0.38886267]
[159.44172668 6.75217867]
[144.72671509 9.92340469]
[129.66773987 9.74035263]
[126.12807465 24.31672859]
[122.58840179 38.89310455]
[119.04872894 53.46947861]
[123.56415558 67.66314697]
[112.78883362 79.24774170]
[109.24916077 93.82411957]
[122.58921814 86.96533966]
[136.91348267 91.41680145]
[144.01635742 104.62850952]
[139.82899475 119.03218842]
[126.75012207 126.37676239]
[112.27188873 122.45492554]
[104.68823242 109.51422882]
[99.86222839 123.71668243]
[95.03623199 137.91914368]
[90.21023560 152.12159729]
[95.20085907 164.01513672]
[90.88889313 175.74504089]
[80.09782410 181.21125793]
[75.06091309 195.34030151]
[70.02399445 209.46932983]
[72.67800903 225.06632996]
[61.11622620 234.45646667]
[61.18225861 243.59065247]
[55.89770889 248.75740051]
[50.65099335 262.80987549]
[54.11909103 280.89450073]
[40.15752029 291.52661133]
[35.12060547 305.65563965]
[30.08368874 319.78466797]
[25.04677391 333.91369629]
[20.00985718 348.04272461]
[14.97294044 362.17175293]
[19.78593445 374.13827515]
[15.29980087 385.80270386]
[4.42855167 391.10763550]
[-0.81816661 405.16009521]
[-6.06488466 419.21258545]
[6.78254128 427.04458618]
[17.91540146 437.16662598]
[26.93125153 449.21282959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 207]
[29 206]
[30 205]
[32 202]
[33 201]
[34 200]
[35 199]
[36 198]
[37 197]
[40 195]
[41 194]
[42 192]
[44 190]
[45 189]
[46 188]
[48 185]
[49 184]
[50 183]
[51 182]
[52 175]
[53 174]
[55 172]
[56 171]
[57 170]
[58 169]
[71 156]
[72 155]
[73 154]
[74 153]
[75 148]
[76 147]
[77 146]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
