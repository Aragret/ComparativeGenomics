%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[132.01991272 797.65911865]
[117.56767273 793.62896729]
[103.35259247 788.82891846]
[89.41565704 783.27276611]
[75.79705048 776.97656250]
[62.53603745 769.95837402]
[49.67085266 762.23852539]
[37.23859406 753.83923340]
[25.27510262 744.78472900]
[13.81487560 735.10113525]
[2.89095426 724.81634521]
[-7.46516466 713.96002197]
[-17.22362137 702.56347656]
[-26.35628128 690.65954590]
[-34.83680725 678.28253174]
[-42.64075470 665.46820068]
[-49.74562073 652.25341797]
[-56.13091660 638.67633057]
[-61.77823257 624.77612305]
[-66.67128754 610.59277344]
[-70.79597473 596.16723633]
[-74.14040375 581.54107666]
[-76.69492340 566.75653076]
[-78.45217133 551.85614014]
[-79.40708160 536.88293457]
[-79.55690765 521.88006592]
[-78.90120697 506.89074707]
[-77.44187927 491.95825195]
[-75.18312073 477.12561035]
[-72.13145447 462.43560791]
[-68.29567719 447.93057251]
[-63.68684769 433.65234375]
[-58.31825256 419.64208984]
[-52.20537186 405.94021606]
[-45.36582947 392.58621216]
[-37.81935120 379.61856079]
[-29.58768845 367.07467651]
[-20.69458008 354.99075317]
[-11.16566467 343.40158081]
[-1.02841759 332.34060669]
[9.68793201 321.83969116]
[20.95248795 311.92913818]
[32.73276901 302.63754272]
[44.99480820 293.99166870]
[57.70325851 286.01641846]
[70.82146454 278.73483276]
[84.31162262 272.16787720]
[98.13481903 266.33450317]
[112.25119781 261.25152588]
[126.62007141 256.93356323]
[123.08039856 242.35720825]
[119.54072571 227.78082275]
[116.00105286 213.20445251]
[112.46138000 198.62808228]
[109.65666962 196.49127197]
[107.74758911 192.88981628]
[107.41126251 188.25947571]
[109.10459137 183.32188416]
[106.21932220 168.60198975]
[103.33404541 153.88211060]
[100.44877625 139.16221619]
[97.45400238 124.46421051]
[94.34989166 109.78890991]
[87.02515411 122.87891388]
[73.45392609 129.26809692]
[58.69794083 126.57347870]
[48.26082230 115.80005646]
[46.03535080 100.96607208]
[52.85157776 87.60421753]
[66.16721344 80.69814301]
[81.01586151 82.82364655]
[91.85989380 93.18898773]
[90.52165985 78.24880219]
[89.18342590 63.30861664]
[87.84519196 48.36843109]
[78.46604156 39.51436996]
[77.65899658 27.04310417]
[85.31242371 17.67552185]
[84.19677734 2.71706772]
[83.08113098 -12.24138546]
[81.96547699 -27.19983864]
[79.39453125 -30.69900894]
[78.19176483 -34.45638657]
[78.27034760 -38.01014709]
[79.40238953 -40.97411346]
[81.25581360 -43.07719803]
[81.03248596 -58.07553482]
[80.80915833 -73.07387543]
[80.58583069 -88.07221222]
[65.76977539 -90.69538116]
[51.71799850 -96.07535553]
[38.93846893 -104.01765442]
[27.89315033 -114.23516846]
[18.98133087 -126.35852814]
[12.52516460 -139.94949341]
[8.75803661 -154.51676941]
[7.81612778 -169.53373718]
[9.73348713 -184.45755005]
[14.44080353 -198.74871826]
[21.76791000 -211.89064026]
[31.44993591 -223.40823364]
[43.13688278 -232.88513184]
[56.40627289 -239.97877502]
[70.77842712 -244.43272400]
[85.73381042 -246.08595276]
[100.73178101 -244.87872314]
[115.23017120 -240.85467529]
[128.70487976 -234.15925598]
[140.66880798 -225.03451538]
[150.68946838 -213.81030273]
[158.40461731 -200.89236450]
[163.53533936 -186.74768066]
[165.89619446 -171.88757324]
[165.40180969 -156.84921265]
[162.07006836 -142.17623901]
[156.02142334 -128.39907837]
[147.47451782 -116.01575470]
[136.73831177 -105.47391510]
[124.20091248 -97.15464020]
[110.31555176 -91.35868073]
[95.58416748 -88.29553986]
[95.80749512 -73.29720306]
[96.03082275 -58.29886246]
[96.25415039 -43.30052567]
[96.92393494 -28.31548882]
[98.03958130 -13.35703468]
[99.15522766 1.60141897]
[100.27088165 16.55987167]
[110.91859436 30.50953674]
[102.78537750 47.03019714]
[104.12361145 61.97038269]
[105.46184540 76.91056824]
[106.80007935 91.85075378]
[109.02519226 106.68479919]
[112.12930298 121.36009979]
[116.96686554 129.10838318]
[115.16867065 136.27694702]
[118.05393982 150.99682617]
[120.93920898 165.71672058]
[123.82448578 180.43661499]
[127.03775787 195.08840942]
[130.57743835 209.66477966]
[134.11711121 224.24114990]
[137.65676880 238.81753540]
[141.19644165 253.39390564]
[155.94535828 250.64099121]
[170.82078552 248.68370056]
[185.77981567 247.52770996]
[200.77934265 247.17634583]
[215.77609253 247.63059998]
[230.72685242 248.88917542]
[245.58848572 250.94845581]
[260.31817627 253.80249023]
[274.87341309 257.44305420]
[289.21228027 261.85961914]
[303.29339600 267.03952026]
[317.07617188 272.96774292]
[330.52087402 279.62725830]
[343.58874512 286.99884033]
[356.24206543 295.06124878]
[368.44439697 303.79119873]
[380.16055298 313.16354370]
[391.35671997 323.15127563]
[402.00064087 333.72558594]
[412.06161499 344.85598755]
[421.51068115 356.51034546]
[430.32052612 368.65515137]
[438.46575928 381.25527954]
[445.92294312 394.27447510]
[452.67056274 407.67520142]
[458.68911743 421.41876221]
[463.96130371 435.46560669]
[468.47189331 449.77514648]
[472.20788574 464.30621338]
[475.15850830 479.01684570]
[477.31527710 493.86465454]
[478.67193604 508.80682373]
[479.22460938 523.80029297]
[478.97167969 538.80175781]
[477.91387939 553.76806641]
[476.05426025 568.65600586]
[473.39819336 583.42266846]
[469.95330811 598.02551270]
[465.72958374 612.42236328]
[460.73916626 626.57171631]
[454.99645996 640.43280029]
[448.51797485 653.96569824]
[441.32247925 667.13128662]
[433.43063354 679.89172363]
[424.86523438 692.21014404]
[415.65100098 704.05102539]
[405.81442261 715.38024902]
[395.38394165 726.16510010]
[384.38958740 736.37457275]
[372.86309814 745.97918701]
[360.83764648 754.95129395]
[348.34796143 763.26489258]
[335.43002319 770.89617920]
[322.12109375 777.82299805]
[308.45953369 784.02551270]
[294.48474121 789.48571777]
[280.23699951 794.18798828]
[265.75741577 798.11871338]
[251.08769226 801.26647949]
[236.27017212 803.62237549]
[221.34756470 805.17944336]
[206.36286926 805.93328857]
[191.35932922 805.88177490]
[176.38018799 805.02490234]
[161.46861267 803.36529541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[58 140]
[59 139]
[60 138]
[61 137]
[62 135]
[63 134]
[72 133]
[73 132]
[74 131]
[75 130]
[78 128]
[79 127]
[80 126]
[81 125]
[86 124]
[87 123]
[88 122]
[89 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
