%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[86.95764923 605.93194580]
[73.17747498 612.07757568]
[58.27607727 614.44628906]
[43.26946640 612.87658691]
[29.18081665 607.47540283]
[16.97071457 598.61114502]
[7.47166824 586.88806152]
[1.33133507 573.10552979]
[-1.03162527 558.20318604]
[0.54389751 543.19720459]
[5.95048189 529.11059570]
[14.81949711 516.90393066]
[26.54623985 507.40942383]
[40.33116150 501.27441406]
[55.23438263 498.91720581]
[56.79490662 483.99859619]
[58.35542679 469.07998657]
[59.91595078 454.16140747]
[61.47647476 439.24279785]
[51.92695999 427.86990356]
[53.29703140 412.71810913]
[65.29069519 402.77880859]
[66.85121918 387.86019897]
[68.41174316 372.94158936]
[69.97226715 358.02297974]
[63.60103226 344.55981445]
[72.73204803 331.63949585]
[66.36080933 318.17633057]
[75.49182892 305.25598145]
[77.05234528 290.33737183]
[69.05326843 274.71746826]
[79.99305725 259.90524292]
[81.33129120 244.96505737]
[82.66952515 230.02487183]
[83.89649963 215.07513428]
[85.01215363 200.11668396]
[86.12779999 185.15821838]
[87.24344635 170.19976807]
[80.47418976 156.93228149]
[89.21646881 143.74580383]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[84.39334106 104.56194305]
[85.34600830 92.95446014]
[93.81699371 84.96173096]
[95.15522766 70.02154541]
[96.49346161 55.08136368]
[88.36024475 38.56069946]
[99.00795746 24.61103630]
[100.12360382 9.65258312]
[83.73674774 3.34816456]
[70.09726715 -7.68049097]
[60.52118301 -22.35556221]
[55.92823410 -39.24807358]
[56.75354767 -56.71703339]
[62.90643311 -73.06884766]
[73.78022003 -86.72151947]
[88.31206512 -96.35768127]
[105.08680725 -101.05172729]
[105.31013489 -116.05006409]
[105.53346252 -131.04840088]
[98.00248718 -144.96224976]
[105.92842102 -157.57290649]
[106.15174866 -172.57124329]
[98.62076569 -186.48509216]
[106.54669952 -199.09574890]
[106.77002716 -214.09408569]
[106.99335480 -229.09242249]
[106.54674530 -244.08576965]
[105.43109894 -259.04421997]
[104.31545258 -274.00268555]
[103.19980621 -288.96112061]
[94.45752716 -302.14761353]
[101.22678375 -315.41510010]
[100.11113739 -330.37356567]
[98.99548340 -345.33200073]
[83.99075317 -345.92852783]
[69.15183258 -348.23156738]
[54.67216873 -352.21118164]
[40.74053955 -357.81539917]
[27.53857613 -364.97125244]
[15.23838615 -373.58535767]
[4.00033283 -383.54547119]
[-6.02907562 -394.72174072]
[-14.71908379 -406.96844482]
[-21.95639992 -420.12591553]
[-27.64667130 -434.02261353]
[-31.71571159 -448.47738647]
[-34.11047745 -463.30178833]
[-34.79973984 -478.30255127]
[-33.77452087 -493.28408813]
[-31.04818344 -508.05111694]
[-26.65626907 -522.41107178]
[-20.65603828 -536.17681885]
[-13.12571526 -549.16882324]
[-4.16347265 -561.21771240]
[6.11384773 -572.16644287]
[17.57225990 -581.87219238]
[30.06237984 -590.20855713]
[43.42137527 -597.06677246]
[57.47507858 -602.35742188]
[72.04027557 -606.01159668]
[86.92708588 -607.98156738]
[101.94141388 -608.24169922]
[116.88752747 -606.78863525]
[131.57057190 -603.64123535]
[145.79911804 -598.84057617]
[159.38766479 -592.44927979]
[172.15907288 -584.55059814]
[183.94683838 -575.24755859]
[194.59727478 -564.66143799]
[203.97152710 -552.93023682]
[211.94740295 -540.20690918]
[218.42089844 -526.65728760]
[223.30763245 -512.45806885]
[226.54388428 -497.79437256]
[228.08747864 -482.85733032]
[227.91827393 -467.84170532]
[226.03849792 -452.94326782]
[222.47262573 -438.35620117]
[217.26718140 -424.27069092]
[210.49000549 -410.87042236]
[202.22946167 -398.33004761]
[192.59323120 -386.81304932]
[181.70695496 -376.46960449]
[169.71255493 -367.43453979]
[156.76640320 -359.82568359]
[143.03729248 -353.74218750]
[128.70417786 -349.26339722]
[113.95394135 -346.44766235]
[115.06958771 -331.48919678]
[116.18523407 -316.53076172]
[124.84771729 -304.41421509]
[118.15825653 -290.07678223]
[119.27390289 -275.11831665]
[120.38955688 -260.15988159]
[121.50520325 -245.20141602]
[132.08871460 -255.83106995]
[147.08773804 -256.00158691]
[157.91017151 -245.61529541]
[158.35641479 -230.62193298]
[148.17085266 -219.61038208]
[133.18823242 -218.88854980]
[121.99169159 -228.86909485]
[121.76836395 -213.87075806]
[121.54503632 -198.87242126]
[129.09199524 -186.03135681]
[121.15008545 -172.34791565]
[120.92675781 -157.34957886]
[128.47370911 -144.50852966]
[120.53179932 -130.82507324]
[120.30847168 -115.82673645]
[120.08514404 -100.82839966]
[132.25692749 -97.60060883]
[143.40571594 -91.72744751]
[152.96449280 -83.50321960]
[160.44613647 -73.34191895]
[165.46823120 -61.75638962]
[167.77262878 -49.33242798]
[167.23866272 -36.69916916]
[163.88955688 -24.49723244]
[157.89132690 -13.34623909]
[149.54466248 -3.81333518]
[139.26977539 3.61564040]
[127.58529663 8.56092262]
[115.08206177 10.76823139]
[113.96640778 25.72668457]
[121.61983490 35.09426880]
[120.81278992 47.56553268]
[111.43364716 56.41959763]
[110.09541321 71.35977936]
[108.75717926 86.29996490]
[116.20524597 101.33001709]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.17491913 144.86145020]
[110.86437988 159.19886780]
[102.20190430 171.31541443]
[101.08625031 186.27388000]
[99.97060394 201.23233032]
[98.85495758 216.19078064]
[101.33742523 224.98141479]
[97.60971069 231.36309814]
[96.27147675 246.30328369]
[94.93324280 261.24346924]
[102.58954620 271.62344360]
[101.16735077 284.03961182]
[91.97095490 291.89791870]
[90.41043091 306.81649780]
[96.67004395 321.34674072]
[87.65065002 333.20001221]
[93.91027069 347.73025513]
[84.89086914 359.58349609]
[83.33035278 374.50210571]
[81.76982880 389.42071533]
[80.20930481 404.33932495]
[89.88650513 416.54544067]
[88.09139252 431.65280151]
[76.39508057 440.80331421]
[74.83455658 455.72192383]
[73.27403259 470.64053345]
[71.71350861 485.55914307]
[70.15298462 500.47772217]
[84.24580383 505.86801147]
[96.46274567 514.72283936]
[105.97084045 526.43859863]
[112.12181854 540.21643066]
[114.49628448 555.11688232]
[112.93235016 570.12408447]
[107.53664398 584.21484375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[22 196]
[23 195]
[24 194]
[25 193]
[27 191]
[29 189]
[30 188]
[32 185]
[33 184]
[34 183]
[35 181]
[36 180]
[37 179]
[38 178]
[40 176]
[41 175]
[42 174]
[45 172]
[46 171]
[47 170]
[49 167]
[50 166]
[59 153]
[60 152]
[61 151]
[63 149]
[64 148]
[66 146]
[67 145]
[68 144]
[69 137]
[70 136]
[71 135]
[72 134]
[74 132]
[75 131]
[76 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
