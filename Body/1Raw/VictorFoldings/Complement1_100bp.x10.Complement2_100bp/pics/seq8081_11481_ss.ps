%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[13.39625645 718.44378662]
[-0.46626171 724.18743896]
[-14.67149448 729.02172852]
[-29.15985870 732.92639160]
[-43.87058640 735.88500977]
[-58.74197388 737.88519287]
[-73.71164703 738.91851807]
[-88.71681213 738.98077393]
[-103.69453430 738.07153320]
[-118.58200073 736.19476318]
[-133.31675720 733.35821533]
[-147.83699036 729.57385254]
[-162.08181763 724.85748291]
[-175.99148560 719.22900391]
[-189.50764465 712.71191406]
[-202.57362366 705.33361816]
[-215.13458252 697.12500000]
[-227.13786316 688.12054443]
[-238.53311157 678.35803223]
[-249.27252197 667.87835693]
[-259.31106567 656.72546387]
[-268.60662842 644.94616699]
[-277.12023926 632.58990479]
[-284.81616211 619.70843506]
[-291.66213989 606.35589600]
[-297.62942505 592.58813477]
[-302.69302368 578.46301270]
[-306.83166504 564.03979492]
[-310.02801514 549.37884521]
[-312.26867676 534.54180908]
[-313.54421997 519.59082031]
[-313.84933472 504.58862305]
[-313.18267822 489.59814453]
[-311.54711914 474.68225098]
[-308.94946289 459.90350342]
[-305.40063477 445.32391357]
[-300.91552734 431.00460815]
[-295.51290894 417.00564575]
[-289.21548462 403.38577271]
[-282.04965210 390.20208740]
[-274.04544067 377.50988770]
[-265.23648071 365.36242676]
[-255.65966797 353.81063843]
[-245.35519409 342.90298462]
[-234.36628723 332.68521118]
[-222.73902893 323.20019531]
[-210.52218628 314.48770142]
[-197.76699829 306.58425903]
[-184.52697754 299.52304077]
[-170.85765076 293.33367920]
[-156.81634521 288.04208374]
[-142.46197510 283.67050171]
[-127.85472870 280.23724365]
[-113.05588531 277.75671387]
[-98.12751007 276.23931885]
[-83.13221741 275.69140625]
[-68.13291168 276.11529541]
[-53.19249725 277.50921631]
[-38.37364578 279.86727905]
[-23.73851013 283.17962646]
[-9.34847641 287.43237305]
[4.73609829 292.60766602]
[10.80993271 278.89242554]
[16.88376617 265.17715454]
[22.95759964 251.46188354]
[21.03654671 236.69168091]
[33.69915390 227.20648193]
[39.77298737 213.49121094]
[33.49532700 202.23863220]
[34.86543274 189.23075867]
[43.60591888 179.24003601]
[56.69448853 176.06137085]
[62.97184753 162.43806458]
[69.24920654 148.81474304]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.12747192 44.90789413]
[123.40483856 31.28458023]
[129.68218994 17.66126442]
[135.34498596 3.77123666]
[140.38189697 -10.35779285]
[145.41880798 -24.48682213]
[150.45573425 -38.61585236]
[155.49264526 -52.74488068]
[152.83863831 -68.34189606]
[164.40042114 -77.73201752]
[157.87689209 -91.87702942]
[163.18630981 -106.13412476]
[176.71162415 -112.26613617]
[181.74853516 -126.39516449]
[186.78546143 -140.52420044]
[191.82237244 -154.65322876]
[178.60040283 -161.80023193]
[166.62442017 -170.88189697]
[156.17520142 -181.68531799]
[147.49766541 -193.95727539]
[140.79522705 -207.41007996]
[136.22500610 -221.72836304]
[133.89413452 -236.57650757]
[133.85725403 -251.60646057]
[136.11523438 -266.46585083]
[140.61512756 -280.80642700]
[147.25144958 -294.29193115]
[155.86866760 -306.60632324]
[166.26473999 -317.46090698]
[178.19599915 -326.60122681]
[191.38273621 -333.81304932]
[205.51585388 -338.92727661]
[220.26405334 -341.82406616]
[235.28158569 -342.43548584]
[250.21646118 -340.74722290]
[264.71853638 -336.79882812]
[278.44790649 -330.68286133]
[291.08273315 -322.54272461]
[302.32678223 -312.56918335]
[311.91653442 -300.99606323]
[319.62719727 -288.09466553]
[325.27798462 -274.16738892]
[328.73641968 -259.54071045]
[329.92150879 -244.55751038]
[328.80538940 -229.56903076]
[325.41427612 -214.92660522]
[319.82763672 -200.97346497]
[312.17642212 -188.03671265]
[302.64001465 -176.41960144]
[291.44195557 -166.39442444]
[278.84475708 -158.19622803]
[265.14367676 -152.01716614]
[250.65989685 -148.00207520]
[235.73297119 -146.24510193]
[220.71276855 -146.78741455]
[205.95140076 -149.61630249]
[200.91448975 -135.48727417]
[195.87757874 -121.35824585]
[190.84065247 -107.22921753]
[197.43672180 -93.92404938]
[192.52984619 -79.52345276]
[178.52944946 -72.69509888]
[181.54373169 -58.10869217]
[169.62167358 -47.70796585]
[164.58476257 -33.57893753]
[159.54785156 -19.44990540]
[154.51092529 -5.32087660]
[149.47401428 8.80815315]
[163.45523071 3.37442255]
[177.23866272 9.29195213]
[182.92851257 23.17091179]
[177.26539612 37.06080246]
[163.49339294 43.00486374]
[149.50173950 37.59806824]
[143.30551147 23.93862343]
[137.02815247 37.56193924]
[130.75079346 51.18525696]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[82.87252808 155.09210205]
[76.59516144 168.71542358]
[70.31780243 182.33872986]
[76.67512512 198.63609314]
[69.42156219 214.18281555]
[53.48825455 219.56504822]
[47.41442108 233.28031921]
[48.90103149 249.03152466]
[36.67286682 257.53570557]
[30.59903336 271.25097656]
[24.52519989 284.96624756]
[18.45136452 298.68151855]
[31.74948120 305.63269043]
[44.56975937 313.43008423]
[56.85842514 322.04098511]
[68.56393433 331.42929077]
[79.63719177 341.55557251]
[90.03174591 352.37741089]
[99.70400238 363.84939575]
[108.61339569 375.92340088]
[116.72255707 388.54879761]
[123.99746704 401.67260742]
[130.40760803 415.23980713]
[135.92611694 429.19348145]
[140.52981567 443.47512817]
[144.19941711 458.02478027]
[146.91950989 472.78146362]
[148.67871094 487.68328857]
[149.46961975 502.66772461]
[149.28892517 517.67193604]
[148.13739014 532.63299561]
[146.01983643 547.48809814]
[142.94515991 562.17504883]
[138.92623901 576.63208008]
[133.97993469 590.79870605]
[128.12699890 604.61547852]
[121.39199066 618.02435303]
[113.80313873 630.96917725]
[105.39228821 643.39562988]
[96.19470978 655.25158691]
[86.24898529 666.48730469]
[75.59683228 677.05566406]
[64.28292847 686.91235352]
[52.35472107 696.01599121]
[39.86225128 704.32849121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 177]
[63 176]
[64 175]
[65 174]
[67 172]
[68 171]
[72 168]
[73 167]
[74 166]
[75 165]
[76 164]
[77 163]
[79 161]
[80 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 149]
[86 148]
[87 147]
[88 146]
[89 145]
[91 143]
[94 140]
[95 139]
[96 138]
[97 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
