%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[45.76272583 245.59323120]
[53.38546753 258.54214478]
[59.08771515 272.44412231]
[62.75338364 287.01614380]
[64.30784607 301.96151733]
[63.71944809 316.97601318]
[61.00017166 331.75390625]
[56.20538330 345.99435425]
[49.43269348 359.40747070]
[40.81998444 371.72015381]
[30.54260254 382.68173218]
[18.80978203 392.06903076]
[5.86038876 399.69097900]
[-8.04194641 405.39236450]
[-22.61418915 409.05712891]
[-37.55966568 410.61065674]
[-52.57410812 410.02133179]
[-67.35183716 407.30114746]
[-81.59200287 402.50549316]
[-95.00469208 395.73196411]
[-107.31683350 387.11849976]
[-118.27777863 376.84042358]
[-127.66436768 365.10702515]
[-135.28550720 352.15716553]
[-140.98603821 338.25448608]
[-144.64990234 323.68200684]
[-146.20249939 308.73645020]
[-145.61225891 293.72204590]
[-142.89114380 278.94445801]
[-138.09458923 264.70458984]
[-131.32025146 251.29232788]
[-122.70601654 238.98072815]
[-112.42727661 228.02041626]
[-100.69329071 218.63455200]
[-87.74295807 211.01422119]
[-73.83991241 205.31454468]
[-59.26721954 201.65158081]
[-44.32154846 200.09989929]
[-29.30718040 200.69108582]
[-14.52978611 203.41310120]
[-0.29021513 208.21054077]
[13.12163353 214.98571777]
[14.07752419 200.12181091]
[28.32816124 193.24942017]
[36.92672729 180.95857239]
[45.52529144 168.66773987]
[54.12385559 156.37690735]
[62.72241974 144.08605957]
[71.04436493 131.60627747]
[79.08553314 118.94374847]
[87.12670898 106.28121948]
[87.90818024 92.32124329]
[100.21076965 85.67760468]
[108.25193787 73.01508331]
[108.60135651 54.60422897]
[124.46092224 47.09149551]
[132.31268311 34.31064987]
[140.16442871 21.52980804]
[125.19104767 22.42292023]
[115.04401398 11.37585068]
[117.20335388 -3.46791124]
[130.07727051 -11.16609669]
[144.17561340 -6.04388952]
[149.10575867 8.12116718]
[157.88636780 -4.04028845]
[166.66697693 -16.20174408]
[175.44757080 -28.36320114]
[163.75958252 -37.77034760]
[152.57994080 -47.77630615]
[141.93928528 -58.35365295]
[131.86679077 -69.47338867]
[122.39007568 -81.10504150]
[113.53509521 -93.21672821]
[105.32612610 -105.77525330]
[97.78567505 -118.74619293]
[90.93440247 -132.09399414]
[84.79109192 -145.78205872]
[79.37257385 -159.77288818]
[74.69371796 -174.02813721]
[70.76732635 -188.50871277]
[67.60417938 -203.17494202]
[65.21293640 -217.98660278]
[63.60015869 -232.90312195]
[62.77026367 -247.88360596]
[62.72552109 -262.88699341]
[63.46606064 -277.87216187]
[64.98984528 -292.79803467]
[67.29270935 -307.62371826]
[70.36833191 -322.30853271]
[74.20828247 -336.81228638]
[78.80204773 -351.09518433]
[84.13701630 -365.11807251]
[90.19858551 -378.84252930]
[96.97013092 -392.23095703]
[104.43309021 -405.24664307]
[112.56700897 -417.85388184]
[121.34960175 -430.01818848]
[130.75677490 -441.70614624]
[140.76277161 -452.88577271]
[151.34014893 -463.52636719]
[162.45991516 -473.59884644]
[174.09159851 -483.07553101]
[186.20332336 -491.93045044]
[198.76187134 -500.13940430]
[211.73281860 -507.67980957]
[225.08064270 -514.53106689]
[238.76873779 -520.67431641]
[252.75958252 -526.09277344]
[267.01483154 -530.77160645]
[281.49542236 -534.69793701]
[296.16165161 -537.86102295]
[310.97332764 -540.25225830]
[325.88986206 -541.86499023]
[340.87036133 -542.69482422]
[355.87374878 -542.73950195]
[370.85891724 -541.99896240]
[385.78475952 -540.47509766]
[400.61044312 -538.17218018]
[415.29525757 -535.09655762]
[429.79898071 -531.25653076]
[444.08184814 -526.66271973]
[458.10473633 -521.32769775]
[471.82919312 -515.26611328]
[485.21759033 -508.49453735]
[498.23324585 -501.03152466]
[510.84048462 -492.89755249]
[523.00476074 -484.11492920]
[534.69268799 -474.70773315]
[545.87225342 -464.70169067]
[556.51281738 -454.12429810]
[566.58526611 -443.00448608]
[576.06195068 -431.37277222]
[584.91680908 -419.26104736]
[593.12573242 -406.70245361]
[600.66607666 -393.73147583]
[607.51727295 -380.38363647]
[613.66052246 -366.69552612]
[619.07891846 -352.70468140]
[623.75775146 -338.44940186]
[627.68402100 -323.96881104]
[630.84710693 -309.30255127]
[633.23822021 -294.49087524]
[634.85095215 -279.57434082]
[635.68072510 -264.59384155]
[635.72540283 -249.59046936]
[634.98474121 -234.60530090]
[633.46087646 -219.67942810]
[631.15789795 -204.85377502]
[628.08221436 -190.16897583]
[624.24218750 -175.66525269]
[619.64831543 -161.38238525]
[614.31329346 -147.35952759]
[608.25158691 -133.63508606]
[601.47998047 -120.24671173]
[594.01696777 -107.23107910]
[585.88293457 -94.62387085]
[577.10028076 -82.45964050]
[567.69305420 -70.77172852]
[557.68695068 -59.59217453]
[547.10955811 -48.95162201]
[535.98968506 -38.87923050]
[524.35797119 -29.40261459]
[512.24621582 -20.54774284]
[499.68759155 -12.33888912]
[486.71661377 -4.79855299]
[473.36874390 2.05259800]
[459.68060303 8.19578552]
[445.68972778 13.61417103]
[431.43444824 18.29290390]
[416.95382690 22.21915817]
[402.28756714 25.38217354]
[387.47589111 27.77328110]
[372.55935669 29.38592720]
[357.57885742 30.21568871]
[342.57546997 30.26029396]
[327.59030151 29.51961899]
[312.66445923 27.99569511]
[297.83880615 25.69270134]
[283.15399170 22.61694527]
[268.65029907 18.77686119]
[254.36744690 14.18297195]
[240.34460449 8.84787083]
[226.62017822 2.78618097]
[213.23182678 -3.98548317]
[200.21621704 -11.44856167]
[187.60902405 -19.58259773]
[178.82843018 -7.42114115]
[170.04782104 4.74031448]
[161.26722717 16.90176964]
[152.94528198 29.38156319]
[145.09352112 42.16240692]
[137.24176025 54.94324875]
[139.74658203 66.77762604]
[133.30975342 77.48981476]
[120.91446686 81.05625153]
[112.87329102 93.71878052]
[112.09181976 107.67875671]
[99.78923035 114.32239532]
[91.74806213 126.98491669]
[83.70688629 139.64744568]
[83.48851013 144.86274719]
[81.49119568 149.05369568]
[78.40303802 151.71420288]
[75.01325226 152.68463135]
[66.41468811 164.97546387]
[57.81612778 177.26631165]
[49.21756363 189.55714417]
[40.61899948 201.84797668]
[39.04808426 217.59100342]
[25.41247177 223.58427429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 210]
[44 208]
[45 207]
[46 206]
[47 205]
[48 204]
[49 200]
[50 199]
[51 198]
[53 196]
[54 195]
[56 192]
[57 191]
[58 190]
[64 189]
[65 188]
[66 187]
[67 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
