%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[120.90662384 354.81878662]
[107.96446991 362.47854614]
[93.88877869 367.77438354]
[79.10726929 370.54534912]
[64.06916046 370.70727539]
[49.23142242 368.25518799]
[35.04496765 363.26361084]
[21.94090462 355.88427734]
[10.31745052 346.34140015]
[0.52783042 334.92498779]
[-7.13046122 321.98196411]
[-12.42469788 307.90567017]
[-15.19399357 293.12387085]
[-15.35419178 278.08572388]
[-12.90042496 263.24826050]
[-7.90725994 249.06237793]
[-0.52643371 235.95915222]
[9.01775932 224.33679199]
[20.43527985 214.54846191]
[33.37916565 206.89163208]
[47.45606613 201.59899902]
[62.23819733 198.83137512]
[77.27634430 198.67288208]
[79.72207642 183.87361145]
[82.05756378 169.05654907]
[84.28267670 154.22250366]
[86.50779724 139.38845825]
[80.74407959 125.65423584]
[90.44290924 113.15451050]
[84.09726715 103.38854218]
[85.91062164 91.88406372]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[99.73382568 54.92717743]
[101.95894623 40.09313202]
[104.18405914 25.25908852]
[106.40917969 10.42504501]
[95.86109924 21.08984375]
[81.42021179 25.14703178]
[66.86132812 21.53606796]
[55.99011612 11.20085144]
[51.64827728 -3.15701890]
[54.97075653 -17.78442955]
[65.08907318 -28.85780907]
[79.35831451 -33.48260498]
[94.04853821 -30.44990540]
[105.31975555 -20.55245018]
[110.22563171 -6.37829638]
[114.62663269 -20.71814346]
[119.02763367 -35.05799103]
[123.42862701 -49.39783859]
[127.82962799 -63.73768616]
[132.23062134 -78.07752991]
[118.12500763 -83.18883514]
[104.29169464 -88.99689484]
[90.76509094 -95.48726654]
[77.57881927 -102.64382172]
[64.76567078 -110.44876099]
[52.35748672 -118.88268280]
[40.38512802 -127.92461395]
[28.87835312 -137.55207825]
[17.86577415 -147.74114990]
[7.37476969 -158.46647644]
[-2.56857991 -169.70141602]
[-11.93955231 -181.41802979]
[-20.71485138 -193.58717346]
[-28.87265778 -206.17860413]
[-36.39269257 -219.16101074]
[-43.25625610 -232.50213623]
[-49.44628906 -246.16879272]
[-54.94739914 -260.12701416]
[-59.74591064 -274.34207153]
[-63.82989120 -288.77865601]
[-67.18919373 -303.40087891]
[-69.81546021 -318.17236328]
[-71.70215607 -333.05639648]
[-72.84460449 -348.01596069]
[-73.23995972 -363.01388550]
[-72.88723755 -378.01287842]
[-71.78730774 -392.97561646]
[-69.94291687 -407.86495972]
[-67.35865021 -422.64382935]
[-64.04092407 -437.27554321]
[-59.99798965 -451.72369385]
[-55.23989868 -465.95233154]
[-49.77848434 -479.92611694]
[-43.62731934 -493.61032104]
[-36.80170059 -506.97088623]
[-29.31859589 -519.97460938]
[-21.19660950 -532.58917236]
[-12.45593357 -544.78320312]
[-3.11829925 -556.52642822]
[6.79307795 -567.78955078]
[17.25355721 -578.54467773]
[28.23713303 -588.76501465]
[39.71649551 -598.42517090]
[51.66310883 -607.50103760]
[64.04727173 -615.97021484]
[76.83818817 -623.81152344]
[90.00406647 -631.00555420]
[103.51216888 -637.53436279]
[117.32891083 -643.38171387]
[131.41995239 -648.53308105]
[145.75024414 -652.97564697]
[160.28416443 -656.69842529]
[174.98559570 -659.69207764]
[189.81796265 -661.94921875]
[204.74441528 -663.46423340]
[219.72781372 -664.23333740]
[234.73092651 -664.25463867]
[249.71646118 -663.52801514]
[264.64715576 -662.05535889]
[279.48587036 -659.84033203]
[294.19570923 -656.88836670]
[308.74014282 -653.20684814]
[323.08297729 -648.80493164]
[337.18856812 -643.69354248]
[351.02185059 -637.88543701]
[364.54843140 -631.39495850]
[377.73464966 -624.23834229]
[390.54779053 -616.43334961]
[402.95590210 -607.99938965]
[414.92822266 -598.95739746]
[426.43493652 -589.32983398]
[437.44747925 -579.14074707]
[447.93841553 -568.41534424]
[457.88171387 -557.18035889]
[467.25262451 -545.46368408]
[476.02786255 -533.29449463]
[484.18560791 -520.70306396]
[491.70556641 -507.72058105]
[498.56906128 -494.37942505]
[504.75903320 -480.71273804]
[510.26007080 -466.75448608]
[515.05853271 -452.53939819]
[519.14239502 -438.10278320]
[522.50164795 -423.48056030]
[525.12780762 -408.70907593]
[527.01446533 -393.82501221]
[528.15679932 -378.86544800]
[528.55206299 -363.86752319]
[528.19927979 -348.86853027]
[527.09930420 -333.90579224]
[525.25482178 -319.01647949]
[522.67047119 -304.23757935]
[519.35266113 -289.60589600]
[515.30963135 -275.15780640]
[510.55148315 -260.92916870]
[505.08999634 -246.95539856]
[498.93878174 -233.27124023]
[492.11306763 -219.91070557]
[484.62991333 -206.90701294]
[476.50784302 -194.29248047]
[467.76712036 -182.09849548]
[458.42941284 -170.35534668]
[448.51797485 -159.09223938]
[438.05746460 -148.33718872]
[427.07382202 -138.11692810]
[415.59442139 -128.45684814]
[403.64773560 -119.38098907]
[391.26354980 -110.91189575]
[378.47259521 -103.07064056]
[365.30667114 -95.87670898]
[351.79852295 -89.34798431]
[337.98175049 -83.50070190]
[323.89068604 -78.34940338]
[309.56036377 -73.90689087]
[295.02642822 -70.18420410]
[280.32498169 -67.19060516]
[265.49261475 -64.93353271]
[250.56616211 -63.41860580]
[235.58274841 -62.64958572]
[220.57963562 -62.62837982]
[205.59410095 -63.35504913]
[190.66343689 -64.82778168]
[175.82472229 -67.04291534]
[161.11488342 -69.99494934]
[146.57046509 -73.67653656]
[142.16947937 -59.33668518]
[137.76847839 -44.99684143]
[133.36747742 -30.65699196]
[128.96647644 -16.31714630]
[124.56548309 -1.97729838]
[121.24322510 12.65016174]
[119.01810455 27.48420525]
[116.79299164 42.31824875]
[114.56787109 57.15229416]
[116.68436432 64.23341370]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[116.06143951 102.53162384]
[105.27695465 115.37962341]
[110.88151550 130.17488098]
[101.34184265 141.61357117]
[99.11672211 156.44761658]
[96.89160919 171.28166199]
[98.71337891 180.23257446]
[94.52134705 186.31933594]
[92.07561493 201.11860657]
[106.26320648 206.10694885]
[119.36894226 213.48332214]
[130.99455261 223.02355957]
[140.78677368 234.43774414]
[148.44799805 247.37902832]
[153.74542236 261.45413208]
[156.51806641 276.23532104]
[156.68168640 291.27340698]
[154.23127747 306.11141968]
[149.24133301 320.29843140]
[141.86347961 333.40335083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 199]
[24 198]
[25 196]
[26 195]
[27 194]
[29 192]
[32 190]
[33 189]
[34 187]
[35 186]
[36 185]
[37 184]
[48 183]
[49 182]
[50 181]
[51 180]
[52 179]
[53 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
