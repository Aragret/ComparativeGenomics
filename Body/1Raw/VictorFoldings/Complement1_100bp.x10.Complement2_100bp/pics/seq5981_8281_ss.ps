%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[161.00457764 494.65438843]
[154.55305481 481.10568237]
[149.07333374 467.13568115]
[144.59269714 452.81390381]
[141.13345337 438.21176147]
[138.71286011 423.40197754]
[137.34297180 408.45834351]
[137.03060913 393.45532227]
[137.77732849 378.46759033]
[139.57940674 363.56991577]
[142.42787170 348.83642578]
[146.30851746 334.34057617]
[151.20204163 320.15460205]
[157.08403015 306.34912109]
[163.92520142 292.99295044]
[171.69146729 280.15261841]
[180.34413147 267.89212036]
[189.84010315 256.27249146]
[200.13204956 245.35163879]
[189.96850586 234.31976318]
[179.80494690 223.28788757]
[169.64140320 212.25601196]
[159.47785950 201.22413635]
[149.31431580 190.19226074]
[139.15077209 179.16038513]
[142.52330017 193.77633667]
[140.46035767 208.63380432]
[133.23338318 221.77803040]
[121.79317474 231.47966003]
[107.64491272 236.46229553]
[92.65003204 236.07037354]
[78.78137207 230.35545349]
[67.86359406 220.06942749]
[61.33311844 206.56562805]
[60.04914093 191.62068176]
[64.18058777 177.20086670]
[73.18390656 165.20335388]
[85.87454224 157.20661926]
[100.58283234 154.26277161]
[115.37364197 156.75914001]
[128.30279541 164.36882019]
[120.83505249 151.35987854]
[113.36730957 138.35092163]
[105.89957428 125.34196472]
[92.66904449 124.96552277]
[81.33551025 118.12889862]
[74.83167267 106.60116577]
[74.84049225 93.36528778]
[81.35969543 81.84623718]
[74.08646393 68.72753906]
[66.81323242 55.60884857]
[59.54000473 42.49015427]
[47.37896347 38.19225693]
[41.59114838 27.11593056]
[44.79592514 15.45162773]
[37.71881866 2.22610044]
[30.64171410 -10.99942684]
[23.86198616 2.38098001]
[9.20540905 5.57233143]
[-2.52373528 -3.77791810]
[-2.67915750 -18.77711296]
[8.85371399 -28.36840439]
[23.57194710 -25.48243332]
[17.49811363 -39.19770050]
[11.42428017 -52.91296768]
[5.35044575 -66.62823486]
[-0.72338808 -80.34349823]
[-15.11065865 -76.02960968]
[-29.92516327 -73.55297852]
[-44.93325806 -72.95269012]
[-59.89824295 -74.23818970]
[-74.58409119 -77.38921356]
[-88.75920105 -82.35606384]
[-102.19999695 -89.06040955]
[-114.69450378 -97.39650726]
[-126.04566193 -107.23288727]
[-136.07446289 -118.41441345]
[-144.62271118 -130.76473999]
[-151.55560303 -144.08909607]
[-156.76379395 -158.17730713]
[-160.16516113 -172.80720520]
[-161.70602417 -187.74806213]
[-161.36212158 -202.76422119]
[-159.13883972 -217.61885071]
[-155.07127380 -232.07769775]
[-149.22355652 -245.91270447]
[-141.68791199 -258.90567017]
[-132.58320618 -270.85171509]
[-122.05302429 -281.56237793]
[-110.26343536 -290.86877441]
[-97.40039062 -298.62411499]
[-83.66674805 -304.70608521]
[-69.27911377 -309.01876831]
[-54.46440125 -311.49414062]
[-39.45625687 -312.09317017]
[-24.49138260 -310.80639648]
[-9.80579376 -307.65414429]
[4.36889362 -302.68609619]
[17.80912590 -295.98062134]
[30.30293083 -287.64346313]
[41.65326309 -277.80615234]
[51.68111420 -266.62377930]
[60.22832489 -254.27272034]
[67.16010284 -240.94778442]
[72.36711121 -226.85913086]
[75.76723480 -212.22894287]
[77.30684662 -197.28796387]
[76.96166992 -182.27183533]
[74.73715210 -167.41738892]
[70.66835785 -152.95889282]
[64.81947327 -139.12437439]
[57.28274536 -126.13202667]
[48.17703247 -114.18676758]
[37.64594650 -103.47698975]
[25.85557938 -94.17158508]
[12.99187851 -86.41733551]
[19.06571198 -72.70206451]
[25.13954735 -58.98680115]
[31.21338081 -45.27153397]
[37.28721619 -31.55626678]
[43.86724091 -18.07653236]
[50.94434738 -4.85100508]
[58.02145386 8.37452221]
[73.40573120 16.81791687]
[72.65869904 35.21692276]
[79.93193054 48.33561707]
[87.20515442 61.45431137]
[94.47838593 74.57300568]
[110.64881134 76.25925446]
[122.66166687 87.21450043]
[125.82682800 103.16153717]
[118.90852356 117.87422180]
[126.37626648 130.88317871]
[133.84400940 143.89213562]
[141.31175232 156.90107727]
[150.18264771 168.99684143]
[160.34619141 180.02871704]
[170.50973511 191.06059265]
[180.67327881 202.09246826]
[190.83683777 213.12434387]
[201.00038147 224.15621948]
[211.16392517 235.18809509]
[222.89002991 225.82394409]
[235.24746704 217.31027222]
[248.17466736 209.68949890]
[261.60723877 202.99957275]
[275.47824097 197.27383423]
[289.71859741 192.54081726]
[304.25732422 188.82409668]
[319.02203369 186.14218140]
[333.93911743 184.50843811]
[348.93429565 183.93099976]
[363.93286133 184.41275024]
[378.86007690 185.95129395]
[393.64160156 188.53897095]
[408.20373535 192.16285706]
[422.47399902 196.80493164]
[436.38125610 202.44206238]
[449.85623169 209.04614258]
[462.83178711 216.58430481]
[475.24328613 225.01896667]
[487.02890015 234.30812073]
[498.12991333 244.40547180]
[508.49099731 255.26074219]
[518.06054688 266.81982422]
[526.79089355 279.02514648]
[534.63854980 291.81591797]
[541.56439209 305.12835693]
[547.53393555 318.89620972]
[552.51745605 333.05084229]
[556.49005127 347.52175903]
[559.43200684 362.23684692]
[561.32867432 377.12280273]
[562.17053223 392.10546875]
[561.95343018 407.11016846]
[560.67846680 422.06222534]
[558.35198975 436.88708496]
[554.98553467 451.51089478]
[550.59594727 465.86080933]
[545.20501709 479.86535645]
[538.83966064 493.45471191]
[531.53161621 506.56124878]
[523.31719971 519.11962891]
[514.23742676 531.06726074]
[504.33746338 542.34466553]
[493.66665649 552.89562988]
[482.27819824 562.66760254]
[470.22879028 571.61193848]
[457.57846069 579.68402100]
[444.39025879 586.84362793]
[430.72985840 593.05511475]
[416.66534424 598.28753662]
[402.26675415 602.51483154]
[387.60586548 605.71594238]
[372.75570679 607.87487793]
[357.79022217 608.98095703]
[342.78399658 609.02856445]
[327.81179810 608.01757812]
[312.94821167 605.95300293]
[298.26727295 602.84503174]
[283.84213257 598.70928955]
[269.74468994 593.56622314]
[256.04513550 587.44165039]
[242.81172180 580.36590576]
[230.11039734 572.37432861]
[218.00444031 563.50671387]
[206.55413818 553.80725098]
[195.81655884 543.32421875]
[185.84518433 532.10992432]
[176.68971252 520.22021484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[41 135]
[42 134]
[43 133]
[44 132]
[49 128]
[50 127]
[51 126]
[52 125]
[55 123]
[56 122]
[57 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
