%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-21.83400536 361.58673096]
[-14.03708267 374.43618774]
[-8.29310036 388.32528687]
[-4.73670578 402.92846680]
[-3.45126534 417.90338135]
[-4.46691179 432.89901733]
[-7.75983715 447.56384277]
[-13.25284958 461.55407715]
[-20.81718636 474.54180908]
[-30.27552795 486.22259521]
[-41.40615845 496.32257080]
[-53.94815826 504.60498047]
[-67.60752106 510.87573242]
[-82.06406403 514.98779297]
[-96.97888947 516.84472656]
[-112.00238800 516.40307617]
[-126.78237152 513.67315674]
[-140.97238159 508.71899414]
[-154.23979187 501.65667725]
[-166.27360535 492.65179443]
[-176.79168701 481.91540527]
[-185.54753113 469.69918823]
[-192.33586121 456.28952026]
[-196.99754333 442.00076294]
[-199.42330933 427.16781616]
[-199.55630493 412.13842773]
[-197.39340210 397.26486206]
[-192.98530579 382.89584351]
[-186.43533325 369.36816406]
[-177.89704895 356.99890137]
[-167.57060242 346.07806396]
[-155.69802856 336.86163330]
[-142.55767822 329.56564331]
[-128.45755005 324.36114502]
[-113.72818756 321.37011719]
[-98.71486664 320.66265869]
[-83.76950836 322.25540161]
[-69.24246979 326.11096191]
[-55.47426987 332.13900757]
[-47.43309784 319.47650146]
[-39.39192581 306.81396484]
[-31.35075188 294.15142822]
[-23.30957985 281.48892212]
[-15.26840687 268.82638550]
[-7.22723389 256.16384888]
[-22.06470299 258.36602783]
[-34.19516754 249.54264832]
[-36.66974258 234.74818420]
[-28.07088661 222.45755005]
[-13.32440758 219.71139526]
[-0.87776202 228.08282471]
[2.13922215 242.77539062]
[11.27802467 230.88076782]
[20.41682625 218.98612976]
[29.28772163 206.89038086]
[37.88628769 194.59953308]
[46.48485184 182.30870056]
[54.99167633 169.95419312]
[63.40629578 157.53669739]
[71.82091522 145.11920166]
[78.89801788 131.89367676]
[84.56080627 118.00364685]
[90.22359467 104.11361694]
[95.15518951 89.94748688]
[99.34220123 75.54370117]
[103.52920532 61.13992310]
[107.71621704 46.73613739]
[111.90322876 32.33235550]
[114.34896088 17.53308678]
[115.01874542 2.54804754]
[106.15595245 -13.59296989]
[116.17015839 -28.00416565]
[116.61676788 -42.99751663]
[117.06336975 -57.99086380]
[117.50997925 -72.98421478]
[117.95658112 -87.97756195]
[116.61834717 -102.91774750]
[113.51423645 -117.59305573]
[110.41012573 -132.26835632]
[107.30602264 -146.94366455]
[104.20191193 -161.61895752]
[96.09354401 -148.99935913]
[81.80831146 -144.42419434]
[67.87722015 -149.98519897]
[60.66938019 -163.13992310]
[63.48011780 -177.87423706]
[75.02439880 -187.45178223]
[90.02434540 -187.49385071]
[101.62312317 -177.97961426]
[100.06259918 -192.89822388]
[98.50207520 -207.81681824]
[96.94155121 -222.73542786]
[82.10897064 -225.64851379]
[68.79479980 -232.80563354]
[58.18292236 -243.57035828]
[51.21693802 -256.98550415]
[48.51625824 -271.85824585]
[50.32102203 -286.86602783]
[56.47075653 -300.67443848]
[66.41863251 -312.05563354]
[79.28008270 -319.99755859]
[93.91148376 -323.79409790]
[109.01181793 -323.10757446]
[123.23838043 -317.99911499]
[135.32614136 -308.92291260]
[144.20027161 -296.68603516]
[149.07170105 -282.37658691]
[149.50724792 -267.26693726]
[145.46820068 -252.70062256]
[137.31369019 -239.97286987]
[125.76882172 -230.21543884]
[111.86015320 -224.29595947]
[113.42067719 -209.37734985]
[114.98120117 -194.45874023]
[116.54172516 -179.54013062]
[118.87721252 -164.72306824]
[121.98132324 -150.04776001]
[125.08543396 -135.37246704]
[128.18954468 -120.69716644]
[131.29365540 -106.02185822]
[135.67800903 -120.36680603]
[144.64884949 -132.38862610]
[157.15228271 -140.67498779]
[171.71943665 -144.25245667]
[186.63896179 -142.70071411]
[200.15812683 -136.20208740]
[210.68870544 -125.52001190]
[216.99360657 -111.90941620]
[218.33210754 -96.96925354]
[214.54696655 -82.45468903]
[206.08287048 -70.07086182]
[193.93417358 -61.27262878]
[179.52807617 -57.09358597]
[164.55700684 -58.02468872]
[150.77973938 -63.95655441]
[139.81481934 -74.19230652]
[132.94993591 -87.53096008]
[132.50332642 -72.53761292]
[132.05671692 -57.54425812]
[131.61012268 -42.55091095]
[131.16351318 -27.55755997]
[139.22758484 -18.54106140]
[138.97822571 -6.04620028]
[130.00378418 3.21783280]
[129.33399963 18.20287132]
[137.17091370 5.41292667]
[148.86642456 -3.97936130]
[163.04655457 -8.87059689]
[178.04541016 -8.68616104]
[192.10096741 -3.44772243]
[203.56199646 6.22931290]
[211.08204651 19.20809555]
[213.77767944 33.96389389]
[211.33221436 48.76320648]
[204.03294373 61.86743164]
[192.73738098 71.73709106]
[178.77250671 77.21271515]
[163.77891541 77.65102386]
[149.51803589 73.00053406]
[137.66520691 63.80757141]
[129.61289978 51.15212250]
[126.30701447 36.51936722]
[122.12000275 50.92314911]
[117.93299103 65.32693481]
[113.74597931 79.73071289]
[109.55896759 94.13449860]
[122.66214752 86.83335114]
[137.41606140 89.53929901]
[147.07540894 101.01522827]
[147.22407532 116.01448822]
[137.79409790 127.67962646]
[123.09672546 130.67749023]
[109.85140228 123.63751221]
[104.11361694 109.77640533]
[98.45083618 123.66643524]
[92.78804779 137.55645752]
[104.72138977 128.46826172]
[119.20446014 124.56431580]
[134.08876038 126.42372894]
[147.16630554 133.77067566]
[156.49713135 145.51528931]
[160.69703674 159.91531372]
[159.14302063 174.83459473]
[152.06558228 188.05995178]
[140.51464844 197.62947083]
[126.20370483 202.12358093]
[111.25571442 200.87561035]
[97.88810730 194.07066345]
[88.08390045 182.71824646]
[83.29748535 168.50239563]
[84.23841095 153.53381348]
[75.82379150 165.95130920]
[67.40917206 178.36880493]
[65.18571472 187.22850037]
[58.77568817 190.90727234]
[50.17712402 203.19810486]
[41.57855988 215.48893738]
[41.12752533 220.68930054]
[38.94507217 224.78688049]
[35.74119186 227.30683899]
[32.31145859 228.12493896]
[23.17265701 240.01956177]
[14.03385544 251.91419983]
[5.43529129 264.20504761]
[-2.60588193 276.86755371]
[-10.64705467 289.53009033]
[-18.68822861 302.19259644]
[-26.72940063 314.85513306]
[-34.77057266 327.51766968]
[-42.81174469 340.18017578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 210]
[40 209]
[41 208]
[42 207]
[43 206]
[44 205]
[45 204]
[52 203]
[53 202]
[54 201]
[55 197]
[56 196]
[57 195]
[58 193]
[59 192]
[60 191]
[61 176]
[62 175]
[63 174]
[64 166]
[65 165]
[66 164]
[67 163]
[68 162]
[69 145]
[70 144]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
