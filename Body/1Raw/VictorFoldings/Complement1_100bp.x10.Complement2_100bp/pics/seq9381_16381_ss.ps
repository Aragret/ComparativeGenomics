%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[9.64500904 449.05038452]
[11.47141457 463.97805786]
[10.67772007 478.99609375]
[7.28804636 493.64807129]
[1.40540123 507.48880005]
[-6.79144859 520.09765625]
[-17.05340958 531.09143066]
[-29.06863403 540.13604736]
[-42.47198868 546.95672607]
[-56.85616684 551.34606934]
[-71.78404236 553.17077637]
[-86.80198669 552.37542725]
[-101.45360565 548.98406982]
[-115.29365540 543.09985352]
[-127.90156555 534.90155029]
[-138.89418030 524.63836670]
[-147.93746948 512.62213135]
[-154.75659180 499.21798706]
[-159.14431763 484.83331299]
[-160.96734619 469.90521240]
[-160.17024231 454.88735962]
[-156.77725220 440.23614502]
[-150.89146423 426.39675903]
[-142.69175720 413.78976440]
[-132.42729187 402.79830933]
[-120.41002655 393.75640869]
[-107.00511932 386.93881226]
[-92.61994934 382.55270386]
[-77.69165802 380.73135376]
[-62.67390060 381.53018188]
[-48.02304840 384.92483521]
[-42.15408707 371.12063599]
[-36.28512573 357.31646729]
[-30.41616631 343.51229858]
[-24.54720497 329.70812988]
[-18.67824554 315.90393066]
[-18.95405006 308.51843262]
[-12.61777210 301.93896484]
[-13.53998947 298.53576660]
[-12.85964775 294.51678467]
[-10.30528736 290.64010620]
[-5.95427656 287.75640869]
[0.72591823 274.32601929]
[7.40611267 260.89566040]
[2.43784547 246.90093994]
[9.02119160 233.18547058]
[23.73381805 228.06918335]
[30.41401291 214.63879395]
[37.09420776 201.20841980]
[29.27876282 192.39918518]
[24.87859344 181.43840027]
[24.43075752 169.60124207]
[28.01102829 158.27331543]
[35.22229767 148.78854370]
[45.23847198 142.27198792]
[56.89907837 139.50650024]
[68.84367371 140.83872986]
[76.11690521 127.72003937]
[83.39013672 114.60134125]
[90.66336060 101.48265076]
[90.39700317 96.24404144]
[93.08470917 91.22910309]
[98.35346985 88.08633423]
[106.01406860 75.19000244]
[113.67466736 62.29367828]
[119.13002014 48.32087708]
[122.23413086 33.64557648]
[125.33824158 18.97027397]
[128.44235229 4.29497147]
[131.54646301 -10.38033104]
[134.65057373 -25.05563354]
[137.75468445 -39.73093414]
[140.85879517 -54.40623856]
[143.96290588 -69.08154297]
[130.83297729 -61.82861710]
[116.38252258 -65.85162354]
[108.88943481 -78.84598541]
[112.64608002 -93.36795807]
[125.50048828 -101.09868622]
[140.08906555 -97.60965729]
[148.05465698 -84.90048981]
[152.45565796 -99.24033356]
[149.10784912 -114.70328522]
[160.23880005 -124.60030365]
[164.63980103 -138.94015503]
[169.04080200 -153.27999878]
[165.69299316 -168.74293518]
[176.82394409 -178.63996887]
[171.48143005 -190.37965393]
[175.44224548 -202.23274231]
[186.06576538 -208.01782227]
[190.67977905 -222.29055786]
[195.29379272 -236.56329346]
[199.90779114 -250.83601379]
[204.52180481 -265.10876465]
[209.13581848 -279.38150024]
[195.70690918 -286.13165283]
[183.46585083 -294.85272217]
[172.69960022 -305.34024048]
[163.66052246 -317.34838867]
[156.56051636 -330.59567261]
[151.56602478 -344.77154541]
[148.79409790 -359.54373169]
[148.30973816 -374.56588745]
[150.12428284 -389.48593140]
[154.19522095 -403.95413208]
[160.42709351 -417.63125610]
[168.67382812 -430.19674683]
[178.74212646 -441.35604858]
[190.39595032 -450.84756470]
[203.36212158 -458.44879150]
[217.33670044 -463.98156738]
[231.99211121 -467.31616211]
[246.98478699 -468.37445068]
[261.96328735 -467.13159180]
[276.57650757 -463.61672974]
[290.48190308 -457.91226196]
[303.35345459 -450.15188599]
[314.88949585 -440.51757812]
[324.81958008 -429.23510742]
[332.91091919 -416.56900024]
[338.97387695 -402.81613159]
[342.86627197 -388.29891968]
[344.49691772 -373.35763550]
[343.82757568 -358.34259033]
[340.87390137 -343.60568237]
[335.70520020 -329.49240112]
[328.44256592 -316.33355713]
[319.25628662 -304.43765259]
[308.36166382 -294.08352661]
[296.01412964 -285.51391602]
[282.50308228 -278.92965698]
[268.14529419 -274.48510742]
[253.27728271 -272.28448486]
[238.24758911 -272.37933350]
[223.40855408 -274.76748657]
[218.79454041 -260.49475098]
[214.18052673 -246.22201538]
[209.56651306 -231.94927979]
[204.95251465 -217.67654419]
[200.33850098 -203.40380859]
[204.93203735 -186.46667480]
[191.16380310 -174.23896790]
[194.82640076 -159.80169678]
[183.38064575 -148.87899780]
[178.97964478 -134.53915405]
[174.57865906 -120.19930267]
[178.24125671 -105.76203918]
[166.79550171 -94.83934021]
[162.39450073 -80.49948883]
[158.63821411 -65.97743225]
[155.53410339 -51.30212784]
[152.42999268 -36.62682724]
[149.32588196 -21.95152283]
[146.22177124 -7.27622080]
[143.11766052 7.39908171]
[140.01354980 22.07438469]
[136.90943909 36.74968719]
[133.80532837 51.42498779]
[143.15483093 39.69525528]
[155.19000244 30.74233627]
[169.11257935 25.16004562]
[183.99911499 23.31863785]
[198.86227417 25.34024620]
[212.71620178 31.09078407]
[224.64202881 40.18883896]
[233.84875488 52.03097153]
[239.72573853 65.83173370]
[241.88317871 80.67577362]
[240.17797852 95.57853699]
[234.72323608 109.55157471]
[225.88075256 121.66810608]
[214.23699951 131.12448120]
[200.56428528 137.29351807]
[185.76947021 139.76600647]
[170.83383179 138.37799072]
[156.74798584 133.22151184]
[144.44622803 124.63858032]
[134.74446106 113.19848633]
[128.28619385 99.65999603]
[125.49975586 84.92107391]
[126.57099152 69.95427704]
[118.91039276 82.85060120]
[111.24980164 95.74692535]
[103.78205872 108.75588226]
[96.50882721 121.87457275]
[89.23559570 134.99327087]
[81.96237183 148.11196899]
[92.00251007 163.60462952]
[92.78466034 181.96434021]
[84.17861938 198.10453796]
[68.64324188 207.59742737]
[50.52458191 207.88862610]
[43.84438705 221.31900024]
[37.16419220 234.74937439]
[41.96062851 249.56935120]
[34.99464035 263.09451294]
[20.83648872 267.57583618]
[14.15629387 281.00622559]
[7.47609949 294.43658447]
[1.09749460 308.01278687]
[-4.87406826 321.77291870]
[-10.74302864 335.57708740]
[-16.61198997 349.38125610]
[-22.48095131 363.18542480]
[-28.34991074 376.98962402]
[-34.21887207 390.79379272]
[-21.60910606 398.98919678]
[-10.61415863 409.24990845]
[-1.56815529 421.26412964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[38 201]
[42 200]
[43 199]
[44 198]
[47 195]
[48 194]
[49 193]
[57 188]
[58 187]
[59 186]
[60 185]
[63 184]
[64 183]
[65 182]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[73 152]
[74 151]
[81 150]
[82 149]
[84 147]
[85 146]
[86 145]
[88 143]
[91 141]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
