%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[79.02326965 475.77841187]
[72.94844818 462.04406738]
[68.54070282 447.68759155]
[65.86192322 432.91055298]
[64.94971466 417.92041016]
[65.81687927 402.92761230]
[68.45124054 388.14260864]
[72.81581879 373.77294922]
[78.84934998 360.02038574]
[86.46711731 347.07800293]
[95.56219482 335.12741089]
[106.00688934 324.33645630]
[117.65457916 314.85662842]
[130.34175110 306.82095337]
[143.89030457 300.34225464]
[132.46960449 290.78103638]
[135.35554504 275.22528076]
[130.52954102 261.02282715]
[125.70354462 246.82035828]
[120.87754822 232.61790466]
[115.16020203 246.48556519]
[102.44436646 254.44216919]
[87.47274017 253.52011108]
[75.82935333 244.06327820]
[71.85691071 229.59884644]
[77.03704071 215.52169800]
[89.43766785 207.08224487]
[104.43367767 207.42820740]
[116.43260193 216.43148804]
[113.32849121 201.75619507]
[110.22438049 187.08088684]
[107.12026978 172.40559387]
[104.01615906 157.73028564]
[100.91204834 143.05497742]
[96.45240784 137.16148376]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.63687134 45.30735016]
[78.75160217 30.58745766]
[75.86633301 15.86756706]
[72.98105621 1.14767575]
[70.09578705 -13.57221603]
[67.21051025 -28.29210663]
[63.56242371 -42.84172821]
[59.16142654 -57.18157578]
[54.76042938 -71.52142334]
[50.35942841 -85.86126709]
[45.95843124 -100.20111847]
[41.55743408 -114.54096222]
[35.99820709 -128.47276306]
[29.31801414 -141.90313721]
[22.63781929 -155.33351135]
[15.95762444 -168.76388550]
[9.27742958 -182.19425964]
[2.59723496 -195.62464905]
[-4.08295965 -209.05502319]
[-10.76315403 -222.48539734]
[-17.44334984 -235.91577148]
[-23.23080254 -222.07722473]
[-37.05555725 -216.25689697]
[-50.99816895 -221.78895569]
[-57.07167435 -235.50436401]
[-51.79689407 -249.54632568]
[-38.19546127 -255.87097168]
[-24.05960464 -250.85588074]
[-29.51496124 -264.82867432]
[-34.97031784 -278.80148315]
[-40.42567444 -292.77426147]
[-45.88103485 -306.74707031]
[-51.33639145 -320.71984863]
[-66.03524780 -317.56710815]
[-81.04949951 -316.81317139]
[-95.99024200 -318.47763062]
[-110.47047424 -322.51727295]
[-124.11512756 -328.82757568]
[-136.57077026 -337.24499512]
[-147.51477051 -347.55154419]
[-156.66365051 -359.48025513]
[-163.78044128 -372.72213745]
[-168.68078613 -386.93420410]
[-171.23776245 -401.74832153]
[-171.38514709 -416.78076172]
[-169.11911011 -431.64218140]
[-164.49833679 -445.94757080]
[-157.64254761 -459.32644653]
[-148.72929382 -471.43225098]
[-137.98947144 -481.95138550]
[-125.70125580 -490.61138916]
[-112.18294525 -497.18798828]
[-97.78469849 -501.51077271]
[-82.87945557 -503.46783447]
[-67.85330963 -503.00842285]
[-53.09546661 -500.14443970]
[-38.98819351 -494.95013428]
[-25.89690018 -487.55996704]
[-14.16068554 -478.16543579]
[-4.08354378 -467.00982666]
[4.07350159 -454.38214111]
[10.09916496 -440.60943604]
[13.83736610 -426.04846191]
[15.19127655 -411.07638550]
[14.12582779 -396.08102417]
[10.66861629 -381.45077515]
[4.90919304 -367.56463623]
[-3.00325918 -354.78222656]
[-12.86378956 -343.43472290]
[-24.41698456 -333.81600952]
[-37.36359406 -326.17523193]
[-31.90823555 -312.20242310]
[-26.45287895 -298.22961426]
[-20.99752045 -284.25683594]
[-15.54216385 -270.28402710]
[-10.08680725 -256.31121826]
[-4.01297283 -242.59596252]
[2.66722178 -229.16558838]
[9.34741592 -215.73521423]
[16.02761078 -202.30484009]
[22.70780563 -188.87446594]
[29.38800049 -175.44409180]
[36.06819534 -162.01370239]
[42.74839020 -148.58332825]
[49.42858505 -135.15295410]
[51.48447800 -150.01139832]
[60.13470459 -162.26593018]
[73.44678497 -169.17886353]
[88.44675446 -169.20582581]
[101.78359985 -162.34078979]
[110.47782135 -150.11743164]
[112.58711243 -135.26647949]
[107.64025116 -121.10565948]
[96.74238586 -110.79856110]
[82.32811737 -106.64778900]
[67.61763000 -109.58065796]
[55.89728165 -118.94196320]
[60.29827881 -104.60211182]
[64.69927979 -90.26226807]
[69.10027313 -75.92241669]
[73.50127411 -61.58257294]
[77.90227509 -47.24272537]
[84.85243225 -60.53540039]
[98.67253113 -66.36677551]
[113.04419708 -62.07083130]
[121.39690399 -49.61160660]
[119.91190338 -34.68529510]
[109.26811981 -24.11600494]
[94.33174896 -22.73587418]
[81.93040466 -31.17737961]
[84.81567383 -16.45748901]
[87.70095062 -1.73759687]
[90.58621979 12.98229408]
[93.47149658 27.70218658]
[96.35676575 42.42207718]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.58735657 139.95086670]
[118.69146729 154.62617493]
[121.79557800 169.30148315]
[124.89968109 183.97677612]
[128.00379944 198.65208435]
[131.10791016 213.32737732]
[135.08000183 227.79190063]
[139.90600586 241.99436951]
[144.73199463 256.19680786]
[149.55799866 270.39926147]
[161.32388306 280.97634888]
[158.09275818 295.51626587]
[172.78356934 292.39920044]
[187.73995972 291.04159546]
[202.75192261 291.46249390]
[217.60873413 293.65597534]
[232.10183716 297.59127808]
[246.02774048 303.21313477]
[259.19097900 310.44262695]
[271.40673828 319.17828369]
[282.50354004 329.29742432]
[292.32562256 340.65805054]
[300.73504639 353.10061646]
[307.61380005 366.45050049]
[312.86529541 380.52026367]
[316.41580200 395.11239624]
[318.21551514 410.02203369]
[318.23913574 425.03988647]
[316.48635864 439.95510864]
[312.98175049 454.55831909]
[307.77453613 468.64453125]
[300.93783569 482.01599121]
[292.56759644 494.48495483]
[282.78131104 505.87643433]
[271.71640015 516.03045654]
[259.52819824 524.80444336]
[246.38775635 532.07531738]
[232.47959900 537.74096680]
[217.99896240 541.72186279]
[203.14912415 543.96209717]
[188.13854980 544.43023682]
[173.17797852 543.11968994]
[158.47741699 540.04882812]
[144.24325562 535.26086426]
[130.67530823 528.82287598]
[117.96404266 520.82537842]
[106.28791809 511.38058472]
[95.81084442 500.62106323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 174]
[17 172]
[18 171]
[19 170]
[20 169]
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[34 163]
[36 162]
[37 161]
[39 159]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
