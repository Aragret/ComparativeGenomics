%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[78.41787720 360.71765137]
[77.97126770 345.72430420]
[77.41306305 330.73471069]
[76.74327087 315.74966431]
[68.44538879 303.38058472]
[75.55876160 289.24868774]
[74.88897705 274.26364136]
[74.21919250 259.27859497]
[73.54940796 244.29356384]
[72.87962341 229.30851746]
[72.20983887 214.32348633]
[59.69993973 206.28355408]
[54.25870514 192.25297546]
[58.16823959 177.53669739]
[70.13181305 167.83210754]
[64.10646057 181.56874084]
[55.39174271 193.77749634]
[44.35820770 203.93925476]
[31.47501564 211.62191772]
[17.28996086 216.49882507]
[2.40620112 218.36259460]
[-12.54339981 217.13400269]
[-26.92317581 212.86528015]
[-40.12169266 205.73793030]
[-51.57774353 196.05500793]
[-60.80420685 184.22824097]
[-67.40877533 170.76051331]
[-71.11061859 156.22448730]
[-71.75232697 141.23822021]
[-69.30661774 126.43894196]
[-63.87747955 112.45593262]
[-55.69577026 99.88375854]
[-45.10937500 89.25698853]
[-32.56843567 81.02747345]
[-18.60619545 75.54515076]
[-3.81633949 73.04312134]
[11.17226219 73.62777710]
[25.72228622 77.27426147]
[39.21505737 83.82751465]
[51.07685852 93.00888824]
[60.80331802 104.42799377]
[67.98085785 117.59928894]
[72.30429077 131.96270752]
[73.58978271 146.90769958]
[79.04514313 132.93490601]
[84.50049591 118.96210480]
[89.95585632 104.98930359]
[76.25355530 111.09233093]
[61.79989243 107.08088684]
[53.20288849 94.78896332]
[54.39297867 79.83624268]
[64.82607269 69.05892181]
[79.73229218 67.38424683]
[92.29672241 75.57785034]
[96.77499390 89.89557648]
[103.65440369 76.56614685]
[110.53381348 63.23672104]
[117.41323090 49.90729141]
[124.29264069 36.57786179]
[114.53304291 27.68954659]
[107.19859314 16.72677422]
[102.71414185 4.33358145]
[101.33728790 -8.76340199]
[103.14359283 -21.79756355]
[108.02243805 -34.00717163]
[115.68379211 -44.67990112]
[125.67544556 -53.19438553]
[137.40969849 -59.05639267]
[150.19792175 -61.92751312]
[163.29101562 -61.64469147]
[175.92320251 -58.22947311]
[183.39094543 -71.23842621]
[190.85868835 -84.24737549]
[198.32643127 -97.25633240]
[184.14102173 -92.38046265]
[169.76545715 -96.66336823]
[160.56147766 -108.50764465]
[159.96194458 -123.49565887]
[168.19044495 -136.03724670]
[182.17797852 -141.45472717]
[196.70751953 -137.72749329]
[206.35992432 -126.24571991]
[207.53480530 -111.29068756]
[216.49549866 -123.32006073]
[225.45620728 -135.34944153]
[234.41690063 -147.37881470]
[233.32670593 -160.23083496]
[241.03773499 -170.06565857]
[252.98701477 -171.94750977]
[262.12582397 -183.84214783]
[264.39813232 -199.49931335]
[278.28775024 -204.87776184]
[287.42654419 -216.77238464]
[296.56536865 -228.66702271]
[305.70416260 -240.56166077]
[294.72332764 -250.79718018]
[284.76516724 -262.03015137]
[275.91986084 -274.15887451]
[268.26754761 -287.07345581]
[261.87753296 -300.65698242]
[256.80761719 -314.78643799]
[253.10379028 -329.33380127]
[250.79956055 -344.16738892]
[249.91581726 -359.15286255]
[250.46052551 -374.15444946]
[252.42880249 -389.03634644]
[255.80278015 -403.66375732]
[260.55191040 -417.90420532]
[266.63320923 -431.62872314]
[273.99157715 -444.71304321]
[282.56039429 -457.03863525]
[292.26202393 -468.49389648]
[303.00863647 -478.97506714]
[314.70291138 -488.38723755]
[327.23892212 -496.64514160]
[340.50314331 -503.67404175]
[354.37542725 -509.41027832]
[368.73016357 -513.80181885]
[383.43737793 -516.80902100]
[398.36383057 -518.40454102]
[413.37435913 -518.57397461]
[428.33303833 -517.31579590]
[443.10437012 -514.64135742]
[457.55456543 -510.57492065]
[471.55282593 -505.15332031]
[484.97232056 -498.42562866]
[497.69152832 -490.45275879]
[509.59527588 -481.30697632]
[520.57574463 -471.07104492]
[530.53350830 -459.83770752]
[539.37835693 -447.70867920]
[547.03015137 -434.79379272]
[553.41973877 -421.21002197]
[558.48907471 -407.08041382]
[562.19238281 -392.53289795]
[564.49609375 -377.69921875]
[565.37927246 -362.71374512]
[564.83404541 -347.71215820]
[562.86523438 -332.83035278]
[559.49072266 -318.20306396]
[554.74102783 -303.96276855]
[548.65924072 -290.23846436]
[541.30041504 -277.15444946]
[532.73114014 -264.82916260]
[523.02911377 -253.37425232]
[512.28210449 -242.89346313]
[500.58749390 -233.48171997]
[488.05117798 -225.22425842]
[474.78671265 -218.19584656]
[460.91421509 -212.46012878]
[446.55929565 -208.06907654]
[431.85198975 -205.06245422]
[416.92547607 -203.46746826]
[401.91494751 -203.29858398]
[386.95632935 -204.55731201]
[372.18508911 -207.23226929]
[357.73501587 -211.29922485]
[343.73696899 -216.72135925]
[330.31771851 -223.44953918]
[317.59878540 -231.42285156]
[308.45999146 -219.52822876]
[299.32119751 -207.63359070]
[290.18237305 -195.73895264]
[288.56375122 -180.93255615]
[274.02044678 -174.70333862]
[264.88165283 -162.80871582]
[263.52105713 -145.31254578]
[246.44627380 -138.41812134]
[237.48558044 -126.38874817]
[228.52488708 -114.35936737]
[219.56419373 -102.32999420]
[211.33537292 -89.78858948]
[203.86764526 -76.77964020]
[196.39990234 -63.77068710]
[188.93215942 -50.76173401]
[200.53187561 -38.49001694]
[207.79193115 -23.22415543]
[209.99533081 -6.44599009]
[206.91656494 10.21206093]
[198.84454346 25.12582207]
[186.55560303 36.83772659]
[171.23880005 44.19925690]
[154.38092041 46.48357391]
[137.62207031 43.45727539]
[130.74266052 56.78670502]
[123.86324310 70.11613464]
[116.98383331 83.44556427]
[110.10442352 96.77499390]
[103.92864990 110.44466400]
[98.47329712 124.41745758]
[93.01793671 138.39025879]
[87.56258392 152.36305237]
[85.11685181 167.16232300]
[97.89852142 175.76087952]
[103.10539246 190.06968689]
[98.93759918 204.52975464]
[87.19487762 213.65370178]
[87.86466217 228.63873291]
[88.53444672 243.62377930]
[89.20423126 258.60882568]
[89.87401581 273.59384155]
[90.54380035 288.57888794]
[98.88959503 302.01980591]
[91.72831726 315.07986450]
[92.39810181 330.06491089]
[95.90757751 338.49826050]
[92.96462250 345.27770996]
[93.41122437 360.27105713]
[99.92647552 375.92315674]
[86.68967438 386.51669312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 205]
[4 204]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[15 193]
[44 192]
[45 191]
[46 190]
[47 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 184]
[71 175]
[72 174]
[73 173]
[74 172]
[83 171]
[84 170]
[85 169]
[86 168]
[89 166]
[90 165]
[92 163]
[93 162]
[94 161]
[95 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
