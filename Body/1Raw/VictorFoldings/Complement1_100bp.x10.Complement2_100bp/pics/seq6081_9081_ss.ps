%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[98.22424316 475.25939941]
[87.29570770 485.55023193]
[75.45153809 494.77249146]
[62.79581070 502.84512329]
[49.43975830 509.69714355]
[35.50075150 515.26837158]
[21.10128784 519.50982666]
[6.36791897 522.38421631]
[-8.56987858 523.86639404]
[-23.58082771 523.94317627]
[-38.53300858 522.61395264]
[-53.29501343 519.89044189]
[-67.73712158 515.79650879]
[-81.73239899 510.36819458]
[-95.15785980 503.65319824]
[-107.89552307 495.71047974]
[-119.83343506 486.60989380]
[-130.86668396 476.43139648]
[-140.89831543 465.26443481]
[-149.84016418 453.20718384]
[-157.61364746 440.36553955]
[-164.15045166 426.85241699]
[-169.39314270 412.78652954]
[-173.29560852 398.29153442]
[-175.82359314 383.49478149]
[-176.95486450 368.52633667]
[-176.67947388 353.51770020]
[-174.99984741 338.60083008]
[-171.93075562 323.90676880]
[-167.49916077 309.56469727]
[-161.74400330 295.70062256]
[-154.71586609 282.43640137]
[-146.47653198 269.88858032]
[-137.09837341 258.16744995]
[-126.66384125 247.37602234]
[-115.26461792 237.60913086]
[-103.00088501 228.95260620]
[-89.98042297 221.48252869]
[-76.31765747 215.26454163]
[-62.13265991 210.35330200]
[-47.55009460 206.79194641]
[-32.69810867 204.61180115]
[-17.70723343 203.83201599]
[-2.70920587 204.45942688]
[12.16416550 206.48854065]
[26.78216934 209.90151978]
[41.01634216 214.66836548]
[47.09017563 200.95309448]
[45.16912079 186.18289185]
[57.83172989 176.69769287]
[63.90556335 162.98243713]
[69.97939301 149.26716614]
[76.05323029 135.55189514]
[82.12706757 121.83663177]
[88.20089722 108.12136841]
[86.90288544 94.19991302]
[98.08383179 85.80480194]
[103.53919220 71.83200073]
[108.36518860 57.62954712]
[113.19118500 43.42708969]
[118.01718903 29.22463417]
[122.84318542 15.02217960]
[108.93554688 9.39181423]
[95.37201691 2.97665930]
[82.19684601 -4.20236063]
[69.45301056 -12.12182903]
[57.18206787 -20.75591469]
[45.42404938 -30.07645226]
[34.21730804 -40.05304337]
[23.59839630 -50.65314484]
[13.60195160 -61.84218216]
[4.26058006 -73.58365631]
[-4.39524746 -85.83927155]
[-12.33729839 -98.56904602]
[-19.53966713 -111.73146820]
[-25.97885895 -125.28359985]
[-31.63387489 -139.18122864]
[-36.48626328 -153.37904358]
[-40.52020264 -167.83070374]
[-43.72253036 -182.48910522]
[-46.08280563 -197.30641174]
[-47.59332657 -212.23429871]
[-48.24916458 -227.22406006]
[-48.04818344 -242.22683716]
[-46.99103928 -257.19366455]
[-45.08117676 -272.07571411]
[-42.32482910 -286.82449341]
[-38.73098373 -301.39184570]
[-34.31136703 -315.73025513]
[-29.08038902 -329.79299927]
[-23.05511856 -343.53414917]
[-16.25520515 -356.90893555]
[-8.70283031 -369.87368774]
[-0.42262846 -382.38613892]
[8.55839252 -394.40548706]
[18.21093941 -405.89251709]
[28.50352478 -416.80975342]
[39.40258026 -427.12161255]
[50.87255096 -436.79440308]
[62.87602234 -445.79663086]
[75.37384796 -454.09890747]
[88.32525635 -461.67416382]
[101.68801117 -468.49768066]
[115.41851807 -474.54718018]
[129.47198486 -479.80297852]
[143.80259705 -484.24789429]
[158.36357117 -487.86746216]
[173.10745239 -490.64984131]
[187.98611450 -492.58596802]
[202.95104980 -493.66952515]
[217.95344543 -493.89697266]
[232.94435120 -493.26760864]
[247.87487793 -491.78344727]
[262.69631958 -489.44931030]
[277.36035156 -486.27288818]
[291.81912231 -482.26446533]
[306.02548218 -477.43713379]
[319.93307495 -471.80667114]
[333.49655151 -465.39138794]
[346.67166138 -458.21228027]
[359.41543579 -450.29269409]
[371.68630981 -441.65850830]
[383.44424438 -432.33789062]
[394.65090942 -422.36120605]
[405.26974487 -411.76101685]
[415.26611328 -400.57192993]
[424.60739136 -388.83035278]
[433.26312256 -376.57467651]
[441.20504761 -363.84484863]
[448.40731812 -350.68237305]
[454.84640503 -337.13018799]
[460.50131226 -323.23251343]
[465.35360718 -309.03466797]
[469.38742065 -294.58294678]
[472.58963013 -279.92453003]
[474.94979858 -265.10720825]
[476.46020508 -250.17932129]
[477.11593628 -235.18954468]
[476.91482544 -220.18678284]
[475.85757446 -205.21995544]
[473.94757080 -190.33790588]
[471.19113159 -175.58917236]
[467.59716797 -161.02185059]
[463.17742920 -146.68345642]
[457.94635010 -132.62077332]
[451.92095947 -118.87965393]
[445.12094116 -105.50493622]
[437.56848145 -92.54022980]
[429.28817749 -80.02783203]
[420.30706787 -68.00856018]
[410.65441895 -56.52160645]
[400.36175537 -45.60445023]
[389.46261597 -35.29269409]
[377.99255371 -25.61997604]
[365.98901367 -16.61784554]
[353.49111938 -8.31566811]
[340.53967285 -0.74052131]
[327.17684937 6.08288527]
[313.44628906 12.13229465]
[299.39279175 17.38797569]
[285.06216431 21.83278465]
[270.50112915 25.45222282]
[255.75724792 28.23448563]
[240.87855530 30.17049789]
[225.91362000 31.25394249]
[210.91122437 31.48128891]
[195.92031860 30.85179329]
[180.98980713 29.36750793]
[166.16838074 27.03327751]
[151.50437927 23.85671234]
[137.04563904 19.84817696]
[132.21963501 34.05063248]
[127.39364624 48.25308990]
[122.56764221 62.45554352]
[117.74164581 76.65799713]
[131.64042664 71.01670837]
[145.51042175 76.72837067]
[151.40628052 90.52108002]
[145.95059204 104.49374390]
[132.26861572 110.64219666]
[118.19800568 105.44431305]
[111.79910278 91.87863159]
[113.09711456 105.80008698]
[101.91616821 114.19519806]
[95.84233093 127.91046906]
[89.76849365 141.62573242]
[83.69466400 155.34100342]
[77.62082672 169.05627441]
[71.54699707 182.77153015]
[73.03360748 198.52273560]
[60.80544281 207.02693176]
[54.73160934 220.74220276]
[67.82781982 228.07867432]
[80.17947388 236.60925293]
[91.67803192 246.25900269]
[102.22243500 256.94311523]
[111.72002411 268.56765747]
[120.08731842 281.03051758]
[127.25080109 294.22213745]
[133.14750671 308.02661133]
[137.72561646 322.32260132]
[140.94488525 336.98449707]
[142.77703857 351.88342285]
[143.20597839 366.88842773]
[142.22792053 381.86767578]
[139.85147095 396.68951416]
[136.09750366 411.22369385]
[130.99900818 425.34246826]
[124.60080719 438.92175293]
[116.95911407 451.84225464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 192]
[48 191]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[57 182]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
