%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[56.23291779 759.03790283]
[51.57507706 744.65747070]
[51.36453629 729.54302979]
[55.62001419 715.03845215]
[63.96311569 702.43353271]
[75.65197754 692.84906006]
[89.64723969 687.13732910]
[88.30900574 672.19714355]
[86.97076416 657.25695801]
[85.63253021 642.31677246]
[84.29429626 627.37658691]
[75.45238495 615.39038086]
[81.92763519 600.95489502]
[80.58940125 586.01477051]
[79.25116730 571.07458496]
[77.80175018 556.14477539]
[76.24122620 541.22613525]
[74.68070221 526.30755615]
[65.66130829 514.45428467]
[71.92092133 499.92404175]
[70.36040497 485.00543213]
[68.79988098 470.08682251]
[64.97756958 463.76135254]
[67.32888031 454.93472290]
[58.48696136 442.94848633]
[64.96221924 428.51306152]
[63.62398529 413.57287598]
[56.94317627 427.00296021]
[45.42950821 436.61727905]
[31.02322769 440.79568481]
[16.15205002 438.83404541]
[3.32202840 431.06292725]
[-5.30475187 418.79187012]
[-8.27452755 404.08877563]
[-5.08683920 389.43142700]
[3.72113156 377.28976440]
[16.66508675 369.70993042]
[31.56374359 367.96920776]
[45.90641785 372.36099243]
[57.27611160 382.14517212]
[63.75723267 395.67453003]
[65.31775665 380.75595093]
[66.87828064 365.83734131]
[68.43879700 350.91873169]
[69.99932098 336.00012207]
[71.55984497 321.08151245]
[73.12036896 306.16290283]
[58.56674957 300.71203613]
[45.90713120 291.67874146]
[36.00496292 279.67208862]
[29.53745079 265.50411987]
[26.94923019 250.13507080]
[28.42183113 234.60813904]
[33.86092758 219.97879028]
[42.90238571 207.24296570]
[54.93661499 197.26925659]
[69.14967346 190.73974609]
[84.57831573 188.10325623]
[85.91654968 173.16307068]
[87.25478363 158.22288513]
[72.64601135 152.95379639]
[59.89439011 144.08950806]
[49.86565399 132.23184204]
[43.24069595 118.18586731]
[40.46929932 102.90519714]
[41.73962402 87.42728424]
[46.96542358 72.80297089]
[55.79190445 60.02515030]
[67.61980438 49.96133804]
[81.64610291 43.29480743]
[96.91849518 40.47816467]
[98.03414154 25.51971245]
[99.14979553 10.56125927]
[100.26544189 -4.39719439]
[89.11394501 -12.49872971]
[83.46655273 -24.95366669]
[84.70095825 -38.46461868]
[92.38823700 -49.51223755]
[104.43265533 -55.27193832]
[105.77088928 -70.21212006]
[99.29563141 -84.64755249]
[108.13755035 -96.63378143]
[100.48125458 -107.01376343]
[101.90344238 -119.42992401]
[111.09983826 -127.28822327]
[112.66036224 -142.20683289]
[114.22088623 -157.12542725]
[106.33454132 -173.76535034]
[117.18875885 -187.55494690]
[118.52699280 -202.49513245]
[119.86523438 -217.43531799]
[117.51391602 -226.26193237]
[121.33622742 -232.58741760]
[115.07661438 -247.11764526]
[124.09600830 -258.97091675]
[125.65653229 -273.88952637]
[119.39691925 -288.41973877]
[128.41630554 -300.27301025]
[114.37783813 -305.82495117]
[102.35854340 -314.95944214]
[93.25033569 -326.99868774]
[87.72910309 -341.04925537]
[86.20455933 -356.06851196]
[88.78983307 -370.94195557]
[95.29308319 -384.56582642]
[105.23172760 -395.92919922]
[117.86824799 -404.18878174]
[132.26492310 -408.73171997]
[147.35343933 -409.22082520]
[162.01412964 -405.61987305]
[175.15905762 -398.19604492]
[185.81278992 -387.50021362]
[193.18475342 -374.32611084]
[196.72789001 -359.65136719]
[196.17929077 -344.56488037]
[191.57965088 -330.18621826]
[183.27029419 -317.58236694]
[171.86784363 -307.68859863]
[158.21842957 -301.23910522]
[143.33491516 -298.71249390]
[149.70614624 -285.24932861]
[140.57513428 -272.32897949]
[139.01461792 -257.41040039]
[145.38584900 -243.94721985]
[136.25483704 -231.02688599]
[134.80541992 -216.09707642]
[133.46717834 -201.15689087]
[132.12895203 -186.21670532]
[139.64205933 -176.73622131]
[138.64942932 -164.27835083]
[129.13949585 -155.56491089]
[127.57897186 -140.64630127]
[126.01844788 -125.72769928]
[134.01753235 -110.10778809]
[123.07773590 -95.29554749]
[129.64871216 -81.92874146]
[120.71107483 -68.87388611]
[119.37284088 -53.93370438]
[132.07911682 -43.54003906]
[136.12701416 -27.45973587]
[129.72917175 -11.98172283]
[115.22389221 -3.28154564]
[114.10824585 11.67690754]
[112.99259949 26.63536072]
[111.87694550 41.59381485]
[125.52823639 46.14228439]
[137.69161987 53.82981873]
[147.65818787 64.20835114]
[154.84701538 76.67298126]
[158.83911133 90.49721527]
[159.40180969 104.87530518]
[156.50231934 118.96924591]
[150.30961609 131.95758057]
[141.18464661 143.08328247]
[129.65925598 151.69789124]
[116.40519714 157.29933167]
[102.19496918 159.56111145]
[100.85673523 174.50129700]
[99.51850128 189.44148254]
[113.19960785 194.25392151]
[125.32009125 202.20072937]
[135.17553711 212.81457520]
[142.19442749 225.47337341]
[145.97137451 239.43656921]
[146.29045105 253.88858032]
[143.13757324 267.98638916]
[136.70109558 280.90875244]
[127.36044312 291.90399170]
[115.66389465 300.33374023]
[102.29627991 305.70999146]
[88.03897095 307.72344971]
[86.47844696 322.64202881]
[84.91793060 337.56063843]
[83.35740662 352.47924805]
[81.79688263 367.39785767]
[80.23635864 382.31646729]
[78.67583466 397.23507690]
[78.56417084 412.23464966]
[79.90240479 427.17483521]
[88.84004211 440.22970581]
[82.26906586 453.59649658]
[83.71848297 468.52630615]
[85.27900696 483.44491577]
[86.83953094 498.36352539]
[95.97054291 511.28384399]
[89.59931183 524.74700928]
[91.15982819 539.66558838]
[92.72035217 554.58422852]
[96.72557068 562.79376221]
[94.19135284 569.73632812]
[95.52958679 584.67651367]
[96.86782074 599.61669922]
[105.80545807 612.67156982]
[99.23448181 626.03833008]
[100.57271576 640.97851562]
[101.91094971 655.91870117]
[103.24918365 670.85888672]
[104.58741760 685.79907227]
[119.37498474 688.93267822]
[132.58111572 696.28723145]
[143.03155518 707.20880127]
[149.79702759 720.72613525]
[152.27598572 735.63745117]
[150.24797058 750.61669922]
[143.89332581 764.33203125]
[133.77711487 775.56384277]
[120.79884338 783.31341553]
[106.11254120 786.89166260]
[91.02409363 785.98040771]
[76.87517548 780.66070557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[13 192]
[14 191]
[15 190]
[16 188]
[17 187]
[18 186]
[20 184]
[21 183]
[22 182]
[24 181]
[26 179]
[27 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[58 159]
[59 158]
[60 157]
[71 145]
[72 144]
[73 143]
[74 142]
[79 138]
[80 137]
[82 135]
[85 133]
[86 132]
[87 131]
[89 128]
[90 127]
[91 126]
[93 125]
[95 123]
[96 122]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
