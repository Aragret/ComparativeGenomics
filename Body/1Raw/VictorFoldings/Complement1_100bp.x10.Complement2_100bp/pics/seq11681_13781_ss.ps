%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[60.99567795 798.40093994]
[46.52569962 794.41851807]
[32.41786957 789.29901123]
[18.76138306 783.07482910]
[5.64258432 775.78533936]
[-6.85558510 767.47650146]
[-18.65410614 758.20104980]
[-29.67838478 748.01745605]
[-39.85872269 736.99017334]
[-49.13074875 725.18890381]
[-57.43585205 712.68829346]
[-64.72151184 699.56738281]
[-70.94168091 685.90905762]
[-76.05701447 671.79968262]
[-80.03518677 657.32855225]
[-82.85103607 642.58709717]
[-84.48676300 627.66845703]
[-84.93202972 612.66705322]
[-84.18402100 597.67773438]
[-82.24745178 582.79522705]
[-79.13458252 568.11358643]
[-74.86508942 553.72570801]
[-69.46596527 539.72247314]
[-62.97134399 526.19250488]
[-55.42228699 513.22131348]
[-46.86652374 500.89089966]
[-37.35815048 489.27923584]
[-26.95727539 478.45971680]
[-15.72966385 468.50076294]
[-3.74629807 459.46533203]
[8.91705704 451.41055298]
[22.18033791 444.38735962]
[35.95969009 438.44012451]
[50.16799545 433.60647583]
[64.71542358 429.91696167]
[79.50999451 427.39492798]
[78.17176056 412.45474243]
[76.83352661 397.51455688]
[75.49529266 382.57437134]
[74.15705872 367.63418579]
[65.92667389 380.17453003]
[52.26663589 386.37158203]
[37.40966415 384.30511475]
[25.95934868 374.61541748]
[21.46369362 360.30496216]
[25.31572914 345.80798340]
[36.32186127 335.61657715]
[51.07171249 332.88861084]
[64.99488831 338.46939087]
[73.77722931 350.62988281]
[74.44701385 335.64486694]
[75.11679840 320.65982056]
[75.78658295 305.67477417]
[64.45301819 301.06948853]
[55.06007004 293.19360352]
[48.52323532 282.79522705]
[45.48563766 270.86920166]
[46.25474930 258.56195068]
[50.77136612 247.06138611]
[58.61385727 237.48208618]
[69.03748322 230.75741577]
[81.04509735 227.54849243]
[82.38333130 212.60830688]
[83.72156525 197.66812134]
[85.05979919 182.72793579]
[86.39803314 167.78775024]
[79.82705688 154.42094421]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[91.18792725 81.02761841]
[92.09152222 75.41687012]
[95.22563934 71.81320953]
[97.00811005 56.91949463]
[98.79057312 42.02577591]
[92.74798584 27.40395355]
[101.94285583 15.68629265]
[103.72532654 0.79257488]
[105.50778961 -14.10114288]
[107.29025269 -28.99485970]
[109.07272339 -43.88857651]
[103.03012848 -58.51039886]
[112.22500610 -70.22805786]
[114.00746918 -85.12178040]
[99.45235443 -88.83708191]
[85.50672150 -94.42048645]
[72.40920258 -101.77644348]
[60.38391876 -110.77908325]
[49.63663864 -121.27436829]
[40.35125351 -133.08270264]
[32.68665695 -146.00202942]
[26.77399635 -159.81127930]
[22.71444511 -174.27415466]
[20.57746887 -189.14320374]
[20.39963341 -204.16397095]
[22.18398285 -219.07943726]
[25.89998245 -233.63436890]
[31.48404884 -247.57974243]
[38.84062958 -260.67691040]
[47.84384537 -272.70175171]
[58.33963394 -283.44854736]
[70.14840698 -292.73336792]
[83.06809998 -300.39733887]
[96.87763214 -306.30935669]
[111.34071350 -310.36822510]
[126.20985413 -312.50448608]
[141.23062134 -312.68161011]
[156.14601135 -310.89654541]
[170.70077515 -307.17984009]
[184.64587402 -301.59512329]
[197.74269104 -294.23791504]
[209.76712036 -285.23413086]
[220.51339722 -274.73782349]
[229.79765320 -262.92861938]
[237.46102905 -250.00856018]
[243.37237549 -236.19874573]
[247.43054199 -221.73547363]
[249.56610107 -206.86622620]
[249.74250793 -191.84544373]
[247.95674133 -176.93014526]
[244.23936462 -162.37556458]
[238.65396118 -148.43072510]
[231.29614258 -135.33425903]
[222.29177856 -123.31026459]
[211.79496765 -112.56447601]
[199.98530579 -103.28078461]
[187.06488037 -95.61802673]
[173.25479126 -89.70734406]
[158.79132080 -85.64985657]
[143.92198181 -83.51499939]
[128.90118408 -83.33930969]
[127.11872101 -68.44559479]
[133.28880310 -54.88907242]
[123.96643829 -42.10610962]
[122.18397522 -27.21239471]
[120.40150452 -12.31867695]
[118.61904144 2.57504082]
[116.83657074 17.46875763]
[123.00666046 31.02528191]
[113.68428802 43.80824280]
[111.90182495 58.70195770]
[110.11936188 73.59567261]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[110.18013763 157.13975525]
[101.33821869 169.12599182]
[99.99998474 184.06617737]
[98.66175079 199.00634766]
[97.32351685 213.94653320]
[95.98528290 228.88671875]
[111.65577698 237.66166687]
[121.87751007 252.36470032]
[124.62811279 270.00561523]
[119.39896393 287.02133179]
[107.28844452 299.99551392]
[90.77162170 306.34457397]
[90.10183716 321.32958984]
[89.43205261 336.31463623]
[88.76226807 351.29968262]
[89.09724426 366.29592896]
[90.43547821 381.23611450]
[91.77371216 396.17630005]
[93.11194611 411.11648560]
[94.45018005 426.05667114]
[109.45745850 425.90930176]
[124.42900085 426.95471191]
[139.27015686 429.18630981]
[153.88710022 432.58999634]
[168.18740845 437.14425659]
[182.08067322 442.82028198]
[195.47904968 449.58221436]
[208.29783630 457.38726807]
[220.45597839 466.18609619]
[231.87661743 475.92309570]
[242.48753357 486.53671265]
[252.22166443 497.95980835]
[261.01742554 510.12014771]
[268.81924438 522.94091797]
[275.57778931 536.34100342]
[281.25033569 550.23565674]
[285.80099487 564.53717041]
[289.20098877 579.15496826]
[291.42886353 593.99664307]
[292.47048950 608.96844482]
[292.31930542 623.97570801]
[290.97628784 638.92352295]
[288.44989014 653.71734619]
[284.75610352 668.26367188]
[279.91827393 682.47052002]
[273.96697998 696.24816895]
[266.93984985 709.50933838]
[258.88134766 722.17034912]
[249.84239197 734.15106201]
[239.88012695 745.37573242]
[229.05754089 755.77343750]
[217.44306946 765.27838135]
[205.11013794 773.83050537]
[192.13673401 781.37573242]
[178.60484314 787.86639404]
[164.60006714 793.26135254]
[150.21090698 797.52661133]
[135.52836609 800.63519287]
[120.64526367 802.56732178]
[105.65570068 803.31097412]
[90.65443420 802.86126709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[50 164]
[51 163]
[52 162]
[53 161]
[62 155]
[63 154]
[64 153]
[65 152]
[66 151]
[68 149]
[69 148]
[70 147]
[72 145]
[75 144]
[76 143]
[77 142]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[85 134]
[86 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
