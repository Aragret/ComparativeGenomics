%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[-1.80809760 593.84240723]
[-5.57708788 608.42810059]
[-12.49766636 621.80920410]
[-22.22270012 633.31445312]
[-34.26438904 642.36682129]
[-48.01871872 648.51226807]
[-62.79578781 651.44244385]
[-77.85437775 651.01043701]
[-92.43915558 647.23791504]
[-105.81855774 640.31408691]
[-117.32147980 630.58630371]
[-126.37094116 618.54241943]
[-132.51301575 604.78656006]
[-135.43963623 590.00878906]
[-135.00398254 574.95031738]
[-131.22792053 560.36645508]
[-124.30086517 546.98870850]
[-114.57025909 535.48815918]
[-102.52418518 526.44165039]
[-88.76687622 520.30285645]
[-73.98838806 517.37982178]
[-58.93001175 517.81915283]
[-55.17371368 503.29708862]
[-51.41741180 488.77502441]
[-47.66110992 474.25296021]
[-43.90481186 459.73089600]
[-48.20841599 445.47158813]
[-37.26180649 434.04870605]
[-33.50550461 419.52664185]
[-34.87383270 412.26376343]
[-29.58366585 404.81713867]
[-25.61156845 390.35263062]
[-21.63947296 375.88809204]
[-17.66737747 361.42358398]
[-30.17978668 369.69641113]
[-45.16982651 369.14987183]
[-57.04658508 359.98785400]
[-61.38032150 345.62753296]
[-56.55466080 331.42498779]
[-44.36945724 322.67736816]
[-29.36948586 322.64733887]
[-17.14937019 331.34613037]
[-12.26688194 345.53042603]
[-6.60409546 331.64041138]
[-0.94130874 317.75036621]
[4.72147799 303.86035156]
[10.38426399 289.97033691]
[8.02429867 275.26388550]
[20.39888191 265.40585327]
[26.06166840 251.51583862]
[31.72445488 237.62580872]
[23.86515045 228.37342834]
[20.66654396 216.58776855]
[22.79487038 204.48936462]
[29.90666771 194.38482666]
[40.70249557 188.22702026]
[53.16400909 187.23783875]
[59.23784256 173.52256775]
[57.31679153 158.75236511]
[69.97939301 149.26716614]
[76.05323029 135.55189514]
[82.12706757 121.83663177]
[88.20089722 108.12136841]
[86.90288544 94.19991302]
[98.08383179 85.80480194]
[104.15766907 72.08953094]
[110.23150635 58.37426758]
[116.30533600 44.65900040]
[121.44729614 30.56785965]
[125.63430786 16.16407585]
[129.82131958 1.76029468]
[132.70658875 -12.95959663]
[134.26712036 -27.87820053]
[135.82763672 -42.79680634]
[133.60800171 -51.65745163]
[137.52406311 -57.92532349]
[139.30653381 -72.81903839]
[141.08900452 -87.71276093]
[142.87145996 -102.60647583]
[144.65393066 -117.50019073]
[146.32546997 -132.40676880]
[147.88598633 -147.32537842]
[148.77880859 -162.29878235]
[141.24783325 -176.21261597]
[149.17376709 -188.82328796]
[149.39709473 -203.82162476]
[149.62042236 -218.81996155]
[149.84375000 -233.81829834]
[135.06208801 -236.57699585]
[120.95932007 -241.79428101]
[107.94123077 -249.32005310]
[96.38235474 -258.93777466]
[86.61528015 -270.37072754]
[78.92102051 -283.28994751]
[73.52095032 -297.32373047]
[70.57044983 -312.06832886]
[70.15439606 -327.09945679]
[72.28477478 -341.98464966]
[76.90028381 -356.29568481]
[83.86812592 -369.62072754]
[92.98782349 -381.57644653]
[103.99697876 -391.81881714]
[116.57884216 -400.05319214]
[130.37141418 -406.04260254]
[144.97784424 -409.61474609]
[159.97787476 -410.66683960]
[174.93994141 -409.16860962]
[189.43354797 -405.16314697]
[203.04167175 -398.76574707]
[215.37278748 -390.16043091]
[226.07211304 -379.59478760]
[234.83180237 -367.37286377]
[241.39981079 -353.84625244]
[245.58718872 -339.40414429]
[247.27343750 -324.46212769]
[246.41003418 -309.45004272]
[243.02183533 -294.79983521]
[237.20632935 -280.93304443]
[229.13081360 -268.24865723]
[219.02767944 -257.11157227]
[207.18757629 -247.84226990]
[193.95117188 -240.70742798]
[179.69932556 -235.91233826]
[164.84208679 -233.59497070]
[164.61875916 -218.59663391]
[164.39543152 -203.59829712]
[164.17210388 -188.59996033]
[171.71905518 -175.75889587]
[163.77714539 -162.07545471]
[175.26678467 -171.71849060]
[190.22120667 -170.55018616]
[200.07386780 -159.23977661]
[199.18069458 -144.26638794]
[188.05334473 -134.20745850]
[173.06607056 -134.82519531]
[162.80459595 -145.76484680]
[161.24407959 -130.84623718]
[163.67465210 -123.86669159]
[159.54765320 -115.71772766]
[157.76518250 -100.82401276]
[155.98271179 -85.93029022]
[154.20025635 -71.03657532]
[152.41778564 -56.14285660]
[150.74624634 -41.23628235]
[149.18571472 -26.31767845]
[147.62519836 -11.39907360]
[157.02165222 -23.09123993]
[170.52310181 -29.62657738]
[185.52264404 -29.74321556]
[199.12411499 -23.41863251]
[208.70124817 -11.87400723]
[212.40487671 2.66157460]
[209.51988220 17.38151932]
[200.60330200 29.44363785]
[187.37680054 36.51892090]
[172.39421082 37.24124527]
[158.54841614 31.47114182]
[148.51283264 20.32272339]
[144.22509766 5.94730616]
[140.03808594 20.35108757]
[135.85107422 34.75487137]
[148.07865906 26.06658554]
[163.05706787 25.26193428]
[176.14506531 32.59024429]
[183.28721619 45.78076553]
[182.27043152 60.74626160]
[173.40977478 72.84951782]
[159.45082092 78.34020996]
[144.71890259 75.51698303]
[133.77886963 65.25463867]
[130.02059937 50.73283386]
[123.94676971 64.44809723]
[117.87293243 78.16336823]
[111.79910278 91.87863159]
[113.09711456 105.80008698]
[101.91616821 114.19519806]
[95.84233093 127.91046906]
[89.76849365 141.62573242]
[83.69466400 155.34100342]
[85.18127441 171.09220886]
[72.95310974 179.59640503]
[66.87927246 193.31166077]
[76.43988037 208.71791077]
[74.85249329 226.62210083]
[62.94072342 239.87202454]
[45.61448288 243.28860474]
[39.95169449 257.17861938]
[34.28890991 271.06866455]
[36.24383545 286.76861572]
[24.27429199 295.63311768]
[18.61150551 309.52313232]
[12.94871807 323.41317749]
[7.28593159 337.30319214]
[1.62314498 351.19320679]
[-3.20285273 365.39569092]
[-7.17494869 379.86019897]
[-11.14704514 394.32473755]
[-15.11914158 408.78924561]
[-18.98344612 423.28292847]
[-22.73974800 437.80499268]
[-18.70481873 453.10302734]
[-29.38275146 463.48721313]
[-33.13905334 478.00927734]
[-36.89535141 492.53134155]
[-40.65165329 507.05337524]
[-44.40795517 521.57543945]
[-31.02519608 528.49279785]
[-19.51756096 538.21502686]
[-10.46226692 550.25451660]
[-4.31352282 564.00738525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 206]
[23 205]
[24 204]
[25 203]
[26 202]
[28 200]
[29 199]
[31 198]
[32 197]
[33 196]
[34 195]
[43 194]
[44 193]
[45 192]
[46 191]
[47 190]
[49 188]
[50 187]
[51 186]
[57 182]
[58 181]
[60 179]
[61 178]
[62 177]
[63 176]
[65 174]
[66 173]
[67 172]
[68 171]
[69 161]
[70 160]
[71 159]
[72 146]
[73 145]
[74 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 137]
[82 136]
[83 129]
[85 127]
[86 126]
[87 125]
[88 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
