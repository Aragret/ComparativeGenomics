%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[197.60072327 785.66644287]
[183.57498169 780.34051514]
[169.82073975 774.34820557]
[156.36959839 767.70336914]
[143.25251770 760.42126465]
[130.49966431 752.51861572]
[118.14036560 744.01367188]
[106.20304871 734.92590332]
[94.71517181 725.27624512]
[83.70316315 715.08691406]
[73.19234467 704.38134766]
[63.20688629 693.18414307]
[53.76976776 681.52105713]
[44.90268326 669.41888428]
[36.62603760 656.90551758]
[28.95885658 644.00976562]
[21.91878319 630.76116943]
[15.52200794 617.19030762]
[9.78324127 603.32836914]
[4.71568489 589.20727539]
[0.33099356 574.85937500]
[-3.36074758 560.31781006]
[-6.35104752 545.61590576]
[-8.63302803 530.78759766]
[-10.20144176 515.86688232]
[-11.05267906 500.88815308]
[-11.18478489 485.88583374]
[-10.59745216 470.89443970]
[-9.29203510 455.94845581]
[-7.27153349 441.08224487]
[-4.54059601 426.32998657]
[-1.10550320 411.72561646]
[3.02584338 397.30276489]
[7.84394217 383.09457397]
[13.33771038 369.13372803]
[19.49451256 355.45233154]
[26.30018997 342.08184814]
[33.73908615 329.05303955]
[41.79409027 316.39587402]
[50.44668198 304.13946533]
[59.67695236 292.31201172]
[69.46367645 280.94067383]
[79.78433990 270.05166626]
[90.61521149 259.66998291]
[101.93137360 249.81953430]
[113.70680237 240.52296448]
[125.91441345 231.80166626]
[138.52612305 223.67567444]
[151.51293945 216.16371155]
[144.63352966 202.83427429]
[137.75411987 189.50485229]
[130.87469482 176.17541504]
[123.99528503 162.84599304]
[117.11587524 149.51655579]
[110.23646545 136.18713379]
[97.34887695 137.51353455]
[84.77593231 134.38780212]
[74.00978088 127.18091583]
[66.32817078 116.74818420]
[62.64274979 104.32775879]
[63.39090729 91.39371490]
[68.48385620 79.48107147]
[77.31715393 70.00363159]
[70.83766174 56.47528458]
[64.35816193 42.94693756]
[57.87866592 29.41859245]
[43.62621689 34.15893555]
[28.89201736 37.07554626]
[13.90844917 38.12242126]
[-1.08817327 37.28305054]
[-15.86133289 34.57067871]
[-30.17803574 30.02807426]
[-43.81248856 23.72688484]
[-56.54965210 15.76649189]
[-68.18864441 6.27243853]
[-78.54590607 -4.60553885]
[-87.45808411 -16.69587898]
[-94.78462219 -29.80789948]
[-100.40996552 -43.73480606]
[-104.24539948 -58.25695038]
[-106.23043823 -73.14529419]
[-106.33376312 -88.16503906]
[-104.55374908 -103.07928467]
[-100.91847992 -117.65282440]
[-95.48527527 -131.65580750]
[-88.33982849 -144.86738586]
[-79.59483337 -157.07919312]
[-69.38821411 -168.09863281]
[-57.88093948 -177.75192261]
[-45.25450134 -185.88681030]
[-31.70803261 -192.37498474]
[-17.45518112 -197.11412048]
[-2.72073650 -200.02949524]
[12.26291847 -201.07510376]
[27.25947189 -200.23448181]
[42.03240204 -197.52085876]
[56.34872437 -192.97705078]
[69.98264313 -186.67471313]
[82.71913910 -178.71324158]
[94.35733795 -169.21821594]
[104.71367645 -158.33937073]
[113.62483978 -146.24827576]
[120.95027161 -133.13563538]
[126.57444763 -119.20825958]
[130.40866089 -104.68579102]
[132.39244080 -89.79727936]
[132.49450684 -74.77752686]
[130.71324158 -59.86343002]
[127.07673645 -45.29019928]
[121.64234924 -31.28767395]
[114.49578857 -18.07669640]
[105.74977112 -5.86562252]
[95.54222107 5.15296268]
[84.03413391 14.80527878]
[71.40701294 22.93909645]
[77.88651276 36.46744156]
[84.36600494 49.99578857]
[90.84549713 63.52413177]
[107.68556976 63.18661118]
[122.98394775 70.23371124]
[133.67182922 83.25181580]
[137.60527039 99.62954712]
[133.99523926 116.08158875]
[123.56589508 129.30772400]
[130.44531250 142.63714600]
[137.32472229 155.96658325]
[144.20413208 169.29600525]
[151.08354187 182.62544250]
[157.96295166 195.95486450]
[164.84236145 209.28430176]
[178.48890686 203.05061340]
[192.41862488 197.47836304]
[206.59948730 192.58039856]
[220.99887085 188.36796570]
[235.58366394 184.85073853]
[250.32031250 182.03683472]
[265.17492676 179.93272400]
[280.11334229 178.54322815]
[295.10119629 177.87155151]
[310.10400391 177.91923523]
[325.08728027 178.68617249]
[340.01657104 180.17060852]
[354.85751343 182.36911011]
[369.57598877 185.27664185]
[384.13812256 188.88648987]
[398.51043701 193.19038391]
[412.65988159 198.17840576]
[426.55389404 203.83908081]
[440.16052246 210.15939331]
[453.44848633 217.12480164]
[466.38720703 224.71929932]
[478.94692993 232.92539978]
[491.09878540 241.72424316]
[502.81478882 251.09559631]
[514.06799316 261.01788330]
[524.83258057 271.46829224]
[535.08367920 282.42279053]
[544.79785156 293.85620117]
[553.95263672 305.74218750]
[562.52703857 318.05343628]
[570.50128174 330.76162720]
[577.85705566 343.83752441]
[584.57751465 357.25103760]
[590.64709473 370.97137451]
[596.05187988 384.96691895]
[600.77941895 399.20547485]
[604.81884766 413.65435791]
[608.16088867 428.28027344]
[610.79785156 443.04962158]
[612.72369385 457.92840576]
[613.93395996 472.88241577]
[614.42584229 487.87722778]
[614.19818115 502.87838745]
[613.25164795 517.85137939]
[611.58825684 532.76184082]
[609.21191406 547.57531738]
[606.12811279 562.25787354]
[602.34387207 576.77563477]
[597.86791992 591.09533691]
[592.71057129 605.18389893]
[586.88366699 619.00903320]
[580.40063477 632.53887939]
[573.27636719 645.74237061]
[565.52722168 658.58911133]
[557.17108154 671.04949951]
[548.22711182 683.09497070]
[538.71594238 694.69769287]
[528.65942383 705.83111572]
[518.08062744 716.46960449]
[507.00399780 726.58862305]
[495.45492554 736.16491699]
[483.45999146 745.17651367]
[471.04681396 753.60266113]
[458.24389648 761.42395020]
[445.08071899 768.62237549]
[431.58755493 775.18145752]
[417.79544067 781.08605957]
[403.73608398 786.32257080]
[389.44183350 790.87902832]
[374.94555664 794.74493408]
[360.28060913 797.91131592]
[345.48071289 800.37097168]
[330.57989502 802.11822510]
[315.61245728 803.14904785]
[300.61279297 803.46105957]
[285.61544800 803.05352783]
[270.65487671 801.92742920]
[255.76548767 800.08538818]
[240.98155212 797.53155518]
[226.33705139 794.27185059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[55 124]
[63 118]
[64 117]
[65 116]
[66 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
