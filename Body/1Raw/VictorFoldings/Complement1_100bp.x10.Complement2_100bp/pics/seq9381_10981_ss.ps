%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[134.54377747 760.70831299]
[119.94603729 757.24578857]
[105.52664185 753.10284424]
[91.31728363 748.28857422]
[77.34919739 742.81353760]
[63.65309525 736.68981934]
[50.25907516 729.93090820]
[37.19658279 722.55157471]
[24.49433708 714.56811523]
[12.18025494 705.99798584]
[0.28140831 696.86016846]
[-11.17604733 687.17462158]
[-22.16692734 676.96264648]
[-32.66706848 666.24676514]
[-42.65339279 655.05053711]
[-52.10394287 643.39849854]
[-60.99794769 631.31628418]
[-69.31585693 618.83044434]
[-77.03938293 605.96850586]
[-84.15155792 592.75866699]
[-90.63672638 579.22998047]
[-96.48065948 565.41217041]
[-101.67048645 551.33563232]
[-106.19481659 537.03131104]
[-110.04369354 522.53063965]
[-113.20865631 507.86550903]
[-115.68275452 493.06814575]
[-117.46054840 478.17108154]
[-118.53813171 463.20706177]
[-118.91312408 448.20898438]
[-118.58471680 433.20980835]
[-117.55361938 418.24252319]
[-115.82210541 403.33999634]
[-113.39398193 388.53503418]
[-110.27458191 373.86013794]
[-106.47075653 359.34759521]
[-101.99088287 345.02929688]
[-96.84480286 330.93670654]
[-91.04382324 317.10083008]
[-84.60070038 303.55206299]
[-77.52959442 290.32019043]
[-69.84605408 277.43429565]
[-61.56696701 264.92269897]
[-52.71053314 252.81292725]
[-43.29621887 241.13159180]
[-33.34471893 229.90435791]
[-22.87791252 219.15591431]
[-11.91880417 208.90989685]
[-0.49148750 199.18881226]
[11.37891960 190.01403809]
[23.66632271 181.40573120]
[36.34371185 173.38284302]
[49.38321686 165.96298218]
[62.75617981 159.16247559]
[76.43319702 152.99624634]
[90.38420868 147.47789001]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[73.92282867 64.87938690]
[77.79997253 50.49825287]
[63.04778671 53.27828979]
[48.09616089 54.62154388]
[33.08469009 54.51546478]
[18.15353584 52.96104813]
[3.44211459 49.97280884]
[-10.91221714 45.57864380]
[-24.77543259 39.81958389]
[-38.01809311 32.74940109]
[-50.51654816 24.43411064]
[-62.15410614 14.95134830]
[-72.82210541 4.38965607]
[-82.42093658 -7.15235186]
[-90.86097717 -19.56690788]
[-98.06342316 -32.73809814]
[-103.96102905 -46.54294586]
[-108.49872589 -60.85255051]
[-111.63414764 -75.53330994]
[-113.33801270 -90.44814301]
[-113.59441376 -105.45780182]
[-112.40096283 -120.42213440]
[-109.76880646 -135.20141602]
[-105.72250366 -149.65766907]
[-100.29985046 -163.65588379]
[-93.55147552 -177.06539917]
[-85.54038239 -189.76098633]
[-76.34136963 -201.62409973]
[-66.04033661 -212.54400635]
[-54.73345566 -222.41871643]
[-42.52630234 -231.15605164]
[-29.53285599 -238.67442322]
[-15.87443161 -244.90362549]
[-1.67855930 -249.78549194]
[12.92221451 -253.27447510]
[27.79156303 -255.33795166]
[42.79065323 -255.95669556]
[57.77943802 -255.12490845]
[72.61796570 -252.85035706]
[87.16769409 -249.15428162]
[101.29277039 -244.07119751]
[114.86130524 -237.64855957]
[127.74662018 -229.94633484]
[139.82839966 -221.03643799]
[150.99383545 -211.00207520]
[161.13867188 -199.93690491]
[170.16819763 -187.94427490]
[177.99809265 -175.13615417]
[184.55526733 -161.63211060]
[189.77847290 -147.55825806]
[193.61895752 -133.04597473]
[196.04086304 -118.23078156]
[197.02157593 -103.25100708]
[196.55194092 -88.24650574]
[194.63632202 -73.35738373]
[191.29263306 -58.72266006]
[186.55207825 -44.47896957]
[180.45892334 -30.75931358]
[173.07006836 -17.69178963]
[164.45448303 -5.39840555]
[154.69262695 6.00605297]
[143.87564087 16.41510391]
[132.10452271 25.73155594]
[119.48917389 33.86842728]
[106.14739990 40.74973679]
[92.20375061 46.31124115]
[103.18612671 56.37288666]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[133.56921387 134.92451477]
[148.30448914 132.10411072]
[163.15576172 129.97747803]
[178.09039307 128.54930115]
[193.07556152 127.82272339]
[208.07830811 127.79932404]
[223.06567383 128.47917175]
[238.00468445 129.86074829]
[252.86253357 131.94105530]
[267.60653687 134.71548462]
[282.20428467 138.17794800]
[296.62368774 142.32084656]
[310.83306885 147.13505554]
[324.80117798 152.61000061]
[338.49731445 158.73364258]
[351.89135742 165.49252319]
[364.95388794 172.87179565]
[377.65615845 180.85520935]
[389.97027588 189.42524719]
[401.86917114 198.56306458]
[413.32666016 208.24855042]
[424.31759644 218.46044922]
[434.81777954 229.17626953]
[444.80413818 240.37249756]
[454.25476074 252.02450562]
[463.14880371 264.10665894]
[471.46676636 276.59243774]
[479.19036865 289.45437622]
[486.30258179 302.66418457]
[492.78781128 316.19287109]
[498.63180542 330.01062012]
[503.82168579 344.08715820]
[508.34606934 358.39144897]
[512.19500732 372.89208984]
[515.36004639 387.55718994]
[517.83422852 402.35455322]
[519.61206055 417.25161743]
[520.68969727 432.21563721]
[521.06475830 447.21371460]
[520.73645020 462.21289062]
[519.70538330 477.18017578]
[517.97393799 492.08270264]
[515.54589844 506.88769531]
[512.42657471 521.56256104]
[508.62280273 536.07513428]
[504.14297485 550.39349365]
[498.99697876 564.48608398]
[493.19604492 578.32196045]
[486.75299072 591.87078857]
[479.68194580 605.10266113]
[471.99844360 617.98858643]
[463.71942139 630.50024414]
[454.86303711 642.61004639]
[445.44876099 654.29144287]
[435.49731445 665.51867676]
[425.03054810 676.26721191]
[414.07150269 686.51324463]
[402.64422607 696.23437500]
[390.77386475 705.40924072]
[378.48648071 714.01757812]
[365.80914307 722.04052734]
[352.76965332 729.46044922]
[339.39672852 736.26098633]
[325.71972656 742.42730713]
[311.76873779 747.94567871]
[297.57443237 752.80413818]
[283.16799927 756.99194336]
[268.58108521 760.49987793]
[253.84580994 763.32019043]
[238.99452209 765.44677734]
[224.05987549 766.87487793]
[209.07470703 767.60137939]
[194.07196045 767.62469482]
[179.08460999 766.94482422]
[164.14559937 765.56317139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 135]
[58 134]
[59 133]
[61 131]
[62 130]
[64 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
