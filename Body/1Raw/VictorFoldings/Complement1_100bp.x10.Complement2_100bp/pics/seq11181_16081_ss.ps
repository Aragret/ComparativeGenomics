%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[93.16230774 775.87744141]
[78.15602875 776.38610840]
[63.18271255 775.26934814]
[48.41792297 772.54022217]
[34.03476334 768.23071289]
[20.20187187 762.39135742]
[7.08142900 755.09057617]
[-5.17273235 746.41400146]
[-16.41693878 736.46337891]
[-26.51935959 725.35534668]
[-35.36154556 713.22015381]
[-42.83983231 700.20007324]
[-48.86653519 686.44775391]
[-53.37099457 672.12445068]
[-56.30039978 657.39807129]
[-57.62040710 642.44134521]
[-57.31553650 627.42950439]
[-55.38936615 612.53869629]
[-51.86447525 597.94335938]
[-46.78219223 583.81475830]
[-40.20210648 570.31848145]
[-32.20136261 557.61279297]
[-22.87376976 545.84655762]
[-12.32868671 535.15789795]
[-0.68974864 525.67199707]
[11.90658283 517.50006104]
[25.31262207 510.73803711]
[39.37119293 505.46508789]
[53.91746140 501.74310303]
[68.78088379 499.61566162]
[83.78719330 499.10775757]
[84.90283966 484.14929199]
[86.01848602 469.19085693]
[87.13413239 454.23239136]
[88.24978638 439.27395630]
[88.80799866 424.28433228]
[88.80799866 409.28433228]
[80.47904205 400.51193237]
[80.35627747 388.01519775]
[89.05091095 378.48806763]
[89.27423859 363.48971558]
[89.49756622 348.49139404]
[89.72089386 333.49304199]
[75.94561005 329.53213501]
[63.65682602 322.13073730]
[53.69725800 311.78906250]
[46.75180817 299.20919800]
[43.30044174 285.24752808]
[43.58504105 270.85623169]
[47.59245300 257.01858521]
[55.05495071 244.68164062]
[65.46813965 234.69140625]
[78.12501526 227.73489380]
[92.16397095 224.29280090]
[92.61058044 209.29945374]
[85.25564575 196.34745789]
[93.40039825 182.78376770]
[93.84700775 167.79042053]
[94.29360962 152.79707336]
[94.18194580 137.79748535]
[93.51216125 122.81245422]
[92.84237671 107.82741547]
[91.39295197 92.89760590]
[81.69412231 80.39787292]
[87.45783997 66.66365051]
[85.23272705 51.82960892]
[83.00760651 36.99556351]
[73.30877686 24.49583435]
[79.07249451 10.76161385]
[76.84738159 -4.07242966]
[74.62226105 -18.90647316]
[72.39714813 -33.74051666]
[62.69831467 -46.24024963]
[68.46203613 -59.97446823]
[66.23691559 -74.80850983]
[64.01180267 -89.64255524]
[61.78668213 -104.47660065]
[47.53084946 -114.61516571]
[45.06676865 -131.59289551]
[55.43588257 -144.83374023]
[52.99015427 -159.63301086]
[50.54442596 -174.43228149]
[48.09869766 -189.23155212]
[38.50572586 -177.70008850]
[23.58171844 -176.19210815]
[11.87582684 -185.57144165]
[10.09371758 -200.46520996]
[19.25626373 -212.34155273]
[34.11474228 -214.39718628]
[46.15705109 -205.45535278]
[45.04140091 -220.41380310]
[43.92575455 -235.37225342]
[29.12407112 -238.34089661]
[15.67272854 -245.19392395]
[4.56990337 -255.42279053]
[-3.36050057 -268.26846313]
[-7.52999544 -282.77770996]
[-7.62917614 -297.87380981]
[-3.65068364 -312.43658447]
[4.11025190 -325.38534546]
[15.07771778 -335.75921631]
[28.43785477 -342.78839111]
[43.19925308 -345.95126343]
[58.26651764 -345.01312256]
[72.52155304 -340.04357910]
[84.90655518 -331.41137695]
[94.50245667 -319.75717163]
[100.59719086 -305.94567871]
[102.73847961 -291.00186157]
[100.76743317 -276.03466797]
[94.83031464 -262.15469360]
[85.36769104 -250.39199829]
[73.08175659 -241.61940002]
[58.88420486 -236.48791504]
[59.99985504 -221.52944946]
[61.11550522 -206.57099915]
[62.89796829 -191.67729187]
[65.34369659 -176.87802124]
[67.78942108 -162.07875061]
[70.23515320 -147.27947998]
[81.65688324 -141.31510925]
[87.64730072 -129.68768311]
[85.82022095 -116.53960419]
[76.62072754 -106.70171356]
[78.84584045 -91.86767578]
[81.07096100 -77.03363037]
[83.29608154 -62.19958496]
[92.83575439 -50.76088333]
[87.23118591 -35.96563339]
[89.45630646 -21.13158989]
[91.68142700 -6.29754686]
[93.90653992 8.53649712]
[103.44621277 19.97519684]
[97.84165192 34.77044678]
[100.06677246 49.60449219]
[102.29188538 64.43853760]
[111.83155823 75.87723541]
[106.22699738 90.67248535]
[115.07211304 78.55786896]
[129.60433960 74.84110260]
[143.17973328 81.22142792]
[149.59181213 94.78186035]
[145.90905762 109.32274628]
[133.81518555 118.19618225]
[118.83932495 117.34536743]
[107.82741547 107.15763092]
[108.49720001 122.14266968]
[109.16698456 137.12770081]
[121.06143188 127.98867035]
[135.65861511 131.44157410]
[142.19801331 144.94105530]
[135.85903931 158.53581238]
[121.31454468 162.20428467]
[109.28695679 153.24368286]
[108.84035492 168.23703003]
[108.39374542 183.23037720]
[115.71673584 197.25480652]
[107.60392761 209.74606323]
[107.15731812 224.73941040]
[122.12680054 229.56164551]
[135.12152100 238.39453125]
[145.09512329 250.51696777]
[151.24734497 264.94335938]
[153.08811951 280.50378418]
[150.47671509 295.93884277]
[143.63238525 310.00158691]
[133.11601257 321.55831909]
[119.78414154 329.67984009]
[104.71923065 333.71636963]
[104.49590302 348.71472168]
[104.27257538 363.71304321]
[104.04924774 378.71139526]
[113.38868713 394.58135986]
[103.80799866 409.28433228]
[103.80799866 424.28433228]
[116.09866333 415.68551636]
[130.52709961 419.78677368]
[136.45719910 433.56481934]
[129.51750183 446.86294556]
[114.82370758 449.87832642]
[103.20823669 440.38958740]
[102.09259033 455.34805298]
[100.97694397 470.30648804]
[99.86128998 485.26495361]
[98.74564362 500.22341919]
[113.51058197 502.95175171]
[127.89397430 507.26049805]
[141.72717285 513.09912109]
[154.84800720 520.39916992]
[167.10264587 529.07507324]
[178.34738159 539.02514648]
[188.45040894 550.13262939]
[197.29324341 562.26733398]
[204.77223206 575.28698730]
[210.79966736 589.03900146]
[215.30490112 603.36206055]
[218.23510742 618.08825684]
[219.55590820 633.04498291]
[219.25184631 648.05676270]
[217.32647705 662.94775391]
[213.80236816 677.54321289]
[208.72085571 691.67205811]
[202.14149475 705.16870117]
[194.14143372 717.87487793]
[184.81446838 729.64154053]
[174.26995850 740.33087158]
[162.63153076 749.81738281]
[150.03564453 757.98992920]
[136.62997437 764.75268555]
[122.57168579 770.02642822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 175]
[37 174]
[40 172]
[41 171]
[42 170]
[43 169]
[54 159]
[55 158]
[57 156]
[58 155]
[59 154]
[60 148]
[61 147]
[62 146]
[63 138]
[65 136]
[66 135]
[67 134]
[69 132]
[70 131]
[71 130]
[72 129]
[74 127]
[75 126]
[76 125]
[77 124]
[80 120]
[81 119]
[82 118]
[83 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
