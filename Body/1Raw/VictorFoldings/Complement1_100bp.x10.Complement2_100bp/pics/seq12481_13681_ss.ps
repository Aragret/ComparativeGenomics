%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[43.84519958 876.90930176]
[28.84289551 876.95086670]
[13.85287094 876.34252930]
[-1.09673011 875.08544922]
[-15.97784233 873.18194580]
[-30.76252747 870.63555908]
[-45.42302704 867.45111084]
[-59.93181992 863.63458252]
[-74.26166534 859.19317627]
[-88.38566589 854.13513184]
[-102.27729797 848.47003174]
[-115.91048431 842.20849609]
[-129.25962830 835.36224365]
[-142.29966736 827.94415283]
[-155.00613403 819.96813965]
[-167.35514832 811.44915771]
[-179.32354736 802.40325928]
[-190.88885498 792.84741211]
[-202.02935791 782.79949951]
[-212.72413635 772.27844238]
[-222.95310974 761.30395508]
[-232.69708252 749.89672852]
[-241.93777466 738.07806396]
[-250.65780640 725.87017822]
[-258.84082031 713.29602051]
[-266.47146606 700.37921143]
[-273.53543091 687.14398193]
[-280.01940918 673.61517334]
[-285.91122437 659.81817627]
[-291.19985962 645.77893066]
[-295.87536621 631.52368164]
[-299.92898560 617.07934570]
[-303.35305786 602.47296143]
[-306.14120483 587.73199463]
[-308.28814697 572.88403320]
[-309.78991699 557.95703125]
[-310.64361572 542.97894287]
[-310.84771729 527.97796631]
[-310.40179443 512.98223877]
[-309.30667114 498.01992798]
[-307.56445312 483.11904907]
[-305.17834473 468.30764771]
[-302.15289307 453.61352539]
[-298.49374390 439.06423950]
[-294.20779419 424.68713379]
[-289.30303955 410.50918579]
[-283.78872681 396.55700684]
[-277.67520142 382.85681152]
[-270.97393799 369.43429565]
[-263.69750977 356.31466675]
[-255.85958862 343.52255249]
[-247.47488403 331.08200073]
[-238.55914307 319.01632690]
[-229.12910461 307.34820557]
[-219.20246887 296.09951782]
[-208.79786682 285.29141235]
[-197.93484497 274.94415283]
[-186.63377380 265.07720947]
[-174.91589355 255.70904541]
[-162.80320740 246.85729980]
[-150.31843567 238.53855896]
[-137.48503113 230.76846313]
[-124.32707214 223.56158447]
[-110.86927032 216.93145752]
[-97.13690186 210.89051819]
[-83.15573120 205.45013428]
[-68.95201874 200.62049866]
[-54.55242157 196.41069031]
[-39.98397827 192.82859802]
[-25.27403831 189.88096619]
[-10.45021820 187.57330322]
[4.45965052 185.90997314]
[19.42757797 184.89407349]
[34.42546082 184.52752686]
[49.42514420 184.81100464]
[64.39846802 185.74398804]
[79.31732178 187.32472229]
[81.54244232 172.49067688]
[83.76755524 157.65663147]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[84.09726715 103.38854218]
[85.91062164 91.88406372]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[82.99295044 65.49402618]
[69.21906281 59.50572968]
[56.28549194 51.87013245]
[44.38830566 42.70298767]
[33.70786285 32.14326477]
[24.40607262 20.35104942]
[16.62395096 7.50510931]
[10.47947216 -6.19981718]
[6.06578588 -20.55596542]
[3.44980073 -35.34569931]
[2.67117548 -50.34481049]
[3.74171352 -65.32592010]
[6.64518595 -80.06191254]
[11.33757687 -94.32939148]
[17.74775124 -107.91207886]
[25.77853012 -120.60404968]
[35.30817413 -132.21290588]
[46.19221115 -142.56265259]
[58.26564026 -151.49639893]
[71.34543610 -158.87872314]
[85.23331451 -164.59767151]
[99.71873474 -168.56658936]
[114.58209991 -170.72528076]
[129.59809875 -171.04103088]
[144.53906250 -169.50904846]
[159.17851257 -166.15257263]
[173.29452515 -161.02246094]
[186.67309570 -154.19650269]
[199.11138916 -145.77818298]
[210.42088318 -135.89511108]
[220.43009949 -124.69711304]
[228.98730469 -112.35394287]
[235.96278381 -99.05272675]
[241.25077820 -84.99510956]
[244.77114868 -70.39419556]
[246.47048950 -55.47132874]
[246.32305908 -40.45274734]
[244.33110046 -25.56611633]
[240.52479553 -11.03712273]
[234.96186829 2.91398287]
[227.72662354 16.07570267]
[218.92875671 28.24851036]
[208.70164490 39.24786758]
[197.20033264 48.90702820]
[184.59916687 57.07956314]
[171.08918762 63.64157486]
[156.87519836 68.49358368]
[142.17266846 71.56204224]
[127.20450592 72.80043030]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[116.06143951 102.53162384]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[98.60160065 159.88175964]
[96.37648010 174.71580505]
[94.15136719 189.54985046]
[108.87742615 192.41586304]
[123.46550751 195.91711426]
[137.88822937 200.04701233]
[152.11849976 204.79780579]
[166.12962341 210.16058350]
[179.89527893 216.12527466]
[193.38963318 222.68067932]
[206.58735657 229.81448364]
[219.46365356 237.51329041]
[231.99436951 245.76268005]
[244.15596008 254.54711914]
[255.92559814 263.85015869]
[267.28118896 273.65429688]
[278.20144653 283.94113159]
[288.66580200 294.69137573]
[298.65466309 305.88485718]
[308.14926147 317.50051880]
[317.13177490 329.51654053]
[325.58532715 341.91043091]
[333.49407959 354.65887451]
[340.84313965 367.73794556]
[347.61874390 381.12310791]
[353.80813599 394.78918457]
[359.39971924 408.71057129]
[364.38302612 422.86111450]
[368.74865723 437.21423340]
[372.48843384 451.74301147]
[375.59530640 466.42013550]
[378.06347656 481.21807861]
[379.88833618 496.10903931]
[381.06637573 511.06506348]
[381.59545898 526.05810547]
[381.47454834 541.05999756]
[380.70391846 556.04254150]
[379.28497314 570.97766113]
[377.22036743 585.83728027]
[374.51400757 600.59350586]
[371.17098999 615.21862793]
[367.19754028 629.68524170]
[362.60113525 643.96618652]
[357.39044189 658.03454590]
[351.57519531 671.86401367]
[345.16635132 685.42858887]
[338.17590332 698.70275879]
[330.61700439 711.66168213]
[322.50384521 724.28100586]
[313.85162354 736.53704834]
[304.67663574 748.40679932]
[294.99606323 759.86791992]
[284.82809448 770.89892578]
[274.19180298 781.47912598]
[263.10720825 791.58862305]
[251.59506226 801.20849609]
[239.67700195 810.32061768]
[227.37541199 818.90789795]
[214.71337891 826.95428467]
[201.71467590 834.44458008]
[188.40370178 841.36474609]
[174.80545044 847.70178223]
[160.94543457 853.44384766]
[146.84970093 858.58013916]
[132.54470825 863.10095215]
[118.05730438 866.99786377]
[103.41468811 870.26354980]
[88.64434814 872.89184570]
[73.77402496 874.87786865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[85 137]
[86 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
