%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[126.29149628 920.33026123]
[111.42160797 918.33880615]
[96.65866089 915.66772461]
[82.03369141 912.32263184]
[67.57746124 908.31048584]
[53.32037735 903.63989258]
[39.29241562 898.32049561]
[25.52308273 892.36358643]
[12.04133034 885.78161621]
[-1.12448490 878.58856201]
[-13.94667625 870.79937744]
[-26.39827919 862.43060303]
[-38.45310593 853.49969482]
[-50.08580780 844.02551270]
[-61.27191925 834.02801514]
[-71.98791504 823.52819824]
[-82.21125793 812.54809570]
[-91.92045593 801.11077881]
[-101.09507751 789.24041748]
[-109.71583557 776.96191406]
[-117.76460266 764.30108643]
[-125.22444916 751.28454590]
[-132.07969666 737.93969727]
[-138.31590271 724.29455566]
[-143.91996765 710.37792969]
[-148.88012695 696.21893311]
[-153.18591309 681.84747314]
[-156.82829285 667.29370117]
[-159.79959106 652.58819580]
[-162.09358215 637.76196289]
[-163.70542908 622.84619141]
[-164.63172913 607.87213135]
[-164.87054443 592.87139893]
[-164.42138672 577.87548828]
[-163.28518677 562.91589355]
[-161.46432495 548.02416992]
[-158.96264648 533.23156738]
[-155.78541565 518.56921387]
[-151.93930054 504.06793213]
[-147.43238831 489.75823975]
[-142.27416992 475.67022705]
[-136.47549438 461.83352661]
[-130.04853821 448.27719116]
[-123.00683594 435.02978516]
[-115.36518860 422.11917114]
[-107.13966370 409.57244873]
[-98.34755707 397.41601562]
[-89.00737000 385.67547607]
[-79.13874054 374.37548828]
[-68.76242065 363.53985596]
[-57.90023422 353.19131470]
[-46.57502365 343.35162354]
[-34.81060410 334.04153442]
[-22.63172150 325.28057861]
[-10.06398201 317.08721924]
[2.86617994 309.47863770]
[16.13157272 302.47088623]
[29.70430183 296.07864380]
[43.55582047 290.31542969]
[57.65699768 285.19329834]
[71.97817993 280.72302246]
[86.48925018 276.91406250]
[101.15969086 273.77438354]
[115.95864868 271.31057739]
[114.17617798 256.41687012]
[112.39371490 241.52314758]
[98.74077606 231.70295715]
[96.36785126 214.71224976]
[107.22702789 200.99739075]
[105.22301483 186.13186646]
[103.10839081 171.28166199]
[100.88327789 156.44761658]
[91.34360504 145.00891113]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[83.93856049 102.53162384]
[90.24811554 86.98924255]
[80.36425781 74.63529968]
[85.92285919 60.81678772]
[83.47712708 46.01751709]
[73.59326935 33.66357040]
[79.15187073 19.84506035]
[69.26801300 7.49111605]
[74.82660675 -6.32739544]
[72.38088226 -21.12666702]
[57.33934021 -21.70711136]
[42.72262573 -25.30385208]
[29.12928391 -31.76960182]
[17.11595154 -40.83959198]
[7.17456913 -52.14241791]
[-0.28777054 -65.21522522]
[-4.96548939 -79.52270508]
[-6.66703796 -94.47895813]
[-5.32273865 -109.47154999]
[-0.98763949 -123.88653564]
[6.16073942 -137.13363647]
[15.82967663 -148.67037964]
[27.62323570 -158.02435303]
[41.05847549 -164.81251526]
[55.58523560 -168.75689697]
[70.60865021 -169.69598389]
[85.51352692 -167.59130859]
[99.68950653 -162.52905273]
[112.55610657 -154.71652222]
[123.58644104 -144.47364807]
[132.32882690 -132.21984863]
[138.42526245 -118.45690918]
[141.62609863 -103.74842834]
[141.80029297 -88.69670105]
[138.94067383 -73.91808319]
[133.16436768 -60.01775360]
[124.70789337 -47.56492233]
[113.91754913 -37.06952667]
[101.23519135 -28.96133995]
[87.18015289 -23.57239342]
[89.62587738 -8.77312279]
[99.33480072 2.52227831]
[93.95114136 17.39933205]
[103.66006470 28.69473457]
[98.27639771 43.57178879]
[100.72212982 58.37105942]
[110.43105316 69.66645813]
[105.04738617 84.54351807]
[114.08937836 91.88406372]
[115.90273285 103.38854218]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[121.48104095 140.48828125]
[115.71732330 154.22250366]
[117.94243622 169.05654907]
[122.31023407 177.07902527]
[120.08854675 184.12785339]
[122.09255981 198.99337769]
[133.67248535 205.87232971]
[139.09701538 217.98780823]
[136.59031677 230.82519531]
[127.28742981 239.74067688]
[129.06990051 254.63439941]
[130.85237122 269.52810669]
[145.81477356 268.43008423]
[160.81179810 268.01922607]
[175.81188965 268.29632568]
[190.78349304 269.26083374]
[205.69514465 270.91073608]
[220.51547241 273.24255371]
[235.21330261 276.25137329]
[249.75775146 279.93090820]
[264.11819458 284.27334595]
[278.26446533 289.26962280]
[292.16677856 294.90921021]
[305.79592896 301.18020630]
[319.12326050 308.06948853]
[332.12069702 315.56253052]
[344.76095581 323.64358521]
[357.01742554 332.29565430]
[368.86434937 341.50054932]
[380.27679443 351.23889160]
[391.23077393 361.49023438]
[401.70321655 372.23300171]
[411.67218018 383.44458008]
[421.11660767 395.10144043]
[430.01669312 407.17901611]
[438.35369873 419.65194702]
[446.11007690 432.49395752]
[453.26956177 445.67810059]
[459.81707764 459.17660522]
[465.73883057 472.96109009]
[471.02236938 487.00259399]
[475.65661621 501.27154541]
[479.63180542 515.73797607]
[482.93957520 530.37139893]
[485.57296753 545.14111328]
[487.52645874 560.01605225]
[488.79592896 574.96490479]
[489.37872314 589.95623779]
[489.27359009 604.95849609]
[488.48074341 619.94018555]
[487.00189209 634.86975098]
[484.84011841 649.71588135]
[481.99996948 664.44720459]
[478.48742676 679.03289795]
[474.30987549 693.44219971]
[469.47610474 707.64477539]
[463.99627686 721.61083984]
[457.88189697 735.31097412]
[451.14584351 748.71636963]
[443.80230713 761.79888916]
[435.86666870 774.53094482]
[427.35568237 786.88580322]
[418.28720093 798.83746338]
[408.68029785 810.36077881]
[398.55520630 821.43157959]
[387.93319702 832.02648926]
[376.83663940 842.12329102]
[365.28881836 851.70074463]
[353.31405640 860.73870850]
[340.93753052 869.21813965]
[328.18527222 877.12121582]
[315.08407593 884.43133545]
[301.66149902 891.13317871]
[287.94580078 897.21258545]
[273.96578979 902.65673828]
[259.75088501 907.45422363]
[245.33099365 911.59497070]
[230.73641968 915.07031250]
[215.99786377 917.87286377]
[201.14630127 919.99670410]
[186.21299744 921.43743896]
[171.22933960 922.19207764]
[156.22683716 922.25891113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 139]
[65 138]
[66 137]
[69 133]
[70 132]
[71 130]
[72 129]
[74 127]
[75 126]
[77 123]
[79 121]
[80 120]
[82 118]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
