%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[155.26509094 506.86746216]
[152.97581482 492.01803589]
[152.77552795 476.99450684]
[154.66813660 462.08932495]
[158.61680603 447.59265137]
[164.54464722 433.78659058]
[172.33631897 420.93997192]
[181.84011841 409.30279541]
[192.87106323 399.10159302]
[205.21443176 390.53494263]
[218.62995911 383.76959229]
[213.80395508 369.56713867]
[208.97795105 355.36468506]
[204.15196228 341.16223145]
[199.32595825 326.95977783]
[193.87060547 312.98699951]
[187.79676819 299.27172852]
[181.72293091 285.55645752]
[175.54716492 271.88677979]
[169.26980591 258.26345825]
[162.99244690 244.64015198]
[150.63902283 236.31895447]
[151.89096069 220.54736328]
[145.61360168 206.92405701]
[139.33624268 193.30073547]
[132.75621033 179.82099915]
[125.87680054 166.49157715]
[113.16413116 158.73028564]
[113.71057892 142.91851807]
[106.83116913 129.58909607]
[99.95175934 116.25966644]
[85.60704803 107.56452179]
[86.58062744 90.81852722]
[79.50352478 77.59299469]
[72.42641449 64.36746979]
[65.34931183 51.14194107]
[58.27220535 37.91641235]
[52.86695099 34.10921860]
[50.54445267 28.92240524]
[51.18794632 24.19007301]
[44.50775146 10.75969696]
[37.82755661 -2.67067862]
[22.24985123 -12.48987484]
[24.02034378 -29.94932175]
[17.14093018 -43.27875137]
[12.66377831 -28.96249771]
[0.10003307 -20.76784706]
[-14.80632877 -22.44128036]
[-25.24032021 -33.21772766]
[-26.43165970 -48.17034531]
[-17.83568382 -60.46299362]
[-3.38235617 -64.47563934]
[10.32179356 -58.37247849]
[4.86643696 -72.34527588]
[-0.58892030 -86.31806946]
[-6.04427719 -100.29087067]
[-11.49963474 -114.26366425]
[-26.13919640 -125.43347931]
[-22.81810760 -142.66534424]
[-28.48089409 -156.55537415]
[-40.85547638 -166.41339111]
[-38.49551010 -181.11984253]
[-52.78685379 -187.31623840]
[-58.33185577 -201.48336792]
[-52.33647156 -215.06979370]
[-57.99925613 -228.95980835]
[-63.66204453 -242.84983826]
[-69.32482910 -256.73986816]
[-83.83416748 -252.85624695]
[-98.71584320 -250.82180786]
[-113.73515320 -250.66862488]
[-128.65522766 -252.39912415]
[-143.24075317 -255.98600769]
[-157.26168823 -261.37268066]
[-170.49691772 -268.47424316]
[-182.73768616 -277.17864990]
[-193.79095459 -287.34863281]
[-203.48237610 -298.82382202]
[-211.65913391 -311.42318726]
[-218.19223022 -324.94802856]
[-222.97865295 -339.18508911]
[-225.94291687 -353.90975952]
[-227.03826904 -368.88986206]
[-226.24742126 -383.88912964]
[-223.58285522 -398.67098999]
[-219.08659363 -413.00231934]
[-212.82954407 -426.65707397]
[-204.91040039 -439.41992188]
[-195.45405579 -451.08956909]
[-184.60963440 -461.48196411]
[-172.54818726 -470.43322754]
[-159.45994568 -477.80212402]
[-145.55131531 -483.47250366]
[-131.04165649 -487.35491943]
[-116.15980530 -489.38809204]
[-101.14048004 -489.54000854]
[-86.22055054 -487.80825806]
[-71.63532257 -484.22015381]
[-57.61483765 -478.83227539]
[-44.38021088 -471.72961426]
[-32.14017487 -463.02416992]
[-21.08776665 -452.85324097]
[-11.39730358 -441.37725830]
[-3.22161698 -428.77722168]
[3.31035018 -415.25180054]
[8.09558010 -401.01437378]
[11.05860233 -386.28942871]
[12.15268612 -371.30923462]
[11.36057663 -356.31002808]
[8.69476509 -341.52841187]
[4.19729710 -327.19744873]
[-2.06089759 -313.54321289]
[-9.98111725 -300.78103638]
[-19.43844795 -289.11218262]
[-30.28373528 -278.72070312]
[-42.34593582 -269.77047729]
[-55.43480301 -262.40264893]
[-49.77201843 -248.51263428]
[-44.10923004 -234.62260437]
[-38.44644547 -220.73257446]
[-24.66081429 -215.21061707]
[-18.72007561 -201.20481873]
[-24.60548401 -186.78262329]
[-12.63594151 -177.91812134]
[-14.59086704 -162.21817017]
[-8.92808056 -148.32814026]
[2.09629774 -143.34921265]
[6.92773581 -131.82354736]
[2.47316337 -119.71902466]
[7.92852068 -105.74622345]
[13.38387775 -91.77342987]
[18.83923531 -77.80062866]
[24.29459190 -63.82783508]
[30.47035980 -50.15816498]
[37.34977341 -36.82873535]
[48.77438736 -32.85321426]
[54.61482620 -21.80455017]
[51.25793076 -9.35087299]
[57.93812561 4.07950258]
[64.61832428 17.50987816]
[71.49773407 30.83930779]
[78.57483673 44.06483459]
[85.65194702 57.29036331]
[92.72904968 70.51589203]
[99.80615234 83.74141693]
[110.72908783 87.78256226]
[116.14739227 98.09193420]
[113.28118896 109.38025665]
[120.16059875 122.70968628]
[127.04000854 136.03910828]
[140.24473572 144.75379944]
[139.20622253 159.61215210]
[146.08563232 172.94158936]
[150.47909546 175.76019287]
[153.09089661 179.59840393]
[153.83099365 183.60681152]
[152.95954895 187.02337646]
[159.23690796 200.64668274]
[165.51428223 214.27000427]
[178.31669617 223.56562805]
[176.61576843 238.36279297]
[182.89312744 251.98609924]
[189.17048645 265.60943604]
[195.60401917 272.09381104]
[195.43820190 279.48260498]
[201.51203918 293.19787598]
[207.58587646 306.91314697]
[213.98547363 293.34683228]
[228.05633545 288.14962769]
[241.73802185 294.29873657]
[247.19303894 308.27166748]
[241.29652405 322.06408691]
[227.42623901 327.77508545]
[213.52841187 322.13378906]
[218.35441589 336.33624268]
[223.18041992 350.53869629]
[228.00640869 364.74114990]
[232.83241272 378.94360352]
[247.59239197 376.13491821]
[262.59963989 375.40780640]
[277.56204224 376.77645874]
[292.18829346 380.21423340]
[306.19375610 385.65420532]
[319.30578613 392.99047852]
[331.26913452 402.08029175]
[341.85095215 412.74664307]
[350.84527588 424.78195190]
[358.07696533 437.95193481]
[363.40533447 452.00021362]
[366.72662354 466.65338135]
[367.97616577 481.62619019]
[367.12966919 496.62716675]
[364.20361328 511.36434937]
[359.25494385 525.55084229]
[352.37997437 538.91052246]
[343.71255493 551.18334961]
[333.42135620 562.13037109]
[321.70675659 571.53857422]
[308.79675293 579.22479248]
[294.94262695 585.03936768]
[280.41409302 588.86920166]
[265.49392700 590.63970947]
[250.47254944 590.31640625]
[235.64236450 587.90557861]
[221.29205322 583.45422363]
[207.70094299 577.04895020]
[195.13359070 568.81439209]
[183.83462524 558.91088867]
[174.02397156 547.53118896]
[165.89260864 534.89685059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[16 167]
[17 166]
[18 165]
[19 163]
[20 162]
[21 161]
[23 159]
[24 158]
[25 157]
[26 153]
[27 152]
[29 150]
[30 149]
[31 148]
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[40 140]
[41 139]
[42 138]
[44 135]
[45 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[59 126]
[60 125]
[62 123]
[65 120]
[66 119]
[67 118]
[68 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
