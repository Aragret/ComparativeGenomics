%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[246.80807495 402.59658813]
[258.81439209 393.54360962]
[251.93498230 380.21417236]
[245.05555725 366.88476562]
[238.17614746 353.55532837]
[231.29673767 340.22589111]
[224.41732788 326.89648438]
[217.53791809 313.56704712]
[205.13291931 315.68185425]
[192.61573792 314.22341919]
[180.99629211 309.29928589]
[171.21495056 301.29708862]
[164.06632996 290.85388184]
[160.13488770 278.80563354]
[159.74700928 266.12023926]
[162.94398499 253.81965637]
[169.47793579 242.89776611]
[178.83090210 234.23994446]
[172.55354309 220.61662292]
[166.27616882 206.99330139]
[159.99880981 193.36999512]
[147.64538574 185.04879761]
[148.89732361 169.27720642]
[140.66851807 156.73580933]
[130.67034912 145.55383301]
[120.67217255 134.37185669]
[110.67400360 123.18988037]
[100.67582703 112.00790405]
[90.51228333 100.97602844]
[80.18561554 90.09669495]
[69.85894775 79.21736145]
[59.53227997 68.33802795]
[51.35456467 64.26828003]
[49.13434219 57.21899414]
[38.97079849 46.18711853]
[28.80724907 35.15524292]
[18.64370346 24.12336349]
[8.48015594 13.09148693]
[-1.68339062 2.05960941]
[2.56005502 16.44686699]
[3.65579486 31.40679169]
[1.55398047 46.25880814]
[-3.64976978 60.32724762]
[-11.71872044 72.97209167]
[-22.28578758 83.61808014]
[-34.87023926 91.78089142]
[-48.89957047 97.08917999]
[-63.73553467 99.30145264]
[-78.70320129 98.31705475]
[-93.12163544 94.18077850]
[-106.33489227 87.08080292]
[-117.74186707 77.34011841]
[-126.82360840 65.40186310]
[-133.16696167 51.80914688]
[-136.48335266 37.18035507]
[-136.62190247 22.18099594]
[-133.57630920 7.49343872]
[-127.48511505 -6.21412945]
[-118.62544250 -18.31810570]
[-107.40035248 -28.26783943]
[-94.32049561 -35.61068726]
[-79.98092651 -40.01259232]
[-65.03399658 -41.27330399]
[-50.15969849 -39.33546448]
[-36.03470993 -34.28723145]
[-23.30162048 -26.35827065]
[-12.53693390 -15.90596199]
[-17.57385063 -30.03499031]
[-22.61076736 -44.16402054]
[-34.53282547 -54.56474686]
[-31.51853371 -69.15115356]
[-36.55545044 -83.28018951]
[-48.47750854 -93.68091583]
[-45.46321869 -108.26732635]
[-50.50013351 -122.39635468]
[-65.28633881 -119.68264008]
[-80.31638336 -119.37607574]
[-95.20095062 -121.48461151]
[-109.55448914 -125.95362091]
[-123.00521088 -132.66735840]
[-135.20471191 -141.45190430]
[-145.83700562 -152.07972717]
[-154.62666321 -164.27554321]
[-161.34603882 -177.72344971]
[-165.82106018 -192.07511902]
[-167.93583679 -206.95880127]
[-167.63557434 -221.98896790]
[-164.92805481 -236.77632141]
[-159.88342285 -250.93780518]
[-152.63232422 -264.10662842]
[-143.36259460 -275.94165039]
[-132.31433105 -286.13638306]
[-119.77372742 -294.42669678]
[-106.06559753 -300.59786987]
[-91.54502869 -304.49005127]
[-76.58812714 -306.00244141]
[-61.58232117 -305.09585571]
[-46.91629028 -301.79376221]
[-32.96992493 -296.18173218]
[-20.10446930 -288.40509033]
[-8.65316868 -278.66525269]
[1.08736098 -267.21456909]
[8.86481667 -254.34960938]
[14.47774315 -240.40359497]
[17.78075218 -225.73777771]
[18.68828773 -210.73202515]
[17.17684364 -195.77503967]
[13.28556919 -181.25421143]
[7.11525631 -167.54570007]
[-1.17426729 -155.00457764]
[-11.36828327 -143.95567322]
[-23.20274353 -134.68519592]
[-36.37110519 -127.43326569]
[-31.33418846 -113.30423737]
[-19.77240562 -103.91411591]
[-22.42642021 -88.31710052]
[-17.38950539 -74.18807220]
[-5.82772160 -64.79795074]
[-8.48173714 -49.20093536]
[-3.44482088 -35.07190704]
[1.59209526 -20.94287872]
[9.34848690 -8.10393715]
[19.51203346 2.92793989]
[29.67558098 13.95981693]
[39.83912659 24.99169350]
[50.00267410 36.02357101]
[60.16622162 47.05545044]
[70.41161346 58.01135635]
[80.73828125 68.89069366]
[91.06494904 79.77002716]
[101.39161682 90.64936066]
[106.46813202 91.96955872]
[110.44360352 96.04006195]
[111.85780334 102.00973511]
[121.85597992 113.19171143]
[131.85415649 124.37368774]
[141.85232544 135.55566406]
[151.85049438 146.73764038]
[148.04212952 132.22914124]
[148.41796875 117.23384857]
[152.94834900 102.93434906]
[161.27600098 90.45836639]
[172.74415588 80.78980255]
[186.44841003 74.69115448]
[201.30798340 72.64340210]
[216.15097046 74.80802917]
[229.80680847 81.01432800]
[241.19853210 90.77284241]
[249.42774963 103.31397247]
[253.84545898 117.64868164]
[254.10328674 132.64646912]
[250.18086243 147.12454224]
[242.38755798 159.94110107]
[231.33796692 170.08538818]
[217.90350342 176.75737000]
[203.14367676 179.43087769]
[188.22251892 177.89506531]
[174.31674194 172.27104187]
[162.52064514 162.99984741]
[175.32305908 172.29547119]
[173.62213135 187.09263611]
[179.89949036 200.71594238]
[186.17684937 214.33926392]
[192.45420837 227.96257019]
[209.99681091 226.87426758]
[226.57881165 232.59487915]
[239.66600037 244.22148132]
[247.26925659 259.95071411]
[248.24691772 277.35855103]
[242.47607422 293.77368164]
[230.86734009 306.68762207]
[237.74674988 320.01705933]
[244.62617493 333.34649658]
[251.50558472 346.67590332]
[258.38497925 360.00534058]
[265.26440430 373.33477783]
[272.14382935 386.66421509]
[286.47842407 382.12246704]
[301.37438965 380.06878662]
[316.40319824 380.56222534]
[331.13238525 383.58865356]
[345.13815308 389.06091309]
[358.01757812 396.82162476]
[369.40008545 406.64743042]
[378.95812988 418.25570679]
[386.41677856 431.31237793]
[391.56137085 445.44183350]
[394.24389648 460.23748779]
[394.38717651 475.27371216]
[391.98712158 490.11782837]
[387.11276245 504.34274292]
[379.90432739 517.53918457]
[370.56924438 529.32751465]
[359.37609863 539.36846924]
[346.64691162 547.37322998]
[332.74795532 553.11145020]
[318.07913208 556.41802979]
[303.06246948 557.19781494]
[288.13006592 555.42840576]
[273.71151733 551.16070557]
[260.22167969 544.51745605]
[248.04869080 535.68988037]
[237.54280090 524.93188477]
[229.00628662 512.55303955]
[222.68473816 498.90951538]
[218.76005554 484.39382935]
[217.34515381 469.42364502]
[218.48074341 454.42971802]
[222.13415527 439.84338379]
[228.20027161 426.08438110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[18 164]
[19 163]
[20 162]
[21 161]
[23 159]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 131]
[30 130]
[31 129]
[32 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 123]
[39 122]
[67 121]
[68 120]
[69 119]
[71 117]
[72 116]
[74 114]
[75 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
