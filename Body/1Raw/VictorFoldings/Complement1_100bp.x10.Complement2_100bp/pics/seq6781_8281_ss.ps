%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[102.15226746 544.08715820]
[91.77638245 554.96539307]
[79.78977966 564.03833008]
[66.50294495 571.07080078]
[52.26003265 575.88079834]
[37.42996597 578.34356689]
[22.39688683 578.39544678]
[7.55018520 576.03503418]
[-6.72557449 571.32342529]
[-20.06061554 564.38275146]
[-32.10952759 555.39276123]
[-42.56021500 544.58636475]
[-51.14197922 532.24334717]
[-57.63253403 518.68353271]
[-61.86375809 504.25808716]
[-63.72604752 489.34072876]
[-63.17117310 474.31777954]
[-60.21350098 459.57846069]
[-54.92964172 445.50445557]
[-47.45646286 432.46038818]
[-37.98754120 420.78411865]
[-26.76813698 410.77804565]
[-14.08886242 402.70141602]
[-0.27814308 396.76336670]
[14.30629158 393.11776733]
[29.28666878 391.85900879]
[44.27496338 393.01971436]
[47.81463623 378.44335938]
[51.35430527 363.86697388]
[54.89397812 349.29058838]
[58.43365097 334.71423340]
[56.75800323 330.24194336]
[57.87402725 324.66955566]
[62.30180359 319.75973511]
[66.27390289 305.29522705]
[70.24599457 290.83068848]
[74.21809387 276.36618042]
[78.19018555 261.90164185]
[82.16228485 247.43711853]
[84.16629791 232.57159424]
[84.16629791 217.57159424]
[84.16629791 202.57159424]
[84.16629791 187.57159424]
[73.62194824 198.24008179]
[58.69915009 199.76000977]
[46.22041321 191.43647766]
[41.89084625 177.07490540]
[47.68986893 163.24119568]
[60.96624374 156.25994873]
[75.65019226 159.32289124]
[85.02901459 171.03143311]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[93.58695984 72.08412170]
[91.58294678 57.21859360]
[89.57893372 42.35306549]
[87.57492065 27.48753738]
[82.13578033 41.46665573]
[72.29564667 52.78795242]
[59.21052170 60.12141037]
[44.41764450 62.60550690]
[29.65485764 59.94840622]
[16.65648460 52.46226883]
[6.94955778 41.02655411]
[1.67443836 26.98471832]
[1.45084202 11.98638535]
[6.30503654 -2.20645785]
[15.66675568 -13.92644978]
[28.43619537 -21.79673767]
[43.11321259 -24.89272690]
[57.97356796 -22.85070419]
[71.27147675 -15.91056633]
[81.44472504 -4.88763142]
[87.29851532 8.92466354]
[88.85903931 -5.99394131]
[90.41956329 -20.91254616]
[91.98007965 -35.83115005]
[89.85298920 -40.59796906]
[89.77487946 -45.23986435]
[91.35504150 -48.99727631]
[93.95793915 -51.37577820]
[96.18305206 -66.20982361]
[98.40817261 -81.04386902]
[100.63328552 -95.87791443]
[102.85840607 -110.71195221]
[104.19664001 -125.65213776]
[104.64324188 -140.64549255]
[105.08985138 -155.63883972]
[105.53645325 -170.63218689]
[105.98306274 -185.62553406]
[91.45751190 -189.65936279]
[78.31974030 -197.05278015]
[67.33358002 -207.37593079]
[59.13773346 -220.02865601]
[54.20870590 -234.27534485]
[52.83306122 -249.28771973]
[55.09078217 -264.19296265]
[60.85060501 -278.12448120]
[69.77765656 -290.27236938]
[81.35293579 -299.93035889]
[94.90347290 -306.53689575]
[109.64144897 -309.70791626]
[124.71002960 -309.25906372]
[139.23313904 -305.21646118]
[152.36640930 -297.81506348]
[163.34631348 -287.48526001]
[171.53448486 -274.82757568]
[176.45487976 -260.57788086]
[177.82142639 -245.56469727]
[175.55467224 -230.66082764]
[169.78639221 -216.73277283]
[160.85197449 -204.59030151]
[149.27084351 -194.93936157]
[135.71630859 -188.34103394]
[120.97640991 -185.17893982]
[120.52980804 -170.18557739]
[120.08319855 -155.19223022]
[119.63659668 -140.19888306]
[119.18998718 -125.20553589]
[129.39682007 -136.19737244]
[144.09248352 -139.20361328]
[157.79586792 -133.10299683]
[165.39591980 -120.17090607]
[164.05804443 -105.23069000]
[154.28121948 -93.85468292]
[139.71195984 -90.28584290]
[125.78423309 -95.85527802]
[117.69245148 -108.48683929]
[115.46733093 -93.65279388]
[113.24221802 -78.81874847]
[111.01709747 -63.98470688]
[108.79197693 -49.15066147]
[106.89868927 -34.27062607]
[105.33816528 -19.35202217]
[103.77764130 -4.43341827]
[102.21711731 10.48518658]
[102.44044495 25.48352432]
[104.44445801 40.34905243]
[106.44847107 55.21458054]
[108.45248413 70.08010864]
[113.89162445 56.10099030]
[123.73176575 44.77969360]
[136.81687927 37.44623566]
[151.60975647 34.96213913]
[166.37254333 37.61923981]
[179.37092590 45.10537720]
[189.07785034 56.54109192]
[194.35296631 70.58292389]
[194.57656860 85.58126068]
[189.72236633 99.77410126]
[180.36065674 111.49409485]
[167.59121704 119.36437988]
[152.91419983 122.46037292]
[138.05383301 120.41835022]
[124.75592804 113.47821045]
[114.58267975 102.45527649]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[99.94762421 172.59196472]
[99.16629791 187.57159424]
[99.16629791 202.57159424]
[99.16629791 217.57159424]
[99.16629791 232.57159424]
[106.17091370 219.30754089]
[116.88763428 208.81221008]
[130.29501343 202.08595276]
[145.11512756 199.76989746]
[159.93542480 202.08476257]
[173.34333801 208.80992126]
[184.06089783 219.30438232]
[191.06658936 232.56788635]
[193.69267273 247.33622742]
[191.68882751 262.20178223]
[185.24606323 275.74765015]
[174.97846985 286.68273926]
[161.86466980 293.96481323]
[147.15460205 296.89971924]
[132.25032043 295.20779419]
[118.57242584 289.05026245]
[107.42459869 279.01403809]
[99.86937714 266.05569458]
[96.62680817 251.40922546]
[92.65471649 265.87374878]
[88.68261719 280.33825684]
[84.71051788 294.80279541]
[80.73842621 309.26730347]
[76.76632690 323.73184204]
[73.01002502 338.25390625]
[69.47035217 352.83026123]
[65.93067932 367.40664673]
[62.39101028 381.98303223]
[58.85133743 396.55938721]
[72.70269775 402.40200806]
[85.43739319 410.39099121]
[96.72556305 420.31939697]
[106.27481842 431.93008423]
[113.83781433 444.92227173]
[119.21864319 458.95947266]
[122.27793884 473.67807007]
[122.93644714 488.69680786]
[121.17711639 503.62667847]
[117.04551697 518.08093262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[40 171]
[41 170]
[42 169]
[43 168]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[57 161]
[58 144]
[59 143]
[60 142]
[61 141]
[78 140]
[79 139]
[80 138]
[81 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
