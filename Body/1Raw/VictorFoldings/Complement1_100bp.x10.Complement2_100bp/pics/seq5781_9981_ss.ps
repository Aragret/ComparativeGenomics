%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[236.18081665 495.15374756]
[247.04095459 484.73532104]
[259.72512817 476.63604736]
[254.26976013 462.66323853]
[248.81440735 448.69046021]
[243.35905457 434.71765137]
[237.90368652 420.74487305]
[232.44833374 406.77206421]
[226.99298096 392.79925537]
[221.53762817 378.82647705]
[216.08226013 364.85366821]
[210.62690735 350.88085938]
[205.17155457 336.90808105]
[199.61231995 322.97628784]
[193.94953918 309.08624268]
[188.28675842 295.19622803]
[182.52072144 281.34872437]
[176.65176392 267.54455566]
[170.78279114 253.74038696]
[164.30329895 240.21203613]
[157.22619629 226.98651123]
[151.29873657 222.57209778]
[150.14384460 213.51097107]
[143.26443481 200.18153381]
[136.38500977 186.85211182]
[122.16171265 182.58206177]
[114.99513245 169.16212463]
[119.57038116 154.27236938]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[74.53369904 83.88063812]
[75.57221222 69.02227783]
[68.69279480 55.69285202]
[65.80567169 70.41238403]
[55.49596024 81.30778503]
[40.95823669 85.00300598]
[26.69717789 80.35304260]
[17.13172531 68.79872894]
[15.22583771 53.92030334]
[21.57007599 40.32800293]
[34.19860840 32.23355103]
[49.19834900 32.14509964]
[61.92163467 40.09025192]
[56.88471603 25.96122360]
[51.84780121 11.83219433]
[46.81088638 -2.29683566]
[40.63511658 -15.96650600]
[33.36188889 -29.08519936]
[26.08865738 -42.20389557]
[18.81542778 -55.32258987]
[11.54219913 -68.44128418]
[4.26896906 -81.55997467]
[-3.00426030 -94.67867279]
[-7.47969580 -97.36521912]
[-10.20460987 -101.12396240]
[-11.06373119 -105.10855103]
[-10.29439449 -108.54955292]
[-16.97458839 -121.97992706]
[-23.65478325 -135.41030884]
[-39.23249054 -145.22949219]
[-37.46199799 -162.68894958]
[-44.34140778 -176.01837158]
[-51.22082138 -189.34780884]
[-58.10023499 -202.67723083]
[-72.26415253 -197.66752625]
[-86.97831726 -194.63320923]
[-101.96861267 -193.63079834]
[-116.95578003 -194.67897034]
[-131.66061401 -197.75820923]
[-145.80917358 -202.81112671]
[-159.13786316 -209.74362183]
[-171.39842224 -218.42651367]
[-182.36239624 -228.69807434]
[-191.82556152 -240.36694336]
[-199.61161804 -253.21571350]
[-205.57550049 -267.00506592]
[-209.60614014 -281.47805786]
[-211.62840271 -296.36511230]
[-211.60466003 -311.38885498]
[-209.53532410 -326.26943970]
[-205.45896912 -340.72961426]
[-199.45150757 -354.50003052]
[-191.62487793 -367.32412720]
[-182.12486267 -378.96301270]
[-171.12846375 -389.19985962]
[-158.84053040 -397.84396362]
[-145.48997498 -404.73428345]
[-131.32551575 -409.74243164]
[-116.61102295 -412.77517700]
[-101.62062073 -413.77597046]
[-86.63357544 -412.72616577]
[-71.92907715 -409.64535522]
[-57.78106308 -404.59088135]
[-44.45310974 -397.65695190]
[-32.19350433 -388.97271729]
[-21.23063469 -378.69998169]
[-11.76873493 -367.03009033]
[-3.98407340 -354.18048096]
[1.97832644 -340.39050293]
[6.00738859 -325.91705322]
[8.02805424 -311.02978516]
[8.00267982 -296.00604248]
[5.93173742 -281.12567139]
[1.85380793 -266.66592407]
[-4.15513945 -252.89617920]
[-11.98316193 -240.07292175]
[-21.48442650 -228.43507385]
[-32.48193359 -218.19941711]
[-44.77080536 -209.55664062]
[-37.89139175 -196.22721863]
[-31.01198006 -182.89778137]
[-24.13256645 -169.56835938]
[-12.70795250 -165.59283447]
[-6.86751175 -154.54417419]
[-10.22440815 -142.09049988]
[-3.54421306 -128.66012573]
[3.13598156 -115.22974396]
[10.11443424 -101.95189667]
[17.38766289 -88.83320618]
[24.66089249 -75.71450806]
[31.93412209 -62.59581757]
[39.20735168 -49.47712326]
[46.48057938 -36.35842896]
[53.75381088 -23.23973465]
[55.14418793 -38.17515945]
[63.23859406 -50.80372238]
[76.22871399 -58.30417252]
[91.21252441 -59.00088882]
[104.84260559 -52.73822403]
[114.07395935 -40.91527557]
[116.84427643 -26.17331696]
[112.53466034 -11.80574036]
[102.10790253 -1.02229989]
[87.89334869 3.76795697]
[73.06658173 1.49487448]
[60.93991470 -7.33375168]
[65.97682953 6.79527760]
[71.01374817 20.92430687]
[76.05066681 35.05333710]
[82.02222443 48.81343842]
[88.90164185 62.14286804]
[101.61430359 69.90415192]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[132.89981079 147.39295959]
[147.68698120 152.28962708]
[154.47380066 165.90556335]
[149.71444702 179.97270203]
[156.59385681 193.30212402]
[163.47326660 206.63156128]
[170.45172119 219.90940857]
[177.52882385 233.13493347]
[182.90168762 219.13020325]
[196.54702759 212.90084839]
[210.64816284 218.01531982]
[217.12733459 231.54382324]
[212.27297974 245.73661804]
[198.86587524 252.46340942]
[184.58697510 247.87141418]
[190.45593262 261.67559814]
[196.32489014 275.47976685]
[202.56251526 282.15286255]
[202.17677307 289.53344727]
[207.83956909 303.42346191]
[213.50234985 317.31347656]
[219.63992310 324.07870483]
[219.14434814 331.45272827]
[224.59970093 345.42550659]
[230.05506897 359.39831543]
[235.51042175 373.37109375]
[240.96577454 387.34390259]
[246.42112732 401.31671143]
[251.87649536 415.28948975]
[257.33184814 429.26229858]
[262.78720093 443.23510742]
[268.24255371 457.20788574]
[273.69790649 471.18069458]
[288.51440430 468.54296875]
[303.56082153 468.84677124]
[318.25875854 472.08047485]
[332.04330444 478.11972046]
[344.38461304 486.73242188]
[354.80828857 497.58749390]
[362.91372681 510.26773071]
[368.38934326 524.28570557]
[371.02465820 539.10260010]
[370.71841431 554.14898682]
[367.48236084 568.84637451]
[361.44088745 582.62994385]
[352.82620239 594.96984863]
[341.96942139 605.39178467]
[329.28787231 613.49517822]
[315.26901245 618.96850586]
[300.45166016 621.60144043]
[285.40536499 621.29278564]
[270.70846558 618.05432129]
[256.92587280 612.01062012]
[244.58737183 603.39392090]
[234.16719055 592.53546143]
[226.06585693 579.85260010]
[220.59478760 565.83288574]
[217.96424866 551.01507568]
[218.27537537 535.96887207]
[221.51618958 521.27246094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 171]
[15 170]
[16 169]
[17 167]
[18 166]
[19 165]
[20 158]
[21 157]
[23 156]
[24 155]
[25 154]
[28 151]
[29 150]
[30 149]
[31 148]
[33 146]
[35 144]
[36 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[60 120]
[61 119]
[62 118]
[64 115]
[65 114]
[66 113]
[67 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
