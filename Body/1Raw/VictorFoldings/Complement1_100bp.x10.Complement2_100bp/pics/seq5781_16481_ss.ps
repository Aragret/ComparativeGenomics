%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[134.71354675 687.68969727]
[122.59120941 678.84539795]
[111.09359741 669.20288086]
[100.27318573 658.80621338]
[90.17933655 647.70269775]
[80.85811615 635.94311523]
[72.35204315 623.58111572]
[64.69994354 610.67303467]
[57.93672943 597.27783203]
[52.09325027 583.45660400]
[47.19617462 569.27239990]
[43.26784897 554.78991699]
[40.32619476 540.07531738]
[38.38463593 525.19567871]
[37.45203018 510.21893311]
[37.53263474 495.21340942]
[38.62607956 480.24752808]
[40.72737503 465.38961792]
[43.82693481 450.70745850]
[47.91061401 436.26806641]
[52.95978546 422.13726807]
[58.95140457 408.37960815]
[65.85813141 395.05783081]
[73.64846039 382.23269653]
[82.28684235 369.96276855]
[91.73385620 358.30398560]
[101.94640350 347.30960083]
[112.87788391 337.02972412]
[124.47841644 327.51129150]
[136.69508362 318.79772949]
[149.47212219 310.92880249]
[162.75123596 303.94039917]
[156.67739868 290.22512817]
[144.44923401 281.72094727]
[145.93585205 265.96972656]
[139.86201477 252.25445557]
[133.78819275 238.53918457]
[127.38858032 252.10551453]
[113.31772614 257.30270386]
[99.63603973 251.15361023]
[94.18101501 237.18067932]
[100.07753754 223.38825989]
[113.94781494 217.67726135]
[127.84564209 223.31855774]
[123.01963806 209.11610413]
[118.19364166 194.91365051]
[109.32299042 207.00956726]
[94.34220123 207.76847839]
[84.29455566 196.63093567]
[86.58680725 181.80712891]
[99.52919769 174.22459412]
[113.57991791 179.47174072]
[109.82361603 164.94967651]
[106.06731415 150.42761230]
[102.20301056 135.93392944]
[98.23091125 121.46939850]
[94.25881958 107.00487518]
[91.21127319 104.64164734]
[89.22020721 100.94657898]
[88.85706329 96.42163086]
[90.44779205 91.80541992]
[87.12553406 77.17795563]
[83.80327606 62.55049896]
[80.48101807 47.92303848]
[65.51059723 38.87285614]
[61.79059219 22.12542534]
[71.14617920 8.15002441]
[67.60650635 -6.42635107]
[64.06683350 -21.00272560]
[60.52716064 -35.57910156]
[56.92290497 -39.35487366]
[55.29060364 -43.70100784]
[55.51729965 -47.77085495]
[57.17036819 -50.88528824]
[54.28509521 -65.60517883]
[51.39982605 -80.32507324]
[47.34948349 -85.55061340]
[46.65101242 -91.19057465]
[48.65464783 -95.52583313]
[46.20892334 -110.32510376]
[43.76319504 -125.12437439]
[41.31746674 -139.92364502]
[38.87173843 -154.72291565]
[36.42601395 -169.52218628]
[28.52407837 -156.77230835]
[14.68109512 -150.99546814]
[0.06015260 -154.34629822]
[-9.88549805 -165.57501221]
[-11.44637585 -180.49359131]
[-4.04031229 -193.53775024]
[9.57041454 -199.84236145]
[24.30934143 -197.05595398]
[34.67972183 -186.21673584]
[34.00993729 -201.20176697]
[33.34015274 -216.18681335]
[32.67036438 -231.17184448]
[32.00057983 -246.15689087]
[17.81019592 -251.68435669]
[7.09946823 -262.51025391]
[1.72409844 -276.75894165]
[2.61540127 -291.96176147]
[9.61895275 -305.48471069]
[21.52134514 -314.98486328]
[36.26041794 -318.81625366]
[51.28253555 -316.31509399]
[63.98503113 -307.91470337]
[72.16711426 -295.07049561]
[74.41118622 -280.00784302]
[70.32846069 -265.33639526]
[60.62628174 -253.59809875]
[46.98561859 -246.82667542]
[47.65540314 -231.84164429]
[48.32519150 -216.85659790]
[48.99497604 -201.87155151]
[49.66476059 -186.88652039]
[51.22528458 -171.96791077]
[53.67100906 -157.16864014]
[56.11673737 -142.36936951]
[58.56246567 -127.57010651]
[61.00819397 -112.77083588]
[63.45391846 -97.97155762]
[66.11971283 -83.21034241]
[69.00498962 -68.49045563]
[71.89025879 -53.77056122]
[75.10353851 -39.11877441]
[78.64320374 -24.54239845]
[82.18287659 -9.96602345]
[85.72254944 4.61035204]
[97.55625153 9.70868397]
[104.39488983 20.85835457]
[103.55077362 34.10591888]
[95.10847473 44.60078049]
[98.43073273 59.22824097]
[101.75299072 73.85569763]
[105.07525635 88.48316193]
[108.72334290 103.03278351]
[112.69543457 117.49730682]
[116.66753387 131.96182251]
[121.95770264 139.40843201]
[120.58937073 146.67131042]
[124.34567261 161.19337463]
[128.10197449 175.71543884]
[132.39610291 190.08764648]
[137.22209167 204.29010010]
[142.04809570 218.49255371]
[147.50344849 232.46536255]
[153.57728577 246.18061829]
[159.65112305 259.89590454]
[172.31372070 269.38110352]
[170.39266968 284.15127563]
[176.46650696 297.86654663]
[190.56587219 292.73034668]
[204.97982788 288.55767822]
[219.64259338 285.36764526]
[234.48725891 283.17477417]
[249.44610596 281.98904419]
[264.45086670 281.81591797]
[279.43307495 282.65615845]
[294.32440186 284.50592041]
[309.05688477 287.35675049]
[323.56326294 291.19570923]
[337.77740479 296.00521851]
[351.63439941 301.76333618]
[365.07107544 308.44384766]
[378.02609253 316.01617432]
[390.44033813 324.44586182]
[402.25717163 333.69439697]
[413.42269897 343.71957397]
[423.88592529 354.47567749]
[433.59915161 365.91360474]
[442.51803589 377.98117065]
[450.60189819 390.62332153]
[457.81384277 403.78237915]
[464.12097168 417.39828491]
[469.49450684 431.40893555]
[473.90991211 445.75039673]
[477.34704590 460.35720825]
[479.79025269 475.16275024]
[481.22833252 490.09942627]
[481.65478516 505.09912109]
[481.06759644 520.09338379]
[479.46951294 535.01385498]
[476.86779785 549.79229736]
[473.27432251 564.36145020]
[468.70547485 578.65478516]
[463.18209839 592.60705566]
[456.72943115 606.15454102]
[449.37686157 619.23559570]
[441.15798950 631.79040527]
[432.11029053 643.76165771]
[422.27505493 655.09484863]
[411.69714355 665.73822021]
[400.42483521 675.64312744]
[388.50955200 684.76452637]
[376.00567627 693.06066895]
[362.97024536 700.49371338]
[349.46276855 707.02984619]
[335.54483032 712.63916016]
[321.27996826 717.29602051]
[306.73327637 720.97930908]
[291.97109985 723.67211914]
[277.06082153 725.36218262]
[262.07046509 726.04180908]
[247.06840515 725.70788574]
[232.12312317 724.36187744]
[217.30281067 722.01007080]
[202.67507935 718.66308594]
[188.30667114 714.33618164]
[174.26315308 709.04913330]
[160.60861206 702.82611084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 151]
[33 150]
[35 148]
[36 147]
[37 146]
[44 145]
[45 144]
[46 143]
[52 142]
[53 141]
[54 140]
[55 138]
[56 137]
[57 136]
[61 135]
[62 134]
[63 133]
[64 132]
[67 128]
[68 127]
[69 126]
[70 125]
[74 124]
[75 123]
[76 122]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
