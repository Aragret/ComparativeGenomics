%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[76.38785553 773.96673584]
[61.44322968 772.59527588]
[46.64744186 770.08380127]
[32.08731842 766.44708252]
[17.84830666 761.70648193]
[4.01396513 755.88983154]
[-9.33451653 749.03118896]
[-22.11880493 741.17083740]
[-34.26387405 732.35498047]
[-45.69845581 722.63525391]
[-56.35544205 712.06872559]
[-66.17229462 700.71740723]
[-75.09140015 688.64794922]
[-83.06042480 675.93109131]
[-90.03259277 662.64160156]
[-95.96699524 648.85736084]
[-100.82880402 634.65924072]
[-104.58948517 620.13067627]
[-107.22697449 605.35681152]
[-108.72579193 590.42443848]
[-109.07714081 575.42114258]
[-108.27895355 560.43493652]
[-106.33592987 545.55383301]
[-103.25946045 530.86511230]
[-99.06759644 516.45501709]
[-93.78495026 502.40808105]
[-87.44251251 488.80676270]
[-80.07750702 475.73083496]
[-71.73315430 463.25708008]
[-62.45842743 451.45867920]
[-52.30774689 440.40487671]
[-41.34068680 430.16055298]
[-29.62160492 420.78579712]
[-17.21927643 412.33566284]
[-4.20648289 404.85971069]
[9.34041023 398.40179443]
[23.34190369 392.99987793]
[37.71583176 388.68560791]
[52.37783813 385.48431396]
[67.24188232 383.41476440]
[82.22073364 382.48913574]
[82.44406128 367.49081421]
[82.66738892 352.49246216]
[82.89071655 337.49414062]
[83.11404419 322.49578857]
[83.33737183 307.49746704]
[83.56069946 292.49911499]
[83.78402710 277.50079346]
[76.23707581 264.65972900]
[84.17897797 250.97628784]
[73.99905396 243.07699585]
[70.17041779 230.57005310]
[74.30509186 217.95597839]
[85.10652161 209.90963745]
[85.55313110 194.91629028]
[85.99973297 179.92294312]
[78.64480591 166.97093201]
[86.78955841 153.40725708]
[75.15762329 162.87815857]
[60.22224426 161.48733521]
[50.53907776 150.03149414]
[51.65508652 135.07305908]
[62.93096542 125.18092346]
[77.90737915 126.02172852]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.92288208 47.66311646]
[91.66326141 33.13288116]
[100.68265533 21.27961922]
[102.24317932 6.36101484]
[88.77363586 2.05395317]
[76.41506958 -4.80892849]
[65.64662933 -13.95923328]
[56.88536453 -25.03992271]
[50.47006607 -37.61925125]
[46.64816666 -51.20758438]
[45.56619644 -65.27646637]
[47.26417542 -79.27914429]
[51.67411804 -92.67186737]
[58.62277603 -104.93495178]
[67.83843231 -115.59295654]
[78.96150970 -124.23315430]
[91.55863953 -130.52146912]
[105.13950348 -134.21539307]
[119.17595673 -135.17338562]
[121.17996979 -150.03890991]
[123.18398285 -164.90444946]
[125.18799591 -179.76997375]
[119.36377716 -194.48013306]
[128.73208618 -206.05960083]
[130.73609924 -220.92512512]
[124.91188049 -235.63529968]
[134.28019714 -247.21476746]
[120.20973206 -252.61094666]
[107.76332092 -261.10702515]
[97.61218262 -272.24487305]
[90.30376434 -285.42376709]
[86.23218536 -299.93304443]
[85.61703491 -314.99020386]
[88.49147797 -329.78326416]
[94.70050049 -343.51443481]
[103.90925598 -355.44317627]
[115.62113953 -364.92626953]
[129.20452881 -371.45220947]
[143.92689514 -374.66912842]
[158.99429321 -374.40353394]
[173.59413147 -370.66970825]
[186.93907166 -363.66906738]
[198.30943298 -353.77908325]
[207.09204102 -341.53317261]
[212.81324768 -327.59170532]
[215.16452026 -312.70654297]
[214.01905823 -297.68041992]
[209.43862915 -283.32363892]
[201.67025757 -270.41052246]
[191.13287354 -259.63739014]
[178.39474487 -251.58525085]
[164.14283752 -246.68833923]
[149.14572144 -245.21075439]
[155.11328125 -231.56385803]
[145.60163879 -218.92111206]
[143.59762573 -204.05558777]
[149.56518555 -190.40870667]
[140.05352783 -177.76596069]
[138.04951477 -162.90043640]
[136.04550171 -148.03489685]
[134.04148865 -133.16937256]
[148.98326111 -127.73200226]
[162.35632324 -119.11824036]
[173.49551392 -107.75299835]
[181.84596252 -94.19812775]
[186.99078369 -79.12464905]
[188.67189026 -63.27954483]
[186.80288696 -47.44871902]
[181.47355652 -32.41804504]
[172.94551086 -18.93433762]
[161.63941956 -7.66824055]
[148.11416626 0.81911087]
[133.03927612 6.10405397]
[117.16178894 7.92153788]
[115.60126495 22.84014320]
[121.97249603 36.30330276]
[112.84148407 49.22364044]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.78290558 153.85386658]
[109.10589600 167.87828064]
[100.99308777 180.36953735]
[100.54647827 195.36289978]
[100.09987640 210.35624695]
[112.32695007 222.86695862]
[111.73452759 240.01232910]
[99.17732239 251.19961548]
[106.70829773 265.11346436]
[98.78236389 277.72412109]
[98.55903625 292.72244263]
[98.33570862 307.72079468]
[98.11238098 322.71911621]
[97.88905334 337.71746826]
[97.66572571 352.71578979]
[97.44239807 367.71414185]
[97.21907043 382.71246338]
[112.16371918 384.08364868]
[126.95955658 386.59484863]
[141.51974487 390.23126221]
[155.75885010 394.97158813]
[169.59330750 400.78799438]
[182.94190979 407.64636230]
[195.72634888 415.50646973]
[207.87159729 424.32211304]
[219.30635071 434.04162598]
[229.96354675 444.60797119]
[239.78060913 455.95907593]
[248.69993591 468.02838135]
[256.66921997 480.74505615]
[263.64163208 494.03445435]
[269.57629395 507.81860352]
[274.43835449 522.01660156]
[278.19934082 536.54510498]
[280.83709717 551.31890869]
[282.33618164 566.25128174]
[282.68783569 581.25457764]
[281.88992310 596.24078369]
[279.94717407 611.12188721]
[276.87100220 625.81066895]
[272.67941284 640.22082520]
[267.39703369 654.26788330]
[261.05484009 667.86932373]
[253.69009399 680.94537354]
[245.34597778 693.41931152]
[236.07147217 705.21789551]
[225.92098999 716.27185059]
[214.95413208 726.51641846]
[203.23522949 735.89135742]
[190.83305359 744.34173584]
[177.82040405 751.81793213]
[164.27363586 758.27612305]
[150.27224731 763.67834473]
[135.89839172 767.99285889]
[121.23645020 771.19445801]
[106.37245178 773.26422119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[48 164]
[50 162]
[54 159]
[55 158]
[56 157]
[58 155]
[65 154]
[66 153]
[67 152]
[68 150]
[69 149]
[70 148]
[71 147]
[73 145]
[74 144]
[89 131]
[90 130]
[91 129]
[92 128]
[94 126]
[95 125]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
