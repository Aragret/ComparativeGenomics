%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[197.35714722 464.13330078]
[193.81747437 449.55691528]
[190.27780151 434.98056030]
[186.73812866 420.40417480]
[182.55111694 406.00039673]
[177.72512817 391.79794312]
[172.89912415 377.59548950]
[168.07312012 363.39303589]
[165.62112427 362.03442383]
[163.55952454 359.62271118]
[162.29217529 356.30166626]
[162.16339111 352.35858154]
[163.41006470 348.19927979]
[159.43795776 333.73477173]
[155.46586609 319.27023315]
[139.73666382 315.56829834]
[127.95278931 304.37469482]
[123.39574432 288.67596436]
[127.40025330 272.73046875]
[138.96517944 260.91333008]
[134.77816772 246.50955200]
[130.59115601 232.10577393]
[119.60877991 222.04412842]
[123.18643951 206.63273621]
[118.99942780 192.22895813]
[105.86308289 185.30278015]
[101.41167450 170.75492859]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[84.67156219 76.13707733]
[79.42484283 62.08460999]
[74.17812347 48.03213882]
[62.10253906 37.81006622]
[64.89932251 23.18039513]
[59.65260696 9.12792301]
[48.26366806 3.07359409]
[44.18296432 -8.73875618]
[49.08257675 -19.79860878]
[44.04566193 -33.92763901]
[32.12360382 -44.32836533]
[35.13789368 -58.91477585]
[23.21583748 -69.31549835]
[26.23012733 -83.90190887]
[21.19321060 -98.03093719]
[16.15629387 -112.15997314]
[12.75052166 -114.85342407]
[10.59571457 -118.15816498]
[9.73043442 -121.60587311]
[10.03718281 -124.76380157]
[11.26753235 -127.28260803]
[7.08052111 -141.68638611]
[2.89351010 -156.09017944]
[-1.29350126 -170.49395752]
[-5.48051262 -184.89773560]
[-20.18583488 -181.89668274]
[-35.08684158 -180.10424805]
[-50.08436584 -179.53236389]
[-65.07859802 -180.18481445]
[-79.96976471 -182.05728149]
[-94.65874481 -185.13729858]
[-109.04780579 -189.40435791]
[-123.04117584 -194.83006287]
[-136.54573059 -201.37832642]
[-149.47161865 -209.00553894]
[-161.73278809 -217.66096497]
[-173.24765015 -227.28700256]
[-183.93959045 -237.81959534]
[-193.73744202 -249.18861389]
[-202.57600403 -261.31845093]
[-210.39645386 -274.12832642]
[-217.14675903 -287.53305054]
[-222.78196716 -301.44335938]
[-227.26461792 -315.76672363]
[-230.56483459 -330.40780640]
[-232.66069031 -345.26919556]
[-233.53822327 -360.25192261]
[-233.19158936 -375.25634766]
[-231.62310791 -390.18258667]
[-228.84320068 -404.93133545]
[-224.87037659 -419.40438843]
[-219.73107910 -433.50546265]
[-213.45950317 -447.14071655]
[-206.09739685 -460.21939087]
[-197.69374084 -472.65447998]
[-188.30445862 -484.36322021]
[-177.99205017 -495.26766968]
[-166.82513428 -505.29525757]
[-154.87802124 -514.37927246]
[-142.23022461 -522.45928955]
[-128.96592712 -529.48144531]
[-115.17337036 -535.39904785]
[-100.94437408 -540.17279053]
[-86.37361908 -543.77081299]
[-71.55806732 -546.16925049]
[-56.59632492 -547.35205078]
[-41.58795547 -547.31140137]
[-26.63284111 -546.04754639]
[-11.83050632 -543.56890869]
[2.72054195 -539.89196777]
[16.92346573 -535.04119873]
[30.68374634 -529.04888916]
[43.90980911 -521.95495605]
[56.51363373 -513.80657959]
[68.41134644 -504.65795898]
[79.52377319 -494.57000732]
[89.77694702 -483.60983276]
[99.10264587 -471.85040283]
[107.43880463 -459.36996460]
[114.72994232 -446.25158691]
[120.92754364 -432.58255005]
[125.99036407 -418.45382690]
[129.88470459 -403.95947266]
[132.58465576 -389.19589233]
[134.07225037 -374.26135254]
[134.33757019 -359.25527954]
[133.37887573 -344.27752686]
[131.20252991 -329.42773438]
[127.82301331 -314.80474854]
[123.26283264 -300.50585938]
[117.55233002 -286.62628174]
[110.72949982 -273.25833130]
[102.83975220 -260.49102783]
[93.93560028 -248.40925598]
[84.07628632 -237.09347534]
[73.32743835 -226.61898804]
[61.76058197 -217.05548096]
[49.45269012 -208.46661377]
[36.48567581 -200.90954590]
[22.94583511 -194.43455505]
[8.92326927 -189.08474731]
[13.11028099 -174.68096924]
[17.29729271 -160.27717590]
[21.48430252 -145.87339783]
[25.67131424 -131.46961975]
[30.28532410 -117.19688416]
[35.32223892 -103.06785583]
[40.35915756 -88.93882751]
[51.92094040 -79.54869843]
[49.26692200 -63.95169067]
[60.82870865 -54.56156540]
[58.17469025 -38.96455383]
[63.21160889 -24.83552551]
[77.17317200 -14.20342445]
[73.70507812 3.88120508]
[78.95179749 17.93367577]
[90.65209961 27.15062141]
[88.23059845 42.78541946]
[93.47731781 56.83789062]
[98.72403717 70.89036560]
[107.23061371 58.53568649]
[122.18216705 57.33107376]
[132.55696106 68.16452789]
[130.70709229 83.05001831]
[117.99620056 91.01452637]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[136.73849487 160.48583984]
[140.77952576 175.15296936]
[133.40321350 188.04194641]
[137.59022522 202.44572449]
[148.87208557 213.53762817]
[144.99493408 227.91876221]
[149.18194580 242.32254028]
[153.36895752 256.72631836]
[167.10838318 259.35144043]
[178.32283020 267.60079956]
[184.85758972 279.81863403]
[185.48765564 293.59368896]
[180.14700317 306.23513794]
[169.93038940 315.29812622]
[173.90248108 329.76266479]
[177.87458801 344.22717285]
[182.27558899 358.56704712]
[187.10157776 372.76950073]
[191.92758179 386.97195435]
[196.75357056 401.17440796]
[204.33798218 388.23312378]
[218.81640625 384.31198120]
[231.89494324 391.65719604]
[236.08160400 406.06106567]
[228.97808838 419.27243042]
[214.65362549 423.72320557]
[201.31451416 416.86450195]
[204.85417175 431.44088745]
[208.39384460 446.01724243]
[211.93351746 460.59362793]
[227.01272583 461.97067261]
[240.82675171 468.17160034]
[251.87715149 478.52377319]
[258.96527100 491.90426636]
[261.32220459 506.86166382]
[258.69235229 521.77349854]
[251.36094666 535.02221680]
[240.12322998 545.17077637]
[226.19821167 551.11822510]
[211.09635925 552.21954346]
[196.45581055 548.35516357]
[183.86466980 539.94433594]
[174.68873596 527.89941406]
[169.92332458 513.52685547]
[170.08535767 498.38580322]
[175.15727234 484.11853027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[5 184]
[6 183]
[7 182]
[8 181]
[13 180]
[14 179]
[15 178]
[20 172]
[21 171]
[22 170]
[24 168]
[25 167]
[28 164]
[29 163]
[30 162]
[31 161]
[33 159]
[34 153]
[35 152]
[36 151]
[38 149]
[39 148]
[42 146]
[43 145]
[45 143]
[47 141]
[48 140]
[49 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
