%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[8.63686180 744.77642822]
[-4.70256090 751.64990234]
[-18.48896027 757.57611084]
[-32.65517044 762.52618408]
[-47.13217163 766.47601318]
[-61.84943390 769.40637207]
[-76.73526001 771.30291748]
[-91.71711731 772.15649414]
[-106.72203064 771.96289062]
[-121.67687988 770.72308350]
[-136.50881958 768.44305420]
[-151.14556885 765.13397217]
[-165.51583862 760.81195068]
[-179.54962158 755.49798584]
[-193.17852783 749.21807861]
[-206.33616638 742.00274658]
[-218.95843506 733.88714600]
[-230.98384094 724.91076660]
[-242.35379028 715.11749268]
[-253.01289368 704.55487061]
[-262.90921021 693.27447510]
[-271.99453735 681.33123779]
[-280.22460938 668.78332520]
[-287.55935669 655.69183350]
[-293.96298218 642.12060547]
[-299.40435791 628.13574219]
[-303.85690308 613.80535889]
[-307.29898071 599.19934082]
[-309.71380615 584.38873291]
[-311.08959961 569.44580078]
[-311.41967773 554.44323730]
[-310.70242310 539.45422363]
[-308.94131470 524.55181885]
[-306.14495850 509.80847168]
[-302.32696533 495.29614258]
[-297.50595093 481.08551025]
[-291.70538330 467.24578857]
[-284.95352173 453.84439087]
[-277.28329468 440.94662476]
[-268.73202515 428.61535645]
[-259.34140015 416.91061401]
[-249.15716553 405.88943481]
[-238.22894287 395.60552979]
[-226.60997009 386.10900879]
[-214.35684204 377.44610596]
[-201.52928162 369.65905762]
[-188.18975830 362.78579712]
[-174.40327454 356.85977173]
[-160.23698425 351.90991211]
[-145.75993347 347.96029663]
[-131.04263306 345.03015137]
[-116.15677643 343.13381958]
[-101.17490387 342.28045654]
[-86.16999817 342.47427368]
[-71.21516418 343.71432495]
[-56.38326263 345.99453735]
[-41.74655151 349.30383301]
[-27.37633896 353.62606812]
[-13.34263992 358.94018555]
[-7.06527901 345.31689453]
[-0.78791821 331.69357300]
[5.48944235 318.07025146]
[4.70533514 313.35919189]
[6.87237310 308.10552979]
[12.16187859 304.13906860]
[18.84207344 290.70870972]
[25.52226830 277.27832031]
[32.20246124 263.84793091]
[38.88265610 250.41757202]
[45.56285095 236.98719788]
[52.24304581 223.55682373]
[58.92324066 210.12643433]
[59.08752060 202.73760986]
[65.80417633 196.54695129]
[72.68359375 183.21751404]
[77.72050476 169.08848572]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.17713165 57.11341476]
[103.84292603 42.35219955]
[106.50872040 27.59098053]
[108.84420776 12.77391243]
[110.84822083 -2.09161568]
[112.85223389 -16.95714378]
[114.85625458 -31.82267189]
[116.86026764 -46.68820190]
[117.86452484 -61.65454483]
[117.86452484 -76.65454102]
[117.86452484 -91.65454102]
[117.86452484 -106.65454102]
[117.86452484 -121.65454102]
[103.47135162 -126.31198120]
[91.22304535 -135.19085693]
[82.31958008 -147.42127991]
[77.63321686 -161.80506897]
[77.62307739 -176.93301392]
[82.29016113 -191.32307434]
[91.17723083 -203.56541443]
[103.41362762 -212.46069336]
[117.80054474 -217.13742065]
[132.92849731 -217.13742065]
[147.31542969 -212.46069336]
[159.55181885 -203.56541443]
[168.43888855 -191.32307434]
[173.10597229 -176.93301392]
[173.09584045 -161.80506897]
[168.40946960 -147.42127991]
[159.50599670 -135.19085693]
[147.25769043 -126.31198120]
[132.86451721 -121.65454102]
[132.86451721 -106.65454102]
[132.86451721 -91.65454102]
[132.86451721 -76.65454102]
[132.86451721 -61.65454483]
[142.18089294 -73.41062164]
[156.33932495 -78.36427307]
[170.95269775 -74.98055267]
[181.49287415 -64.30794525]
[184.69387817 -49.65347672]
[179.56385803 -35.55798721]
[167.69238281 -26.38912201]
[152.75796509 -24.98795319]
[139.38819885 -31.78864861]
[131.72579956 -44.68418503]
[129.72178650 -29.81865883]
[127.71776581 -14.95312977]
[125.71375275 -0.08760197]
[123.70973969 14.77792645]
[125.54524994 17.78844643]
[126.01378632 21.83758545]
[124.64306641 26.27317047]
[121.26994324 30.25677681]
[118.60414124 45.01799393]
[115.93834686 59.77920914]
[117.87722015 64.14382172]
[117.09485626 69.77275848]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[92.39581299 172.19259644]
[101.99367523 160.66520691]
[114.65032959 152.61477661]
[129.15940857 148.80867004]
[144.13801575 149.60961914]
[158.15846252 154.94129944]
[169.88442993 164.29553223]
[178.19827271 176.78073120]
[182.30755615 191.20687866]
[181.82061768 206.19897461]
[176.78385925 220.32806396]
[167.67736816 232.24745178]
[155.36911011 240.82106018]
[141.03222656 245.23170471]
[126.03322601 245.05899048]
[111.80170441 240.31938171]
[99.69412994 231.46463013]
[90.86451721 219.33871460]
[86.15444946 205.09738159]
[86.01302338 190.09693909]
[79.13360596 203.42636108]
[72.35361481 216.80664062]
[65.67342377 230.23701477]
[58.99322891 243.66738892]
[52.31303406 257.09777832]
[45.63283920 270.52813721]
[38.95264435 283.95852661]
[32.27244949 297.38888550]
[25.59225464 310.81927490]
[19.11275864 324.34762573]
[12.83539772 337.97091675]
[6.55803728 351.59423828]
[0.28067654 365.21755981]
[13.43841934 372.43270874]
[26.06080437 380.54815674]
[38.08633423 389.52429199]
[49.45642471 399.31744385]
[60.11567688 409.87988281]
[70.01216125 421.16015625]
[79.09766388 433.10327148]
[87.32792664 445.65109253]
[94.66283417 458.74246216]
[101.06667328 472.31359863]
[106.50822449 486.29837036]
[110.96099854 500.62866211]
[114.40328217 515.23468018]
[116.81830597 530.04522705]
[118.19432068 544.98815918]
[118.52461243 559.99066162]
[117.80756378 574.97967529]
[116.04668427 589.88220215]
[113.25054169 604.62554932]
[109.43276215 619.13793945]
[104.61193848 633.34863281]
[98.81157684 647.18841553]
[92.05991364 660.58990479]
[84.38985443 673.48779297]
[75.83876801 685.81921387]
[66.44831085 697.52404785]
[56.26423645 708.54541016]
[45.33615875 718.82946777]
[33.71731567 728.32617188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 181]
[60 180]
[61 179]
[62 178]
[65 177]
[66 176]
[67 175]
[68 174]
[69 173]
[70 172]
[71 171]
[72 170]
[74 169]
[75 168]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[82 143]
[83 142]
[84 139]
[85 138]
[86 137]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
