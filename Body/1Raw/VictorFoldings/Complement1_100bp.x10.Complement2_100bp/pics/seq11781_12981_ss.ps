%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[72.76491547 576.00122070]
[59.87022400 583.68145752]
[46.38534164 590.27062988]
[32.40237808 595.72375488]
[18.01686096 600.00354004]
[3.32705331 603.08068848]
[-11.56669426 604.93432617]
[-26.56264114 605.55163574]
[-41.55834961 604.92852783]
[-56.45137787 603.06915283]
[-71.13999939 599.98632812]
[-85.52386475 595.70098877]
[-99.50471497 590.24249268]
[-112.98705292 583.64807129]
[-125.87877655 575.96282959]
[-138.09182739 567.23925781]
[-149.54275513 557.53692627]
[-160.15336609 546.92205811]
[-169.85115051 535.46728516]
[-178.56988525 523.25073242]
[-186.25000000 510.35598755]
[-192.83901978 496.87100220]
[-198.29196167 482.88800049]
[-202.57156372 468.50241089]
[-205.64857483 453.81256104]
[-207.50199890 438.91879272]
[-208.11915588 423.92285156]
[-207.49584961 408.92715454]
[-205.63632202 394.03414917]
[-202.55328369 379.34555054]
[-198.26779175 364.96176147]
[-192.80911255 350.98095703]
[-186.21455383 337.49868774]
[-178.52915955 324.60705566]
[-169.80541992 312.39413452]
[-160.10293579 300.94329834]
[-149.48797607 290.33282471]
[-138.03306580 280.63516235]
[-125.81644440 271.91659546]
[-112.92157745 264.23663330]
[-99.43653107 257.64776611]
[-85.45343781 252.19499207]
[-71.06781769 247.91557312]
[-56.37794113 244.83872986]
[-41.48414993 242.98548889]
[-26.48818779 242.36849976]
[-11.49249458 242.99198914]
[3.40049148 244.85169983]
[18.08903503 247.93490601]
[32.47279739 252.22056580]
[37.92815399 238.24777222]
[43.38351059 224.27497864]
[40.80485153 209.60528564]
[53.03129196 199.56413269]
[50.45262909 184.89443970]
[62.67906952 174.85328674]
[68.13442993 160.88049316]
[73.58978271 146.90769958]
[79.04514313 132.93490601]
[84.50049591 118.96210480]
[89.95585632 104.98930359]
[76.25355530 111.09233093]
[61.79989243 107.08088684]
[53.20288849 94.78896332]
[54.39297867 79.83624268]
[64.82607269 69.05892181]
[79.73229218 67.38424683]
[92.29672241 75.57785034]
[96.77499390 89.89557648]
[96.22854614 74.08380890]
[108.94120789 66.32253265]
[115.82061768 52.99310303]
[122.70003510 39.66367340]
[129.57945251 26.33424568]
[134.51103210 12.16810989]
[137.39631653 -2.55178142]
[140.28158569 -17.27167320]
[143.16685486 -31.99156380]
[144.61627197 -46.92137146]
[144.61627197 -61.92137146]
[144.61627197 -76.92137146]
[144.61627197 -91.92137146]
[144.61627197 -106.92137146]
[129.73222351 -108.96556854]
[115.26517487 -113.01750183]
[101.48463440 -119.00169373]
[88.64733124 -126.80665588]
[76.99241638 -136.28698730]
[66.73701477 -147.26608276]
[58.07217789 -159.53939819]
[51.15932465 -172.87829590]
[46.12723541 -187.03428650]
[43.06966019 -201.74363708]
[42.04355621 -216.73233032]
[43.06803894 -231.72113037]
[46.12402344 -246.43081665]
[51.15457916 -260.58734131]
[58.06598663 -273.92697144]
[66.72949982 -286.20123291]
[76.98371124 -297.18142700]
[88.63759613 -306.66302490]
[101.47405243 -314.46939087]
[115.25394440 -320.45507812]
[129.72055054 -324.50857544]
[144.60438538 -326.55438232]
[159.62815857 -326.55438232]
[174.51199341 -324.50857544]
[188.97860718 -320.45507812]
[202.75849915 -314.46939087]
[215.59495544 -306.66302490]
[227.24884033 -297.18142700]
[237.50305176 -286.20123291]
[246.16656494 -273.92697144]
[253.07797241 -260.58734131]
[258.10852051 -246.43081665]
[261.16452026 -231.72113037]
[262.18899536 -216.73233032]
[261.16290283 -201.74363708]
[258.10531616 -187.03428650]
[253.07322693 -172.87829590]
[246.16036987 -159.53939819]
[237.49552917 -147.26608276]
[227.24012756 -136.28698730]
[215.58522034 -126.80665588]
[202.74790955 -119.00169373]
[188.96737671 -113.01750183]
[174.50032043 -108.96556854]
[159.61627197 -106.92137146]
[159.61627197 -91.92137146]
[159.61627197 -76.92137146]
[159.61627197 -61.92137146]
[159.61627197 -46.92137146]
[167.46861267 -59.70185852]
[179.79411316 -68.25065613]
[194.51573181 -71.12713623]
[209.15260315 -67.84656525]
[221.23814392 -58.96178055]
[228.73576355 -45.97002029]
[230.38194275 -31.06062317]
[225.89930725 -16.74608994]
[216.04322815 -5.43866539]
[202.47465515 0.95614827]
[187.48011780 1.36071301]
[173.58644104 -4.29314709]
[163.13499451 -15.05265808]
[157.88674927 -29.10629082]
[155.00148010 -14.38640022]
[152.11619568 0.33349124]
[149.23092651 15.05338287]
[158.57232666 3.31718135]
[170.92404175 -5.19370031]
[185.21752930 -9.74298477]
[200.21627808 -9.93711472]
[214.62272644 -5.75929594]
[227.19058228 2.42904925]
[236.83259583 13.91954708]
[242.71464539 27.71815300]
[244.32786560 42.63115311]
[241.53269958 57.36841965]
[234.57095337 70.65503693]
[224.04489136 81.34156799]
[210.86512756 88.50353241]
[196.17182922 91.52134705]
[181.23612976 90.13394165]
[167.35011292 84.46133423]
[155.71505737 74.99427032]
[147.33749390 62.55173492]
[142.94219971 48.21014023]
[142.90887451 33.21365738]
[136.02946472 46.54308701]
[129.15005493 59.87251663]
[122.27063751 73.20194244]
[123.30914307 88.06030273]
[110.10442352 96.77499390]
[103.92864990 110.44466400]
[98.47329712 124.41745758]
[93.01793671 138.39025879]
[87.56258392 152.36305237]
[82.10722351 166.33584595]
[76.65187073 180.30865479]
[78.84032440 195.97776794]
[67.00408936 205.01948547]
[69.19254303 220.68861389]
[57.35631180 229.73033142]
[51.90095139 243.70312500]
[46.44559479 257.67593384]
[59.92809296 264.27001953]
[72.81999969 271.95495605]
[85.03324890 280.67825317]
[96.48442078 290.38031006]
[107.09527588 300.99490356]
[116.79334259 312.44946289]
[125.51235962 324.66577148]
[133.19277954 337.56036377]
[139.78213501 351.04516602]
[145.23539734 365.02807617]
[149.51533508 379.41354370]
[152.59271240 394.10330200]
[154.44648743 408.99703979]
[155.06399536 423.99298096]
[154.44104004 438.98867798]
[152.58187866 453.88174438]
[149.49919128 468.57040405]
[145.21403503 482.95431519]
[139.75570679 496.93524170]
[133.16146851 510.41766357]
[125.47637177 523.30944824]
[116.75292969 535.52264404]
[107.05071259 546.97369385]
[96.43601227 557.58441162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 186]
[51 185]
[52 184]
[54 182]
[56 180]
[57 179]
[58 178]
[59 177]
[60 176]
[61 175]
[69 174]
[71 172]
[72 171]
[73 170]
[74 169]
[75 149]
[76 148]
[77 147]
[78 146]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
