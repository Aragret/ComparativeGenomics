%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[309.64184570 326.46557617]
[315.24017334 312.53875732]
[322.04748535 299.16122437]
[330.01046753 286.43765259]
[318.04812622 277.38766479]
[306.08578491 268.33767700]
[294.12344360 259.28765869]
[282.16110229 250.23767090]
[270.19876099 241.18766785]
[258.99005127 250.22589111]
[245.93283081 256.31738281]
[231.78674316 259.10272217]
[217.37599182 258.41506958]
[203.54129028 254.28991699]
[191.09083557 246.96357727]
[180.75311279 236.85942078]
[173.13423157 224.56353760]
[168.68241882 210.79069519]
[167.66163635 196.34280396]
[170.13595581 182.06219482]
[175.96553040 168.78257751]
[164.13925171 159.55548096]
[152.31298828 150.32838440]
[140.48672485 141.10128784]
[128.66044617 131.87419128]
[116.83418274 122.64709473]
[105.00791168 113.41999054]
[91.18876648 111.29325867]
[85.76499176 98.40627289]
[67.47406006 96.27948761]
[61.52895355 79.76820374]
[49.56661606 70.71820068]
[39.66329575 81.99324036]
[28.96336174 92.51531219]
[17.52390862 102.22825623]
[5.40596962 111.08026123]
[-7.32579994 119.02408600]
[-20.60346985 126.01736450]
[-34.35619736 132.02276611]
[-48.51060486 137.00827026]
[-62.99117279 140.94725037]
[-77.72063446 143.81871033]
[-92.62041473 145.60731506]
[-107.61100006 146.30352783]
[-122.61241150 145.90364075]
[-137.54461670 144.40979004]
[-152.32794189 141.82992554]
[-166.88351440 138.17782593]
[-181.13366699 133.47297668]
[-195.00236511 127.74047852]
[-208.41561890 121.01091766]
[-221.30186462 113.32019806]
[-233.59234619 104.70935822]
[-245.22148132 95.22434235]
[-256.12722778 84.91574860]
[-266.25140381 73.83857727]
[-275.53997803 62.05194473]
[-283.94338989 49.61872482]
[-291.41680908 36.60526276]
[-297.92037964 23.08098793]
[-303.41940308 9.11805916]
[-307.88449097 -5.20902300]
[-311.29187012 -19.82381630]
[-313.62332153 -34.64834595]
[-314.86645508 -49.60351562]
[-315.01458740 -64.60952759]
[-314.06695557 -79.58632660]
[-312.02862549 -94.45399475]
[-308.91043091 -109.13320923]
[-304.72906494 -123.54564667]
[-299.50677490 -137.61442566]
[-293.27148438 -151.26445007]
[-286.05642700 -164.42292786]
[-277.90011597 -177.01962280]
[-268.84603882 -188.98733521]
[-258.94253540 -200.26222229]
[-248.24241638 -210.78410339]
[-236.80281067 -220.49685669]
[-224.68472290 -229.34866333]
[-211.95281982 -237.29229736]
[-198.67503357 -244.28533936]
[-184.92221069 -250.29052734]
[-170.76773071 -255.27578735]
[-156.28709412 -259.21453857]
[-141.55758667 -262.08575439]
[-126.65777588 -263.87411499]
[-111.66718292 -264.57009888]
[-96.66577148 -264.16995239]
[-81.73358917 -262.67584229]
[-66.95030212 -260.09573364]
[-52.39479446 -256.44338989]
[-38.14472198 -251.73832703]
[-24.27611542 -246.00559998]
[-10.86296940 -239.27581787]
[2.02314734 -231.58488464]
[14.31348324 -222.97384644]
[25.94246292 -213.48863220]
[36.84803772 -203.17985535]
[46.97202682 -192.10252380]
[56.26040649 -180.31573486]
[64.66362762 -167.88238525]
[72.13684082 -154.86878967]
[78.64019012 -141.34442139]
[84.13896179 -127.38139343]
[88.60382843 -113.05423737]
[92.01096344 -98.43939209]
[94.34218597 -83.61482239]
[95.58506012 -68.65963745]
[95.73295593 -53.65361786]
[94.78507996 -38.67683792]
[92.74649048 -23.80920219]
[89.62806702 -9.13003826]
[85.44644928 5.28233385]
[80.22394562 19.35101700]
[73.98842621 33.00094986]
[66.77314758 46.15930176]
[58.61661530 58.75586319]
[70.57895660 67.80586243]
[82.59998322 66.45629120]
[92.64006805 73.89809418]
[94.99208832 86.58000946]
[108.81123352 88.70674133]
[114.23500824 101.59372711]
[126.06127930 110.82082367]
[137.88754272 120.04792023]
[149.71382141 129.27502441]
[161.54008484 138.50212097]
[173.36636353 147.72921753]
[185.19262695 156.95631409]
[197.65646362 147.48811340]
[212.13348389 141.56681824]
[227.63790894 139.58938599]
[243.11563110 141.68446350]
[257.51586914 147.70401001]
[269.86245728 157.23373413]
[279.32009888 169.62161255]
[285.25082397 184.02252197]
[287.25695801 199.45587158]
[285.20797729 214.87236023]
[279.24877930 229.22532654]
[291.21112061 238.27532959]
[303.17343140 247.32533264]
[315.13577271 256.37533569]
[327.09811401 265.42532349]
[339.06045532 274.47534180]
[349.13861084 263.35202026]
[360.16043091 253.16293335]
[372.03964233 243.98783875]
[384.68325806 235.89855957]
[397.99234009 228.95838928]
[411.86270142 223.22163391]
[426.18582153 218.73321533]
[440.84957886 215.52824402]
[455.73919678 213.63180542]
[470.73818970 213.05876160]
[485.72909546 213.81358337]
[500.59466553 215.89035034]
[515.21850586 219.27282715]
[529.48614502 223.93453979]
[543.28594971 229.83898926]
[556.50994873 236.93998718]
[569.05456543 245.18193054]
[580.82171631 254.50033569]
[591.71917725 264.82226562]
[601.66180420 276.06692505]
[610.57165527 288.14633179]
[618.37908936 300.96591187]
[625.02294922 314.42538452]
[630.45123291 328.41934204]
[634.62145996 342.83831787]
[637.50103760 357.56942749]
[639.06738281 372.49740601]
[639.30828857 387.50537109]
[638.22180176 402.47592163]
[635.81646729 417.29187012]
[632.11108398 431.83721924]
[627.13464355 445.99819946]
[620.92614746 459.66390991]
[613.53417969 472.72747803]
[605.01654053 485.08657837]
[595.43994141 496.64453125]
[584.87933350 507.31085205]
[573.41729736 517.00207520]
[561.14361572 525.64239502]
[548.15435791 533.16406250]
[534.55108643 539.50836182]
[520.44042969 544.62554932]
[505.93264771 548.47558594]
[491.14141846 551.02838135]
[476.18243408 552.26385498]
[461.17279053 552.17242432]
[446.22994995 550.75482178]
[431.47091675 548.02209473]
[417.01113892 543.99566650]
[402.96377563 538.70697021]
[389.43884277 532.19750977]
[376.54214478 524.51812744]
[364.37460327 515.72900391]
[353.03149414 505.89886475]
[342.60156250 495.10470581]
[333.16644287 483.43096924]
[324.79995728 470.96902466]
[317.56762695 457.81640625]
[311.52606201 444.07608032]
[306.72250366 429.85556030]
[303.19454956 415.26614380]
[300.96984863 400.42199707]
[300.06576538 385.43933105]
[300.48944092 370.43539429]
[302.23748779 355.52761841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[21 129]
[22 128]
[23 127]
[24 126]
[25 125]
[26 124]
[27 123]
[29 121]
[31 118]
[32 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
