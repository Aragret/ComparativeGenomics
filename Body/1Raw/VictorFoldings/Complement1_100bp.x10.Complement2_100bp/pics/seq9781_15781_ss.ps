%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[139.03663635 655.62451172]
[126.45009613 647.45678711]
[114.36952209 638.55773926]
[102.83734894 628.95867920]
[91.89408112 618.69329834]
[81.57817078 607.79766846]
[71.92584229 596.31005859]
[62.97099686 584.27081299]
[54.74509811 571.72216797]
[47.27703476 558.70831299]
[40.59304047 545.27490234]
[34.71659088 531.46905518]
[29.66832924 517.33941650]
[25.46598625 502.93545532]
[22.12432671 488.30786133]
[19.65508461 473.50799561]
[18.06693459 458.58786011]
[17.36545563 443.59985352]
[17.55311012 428.59658813]
[18.62924194 413.63079834]
[20.59006691 398.75503540]
[23.42870140 384.02157593]
[27.13517189 369.48214722]
[31.69646072 355.18780518]
[37.09654617 341.18881226]
[43.31645584 327.53430176]
[50.33435059 314.27224731]
[58.12557220 301.44921875]
[66.66275787 289.11029053]
[75.91591644 277.29876709]
[85.85254669 266.05615234]
[96.43775177 255.42193604]
[107.63433838 245.43348694]
[119.40299225 236.12585449]
[131.70236206 227.53176880]
[144.48925781 219.68139648]
[137.41213989 206.45587158]
[130.33503723 193.23033142]
[123.25793457 180.00480652]
[116.18083191 166.77928162]
[109.10372162 153.55375671]
[108.70867157 168.54855347]
[102.99085999 182.41601562]
[92.70256805 193.33164978]
[79.19740295 199.85931396]
[64.25218964 201.14018250]
[49.83323288 197.00572205]
[37.83759689 187.99990845]
[29.84351158 175.30760193]
[26.90273666 160.59869385]
[29.40218353 145.80839539]
[37.01300430 132.88264465]
[48.73386765 123.52201080]
[63.02268982 118.95806122]
[77.99952698 119.79127502]
[91.69393158 125.91201019]
[102.30550385 136.51695251]
[98.33340454 122.05242157]
[94.36131287 107.58789825]
[90.50821686 104.02873993]
[88.92353058 98.56411743]
[90.49315643 92.63341522]
[86.95348358 78.05704498]
[83.41381073 63.48066711]
[79.87413788 48.90428925]
[76.22605133 34.35467148]
[72.46974945 19.83261108]
[68.71345520 5.31055212]
[53.86026001 7.50480843]
[38.85797501 8.10781097]
[23.87659073 7.11272621]
[9.08585453 4.53082943]
[-5.34664440 0.39137566]
[-19.25737381 -5.25873184]
[-32.48871231 -12.35547352]
[-44.89074326 -20.81843758]
[-56.32293701 -30.55173111]
[-66.65576172 -41.44506836]
[-75.77214050 -53.37502289]
[-83.56877136 -66.20641327]
[-89.95731354 -79.79386139]
[-94.86538696 -93.98339844]
[-98.23737335 -108.61425018]
[-100.03506470 -123.52063751]
[-100.23809052 -138.53366089]
[-98.84416199 -153.48321533]
[-95.86905670 -168.19989014]
[-91.34649658 -182.51696777]
[-85.32772064 -196.27220154]
[-77.88093567 -209.30973816]
[-69.09050751 -221.48185730]
[-59.05603790 -232.65063477]
[-47.89123535 -242.68951416]
[-35.72259903 -251.48477173]
[-22.68800735 -258.93670654]
[-8.93515778 -264.96093750]
[5.38012314 -269.48916626]
[20.09563065 -272.47009277]
[35.04462814 -273.86993408]
[50.05773163 -273.67285156]
[64.96482849 -271.88107300]
[79.59701538 -268.51486206]
[93.78849030 -263.61242676]
[107.37846375 -257.22924805]
[120.21294403 -249.43769836]
[132.14649963 -240.32604980]
[143.04393005 -229.99754333]
[152.78175354 -218.56919861]
[161.24961853 -206.17051697]
[168.35160828 -192.94198608]
[174.00721741 -179.03349304]
[178.15237427 -164.60263062]
[180.74012756 -149.81292725]
[181.74114990 -134.83193970]
[181.14408875 -119.82941437]
[178.95570374 -104.97534943]
[175.20082092 -90.43805695]
[169.92195129 -76.38225555]
[163.17892456 -62.96719742]
[155.04814148 -50.34489441]
[145.62173462 -38.65836334]
[135.00651550 -28.04002571]
[123.32275391 -18.61018944]
[110.70284271 -10.47570515]
[97.28976440 -3.72874188]
[83.23551178 1.55425119]
[86.99181366 16.07631111]
[90.74811554 30.59836960]
[95.46646881 36.28686142]
[94.45051575 45.36462021]
[97.99018860 59.94099426]
[101.52986145 74.51737213]
[105.06953430 89.09374237]
[108.82583618 103.61580658]
[112.79792786 118.08032990]
[116.77002716 132.54484558]
[122.32925415 146.47665405]
[129.40635681 159.70217896]
[136.48345947 172.92770386]
[143.56056213 186.15322876]
[150.63768005 199.37875366]
[157.71478271 212.60429382]
[171.34030151 206.32112122]
[185.31411743 200.85618591]
[199.58712769 196.22866821]
[214.10922241 192.45481873]
[228.82936096 189.54789734]
[243.69587708 187.51811218]
[258.65652466 186.37260437]
[273.65875244 186.11538696]
[288.64984131 186.74736023]
[303.57720947 188.26629639]
[318.38836670 190.66688538]
[333.03128052 193.94068909]
[347.45452881 198.07620239]
[361.60748291 203.05888367]
[375.44039917 208.87126160]
[388.90466309 215.49288940]
[401.95303345 222.90052795]
[414.53964233 231.06814575]
[426.62030029 239.96707153]
[438.15255737 249.56604004]
[449.09591675 259.83132935]
[459.41192627 270.72686768]
[469.06436157 282.21438599]
[478.01931763 294.25357056]
[486.24530029 306.80212402]
[493.71350098 319.81591797]
[500.39761353 333.24929810]
[506.27416992 347.05505371]
[511.32257080 361.18469238]
[515.52502441 375.58859253]
[518.86682129 390.21615601]
[521.33618164 405.01599121]
[522.92443848 419.93612671]
[523.62609863 434.92413330]
[523.43853760 449.92739868]
[522.36254883 464.89318848]
[520.40185547 479.76898193]
[517.56335449 494.50247192]
[513.85699463 509.04193115]
[509.29583740 523.33630371]
[503.89587402 537.33532715]
[497.67608643 550.98992920]
[490.65832520 564.25201416]
[482.86721802 577.07513428]
[474.33013916 589.41412354]
[465.07708740 601.22570801]
[455.14053345 612.46844482]
[444.55541992 623.10272217]
[433.35891724 633.09130859]
[421.59036255 642.39898682]
[409.29107666 650.99322510]
[396.50424194 658.84368896]
[383.27481079 665.92291260]
[369.64923096 672.20593262]
[355.67538452 677.67077637]
[341.40231323 682.29815674]
[326.88018799 686.07189941]
[312.16000366 688.97863770]
[297.29348755 691.00830078]
[282.33285522 692.15368652]
[267.33062744 692.41076660]
[252.33950806 691.77868652]
[237.41217041 690.25958252]
[222.60104370 687.85888672]
[207.95814514 684.58496094]
[193.53491211 680.44934082]
[179.38201904 675.46649170]
[165.54916382 669.65399170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 142]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[57 136]
[58 135]
[59 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 128]
[67 127]
[68 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
