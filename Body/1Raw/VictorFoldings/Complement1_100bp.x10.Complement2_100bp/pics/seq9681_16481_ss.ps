%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[101.20255280 597.31762695]
[91.48427582 585.83740234]
[83.97222137 572.80633545]
[78.90788269 558.64324951]
[76.45404816 543.80352783]
[76.68960571 528.76409912]
[79.60697937 514.00848389]
[85.11238098 500.01095581]
[93.02884674 487.22152710]
[103.10188293 476.05130005]
[115.00769806 466.85937500]
[128.36355591 459.94122314]
[142.74012756 455.51925659]
[140.95765686 440.62551880]
[139.06436157 425.74548340]
[137.06034851 410.87997437]
[135.05633545 396.01443481]
[133.05232239 381.14889526]
[131.04830933 366.28338623]
[129.04429626 351.41784668]
[114.32476044 348.79180908]
[101.11971283 341.73510742]
[90.72830200 330.92776489]
[84.17726135 317.41943359]
[82.11946869 302.52755737]
[84.76892853 287.70880127]
[91.87855530 274.41665649]
[102.76317596 263.95874023]
[116.36553955 257.36837769]
[114.36152649 242.50285339]
[112.02603912 227.68577576]
[109.36024475 212.92456055]
[106.69445038 198.16334534]
[104.02865601 183.40213013]
[101.35609436 181.10217285]
[99.66476440 177.39347839]
[99.60463715 172.75131226]
[101.58885193 167.92327881]
[99.58483887 153.05775452]
[97.58082581 138.19221497]
[95.57681274 123.32669067]
[93.57279968 108.46116638]
[90.57802582 93.76316071]
[79.46256256 82.50451660]
[83.55339050 68.18270111]
[79.58129120 53.71818161]
[75.60919952 39.25365448]
[71.63710022 24.78913116]
[67.66500092 10.32460785]
[52.60014343 10.69278717]
[37.89386749 7.44659233]
[24.40009689 0.77895862]
[12.90128136 -8.91864109]
[4.06302929 -21.07917976]
[-1.60441625 -34.99323273]
[-3.77563620 -49.85035324]
[-2.32871675 -64.78630066]
[2.64791250 -78.93327332]
[10.86087227 -91.47039032]
[21.82912254 -101.67124939]
[34.91213989 -108.94606781]
[30.94004250 -123.41059875]
[26.96794510 -137.87512207]
[22.99584961 -152.33964539]
[19.28077507 -156.00642395]
[17.51979828 -160.30203247]
[17.62521553 -164.37683105]
[19.18482590 -167.53909302]
[8.58317184 -179.28283691]
[13.30942154 -193.40771484]
[9.98716259 -208.03517151]
[6.66490269 -222.66262817]
[-7.58801603 -224.13095093]
[-20.67110252 -229.92060852]
[-31.31059456 -239.45346069]
[-38.47512054 -251.78761292]
[-41.47566605 -265.71051025]
[-40.03182220 -279.85812378]
[-34.29793549 -292.84860229]
[-24.84671974 -303.41720581]
[-12.61209393 -310.53952026]
[-15.71620369 -325.21484375]
[-18.82031441 -339.89013672]
[-21.92442322 -354.56542969]
[-25.02853394 -369.24075317]
[-40.09150696 -369.47427368]
[-54.72473145 -373.05429077]
[-68.19421387 -379.80120850]
[-79.82431793 -389.37661743]
[-89.03169250 -401.30020142]
[-95.35449982 -414.97387695]
[-98.47558594 -429.71182251]
[-98.23840332 -444.77474976]
[-94.65484619 -459.40710449]
[-87.90466309 -472.87493896]
[-78.32644653 -484.50271606]
[-66.40062714 -493.70721436]
[-52.72540283 -500.02670288]
[-37.98671722 -503.14422607]
[-22.92385674 -502.90338135]
[-8.29236984 -499.31628418]
[5.17383671 -492.56283569]
[16.79930305 -482.98181152]
[26.00089836 -471.05374146]
[32.31707764 -457.37698364]
[35.43102264 -442.63754272]
[35.18654251 -427.57476807]
[31.59589386 -412.94412231]
[24.83918571 -399.47955322]
[15.25533104 -387.85641479]
[3.32505274 -378.65771484]
[-10.35323143 -372.34484863]
[-7.24912167 -357.66955566]
[-4.14501143 -342.99423218]
[-1.04090142 -328.31893921]
[2.06320882 -313.64364624]
[17.67887497 -311.63363647]
[31.68608856 -304.38568115]
[42.38283157 -292.75976562]
[48.46227264 -278.14910889]
[49.17239380 -262.31317139]
[44.40898132 -247.16583252]
[34.73043442 -234.54397583]
[21.29236221 -225.98489380]
[24.61462212 -211.35742188]
[27.93688202 -196.72996521]
[38.30090714 -186.03248596]
[33.81228638 -170.86135864]
[37.46037292 -156.31173706]
[41.43246841 -141.84721375]
[45.40456390 -127.38269043]
[49.37666321 -112.91816711]
[64.34014893 -113.34517670]
[78.97980499 -110.17649841]
[92.44372559 -103.59206390]
[103.94736481 -93.97071838]
[112.81924438 -81.86841583]
[118.54015350 -67.98607635]
[120.77353668 -53.12899780]
[119.38526917 -38.16016006]
[114.45172882 -23.95007896]
[106.25559235 -11.32618999]
[95.26965332 -1.02466667]
[82.12953186 6.35251188]
[86.10162354 20.81703568]
[90.07372284 35.28155899]
[94.04581451 49.74608231]
[98.01791382 64.21060944]
[108.84926605 74.43464661]
[105.04254913 89.79106140]
[110.91324615 75.98762512]
[123.25449371 67.46157074]
[138.24221802 66.85478210]
[151.23229980 74.35528564]
[158.19964600 87.63896942]
[156.98532104 102.58973694]
[147.96562195 114.57492828]
[133.93537903 119.88080597]
[119.24202728 116.86328125]
[108.43833160 106.45715332]
[110.44234467 121.32267761]
[112.44635773 136.18820190]
[114.45037079 151.05374146]
[116.45438385 165.91926575]
[118.78987122 180.73632812]
[121.45566559 195.49754333]
[124.12145996 210.25875854]
[126.78725433 225.01998901]
[130.16038513 229.00358582]
[131.53109741 233.43917847]
[131.06257629 237.48831177]
[129.22705078 240.49884033]
[131.23106384 255.36436462]
[146.09303284 258.11749268]
[159.35839844 265.31973267]
[169.73406982 276.25469971]
[176.21305847 289.84286499]
[178.17219543 304.74804688]
[175.43209839 319.50891113]
[168.27349854 332.68215942]
[157.40850830 342.98370361]
[143.90982056 349.41384888]
[145.91383362 364.27935791]
[147.91786194 379.14489746]
[149.92187500 394.01043701]
[151.92588806 408.87594604]
[153.92990112 423.74148560]
[158.17776489 431.82809448]
[155.85137939 438.84304810]
[157.63385010 453.73678589]
[172.64788818 454.64132690]
[187.25909424 458.21240234]
[200.99775696 464.33523560]
[213.42224121 472.81295776]
[224.13314819 483.37307739]
[232.78617859 495.67611694]
[239.10316467 509.32659912]
[242.88104248 523.88568115]
[243.99838257 538.88537598]
[242.41923523 553.84356689]
[238.19438171 568.27929688]
[231.45964050 581.72857666]
[222.43150330 593.75903320]
[211.40017700 603.98400879]
[198.72027588 612.07470703]
[184.79940796 617.77117920]
[170.08508301 620.89019775]
[155.05029297 621.33148193]
[140.17834473 619.08099365]
[125.94730377 614.21093750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 190]
[14 189]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[29 173]
[30 172]
[31 168]
[32 167]
[33 166]
[34 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 150]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[61 132]
[62 131]
[63 130]
[64 129]
[68 128]
[70 126]
[71 125]
[72 124]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
