%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[126.52084351 868.16857910]
[111.70006561 865.83770752]
[97.00921631 862.79351807]
[82.48258972 859.04315186]
[68.15412140 854.59527588]
[54.05727768 849.46038818]
[40.22498322 843.65045166]
[26.68953896 837.17895508]
[13.48256207 830.06109619]
[0.63489568 822.31347656]
[-11.82345200 813.95416260]
[-23.86338615 805.00268555]
[-35.45678329 795.48004150]
[-46.57656860 785.40838623]
[-57.19677353 774.81121826]
[-67.29258728 763.71331787]
[-76.84043884 752.14068604]
[-85.81802368 740.12023926]
[-94.20437622 727.68005371]
[-101.97991180 714.84924316]
[-109.12645721 701.65777588]
[-115.62734222 688.13647461]
[-121.46736908 674.31683350]
[-126.63289642 660.23114014]
[-131.11187744 645.91241455]
[-134.89382935 631.39398193]
[-137.96992493 616.70977783]
[-140.33299255 601.89410400]
[-141.97749329 586.98156738]
[-142.89961243 572.00695801]
[-143.09716797 557.00531006]
[-142.56971741 542.01165771]
[-141.31848145 527.06097412]
[-139.34640503 512.18823242]
[-136.65806580 497.42810059]
[-133.25975037 482.81509399]
[-129.15939331 468.38336182]
[-124.36659241 454.16656494]
[-118.89251709 440.19790649]
[-112.74996185 426.51007080]
[-105.95327759 413.13497925]
[-98.51832581 400.10385132]
[-90.46248627 387.44717407]
[-81.80455780 375.19448853]
[-72.56477356 363.37438965]
[-62.76471329 352.01449585]
[-52.42725754 341.14135742]
[-41.57655716 330.78033447]
[-30.23794937 320.95565796]
[-18.43791962 311.69027710]
[-6.20402527 303.00579834]
[6.43515873 294.92251587]
[19.45011330 287.45932007]
[32.81044388 280.63366699]
[46.48494339 274.46142578]
[60.44167328 268.95709229]
[74.64804077 264.13345337]
[89.07086182 260.00183105]
[103.67646027 256.57183838]
[118.43070984 253.85148621]
[116.42669678 238.98594666]
[114.42268372 224.12042236]
[112.08719635 209.30335999]
[109.42140198 194.54214478]
[106.75560760 179.78092957]
[104.08981323 165.01969910]
[101.42401886 150.25848389]
[91.54799652 139.10888672]
[96.70956421 124.15332794]
[94.04376984 109.39211273]
[84.62355042 121.06513214]
[69.72364807 122.79514313]
[57.87940979 113.59112549]
[55.87575150 98.72554779]
[64.86045837 86.71409607]
[79.68668365 84.43746948]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[87.84608459 48.37846756]
[77.42201233 59.16450882]
[62.42718506 59.55831909]
[51.45131683 49.33430862]
[50.78189087 34.34925461]
[60.80238342 23.18727493]
[75.77259827 22.24246025]
[87.11648560 32.05519485]
[87.11648560 17.05519676]
[87.11648560 2.05519605]
[87.11648560 -12.94480419]
[84.50502014 -17.46446609]
[83.94441223 -22.07304573]
[85.12509918 -25.97445869]
[87.46642303 -28.61084747]
[88.13620758 -43.59588623]
[88.80599213 -58.58092499]
[89.47577667 -73.56596375]
[75.23944092 -78.64710236]
[63.13426590 -87.70007324]
[54.23664856 -99.91988373]
[49.33775330 -114.21996307]
[48.87318802 -129.32875061]
[52.88425827 -143.90278625]
[61.01430893 -156.64617920]
[72.54042053 -166.42575073]
[86.43769073 -172.37194824]
[101.47039795 -173.95600891]
[116.30182648 -171.03710938]
[129.61318970 -163.87477112]
[140.22084045 -153.10588074]
[147.18156433 -139.68798828]
[149.87641907 -124.81421661]
[148.06576538 -109.80712128]
[141.91061401 -96.00112915]
[131.95828247 -84.62384796]
[119.09371185 -76.68695068]
[104.46082306 -72.89617920]
[103.79103088 -57.91114044]
[103.12124634 -42.92610168]
[102.45146179 -27.94106293]
[102.11648560 -12.94480419]
[102.11648560 2.05519605]
[102.11648560 17.05519676]
[102.11648560 32.05519485]
[102.78627014 47.04023361]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.80499268 106.72631836]
[111.47078705 121.48753357]
[121.53747559 133.69294739]
[116.18523407 147.59269714]
[118.85102844 162.35391235]
[121.51682281 177.11512756]
[124.18261719 191.87634277]
[126.84841919 206.63755798]
[130.22154236 210.62117004]
[131.59225464 215.05674744]
[131.12373352 219.10589600]
[129.28820801 222.11640930]
[131.29222107 236.98193359]
[133.29623413 251.84747314]
[148.24415588 250.56367493]
[163.23663330 250.00357056]
[178.23867798 250.16845703]
[193.21522522 251.05795288]
[208.13131714 252.66996765]
[222.95210266 255.00076294]
[237.64295959 258.04486084]
[252.16960144 261.79519653]
[266.49810791 266.24298096]
[280.59497070 271.37780762]
[294.42727661 277.18771362]
[307.96276855 283.65914917]
[321.16976929 290.77694702]
[334.01748657 298.52450562]
[346.47586060 306.88375854]
[358.51583862 315.83511353]
[370.10928345 325.35775757]
[381.22912598 335.42938232]
[391.84936523 346.02645874]
[401.94525146 357.12429810]
[411.49313354 368.69692993]
[420.47079468 380.71731567]
[428.85720825 393.15744019]
[436.63278198 405.98818970]
[443.77938843 419.17965698]
[450.28033447 432.70095825]
[456.12042236 446.52056885]
[461.28604126 460.60620117]
[465.76507568 474.92492676]
[469.54708862 489.44335938]
[472.62326050 504.12756348]
[474.98638916 518.94323730]
[476.63098145 533.85571289]
[477.55316162 548.83032227]
[477.75079346 563.83197021]
[477.22341919 578.82562256]
[475.97225952 593.77630615]
[474.00024414 608.64910889]
[471.31198120 623.40924072]
[467.91372681 638.02221680]
[463.81344604 652.45397949]
[459.02072144 666.67083740]
[453.54669189 680.63946533]
[447.40420532 694.32733154]
[440.60757446 707.70251465]
[433.17269897 720.73364258]
[425.11691284 733.39038086]
[416.45904541 745.64306641]
[407.21932983 757.46325684]
[397.41931152 768.82318115]
[387.08190918 779.69635010]
[376.23126221 790.05743408]
[364.89270020 799.88214111]
[353.09271240 809.14758301]
[340.85885620 817.83215332]
[328.21969604 825.91546631]
[315.20480347 833.37872314]
[301.84448242 840.20446777]
[288.17001343 846.37677002]
[274.21331787 851.88116455]
[260.00698853 856.70483398]
[245.58416748 860.83654785]
[230.97859192 864.26660156]
[216.22434998 866.98706055]
[201.35591125 868.99145508]
[186.40798950 870.27514648]
[171.41549683 870.83520508]
[156.41346741 870.67022705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 142]
[61 141]
[62 140]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[69 130]
[70 129]
[77 128]
[78 127]
[79 126]
[80 125]
[87 124]
[88 123]
[89 122]
[90 121]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
