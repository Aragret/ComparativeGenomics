%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[145.45610046 578.08129883]
[134.93496704 567.38232422]
[125.13610077 556.01812744]
[116.10147858 544.03741455]
[107.86977386 531.49145508]
[100.47624969 518.43395996]
[93.95256042 504.92083740]
[88.32663727 491.01000977]
[83.62257385 476.76101685]
[79.86051178 462.23486328]
[77.05657196 447.49374390]
[75.22274780 432.60083008]
[74.36690521 417.61984253]
[74.49269867 402.61495972]
[75.59958649 387.65045166]
[77.68283844 372.79034424]
[80.73353577 358.09832764]
[84.73860168 343.63729858]
[89.68090057 329.46914673]
[95.53925323 315.65460205]
[102.28858185 302.25277710]
[109.89998627 289.32107544]
[118.34087372 276.91488647]
[127.57509613 265.08731079]
[137.56311035 253.88900757]
[148.26213074 243.36793518]
[159.62637329 233.56915283]
[171.60714722 224.53459167]
[163.37834167 211.99319458]
[155.14953613 199.45179749]
[146.92073059 186.91040039]
[138.69192505 174.36898804]
[130.46311951 161.82759094]
[124.16545868 157.95960999]
[122.20677185 149.03764343]
[114.16560364 136.37512207]
[106.12442780 123.71260071]
[98.08325195 111.05007172]
[94.90119171 125.70867157]
[83.11863708 134.99153137]
[68.12242126 134.65464783]
[56.76860809 124.85204315]
[54.24801254 110.06533813]
[61.71301270 97.05481720]
[75.75071716 91.76870728]
[89.94471741 96.62490845]
[83.26451874 83.19453430]
[76.58432770 69.76416016]
[69.90412903 56.33378220]
[56.83061981 47.42345810]
[58.09023285 32.58221054]
[51.41003799 19.15183449]
[46.12052917 15.18539238]
[43.95349503 9.93172932]
[44.73760223 5.22065544]
[38.46023941 -8.40266037]
[32.18288040 -22.02597618]
[18.03543091 -17.00951004]
[3.49042177 -13.30033779]
[-11.33162022 -10.92919445]
[-26.30787277 -9.91573048]
[-41.31423569 -10.26834106]
[-56.22635651 -11.98410702]
[-70.92066956 -15.04881001]
[-85.27541351 -19.43705368]
[-99.17162323 -25.11247444]
[-112.49417114 -32.02804565]
[-125.13263702 -40.12645721]
[-136.98231506 -49.34060669]
[-147.94499207 -59.59413910]
[-157.92984009 -70.80208588]
[-166.85411072 -82.87157440]
[-174.64385986 -95.70259857]
[-181.23452759 -109.18881989]
[-186.57151794 -123.21849823]
[-190.61059570 -137.67536926]
[-193.31828308 -152.43963623]
[-194.67216492 -167.38896179]
[-194.66099548 -182.39945984]
[-193.28489685 -197.34675598]
[-190.55523682 -212.10697937]
[-186.49465942 -226.55783081]
[-181.13681030 -240.57954407]
[-174.52609253 -254.05595398]
[-166.71726990 -266.87536621]
[-157.77505493 -278.93157959]
[-147.77354431 -290.12466431]
[-136.79562378 -300.36187744]
[-124.93226624 -309.55838013]
[-112.28176117 -317.63800049]
[-98.94895172 -324.53375244]
[-85.04430389 -330.18847656]
[-70.68305969 -334.55538940]
[-55.98419952 -337.59823608]
[-41.06954193 -339.29180908]
[-26.06267357 -339.62210083]
[-11.08794498 -338.58636475]
[3.73055387 -336.19317627]
[18.27002907 -332.46237183]
[32.40999985 -327.42486572]
[46.03329849 -321.12240601]
[59.02703094 -313.60720825]
[71.28353119 -304.94155884]
[82.70122528 -295.19726562]
[93.18550873 -284.45504761]
[102.64950562 -272.80395508]
[111.01479340 -260.34051514]
[118.21204376 -247.16801453]
[124.18161774 -233.39559937]
[128.87405396 -219.13740540]
[132.25047302 -204.51156616]
[134.28289795 -189.63929749]
[134.95446777 -174.64381409]
[134.25962830 -159.64939880]
[132.20414734 -144.78030396]
[128.80505371 -130.15971375]
[124.09049988 -115.90881348]
[118.09956360 -102.14568329]
[110.88188934 -88.98435974]
[102.49728394 -76.53391266]
[93.01522827 -64.89750671]
[82.51428986 -54.17157745]
[71.08149719 -44.44499588]
[58.81156921 -35.79836655]
[45.80619431 -28.30333710]
[52.08355713 -14.68002129]
[58.36091614 -1.05670536]
[64.84041595 12.47164059]
[71.52060699 25.90201569]
[84.11631012 33.85170746]
[83.33450317 49.65358734]
[90.01470184 63.08396149]
[96.69489288 76.51433563]
[103.37509155 89.94471741]
[110.74578094 103.00889587]
[118.78695679 115.67142487]
[126.82812500 128.33395386]
[134.86929321 140.99647522]
[143.00451660 153.59878540]
[151.23332214 166.14018250]
[159.46212769 178.68157959]
[167.69093323 191.22299194]
[175.91973877 203.76438904]
[184.14855957 216.30578613]
[197.20591736 208.91203308]
[210.71888733 202.38809204]
[224.62962341 196.76193237]
[238.87854004 192.05761719]
[253.40463257 188.29530334]
[268.14569092 185.49110413]
[283.03857422 183.65701294]
[298.01956177 182.80090332]
[313.02441406 182.92642212]
[327.98898315 184.03305054]
[342.84909058 186.11604309]
[357.54116821 189.16647339]
[372.00228882 193.17129517]
[386.17050171 198.11332703]
[399.98516846 203.97145081]
[413.38711548 210.72053528]
[426.31893921 218.33171082]
[438.72528076 226.77238464]
[450.55300903 236.00639343]
[461.75149536 245.99420166]
[472.27276611 256.69305420]
[482.07174683 268.05709839]
[491.10650635 280.03771973]
[499.33837891 292.58361816]
[506.73205566 305.64102173]
[513.25592041 319.15402222]
[518.88195801 333.06478882]
[523.58624268 347.31372070]
[527.34844971 361.83984375]
[530.15258789 376.58090210]
[531.98657227 391.47381592]
[532.84259033 406.45480347]
[532.71697998 421.45968628]
[531.61022949 436.42422485]
[529.52716064 451.28433228]
[526.47668457 465.97637939]
[522.47174072 480.43746948]
[517.52960205 494.60568237]
[511.67144775 508.42028809]
[504.92227173 521.82220459]
[497.31100464 534.75396729]
[488.87026978 547.16027832]
[479.63619995 558.98797607]
[469.64831543 570.18640137]
[458.94940186 580.70758057]
[447.58529663 590.50646973]
[435.60461426 599.54119873]
[423.05868530 607.77294922]
[410.00125122 615.16656494]
[396.48818970 621.69036865]
[382.57739258 627.31634521]
[368.32843018 632.02050781]
[353.80227661 635.78265381]
[339.06118774 638.58666992]
[324.16827393 640.42059326]
[309.18731689 641.27648926]
[294.18243408 641.15081787]
[279.21789551 640.04400635]
[264.35778809 637.96081543]
[249.66574097 634.91021729]
[235.20468140 630.90527344]
[221.03651428 625.96301270]
[207.22192383 620.10473633]
[193.82006836 613.35552979]
[180.88832092 605.74420166]
[168.48208618 597.30334473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[33 139]
[35 138]
[36 137]
[37 136]
[38 135]
[46 134]
[47 133]
[48 132]
[49 131]
[51 129]
[52 128]
[55 127]
[56 126]
[57 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
