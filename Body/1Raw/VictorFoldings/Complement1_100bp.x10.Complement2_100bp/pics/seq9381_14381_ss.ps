%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[177.58943176 436.47775269]
[172.97541809 422.20501709]
[168.36140442 407.93228149]
[163.74739075 393.65954590]
[159.13339233 379.38681030]
[154.51937866 365.11407471]
[139.72831726 363.19320679]
[127.18646240 355.00714111]
[119.41070557 342.13476562]
[117.98918152 327.10147095]
[123.25715637 312.88403320]
[134.21998596 302.32098389]
[129.60597229 288.04827881]
[124.99196625 273.77554321]
[120.37795258 259.50280762]
[109.75442505 253.71771240]
[105.79360962 241.86462402]
[111.13613892 230.12493896]
[106.73513794 215.78509521]
[102.33413696 201.44525146]
[97.93314362 187.10539246]
[93.53214264 172.76554871]
[91.04278564 187.55754089]
[84.85818481 201.22322083]
[75.38854218 212.85618591]
[63.26193619 221.68486023]
[49.28269196 227.12367249]
[34.37799835 228.81188965]
[19.53642845 226.63752747]
[5.74237204 220.74482727]
[-6.08926058 211.52459717]
[-15.17371941 199.58840942]
[-20.90846634 185.72795105]
[-22.91313553 170.86250305]
[-21.05476379 155.97807312]
[-15.45660973 142.06185913]
[-6.48998117 130.03691101]
[5.25039911 120.70077515]
[18.98583412 114.67268372]
[33.80530167 112.35247040]
[48.72587967 113.89402008]
[62.75793839 119.19508362]
[74.97077942 127.90406799]
[84.55438232 139.44332886]
[90.87462616 153.05241394]
[91.32123566 138.05906677]
[91.76783752 123.06571960]
[92.21444702 108.07237244]
[81.35712433 118.42218018]
[66.39569092 119.49712372]
[54.17031097 110.80574799]
[50.27025986 96.32163239]
[56.47859192 82.66671753]
[69.95693970 76.08385468]
[84.54319000 79.58263397]
[93.56924438 91.56523132]
[95.57325745 76.69969940]
[97.57727051 61.83417130]
[99.58128357 46.96864319]
[86.25199127 53.84832001]
[72.50083923 47.85617828]
[68.46466064 33.40940475]
[77.11878204 21.15762138]
[92.08370209 20.13238716]
[102.32733917 31.08789444]
[105.43144989 16.41259193]
[108.53556061 1.73728919]
[103.82156372 -13.36532021]
[114.02516937 -24.21592903]
[117.12928009 -38.89123154]
[120.23339081 -53.56653214]
[110.63552094 -42.03913498]
[97.97887421 -33.98871613]
[83.46978760 -30.18259621]
[68.49118805 -30.98354912]
[54.47073746 -36.31523514]
[42.74476624 -45.66946793]
[34.43093109 -58.15466309]
[30.32164574 -72.58081055]
[30.80858612 -87.57290649]
[35.84533691 -101.70199585]
[44.95182800 -113.62138367]
[57.26008987 -122.19499207]
[71.59696960 -126.60563660]
[86.59597778 -126.43292236]
[100.82749939 -121.69331360]
[112.93507385 -112.83856201]
[121.76468658 -100.71263885]
[126.47475433 -86.47132111]
[126.61618042 -71.47086334]
[133.49559021 -84.80029297]
[140.37500000 -98.12972260]
[147.25440979 -111.45915222]
[154.13383484 -124.78858185]
[161.01324463 -138.11801147]
[167.89265442 -151.44743347]
[174.77206421 -164.77687073]
[181.65147400 -178.10629272]
[169.31533813 -186.67802429]
[158.20359802 -196.78665161]
[148.50640869 -208.25920105]
[140.38969421 -220.89938354]
[133.99235535 -234.49089050]
[129.42384338 -248.80116272]
[126.76235199 -263.58532715]
[126.05340576 -278.59039307]
[127.30913544 -293.55963135]
[130.50805664 -308.23690796]
[135.59544373 -322.37103271]
[142.48422241 -335.72018433]
[151.05653381 -348.05590820]
[161.16569519 -359.16717529]
[172.63870239 -368.86380005]
[185.27926636 -376.97991943]
[198.87107849 -383.37661743]
[213.18156433 -387.94442749]
[227.96585083 -390.60522461]
[242.97096252 -391.31347656]
[257.94015503 -390.05700684]
[272.61724854 -386.85739136]
[286.75112915 -381.76934814]
[300.09994507 -374.87991333]
[312.43530273 -366.30703735]
[323.54605103 -356.19735718]
[333.24215698 -344.72387695]
[341.35766602 -332.08291626]
[347.75372314 -318.49078369]
[352.32086182 -304.18008423]
[354.98095703 -289.39569092]
[355.68847656 -274.39053345]
[354.43130493 -259.42141724]
[351.23098755 -244.74446106]
[346.14227295 -230.61080933]
[339.25219727 -217.26232910]
[330.67871094 -204.92739868]
[320.56851196 -193.81710815]
[309.09457397 -184.12155151]
[296.45324707 -176.00665283]
[282.86080933 -169.61125183]
[268.54989624 -165.04479980]
[253.76535034 -162.38540649]
[238.76017761 -161.67860413]
[223.79110718 -162.93646240]
[209.11430359 -166.13748169]
[194.98091125 -171.22688293]
[188.10150146 -157.89746094]
[181.22207642 -144.56802368]
[174.34266663 -131.23860168]
[167.46325684 -117.90917206]
[160.58384705 -104.57974243]
[153.70443726 -91.25031281]
[146.82502747 -77.92088318]
[139.94560242 -64.59145355]
[134.90869141 -50.46242142]
[131.80458069 -35.78712082]
[128.70046997 -21.11181831]
[133.63648987 -7.05888557]
[123.21086121 4.84139919]
[120.10675812 19.51670074]
[117.00264740 34.19200516]
[114.44681549 48.97265625]
[112.44279480 63.83818436]
[110.43878174 78.70371246]
[108.43476868 93.56924438]
[107.20779419 108.51897430]
[106.76119232 123.51232910]
[106.31458282 138.50567627]
[105.86798096 153.49902344]
[107.87199402 168.36454773]
[112.27298737 182.70440674]
[116.67398834 197.04425049]
[121.07498932 211.38409424]
[125.47598267 225.72393799]
[139.24421692 237.95166016]
[134.65068054 254.88879395]
[139.26469421 269.16152954]
[143.87870789 283.43426514]
[148.49272156 297.70700073]
[163.56430054 299.85375977]
[176.15789795 308.29702759]
[183.80545044 321.31756592]
[185.03631592 336.30578613]
[179.65972900 350.28439331]
[168.79211426 360.50009155]
[173.40612793 374.77282715]
[178.02012634 389.04553223]
[182.63414001 403.31826782]
[187.24815369 417.59100342]
[191.86215210 431.86373901]
[206.93057251 431.08584595]
[221.68669128 434.23538208]
[235.12438965 441.09765625]
[246.32748413 451.20474243]
[254.53211975 463.86752319]
[259.17889404 478.22265625]
[259.95095825 493.29138184]
[256.79571533 508.04626465]
[249.92828369 521.48132324]
[239.81686401 532.68054199]
[227.15090942 540.88024902]
[212.79397583 545.52148438]
[197.72496033 546.28778076]
[182.97128296 543.12683105]
[169.53889465 536.25415039]
[158.34361267 526.13842773]
[150.14875793 513.46929932]
[145.51306152 499.11059570]
[144.75262451 484.04129028]
[147.91926575 469.28884888]
[154.79707336 455.85910034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[12 178]
[13 177]
[14 176]
[15 175]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[45 168]
[46 167]
[47 166]
[48 165]
[56 164]
[57 163]
[58 162]
[59 161]
[65 160]
[66 159]
[67 158]
[69 156]
[70 155]
[71 154]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
