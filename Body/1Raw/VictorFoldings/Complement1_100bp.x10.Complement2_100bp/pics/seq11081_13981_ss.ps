%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[-24.54177666 826.77380371]
[-39.40676117 828.79962158]
[-54.34596252 830.17517090]
[-69.33094788 830.89776611]
[-84.33319092 830.96600342]
[-99.32412720 830.37982178]
[-114.27523041 829.14031982]
[-129.15803528 827.24975586]
[-143.94421387 824.71191406]
[-158.60560608 821.53143311]
[-173.11433411 817.71453857]
[-187.44274902 813.26837158]
[-201.56358337 808.20141602]
[-215.44996643 802.52337646]
[-229.07545471 796.24499512]
[-242.41412354 789.37829590]
[-255.44056702 781.93627930]
[-268.13000488 773.93310547]
[-280.45825195 765.38409424]
[-292.40188599 756.30548096]
[-303.93814087 746.71447754]
[-315.04504395 736.62945557]
[-325.70150757 726.06951904]
[-335.88717651 715.05480957]
[-345.58270264 703.60626221]
[-354.76965332 691.74572754]
[-363.43048096 679.49578857]
[-371.54873657 666.87969971]
[-379.10894775 653.92150879]
[-386.09674072 640.64587402]
[-392.49880981 627.07806396]
[-398.30297852 613.24389648]
[-403.49816895 599.16973877]
[-408.07449341 584.88238525]
[-412.02328491 570.40899658]
[-415.33697510 555.77709961]
[-418.00927734 541.01464844]
[-420.03512573 526.14965820]
[-421.41064453 511.21044922]
[-422.13317871 496.22546387]
[-422.20141602 481.22320557]
[-421.61520386 466.23226929]
[-420.37564087 451.28118896]
[-418.48510742 436.39837646]
[-415.94717407 421.61221313]
[-412.76672363 406.95080566]
[-408.94976807 392.44210815]
[-404.50357056 378.11370850]
[-399.43661499 363.99285889]
[-393.75854492 350.10650635]
[-387.48016357 336.48101807]
[-380.61340332 323.14236450]
[-373.17135620 310.11593628]
[-365.16821289 297.42651367]
[-356.61917114 285.09826660]
[-347.54049683 273.15466309]
[-337.94949341 261.61840820]
[-327.86444092 250.51152039]
[-317.30450439 239.85508728]
[-306.28976440 229.66943359]
[-294.84124756 219.97390747]
[-282.98068237 210.78700256]
[-270.73068237 202.12619019]
[-258.11459351 194.00796509]
[-245.15637207 186.44776917]
[-231.88072205 179.45999146]
[-218.31289673 173.05795288]
[-204.47874451 167.25381470]
[-190.40458679 162.05865479]
[-176.11720276 157.48234558]
[-161.64379883 153.53358459]
[-147.01193237 150.21990967]
[-132.24946594 147.54762268]
[-117.38446808 145.52182007]
[-102.44525909 144.14633179]
[-87.46027374 143.42379761]
[-72.45803070 143.35559082]
[-57.46709824 143.94184875]
[-42.51599884 145.18142700]
[-27.63320351 147.07199097]
[-12.84703636 149.60993958]
[1.81435347 152.79043579]
[16.32305717 156.60742188]
[30.65145683 161.05363464]
[44.77227783 166.12060547]
[58.65864182 171.79870605]
[64.93600464 158.17539978]
[71.21336365 144.55207825]
[77.49072266 130.92875671]
[83.76808167 117.30544281]
[90.04544830 103.68212891]
[95.50080109 89.70933533]
[100.11480713 75.43659973]
[104.72882080 61.16386414]
[109.34282684 46.89113235]
[113.95684052 32.61839676]
[118.57084656 18.34566498]
[123.18486023 4.07293129]
[127.79886627 -10.19980240]
[114.54133606 -17.30457306]
[102.76560211 -26.66255569]
[92.85020447 -37.97293091]
[85.11387634 -50.87211609]
[79.80530548 -64.94545746]
[77.09515381 -79.74054718]
[77.07052612 -94.78179932]
[79.73222351 -109.58568573]
[84.99468994 -123.67633057]
[92.68874359 -136.60078430]
[102.56705475 -147.94355774]
[114.31208801 -157.34004211]
[127.54628754 -164.48818970]
[141.84420776 -169.15818787]
[156.74626160 -171.19995117]
[171.77339172 -170.54782104]
[186.44253540 -167.22276306]
[200.28213501 -161.33166504]
[212.84733582 -153.06390381]
[223.73417664 -142.68525696]
[232.59272766 -130.52935791]
[239.13819885 -116.98696136]
[243.16018677 -102.49340057]
[244.52940369 -87.51457977]
[243.20184326 -72.53201294]
[239.22015381 -58.02732468]
[232.71235657 -44.46677780]
[223.88764954 -32.28629303]
[213.02969360 -21.87742043]
[200.48753357 -13.57476234]
[186.66436768 -7.64521408]
[172.00451660 -4.27938652]
[156.97926331 -3.58547735]
[142.07159424 -5.58579254]
[137.45759583 8.68694115]
[132.84358215 22.95967484]
[128.22956848 37.23240662]
[123.61556244 51.50514221]
[119.00155640 65.77787781]
[114.38754272 80.05060577]
[109.77353668 94.32334137]
[122.64286804 86.61747742]
[137.59355164 87.83278656]
[149.04936218 97.51599884]
[152.73754883 112.05550385]
[147.28253174 126.02843475]
[134.71887207 134.22322083]
[119.73252106 133.58343506]
[107.91301727 124.34767151]
[103.66876221 109.95948792]
[97.39140320 123.58280945]
[91.11403656 137.20611572]
[84.83667755 150.82943726]
[78.55931854 164.45275879]
[72.28195953 178.07606506]
[85.62064362 184.94274902]
[98.64711761 192.38471985]
[111.33657837 200.38780212]
[123.66487122 208.93679810]
[135.60852051 218.01539612]
[147.14480591 227.60632324]
[158.25177002 237.69132996]
[168.90824890 248.25122070]
[179.09396362 259.26589966]
[188.78953552 270.71438599]
[197.97651672 282.57489014]
[206.63739014 294.82482910]
[214.75567627 307.44088745]
[222.31594849 320.39904785]
[229.30378723 333.67468262]
[235.70590210 347.24246216]
[241.51010132 361.07659912]
[246.70535278 375.15072632]
[251.28173828 389.43807983]
[255.23056030 403.91146851]
[258.54431152 418.54330444]
[261.21667480 433.30578613]
[263.24255371 448.17074585]
[264.61813354 463.10995483]
[265.34072876 478.09494019]
[265.40902710 493.09716797]
[264.82284546 508.08810425]
[263.58334351 523.03924561]
[261.69287109 537.92205811]
[259.15499878 552.70819092]
[255.97457886 567.36962891]
[252.15766907 581.87835693]
[247.71153259 596.20678711]
[242.64462280 610.32763672]
[236.96659851 624.21398926]
[230.68824768 637.83947754]
[223.82154846 651.17816162]
[216.37956238 664.20465088]
[208.37644958 676.89410400]
[199.82743835 689.22235107]
[190.74882507 701.16601562]
[181.15786743 712.70227051]
[171.07284546 723.80920410]
[160.51292419 734.46569824]
[149.49824524 744.65136719]
[138.04974365 754.34692383]
[126.18922424 763.53387451]
[113.93927002 772.19470215]
[101.32318878 780.31298828]
[88.36499786 787.87322998]
[75.08937073 794.86108398]
[61.52157593 801.26318359]
[47.68743896 807.06732178]
[33.61329269 812.26257324]
[19.32592773 816.83892822]
[4.85254526 820.78771973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
