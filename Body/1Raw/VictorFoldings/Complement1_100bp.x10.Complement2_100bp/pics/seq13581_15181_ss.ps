%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[79.84446716 491.76089478]
[75.23309326 477.42388916]
[73.81201172 462.43072510]
[75.64768982 447.48269653]
[80.65426636 433.27886963]
[88.59757233 420.48364258]
[99.10608673 409.69543457]
[111.68831635 401.41888428]
[125.75576019 396.04104614]
[123.53063965 381.20700073]
[121.30552673 366.37295532]
[118.70262909 363.99444580]
[117.12246704 360.23703003]
[117.20057678 355.59512329]
[119.32766724 350.82830811]
[117.76715088 335.90969849]
[116.20662689 320.99111938]
[114.64610291 306.07250977]
[113.08557892 291.15390015]
[111.52505493 276.23529053]
[109.41043091 261.38510132]
[106.74463654 246.62388611]
[104.07884216 231.86265564]
[101.41304779 217.10144043]
[97.13085175 211.07777405]
[98.81916046 202.10072327]
[96.37342834 187.30145264]
[93.92770386 172.50218201]
[87.60282898 186.10350037]
[75.73781586 195.28073120]
[60.98335648 197.98365784]
[46.63562012 193.60844421]
[35.89993668 183.13252258]
[31.17468071 168.89622498]
[33.51548767 154.08000183]
[42.39941406 141.99382019]
[55.84177017 135.33776855]
[70.83950043 135.59881592]
[84.04206848 142.71865845]
[92.50000000 155.10671997]
[92.50000000 140.10671997]
[92.50000000 125.10671997]
[92.50000000 110.10671997]
[92.16502380 95.11045837]
[91.49523926 80.12541962]
[83.14944458 66.68450165]
[90.31072998 53.62443542]
[89.41790771 38.65103149]
[88.30226135 23.69257736]
[87.18661499 8.73412418]
[85.95964050 -6.21560907]
[84.62140656 -21.15579414]
[83.28317261 -36.09597778]
[81.94493866 -51.03616333]
[80.60669708 -65.97634888]
[69.13219452 -56.31531143]
[54.39539719 -59.11297226]
[47.25973511 -72.30699921]
[52.98534775 -86.17124176]
[67.35153198 -90.48550415]
[79.76722717 -82.07089233]
[79.54389954 -97.06922913]
[79.32057190 -112.06756592]
[76.64210510 -116.54784393]
[76.01294708 -121.14756775]
[77.13541412 -125.06613159]
[79.43722534 -127.73708344]
[79.88383484 -142.73043823]
[80.33043671 -157.72378540]
[80.77704620 -172.71713257]
[65.86647034 -174.43432617]
[51.15525055 -177.40985107]
[36.74936676 -181.62225342]
[22.75262260 -187.04119873]
[9.26586628 -193.62765503]
[-3.61372995 -201.33413696]
[-15.79336548 -210.10511780]
[-27.18528557 -219.87742615]
[-37.70740891 -230.58064270]
[-47.28392029 -242.13764954]
[-55.84582138 -254.46516418]
[-63.33142471 -267.47436523]
[-69.68679047 -281.07153320]
[-74.86613464 -295.15872192]
[-78.83213043 -309.63436890]
[-81.55621338 -324.39422607]
[-83.01874542 -339.33190918]
[-83.20919037 -354.33984375]
[-82.12618256 -369.30984497]
[-79.77751923 -384.13406372]
[-76.18012238 -398.70568848]
[-71.35991669 -412.91976929]
[-65.35163116 -426.67382812]
[-58.19855118 -439.86880493]
[-49.95222473 -452.40960693]
[-40.67205811 -464.20590210]
[-30.42492294 -475.17266846]
[-19.28464890 -485.23089600]
[-7.33150244 -494.30813599]
[5.34839058 -502.33895874]
[18.66367149 -509.26550293]
[32.51839828 -515.03790283]
[46.81275177 -519.61450195]
[61.44373322 -522.96234131]
[76.30592346 -525.05737305]
[91.29225159 -525.88439941]
[106.29472351 -525.43756104]
[121.20524597 -523.71997070]
[135.91639709 -520.74407959]
[150.32217407 -516.53125000]
[164.31877136 -511.11196899]
[177.80535889 -504.52517700]
[190.68475342 -496.81835938]
[202.86416626 -488.04705811]
[214.25582886 -478.27444458]
[224.77767944 -467.57095337]
[234.35389709 -456.01370239]
[242.91548157 -443.68597412]
[250.40074158 -430.67657471]
[256.75576782 -417.07922363]
[261.93472290 -402.99194336]
[265.90036011 -388.51617432]
[268.62405396 -373.75625610]
[270.08621216 -358.81851196]
[270.27627563 -343.81057739]
[269.19287109 -328.84060669]
[266.84381104 -314.01644897]
[263.24606323 -299.44491577]
[258.42547607 -285.23098755]
[252.41683960 -271.47708130]
[245.26341248 -258.28228760]
[237.01676941 -245.74168396]
[227.73629761 -233.94563293]
[217.48887634 -222.97912598]
[206.34834290 -212.92118835]
[194.39495850 -203.84425354]
[181.71485901 -195.81376648]
[168.39939880 -188.88754272]
[154.54452515 -183.11552429]
[140.25004578 -178.53929138]
[125.61898804 -175.19180298]
[110.75673676 -173.09718323]
[95.77039337 -172.27052307]
[95.32378387 -157.27717590]
[94.87718201 -142.28382874]
[94.43057251 -127.29048157]
[94.31890869 -112.29089355]
[94.54223633 -97.29255676]
[94.76556396 -82.29421997]
[95.54688263 -67.31458282]
[96.88511658 -52.37439728]
[98.22335052 -37.43421173]
[99.56159210 -22.49402809]
[100.89982605 -7.55384302]
[104.62753296 -1.17215371]
[102.14506531 7.61847591]
[103.26071167 22.57692909]
[104.37636566 37.53538132]
[107.34644318 41.27539444]
[107.99860382 46.92089462]
[105.29576874 52.95465088]
[113.59365082 65.32373810]
[106.48027802 79.45563507]
[107.15006256 94.44067383]
[109.59850311 97.42019653]
[110.72171783 101.46447754]
[110.07363892 105.95747375]
[107.50000000 110.10671997]
[107.50000000 125.10671997]
[107.50000000 140.10671997]
[107.50000000 155.10671997]
[108.72697449 170.05645752]
[111.17270660 184.85572815]
[113.61843109 199.65499878]
[116.17426300 214.43565369]
[118.84005737 229.19686890]
[121.50585175 243.95808411]
[124.17164612 258.71929932]
[134.73847961 248.07308960]
[149.66610718 249.54483032]
[157.95042419 262.04962158]
[153.48455811 276.36941528]
[139.56056213 281.94815063]
[126.44365692 274.67477417]
[128.00418091 289.59338379]
[129.56471252 304.51199341]
[131.12522888 319.43057251]
[132.68574524 334.34918213]
[134.24627686 349.26779175]
[136.13957214 364.14782715]
[138.36468506 378.98187256]
[140.58979797 393.81591797]
[155.61599731 394.82968140]
[170.07281494 399.05038452]
[183.28410339 406.28057861]
[194.63194275 416.18212891]
[203.58558655 428.29190063]
[209.72622681 442.04351807]
[212.76667786 456.79376221]
[212.56471252 471.85275269]
[209.12980652 486.51614380]
[202.62258911 500.09814453]
[193.34742737 511.96343994]
[181.73814392 521.55712891]
[168.33770752 528.43041992]
[153.77288818 532.26190186]
[138.72492981 532.87237549]
[123.89761353 530.23321533]
[109.98447418 524.46795654]
[97.63623810 515.84619141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 192]
[10 191]
[11 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 178]
[22 177]
[23 176]
[24 175]
[26 174]
[27 173]
[28 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 164]
[45 163]
[47 161]
[48 158]
[49 157]
[50 156]
[51 154]
[52 153]
[53 152]
[54 151]
[55 150]
[61 149]
[62 148]
[63 147]
[67 146]
[68 145]
[69 144]
[70 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
