%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[23.67784309 650.30487061]
[11.62687492 659.26239014]
[-1.33636856 666.83978271]
[-15.05452633 672.94519043]
[-29.36107254 677.50433350]
[-44.08233643 680.46197510]
[-59.03961945 681.78210449]
[-74.05135345 681.44885254]
[-88.93530273 679.46612549]
[-103.51080322 675.85809326]
[-117.60090637 670.66845703]
[-131.03459167 663.96026611]
[-143.64875793 655.81500244]
[-155.29029846 646.33148193]
[-165.81790161 635.62475586]
[-175.10375977 623.82495117]
[-183.03515625 611.07519531]
[-189.51580811 597.53027344]
[-194.46705627 583.35467529]
[-197.82878113 568.72039795]
[-199.56018066 553.80511475]
[-199.64024353 538.78991699]
[-198.06799316 523.85699463]
[-194.86250305 509.18771362]
[-190.06271362 494.96011353]
[-183.72686768 481.34686279]
[-175.93188477 468.51324463]
[-166.77238464 456.61508179]
[-156.35955811 445.79675293]
[-144.81980896 436.18960571]
[-132.29321289 427.91024780]
[-118.93183136 421.05920410]
[-104.89786530 415.71963501]
[-90.36167145 411.95635986]
[-75.49971008 409.81506348]
[-60.49238205 409.32171631]
[-45.52187347 410.48229980]
[-30.76990318 413.28277588]
[-26.36890602 398.94293213]
[-21.96790695 384.60308838]
[-17.56690979 370.26324463]
[-13.16591167 355.92340088]
[-14.35862350 353.38653564]
[-14.61832142 350.22439575]
[-13.70180511 346.78994751]
[-11.49803448 343.51766968]
[-8.05253792 340.87521362]
[-2.80581975 326.82275391]
[2.44089842 312.77026367]
[-8.95330524 305.88497925]
[-18.96337891 297.10223389]
[-27.27697563 286.69430542]
[-33.63437271 274.98419189]
[-37.83657455 262.33557129]
[-39.75154877 249.14154053]
[-39.31837082 235.81246948]
[-36.54916382 222.76307678]
[-31.52876472 210.39968872]
[-24.41211700 199.10746765]
[-15.41950321 189.23849487]
[-4.82971239 181.10072327]
[7.02859211 174.94844055]
[19.78707886 170.97427368]
[33.04918671 169.30316162]
[46.40245056 169.98843384]
[59.43133163 173.01014709]
[65.50516510 159.29487610]
[71.57900238 145.57960510]
[77.65283203 131.86434937]
[83.72666931 118.14907837]
[89.80049896 104.43380737]
[75.45385742 108.81261444]
[62.14873886 101.88631439]
[57.50690842 87.62260437]
[64.18742371 74.19238281]
[78.36338043 69.28910065]
[91.91415405 75.72157288]
[97.07727051 89.80403900]
[97.00183868 73.98300934]
[109.93994904 66.60367584]
[117.21317291 53.48498154]
[124.48640442 40.36628723]
[131.75962830 27.24759483]
[139.03286743 14.12890053]
[138.94042969 8.90984440]
[140.68475342 4.60744476]
[143.60908508 1.76784194]
[146.93508911 0.59737557]
[147.56619263 -15.21123886]
[160.82089233 -22.00549698]
[168.67265320 -34.78633881]
[176.52441406 -47.56718063]
[184.37615967 -60.34802628]
[192.22792053 -73.12886810]
[180.31105042 -82.26080322]
[169.39630127 -92.56965637]
[159.59939575 -103.94615173]
[151.02418518 -116.26969147]
[143.76155090 -129.40963745]
[137.88850403 -143.22669983]
[133.46728516 -157.57441711]
[130.54475403 -172.30068970]
[129.15191650 -187.24940491]
[129.30352783 -202.26210022]
[130.99798584 -217.17962646]
[134.21730042 -231.84387207]
[138.92738342 -246.09936523]
[145.07827759 -259.79501343]
[152.60479736 -272.78561401]
[161.42713928 -284.93344116]
[171.45179749 -296.10977173]
[182.57250977 -306.19610596]
[194.67137146 -315.08551025]
[207.62013245 -322.68374634]
[221.28153992 -328.91030884]
[235.51077271 -333.69918823]
[250.15698242 -336.99957275]
[265.06491089 -338.77648926]
[280.07653809 -339.01113892]
[295.03274536 -337.70101929]
[309.77493286 -334.85998535]
[324.14688110 -330.51818848]
[337.99621582 -324.72164917]
[351.17614746 -317.53182983]
[363.54693604 -309.02490234]
[374.97744751 -299.29107666]
[385.34649658 -288.43350220]
[394.54421997 -276.56735229]
[402.47305298 -263.81832886]
[409.04901123 -250.32162476]
[414.20233154 -236.22029114]
[417.87838745 -221.66383362]
[420.03826904 -206.80654907]
[420.65899658 -191.80592346]
[419.73403931 -176.82098389]
[417.27322388 -162.01055908]
[413.30258179 -147.53167725]
[407.86422729 -133.53781128]
[401.01583862 -120.17729187]
[392.82995605 -107.59176636]
[383.39340210 -95.91462708]
[372.80621338 -85.26967621]
[361.18057251 -75.76975250]
[348.63973999 -67.51555634]
[335.31668091 -60.59458923]
[321.35256958 -55.08021545]
[306.89550781 -51.03089142]
[292.09869385 -48.48954391]
[277.11901855 -47.48310852]
[262.11523438 -48.02225876]
[247.24641418 -50.10127640]
[232.67018127 -53.69812775]
[218.54103088 -58.77467728]
[205.00875854 -65.27711487]
[197.15699768 -52.49626923]
[189.30525208 -39.71542740]
[181.45349121 -26.93458366]
[173.60174561 -14.15374184]
[173.53225708 0.74070174]
[159.71594238 8.44913101]
[152.15156555 21.40213013]
[144.87832642 34.52082443]
[137.60510254 47.63951874]
[130.33186340 60.75821304]
[123.05863953 73.87690735]
[123.65430450 88.75959778]
[110.19596100 97.07727051]
[103.51576996 110.50764465]
[97.44193268 124.22290802]
[91.36810303 137.93817139]
[85.29426575 151.65344238]
[79.22042847 165.36871338]
[73.14659882 179.08398438]
[86.72189331 188.95178223]
[97.78964996 201.55950928]
[105.80969238 216.28759766]
[110.39152527 232.41311646]
[111.31333923 249.14521790]
[108.53275299 265.66397095]
[102.18875122 281.16052246]
[92.59472656 294.87661743]
[80.22303009 306.14187622]
[65.68167877 314.40643311]
[49.68451309 319.26773071]
[33.01611710 320.49029541]
[16.49337006 318.01699829]
[11.24665165 332.06945801]
[5.99993324 346.12191772]
[1.17393565 360.32440186]
[-3.22706246 374.66424561]
[-7.62806034 389.00408936]
[-12.02905846 403.34393311]
[-16.43005753 417.68377686]
[-2.64689755 423.64093018]
[10.39725590 431.07821655]
[22.54405975 439.90536499]
[33.64606476 450.01519775]
[43.56849670 461.28500366]
[52.19091415 473.57797241]
[59.40864563 486.74487305]
[65.13407135 500.62588501]
[69.29769135 515.05249023]
[71.84896851 529.84960938]
[72.75692749 544.83758545]
[72.01055145 559.83447266]
[69.61889648 574.65820312]
[65.61099243 589.12884521]
[60.03549194 603.07073975]
[52.96008301 616.31469727]
[44.47064972 628.69989014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[47 188]
[48 187]
[49 186]
[66 173]
[67 172]
[68 171]
[69 170]
[70 169]
[71 168]
[78 167]
[80 165]
[81 164]
[82 163]
[83 162]
[84 161]
[88 160]
[90 158]
[91 157]
[92 156]
[93 155]
[94 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
