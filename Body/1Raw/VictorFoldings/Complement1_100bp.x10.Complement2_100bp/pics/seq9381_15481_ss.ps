%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[79.81017303 719.49456787]
[64.99468231 725.64935303]
[51.01554489 717.77764893]
[48.59635162 701.91802979]
[59.59290695 690.23663330]
[60.48572540 675.26324463]
[61.37854004 660.28985596]
[62.27135468 645.31640625]
[54.47930908 636.06384277]
[55.10058594 623.58190918]
[64.34687042 614.58923340]
[65.46251678 599.63073730]
[66.57816315 584.67230225]
[67.69381714 569.71386719]
[58.00211334 561.22265625]
[54.92469025 548.51000977]
[59.80283356 536.16436768]
[71.06404114 528.77520752]
[72.40227509 513.83502197]
[65.83129883 500.46823120]
[74.76893616 487.41336060]
[68.19795990 474.04656982]
[77.13559723 460.99169922]
[78.47383118 446.05151367]
[79.81206512 431.11132812]
[81.15030670 416.17114258]
[82.48854065 401.23095703]
[83.82677460 386.29077148]
[84.83103180 371.32443237]
[85.50081635 356.33941650]
[86.17060089 341.35437012]
[86.84038544 326.36932373]
[71.49587250 322.71917725]
[57.14608765 316.16146851]
[44.33629227 306.94351196]
[33.55361557 295.41363525]
[25.20850754 282.00820923]
[19.61912727 267.23501587]
[16.99921227 251.65405273]
[17.44990349 235.85627747]
[20.95584488 220.44123840]
[27.38569641 205.99427795]
[36.49705124 193.06434631]
[47.94558334 182.14311218]
[61.29805374 173.64625549]
[76.04869843 167.89772034]
[91.63840485 165.11723328]
[91.86173248 150.11889648]
[92.08506012 135.12055969]
[92.30838776 120.12222290]
[92.53171539 105.12388611]
[90.26496887 102.00392151]
[89.38445282 97.89994812]
[90.29881287 93.45349121]
[93.11486053 89.46479034]
[94.00767517 74.49138641]
[94.90048981 59.51797867]
[95.79330444 44.54457474]
[85.58072662 32.78273010]
[86.69947052 17.61028671]
[97.97552490 7.94663525]
[98.86833954 -7.02677059]
[91.96615601 -21.26300812]
[100.44728088 -33.50718307]
[93.54509735 -47.74341965]
[102.02622223 -59.98759460]
[102.91903687 -74.96099854]
[96.01686096 -89.19724274]
[104.49797821 -101.44141388]
[105.39079285 -116.41481781]
[98.48861694 -130.65106201]
[106.96974182 -142.89523315]
[107.86255646 -157.86863708]
[108.75537109 -172.84204102]
[109.64818573 -187.81544495]
[110.54100037 -202.78884888]
[96.15867615 -207.28712463]
[83.27873993 -215.09220886]
[72.64762878 -225.74671936]
[64.88023376 -238.62825012]
[60.42435837 -252.98577881]
[59.53486252 -267.98342896]
[62.25911331 -282.74917603]
[68.43449402 -296.42544556]
[77.69806671 -308.21908569]
[89.50794983 -317.44723511]
[103.17498016 -323.57684326]
[117.90293121 -326.25564575]
[118.79574585 -341.22903442]
[119.68856049 -356.20245361]
[112.78637695 -370.43869019]
[121.26750183 -382.68286133]
[122.16031647 -397.65628052]
[123.05313110 -412.62966919]
[123.94594574 -427.60308838]
[124.83876801 -442.57647705]
[125.73158264 -457.54989624]
[111.51228333 -462.64776611]
[99.30600739 -471.54626465]
[90.10227966 -483.52407837]
[84.64718628 -497.61019897]
[83.38294983 -512.66271973]
[86.41206360 -527.46142578]
[93.48897552 -540.80657959]
[104.03997803 -551.61645508]
[117.20975494 -559.01464844]
[131.93069458 -562.40148926]
[147.00942993 -561.50244141]
[161.22360229 -556.39025879]
[173.42092896 -547.47949219]
[182.61262512 -535.49243164]
[188.05355835 -521.40087891]
[189.30267334 -506.34707642]
[186.25868225 -491.55142212]
[179.16838074 -478.21334839]
[168.60652161 -467.41412354]
[155.42932129 -460.02911377]
[140.70498657 -456.65707397]
[139.81216431 -441.68368530]
[138.91935730 -426.71026611]
[138.02653503 -411.73684692]
[137.13372803 -396.76345825]
[136.24090576 -381.79003906]
[143.20695496 -368.62481689]
[134.66197205 -355.30963135]
[133.76914978 -340.33624268]
[132.87632751 -325.36282349]
[147.18161011 -320.95288086]
[160.02340698 -313.24261475]
[170.65301514 -302.67648315]
[178.44950867 -289.86560059]
[182.95596313 -275.55239868]
[183.90628052 -260.56756592]
[181.24090576 -245.78187561]
[175.11047363 -232.05558777]
[165.86740112 -220.18832397]
[154.04551697 -210.87261963]
[140.32936096 -204.65336609]
[125.51440430 -201.89604187]
[124.62158966 -186.92263794]
[123.72877502 -171.94923401]
[122.83596039 -156.97581482]
[121.94314575 -142.00241089]
[128.90917969 -128.83717346]
[120.36420441 -115.52200317]
[119.47138977 -100.54859924]
[126.43743134 -87.38336182]
[117.89244843 -74.06818390]
[116.99962616 -59.09477997]
[123.96566772 -45.92953873]
[115.42068481 -32.61436844]
[122.38672638 -19.44912720]
[113.84174347 -6.13395500]
[112.94892883 8.83945084]
[122.99674988 19.77457619]
[122.30460358 34.97245789]
[110.76671600 45.43738937]
[109.87389374 60.41079330]
[108.98107910 75.38420105]
[108.08826447 90.35760498]
[107.53005219 105.34721375]
[107.30672455 120.34555054]
[107.08339691 135.34388733]
[106.86006927 150.34222412]
[106.63674164 165.34056091]
[120.62378693 168.12527466]
[133.90560913 173.31016541]
[146.07388306 180.73452759]
[156.75474548 190.16876221]
[165.62033081 201.32159424]
[172.39871216 213.84898376]
[176.88240051 227.36479187]
[178.93458557 241.45260620]
[178.49333191 255.67871094]
[175.57348633 269.60525513]
[170.26612854 282.80392456]
[162.73574829 294.86895752]
[153.21519470 305.42965698]
[141.99839783 314.16183472]
[129.43136597 320.79776001]
[115.90144348 325.13427734]
[101.82542419 327.03912354]
[101.15563965 342.02413940]
[100.48585510 357.00918579]
[99.81607056 371.99423218]
[102.22311401 376.62597656]
[102.57738495 381.25500488]
[101.22366333 385.09979248]
[98.76696014 387.62902832]
[97.42871857 402.56921387]
[96.09048462 417.50939941]
[94.75225067 432.44958496]
[93.41401672 447.38977051]
[92.07578278 462.32995605]
[98.55104065 476.76538086]
[89.70912170 488.75161743]
[96.18437958 503.18704224]
[87.34246063 515.17327881]
[86.00422668 530.11346436]
[97.46497345 543.32977295]
[95.85309601 560.40948486]
[82.65226746 570.82946777]
[81.53662109 585.78796387]
[80.42096710 600.74639893]
[79.30532074 615.70483398]
[87.68360901 632.10260010]
[77.24475861 646.20922852]
[76.35194397 661.18267822]
[75.45912933 676.15606689]
[74.56631470 691.12945557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 210]
[6 209]
[7 208]
[8 207]
[11 205]
[12 204]
[13 203]
[14 202]
[18 199]
[19 198]
[21 196]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 185]
[30 184]
[31 183]
[32 182]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[55 160]
[56 159]
[57 158]
[58 157]
[61 154]
[62 153]
[64 151]
[66 149]
[67 148]
[69 146]
[70 145]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[88 127]
[89 126]
[90 125]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
