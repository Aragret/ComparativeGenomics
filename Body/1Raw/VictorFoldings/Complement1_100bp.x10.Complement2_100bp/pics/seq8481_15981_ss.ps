%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[59.61605835 543.41937256]
[44.85032654 540.71014404]
[30.42125320 536.56658936]
[16.46780014 531.02874756]
[3.12435126 524.14984131]
[-9.48058510 515.99621582]
[-21.22561455 506.64627075]
[-31.99762154 496.19012451]
[-41.69286346 484.72848511]
[-50.21797180 472.37173462]
[-57.49083710 459.23886108]
[-63.44141769 445.45635986]
[-68.01240540 431.15698242]
[-71.15977478 416.47839355]
[-72.85322571 401.56198120]
[-73.07643127 386.55142212]
[-71.82725525 371.59127808]
[-69.11772156 356.82559204]
[-64.97393036 342.39660645]
[-59.43578720 328.44326782]
[-52.55662918 315.09994507]
[-44.40270615 302.49517822]
[-35.05254364 290.75033569]
[-24.59620094 279.97854614]
[-13.13437271 270.28350830]
[-0.77744871 261.75866699]
[12.35556507 254.48605347]
[26.13818550 248.53575134]
[40.43767929 243.96504211]
[55.11632538 240.81796265]
[70.03276062 239.12481689]
[69.80943298 224.12648010]
[69.58610535 209.12814331]
[69.36277771 194.12980652]
[62.65229416 207.54507446]
[52.32919693 218.42779541]
[39.28653717 225.83651733]
[24.65263748 229.13029480]
[9.69347477 228.02418518]
[-4.29683256 222.61389160]
[-16.10798454 213.36744690]
[-24.71819496 201.08476257]
[-29.38259888 186.82843018]
[-29.69767570 171.83174133]
[-25.63617134 157.39205933]
[-17.54944229 144.75857544]
[-6.13707352 135.02421570]
[7.61365032 129.03108215]
[22.51315498 127.29766083]
[37.27248383 129.97389221]
[50.61480713 136.82826233]
[61.38587952 147.26780701]
[68.65390015 160.38938904]
[71.78988647 175.05435181]
[75.76197815 160.58982849]
[79.73407745 146.12530518]
[83.70616913 131.66078186]
[87.67826843 117.19625854]
[91.65036774 102.73172760]
[90.37277222 99.96455383]
[90.07381439 96.67135620]
[90.95024109 93.21370697]
[93.06250763 90.02081299]
[96.31343079 87.53797913]
[101.13942719 73.33552551]
[105.96542358 59.13307190]
[110.79142761 44.93061447]
[98.51590729 53.55104065]
[83.58386230 54.97721100]
[69.89848328 48.83633041]
[61.03709793 36.73361206]
[59.31605148 21.83267212]
[65.18521881 8.02858353]
[77.11042023 -1.07029784]
[91.97442627 -3.08554626]
[105.89183044 2.50961876]
[115.22465515 14.25263500]
[117.53340912 29.07302284]
[124.41282654 15.74359417]
[131.29223633 2.41416502]
[138.17164612 -10.91526413]
[145.05105591 -24.24469376]
[151.93048096 -37.57412338]
[156.01014709 -52.00867462]
[157.12579346 -66.96713257]
[158.24143982 -81.92558289]
[159.35708618 -96.88403320]
[160.47273254 -111.84249115]
[161.58837891 -126.80094147]
[162.70402527 -141.75939941]
[163.81968689 -156.71784973]
[149.25999451 -160.49348450]
[135.60855103 -166.80836487]
[123.30417633 -175.45950317]
[112.74240112 -186.16877747]
[104.26275635 -198.59196472]
[98.13782501 -212.32968140]
[94.56449127 -226.94033813]
[93.65762329 -241.95423889]
[95.44638062 -256.88876343]
[99.87325287 -271.26382446]
[106.79594421 -284.61734009]
[115.99191284 -296.52001953]
[127.16554260 -306.58926392]
[139.95765686 -314.50140381]
[153.95703125 -320.00204468]
[168.71365356 -322.91439819]
[183.75315857 -323.14483643]
[198.59208679 -320.68597412]
[212.75343323 -315.61682129]
[225.78195190 -308.10034180]
[237.25883484 -298.37817383]
[246.81517029 -286.76281738]
[254.14373779 -273.62768555]
[259.00897217 -259.39498901]
[261.25445557 -244.52227783]
[260.80801392 -229.48764038]
[257.68399048 -214.77436829]
[251.98283386 -200.85543823]
[243.88778687 -188.17828369]
[233.65908813 -177.15043640]
[221.62554932 -168.12637329]
[208.17398071 -161.39620972]
[193.73681641 -157.17625427]
[178.77813721 -155.60220337]
[177.66249084 -140.64375305]
[176.54684448 -125.68529510]
[175.43118286 -110.72683716]
[174.31553650 -95.76838684]
[173.19989014 -80.80993652]
[172.08424377 -65.85147858]
[170.96859741 -50.89302826]
[178.57858276 -63.81928635]
[188.75679016 -74.83762360]
[201.04020691 -83.44679260]
[214.87001038 -89.25511169]
[229.61703491 -91.99835968]
[244.61038208 -91.55172729]
[259.16796875 -87.93553162]
[272.62750244 -81.31429291]
[284.37667847 -71.98923492]
[293.88098145 -60.38457489]
[300.70803833 -47.02825165]
[304.54727173 -32.52789688]
[305.22399902 -17.54316711]
[302.70742798 -2.75577712]
[297.11206055 11.16154957]
[288.69247437 23.57566643]
[277.83166504 33.92181396]
[265.02374268 41.72931290]
[250.85136414 46.64297104]
[235.95930481 48.43925476]
[221.02505493 47.03644180]
[206.72799683 42.49834824]
[193.71856689 35.03143311]
[182.58862305 24.97538567]
[173.84446716 12.78769207]
[167.88392639 -0.97718924]
[164.97816467 -15.69304848]
[165.25990295 -30.69470978]
[158.38049316 -17.36528015]
[151.50108337 -4.03585148]
[144.62165833 9.29357719]
[137.74224854 22.62300682]
[130.86283875 35.95243454]
[124.99388123 49.75661469]
[120.16788483 63.95906830]
[115.34188080 78.16152191]
[110.51588440 92.36398315]
[106.11489105 106.70382690]
[102.14279175 121.16835022]
[98.17069244 135.63287354]
[94.19860077 150.09739685]
[90.22650146 164.56192017]
[86.25440979 179.02644348]
[84.36111450 193.90647888]
[84.58444214 208.90481567]
[84.80776978 223.90315247]
[85.03109741 238.90148926]
[99.99133301 240.14978027]
[114.75717163 242.85841370]
[129.18641663 247.00134277]
[143.14009094 252.53865051]
[156.48381042 259.41702271]
[169.08906555 267.57019043]
[180.83447266 276.91964722]
[191.60690308 287.37533569]
[201.30259705 298.83657837]
[209.82820129 311.19299316]
[217.10159302 324.32556152]
[223.05271912 338.10781860]
[227.62428284 352.40704346]
[230.77224731 367.08551025]
[232.46629333 382.00183105]
[232.69009399 397.01239014]
[231.44151306 411.97259521]
[228.73257446 426.73840332]
[224.58935547 441.16754150]
[219.05177307 455.12112427]
[212.17315674 468.46469116]
[204.01972961 481.06979370]
[194.67004395 492.81500244]
[184.21412659 503.58721924]
[172.75268555 513.28271484]
[160.39610291 521.80804443]
[147.26338196 529.08117676]
[133.48100281 535.03204346]
[119.18168640 539.60333252]
[104.50316620 542.75097656]
[89.58679962 544.44470215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 179]
[32 178]
[33 177]
[34 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[59 170]
[64 169]
[65 168]
[66 167]
[67 166]
[78 165]
[79 164]
[80 163]
[81 162]
[82 161]
[83 160]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
