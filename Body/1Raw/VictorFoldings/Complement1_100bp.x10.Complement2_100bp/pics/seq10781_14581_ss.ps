%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[99.55577087 850.73083496]
[84.61989594 849.31927490]
[69.76043701 847.25305176]
[55.00607681 844.53613281]
[40.38529587 841.17370605]
[25.92631912 837.17236328]
[11.65705299 832.53973389]
[-2.39495778 827.28485107]
[-16.20258904 821.41784668]
[-29.73918915 814.94995117]
[-42.97862625 807.89373779]
[-55.89534760 800.26281738]
[-68.46442413 792.07189941]
[-80.66158295 783.33679199]
[-92.46328735 774.07434082]
[-103.84675598 764.30242920]
[-114.79001617 754.03997803]
[-125.27194214 743.30676270]
[-135.27230835 732.12347412]
[-144.77180481 720.51177979]
[-153.75209045 708.49395752]
[-162.19583130 696.09332275]
[-170.08674622 683.33374023]
[-177.40957642 670.23992920]
[-184.15022278 656.83703613]
[-190.29563904 643.15106201]
[-195.83396912 629.20831299]
[-200.75453186 615.03576660]
[-205.04783630 600.66076660]
[-208.70558167 586.11108398]
[-211.72071838 571.41473389]
[-214.08741760 556.60015869]
[-215.80110168 541.69592285]
[-216.85848999 526.73083496]
[-217.25750732 511.73370361]
[-216.99742126 496.73352051]
[-216.07870483 481.75924683]
[-214.50314331 466.83978271]
[-212.27377319 452.00393677]
[-209.39489746 437.28030396]
[-205.87207031 422.69735718]
[-201.71211243 408.28320312]
[-196.92303467 394.06570435]
[-191.51408386 380.07226562]
[-185.49569702 366.32992554]
[-178.87950134 352.86520386]
[-171.67826843 339.70407104]
[-163.90588379 326.87197876]
[-155.57736206 314.39364624]
[-146.70878601 302.29318237]
[-137.31724548 290.59396362]
[-127.42090607 279.31851196]
[-117.03884888 268.48867798]
[-106.19111633 258.12527466]
[-94.89865112 248.24839783]
[-83.18325043 238.87704468]
[-71.06752014 230.02932739]
[-58.57485962 221.72232056]
[-45.72937775 213.97206116]
[-32.55586624 206.79351807]
[-19.07975769 200.20054626]
[-5.32706451 194.20585632]
[8.67566872 188.82102966]
[22.90141106 184.05645752]
[37.32270432 179.92134094]
[51.91171265 176.42366028]
[66.64027405 173.57017517]
[81.47995758 171.36636353]
[96.40211487 169.81652832]
[95.50930023 154.84310913]
[94.61648560 139.86970520]
[93.72366333 124.89630127]
[92.83084869 109.92289734]
[86.62814331 123.58036804]
[76.55511475 134.69496155]
[63.57187271 142.20730591]
[48.91588593 145.40136719]
[33.98407364 143.97273254]
[20.19964409 138.05754089]
[8.87643814 128.21960449]
[1.09371138 115.39660645]
[-2.40673494 100.81076050]
[-1.29126096 85.85229492]
[4.33381319 71.94695282]
[13.93234158 60.42010498]
[26.58945274 52.37041473]
[41.09875488 48.56512833]
[56.07730865 49.36693954]
[70.09745789 54.69942856]
[81.82289124 64.05433655]
[90.13600922 76.54000854]
[94.24460602 90.96752167]
[97.34871674 76.29222107]
[100.45281982 61.61691666]
[95.73882294 46.51430511]
[105.94242859 35.66369629]
[109.04653931 20.98839569]
[112.15065002 6.31309271]
[115.25476074 -8.36220932]
[118.35887146 -23.03751183]
[104.78144073 -29.58859825]
[93.16676331 -39.19915390]
[84.19011688 -51.31043625]
[78.37337494 -65.21831512]
[76.05473328 -80.11419678]
[77.36898041 -95.13205719]
[82.23971558 -109.39878082]
[90.38375854 -122.08491516]
[101.32762146 -132.45291138]
[114.43504333 -139.89997864]
[128.94398499 -143.99316406]
[144.01091003 -144.49447632]
[158.75984192 -141.37480164]
[172.33329773 -134.81547546]
[183.94213867 -125.19788361]
[192.91145325 -113.08116150]
[198.71975708 -99.16976166]
[201.02937317 -84.27247620]
[199.70600891 -69.25540924]
[194.82662964 -54.99164200]
[186.67489624 -42.31044769]
[175.72474670 -31.94909286]
[162.61280823 -24.50997162]
[148.10139465 -20.42558861]
[133.03417969 -19.93340111]
[129.93006897 -5.25809956]
[126.82595062 9.41720295]
[123.72183990 24.09250450]
[120.61773682 38.76780701]
[125.55375671 52.82073975]
[115.12812805 64.72102356]
[112.02401733 79.39632416]
[108.91990662 94.07163239]
[107.80426025 109.03008270]
[108.69707489 124.00348663]
[109.58988953 138.97689819]
[110.48270416 153.95030212]
[111.37551880 168.92370605]
[126.37612152 168.68936157]
[141.37252808 169.11412048]
[156.33581543 170.19718933]
[171.23709106 171.93646240]
[186.04757690 174.32858276]
[200.73870850 177.36892700]
[215.28210449 181.05163574]
[229.64970398 185.36959839]
[243.81378174 190.31448364]
[257.74697876 195.87675476]
[271.42242432 202.04565430]
[284.81369019 208.80928040]
[297.89495850 216.15457153]
[310.64096069 224.06736755]
[323.02709961 232.53239441]
[335.02944946 241.53329468]
[346.62487793 251.05270386]
[357.79098511 261.07223511]
[368.50619507 271.57257080]
[378.74984741 282.53344727]
[388.50216675 293.93365479]
[397.74432373 305.75125122]
[406.45849609 317.96337891]
[414.62783813 330.54647827]
[422.23660278 343.47628784]
[429.27008057 356.72781372]
[435.71469116 370.27551270]
[441.55804443 384.09317017]
[446.78881836 398.15420532]
[451.39691162 412.43139648]
[455.37344360 426.89721680]
[458.71072388 441.52374268]
[461.40234375 456.28274536]
[463.44308472 471.14572144]
[464.82901001 486.08401489]
[465.55743408 501.06872559]
[465.62698364 516.07098389]
[465.03747559 531.06182861]
[463.79010010 546.01232910]
[461.88723755 560.89361572]
[459.33255005 575.67687988]
[456.13098145 590.33374023]
[452.28869629 604.83581543]
[447.81317139 619.15509033]
[442.71295166 633.26397705]
[436.99795532 647.13525391]
[430.67919922 660.74212646]
[423.76885986 674.05828857]
[416.28030396 687.05804443]
[408.22793579 699.71630859]
[399.62734985 712.00872803]
[390.49514771 723.91149902]
[380.84890747 735.40161133]
[370.70730591 746.45697021]
[360.08990479 757.05615234]
[349.01715088 767.17877197]
[337.51046753 776.80529785]
[325.59207153 785.91705322]
[313.28494263 794.49652100]
[300.61282349 802.52716064]
[287.60021973 809.99340820]
[274.27221680 816.88085938]
[260.65457153 823.17626953]
[246.77351379 828.86743164]
[232.65588379 833.94342041]
[218.32893372 838.39440918]
[203.82029724 842.21173096]
[189.15797424 845.38818359]
[174.37030029 847.91748047]
[159.48579407 849.79479980]
[144.53318787 851.01654053]
[129.54136658 851.58026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[92 133]
[93 132]
[94 131]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
