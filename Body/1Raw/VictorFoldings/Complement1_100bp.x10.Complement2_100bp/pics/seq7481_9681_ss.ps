%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[103.92145538 288.26928711]
[101.91634369 303.25164795]
[95.58267212 316.97665405]
[85.48362732 328.22390747]
[72.51721191 335.99331665]
[57.83639145 339.59399414]
[42.74657822 338.70581055]
[28.58954048 333.40774536]
[16.62411880 324.17083740]
[7.91426563 311.81649780]
[3.23445797 297.44323730]
[3.00082040 282.32910156]
[7.23412752 267.81805420]
[15.55795765 255.20040894]
[27.23215866 245.59808350]
[41.21867371 239.86494446]
[56.27382660 238.51077271]
[59.37793350 223.83547974]
[62.48204422 209.16017151]
[65.47682190 194.46217346]
[68.36209106 179.74227905]
[63.21738815 165.76438904]
[73.46468353 153.71020508]
[62.78185654 164.24002075]
[48.45632172 168.68739319]
[33.68844223 166.05874634]
[21.77740288 156.94132996]
[15.38415909 143.37200928]
[15.93697739 128.38220215]
[23.31235695 115.32066345]
[35.86262131 107.10537720]
[50.78400421 105.57166290]
[64.74303436 111.06214905]
[74.62123108 122.35025787]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[112.98247528 43.78660583]
[108.34817505 31.74974060]
[113.00747681 20.15341949]
[123.95650482 15.01091576]
[129.41186523 1.03811777]
[134.86721802 -12.93467999]
[140.32257080 -26.90747833]
[145.77793884 -40.88027573]
[151.23329163 -54.85307312]
[156.68864441 -68.82587433]
[162.14401245 -82.79866791]
[150.48881531 -73.35639191]
[136.23222351 -68.69274139]
[121.24993134 -69.42130280]
[107.51311493 -75.44622803]
[96.82907867 -85.97482300]
[90.60350037 -99.62188721]
[89.65546417 -114.59189606]
[94.10968781 -128.91529846]
[103.38015747 -140.70759583]
[116.24717712 -148.41732788]
[131.01786804 -151.03012085]
[145.74888611 -148.20222473]
[158.50213623 -140.30570984]
[167.59967041 -128.37950134]
[171.84458923 -113.99267578]
[170.67776489 -99.03577423]
[179.09237671 -111.45326996]
[187.50700378 -123.87076569]
[195.92161560 -136.28826904]
[204.33624268 -148.70576477]
[212.75085449 -161.12326050]
[221.16546631 -173.54075623]
[213.15534973 -184.33413696]
[208.86810303 -197.04895020]
[208.70764160 -210.44338989]
[212.67553711 -223.21376038]
[220.37225342 -234.12149048]
[231.03730774 -242.11317444]
[243.62438965 -246.42233276]
[256.90405273 -246.64289856]
[269.58374023 -242.76744080]
[278.36434937 -254.92889404]
[287.14495850 -267.09036255]
[295.92553711 -279.25180054]
[304.70614624 -291.41326904]
[293.26495361 -301.12579346]
[282.62109375 -311.70605469]
[272.84014893 -323.08883667]
[263.98245239 -335.20391846]
[256.10260010 -347.97662354]
[249.24916077 -361.32818604]
[243.46443176 -375.17633057]
[238.78405762 -389.43563843]
[235.23687744 -404.01821899]
[232.84478760 -418.83416748]
[231.62251282 -433.79211426]
[231.57762146 -448.79983521]
[232.71034241 -463.76483154]
[235.01373291 -478.59481812]
[238.47358704 -493.19836426]
[243.06854248 -507.48544312]
[248.77030945 -521.36791992]
[255.54371643 -534.76031494]
[263.34698486 -547.57995605]
[272.13201904 -559.74780273]
[281.84469604 -571.18890381]
[292.42504883 -581.83264160]
[303.80792236 -591.61346436]
[315.92309570 -600.47106934]
[328.69586182 -608.35076904]
[342.04751587 -615.20410156]
[355.89572144 -620.98864746]
[370.15509033 -625.66888428]
[384.73770142 -629.21594238]
[399.55368042 -631.60784912]
[414.51162720 -632.82995605]
[429.51934814 -632.87475586]
[444.48434448 -631.74182129]
[459.31430054 -629.43829346]
[473.91781616 -625.97833252]
[488.20483398 -621.38317871]
[502.08728027 -615.68127441]
[515.47955322 -608.90777588]
[528.29913330 -601.10437012]
[540.46691895 -592.31915283]
[551.90789795 -582.60644531]
[562.55157471 -572.02593994]
[572.33227539 -560.64294434]
[581.18969727 -548.52770996]
[589.06933594 -535.75482178]
[595.92248535 -522.40313721]
[601.70690918 -508.55487061]
[606.38702393 -494.29544067]
[609.93389893 -479.71279907]
[612.32568359 -464.89682007]
[613.54760742 -449.93884277]
[613.59222412 -434.93112183]
[612.45916748 -419.96612549]
[610.15551758 -405.13619995]
[606.69537354 -390.53271484]
[602.10009766 -376.24575806]
[596.39807129 -362.36334229]
[589.62438965 -348.97113037]
[581.82086182 -336.15167236]
[573.03552246 -323.98397827]
[563.32263184 -312.54309082]
[552.74206543 -301.89953613]
[541.35900879 -292.11892700]
[529.24365234 -283.26159668]
[516.47070312 -275.38214111]
[503.11892700 -268.52914429]
[489.27059937 -262.74484253]
[475.01113892 -258.06488037]
[460.42843628 -254.51815796]
[445.61242676 -252.12651062]
[430.65444946 -250.90470886]
[415.64672852 -250.86026001]
[400.68176270 -251.99345398]
[385.85183716 -254.29730225]
[371.24841309 -257.75759888]
[356.96148682 -262.35299683]
[343.07913208 -268.05517578]
[329.68701172 -274.82897949]
[316.86761475 -282.63265991]
[308.08700562 -270.47119141]
[299.30639648 -258.30975342]
[290.52578735 -246.14830017]
[281.74517822 -233.98683167]
[290.81927490 -220.02557373]
[293.84161377 -203.61376953]
[290.32080078 -187.26402283]
[280.76934814 -173.49046326]
[266.62927246 -164.42214966]
[250.05458069 -161.47401428]
[233.58296204 -165.12612915]
[225.16835022 -152.70863342]
[216.75372314 -140.29113770]
[208.33911133 -127.87364197]
[199.92449951 -115.45614624]
[191.50987244 -103.03865051]
[183.09526062 -90.62115479]
[176.11680603 -77.34331512]
[170.66145325 -63.37051392]
[165.20608521 -49.39771652]
[159.75073242 -35.42491913]
[154.29537964 -21.45212173]
[148.84001160 -7.47932291]
[143.38465881 6.49347496]
[137.92930603 20.46627235]
[141.50657654 37.64678574]
[127.03494263 49.03332520]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[88.18457794 156.59547424]
[93.12290955 171.62622070]
[83.08198547 182.62754822]
[80.19670868 197.34744263]
[81.61698914 206.37077332]
[77.15734863 212.26428223]
[74.05323792 226.93959045]
[70.94912720 241.61488342]
[84.16648865 248.94924927]
[94.63359833 259.85479736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 204]
[21 203]
[23 201]
[35 200]
[36 199]
[37 198]
[39 196]
[40 195]
[41 194]
[42 193]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[68 183]
[69 182]
[70 181]
[71 180]
[72 179]
[73 178]
[74 177]
[83 170]
[84 169]
[85 168]
[86 167]
[87 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
