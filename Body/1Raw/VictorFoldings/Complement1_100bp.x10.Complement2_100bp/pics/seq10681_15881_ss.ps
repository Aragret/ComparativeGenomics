%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[123.34490967 668.34747314]
[112.05764771 658.45483398]
[101.63777161 647.65240479]
[92.15837860 636.01593018]
[83.68594360 623.62701416]
[76.27991486 610.57263184]
[69.99223328 596.94427490]
[64.86699677 582.83764648]
[60.94016266 568.35156250]
[58.23927689 553.58764648]
[56.78328323 538.64959717]
[56.58238983 523.64202881]
[57.63801193 508.67031860]
[59.94274139 493.83944702]
[63.48041153 479.25344849]
[68.22621155 465.01464844]
[74.14685059 451.22286987]
[81.20079041 437.97491455]
[89.33856964 425.36367798]
[98.50308990 413.47766113]
[108.63008118 402.40017700]
[119.64849854 392.20895386]
[131.48106384 382.97546387]
[144.04476929 374.76449585]
[157.25148010 367.63366699]
[171.00859070 361.63293457]
[166.18258667 347.43048096]
[161.35659790 333.22802734]
[156.22822571 327.90621948]
[156.56617737 318.77804565]
[151.95217896 304.50531006]
[147.33816528 290.23257446]
[142.72415161 275.95983887]
[138.11013794 261.68710327]
[133.49613953 247.41438293]
[128.45921326 233.28535461]
[123.00386047 219.31254578]
[117.54850769 205.33975220]
[113.70999908 219.84030151]
[103.20581818 230.54833984]
[88.78171539 234.66481018]
[74.20812988 231.11367798]
[63.29455185 220.82321167]
[58.89377213 206.48329163]
[62.15613937 191.84236145]
[72.22888184 180.72750854]
[86.47900391 176.04414368]
[101.18156433 179.01646423]
[112.49284363 188.86680603]
[109.17058563 174.23934937]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[71.63928986 51.23304749]
[68.99117279 39.01948166]
[75.17032623 28.62022018]
[71.84806061 13.99275970]
[68.52580261 -0.63470072]
[65.20354462 -15.26216125]
[61.88128662 -29.88962173]
[58.55902481 -44.51708221]
[55.23676682 -59.14454269]
[52.17518997 -62.22362137]
[50.42835617 -65.76100922]
[49.97890472 -69.28710938]
[50.65873718 -72.38620758]
[52.17968369 -74.74096680]
[49.73395538 -89.54023743]
[47.28822708 -104.33950806]
[44.84249878 -119.13877869]
[34.95864105 -131.49272156]
[40.51723862 -145.31123352]
[38.07151413 -160.11050415]
[35.62578583 -174.90977478]
[25.74192810 -187.26371765]
[31.30052567 -201.08222961]
[16.26741791 -201.03952026]
[1.42215359 -203.40896606]
[-12.85073757 -208.12921143]
[-26.18155479 -215.07798767]
[-38.22499466 -224.07530212]
[-48.66910934 -234.88810730]
[-57.24336243 -247.23632812]
[-63.72566986 -260.80007935]
[-67.94812012 -275.22808838]
[-69.80133820 -290.14660645]
[-69.23731995 -305.16918945]
[-66.27068329 -319.90673828]
[-60.97826767 -333.97747803]
[-53.49715805 -347.01702881]
[-44.02113342 -358.68753052]
[-32.79564285 -368.68676758]
[-20.11145973 -376.75570679]
[-6.29713106 -382.68533325]
[8.28951836 -386.32205200]
[23.27065849 -387.57168579]
[38.25824356 -386.40188599]
[52.86405563 -382.84289551]
[66.70977020 -376.98693848]
[79.43675995 -368.98565674]
[90.71534729 -359.04638672]
[100.25340271 -347.42648315]
[107.80385590 -334.42700195]
[113.17115021 -320.38461304]
[116.21623993 -305.66308594]
[116.86026764 -290.64373779]
[115.08654022 -275.71554565]
[110.94100189 -261.26528931]
[104.53103638 -247.66717529]
[96.02267456 -235.27346802]
[85.63630676 -224.40518188]
[73.64096069 -215.34384155]
[60.34734344 -208.32415771]
[46.09979630 -203.52795410]
[55.80871964 -192.23255920]
[50.42505646 -177.35549927]
[52.87078476 -162.55622864]
[55.31651306 -147.75695801]
[65.02543640 -136.46156311]
[59.64176941 -121.58450317]
[62.08749771 -106.78523254]
[64.53322601 -91.98596191]
[66.97895050 -77.18669128]
[69.86422729 -62.46680069]
[73.18648529 -47.83934021]
[76.50874329 -33.21187973]
[79.83100128 -18.58442116]
[83.15326691 -3.95696020]
[86.47552490 10.67049980]
[89.79778290 25.29796028]
[102.39700317 37.51379395]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[123.79804993 170.91708374]
[127.12030792 185.54455566]
[131.52130127 199.88439941]
[136.97665405 213.85719299]
[142.43202209 227.82998657]
[145.91647339 230.42085266]
[148.16871643 233.65997314]
[149.13627625 237.08038330]
[148.92367554 240.24604797]
[147.76887512 242.80036926]
[152.38287354 257.07308960]
[156.99688721 271.34582520]
[161.61090088 285.61856079]
[166.22489929 299.89129639]
[170.83891296 314.16403198]
[175.55905151 328.40203857]
[180.38505554 342.60449219]
[185.21104431 356.80694580]
[199.77604675 353.18380737]
[214.59315491 350.79214478]
[229.55842590 349.64874268]
[244.56687927 349.76165771]
[259.51324463 351.13003540]
[274.29269409 353.74429321]
[288.80157471 357.58612061]
[302.93804932 362.62854004]
[316.60302734 368.83621216]
[329.70062256 376.16558838]
[342.13897705 384.56521606]
[353.83084106 393.97622681]
[364.69418335 404.33258057]
[374.65283203 415.56164551]
[383.63693237 427.58462524]
[391.58343506 440.31726074]
[398.43664551 453.67016602]
[404.14846802 467.54971313]
[408.67883301 481.85852051]
[411.99594116 496.49624634]
[414.07659912 511.36022949]
[414.90612793 526.34619141]
[414.47875977 541.34893799]
[412.79748535 556.26336670]
[409.87408447 570.98480225]
[405.72906494 585.40997314]
[400.39151001 599.43768311]
[393.89886475 612.96960449]
[386.29666138 625.91070557]
[377.63821411 638.17034912]
[367.98428345 649.66241455]
[357.40255737 660.30633545]
[345.96728516 670.02752686]
[333.75863647 678.75769043]
[320.86230469 686.43566895]
[307.36871338 693.00750732]
[293.37252808 698.42724609]
[278.97192383 702.65679932]
[264.26791382 705.66644287]
[249.36360168 707.43518066]
[234.36357117 707.95050049]
[219.37301636 707.20880127]
[204.49710083 705.21539307]
[189.84017944 701.98413086]
[175.50503540 697.53778076]
[161.59223938 691.90740967]
[148.19937134 685.13262939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 163]
[27 162]
[28 161]
[30 160]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[36 150]
[37 149]
[38 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[56 139]
[57 138]
[58 137]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[72 128]
[73 127]
[74 126]
[75 125]
[77 123]
[78 122]
[79 121]
[81 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
