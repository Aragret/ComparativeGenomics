%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[82.25041962 578.03594971]
[68.62773895 584.36254883]
[54.31952667 588.93182373]
[39.55144882 591.67175293]
[24.55641747 592.53906250]
[9.57092476 591.52014160]
[-5.16868591 588.63098145]
[-19.42994881 583.91723633]
[-32.98794556 577.45318604]
[-45.62884521 569.34075928]
[-57.15328217 559.70800781]
[-67.37950134 548.70672607]
[-76.14621735 536.51049805]
[-83.31516266 523.31164551]
[-88.77328491 509.31835938]
[-92.43449402 494.75134277]
[-94.24105072 479.84027100]
[-94.16445923 464.82037354]
[-92.20593262 449.92852783]
[-88.39634705 435.39956665]
[-82.79579926 421.46267700]
[-75.49261475 408.33761597]
[-66.60197449 396.23144531]
[-56.26409149 385.33505249]
[-44.64201355 375.82028198]
[-31.91903687 367.83724976]
[-18.29582405 361.51181030]
[-3.98722863 356.94372559]
[10.78108025 354.20504761]
[25.77618599 353.33898926]
[40.76159286 354.35919189]
[43.64686584 339.63931274]
[46.53213882 324.91940308]
[41.38743210 310.94152832]
[51.63473129 298.88732910]
[54.52000427 284.16744995]
[57.40527725 269.44754028]
[60.29055023 254.72766113]
[63.17582321 240.00776672]
[52.31343842 231.72975159]
[46.04735184 219.52053833]
[45.65111923 205.73677063]
[51.25905991 193.06675720]
[61.82889557 184.00613403]
[75.33501434 180.36640930]
[78.43911743 165.69110107]
[81.54322815 151.01580811]
[76.60720825 136.96287537]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[90.47375488 71.40599823]
[100.67735291 60.55538940]
[91.23018646 72.20661163]
[78.91596985 80.77165985]
[64.70585632 85.57505798]
[49.72050858 86.23799133]
[35.14174271 82.70816803]
[22.11929893 75.26398468]
[11.68017960 64.49250031]
[4.64765787 51.24321365]
[1.57634747 36.56101227]
[2.70846486 21.60379601]
[7.95472670 7.55115509]
[16.90139008 -4.48866224]
[28.84288597 -13.56614494]
[42.83745575 -18.96540451]
[57.78142929 -20.26063538]
[72.49626923 -17.34968567]
[85.82148743 -10.46212864]
[96.70621490 -0.14114465]
[104.29203033 12.79931068]
[107.98069000 27.33869934]
[107.48068237 42.33380127]
[114.75391388 29.21510696]
[122.02714539 16.09641266]
[129.30036926 2.97771835]
[136.57360840 -10.14097595]
[143.84683228 -23.25967026]
[135.69882202 -39.45743942]
[138.87722778 -57.14860535]
[151.92358398 -69.28298950]
[169.48554993 -71.14015961]
[176.36495972 -84.46958923]
[175.81851196 -100.28135681]
[188.53117371 -108.04263306]
[195.41059875 -121.37206268]
[202.29000854 -134.70149231]
[209.16941833 -148.03092957]
[216.04882812 -161.36035156]
[222.92823792 -174.68978882]
[229.80764771 -188.01921082]
[217.28730774 -196.30703735]
[205.73643494 -205.89999390]
[195.29048157 -216.68559265]
[186.07191467 -228.53739929]
[178.18881226 -241.31643677]
[171.73359680 -254.87289429]
[166.78196716 -269.04782104]
[163.39198303 -283.67501831]
[161.60336304 -298.58300781]
[161.43708801 -313.59698486]
[162.89512634 -328.54092407]
[165.96035767 -343.23962402]
[170.59686279 -357.52075195]
[176.75027466 -371.21682739]
[184.34843445 -384.16732788]
[193.30229187 -396.22036743]
[203.50682068 -407.23464966]
[214.84242249 -417.08105469]
[227.17616272 -425.64410400]
[240.36344910 -432.82345581]
[254.24966431 -438.53485107]
[268.67199707 -442.71142578]
[283.46133423 -445.30413818]
[298.44433594 -446.28259277]
[313.44528198 -445.63537598]
[328.28829956 -443.36999512]
[342.79937744 -439.51309204]
[356.80838013 -434.10983276]
[370.15106201 -427.22360229]
[382.67095947 -418.93508911]
[394.22131348 -409.34152222]
[404.66668701 -398.55535889]
[413.88461304 -386.70306396]
[421.76702881 -373.92358398]
[428.22149658 -360.36679077]
[433.17236328 -346.19158936]
[436.56158447 -331.56420898]
[438.34939575 -316.65612793]
[438.51486206 -301.64212036]
[437.05603027 -286.69827271]
[433.98999023 -271.99972534]
[429.35272217 -257.71887207]
[423.19857788 -244.02311707]
[415.59970093 -231.07304382]
[406.64520264 -219.02047729]
[396.44009399 -208.00672913]
[385.10397339 -198.16094971]
[372.76974487 -189.59854126]
[359.58209229 -182.41992188]
[345.69555664 -176.70925903]
[331.27301025 -172.53347778]
[316.48352051 -169.94155884]
[301.50048828 -168.96389771]
[286.49957275 -169.61193848]
[271.65667725 -171.87809753]
[257.14578247 -175.73579407]
[243.13708496 -181.13980103]
[236.25767517 -167.81036377]
[229.37826538 -154.48094177]
[222.49884033 -141.15150452]
[215.61943054 -127.82208252]
[208.74002075 -114.49265289]
[201.86061096 -101.16322327]
[202.89912415 -86.30486298]
[189.69439697 -77.59017944]
[182.81498718 -64.26074982]
[189.81748962 -54.34408569]
[191.95187378 -42.32005692]
[188.75267029 -30.45978165]
[180.76774597 -21.03001213]
[169.46559143 -15.85991669]
[156.96553040 -15.98644066]
[149.69229126 -2.86774635]
[142.41906738 10.25094795]
[135.14584351 23.36964226]
[127.87260437 36.48833466]
[120.59938049 49.60702896]
[115.35266113 63.65950012]
[120.28868103 77.71243286]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[106.42214203 143.26930237]
[96.21853638 154.11991882]
[93.11442566 168.79521179]
[90.01031494 183.47052002]
[102.42211914 194.39474487]
[107.60150909 209.99826050]
[104.22470856 225.99244690]
[93.30602264 238.03147888]
[77.89571381 242.89305115]
[75.01043701 257.61294556]
[72.12516785 272.33282471]
[69.23989868 287.05270386]
[66.35462189 301.77261353]
[71.29295349 316.80337524]
[61.25202942 327.80468750]
[58.36675644 342.52456665]
[55.48148346 357.24447632]
[69.74314117 361.95703125]
[83.30168152 368.41995239]
[95.94326782 376.53128052]
[107.46851349 386.16308594]
[117.69565582 397.16348267]
[126.46340179 409.35897827]
[133.63346863 422.55722046]
[139.09275818 436.55004883]
[142.75520325 451.11679077]
[144.56300354 466.02767944]
[144.48767090 481.04757690]
[142.53039551 495.93960571]
[138.72204590 510.46887207]
[133.12266541 524.40625000]
[125.82058716 537.53192139]
[116.93096161 549.63885498]
[106.59400177 560.53607178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 193]
[32 192]
[33 191]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[45 180]
[46 179]
[47 178]
[49 176]
[50 175]
[52 173]
[54 171]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[80 165]
[84 159]
[85 158]
[87 156]
[88 155]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
