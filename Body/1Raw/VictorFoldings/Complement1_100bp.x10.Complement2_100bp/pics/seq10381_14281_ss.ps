%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[116.37904358 587.64056396]
[117.35679626 572.36633301]
[125.33075714 559.30206299]
[138.46855164 551.44989014]
[137.57574463 536.47650146]
[136.68292236 521.50305176]
[135.79010010 506.52966309]
[134.89729309 491.55627441]
[134.00447083 476.58285522]
[133.11166382 461.60946655]
[132.21884155 446.63604736]
[121.77999878 432.52941895]
[130.15827942 416.13165283]
[129.04263306 401.17321777]
[127.92698669 386.21475220]
[113.69608307 378.03192139]
[107.08047485 362.82681274]
[110.86904144 346.51275635]
[123.76165009 335.56393433]
[122.42341614 320.62374878]
[121.08518219 305.68356323]
[119.74694824 290.74337769]
[110.66857147 282.74905396]
[109.43139648 270.31307983]
[117.24138641 260.04824829]
[116.01441193 245.09851074]
[114.67617798 230.15832520]
[113.33794403 215.21813965]
[111.99971008 200.27795410]
[110.66147614 185.33776855]
[108.32598877 170.52070618]
[105.00373077 155.89324951]
[101.68147278 141.26577759]
[98.35920715 126.63832092]
[95.03694916 112.01086426]
[91.28064728 97.48880005]
[87.09364319 83.08502197]
[82.90663147 68.68123627]
[78.71961975 54.27745819]
[74.53260803 39.87367630]
[59.42667770 39.35565567]
[45.23967743 34.20088959]
[33.35669327 24.92603111]
[24.93371201 12.44931412]
[20.78519821 -2.00033665]
[21.30533028 -17.00434875]
[26.43059540 -31.09377098]
[35.64723206 -42.89308167]
[48.04271317 -51.25448227]
[43.85570526 -65.65826416]
[28.75234604 -66.71369934]
[14.94729042 -72.86125183]
[4.09886408 -83.34132385]
[-2.49700642 -96.87515259]
[-4.06159258 -111.82083893]
[-0.42525521 -126.37252808]
[7.95439816 -138.77859497]
[20.05000305 -147.55250549]
[15.86299133 -161.95629883]
[4.58113337 -173.04818726]
[8.45827675 -187.42932129]
[-2.82358027 -198.52122498]
[1.05356336 -212.90235901]
[-3.13344789 -227.30615234]
[-7.32045889 -241.70993042]
[-18.60231590 -252.80183411]
[-14.72517300 -267.18295288]
[-18.91218376 -281.58673096]
[-23.09919548 -295.99053955]
[-27.28620720 -310.39431763]
[-31.47321701 -324.79809570]
[-35.66022873 -339.20187378]
[-50.50165939 -336.88665771]
[-65.51731110 -336.48837280]
[-80.46060181 -338.01358032]
[-95.08616638 -341.43722534]
[-109.15382385 -346.70309448]
[-122.43257904 -353.72470093]
[-134.70437622 -362.38674927]
[-145.76771545 -372.54702759]
[-155.44090271 -384.03866577]
[-163.56512451 -396.67294312]
[-170.00694275 -410.24246216]
[-174.66059875 -424.52432251]
[-177.44967651 -439.28405762]
[-178.32836914 -454.27923584]
[-177.28224182 -469.26370239]
[-174.32849121 -483.99136353]
[-169.51559448 -498.22036743]
[-162.92260742 -511.71704102]
[-154.65777588 -524.25982666]
[-144.85682678 -535.64270020]
[-133.68070984 -545.67877197]
[-121.31291962 -554.20318604]
[-107.95656586 -561.07604980]
[-93.83097076 -566.18444824]
[-79.16808319 -569.44451904]
[-64.20867920 -570.80273438]
[-49.19841766 -570.23675537]
[-34.38376999 -567.75592041]
[-20.00801277 -563.40093994]
[-6.30720520 -557.24334717]
[6.49367237 -549.38421631]
[18.18441772 -539.95263672]
[28.57305908 -529.10345459]
[37.48900604 -517.01483154]
[44.78584671 -503.88531494]
[50.34376144 -489.93045044]
[54.07149124 -475.37942505]
[55.90781403 -460.47116089]
[55.82258224 -445.45050049]
[53.81718826 -430.56402588]
[49.92457199 -416.05624390]
[44.20864868 -402.16537476]
[36.76327515 -389.11947632]
[27.71071815 -377.13284302]
[17.19962692 -366.40228271]
[5.40259981 -357.10397339]
[-7.48664236 -349.39062500]
[-21.25644684 -343.38888550]
[-17.06943512 -328.98510742]
[-12.88242435 -314.58132935]
[-8.69541359 -300.17755127]
[-4.50840187 -285.77374268]
[-0.32139078 -271.36996460]
[10.66098404 -261.30831909]
[7.08332300 -245.89694214]
[11.27033424 -231.49314880]
[15.45734501 -217.08937073]
[26.43972015 -207.02772522]
[22.86205864 -191.61633301]
[33.84443283 -181.55468750]
[30.26677322 -166.14331055]
[34.45378494 -151.73951721]
[49.36801529 -150.81704712]
[63.09247589 -144.83638000]
[73.96299744 -134.50167847]
[80.65428162 -121.04625702]
[82.34144592 -106.08552551]
[78.80168915 -91.42298126]
[70.44346619 -78.83281708]
[58.25948715 -69.84527588]
[62.44649506 -55.44149399]
[77.39273071 -55.02801132]
[91.49848175 -50.00824356]
[103.37809753 -40.86194611]
[111.86050415 -28.47486496]
[116.10459900 -14.05299854]
[115.68268585 0.99482709]
[110.62348938 15.19457912]
[101.41063690 27.15140724]
[88.93638611 35.68666458]
[93.12339783 50.09044647]
[97.31040955 64.49422455]
[101.49742126 78.89801025]
[105.68443298 93.30179596]
[108.22148895 94.99082947]
[110.20005035 97.64032745]
[111.26319122 101.04520416]
[111.13474274 104.87139130]
[109.66441345 108.68860626]
[112.98667145 123.31606293]
[116.30892944 137.94352722]
[119.63118744 152.57098389]
[122.95345306 167.19844055]
[129.43464661 153.67091370]
[142.14428711 145.70442200]
[157.14416504 145.76748657]
[169.78637695 153.84054565]
[176.15362549 167.42208862]
[174.27291870 182.30371094]
[164.72705078 193.87420654]
[150.47387695 198.54830933]
[135.92991638 194.87770081]
[125.60166168 183.99954224]
[126.93989563 198.93972778]
[128.27813721 213.87991333]
[129.61636353 228.82009888]
[130.95460510 243.76028442]
[134.83714294 252.02850342]
[132.19984436 258.93258667]
[142.91789246 273.90606689]
[134.68713379 289.40515137]
[136.02537537 304.34533691]
[137.36360168 319.28552246]
[138.70184326 334.22570801]
[151.02505493 340.40060425]
[158.62762451 351.76806641]
[159.61268616 365.29946899]
[153.82957458 377.45266724]
[142.88543701 385.09912109]
[144.00108337 400.05755615]
[145.11674500 415.01602173]
[154.36302185 424.00872803]
[154.98429871 436.49063110]
[147.19224548 445.74322510]
[148.08506775 460.71664429]
[148.97787476 475.69003296]
[149.87069702 490.66345215]
[150.76351929 505.63687134]
[151.65632629 520.61029053]
[152.54914856 535.58367920]
[153.44195557 550.55706787]
[167.41975403 556.79241943]
[176.88964844 568.81658936]
[179.67553711 583.86639404]
[175.13722229 598.48358154]
[164.31759644 609.30920410]
[149.70292664 613.85565186]
[134.65155029 611.07812500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[13 193]
[14 192]
[15 191]
[19 186]
[20 185]
[21 184]
[22 183]
[25 181]
[26 179]
[27 178]
[28 177]
[29 176]
[30 175]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[49 143]
[50 142]
[58 134]
[59 133]
[61 131]
[63 129]
[64 128]
[65 127]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
