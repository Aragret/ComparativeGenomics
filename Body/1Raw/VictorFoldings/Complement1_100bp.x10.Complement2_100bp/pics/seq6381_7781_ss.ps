%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[31.79490089 593.26483154]
[18.93729210 600.99896240]
[5.64015913 607.95037842]
[-8.04889679 614.09411621]
[-22.08087158 619.40814209]
[-36.40553284 623.87353516]
[-50.97160721 627.47424316]
[-65.72694397 630.19738770]
[-80.61872864 632.03320312]
[-95.59365082 632.97515869]
[-110.59809875 633.01989746]
[-125.57836151 632.16717529]
[-140.48081970 630.42010498]
[-155.25212097 627.78497314]
[-169.83940125 624.27111816]
[-184.19041443 619.89117432]
[-198.25381470 614.66082764]
[-211.97923279 608.59881592]
[-225.31755066 601.72680664]
[-238.22102356 594.06939697]
[-250.64344788 585.65399170]
[-262.54037476 576.51074219]
[-273.86920166 566.67236328]
[-284.58935547 556.17413330]
[-294.66247559 545.05352783]
[-304.05252075 533.35040283]
[-312.72589111 521.10668945]
[-320.65145874 508.36618042]
[-327.80093384 495.17449951]
[-334.14868164 481.57885742]
[-339.67199707 467.62792969]
[-344.35110474 453.37164307]
[-348.16921997 438.86105347]
[-351.11273193 424.14807129]
[-353.17108154 409.28543091]
[-354.33688354 394.32626343]
[-354.60595703 379.32415771]
[-353.97738647 364.33282471]
[-352.45339966 349.40588379]
[-350.03942871 334.59683228]
[-346.74414062 319.95864868]
[-342.57931519 305.54373169]
[-337.55987549 291.40368652]
[-331.70376587 277.58914185]
[-325.03198242 264.14953613]
[-317.56842041 251.13299561]
[-309.33972168 238.58610535]
[-300.37542725 226.55378723]
[-290.70758057 215.07910156]
[-280.37081909 204.20312500]
[-269.40209961 193.96481323]
[-257.84075928 184.40080261]
[-245.72810364 175.54531860]
[-233.10755920 167.43008423]
[-220.02426147 160.08413696]
[-206.52507019 153.53378296]
[-192.65829468 147.80244446]
[-178.47358704 142.91067505]
[-164.02171326 138.87596130]
[-149.35441589 135.71275330]
[-134.52418518 133.43237305]
[-119.58414459 132.04298401]
[-104.58773804 131.54956055]
[-89.58866882 131.95388794]
[-74.64063263 133.25448608]
[-59.79712296 135.44671631]
[-45.11128998 138.52272034]
[-30.63570404 142.47149658]
[-16.42218018 147.27891541]
[-2.52160048 152.92776489]
[11.01627350 159.39781189]
[24.14297867 166.66589355]
[36.81152725 174.70600891]
[45.59212875 162.54455566]
[54.37273407 150.38310242]
[63.15333557 138.22164917]
[71.93393707 126.06018829]
[80.71454620 113.89872742]
[89.49514771 101.73727417]
[97.25153351 88.89833069]
[103.93173218 75.46795654]
[103.14993286 59.66608047]
[115.74562836 51.71638870]
[122.42582703 38.28601074]
[129.10601807 24.85563660]
[116.29141235 17.04108429]
[104.19602203 8.15384388]
[92.90940857 -1.74028182]
[82.51512909 -12.56804085]
[73.09013367 -24.24926758]
[64.70422363 -36.69747543]
[57.41946793 -49.82049942]
[51.28980637 -63.52118301]
[46.36062622 -77.69808960]
[42.66841507 -92.24624634]
[40.24051666 -107.05796051]
[39.09489822 -122.02355194]
[39.24005127 -137.03222656]
[40.67489243 -151.97286987]
[43.38880157 -166.73484802]
[47.36168671 -181.20887756]
[52.56413269 -195.28779602]
[58.95761871 -208.86737061]
[66.49481964 -221.84706116]
[75.11991882 -234.13075256]
[84.76905823 -245.62750244]
[95.37081146 -256.25219727]
[106.84667206 -265.92620850]
[119.11167908 -274.57785034]
[132.07502747 -282.14309692]
[145.64073181 -288.56594849]
[159.70837402 -293.79882812]
[174.17378235 -297.80300903]
[188.92985535 -300.54885864]
[203.86735535 -302.01599121]
[218.87568665 -302.19360352]
[233.84371948 -301.08038330]
[248.66064453 -298.68450928]
[263.21676636 -295.02377319]
[277.40429688 -290.12527466]
[291.11819458 -284.02526855]
[304.25695801 -276.76892090]
[316.72326660 -268.40994263]
[328.42486572 -259.01022339]
[339.27505493 -248.63940430]
[349.19357300 -237.37420654]
[358.10696411 -225.29808044]
[365.94921875 -212.50039673]
[372.66229248 -199.07592773]
[378.19644165 -185.12406921]
[382.51074219 -170.74810791]
[385.57324219 -156.05448914]
[387.36126709 -141.15199280]
[387.86154175 -126.15095520]
[387.07043457 -111.16243744]
[384.99371338 -96.29742432]
[381.64685059 -81.66595459]
[377.05453491 -67.37637329]
[371.25082397 -53.53446579]
[364.27865601 -40.24272156]
[356.18969727 -27.59954453]
[347.04379272 -15.69854546]
[336.90866089 -4.62783575]
[325.85934448 5.53061962]
[313.97766113 14.70160961]
[301.35156250 22.81723595]
[288.07455444 29.81740952]
[274.24493408 35.65030289]
[259.96505737 40.27273178]
[245.34068298 43.65047455]
[230.48008728 45.75852203]
[215.49327087 46.58126450]
[200.49121094 46.11260986]
[185.58497620 44.35603333]
[170.88491821 41.32453537]
[156.49989319 37.04056168]
[142.53639221 31.53583145]
[135.85620117 44.96620560]
[129.17601013 58.39658356]
[130.43562317 73.23783112]
[117.36210632 82.14815521]
[110.68191528 95.57852936]
[123.77175140 88.25348663]
[138.76358032 87.75838470]
[152.30818176 94.20381927]
[161.37966919 106.14987183]
[163.95144653 120.92775726]
[159.44895935 135.23606873]
[148.87808228 145.87828064]
[134.60038757 150.47689819]
[119.80553436 148.00459290]
[107.79873657 139.01365662]
[101.26234436 125.51271820]
[101.65660095 110.51787567]
[92.87599945 122.67933655]
[84.09539795 134.84078979]
[75.31478882 147.00224304]
[66.53418732 159.16369629]
[57.75358582 171.32514954]
[48.97298050 183.48661804]
[60.59113693 192.98156738]
[71.62065125 203.15432739]
[82.02205658 213.96850586]
[91.75810242 225.38537598]
[100.79395294 237.36405945]
[109.09724426 249.86169434]
[116.63826752 262.83352661]
[123.39002228 276.23312378]
[129.32833862 290.01254272]
[134.43194580 304.12240601]
[138.68260193 318.51226807]
[142.06506348 333.13055420]
[144.56723022 347.92495728]
[146.18016052 362.84252930]
[146.89807129 377.82986450]
[146.71838379 392.83331299]
[145.64173889 407.79913330]
[143.67201233 422.67379761]
[140.81623840 437.40405273]
[137.08464050 451.93713379]
[132.49058533 466.22103882]
[127.05050659 480.20465088]
[120.78388214 493.83789062]
[113.71315765 507.07196045]
[105.86363220 519.85943604]
[97.26340485 532.15466309]
[87.94326782 543.91351318]
[77.93657684 555.09393311]
[67.27916718 565.65588379]
[56.00918198 575.56158447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 180]
[74 179]
[75 178]
[76 177]
[77 176]
[78 175]
[79 174]
[80 162]
[81 161]
[83 159]
[84 158]
[85 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
