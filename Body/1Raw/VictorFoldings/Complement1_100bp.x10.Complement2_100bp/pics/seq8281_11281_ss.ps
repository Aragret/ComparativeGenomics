%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[87.98051453 679.39007568]
[73.01680756 680.89300537]
[58.01947784 679.77441406]
[43.44426727 676.06842041]
[29.73410797 669.88763428]
[17.30563164 661.41979980]
[6.53652716 650.92230225]
[-2.24594522 638.71411133]
[-8.77489567 625.16625977]
[-12.85191727 610.69049072]
[-14.35311222 595.72662354]
[-13.23286343 580.72937012]
[-9.52521229 566.15460205]
[-3.34283066 552.44512939]
[5.12640619 540.01763916]
[15.62512684 529.24969482]
[27.83428764 520.46862793]
[41.38286591 513.94122314]
[55.85913849 509.86584473]
[70.82318115 508.36633301]
[71.93882751 493.40789795]
[73.05448151 478.44943237]
[74.17012787 463.49096680]
[75.28577423 448.53253174]
[76.40142822 433.57406616]
[77.51707458 418.61563110]
[75.13465118 414.47640991]
[75.32717133 408.79663086]
[78.89515686 403.23056030]
[80.45568085 388.31195068]
[81.45993805 373.34561157]
[81.90654755 358.35226440]
[82.35314941 343.35891724]
[68.81899261 338.88537598]
[57.08133316 330.76950073]
[48.09701920 319.66201782]
[42.60151672 306.45788574]
[41.04871368 292.22433472]
[43.57344437 278.11450195]
[49.97981644 265.27407837]
[59.75640488 254.74824524]
[72.11705017 247.39657593]
[86.06407166 243.82289124]
[86.73385620 228.83786011]
[87.40364075 213.85281372]
[88.07342529 198.86778259]
[88.74320984 183.88273621]
[89.41299438 168.89770508]
[90.08277893 153.91265869]
[75.31407928 148.94416809]
[62.54002380 140.02095032]
[52.79276276 127.86400604]
[46.85988235 113.45562744]
[45.22076416 97.96002960]
[48.00785065 82.62925720]
[54.99594498 68.70205688]
[65.62039948 57.30375290]
[79.02275848 49.35534286]
[94.12008667 45.49905777]
[94.56669617 30.50570679]
[95.01329803 15.51235676]
[81.20410919 11.24076748]
[68.98373413 3.54322720]
[59.18363953 -7.04910088]
[52.46867752 -19.80835342]
[49.29200363 -33.85998154]
[49.86449432 -48.24268723]
[54.14075470 -61.97420120]
[61.82265472 -74.11834717]
[72.38011169 -83.84889221]
[85.08765411 -90.50572968]
[99.07427216 -93.63969421]
[99.74405670 -108.62473297]
[100.41384125 -123.60977173]
[101.08362579 -138.59480286]
[92.22083282 -154.73582458]
[102.23503876 -169.14701843]
[102.68164825 -184.14036560]
[103.12825012 -199.13371277]
[103.57485962 -214.12707520]
[104.02146149 -229.12042236]
[104.46807098 -244.11376953]
[104.91467285 -259.10711670]
[103.91041565 -274.07345581]
[101.46469116 -288.87274170]
[99.01895905 -303.67199707]
[96.57323456 -318.47128296]
[94.12750244 -333.27053833]
[79.10296631 -334.57977295]
[64.87631989 -339.58511353]
[52.34185791 -347.97189331]
[42.28750992 -359.21292114]
[35.34529877 -372.60159302]
[31.95162392 -387.29626465]
[32.31980896 -402.37326050]
[36.42671204 -416.88476562]
[44.01416779 -429.91860962]
[54.60522461 -440.65548706]
[67.53411865 -448.42044067]
[81.98812866 -452.72537231]
[97.05866241 -453.29968262]
[111.79837036 -450.10723877]
[125.28071594 -443.34872437]
[136.65817261 -433.44900513]
[145.21554565 -421.03039551]
[150.41491699 -406.87350464]
[151.92945862 -391.86828613]
[149.66394043 -376.95794678]
[143.76078796 -363.07977295]
[134.59109497 -351.10617065]
[122.73124695 -341.78979492]
[108.92677307 -335.71627808]
[111.37250519 -320.91699219]
[113.81822968 -306.11773682]
[116.26396179 -291.31845093]
[118.70968628 -276.51919556]
[124.37310791 -290.40896606]
[135.13980103 -300.85299683]
[149.19540405 -306.09133911]
[164.17129517 -305.24118042]
[177.54377747 -298.44583130]
[187.05934143 -286.85040283]
[191.11445618 -272.40893555]
[189.02575684 -257.55505371]
[181.14523315 -244.79193115]
[168.80088806 -236.27035522]
[154.07296753 -233.42637634]
[139.44337463 -236.73922729]
[127.37746429 -245.65066528]
[119.90802765 -258.66052246]
[119.46141815 -243.66716003]
[119.01481628 -228.67381287]
[118.56820679 -213.68046570]
[118.12160492 -198.68711853]
[117.67499542 -183.69377136]
[117.22838593 -168.70040894]
[125.29246521 -159.68391418]
[125.04309845 -147.18905640]
[116.06866455 -137.92501831]
[115.39888000 -122.93997955]
[114.72909546 -107.95494080]
[114.05931091 -92.96990204]
[128.85725403 -88.04386139]
[141.68208313 -79.14319611]
[151.49194336 -66.98102570]
[157.48710632 -52.53582001]
[159.17517090 -36.97269440]
[156.41148376 -21.54942131]
[149.41149902 -7.51478910]
[138.73403931 3.99251461]
[125.23661041 12.03628445]
[110.00665283 15.95896244]
[109.56004333 30.95231247]
[109.11344147 45.94566345]
[122.80312347 50.15079117]
[134.93646240 57.75820160]
[144.68534851 68.24868011]
[151.38436890 80.90622711]
[154.57635498 94.86695862]
[154.04341125 109.17802429]
[149.82192993 122.86267853]
[142.20001221 134.98692322]
[131.69790649 144.72325134]
[119.03235626 151.40715027]
[105.06781769 154.58244324]
[104.39803314 169.56748962]
[103.72824860 184.55252075]
[103.05846405 199.53756714]
[102.38867950 214.52259827]
[101.71889496 229.50764465]
[101.04911041 244.49267578]
[115.88430786 249.98245239]
[128.28169250 259.77587891]
[137.03512573 272.90484619]
[141.29776001 288.07751465]
[140.66384888 303.80535889]
[135.20747375 318.54931641]
[125.47402191 330.87023926]
[112.42571259 339.56948853]
[97.34650421 343.80551147]
[96.89989471 358.79885864]
[96.45329285 373.79220581]
[108.99452972 365.56317139]
[123.29445648 370.09219360]
[128.81169128 384.04064941]
[121.47914886 397.12628174]
[106.70209503 399.70285034]
[95.37428284 389.87246704]
[93.81375885 404.79107666]
[92.47552490 419.73126221]
[91.35987854 434.68972778]
[90.24423218 449.64816284]
[89.12857819 464.60662842]
[88.01293182 479.56509399]
[86.89728546 494.52352905]
[85.78163910 509.48199463]
[100.35768127 513.18469238]
[114.06924438 519.36242676]
[126.49964142 527.82739258]
[137.27113342 538.32244873]
[146.05636597 550.52862549]
[152.58839417 564.07501221]
[156.66870117 578.54986572]
[158.17329407 593.51342773]
[157.05644226 608.51086426]
[153.35209656 623.08648682]
[147.17282104 636.79736328]
[138.70640564 649.22680664]
[128.21012878 659.99707031]
[116.00296021 668.78094482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 196]
[21 195]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[29 189]
[30 188]
[31 182]
[32 181]
[33 180]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[59 154]
[60 153]
[61 152]
[72 142]
[73 141]
[74 140]
[75 139]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
