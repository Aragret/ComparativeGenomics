%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[98.01634979 761.15411377]
[83.49098969 757.31646729]
[69.62351227 751.53656006]
[56.67225266 743.92224121]
[44.87848663 734.61517334]
[34.46193314 723.78887939]
[25.61663818 711.64495850]
[18.50738525 698.40966797]
[13.26661777 684.32965088]
[9.99196625 669.66705322]
[8.74443626 654.69519043]
[9.54726791 639.69287109]
[12.38550568 624.93963623]
[17.20627403 610.71032715]
[23.91976547 597.26995850]
[32.40091324 584.86901855]
[42.49171448 573.73846436]
[54.00418854 564.08563232]
[66.72386169 556.09039307]
[80.41378021 549.90167236]
[94.81890106 545.63482666]
[109.67086792 543.36926270]
[109.44754028 528.37091064]
[109.22421265 513.37255859]
[98.39090729 503.21505737]
[97.95076752 488.00778198]
[108.67835236 476.71371460]
[108.45502472 461.71536255]
[108.23169708 446.71704102]
[107.67348480 431.72741699]
[106.78067017 416.75399780]
[105.88785553 401.78060913]
[104.99504089 386.80718994]
[101.45898438 380.31735229]
[104.20208740 371.60452271]
[103.53230286 356.61950684]
[102.86251068 341.63446045]
[92.63485718 327.37396240]
[101.25634766 311.10278320]
[92.77522278 298.85858154]
[99.67740631 284.62234497]
[98.78459167 269.64895630]
[97.89177704 254.67555237]
[89.05544281 246.41444397]
[88.18907928 233.94715881]
[96.30123138 223.91940308]
[92.86219788 217.37763977]
[95.73471069 208.70661926]
[95.28810120 193.71327209]
[94.84149933 178.71992493]
[94.39488983 163.72657776]
[93.94828796 148.73321533]
[93.50167847 133.73986816]
[82.52502441 129.58432007]
[73.58738708 121.97682190]
[67.73162079 111.80502319]
[65.64099121 100.25579071]
[67.55943298 88.67671204]
[73.26310730 78.41885376]
[82.08649445 70.67913055]
[93.00006104 66.36061859]
[93.22338867 51.36228180]
[93.44671631 36.36394501]
[90.90283966 31.80590248]
[90.41090393 27.18948555]
[91.64954376 23.30608368]
[94.02986145 20.70484543]
[94.92267609 5.73144054]
[84.71009827 -6.03040123]
[85.82884216 -21.20284462]
[97.10489655 -30.86649704]
[97.99771118 -45.83990479]
[98.89052582 -60.81330872]
[99.78334045 -75.78671265]
[100.67616272 -90.76012421]
[101.56897736 -105.73352814]
[94.66679382 -119.96976471]
[103.14791870 -132.21394348]
[103.70613098 -147.20355225]
[94.36668396 -163.07353210]
[103.94738007 -177.77650452]
[103.94738007 -192.77650452]
[103.94738007 -207.77650452]
[103.94738007 -222.77650452]
[103.94738007 -237.77650452]
[103.94738007 -252.77650452]
[103.94738007 -267.77648926]
[103.83570862 -282.77609253]
[103.61238098 -297.77441406]
[102.83106232 -312.75405884]
[101.49282837 -327.69424438]
[100.15459442 -342.63442993]
[98.81636047 -357.57461548]
[97.47812653 -372.51480103]
[82.82183838 -376.38378906]
[70.37447357 -385.03472900]
[61.63911057 -397.42300415]
[57.67058945 -412.05264282]
[58.94812393 -427.15707397]
[65.31745148 -440.91235352]
[76.00944519 -451.65744019]
[89.73298645 -458.09484863]
[104.83089447 -459.44720459]
[119.48002625 -455.55123901]
[131.91143799 -446.87734985]
[140.62394714 -434.47299194]
[144.56550598 -419.83605957]
[143.26013184 -404.73400879]
[136.86546326 -390.99050903]
[126.15369415 -380.26513672]
[112.41831207 -373.85302734]
[113.75654602 -358.91284180]
[115.09477997 -343.97265625]
[116.43301392 -329.03247070]
[117.77124786 -314.09228516]
[129.24575806 -323.75332642]
[143.98254395 -320.95565796]
[151.11820984 -307.76162720]
[145.39259338 -293.89739990]
[131.02641296 -289.58312988]
[118.61072540 -297.99774170]
[118.83405304 -282.99942017]
[122.07678986 -276.35815430]
[118.94738007 -267.77648926]
[118.94738007 -252.77650452]
[118.94738007 -237.77650452]
[118.94738007 -222.77650452]
[118.94738007 -207.77650452]
[118.94738007 -192.77650452]
[118.94738007 -177.77650452]
[127.27633667 -169.00408936]
[127.39909363 -156.50735474]
[118.70446777 -146.98022461]
[120.88471985 -144.20915222]
[121.83109283 -140.24436951]
[120.99716949 -135.67733765]
[118.12132263 -131.32112122]
[125.08736420 -118.15588379]
[116.54238129 -104.84071350]
[115.64956665 -89.86730194]
[114.75675201 -74.89389801]
[113.86392975 -59.92049408]
[112.97111511 -44.94708633]
[112.07830048 -29.97368240]
[122.12611389 -19.03855515]
[121.43397522 -3.84067464]
[109.89608765 6.62425661]
[109.00326538 21.59766197]
[108.44506073 36.58727264]
[108.22173309 51.58560944]
[107.99840546 66.58394623]
[123.82783508 75.24436951]
[133.08630371 90.73159790]
[133.22062683 108.77476501]
[124.19377136 124.39812469]
[108.49503326 133.29325867]
[108.94163513 148.28662109]
[109.38824463 163.27996826]
[109.83484650 178.27331543]
[110.28145599 193.26666260]
[110.72805786 208.26000977]
[111.28627014 223.24961853]
[121.55374908 238.53558350]
[112.86518097 253.78273010]
[113.75799561 268.75613403]
[114.65081024 283.72955322]
[123.19579315 297.04470825]
[116.22975159 310.20996094]
[125.34112549 319.33935547]
[125.77649689 331.82910156]
[117.84754944 340.96466064]
[118.51734161 355.94970703]
[119.18712616 370.93475342]
[119.96844482 385.91439819]
[120.86125946 400.88778687]
[121.75407410 415.86120605]
[122.64689636 430.83459473]
[125.52274323 435.19082642]
[126.35666656 439.75784302]
[125.41028595 443.72262573]
[123.23003387 446.49371338]
[123.45336151 461.49203491]
[123.67668915 476.49038696]
[134.73579407 487.46005249]
[134.74862671 502.67367554]
[124.22254944 513.14923096]
[124.44587708 528.14758301]
[124.66920471 543.14593506]
[139.58204651 544.96826172]
[154.10781860 548.80438232]
[167.97592163 554.58276367]
[180.92800903 562.19573975]
[192.72277832 571.50146484]
[203.14050293 582.32666016]
[211.98710632 594.46960449]
[219.09779358 607.70410156]
[224.34008789 621.78363037]
[227.61633301 636.44580078]
[228.86547852 651.41754150]
[228.06427002 666.41992188]
[225.22763062 681.17352295]
[220.40840149 695.40332031]
[213.69636536 708.84442139]
[205.21655273 721.24627686]
[195.12695312 732.37792969]
[183.61552429 742.03198242]
[170.89672852 750.02862549]
[157.20747375 756.21881104]
[142.80282593 760.48724365]
[127.95109558 762.75439453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 188]
[23 187]
[24 186]
[27 183]
[28 182]
[29 181]
[30 177]
[31 176]
[32 175]
[33 174]
[35 173]
[36 172]
[37 171]
[39 168]
[41 166]
[42 165]
[43 164]
[46 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[61 151]
[62 150]
[63 149]
[67 148]
[68 147]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[78 137]
[79 133]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 122]
[89 121]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
