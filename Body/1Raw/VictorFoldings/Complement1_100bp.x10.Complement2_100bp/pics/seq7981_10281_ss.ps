%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-28.16476059 546.62567139]
[-22.67641830 560.64215088]
[-20.12226868 575.47662354]
[-20.60690308 590.52154541]
[-24.11047745 605.16088867]
[-30.48951912 618.79516602]
[-39.48281479 630.86596680]
[-50.72209167 640.87915039]
[-63.74710846 648.42462158]
[-78.02450562 653.19335938]
[-92.96961975 654.99011230]
[-107.97046661 653.74133301]
[-122.41276550 649.49816895]
[-135.70512390 642.43426514]
[-147.30322266 632.83898926]
[-156.73211670 621.10528564]
[-163.60571289 607.71356201]
[-167.64253235 593.21215820]
[-168.67727661 578.19506836]
[-166.66757202 563.27709961]
[-161.69570923 549.06915283]
[-153.96530151 536.15307617]
[-143.79287720 525.05767822]
[-131.59500122 516.23742676]
[-117.87117004 510.05349731]
[-103.18337250 506.75903320]
[-88.13305664 506.48898315]
[-73.33653259 509.25442505]
[-67.67374420 495.36437988]
[-62.01095581 481.47436523]
[-56.34817123 467.58432007]
[-50.68538284 453.69430542]
[-45.12615967 439.76251221]
[-39.67080307 425.78970337]
[-34.21544266 411.81692505]
[-28.76008797 397.84411621]
[-31.33874893 383.17443848]
[-19.11230850 373.13327026]
[-33.68861389 376.67324829]
[-45.63739777 367.60534668]
[-46.15046310 352.61413574]
[-34.84959412 342.75054932]
[-20.06537437 345.28564453]
[-12.69629288 358.34902954]
[-6.21679735 344.82067871]
[0.26269841 331.29232788]
[6.74219418 317.76400757]
[13.22169018 304.23565674]
[4.69247484 292.02426147]
[3.41224670 277.08380127]
[9.82460117 263.41824341]
[22.29806709 254.74012756]
[37.53993225 253.46232605]
[44.01942825 239.93397522]
[42.53899002 225.11312866]
[55.47839355 216.00914001]
[53.99795532 201.18829346]
[66.93735504 192.08432007]
[72.07931519 177.99317932]
[75.83561707 163.47111511]
[79.59191895 148.94905090]
[83.34822083 134.42700195]
[87.10452271 119.90493774]
[90.86081696 105.38288116]
[93.96492767 90.70758057]
[88.58126831 75.83052063]
[98.29019165 64.53511810]
[100.73591614 49.73585129]
[103.18164825 34.93658066]
[105.62737274 20.13731003]
[100.24370575 5.26025486]
[109.95262909 -6.03514624]
[112.39836121 -20.83441734]
[114.73384857 -35.65148544]
[115.51516724 -50.63112259]
[114.84538269 -65.61615753]
[106.49958801 -79.05708313]
[113.66087341 -92.11714935]
[112.99108887 -107.10218811]
[112.32130432 -122.08722687]
[108.81182098 -130.52056885]
[111.75477600 -137.30001831]
[111.30817413 -152.29336548]
[110.86156464 -167.28671265]
[110.41496277 -182.28005981]
[109.63363647 -197.25970459]
[108.51799011 -212.21815491]
[107.40234375 -227.17660522]
[106.28668976 -242.13505554]
[105.17104340 -257.09350586]
[104.05539703 -272.05197144]
[102.93974304 -287.01040649]
[88.13806152 -289.97906494]
[74.68672180 -296.83209229]
[63.58389664 -307.06094360]
[55.65349197 -319.90661621]
[51.48399734 -334.41586304]
[51.38481903 -349.51199341]
[55.36331177 -364.07473755]
[63.12424469 -377.02349854]
[74.09171295 -387.39736938]
[87.45185089 -394.42654419]
[102.21324921 -397.58941650]
[117.28050995 -396.65127563]
[131.53555298 -391.68173218]
[143.92054749 -383.04956055]
[153.51644897 -371.39532471]
[159.61119080 -357.58383179]
[161.75247192 -342.64004517]
[159.78143311 -327.67282104]
[153.84429932 -313.79287720]
[144.38168335 -302.03015137]
[132.09574890 -293.25756836]
[117.89820099 -288.12606812]
[119.01384735 -273.16760254]
[120.12949371 -258.20916748]
[121.24514771 -243.25070190]
[122.36079407 -228.29225159]
[123.47644043 -213.33380127]
[124.59209442 -198.37535095]
[127.01087189 -195.80984497]
[128.30718994 -191.94531250]
[127.88404846 -187.32208252]
[125.40830994 -182.72666931]
[125.85491943 -167.73332214]
[126.30152130 -152.73997498]
[126.74813080 -137.74661255]
[127.30634308 -122.75701141]
[127.97612762 -107.77197266]
[128.64590454 -92.78693390]
[136.94380188 -80.41783905]
[129.83042908 -66.28594971]
[130.50021362 -51.30090714]
[137.77403259 -64.41927338]
[149.70552063 -73.50990295]
[164.28401184 -77.04087067]
[179.05276489 -74.41714478]
[191.52297974 -66.08086395]
[199.59323120 -53.43685150]
[201.90351868 -38.61583328]
[198.06452942 -24.11541367]
[188.72319031 -12.37917137]
[175.45368958 -5.38486719]
[160.49215698 -4.31116438]
[146.35989380 -9.33900070]
[135.43843079 -19.62109756]
[129.56788635 -33.42636871]
[131.68438721 -26.34524918]
[127.19763184 -18.38868904]
[124.75189972 -3.58941889]
[130.31050110 10.22909260]
[120.42664337 22.58303642]
[117.98091888 37.38230896]
[115.53518677 52.18157959]
[113.08946228 66.98085022]
[118.64805603 80.79936218]
[108.76419830 93.15330505]
[121.55717468 85.32133484]
[136.17285156 88.69507599]
[144.23869324 101.34189606]
[141.13423157 116.01712799]
[128.63784790 124.31412506]
[113.90802002 121.47999573]
[105.38288116 109.13918304]
[101.62657928 123.66123962]
[97.87027740 138.18330383]
[94.11397552 152.70535278]
[90.35767365 167.22741699]
[86.60137939 181.74948120]
[97.40400696 171.34259033]
[111.47757721 166.15274048]
[126.45044708 167.05450439]
[139.79942322 173.89590454]
[149.27496338 185.52406311]
[153.28028870 199.97941589]
[151.14041138 214.82600403]
[143.21595764 227.56188965]
[130.84231567 236.04087830]
[116.10468292 238.83409119]
[101.48659515 235.47082520]
[89.45146179 226.51786804]
[82.02741241 213.48393250]
[80.46570587 198.56381226]
[81.48268127 214.35229492]
[69.00673676 222.48864746]
[70.02371979 238.27713013]
[57.54777527 246.41346741]
[51.06827927 259.94180298]
[59.62639999 272.61880493]
[60.68315887 287.77728271]
[54.05464935 301.33935547]
[41.61100769 309.70663452]
[26.75003624 310.71514893]
[20.27054024 324.24349976]
[13.79104424 337.77185059]
[7.31154823 351.30017090]
[0.83205229 364.82852173]
[-5.13951063 378.58862305]
[-2.95105290 394.25775146]
[-14.78728962 403.29946899]
[-20.24264717 417.27227783]
[-25.69800377 431.24505615]
[-31.15336037 445.21786499]
[-31.35931587 454.34997559]
[-36.79535675 459.35708618]
[-42.45814514 473.24713135]
[-48.12092972 487.13714600]
[-53.78371811 501.02716064]
[-59.44650269 514.91717529]
[-46.93410110 523.28527832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 203]
[34 202]
[35 201]
[36 200]
[38 198]
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
[53 188]
[54 187]
[56 185]
[58 183]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 157]
[67 155]
[68 154]
[69 153]
[70 152]
[72 150]
[73 149]
[74 147]
[75 133]
[76 132]
[78 130]
[79 129]
[80 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
