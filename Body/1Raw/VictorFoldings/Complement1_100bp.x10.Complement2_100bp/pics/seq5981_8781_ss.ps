%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[60.52923965 431.97583008]
[64.35730743 446.66290283]
[62.61740875 461.74063110]
[55.54484558 475.16979980]
[44.09611893 485.13430786]
[29.81958389 490.28649902]
[14.64601994 489.92956543]
[0.62752831 484.11178589]
[-10.34000587 473.62002563]
[-16.77331352 459.87310791]
[-17.80234146 444.73028564]
[-13.28792381 430.23944092]
[-3.84059763 418.36035156]
[9.26196384 410.69961548]
[24.24774742 408.29321289]
[27.35185623 393.61788940]
[30.45596695 378.94259644]
[21.98558044 369.23269653]
[20.63416862 356.22286987]
[27.11796761 344.63964844]
[39.26541901 338.82122803]
[42.58768082 324.19378662]
[45.90993881 309.56631470]
[49.23220062 294.93887329]
[52.55445862 280.31140137]
[55.87671661 265.68392944]
[43.28032684 257.64550781]
[34.17710876 245.76020813]
[29.68108559 231.45075989]
[30.35331345 216.43844604]
[36.13194275 202.53602600]
[46.33734894 191.42881775]
[59.75202179 184.47047424]
[74.76577759 182.51794434]
[77.97905731 167.86616516]
[73.04302979 153.81323242]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[83.92377472 102.43598175]
[86.41867065 91.05983734]
[95.88154602 84.27049255]
[99.20380402 69.64303589]
[102.52606964 55.01557159]
[105.19186401 40.25435638]
[107.19587708 25.38882637]
[109.19989014 10.52329826]
[98.14981842 -0.20992783]
[95.56880188 -15.21631718]
[102.24008179 -28.70549583]
[115.41738129 -35.59729004]
[117.42139435 -50.46281815]
[119.42540741 -65.32834625]
[121.42942047 -80.19387054]
[123.32271576 -95.07390594]
[125.10517883 -109.96762848]
[126.88764191 -124.86134338]
[115.15025330 -115.52144623]
[100.15258026 -115.78558350]
[88.75135803 -125.53299713]
[86.15907288 -140.30729675]
[93.56087494 -153.35388184]
[107.57276917 -158.70802307]
[121.78870392 -153.92187500]
[129.70973206 -141.18179321]
[133.03199768 -155.80924988]
[136.35424805 -170.43670654]
[139.67651367 -185.06416321]
[142.99877930 -199.69163513]
[128.63601685 -204.03903198]
[114.61568451 -209.38874817]
[101.00765228 -215.71412659]
[87.87970734 -222.98364258]
[75.29724121 -231.16108704]
[63.32295609 -240.20571899]
[52.01650238 -250.07247925]
[41.43420410 -260.71221924]
[31.62878609 -272.07189941]
[22.64909744 -284.09497070]
[14.53987694 -296.72152710]
[7.34152269 -309.88861084]
[1.08989847 -323.53070068]
[-4.18385124 -337.57977295]
[-8.45345211 -351.96585083]
[-11.69763279 -366.61727905]
[-13.90023232 -381.46102905]
[-15.05027485 -396.42321777]
[-15.14203358 -411.42922974]
[-14.17504883 -426.40432739]
[-12.15414047 -441.27392578]
[-9.08937454 -455.96392822]
[-4.99602127 -470.40115356]
[0.10552692 -484.51367188]
[6.18985415 -498.23117065]
[13.22664833 -511.48532104]
[21.18085289 -524.21008301]
[30.01283836 -536.34204102]
[39.67860413 -547.82080078]
[50.12999725 -558.58917236]
[61.31494522 -568.59344482]
[73.17772675 -577.78387451]
[85.65924835 -586.11456299]
[98.69731140 -593.54406738]
[112.22697449 -600.03540039]
[126.18083191 -605.55615234]
[140.48934937 -610.07885742]
[155.08126831 -613.58099365]
[169.88386536 -616.04516602]
[184.82341003 -617.45892334]
[199.82548523 -617.81542969]
[214.81530762 -617.11279297]
[229.71824646 -615.35449219]
[244.46002197 -612.54931641]
[258.96722412 -608.71130371]
[273.16754150 -603.85949707]
[286.99023438 -598.01812744]
[300.36645508 -591.21624756]
[313.22955322 -583.48779297]
[325.51547241 -574.87115479]
[337.16293335 -565.40942383]
[348.11398315 -555.14959717]
[358.31405640 -544.14288330]
[367.71228027 -532.44409180]
[376.26187134 -520.11145020]
[383.92025757 -507.20651245]
[390.64923096 -493.79345703]
[396.41531372 -479.93917847]
[401.18972778 -465.71264648]
[404.94876099 -451.18478394]
[407.67361450 -436.42797852]
[409.35076904 -421.51568604]
[409.97183228 -406.52224731]
[409.53372192 -391.52233887]
[408.03863525 -376.59072876]
[405.49398804 -361.80175781]
[401.91247559 -347.22909546]
[397.31195068 -332.94540405]
[391.71533203 -319.02182007]
[385.15048218 -305.52767944]
[377.65011597 -292.53024292]
[369.25158691 -280.09423828]
[359.99679565 -268.28164673]
[349.93176270 -257.15130615]
[339.10668945 -246.75868225]
[327.57550049 -237.15553284]
[315.39562988 -228.38969421]
[302.62777710 -220.50486755]
[289.33554077 -213.54031372]
[275.58511353 -207.53073120]
[261.44503784 -202.50605774]
[246.98576355 -198.49133301]
[232.27929688 -195.50656128]
[217.39892578 -193.56660461]
[202.41877747 -192.68113708]
[187.41348267 -192.85456848]
[172.45779419 -194.08601379]
[157.62623596 -196.36936951]
[154.30397034 -181.74191284]
[150.98171997 -167.11445618]
[147.65945435 -152.48698425]
[144.33718872 -137.85952759]
[141.78135681 -123.07888031]
[139.99890137 -108.18515778]
[138.21643066 -93.29144287]
[140.54281616 -86.27648163]
[136.29495239 -78.18985748]
[134.29093933 -63.32432938]
[132.28692627 -48.45880127]
[130.28291321 -33.59327316]
[141.16481018 -23.45807648]
[144.02590942 -8.68383980]
[137.56324768 5.10337448]
[124.06541443 12.52731228]
[122.06140137 27.39283943]
[120.05738831 42.25836945]
[132.61151123 34.04897690]
[147.32115173 36.98606110]
[155.75996399 49.38712692]
[153.09381104 64.14827728]
[140.84999084 72.81365967]
[126.04232025 70.41934967]
[117.15352631 58.33782959]
[113.83126831 72.96529388]
[110.50901031 87.59275055]
[115.88227844 103.48313141]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[102.85796356 160.11965942]
[92.65435791 170.97027588]
[93.94013214 180.01374817]
[89.39324188 185.84020996]
[102.09056854 194.08660889]
[111.18334961 206.15696716]
[115.58956909 220.58282471]
[114.79586792 235.61744690]
[108.91732788 249.44728088]
[98.68121338 260.41070557]
[85.33705902 267.19766235]
[70.50418091 269.00619507]
[67.18191528 283.63366699]
[63.85965729 298.26110840]
[60.53739929 312.88858032]
[57.21514130 327.51605225]
[53.89287949 342.14349365]
[63.48517609 356.77249146]
[59.60587692 373.48373413]
[45.13126755 382.04672241]
[42.02716064 396.72201538]
[38.92304993 411.39730835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 210]
[16 209]
[17 208]
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[34 192]
[35 190]
[37 188]
[38 187]
[39 186]
[42 184]
[43 183]
[44 182]
[45 175]
[46 174]
[47 173]
[51 169]
[52 168]
[53 167]
[54 166]
[55 164]
[56 163]
[57 162]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
