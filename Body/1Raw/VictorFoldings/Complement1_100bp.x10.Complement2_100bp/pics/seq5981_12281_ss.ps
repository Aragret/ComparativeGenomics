%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[101.18587494 604.80487061]
[89.16694641 595.81744385]
[77.88062286 585.92565918]
[67.39478302 575.18902588]
[57.77249146 563.67211914]
[49.07161331 551.44415283]
[41.34447861 538.57867432]
[34.63756180 525.15313721]
[28.99119949 511.24822998]
[24.43934822 496.94757080]
[21.00938416 482.33715820]
[18.72193718 467.50491333]
[17.59076309 452.53997803]
[17.62266731 437.53240967]
[18.81745338 422.57244873]
[21.16794014 407.75003052]
[24.65999031 393.15435791]
[29.27260017 378.87316895]
[34.97802734 364.99237061]
[41.74196625 351.59545898]
[49.52372742 338.76296997]
[58.27651596 326.57211304]
[67.94768524 315.09619141]
[78.47908020 304.40423584]
[89.80735779 294.56054688]
[101.86437988 285.62429810]
[114.57764435 277.64926147]
[127.87068939 270.68341064]
[141.66357422 264.76858521]
[136.83757019 250.56613159]
[132.01156616 236.36367798]
[127.18557739 222.16122437]
[122.35957336 207.95877075]
[119.90756989 206.60017395]
[117.84597778 204.18843079]
[116.57862091 200.86741638]
[116.44984436 196.92431641]
[117.69651031 192.76501465]
[106.86515808 182.54098511]
[110.67187500 167.18457031]
[106.69977570 152.72004700]
[102.72767639 138.25552368]
[98.75558472 123.79099274]
[94.78348541 109.32646942]
[89.22425842 95.39466858]
[82.14715576 82.16914368]
[75.07005310 68.94361877]
[67.99294281 55.71809006]
[60.91584015 42.49256134]
[61.10532379 57.49136353]
[56.92303848 71.89652252]
[48.73079681 84.46183777]
[37.23731232 94.10028839]
[23.43688393 99.97805786]
[8.52338696 101.58665466]
[-6.21301317 98.78691864]
[-19.49746895 91.82106018]
[-30.18074226 81.29168701]
[-37.33862305 68.10970306]
[-40.35188675 53.41547775]
[-38.95984650 38.48020935]
[-33.28293991 24.59594917]
[-23.81226540 12.96382236]
[-11.36713791 4.59012651]
[2.97581792 0.19926898]
[17.97579193 0.17110306]
[32.33513641 4.50806522]
[44.81162262 12.83496571]
[54.32410431 24.42842484]
[51.21999359 9.75312233]
[48.11588669 -4.92218018]
[43.27832794 -12.67045975]
[45.07652283 -19.83902168]
[42.19124985 -34.55891418]
[39.30597687 -49.27880478]
[36.42070389 -63.99869537]
[33.53543091 -78.71858978]
[18.53251648 -77.90701294]
[3.56266475 -79.19140625]
[-11.08273029 -82.54678345]
[-25.11859131 -87.90782166]
[-38.27170563 -95.17016602]
[-50.28604889 -104.19245911]
[-60.92774963 -114.79907990]
[-69.98966980 -126.78355408]
[-77.29541779 -139.91261292]
[-82.70278168 -153.93069458]
[-86.10650635 -168.56492615]
[-87.44033813 -183.53045654]
[-86.67831421 -198.53596497]
[-83.83526611 -213.28938293]
[-78.96652985 -227.50350952]
[-72.16689301 -240.90168762]
[-63.56869125 -253.22309875]
[-53.33930588 -264.22790527]
[-41.67784882 -273.70190430]
[-28.81131554 -281.46066284]
[-14.99015617 -287.35317993]
[-0.48340487 -291.26473999]
[14.42656136 -293.11920166]
[29.44951439 -292.88046265]
[44.29302979 -290.55319214]
[58.66817474 -286.18267822]
[72.29512787 -279.85400391]
[84.90864563 -271.69033813]
[96.26319122 -261.85061646]
[106.13775635 -250.52633667]
[114.34011841 -237.93795776]
[120.71062469 -224.33050537]
[125.12526703 -209.96885681]
[127.49810791 -195.13255310]
[127.78297424 -180.11039734]
[125.97431183 -165.19480896]
[122.10732269 -150.67611694]
[116.25728607 -136.83692932]
[108.53807831 -123.94662476]
[99.09994507 -112.25611877]
[88.12660217 -101.99298859]
[75.83165741 -93.35698700]
[62.45443726 -86.51622772]
[48.25532150 -81.60385895]
[51.14059448 -66.88397217]
[54.02586746 -52.16407776]
[56.91114044 -37.44418716]
[59.79641342 -22.72429466]
[62.79118729 -8.02628994]
[65.89529419 6.64901209]
[68.99940491 21.32431412]
[74.14136505 35.41545486]
[81.21847534 48.64098358]
[88.29557800 61.86651230]
[95.37268066 75.09204102]
[102.44979095 88.31756592]
[102.84484100 73.32276917]
[108.56265259 59.45530319]
[118.85094452 48.53966904]
[132.35610962 42.01200485]
[147.30133057 40.73114395]
[161.72027588 44.86560059]
[173.71591187 53.87141800]
[181.71000671 66.56372070]
[184.65077209 81.27262878]
[182.15133667 96.06291962]
[174.54051208 108.98868561]
[162.81964111 118.34931183]
[148.53082275 122.91325378]
[133.55398560 122.08004761]
[119.85958862 115.95931244]
[109.24800873 105.35437012]
[113.22010803 119.81889343]
[117.19220734 134.28341675]
[121.16429901 148.74794006]
[125.13639832 163.21246338]
[136.25186157 174.47111511]
[132.16104126 188.79292297]
[136.56202698 203.13276672]
[141.38803101 217.33523560]
[146.21401978 231.53768921]
[151.04002380 245.74014282]
[155.86602783 259.94259644]
[170.40704346 256.22952271]
[185.19209290 253.65446472]
[200.13221741 252.23286438]
[215.13757324 251.97329712]
[230.11793518 252.87731934]
[244.98318481 254.93949890]
[259.64392090 258.14743042]
[274.01199341 262.48181152]
[288.00097656 267.91659546]
[301.52673340 274.41906738]
[314.50793457 281.95013428]
[326.86648560 290.46453857]
[338.52804565 299.91101074]
[349.42251587 310.23275757]
[359.48437500 321.36773682]
[368.65310669 333.24893188]
[376.87353516 345.80490112]
[384.09625244 358.96017456]
[390.27780151 372.63555908]
[395.38101196 386.74887085]
[399.37521362 401.21520996]
[402.23635864 415.94757080]
[403.94726562 430.85733032]
[404.49758911 445.85482788]
[403.88409424 460.84991455]
[402.11041260 475.75231934]
[399.18722534 490.47250366]
[395.13214111 504.92187500]
[389.96951294 519.01354980]
[383.73040771 532.66278076]
[376.45233154 545.78753662]
[368.17910767 558.30877686]
[358.96041870 570.15124512]
[348.85174561 581.24371338]
[337.91387939 591.51953125]
[326.21261597 600.91674805]
[313.81832886 609.37902832]
[300.80554199 616.85534668]
[287.25250244 623.30078125]
[273.24075317 628.67657471]
[258.85455322 632.95043945]
[244.18041992 636.09655762]
[229.30662537 638.09613037]
[214.32258606 638.93701172]
[199.31845093 638.61425781]
[184.38444519 637.12976074]
[169.61038208 634.49243164]
[155.08512878 630.71813965]
[140.89602661 625.82958984]
[127.12842560 619.85620117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 160]
[30 159]
[31 158]
[32 157]
[33 156]
[38 155]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[45 133]
[46 132]
[47 131]
[48 130]
[49 129]
[69 128]
[70 127]
[71 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
