%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[38.81389999 776.60162354]
[24.01562500 779.08306885]
[9.09170532 780.63970947]
[-5.90012121 781.26550293]
[-20.90185547 780.95806885]
[-35.85545349 779.71856689]
[-50.70307159 777.55181885]
[-65.38726044 774.46618652]
[-79.85120392 770.47363281]
[-94.03895569 765.58953857]
[-107.89561462 759.83282471]
[-121.36758423 753.22583008]
[-134.40274048 745.79406738]
[-146.95063782 737.56622314]
[-158.96273804 728.57427979]
[-170.39257812 718.85284424]
[-181.19593811 708.43969727]
[-191.33100891 697.37506104]
[-200.75857544 685.70166016]
[-209.44218445 673.46478271]
[-217.34823608 660.71173096]
[-224.44612122 647.49176025]
[-230.70840454 633.85614014]
[-236.11085510 619.85760498]
[-240.63255310 605.55023193]
[-244.25602722 590.98944092]
[-246.96725464 576.23150635]
[-248.75572205 561.33361816]
[-249.61454773 546.35333252]
[-249.54037476 531.34863281]
[-248.53352356 516.37756348]
[-246.59785461 501.49804688]
[-243.74087524 486.76766968]
[-239.97364807 472.24337769]
[-235.31072998 457.98141479]
[-229.77017212 444.03692627]
[-223.37339783 430.46386719]
[-216.14517212 417.31475830]
[-208.11343384 404.64047241]
[-199.30929565 392.49002075]
[-189.76678467 380.91040039]
[-179.52282715 369.94647217]
[-168.61706543 359.64062500]
[-157.09169006 350.03268433]
[-144.99127197 341.15988159]
[-132.36265564 333.05651855]
[-119.25467682 325.75396729]
[-105.71805573 319.28045654]
[-91.80516052 313.66101074]
[-77.56982422 308.91741943]
[-63.06711578 305.06802368]
[-48.35314178 302.12768555]
[-33.48483276 300.10781860]
[-18.51971054 299.01620483]
[-3.51567125 298.85708618]
[11.46923637 299.63107300]
[26.37703896 301.33517456]
[41.15005875 303.96279907]
[44.68973160 289.38641357]
[48.22940445 274.81002808]
[43.71397781 260.61636353]
[54.48929977 249.03178406]
[49.97387314 234.83810425]
[60.74919891 223.25350952]
[64.28887177 208.67713928]
[59.77344513 194.48347473]
[70.54876709 182.89886475]
[74.08843994 168.32249451]
[77.62811279 153.74612427]
[81.16778564 139.16973877]
[79.65543365 135.98460388]
[79.61069489 131.90869141]
[81.43543243 127.63977814]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[108.76555634 42.97671127]
[112.95256805 28.57292938]
[116.92465973 14.10840607]
[120.68096161 -0.41365325]
[124.43726349 -14.93571281]
[128.19355774 -29.45777130]
[124.15863800 -44.75580978]
[134.83656311 -55.13998032]
[138.59286499 -69.66204071]
[142.13253784 -84.23841095]
[145.45480347 -98.86587524]
[148.77705383 -113.49333191]
[144.28843689 -128.66445923]
[154.65246582 -139.36193848]
[157.97471619 -153.98941040]
[161.29698181 -168.61686707]
[164.61924744 -183.24432373]
[163.46824646 -192.30595398]
[168.10139465 -198.06405640]
[171.64106750 -212.64044189]
[175.18074036 -227.21681213]
[161.69647217 -233.93412781]
[150.04536438 -243.48396301]
[140.81181335 -255.38729858]
[134.45899963 -269.04708862]
[131.30555725 -283.77810669]
[131.50964355 -298.84152222]
[135.06106567 -313.48171997]
[141.78164673 -326.96435547]
[151.33430481 -338.61312866]
[163.23988342 -347.84381104]
[176.90119934 -354.19329834]
[191.63299561 -357.34320068]
[206.69635010 -357.13543701]
[221.33567810 -353.58047485]
[234.81669617 -346.85662842]
[246.46316528 -337.30114746]
[255.69094849 -325.39334106]
[262.03713989 -311.73046875]
[265.18344116 -296.99792480]
[264.97204590 -281.93460083]
[261.41354370 -267.29614258]
[254.68641663 -253.81677246]
[245.12811279 -242.17260742]
[233.21807861 -232.94772339]
[219.55368042 -226.60482788]
[204.82035828 -223.46208191]
[189.75711060 -223.67713928]
[186.21743774 -209.10076904]
[182.67776489 -194.52438354]
[179.24670410 -179.92205811]
[175.92443848 -165.29460144]
[172.60218811 -150.66714478]
[169.27992249 -136.03968811]
[174.00617981 -121.91481781]
[163.40452576 -110.17107391]
[160.08226013 -95.54361725]
[156.75999451 -80.91615295]
[158.50204468 -76.46932220]
[157.46911621 -70.88093567]
[153.11492920 -65.90573883]
[149.35862732 -51.38367844]
[153.66223145 -37.12435913]
[142.71562195 -25.70147133]
[138.95932007 -11.17941189]
[135.20301819 3.34264731]
[131.44671631 17.86470604]
[133.05560303 22.36143494]
[131.85673523 27.91658974]
[127.35634613 32.75994110]
[123.16933441 47.16372299]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.74416351 142.70941162]
[92.20449066 157.28579712]
[88.66481781 171.86216736]
[85.12514496 186.43853760]
[89.38739014 201.67480469]
[78.86524963 212.21681213]
[75.32557678 226.79318237]
[79.58782196 242.02944946]
[69.06567383 252.57145691]
[73.32792664 267.80770874]
[62.80577850 278.34970093]
[59.26610565 292.92608643]
[55.72643280 307.50247192]
[70.05926514 311.94281006]
[84.08831024 317.26562500]
[97.75930023 323.45031738]
[111.01934052 330.47299194]
[123.81713104 338.30642700]
[136.10316467 346.92037964]
[147.82991028 356.28146362]
[158.95198059 366.35351562]
[169.42637634 377.09750366]
[179.21253967 388.47192383]
[188.27264404 400.43273926]
[196.57160950 412.93368530]
[204.07733154 425.92639160]
[210.76080322 439.36059570]
[216.59613037 453.18432617]
[221.56074524 467.34411621]
[225.63545227 481.78512573]
[228.80447388 496.45156860]
[231.05555725 511.28662109]
[232.38000488 526.23291016]
[232.77267456 541.23266602]
[232.23205566 556.22784424]
[230.76022339 571.16033936]
[228.36289978 585.97247314]
[225.04934692 600.60693359]
[220.83236694 615.00701904]
[215.72830200 629.11712646]
[209.75688171 642.88262939]
[202.94122314 656.25024414]
[195.30767822 669.16827393]
[186.88580322 681.58673096]
[177.70814514 693.45764160]
[167.81024170 704.73492432]
[157.23037720 715.37512207]
[146.00947571 725.33691406]
[134.19096375 734.58184814]
[121.82054901 743.07415771]
[108.94609833 750.78100586]
[95.61741638 757.67248535]
[81.88608551 763.72204590]
[67.80520630 768.90618896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 169]
[59 168]
[60 167]
[62 165]
[64 163]
[65 162]
[67 160]
[68 159]
[69 158]
[70 157]
[74 156]
[75 155]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 146]
[83 145]
[84 144]
[85 143]
[87 141]
[88 140]
[89 137]
[90 136]
[91 135]
[93 133]
[94 132]
[95 131]
[96 130]
[98 129]
[99 128]
[100 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
