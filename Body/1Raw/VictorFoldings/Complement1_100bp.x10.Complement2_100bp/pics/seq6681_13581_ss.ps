%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[80.04952240 659.84057617]
[65.09374237 661.13269043]
[50.08286667 660.99725342]
[35.15283966 659.43548584]
[20.43886757 656.46166992]
[6.07420921 652.10260010]
[-7.81104374 646.39782715]
[-21.09114265 639.39898682]
[-33.64581680 631.16949463]
[-45.36136627 621.78381348]
[-56.13169098 611.32702637]
[-65.85925293 599.89373779]
[-74.45594788 587.58758545]
[-81.84393311 574.51995850]
[-87.95629883 560.80926514]
[-92.73767853 546.57958984]
[-96.14477539 531.95989990]
[-98.14673615 517.08245850]
[-98.72543335 502.08215332]
[-97.87561798 487.09472656]
[-95.60498810 472.25598145]
[-91.93411255 457.70022583]
[-86.89623260 443.55935669]
[-80.53697205 429.96139526]
[-72.91392517 417.02951050]
[-64.09613037 404.88079834]
[-54.16344070 393.62527466]
[-43.20581055 383.36489868]
[-31.32247734 374.19259644]
[-18.62106133 366.19143677]
[-5.21658993 359.43383789]
[8.76953888 353.98104858]
[23.21066284 349.88244629]
[37.97599792 347.17510986]
[52.93182373 345.88360596]
[67.94269562 346.01959229]
[69.50321960 331.10098267]
[71.06374359 316.18237305]
[72.62426758 301.26376343]
[66.25302887 287.80059814]
[75.38404083 274.88027954]
[76.94456482 259.96166992]
[64.39445496 249.37997437]
[60.58641052 233.24118042]
[67.21398926 217.86013794]
[81.84719086 209.37689209]
[83.18542480 194.43670654]
[84.52365875 179.49652100]
[77.95268250 166.12971497]
[86.89031982 153.07485962]
[84.35610199 146.13227844]
[88.36132050 137.92276001]
[89.92184448 123.00415802]
[91.48236084 108.08555603]
[82.34301758 119.97977448]
[69.19502258 127.19989777]
[54.25404358 128.52920532]
[40.03789520 123.74369049]
[28.94224930 113.64980316]
[22.83691978 99.94852448]
[22.75075912 84.94877625]
[28.69828987 71.17826843]
[39.67724609 60.95757675]
[53.83748245 56.00906754]
[68.79274750 57.16665268]
[82.02281952 64.23526001]
[91.29819489 76.02369690]
[95.05589294 90.54707336]
[99.45689392 76.20722961]
[103.85789490 61.86738205]
[107.93756104 47.43282700]
[111.69386292 32.91076660]
[115.45015717 18.38870811]
[119.20645905 3.86664939]
[122.96276093 -10.65540981]
[125.84803772 -25.37530136]
[127.85205078 -40.24082947]
[129.85606384 -55.10635757]
[131.86007690 -69.97188568]
[133.75337219 -84.85192108]
[135.53582764 -99.74563599]
[129.49324036 -114.36746216]
[138.68811035 -126.08512115]
[140.47058105 -140.97883606]
[142.25305176 -155.87255859]
[143.48002625 -170.82229614]
[144.14981079 -185.80732727]
[144.81959534 -200.79237366]
[145.48937988 -215.77740479]
[146.15916443 -230.76245117]
[131.49353027 -234.10290527]
[117.66011047 -240.00852966]
[105.10360718 -248.28948975]
[94.22766876 -258.67956543]
[85.38189697 -270.84475708]
[78.85065460 -284.39404297]
[74.84388733 -298.89181519]
[73.49040985 -313.87207031]
[74.83370972 -328.85321045]
[78.83062744 -343.35372925]
[85.35266113 -356.90740967]
[94.19016266 -369.07864380]
[105.05904388 -379.47610474]
[117.60991669 -387.76556396]
[131.43931580 -393.68060303]
[146.10267639 -397.03103638]
[161.12866211 -397.70913696]
[176.03421021 -395.69317627]
[190.34019470 -391.04791260]
[203.58674622 -383.92266846]
[215.34800720 -374.54650879]
[225.24592590 -363.22085571]
[232.96232605 -350.30972290]
[238.24916077 -336.22821045]
[240.93646240 -321.42895508]
[240.93786621 -306.38766479]
[238.25329590 -291.58792114]
[232.96908569 -277.50540161]
[225.25508118 -264.59286499]
[215.35925293 -253.26535034]
[203.59973145 -243.88700867]
[190.35450745 -236.75932312]
[176.04939270 -232.11140442]
[161.14421082 -230.09266663]
[160.47442627 -215.10762024]
[159.80464172 -200.12258911]
[159.13484192 -185.13754272]
[158.46505737 -170.15251160]
[171.12742615 -178.19392395]
[185.35833740 -173.45249939]
[190.66729736 -159.42341614]
[183.14074707 -146.44841003]
[168.32696533 -144.09216309]
[157.14677429 -154.09008789]
[155.36430359 -139.19638062]
[153.58183289 -124.30265808]
[159.75192261 -110.74613190]
[150.42955017 -97.96317291]
[148.64707947 -83.06945801]
[150.97348022 -76.05448914]
[146.72560120 -67.96787262]
[144.72158813 -53.10234451]
[142.71757507 -38.23681641]
[140.71356201 -23.37128830]
[152.00854492 -33.24161530]
[166.93721008 -34.70268250]
[179.93156433 -27.20954132]
[186.14498901 -13.55695152]
[183.26007080 1.16300845]
[172.35279846 11.46015835]
[157.49130249 13.49391556]
[144.21858215 6.50573874]
[137.48481750 -6.89910889]
[133.72851562 7.62295008]
[129.97221375 22.14500999]
[126.21591949 36.66706848]
[122.45961761 51.18912888]
[123.92438507 54.39643097]
[123.90843201 58.47255707]
[122.02033997 62.71383286]
[118.19773865 66.26837921]
[113.79673767 80.60822296]
[109.39574432 94.94807434]
[106.40097046 109.64608002]
[104.84044647 124.56468201]
[103.27992249 139.48329163]
[101.83050537 154.41310120]
[108.30576324 168.84852600]
[99.46384430 180.83476257]
[98.12561035 195.77494812]
[96.78737640 210.71513367]
[107.81701660 218.98179626]
[113.27834320 231.51942444]
[111.84291840 245.01051331]
[103.99200439 255.94244385]
[91.86317444 261.52218628]
[90.30265045 276.44079590]
[96.56226349 290.97103882]
[87.54286957 302.82427979]
[85.98234558 317.74288940]
[84.42182159 332.66149902]
[82.86129761 347.58010864]
[97.57537842 350.55340576]
[111.94020081 354.91195679]
[125.82566071 360.61621094]
[139.10601807 367.61459351]
[151.66098022 375.84362793]
[163.37687683 385.22888184]
[174.14758301 395.68527222]
[183.87556458 407.11819458]
[192.47271729 419.42404175]
[199.86117554 432.49136353]
[205.97402954 446.20187378]
[210.75593567 460.43133545]
[214.16355896 475.05096436]
[216.16606140 489.92828369]
[216.74531555 504.92858887]
[215.89604187 519.91601562]
[213.62596130 534.75488281]
[209.95561218 549.31072998]
[204.91824341 563.45178223]
[198.55947876 577.04998779]
[190.93690491 589.98217773]
[182.11955261 602.13122559]
[172.18727112 613.38708496]
[161.23001099 623.64782715]
[149.34701538 632.82055664]
[136.64588928 640.82220459]
[123.24166870 647.58026123]
[109.25573730 653.03356934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 182]
[37 181]
[38 180]
[39 179]
[41 177]
[42 176]
[46 171]
[47 170]
[48 169]
[50 167]
[52 166]
[53 165]
[54 164]
[68 163]
[69 162]
[70 161]
[71 157]
[72 156]
[73 155]
[74 154]
[75 153]
[76 144]
[77 143]
[78 142]
[79 141]
[80 139]
[81 138]
[83 136]
[84 135]
[85 134]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
