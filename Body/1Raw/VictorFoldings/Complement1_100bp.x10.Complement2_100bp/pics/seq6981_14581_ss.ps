%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[149.18426514 706.53015137]
[135.48574829 700.40985107]
[122.13237762 693.56921387]
[109.16201019 686.02752686]
[96.61141205 677.80621338]
[84.51615906 668.92864990]
[72.91053009 659.41986084]
[61.82743454 649.30688477]
[51.29828262 638.61840820]
[41.35291672 627.38464355]
[32.01953506 615.63751221]
[23.32458687 603.41027832]
[15.29272556 590.73760986]
[7.94671583 577.65545654]
[1.30738103 564.20080566]
[-4.60645914 550.41192627]
[-9.77804089 536.32781982]
[-14.19270515 521.98846436]
[-17.83793640 507.43441772]
[-20.70340538 492.70703125]
[-22.78098488 477.84799194]
[-24.06479073 462.89944458]
[-24.55117989 447.90377808]
[-24.23877335 432.90344238]
[-23.12845993 417.94100952]
[-21.22338676 403.05886841]
[-18.52894974 388.29922485]
[-15.05279160 373.70391846]
[-10.80476284 359.31427002]
[-5.79690647 345.17114258]
[-0.04341671 331.31454468]
[6.43939686 317.78384399]
[13.63315773 304.61734009]
[21.51747513 291.85235596]
[30.06999779 279.52508545]
[39.26648712 267.67047119]
[49.08086777 256.32211304]
[59.48532867 245.51219177]
[70.45037079 235.27134705]
[81.94490814 225.62858582]
[93.93637085 216.61126709]
[106.39075470 208.24493408]
[119.27276611 200.55331421]
[132.54588318 193.55819702]
[126.26851654 179.93489075]
[119.99115753 166.31156921]
[113.71379852 152.68826294]
[110.55044556 151.13084412]
[107.98426819 147.96386719]
[106.76356506 143.48466492]
[107.47552490 138.31358337]
[101.81273651 124.42355347]
[96.14995575 110.53352356]
[90.41342163 124.39325714]
[77.16868591 131.43435669]
[62.47105789 128.43771362]
[53.04010391 116.77336121]
[53.18752289 101.77408600]
[62.84591675 90.29734802]
[77.59960175 87.59016418]
[90.70460510 94.89161682]
[86.51759338 80.48783112]
[82.33058167 66.08405304]
[78.14356995 51.68026733]
[73.95655823 37.27648544]
[69.76954651 22.87270355]
[65.58253479 8.46892166]
[62.91423035 23.22968483]
[56.70538330 36.88436508]
[47.33567429 48.59796906]
[35.37805939 57.65420532]
[21.56375313 63.49928665]
[6.73750782 65.77577972]
[-8.19404888 64.34448242]
[-22.31784439 59.29290771]
[-34.77020645 50.92997360]
[-44.78966522 39.76706696]
[-51.76352692 26.48680878]
[-55.26533890 11.90129185]
[-55.08096313 -3.09757471]
[-51.22167587 -17.59260368]
[-43.92346954 -30.69742012]
[-33.63263702 -41.61066055]
[-20.97846603 -49.66497040]
[-6.73476124 -54.36783218]
[8.22746658 -55.43165970]
[22.99327278 -52.79140091]
[36.65972137 -46.60850906]
[48.39110565 -37.26107025]
[57.47004700 -25.32068253]
[63.34136963 -11.51747894]
[64.23418427 -26.49088478]
[65.01551056 -41.47052383]
[65.68529510 -56.45556259]
[66.35507965 -71.44059753]
[67.02486420 -86.42563629]
[67.69464874 -101.41067505]
[68.36443329 -116.39571381]
[69.03421783 -131.38075256]
[69.70400238 -146.36579895]
[56.06334305 -153.13722229]
[46.36116409 -164.87551880]
[42.27843857 -179.54696655]
[44.52251434 -194.60963440]
[52.70459747 -207.45382690]
[65.40708923 -215.85421753]
[80.42920685 -218.35539246]
[95.16828156 -214.52398682]
[107.07067108 -205.02383423]
[114.07422638 -191.50088501]
[114.96553040 -176.29806519]
[109.59015656 -162.04937744]
[98.87943268 -151.22346497]
[84.68904114 -145.69601440]
[84.01925659 -130.71096802]
[83.34947205 -115.72592926]
[82.67968750 -100.74089050]
[82.00990295 -85.75585175]
[81.34011841 -70.77081299]
[80.67033386 -55.78577423]
[80.00054932 -40.80073547]
[82.84223938 -33.97823334]
[79.20759583 -25.59806824]
[78.31477356 -10.62466335]
[79.98632050 4.28191090]
[84.17333221 18.68569374]
[88.36034393 33.08947372]
[92.54734802 47.49325562]
[96.73435974 61.89703751]
[100.92137146 76.30081940]
[105.10838318 90.70460510]
[110.03997803 104.87073517]
[115.70276642 118.76076508]
[121.36555481 132.65078735]
[127.33711243 146.41088867]
[133.61447144 160.03421021]
[139.89183044 173.65753174]
[146.16918945 187.28083801]
[160.11058044 181.73603821]
[174.32731628 176.94107056]
[188.77909851 172.90956116]
[203.42497253 169.65292358]
[218.22341919 167.18037415]
[233.13247681 165.49894714]
[248.10987854 164.61338806]
[263.11322021 164.52622986]
[278.09991455 165.23770142]
[293.02749634 166.74578857]
[307.85366821 169.04621887]
[322.53637695 172.13246155]
[337.03402710 175.99578857]
[351.30551147 180.62524414]
[365.31039429 186.00769043]
[379.00894165 192.12786865]
[392.36236572 198.96846008]
[405.33276367 206.51005554]
[417.88342285 214.73126221]
[429.97872925 223.60879517]
[441.58441162 233.11749268]
[452.66757202 243.23039246]
[463.19680786 253.91883850]
[473.14224243 265.15249634]
[482.47570801 276.89959717]
[491.17071533 289.12677002]
[499.20266724 301.79937744]
[506.54876709 314.88150024]
[513.18817139 328.33605957]
[519.10211182 342.12490845]
[524.27374268 356.20898438]
[528.68853760 370.54833984]
[532.33386230 385.10235596]
[535.19940186 399.82971191]
[537.27709961 414.68875122]
[538.56097412 429.63729858]
[539.04748535 444.63296509]
[538.73516846 459.63330078]
[537.62493896 474.59573364]
[535.71997070 489.47787476]
[533.02563477 504.23754883]
[529.54956055 518.83288574]
[525.30163574 533.22253418]
[520.29382324 547.36572266]
[514.54046631 561.22235107]
[508.05770874 574.75311279]
[500.86404419 587.91961670]
[492.97979736 600.68469238]
[484.42736816 613.01202393]
[475.23095703 624.86663818]
[465.41662598 636.21508789]
[455.01223755 647.02508545]
[444.04727173 657.26599121]
[432.55279541 666.90881348]
[420.56140137 675.92620850]
[408.10705566 684.29260254]
[395.22509766 691.98431396]
[381.95202637 698.97955322]
[368.32546997 705.25836182]
[354.38403320 710.80310059]
[340.16726685 715.59796143]
[325.71545410 719.62939453]
[311.06958008 722.88592529]
[296.27111816 725.35839844]
[281.36206055 727.03973389]
[266.38464355 727.92517090]
[251.38131714 728.01226807]
[236.39462280 727.30072021]
[221.46704102 725.79248047]
[206.64088440 723.49200439]
[191.95819092 720.40563965]
[177.46055603 716.54223633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 138]
[45 137]
[46 136]
[47 135]
[51 134]
[52 133]
[53 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[91 124]
[92 123]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
