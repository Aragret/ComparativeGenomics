%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[102.73497009 910.95556641]
[87.76094055 909.96752930]
[72.89724731 907.90155029]
[58.22137070 904.76843262]
[43.80983353 900.58447266]
[29.73776817 895.37158203]
[16.07854080 889.15679932]
[2.90336752 881.97259521]
[-9.71906376 873.85644531]
[-21.72294426 864.85064697]
[-33.04569244 855.00213623]
[-43.62827301 844.36224365]
[-53.41551208 832.98651123]
[-62.35638809 820.93420410]
[-70.40428162 808.26812744]
[-77.51724243 795.05438232]
[-83.65817261 781.36175537]
[-88.79506683 767.26177979]
[-92.90114594 752.82788086]
[-95.95499420 738.13531494]
[-97.94068909 723.26068115]
[-98.84788513 708.28149414]
[-98.67185211 693.27593994]
[-97.41349792 678.32220459]
[-95.07939911 663.49822998]
[-91.68170929 648.88134766]
[-87.23815155 634.54772949]
[-81.77188873 620.57214355]
[-75.31142426 607.02740479]
[-67.89043427 593.98413086]
[-59.54761505 581.51037598]
[-50.32646179 569.67108154]
[-40.27504349 558.52807617]
[-29.44576836 548.13940430]
[-17.89509583 538.55920410]
[-5.68324709 529.83752441]
[7.12611151 522.01971436]
[20.46619606 515.14654541]
[34.26745987 509.25396729]
[48.45794296 504.37258911]
[62.96366882 500.52789307]
[77.70900726 497.73989868]
[92.61708069 496.02319336]
[107.61016846 495.38671875]
[108.05677032 480.39337158]
[108.50337982 465.40002441]
[108.94998932 450.40664673]
[101.59505463 437.45465088]
[109.73980713 423.89099121]
[109.51647949 408.89263916]
[108.62366486 393.91921997]
[107.73085022 378.94583130]
[106.83802795 363.97241211]
[98.35691071 351.72824097]
[105.25908661 337.49200439]
[104.36627197 322.51861572]
[103.47345734 307.54519653]
[102.58064270 292.57180786]
[101.68782806 277.59838867]
[100.79501343 262.62496948]
[99.90219116 247.65158081]
[85.87046814 244.72621155]
[73.06523132 238.25929260]
[62.36406708 228.68702698]
[54.50220871 216.65858459]
[50.02198029 202.99226379]
[49.23541641 188.61967468]
[52.20252991 174.52230835]
[58.72677994 161.66448975]
[68.36808777 150.92742920]
[80.47250366 143.04879761]
[94.21656799 138.57208252]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[83.55068970 80.30720520]
[90.51673126 67.14196014]
[89.62391663 52.16855621]
[85.98926544 43.78839111]
[88.83096313 36.96588898]
[88.16117859 21.98085022]
[87.49139404 6.99581051]
[86.82160187 -7.98922825]
[83.59123993 -13.75778770]
[83.73712921 -19.43896294]
[86.36170197 -23.42903519]
[86.13837433 -38.42737198]
[85.91504669 -53.42570877]
[85.69171906 -68.42404938]
[85.46839142 -83.42238617]
[84.91017914 -98.41199493]
[84.01736450 -113.38539886]
[83.12454987 -128.35881042]
[82.23172760 -143.33221436]
[81.33891296 -158.30561829]
[80.44609833 -173.27902222]
[66.06951904 -178.21687317]
[54.68022919 -188.28427124]
[48.01501846 -201.94601440]
[47.09028244 -217.11880493]
[52.04703903 -231.48887634]
[62.12941360 -242.86491394]
[75.79991913 -249.51214600]
[90.97389984 -250.41691589]
[105.33744812 -245.44126892]
[116.70020294 -235.34393311]
[123.32945251 -221.66470337]
[124.21426392 -206.48953247]
[119.21971893 -192.13255310]
[109.10745239 -180.78308105]
[95.41950226 -174.17184448]
[96.31232452 -159.19844055]
[97.20513916 -144.22502136]
[98.09795380 -129.25161743]
[98.99076843 -114.27821350]
[99.88358307 -99.30480957]
[102.26390076 -96.70357513]
[103.50254059 -92.82016754]
[103.01061249 -88.20375061]
[100.46672821 -83.64571381]
[100.69005585 -68.64737701]
[100.91338348 -53.64903641]
[101.13671112 -38.65069962]
[101.36003876 -23.65236282]
[101.80664062 -8.65901375]
[102.47643280 6.32602549]
[103.14621735 21.31106377]
[103.81600189 36.29610443]
[104.59732056 51.27574158]
[105.49013519 66.24914551]
[113.97126007 78.49332428]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[109.20160675 137.90229797]
[124.48828125 141.59779358]
[138.10395813 149.43971252]
[148.95158386 160.78677368]
[156.15974426 174.71563721]
[159.15275574 190.09605408]
[157.69659424 205.68258667]
[151.91716003 220.21543884]
[142.28945923 232.52232361]
[129.59855652 241.61294556]
[114.87560272 246.75875854]
[115.76841736 261.73217773]
[116.66123199 276.70556641]
[117.55404663 291.67898560]
[118.44686127 306.65237427]
[119.33967590 321.62579346]
[120.23249817 336.59918213]
[128.77748108 349.91436768]
[121.81143951 363.07962036]
[122.70425415 378.05300903]
[123.59706879 393.02642822]
[124.48988342 407.99981689]
[135.23048401 397.52893066]
[150.23039246 397.58175659]
[160.89697266 408.12802124]
[161.11994934 423.12637329]
[150.77156067 433.98504639]
[135.77986145 434.48373413]
[124.73315430 424.33758545]
[132.05613708 438.36199951]
[123.94333649 450.85327148]
[123.49672699 465.84661865]
[123.05012512 480.83996582]
[122.60351562 495.83331299]
[137.53213501 497.36108398]
[152.31159973 499.96209717]
[166.86485291 503.62277222]
[181.11601257 508.32406616]
[194.99079895 514.04144287]
[208.41685486 520.74505615]
[221.32420349 528.40002441]
[233.64552307 536.96636963]
[245.31658936 546.39947510]
[256.27655029 556.65020752]
[266.46829224 567.66503906]
[275.83865356 579.38653564]
[284.33877563 591.75366211]
[291.92434692 604.70190430]
[298.55581665 618.16375732]
[304.19863892 632.06903076]
[308.82336426 646.34521484]
[312.40588379 660.91790771]
[314.92755127 675.71112061]
[316.37518311 690.64770508]
[316.74124146 705.64984131]
[316.02380371 720.63928223]
[314.22665405 735.53784180]
[311.35910034 750.26794434]
[307.43615723 764.75268555]
[302.47824097 778.91662598]
[296.51119995 792.68585205]
[289.56616211 805.98864746]
[281.67932129 818.75561523]
[272.89181519 830.92022705]
[263.24942017 842.41900635]
[252.80242920 853.19201660]
[241.60531616 863.18310547]
[229.71644592 872.34027100]
[217.19781494 880.61560059]
[204.11466980 887.96606445]
[190.53524780 894.35333252]
[176.53033447 899.74407959]
[162.17294312 904.11016846]
[147.53791809 907.42889404]
[132.70156860 909.68292236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 169]
[45 168]
[46 167]
[47 166]
[49 164]
[50 157]
[51 156]
[52 155]
[53 154]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[72 136]
[73 135]
[74 134]
[75 132]
[77 130]
[78 129]
[80 128]
[81 127]
[82 126]
[83 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
