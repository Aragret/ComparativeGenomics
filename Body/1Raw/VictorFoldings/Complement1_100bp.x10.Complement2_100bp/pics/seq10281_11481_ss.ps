%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[102.59474182 496.28732300]
[87.59679413 496.10165405]
[72.61660767 495.34860229]
[57.67565536 494.02920532]
[42.79532623 492.14538574]
[27.99694443 489.69979858]
[13.30170727 486.69598389]
[-1.26933730 483.13821411]
[-15.69531441 479.03161621]
[-29.95555878 474.38204956]
[-44.02964401 469.19619751]
[-57.89740753 463.48147583]
[-71.53898621 457.24606323]
[-84.93483734 450.49890137]
[-98.06576538 443.24963379]
[-110.91297150 435.50869751]
[-123.45804596 427.28713989]
[-135.68301392 418.59674072]
[-147.57037354 409.44995117]
[-159.10310364 399.85989380]
[-170.26464844 389.84027100]
[-181.03906250 379.40545654]
[-191.41087341 368.57040405]
[-201.36524963 357.35064697]
[-210.88792419 345.76220703]
[-219.96525574 333.82174683]
[-228.58424377 321.54629517]
[-236.73252869 308.95352173]
[-244.39845276 296.06140137]
[-251.57102966 282.88842773]
[-258.23999023 269.45349121]
[-264.39575195 255.77578735]
[-270.02954102 241.87493896]
[-275.13327026 227.77085876]
[-279.69961548 213.48374939]
[-283.72204590 199.03408813]
[-287.19482422 184.44255066]
[-290.11291504 169.73004150]
[-292.47219849 154.91766357]
[-294.26925659 140.02661133]
[-295.50152588 125.07820892]
[-296.16723633 110.09389496]
[-296.26544189 95.09511566]
[-295.79602051 80.10336304]
[-294.75961304 65.14011383]
[-293.15771484 50.22680283]
[-290.99264526 35.38478851]
[-288.26745605 20.63533401]
[-284.98608398 5.99957037]
[-281.15322876 -8.50153923]
[-276.77438354 -22.84722137]
[-271.85580444 -37.01692581]
[-266.40454102 -50.99035645]
[-260.42840576 -64.74748993]
[-253.93595886 -78.26863098]
[-246.93650818 -91.53440094]
[-239.44007874 -104.52580261]
[-231.45739746 -117.22422028]
[-222.99990845 -129.61146545]
[-214.07972717 -141.66979980]
[-204.70962524 -153.38194275]
[-194.90304565 -164.73110962]
[-184.67401123 -175.70106506]
[-174.03718567 -186.27607727]
[-163.00779724 -196.44099426]
[-151.60165405 -206.18127441]
[-139.83509827 -215.48295593]
[-127.72498322 -224.33270264]
[-115.28865051 -232.71784973]
[-102.54392242 -240.62637329]
[-89.50905609 -248.04696655]
[-76.20271301 -254.96897888]
[-62.64396286 -261.38250732]
[-48.85222626 -267.27835083]
[-34.84726334 -272.64807129]
[-20.64912987 -277.48397827]
[-6.27817011 -281.77914429]
[8.24503231 -285.52743530]
[22.89967346 -288.72341919]
[37.66476059 -291.36260986]
[52.51914215 -293.44113159]
[67.44153595 -294.95608521]
[82.41057587 -295.90527344]
[97.40480804 -296.28732300]
[112.40275574 -296.10168457]
[127.38294220 -295.34863281]
[142.32389832 -294.02926636]
[157.20422363 -292.14544678]
[159.64994812 -306.94470215]
[162.09568787 -321.74398804]
[164.54141235 -336.54324341]
[166.98713684 -351.34252930]
[169.43286133 -366.14178467]
[171.87858582 -380.94107056]
[157.71380615 -386.00057983]
[144.68019104 -393.50820923]
[133.19668579 -403.22259521]
[123.63247681 -414.83145142]
[116.29498291 -427.96160889]
[111.42009735 -442.19097900]
[109.16450500 -457.06216431]
[109.60073090 -472.09710693]
[112.71474457 -486.81250000]
[118.40644836 -500.73529053]
[126.49287415 -513.41796875]
[136.71408081 -524.45275879]
[148.74148560 -533.48498535]
[162.18847656 -540.22430420]
[176.62277222 -544.45404053]
[191.58038330 -546.03826904]
[206.58047485 -544.92602539]
[221.14085388 -541.15307617]
[234.79347229 -534.84075928]
[247.09945679 -526.19189453]
[257.66320801 -515.48455811]
[266.14517212 -503.06295776]
[272.27264404 -489.32638550]
[275.84869385 -474.71640015]
[276.75833130 -459.70266724]
[274.97235107 -444.76779175]
[270.54815674 -430.39190674]
[263.62792969 -417.03710938]
[254.43417358 -405.13272095]
[243.26240540 -395.06140137]
[230.47177124 -387.14691162]
[216.47340393 -381.64367676]
[201.71731567 -378.72857666]
[186.67785645 -378.49533081]
[184.23213196 -363.69607544]
[181.78640747 -348.89678955]
[179.34068298 -334.09753418]
[176.89495850 -319.29824829]
[174.44921875 -304.49899292]
[172.00349426 -289.69970703]
[186.69873047 -286.69586182]
[201.26977539 -283.13809204]
[215.69573975 -279.03149414]
[229.95597839 -274.38189697]
[244.03005981 -269.19604492]
[257.89782715 -263.48129272]
[271.53939819 -257.24584961]
[284.93524170 -250.49868774]
[298.06616211 -243.24942017]
[310.91336060 -235.50845337]
[323.45840454 -227.28688049]
[335.68338013 -218.59646606]
[347.57073975 -209.44967651]
[359.10342407 -199.85958862]
[370.26498413 -189.83996582]
[381.03936768 -179.40515137]
[391.41119385 -168.57008362]
[401.36553955 -157.35029602]
[410.88821411 -145.76185608]
[419.96551514 -133.82136536]
[428.58450317 -121.54592896]
[436.73275757 -108.95313263]
[444.39868164 -96.06101227]
[451.57122803 -82.88803101]
[458.24017334 -69.45307159]
[464.39593506 -55.77536774]
[470.02972412 -41.87451935]
[475.13342285 -27.77043724]
[479.69976807 -13.48332500]
[483.72216797 0.96635091]
[487.19491577 15.55789185]
[490.11300659 30.27039528]
[492.47225952 45.08278275]
[494.26928711 59.97384262]
[495.50155640 74.92224121]
[496.16723633 89.90655518]
[496.26544189 104.90533447]
[495.79598999 119.89708710]
[494.75958252 134.86033630]
[493.15765381 149.77365112]
[490.99255371 164.61566162]
[488.26736450 179.36511230]
[484.98599243 194.00086975]
[481.15310669 208.50196838]
[476.77423096 222.84765625]
[471.85562134 237.01734924]
[466.40435791 250.99076843]
[460.42822266 264.74789429]
[453.93576050 278.26904297]
[446.93627930 291.53479004]
[439.43984985 304.52618408]
[431.45715332 317.22460938]
[422.99963379 329.61184692]
[414.07946777 341.67016602]
[404.70935059 353.38229370]
[394.90274048 364.73144531]
[384.67370605 375.70138550]
[374.03686523 386.27639771]
[363.00744629 396.44131470]
[351.60131836 406.18154907]
[339.83474731 415.48321533]
[327.72460938 424.33294678]
[315.28826904 432.71807861]
[302.54354858 440.62661743]
[289.50866699 448.04718018]
[276.20230103 454.96917725]
[262.64355469 461.38269043]
[248.85180664 467.27850342]
[234.84683228 472.64822388]
[220.64869690 477.48413086]
[206.27774048 481.77926636]
[191.75453186 485.52752686]
[177.09988403 488.72351074]
[162.33479309 491.36267090]
[147.48040771 493.44119263]
[132.55801392 494.95611572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
