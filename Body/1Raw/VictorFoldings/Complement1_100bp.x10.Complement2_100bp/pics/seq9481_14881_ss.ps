%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[66.32421875 498.29986572]
[61.34513855 512.56115723]
[52.54874420 524.84124756]
[40.64812088 534.14459229]
[26.60799980 539.71697998]
[11.56654835 541.10675049]
[-3.25689101 538.20117188]
[-16.66064644 531.23583984]
[-27.55813789 520.77532959]
[-35.06595230 507.66772461]
[-38.57546616 492.97555542]
[-37.80217743 477.88986206]
[-32.80877686 463.63354492]
[-24.00004959 451.36230469]
[-12.09008789 442.07092285]
[1.95562530 436.51263428]
[16.99846649 435.13800049]
[19.88373947 420.41812134]
[22.76901054 405.69821167]
[20.89533806 401.30523682]
[21.76142502 395.68856812]
[25.96555328 390.58593750]
[29.28781128 375.95846558]
[32.61007309 361.33102417]
[35.93233109 346.70355225]
[39.14560318 332.05175781]
[42.03087616 317.33187866]
[44.69667435 302.57064819]
[47.36246872 287.80944824]
[50.02826309 273.04821777]
[52.69406128 258.28701782]
[44.01686859 246.23536682]
[46.51008606 231.22741699]
[59.20978546 222.20770264]
[61.87557983 207.44648743]
[64.54137421 192.68527222]
[59.18913269 178.78552246]
[69.25582886 166.58010864]
[71.92162323 151.81889343]
[74.58741760 137.05767822]
[65.59128571 149.06057739]
[53.82801819 158.36785889]
[40.07782364 164.36219788]
[25.25270653 166.64602661]
[10.33595848 165.06784058]
[-3.68304205 159.73233032]
[-15.87446594 150.99339294]
[-25.42970085 139.43061829]
[-31.71498108 125.81095886]
[-34.31342697 111.03774261]
[-33.05269241 96.09081268]
[-28.01639938 81.96156311]
[-19.53858566 69.58712769]
[-8.18155289 59.78826141]
[5.30142546 53.21488190]
[20.01607323 50.30298615]
[34.98641968 51.24570084]
[49.21953583 55.98050690]
[61.77139282 64.19335938]
[71.80946350 75.33952332]
[78.66796875 88.67972565]
[81.89200592 103.32914734]
[81.26685333 118.32121277]
[88.54008484 105.20251465]
[95.51853943 91.92466736]
[102.19873047 78.49429321]
[108.87892914 65.06391907]
[115.55912018 51.63354111]
[122.23931885 38.20316696]
[121.45751953 22.40128899]
[134.05322266 14.45159626]
[139.81924438 0.60411090]
[144.64524841 -13.59834480]
[149.47125244 -27.80080032]
[139.40469360 -36.36036682]
[132.86187744 -47.80371094]
[130.60270691 -60.75801086]
[132.87471008 -73.67764282]
[139.38606262 -85.02859497]
[149.34294128 -93.47062683]
[161.54617310 -98.01545715]
[174.53570557 -98.14247894]
[179.78242493 -112.19495392]
[185.02914429 -126.24742126]
[190.27584839 -140.29989624]
[195.52256775 -154.35237122]
[200.76928711 -168.40483093]
[206.01600647 -182.45730591]
[210.09567261 -196.89186096]
[212.98095703 -211.61175537]
[208.04261780 -226.64250183]
[218.08354187 -237.64382935]
[213.14521790 -252.67457581]
[223.18614197 -263.67590332]
[226.07141113 -278.39578247]
[228.95668030 -293.11569214]
[231.84194946 -307.83557129]
[217.95359802 -313.64059448]
[205.51826477 -322.12280273]
[195.04519653 -332.93481445]
[186.96324158 -345.63391113]
[181.60336304 -359.70004272]
[179.18502808 -374.55725098]
[179.80728149 -389.59710693]
[183.44464111 -404.20379639]
[189.94813538 -417.77911377]
[199.05148315 -429.76718140]
[210.38189697 -439.67709351]
[223.47540283 -447.10308838]
[237.79582214 -451.74099731]
[252.75675964 -453.40097046]
[267.74554443 -452.01501465]
[282.14843750 -447.63986206]
[295.37561035 -440.45468140]
[306.88543701 -430.75372314]
[316.20660400 -418.93420410]
[322.95739746 -405.48016357]
[326.86138916 -390.94247437]
[327.75869751 -375.91653442]
[325.61260986 -361.01754761]
[320.51095581 -346.85571289]
[312.66271973 -334.01086426]
[302.38919067 -323.00903320]
[290.11114502 -314.30075073]
[276.33132935 -308.24258423]
[261.61401367 -305.08264160]
[246.56184387 -304.95028687]
[243.67657471 -290.23040771]
[240.79130554 -275.51052856]
[237.90603638 -260.79061890]
[243.05073547 -246.81274414]
[232.80343628 -234.75856018]
[237.94813538 -220.78067017]
[227.70083618 -208.72648621]
[224.81556702 -194.00659180]
[235.49839783 -204.53640747]
[249.82392883 -208.98377991]
[264.59182739 -206.35513306]
[276.50283813 -197.23771667]
[282.89608765 -183.66839600]
[282.34329224 -168.67858887]
[274.96789551 -155.61705017]
[262.41763306 -147.40176392]
[247.49624634 -145.86804199]
[233.53721619 -151.35853577]
[223.65902710 -162.64663696]
[220.06848145 -177.21058655]
[214.82176208 -163.15811157]
[209.57504272 -149.10565186]
[204.32832336 -135.05317688]
[199.08160400 -121.00070190]
[193.83488464 -106.94823456]
[188.58816528 -92.89575958]
[200.63294983 -81.04741669]
[206.30552673 -65.07382202]
[204.41903687 -48.17250443]
[195.30494690 -33.74916840]
[180.75596619 -24.73147011]
[163.67370605 -22.97480202]
[158.84770203 -8.77234745]
[154.02171326 5.43010855]
[166.62504578 -2.70352030]
[181.62443542 -2.83854818]
[194.37216187 5.06686449]
[200.91819763 18.56313896]
[199.23417664 33.46831131]
[189.84191895 45.16384506]
[175.65171814 50.02575684]
[161.06056213 46.54753113]
[150.58967590 35.80693054]
[147.48359680 21.13179207]
[148.74320984 35.97303772]
[135.66969299 44.88336182]
[128.98950195 58.31373596]
[122.30930328 71.74411011]
[115.62911224 85.17449188]
[108.94891357 98.60486603]
[109.64555359 102.39789581]
[108.66690063 106.47957611]
[105.92152405 110.09481049]
[101.65878296 112.47574615]
[94.38555145 125.59443665]
[89.34863281 139.72346497]
[86.68283844 154.48468018]
[84.01704407 169.24591064]
[89.17861176 184.20146179]
[79.30259705 195.35105896]
[76.63680267 210.11227417]
[73.97100067 224.87348938]
[82.71355438 237.76557922]
[79.79977417 252.69757080]
[67.45527649 260.95278931]
[64.78948212 275.71401978]
[62.12368774 290.47525024]
[59.45788956 305.23645020]
[56.79209518 319.99768066]
[58.66458511 326.33843994]
[57.26403046 331.84619141]
[53.82090759 335.15588379]
[55.10668564 344.19937134]
[50.55979156 350.02581787]
[47.23753357 364.65328979]
[43.91527176 379.28073120]
[40.59301376 393.90820312]
[37.48890305 408.58349609]
[34.60363007 423.30337524]
[31.71835709 438.02328491]
[45.12910461 444.97515869]
[56.03709793 455.42468262]
[63.55807495 468.52471924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 199]
[27 196]
[28 195]
[29 194]
[30 193]
[31 192]
[34 189]
[35 188]
[36 187]
[38 185]
[39 184]
[40 183]
[63 182]
[64 181]
[65 177]
[66 176]
[67 175]
[68 174]
[69 173]
[71 171]
[72 161]
[73 160]
[74 159]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 135]
[90 134]
[92 132]
[94 130]
[95 129]
[96 128]
[97 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
