%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[137.77798462 453.76596069]
[140.04562378 438.90945435]
[144.50227356 424.55688477]
[151.04838562 411.02893066]
[159.53768921 398.62774658]
[169.78056335 387.63040161]
[181.54815674 378.28262329]
[194.57759094 370.79318237]
[189.12223816 356.82037354]
[183.66688538 342.84759521]
[178.21151733 328.87478638]
[172.75616455 314.90200806]
[158.48423767 304.69030762]
[161.41233826 286.51043701]
[149.44281006 277.64593506]
[151.39773560 261.94595337]
[145.73493958 248.05593872]
[133.76539612 239.19143677]
[135.72032166 223.49147034]
[132.62966919 221.79437256]
[130.20745850 218.51596069]
[129.18798828 213.98672485]
[130.13014221 208.85258484]
[125.09322357 194.72355652]
[120.05630493 180.59452820]
[115.01938629 166.46549988]
[109.98246765 152.33647156]
[104.77542877 147.09161377]
[104.97745514 137.95941162]
[100.15145111 123.75695801]
[95.32545471 109.55450439]
[89.45649719 95.75032043]
[82.57707977 82.42089081]
[75.69766998 69.09146881]
[68.81826019 55.76203537]
[61.93884659 42.43260574]
[48.73411942 33.71791840]
[49.77262878 18.85956001]
[42.89321518 5.53013182]
[36.01380539 -7.79929733]
[29.13439178 -21.12872696]
[28.01806259 -6.17032385]
[20.98597717 7.07919550]
[9.22316551 16.38705635]
[-5.28813267 20.18471718]
[-20.10250664 17.83221054]
[-32.72347641 9.72597027]
[-41.02418518 -2.76795697]
[-43.60581970 -17.54412651]
[-40.03332901 -32.11249161]
[-30.90873718 -44.01803207]
[-17.76970291 -51.25444794]
[-2.83037996 -52.60228348]
[11.39169025 -47.83440018]
[22.50081253 -37.75292587]
[18.31380272 -52.15670776]
[14.12679100 -66.56049347]
[9.93977928 -80.96427155]
[5.64565611 -95.33648682]
[1.24465787 -109.67633057]
[-3.15634012 -124.01618195]
[-7.55733824 -138.35603333]
[-13.01269531 -152.32882690]
[-19.49219131 -165.85717773]
[-25.97168732 -179.38551331]
[-32.45118332 -192.91386414]
[-38.98054504 -199.30175781]
[-38.92475891 -206.69219971]
[-45.20211792 -220.31552124]
[-51.47948074 -233.93884277]
[-65.89720917 -229.70243835]
[-80.77812195 -227.61051941]
[-95.80504608 -227.70767212]
[-110.65767670 -229.99180603]
[-125.01942444 -234.41426086]
[-138.58416748 -240.88075256]
[-151.06278992 -249.25344849]
[-162.18928528 -259.35388184]
[-171.72650146 -270.96679688]
[-179.47114563 -283.84460449]
[-185.25814819 -297.71286011]
[-188.96417236 -312.27593994]
[-190.51019287 -327.22344971]
[-189.86328125 -342.23675537]
[-187.03721619 -356.99584961]
[-182.09223938 -371.18615723]
[-175.13374329 -384.50521851]
[-166.31005859 -396.66912842]
[-155.80926514 -407.41857910]
[-143.85517883 -416.52450562]
[-130.70260620 -423.79278564]
[-116.63188934 -429.06848145]
[-101.94296265 -432.23913574]
[-86.94890594 -433.23721313]
[-71.96932220 -432.04138184]
[-57.32350540 -428.67718506]
[-43.32362747 -423.21627808]
[-30.26810265 -415.77511597]
[-18.43520355 -406.51226807]
[-8.07715416 -395.62518311]
[0.58526510 -383.34591675]
[7.36741447 -369.93621826]
[12.12473202 -355.68188477]
[14.75581455 -340.88677979]
[15.20458031 -325.86624146]
[13.46146488 -310.94042969]
[9.56362152 -296.42752075]
[3.59413433 -282.63684082]
[-4.31975746 -269.86233521]
[-14.00936890 -258.37628174]
[-25.26816559 -248.42352295]
[-37.85616302 -240.21620178]
[-31.57880211 -226.59288025]
[-25.30144310 -212.96955872]
[-18.92283821 -199.39335632]
[-12.44334126 -185.86500549]
[-5.96384573 -172.33666992]
[0.51565027 -158.80831909]
[3.26502061 -173.55419922]
[12.94368553 -185.01383972]
[27.02166367 -190.19172668]
[41.81900787 -187.73437500]
[53.46772766 -178.28411865]
[58.92287064 -164.31123352]
[56.75848389 -149.46820068]
[47.54032516 -137.63496399]
[33.67800522 -131.90469360]
[18.79509544 -133.77526855]
[6.78250885 -142.75701904]
[11.18350697 -128.41717529]
[15.58450508 -114.07733154]
[19.98550224 -99.73748016]
[24.95315361 -94.26535034]
[24.34356117 -85.15128326]
[28.53057289 -70.74750519]
[32.71758270 -56.34371948]
[36.90459442 -41.93993759]
[42.46382141 -28.00813866]
[49.34323502 -14.67870998]
[56.22264481 -1.34928083]
[63.10205841 11.98014832]
[75.81472015 19.74142838]
[75.26827240 35.55319595]
[82.14768982 48.88262177]
[89.02709961 62.21205139]
[95.90650940 75.54148102]
[102.78592682 88.87091064]
[105.09503937 74.04971313]
[114.42821503 62.30697632]
[128.34577942 56.71223068]
[143.20973206 58.72792816]
[155.13465881 67.82717133]
[161.00340271 81.63143921]
[159.28190613 96.53232574]
[150.42016602 108.63478088]
[136.73460388 114.77524567]
[121.80259705 113.34862518]
[109.52790833 104.72850037]
[114.35391235 118.93096161]
[119.17990875 133.13340759]
[124.11150360 147.29954529]
[129.14842224 161.42857361]
[134.18533325 175.55760193]
[139.22224426 189.68664551]
[144.25917053 203.81567383]
[149.61035156 217.82868958]
[161.98493958 227.68669128]
[159.62496948 242.39315796]
[165.28775024 256.28317261]
[177.66233826 266.14117432]
[175.30236816 280.84762573]
[186.86651611 286.56018066]
[191.29711914 298.24581909]
[186.72895813 309.44662476]
[192.18432617 323.41943359]
[197.63967896 337.39224243]
[203.09503174 351.36502075]
[208.55039978 365.33782959]
[223.20761108 362.01763916]
[238.19596863 360.91918945]
[253.18063354 362.06701660]
[267.82684326 365.43545532]
[281.80737305 370.94927979]
[294.80993652 378.48529053]
[306.54397583 387.87515259]
[316.74743652 398.90905762]
[325.19232178 411.34054565]
[331.68997192 424.89187622]
[336.09521484 439.26028442]
[338.30969238 454.12478638]
[338.28384399 469.15332031]
[336.01834106 484.01016235]
[331.56372070 498.36334229]
[325.01953125 511.89224243]
[316.53198242 524.29461670]
[306.29067993 535.29339600]
[294.52441406 544.64288330]
[281.49606323 552.13421631]
[267.49664307 557.59991455]
[252.83895874 560.91802979]
[237.85044861 562.01434326]
[222.86593628 560.86437988]
[208.22021484 557.49383545]
[194.24046326 551.97802734]
[181.23899841 544.44018555]
[169.50627136 535.04864502]
[159.30439758 524.01330566]
[150.86128235 511.58059692]
[144.36557007 498.02835083]
[139.96235657 483.65933228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[14 171]
[16 169]
[17 168]
[19 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[29 160]
[30 159]
[31 158]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[38 141]
[39 140]
[40 139]
[41 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 132]
[60 131]
[61 130]
[62 129]
[63 118]
[64 117]
[65 116]
[66 115]
[68 114]
[69 113]
[70 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
