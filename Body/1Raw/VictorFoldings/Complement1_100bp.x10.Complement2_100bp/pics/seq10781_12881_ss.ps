%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[45.20425034 176.60530090]
[49.37643814 191.02342224]
[52.27611542 205.75032043]
[53.88121414 220.67388916]
[54.17951584 235.68055725]
[53.16875458 250.65612793]
[50.85662079 265.48663330]
[47.26071167 280.05917358]
[42.40839767 294.26284790]
[36.33660126 307.98956299]
[29.09154129 321.13482666]
[20.72835159 333.59863281]
[11.31068707 345.28610229]
[0.91022021 356.10827637]
[-10.39389324 365.98281860]
[-22.51561928 374.83456421]
[-35.36270523 382.59609985]
[-48.83737183 389.20843506]
[-62.83707047 394.62118530]
[-77.25524902 398.79315186]
[-91.98217773 401.69262695]
[-106.90576935 403.29751587]
[-121.91245270 403.59561157]
[-136.88801575 402.58462524]
[-151.71847534 400.27230835]
[-166.29095459 396.67617798]
[-180.49456787 391.82366943]
[-194.22119141 385.75167847]
[-207.36636353 378.50643921]
[-219.83006287 370.14306641]
[-231.51739502 360.72525024]
[-242.33943176 350.32461548]
[-252.21380615 339.02038574]
[-261.06536865 326.89852905]
[-268.82675171 314.05133057]
[-275.43887329 300.57656860]
[-280.85140991 286.57678223]
[-285.02319336 272.15856934]
[-287.92245483 257.43157959]
[-289.52716064 242.50796509]
[-289.82504272 227.50128174]
[-288.81384277 212.52574158]
[-286.50131226 197.69531250]
[-282.90496826 183.12287903]
[-278.05227661 168.91934204]
[-271.98010254 155.19279480]
[-264.73464966 142.04771423]
[-256.37112427 129.58415222]
[-246.95312500 117.89694214]
[-236.55235291 107.07505035]
[-225.24797058 97.20083618]
[-213.12599182 88.34944916]
[-200.27868652 80.58824921]
[-186.80383301 73.97631073]
[-172.80398560 68.56395721]
[-158.38569641 64.39237976]
[-143.65867615 61.49332047]
[-128.73504639 59.88885117]
[-113.72834778 59.59117508]
[-98.75282288 60.60256958]
[-83.92243195 62.91532516]
[-69.35004425 66.51184845]
[-55.14657211 71.36476135]
[-41.42011642 77.43713379]
[-28.27513695 84.68274689]
[-15.81168461 93.04646301]
[-4.12461138 102.46461487]
[6.69713449 112.86553955]
[16.57119179 124.17006683]
[25.42241096 136.29216003]
[38.26135254 128.53578186]
[51.10029221 120.77938080]
[63.93923187 113.02299500]
[76.77817535 105.26660156]
[89.61711121 97.51020813]
[101.57945251 88.46021271]
[112.53536224 78.21482086]
[123.33751678 67.80744171]
[133.98352051 57.24039841]
[144.62953186 46.67335129]
[155.27554321 36.10630035]
[165.92155457 25.53925514]
[176.56756592 14.97220612]
[187.21356201 4.40515900]
[177.35418701 -6.90640831]
[168.24768066 -18.83245087]
[159.93225098 -31.32294846]
[152.44276428 -44.32550812]
[145.81065369 -57.78559113]
[140.06370544 -71.64674377]
[135.22605896 -85.85083008]
[131.31797791 -100.33827209]
[128.35588074 -115.04829407]
[126.35215759 -129.91920471]
[125.31523895 -144.88862610]
[125.24947357 -159.89378357]
[126.15512085 -174.87171936]
[128.02839661 -189.75962830]
[130.86143494 -204.49505615]
[134.64236450 -219.01620483]
[139.35531616 -233.26214600]
[144.98051453 -247.17314148]
[151.49438477 -260.69085693]
[158.86959839 -273.75857544]
[167.07521057 -286.32147217]
[176.07681274 -298.32690430]
[185.83665466 -309.72445679]
[196.31379700 -320.46636963]
[207.46427917 -330.50756836]
[219.24134827 -339.80590820]
[231.59561157 -348.32244873]
[244.47521973 -356.02142334]
[257.82620239 -362.87057495]
[271.59249878 -368.84112549]
[285.71640015 -373.90808105]
[300.13870239 -378.05014038]
[314.79882812 -381.25000000]
[329.63537598 -383.49417114]
[344.58605957 -384.77325439]
[359.58816528 -385.08190918]
[374.57879639 -384.41885376]
[389.49508667 -382.78680420]
[404.27444458 -380.19265747]
[418.85488892 -376.64730835]
[433.17526245 -372.16555786]
[447.17550659 -366.76629639]
[460.79687500 -360.47207642]
[473.98226929 -353.30938721]
[486.67636108 -345.30819702]
[498.82589722 -336.50210571]
[510.37997437 -326.92803955]
[521.29003906 -316.62615967]
[531.51043701 -305.63967896]
[540.99822998 -294.01467896]
[549.71362305 -281.79989624]
[557.62005615 -269.04660034]
[564.68444824 -255.80824280]
[570.87707520 -242.14038086]
[576.17193604 -228.10034180]
[580.54693604 -213.74699402]
[583.98370361 -199.14056396]
[586.46771240 -184.34231567]
[587.98864746 -169.41429138]
[588.54016113 -154.41914368]
[588.11981201 -139.41972351]
[586.72943115 -124.47898865]
[584.37487793 -109.65957642]
[581.06597900 -95.02365112]
[576.81665039 -80.63261414]
[571.64471436 -66.54680634]
[565.57183838 -52.82532883]
[558.62347412 -39.52571869]
[550.82885742 -26.70377159]
[542.22058105 -14.41326046]
[532.83483887 -2.70573831]
[522.71087646 8.36968899]
[511.89129639 18.76656723]
[500.42138672 28.44128609]
[488.34927368 37.35326767]
[475.72564697 45.46513367]
[462.60336304 52.74285889]
[449.03753662 59.15591431]
[435.08505249 64.67740631]
[420.80441284 69.28417206]
[406.25552368 72.95688629]
[391.49942017 75.68015289]
[376.59799194 77.44254303]
[361.61370850 78.23666382]
[346.60946655 78.05918884]
[331.64819336 76.91085815]
[316.79260254 74.79649353]
[302.10504150 71.72496033]
[287.64709473 67.70914459]
[273.47940063 62.76588440]
[259.66140747 56.91591263]
[246.25108337 50.18377686]
[233.30464172 42.59770203]
[220.87638855 34.18951797]
[209.01847839 24.99448204]
[197.78060913 15.05116749]
[187.13461304 25.61821556]
[176.48860168 36.18526459]
[165.84259033 46.75231171]
[155.19657898 57.31935883]
[144.55056763 67.88640594]
[133.90455627 78.45345306]
[132.99128723 83.14120483]
[129.12351990 87.30500793]
[122.78075409 89.17073059]
[111.82484436 99.41612244]
[126.46628571 96.15602875]
[141.25387573 98.67140198]
[153.99397278 106.58910370]
[162.79664612 118.73459625]
[166.35607910 133.30615234]
[164.14425659 148.14218140]
[156.48927307 161.04185486]
[144.52671814 170.09155273]
[130.03114319 173.94883728]
[115.15290833 172.04148865]
[102.09909058 164.65245056]
[92.80615234 152.87783813]
[88.65264893 138.46435547]
[90.25472260 123.55016327]
[97.37350464 110.34915161]
[84.53456116 118.10554504]
[71.69562531 125.86193085]
[58.85668182 133.61833191]
[46.01774216 141.37471008]
[33.17880249 149.13110352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 210]
[71 209]
[72 208]
[73 207]
[74 206]
[75 205]
[76 190]
[77 189]
[78 186]
[79 185]
[80 184]
[81 183]
[82 182]
[83 181]
[84 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
