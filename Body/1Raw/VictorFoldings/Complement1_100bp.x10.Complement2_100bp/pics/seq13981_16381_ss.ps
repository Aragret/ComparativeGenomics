%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[86.93244171 428.61206055]
[89.31597137 413.15719604]
[101.11006165 402.88909912]
[100.66345215 387.89575195]
[100.21685028 372.90240479]
[99.77024078 357.90905762]
[96.42898560 351.31680298]
[99.43027496 342.68951416]
[99.20694733 327.69119263]
[95.96421051 321.04992676]
[99.09362030 312.46826172]
[99.09362030 297.46826172]
[91.35632324 284.74099731]
[99.09362030 270.94082642]
[99.09362030 255.94082642]
[82.21813202 249.66531372]
[69.01726532 237.37197876]
[61.52952957 220.92361450]
[60.92485046 202.82723999]
[67.32183838 185.85214233]
[79.76564789 172.60600281]
[96.37042999 165.13433838]
[95.47761536 150.16093445]
[86.99649048 137.91674805]
[93.89867401 123.68051147]
[93.00585938 108.70710754]
[92.00159454 93.74076843]
[83.25931549 80.55429077]
[90.02857208 67.28679657]
[88.91292572 52.32834244]
[87.79727936 37.36988831]
[86.68163300 22.41143608]
[85.56597900 7.45298243]
[84.45033264 -7.50547123]
[83.33468628 -22.46392441]
[82.21903229 -37.42237854]
[76.46437836 -23.57016182]
[67.22930908 -11.75011349]
[55.18052292 -2.81553245]
[41.18782806 2.58858562]
[26.26136971 4.07211351]
[11.47870159 1.52795327]
[-2.09300113 -4.86022949]
[-13.47398663 -14.63126564]
[-21.84265327 -27.07977676]
[-26.59485626 -41.30709457]
[-27.38753319 -56.28613663]
[-24.16345978 -70.93554688]
[-17.15538216 -84.19778442]
[-6.86922264 -95.11542511]
[5.95245457 -102.90032196]
[20.38404083 -106.99047089]
[35.38370514 -107.09060669]
[49.86861420 -103.19349670]
[62.79308319 -95.58048248]
[73.22409058 -84.80113983]
[80.40860748 -71.63365173]
[83.82808685 -57.02743149]
[87.36775970 -71.60380554]
[90.90743256 -86.18018341]
[94.44710541 -100.75656128]
[97.98677826 -115.33293152]
[96.61682892 -119.45327759]
[96.62815094 -123.39844513]
[97.79605865 -126.75573730]
[99.78492737 -129.22778320]
[102.19540405 -130.65878296]
[106.59639740 -144.99862671]
[110.99739838 -159.33847046]
[113.55323029 -174.11912537]
[114.22301483 -189.10417175]
[114.89279938 -204.08920288]
[115.56258392 -219.07424927]
[101.47203064 -222.81735229]
[88.47665405 -229.41262817]
[77.14623260 -238.56806946]
[67.97696686 -249.87950134]
[61.36971283 -262.84835815]
[57.61250305 -276.90374756]
[56.86795425 -291.42749023]
[59.16625214 -305.78143311]
[64.40393066 -319.33529663]
[72.34851074 -331.49459839]
[82.64884949 -341.72647095]
[94.85063171 -349.58322144]
[108.41643524 -354.72177124]
[122.74937439 -356.91879272]
[123.64218903 -371.89218140]
[124.53500366 -386.86560059]
[124.98161316 -401.85894775]
[124.98161316 -416.85894775]
[124.98161316 -431.85894775]
[124.98161316 -446.85894775]
[110.34239197 -450.45849609]
[96.99032593 -457.45745850]
[85.70166779 -467.44894409]
[77.13273621 -479.85205078]
[71.78172302 -493.94567871]
[69.95970917 -508.91043091]
[71.77264404 -523.87628174]
[77.11511993 -537.97314453]
[85.67652893 -550.38140869]
[96.95912170 -560.37976074]
[110.30694580 -567.38677979]
[124.94397736 -570.99523926]
[140.01924133 -570.99523926]
[154.65626526 -567.38677979]
[168.00408936 -560.37976074]
[179.28669739 -550.38140869]
[187.84809875 -537.97314453]
[193.19056702 -523.87628174]
[195.00350952 -508.91043091]
[193.18150330 -493.94567871]
[187.83047485 -479.85205078]
[179.26155090 -467.44894409]
[167.97290039 -457.45745850]
[154.62081909 -450.45849609]
[139.98161316 -446.85894775]
[139.98161316 -431.85894775]
[139.98161316 -416.85894775]
[139.98161316 -401.85894775]
[141.86613464 -399.78369141]
[143.04217529 -396.83691406]
[143.17366028 -393.28469849]
[142.02697754 -389.50982666]
[139.50840759 -385.97277832]
[138.61560059 -370.99935913]
[137.72277832 -356.02597046]
[152.58285522 -351.78305054]
[166.13642883 -344.34390259]
[177.70567322 -334.07708740]
[186.71121216 -321.49252319]
[192.70118713 -307.21643066]
[195.37380981 -291.95996094]
[194.59269714 -276.48391724]
[190.39373779 -261.56069946]
[182.98345947 -247.93579102]
[172.72894287 -236.29057312]
[160.13955688 -227.20817566]
[145.84169006 -221.14433289]
[130.54762268 -218.40446472]
[129.87783813 -203.41941833]
[129.20805359 -188.43438721]
[128.53826904 -173.44934082]
[136.24050903 -186.32084656]
[147.66218567 -196.04428101]
[161.59799194 -201.59347534]
[176.57719421 -202.38284302]
[191.01904297 -198.32907104]
[203.39944458 -189.85997009]
[212.41184998 -177.86929321]
[217.10517883 -163.62243652]
[216.98411560 -148.62292480]
[212.06146240 -134.45368958]
[202.85668945 -122.61003113]
[190.34120178 -114.34185028]
[175.83581543 -110.52170563]
[160.87129211 -111.55274200]
[147.02688599 -117.32615662]
[135.76361084 -127.23266602]
[128.27014160 -140.22680664]
[125.33724213 -154.93748474]
[120.93624878 -140.59762573]
[116.53524780 -126.25778198]
[112.56315613 -111.79325867]
[109.02348328 -97.21688843]
[105.48381042 -82.64051056]
[101.94413757 -68.06413269]
[98.40446472 -53.48775864]
[97.17749023 -38.53802490]
[98.29313660 -23.57957268]
[99.40878296 -8.62111950]
[100.52443695 6.33733368]
[101.64008331 21.29578781]
[102.75572968 36.25424194]
[103.87138367 51.21269226]
[104.98703003 66.17115021]
[113.64951324 78.28769684]
[106.96005249 92.62511444]
[110.65238953 99.79025269]
[107.97926331 107.81429291]
[108.87207794 122.78769684]
[117.41706085 136.10287476]
[110.45101929 149.26811218]
[111.34383392 164.24151611]
[123.13932800 167.09524536]
[133.78384399 172.89372253]
[142.55763245 181.23637390]
[148.86959839 191.55091858]
[152.29719543 203.13255310]
[152.61462402 215.19215393]
[149.80776978 226.91006470]
[144.07460022 237.49172974]
[135.81126404 246.22164917]
[125.58465576 252.51170349]
[114.09362030 255.94082642]
[114.09362030 270.94082642]
[121.83092499 284.74099731]
[114.09362030 297.46826172]
[114.09362030 312.46826172]
[114.20529175 327.46786499]
[114.42861938 342.46618652]
[114.76359558 357.46246338]
[115.21019745 372.45581055]
[115.65680695 387.44915771]
[116.10340881 402.44250488]
[128.48776245 411.99038696]
[131.78695679 427.27597046]
[124.44320679 441.08190918]
[109.92401886 446.88940430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[8 202]
[9 201]
[11 200]
[12 199]
[14 197]
[15 196]
[22 185]
[23 184]
[25 182]
[26 181]
[27 179]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[58 169]
[59 168]
[60 167]
[61 166]
[62 165]
[67 164]
[68 163]
[69 162]
[70 144]
[71 143]
[72 142]
[73 141]
[87 128]
[88 127]
[89 126]
[90 121]
[91 120]
[92 119]
[93 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
