%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[192.86605835 474.96127319]
[201.65797424 462.73358154]
[212.87324524 452.68212891]
[225.98728943 445.27697754]
[221.58628845 430.93713379]
[217.18528748 416.59729004]
[212.78430176 402.25744629]
[208.27667236 387.95077515]
[194.63784790 376.90768433]
[198.64285278 358.93432617]
[193.81686401 344.73187256]
[188.99085999 330.52941895]
[184.16485596 316.32696533]
[179.33886719 302.12451172]
[174.30194092 287.99548340]
[169.05522156 273.94302368]
[163.80851746 259.89053345]
[158.56179810 245.83807373]
[153.31507874 231.78559875]
[147.96388245 217.77258301]
[142.50852966 203.79977417]
[137.05317688 189.82698059]
[130.87741089 176.15730286]
[123.99799347 162.82788086]
[117.11858368 149.49845886]
[110.23916626 136.16902161]
[103.35975647 122.83959198]
[96.48034668 109.51016235]
[90.27890015 104.36092377]
[89.59940338 95.93067169]
[82.91921234 82.50029755]
[76.23901367 69.06992340]
[69.55882263 55.63954544]
[62.48171616 42.41401672]
[55.01397324 29.40506363]
[41.43328857 21.28868866]
[41.80730057 6.39878035]
[34.33956146 -6.61017179]
[26.87182045 -19.61912346]
[19.40407944 -32.62807846]
[11.93633747 -45.63702774]
[4.46859598 -58.64598083]
[-2.51779222 -64.53055573]
[-3.01183510 -71.90467834]
[-10.28506470 -85.02336884]
[-17.55829430 -98.14206696]
[-24.83152390 -111.26075745]
[-24.65666389 -96.26177979]
[-29.29885674 -81.99818420]
[-38.26819992 -69.97525787]
[-50.61813736 -61.46179199]
[-65.04534912 -57.35624695]
[-80.02729797 -58.09188080]
[-93.98291016 -63.59106445]
[-105.43940735 -73.27346039]
[-113.18775940 -86.11724854]
[-116.41026306 -100.76701355]
[-114.76684570 -115.67671204]
[-108.43093872 -129.27290344]
[-98.07118225 -140.12072754]
[-84.78086853 -147.07540894]
[-69.96256256 -149.40299988]
[-55.18006134 -146.85786438]
[-41.99340820 -139.70858765]
[-31.79411507 -128.70948792]
[-35.55041504 -143.23155212]
[-39.30671692 -157.75360107]
[-43.06301498 -172.27566528]
[-46.21038818 -157.60957336]
[-52.99902344 -144.23368835]
[-62.97866440 -133.03517151]
[-75.48739624 -124.75679016]
[-89.69554901 -119.94760132]
[-104.66075897 -118.92659760]
[-119.39044189 -121.76149750]
[-132.90760803 -128.26426697]
[-144.31573486 -138.00360107]
[-152.85815430 -150.33352661]
[-157.96827698 -164.43624878]
[-159.30717468 -179.37637329]
[-156.78602600 -194.16297913]
[-150.57206726 -207.81533813]
[-141.07743835 -219.42791748]
[-128.93190002 -228.23049927]
[-114.94099426 -233.63925171]
[-100.03269958 -235.29544067]
[-85.19583893 -233.08918762]
[-71.41448212 -227.16683960]
[-59.60269547 -217.92120361]
[-50.54391098 -205.96553040]
[-44.83764648 -192.08779907]
[-43.72199631 -207.04624939]
[-42.60634613 -222.00469971]
[-41.49069977 -236.96316528]
[-40.37504959 -251.92161560]
[-39.25940323 -266.88006592]
[-53.55067444 -271.69778442]
[-66.19438934 -279.91891479]
[-76.39575958 -291.02670288]
[-83.51351929 -304.32287598]
[-87.10023499 -318.97164917]
[-86.93044281 -334.05215454]
[-83.01481628 -348.61645508]
[-75.59950256 -361.74902344]
[-65.15061951 -372.62429810]
[-52.32500839 -380.55868530]
[-37.92888641 -385.05340576]
[-22.86721230 -385.82592773]
[-8.08677387 -382.82769775]
[5.48331833 -376.24716187]
[16.99003792 -366.49798584]
[25.71006012 -354.19302368]
[31.09523964 -340.10577393]
[32.80706024 -325.12176514]
[30.73791122 -310.18292236]
[25.01786423 -296.22827148]
[16.00648499 -284.13507080]
[4.27023888 -274.66345215]
[-9.45312691 -268.40884399]
[-24.30094719 -265.76440430]
[-25.41659737 -250.80596924]
[-26.53224564 -235.84751892]
[-27.64789391 -220.88905334]
[-28.76354218 -205.93060303]
[-29.87919235 -190.97215271]
[-28.54095650 -176.03196716]
[-24.78465652 -161.50990295]
[-21.02835655 -146.98785400]
[-17.27205467 -132.46578979]
[-11.71282959 -118.53398895]
[-4.43959999 -105.41529846]
[2.83362961 -92.29660034]
[10.10685921 -79.17790985]
[17.47754860 -66.11372375]
[24.94528961 -53.10477066]
[32.41303253 -40.09581757]
[39.88077164 -27.08686447]
[47.34851456 -14.07791328]
[54.81625366 -1.06896067]
[67.86280060 6.11692715]
[68.02292633 21.93732262]
[75.49066925 34.94627380]
[78.15821838 35.80785751]
[80.64521027 37.77800369]
[82.52770233 40.79323578]
[83.41253662 44.63792038]
[82.98919678 48.95935059]
[89.66939545 62.38972473]
[96.34958649 75.82009888]
[103.02977753 89.25048065]
[109.80977631 102.63075256]
[116.68918610 115.96018219]
[123.56859589 129.28961182]
[130.44801331 142.61903381]
[137.32742310 155.94847107]
[144.20683289 169.27789307]
[148.68399048 154.96163940]
[161.24772644 146.76699829]
[176.15409851 148.44042969]
[186.58808899 159.21687317]
[187.77941895 174.16949463]
[179.18345642 186.46214294]
[164.73011780 190.47479248]
[151.02597046 184.37162781]
[156.48132324 198.34442139]
[161.93669128 212.31721497]
[167.97285461 219.17304993]
[167.36753845 226.53887939]
[172.61425781 240.59135437]
[177.86097717 254.64382935]
[183.10769653 268.69628906]
[188.35441589 282.74877930]
[193.20257568 287.24398804]
[194.81129456 292.69458008]
[193.54132080 297.29852295]
[198.36730957 311.50097656]
[203.19331360 325.70343018]
[208.01931763 339.90588379]
[212.84530640 354.10833740]
[224.04893494 360.49908447]
[227.77613831 372.42767334]
[222.54940796 383.33676147]
[228.16679382 390.53970337]
[227.12414551 397.85644531]
[231.52514648 412.19628906]
[235.92613220 426.53613281]
[240.32713318 440.87600708]
[255.33746338 439.64953613]
[270.26043701 441.67901611]
[284.39810181 446.86944580]
[297.08920288 454.97808838]
[307.74014282 465.62567139]
[315.85278320 478.31423950]
[321.04766846 492.45025635]
[323.08181763 507.37258911]
[321.86007690 522.38330078]
[317.43963623 536.78033447]
[310.02722168 549.89025879]
[299.96948242 561.09991455]
[287.73690796 569.88500977]
[273.90161133 575.83465576]
[259.11068726 578.67059326]
[244.05592346 578.26013184]
[229.44148254 574.62255859]
[215.95089722 567.92791748]
[204.21514893 558.48937988]
[194.78314209 546.74835205]
[188.09602356 533.25402832]
[184.46656799 518.63757324]
[184.06451416 503.58258057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[7 184]
[8 182]
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 172]
[16 171]
[17 170]
[18 169]
[19 168]
[20 166]
[21 165]
[22 164]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[30 150]
[31 149]
[32 148]
[33 147]
[34 142]
[35 141]
[37 139]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
[44 133]
[45 132]
[46 131]
[47 130]
[65 129]
[66 128]
[67 127]
[68 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
