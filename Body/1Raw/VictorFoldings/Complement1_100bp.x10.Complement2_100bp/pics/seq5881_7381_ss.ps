%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[49.15419388 946.10156250]
[34.15980148 945.63415527]
[19.19248199 944.61938477]
[4.27220964 943.05871582]
[-10.58110905 940.95410156]
[-25.34765625 938.30847168]
[-40.00772476 935.12530518]
[-54.54175949 931.40881348]
[-68.93036652 927.16400146]
[-83.15434265 922.39654541]
[-97.19470978 917.11273193]
[-111.03273010 911.31970215]
[-124.64995575 905.02514648]
[-138.02819824 898.23742676]
[-151.14961243 890.96563721]
[-163.99670410 883.21948242]
[-176.55230713 875.00933838]
[-188.79968262 866.34606934]
[-200.72248840 857.24127197]
[-212.30482483 847.70715332]
[-223.53121948 837.75634766]
[-234.38670349 827.40216064]
[-244.85678101 816.65844727]
[-254.92750549 805.53948975]
[-264.58541870 794.06018066]
[-273.81762695 782.23577881]
[-282.61184692 770.08209229]
[-290.95629883 757.61529541]
[-298.83987427 744.85211182]
[-306.25207520 731.80950928]
[-313.18298340 718.50488281]
[-319.62332153 704.95599365]
[-325.56457520 691.18090820]
[-330.99874878 677.19805908]
[-335.91860962 663.02612305]
[-340.31759644 648.68389893]
[-344.18984985 634.19055176]
[-347.53021240 619.56549072]
[-350.33419800 604.82818604]
[-352.59805298 589.99835205]
[-354.31881714 575.09564209]
[-355.49414062 560.14007568]
[-356.12246704 545.15161133]
[-356.20297241 530.15014648]
[-355.73553467 515.15576172]
[-354.72076416 500.18841553]
[-353.16006470 485.26815796]
[-351.05545044 470.41482544]
[-348.40982056 455.64828491]
[-345.22659302 440.98822021]
[-341.51010132 426.45419312]
[-337.26528931 412.06558228]
[-332.49780273 397.84161377]
[-327.21398926 383.80126953]
[-321.42092896 369.96322632]
[-315.12634277 356.34603882]
[-308.33862305 342.96777344]
[-301.06683350 329.84637451]
[-293.32067871 316.99929810]
[-285.11050415 304.44369507]
[-276.44723511 292.19631958]
[-267.34243774 280.27352905]
[-257.80828857 268.69122314]
[-247.85746765 257.46481323]
[-237.50329590 246.60935974]
[-226.75955200 236.13928223]
[-215.64059448 226.06857300]
[-204.16125488 216.41067505]
[-192.33683777 207.17846680]
[-180.18313599 198.38427734]
[-167.71636963 190.03982544]
[-154.95315552 182.15625000]
[-141.91052246 174.74407959]
[-128.60589600 167.81318665]
[-115.05701447 161.37284851]
[-101.28195953 155.43162537]
[-87.29910278 149.99746704]
[-73.12710571 145.07760620]
[-58.78488922 140.67863464]
[-44.29157639 136.80638123]
[-29.66651344 133.46606445]
[-14.92920971 130.66209412]
[-0.09933153 128.39823914]
[14.80333328 126.67750549]
[29.75889969 125.50219727]
[44.74741364 124.87388611]
[59.74887466 124.79340363]
[74.74327087 125.26085663]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[84.19831085 37.58231354]
[71.25906372 29.87582207]
[60.27931213 19.56761932]
[51.77259064 7.13983917]
[46.13677597 -6.82625055]
[43.63546371 -21.67742920]
[44.38565063 -36.71908188]
[48.35224533 -51.24768066]
[55.34972382 -64.58370209]
[65.05079651 -76.10338593]
[77.00173950 -85.26794434]
[90.64356995 -91.64873505]
[105.33824921 -94.94731140]
[120.39846802 -95.00939178]
[135.11984253 -91.83207703]
[148.81381226 -85.56398010]
[160.83990479 -76.49826813]
[170.63562012 -65.05895233]
[177.74281311 -51.78107834]
[181.82905579 -37.28567505]
[182.70323181 -22.25071907]
[180.32444763 -7.37942314]
[174.80397034 6.63265705]
[166.39999390 19.13014984]
[155.50559998 29.52852631]
[142.63034058 37.34143448]
[128.37638855 42.20344925]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[119.48251343 129.94068909]
[134.24906921 132.58630371]
[148.90914917 135.76945496]
[163.44317627 139.48590088]
[177.83180237 143.73068237]
[192.05578613 148.49813843]
[206.09616089 153.78189087]
[219.93420410 159.57490540]
[233.55142212 165.86946106]
[246.92968750 172.65713501]
[260.05111694 179.92887878]
[272.89822388 187.67500305]
[285.45385742 195.88514709]
[297.70123291 204.54838562]
[309.62408447 213.65313721]
[321.20642090 223.18725586]
[332.43283081 233.13803101]
[343.28833008 243.49218750]
[353.75845337 254.23588562]
[363.82919312 265.35482788]
[373.48712158 276.83413696]
[382.71936035 288.65850830]
[391.51358032 300.81219482]
[399.85809326 313.27893066]
[407.74169922 326.04211426]
[415.15390015 339.08471680]
[422.08483887 352.38934326]
[428.52520752 365.93820190]
[434.46649170 379.71322632]
[439.90069580 393.69607544]
[444.82058716 407.86804199]
[449.21960449 422.21026611]
[453.09188843 436.70355225]
[456.43228149 451.32861328]
[459.23626709 466.06591797]
[461.50018311 480.89578247]
[463.22094727 495.79843140]
[464.39630127 510.75399780]
[465.02465820 525.74249268]
[465.10519409 540.74395752]
[464.63778687 555.73834229]
[463.62307739 570.70568848]
[462.06237793 585.62597656]
[459.95782471 600.47930908]
[457.31219482 615.24584961]
[454.12902832 629.90588379]
[450.41256714 644.43994141]
[446.16778564 658.82855225]
[441.40029907 673.05255127]
[436.11654663 687.09289551]
[430.32351685 700.93090820]
[424.02896118 714.54815674]
[417.24127197 727.92639160]
[409.96951294 741.04785156]
[402.22335815 753.89495850]
[394.01321411 766.45056152]
[385.34994507 778.69793701]
[376.24517822 790.62072754]
[366.71105957 802.20306396]
[356.76028442 813.42950439]
[346.40609741 824.28497314]
[335.66238403 834.75506592]
[324.54345703 844.82580566]
[313.06414795 854.48376465]
[301.23974609 863.71594238]
[289.08605957 872.51019287]
[276.61929321 880.85467529]
[263.85610962 888.73828125]
[250.81349182 896.15045166]
[237.50888062 903.08135986]
[223.96000671 909.52172852]
[210.18496704 915.46301270]
[196.20211792 920.89721680]
[182.03013611 925.81707764]
[167.68792725 930.21606445]
[153.19462585 934.08837891]
[138.56956482 937.42871094]
[123.83226776 940.23272705]
[109.00239563 942.49658203]
[94.09973145 944.21734619]
[79.14417267 945.39270020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 129]
[90 128]
[92 126]
[93 125]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
