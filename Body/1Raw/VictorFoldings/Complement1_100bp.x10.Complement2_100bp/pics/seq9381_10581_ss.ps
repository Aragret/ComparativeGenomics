%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[115.25476837 347.78387451]
[109.46569061 361.65960693]
[101.47156525 374.39318848]
[91.49047852 385.63720703]
[79.79472351 395.08489990]
[66.70336151 402.47857666]
[52.57354736 407.61648560]
[37.79074097 410.35845947]
[22.75823402 410.62973022]
[7.88612318 408.42291260]
[-6.41986990 403.79812622]
[-19.76946831 396.88162231]
[-31.79848289 387.86206055]
[-42.17875290 376.98547363]
[-50.62710190 364.54864502]
[-56.91304779 350.89077759]
[-60.86510468 336.38455200]
[-62.37546158 321.42562866]
[-61.40291595 306.42218018]
[-57.97399139 291.78344727]
[-52.18223953 277.90881348]
[-44.18566132 265.17678833]
[-34.20240784 253.93469238]
[-22.50483131 244.48924255]
[-9.41204929 237.09811401]
[4.71875763 231.96292114]
[19.50209045 229.22377014]
[34.53464890 228.95539856]
[49.40633774 231.16511536]
[54.02034378 216.89237976]
[58.63435364 202.61964417]
[63.24836349 188.34690857]
[59.80112076 173.85670471]
[71.40821838 163.10563660]
[76.02223206 148.83290100]
[72.57498932 134.34269714]
[84.18209076 123.59162140]
[83.24848175 116.26016998]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[103.28471375 27.87745476]
[108.88151550 11.66046524]
[124.16842651 4.64982367]
[128.78244019 -9.62290955]
[123.61528778 -21.44083595]
[127.75214386 -33.23363876]
[138.46061707 -38.85991669]
[143.28662109 -53.06237030]
[148.11262512 -67.26482391]
[143.12199402 -79.15837097]
[147.43395996 -90.88827515]
[158.22502136 -96.35449982]
[163.26194763 -110.48352814]
[168.29885864 -124.61255646]
[173.33576965 -138.74159241]
[159.49409485 -144.53096008]
[145.98310852 -151.05494690]
[132.84179688 -158.29476929]
[120.10803986 -166.22953796]
[107.81855774 -174.83636475]
[96.00877380 -184.09043884]
[84.71273804 -193.96510315]
[73.96303558 -204.43185425]
[63.79064941 -215.46052551]
[54.22490692 -227.01931763]
[45.29339600 -239.07490540]
[37.02186584 -251.59251404]
[29.43416595 -264.53607178]
[22.55217361 -277.86825562]
[16.39572906 -291.55062866]
[10.98258495 -305.54373169]
[6.32834959 -319.80722046]
[2.44644117 -334.29998779]
[-0.65194726 -348.98019409]
[-2.95788240 -363.80557251]
[-4.46471548 -378.73336792]
[-5.16810179 -393.72048950]
[-5.06601334 -408.72378540]
[-4.15874434 -423.69995117]
[-2.44891095 -438.60586548]
[0.05855684 -453.39846802]
[3.35642958 -468.03518677]
[7.43519831 -482.47375488]
[12.28310299 -496.67257690]
[17.88616562 -510.59072876]
[24.22823334 -524.18804932]
[31.29101562 -537.42535400]
[39.05415344 -550.26446533]
[47.49525833 -562.66839600]
[56.58999634 -574.60131836]
[66.31214142 -586.02886963]
[76.63366699 -596.91809082]
[87.52481079 -607.23754883]
[98.95417786 -616.95758057]
[110.88879395 -626.05010986]
[123.29426575 -634.48889160]
[136.13482666 -642.24963379]
[149.37344360 -649.30999756]
[162.97193909 -655.64947510]
[176.89112854 -661.25000000]
[191.09086609 -666.09521484]
[205.53021240 -670.17132568]
[220.16752625 -673.46643066]
[234.96061707 -675.97119141]
[249.86682129 -677.67822266]
[264.84317017 -678.58270264]
[279.84646606 -678.68200684]
[294.83349609 -677.97583008]
[309.76098633 -676.46618652]
[324.58593750 -674.15753174]
[339.26556396 -671.05639648]
[353.75759888 -667.17181396]
[368.02023315 -662.51489258]
[382.01232910 -657.09912109]
[395.69354248 -650.94018555]
[409.02444458 -644.05566406]
[421.96658325 -636.46557617]
[434.48266602 -628.19171143]
[446.53659058 -619.25793457]
[458.09359741 -609.69006348]
[469.12039185 -599.51562500]
[479.58514404 -588.76397705]
[489.45767212 -577.46612549]
[498.70956421 -565.65460205]
[507.31411743 -553.36352539]
[515.24652100 -540.62829590]
[522.48388672 -527.48559570]
[529.00537109 -513.97338867]
[534.79211426 -500.13064575]
[539.82757568 -485.99722290]
[544.09704590 -471.61389160]
[547.58837891 -457.02212524]
[550.29144287 -442.26397705]
[552.19842529 -427.38204956]
[553.30383301 -412.41918945]
[553.60449219 -397.41854858]
[553.09948730 -382.42343140]
[551.79040527 -367.47702026]
[549.68090820 -352.62240601]
[546.77709961 -337.90246582]
[543.08734131 -323.35958862]
[538.62231445 -309.03576660]
[533.39483643 -294.97222900]
[527.42004395 -281.20956421]
[520.71508789 -267.78747559]
[513.29937744 -254.74461365]
[505.19424438 -242.11860657]
[496.42309570 -229.94586182]
[487.01116943 -218.26147461]
[476.98565674 -207.09912109]
[466.37542725 -196.49101257]
[455.21109009 -186.46771240]
[443.52481079 -177.05812073]
[431.35031128 -168.28938293]
[418.72271729 -160.18678284]
[405.67837524 -152.77366638]
[392.25491333 -146.07141113]
[378.49108887 -140.09933472]
[364.42651367 -134.87467957]
[350.10177612 -130.41249084]
[335.55819702 -126.72564697]
[320.83764648 -123.82476807]
[305.98263550 -121.71822357]
[291.03598022 -120.41207886]
[276.04074097 -119.91011047]
[261.04016113 -120.21375275]
[246.07752991 -121.32214355]
[231.19595337 -123.23208618]
[216.43835449 -125.93806458]
[201.84729004 -129.43228149]
[187.46479797 -133.70466614]
[182.42788696 -119.57563782]
[177.39097595 -105.44660950]
[172.35404968 -91.31758118]
[176.44126892 -74.25119019]
[162.31507874 -62.43882751]
[157.48907471 -48.23637390]
[152.66308594 -34.03391647]
[157.00393677 -17.03027344]
[143.05517578 -5.00890064]
[138.44116211 9.26383305]
[145.85542297 19.80225372]
[145.84602356 32.88208771]
[138.19235229 43.72790146]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.45482635 128.20562744]
[101.57204437 143.71670532]
[90.29496765 153.44691467]
[85.68095398 167.71963501]
[88.79817200 183.23071289]
[77.52109528 192.96092224]
[72.90708923 207.23365784]
[68.29307556 221.50637817]
[63.67906952 235.77911377]
[77.02999878 242.69305420]
[89.06075287 251.71031189]
[99.44311523 262.58486938]
[107.89385986 275.02011108]
[114.18243408 288.67672729]
[118.13729095 303.18222046]
[119.65052795 318.14083862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 203]
[30 202]
[31 201]
[32 200]
[34 198]
[35 197]
[37 195]
[39 194]
[41 192]
[42 191]
[43 190]
[44 189]
[47 185]
[48 184]
[51 182]
[52 181]
[53 180]
[56 178]
[57 177]
[58 176]
[59 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
