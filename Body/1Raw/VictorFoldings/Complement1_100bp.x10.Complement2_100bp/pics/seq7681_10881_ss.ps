%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[-15.50282955 776.41894531]
[-29.79120445 780.99682617]
[-44.31007004 784.78070068]
[-59.01533508 787.75897217]
[-73.86233521 789.92266846]
[-88.80597687 791.26513672]
[-103.80088806 791.78240967]
[-118.80152893 791.47277832]
[-133.76232910 790.33734131]
[-148.63786316 788.37945557]
[-163.38294983 785.60504150]
[-177.95281982 782.02264404]
[-192.30320740 777.64300537]
[-206.39054871 772.47949219]
[-220.17204285 766.54779053]
[-233.60585022 759.86584473]
[-246.65115356 752.45404053]
[-259.26837158 744.33489990]
[-271.41912842 735.53295898]
[-283.06658936 726.07507324]
[-294.17532349 715.98992920]
[-304.71163940 705.30810547]
[-314.64349365 694.06207275]
[-323.94076538 682.28601074]
[-332.57519531 670.01568604]
[-340.52056885 657.28833008]
[-347.75277710 644.14257812]
[-354.24978638 630.61840820]
[-359.99194336 616.75683594]
[-364.96176147 602.60003662]
[-369.14416504 588.19091797]
[-372.52645874 573.57330322]
[-375.09835815 558.79150391]
[-376.85205078 543.89056396]
[-377.78222656 528.91558838]
[-377.88604736 513.91210938]
[-377.16320801 498.92568970]
[-375.61590576 484.00186157]
[-373.24880981 469.18594360]
[-370.06912231 454.52288818]
[-366.08651733 440.05728149]
[-361.31307983 425.83303833]
[-355.76330566 411.89337158]
[-349.45407104 398.28054810]
[-342.40451050 385.03601074]
[-334.63601685 372.19989014]
[-326.17221069 359.81121826]
[-317.03881836 347.90762329]
[-307.26351929 336.52523804]
[-296.87603760 325.69863892]
[-285.90792847 315.46069336]
[-274.39248657 305.84252930]
[-262.36468506 296.87332153]
[-249.86105347 288.58029175]
[-236.91955566 280.98867798]
[-223.57951355 274.12152100]
[-209.88142395 267.99966431]
[-195.86688232 262.64169312]
[-181.57847595 258.06387329]
[-167.05958557 254.28015137]
[-152.35430908 251.30197144]
[-137.50729370 249.13839722]
[-122.56363678 247.79600525]
[-107.56871796 247.27886963]
[-92.56808472 247.58856201]
[-77.60729218 248.72412109]
[-62.73177338 250.68212891]
[-47.98670197 253.45660400]
[-33.41686249 257.03915405]
[-19.06650162 261.41888428]
[-4.97920227 266.58248901]
[8.80225277 272.51431274]
[15.48244762 259.08395386]
[22.16264153 245.65356445]
[20.90302849 230.81231689]
[33.97653961 221.90199280]
[32.71692657 207.06074524]
[45.79043961 198.15042114]
[52.47063446 184.72004700]
[58.95013046 171.19169617]
[65.22749329 157.56838989]
[71.50485229 143.94506836]
[77.78221130 130.32174683]
[84.05957031 116.69843292]
[90.33693695 103.07511902]
[90.58193207 95.01828766]
[96.81050873 89.29677582]
[103.29000854 75.76843262]
[109.76950073 62.24008560]
[115.63846588 48.43590927]
[120.88517761 34.38343811]
[126.13189697 20.33096695]
[123.71039581 4.69617033]
[135.41070557 -4.52077532]
[135.48066711 -13.65493774]
[140.84155273 -18.74243736]
[146.29692078 -32.71523666]
[133.24272156 -40.15875626]
[121.41149139 -49.42373276]
[111.05539703 -60.31267929]
[102.39518738 -72.59349823]
[95.61544800 -86.00442505]
[90.86068726 -100.25960541]
[88.23226929 -115.05519104]
[87.78620148 -130.07580566]
[89.53199768 -145.00128174]
[93.43244934 -159.51350403]
[99.40441132 -173.30311584]
[107.32059479 -186.07620239]
[117.01227570 -197.56051636]
[128.27285767 -207.51124573]
[140.86233521 -215.71630859]
[154.51234436 -222.00080872]
[168.93196106 -226.23078918]
[183.81379700 -228.31608582]
[198.84068298 -228.21224976]
[213.69229126 -225.92149353]
[228.05207825 -221.49266052]
[241.61393738 -215.02012634]
[254.08882141 -206.64187622]
[265.21081543 -196.53648376]
[274.74285889 -184.91934204]
[282.48178101 -172.03808594]
[288.26263428 -158.16725159]
[291.96215820 -143.60252380]
[293.50152588 -128.65434265]
[292.84793091 -113.64132690]
[290.01531982 -98.88348389]
[285.06402588 -84.69536591]
[278.09960938 -71.37940979]
[269.27050781 -59.21944046]
[258.76492310 -48.47464371]
[246.80677795 -39.37404633]
[233.65098572 -32.11163330]
[219.57792664 -26.84219933]
[204.88758850 -23.67806435]
[189.89308167 -22.68667221]
[174.91403198 -23.88915443]
[160.26971436 -27.25987816]
[154.81436157 -13.28707981]
[149.46316528 0.72594267]
[152.25996399 15.35561275]
[140.18437195 25.57768631]
[134.93765259 39.63015747]
[129.69093323 53.68262863]
[143.75151062 48.45766068]
[157.44529724 54.57975006]
[162.92788696 68.54188538]
[157.05859375 82.34591675]
[143.19963074 88.08428192]
[129.29000854 82.46976471]
[123.29784393 68.71958160]
[116.81835175 82.24792480]
[110.33885956 95.77627563]
[103.96025085 109.35247803]
[97.68289185 122.97579956]
[91.40553284 136.59910583]
[85.12816620 150.22242737]
[78.85080719 163.84574890]
[72.57344818 177.46905518]
[72.79842377 184.07670593]
[70.06323242 189.05824280]
[65.90100861 191.40023804]
[59.22081757 204.83061218]
[60.00261688 220.63249207]
[47.40691757 228.58218384]
[48.18871689 244.38406372]
[35.59301758 252.33375549]
[28.91282272 265.76412964]
[22.23262787 279.19451904]
[35.27799606 286.60620117]
[47.89525604 294.72531128]
[60.04609299 303.52713013]
[71.69361115 312.98492432]
[82.80242920 323.07003784]
[93.33880615 333.75177002]
[103.27075195 344.99771118]
[112.56810760 356.77371216]
[121.20262146 369.04400635]
[129.14808655 381.77130127]
[136.38037109 394.91699219]
[142.87748718 408.44113159]
[148.61973572 422.30264282]
[153.58966064 436.45944214]
[157.77217102 450.86849976]
[161.15455627 465.48611450]
[163.72656250 480.26785278]
[165.48036194 495.16882324]
[166.41064453 510.14379883]
[166.51457214 525.14727783]
[165.79182434 540.13366699]
[164.24461365 555.05749512]
[161.87762451 569.87347412]
[158.69805908 584.53649902]
[154.71556091 599.00213623]
[149.94223022 613.22644043]
[144.39254761 627.16613770]
[138.08340454 640.77899170]
[131.03392029 654.02362061]
[123.26553345 666.85974121]
[114.80181885 679.24847412]
[105.66849518 691.15216064]
[95.89328766 702.53460693]
[85.50588989 713.36126709]
[74.53784943 723.59930420]
[63.02246857 733.21752930]
[50.99472809 742.18682861]
[38.49114990 750.47998047]
[25.54970932 758.07165527]
[12.20970821 764.93890381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 170]
[73 169]
[74 168]
[76 166]
[78 164]
[79 163]
[80 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[87 154]
[88 153]
[89 152]
[90 145]
[91 144]
[92 143]
[94 141]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
