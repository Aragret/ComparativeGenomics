%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[158.28738403 724.40899658]
[146.81408691 714.73498535]
[136.11500549 704.21105957]
[126.25291443 692.89904785]
[117.28569031 680.86529541]
[109.26596069 668.18035889]
[102.24079132 654.91876221]
[96.25141144 641.15832520]
[91.33295441 626.97979736]
[87.51429749 612.46630859]
[84.81784821 597.70312500]
[83.25942993 582.77685547]
[82.84819031 567.77502441]
[83.58653259 552.78576660]
[85.47013092 537.89703369]
[88.48793793 523.19616699]
[92.62223816 508.76943970]
[97.84876251 494.70153809]
[104.13684845 481.07498169]
[111.44959259 467.96978760]
[119.74407959 455.46282959]
[128.97163391 443.62750244]
[139.07809448 432.53326416]
[150.00418091 422.24520874]
[161.68572998 412.82376099]
[174.05422974 404.32415771]
[187.03707886 396.79632568]
[200.55807495 390.28439331]
[195.10272217 376.31158447]
[189.64736938 362.33880615]
[184.19200134 348.36599731]
[170.49011230 342.63940430]
[164.75856018 328.54672241]
[170.85804749 314.21374512]
[165.40269470 300.24093628]
[159.94732666 286.26815796]
[154.49197388 272.29534912]
[141.24580383 272.87207031]
[128.44450378 269.33303833]
[117.33757019 262.00912476]
[109.01361847 251.60133362]
[104.29365540 239.11373901]
[103.65014648 225.75662231]
[107.15973663 212.82916260]
[114.49442291 201.59307861]
[124.95219421 193.14950562]
[119.91528320 179.02047729]
[108.35350037 169.63034058]
[111.00751495 154.03334045]
[105.97059631 139.90431213]
[100.93367767 125.77527618]
[95.89676666 111.64624786]
[93.85920715 126.50721741]
[87.58631897 140.13258362]
[77.62076569 151.34364319]
[64.82466125 159.17050171]
[50.30500031 162.93606567]
[35.31788254 162.31457520]
[21.15983772 157.35980225]
[9.05568123 148.50038147]
[0.05254396 136.50273132]
[-5.07071352 122.40478516]
[-5.87087870 107.42614746]
[-2.27872801 92.86260986]
[5.39498091 79.97408295]
[16.48639488 69.87554169]
[30.03599739 63.44061661]
[44.87161255 61.22598648]
[59.70980835 63.42324829]
[73.26692963 69.84230804]
[84.37016296 79.92785645]
[92.05761719 92.80413818]
[91.16479492 77.83073425]
[90.27198029 62.85733032]
[89.37916565 47.88392639]
[87.92974854 32.95411682]
[85.92573547 18.08858681]
[83.92172241 3.22305942]
[71.63743591 -6.35473728]
[69.81684875 -21.45904541]
[79.02352142 -33.11120605]
[77.01950073 -47.97673416]
[75.01548767 -62.84226227]
[71.28336334 -68.29962158]
[70.92182159 -73.97115326]
[73.17994690 -78.17946625]
[71.61942291 -93.09807587]
[70.05889893 -108.01667786]
[68.49838257 -122.93527985]
[57.16897964 -113.10447693]
[42.39216614 -115.68241882]
[35.06085587 -128.76873779]
[40.57941818 -142.71670532]
[54.87977219 -147.24436951]
[67.41937256 -139.01554871]
[66.97277069 -154.00889587]
[66.52616119 -169.00224304]
[52.30297089 -174.36595154]
[41.21847534 -184.76799011]
[34.96298218 -198.62213135]
[34.49040604 -213.81571960]
[39.87281418 -228.03182983]
[50.28942490 -239.10264587]
[64.15178680 -245.33990479]
[79.34597778 -245.79249573]
[93.55500793 -240.39138794]
[104.61209869 -229.96022034]
[110.83112335 -216.08967590]
[111.26372528 -200.89489746]
[105.84393311 -186.69297791]
[95.39823151 -175.64962769]
[81.51950836 -169.44885254]
[81.96611786 -154.45550537]
[82.41271973 -139.46215820]
[83.41698456 -124.49580383]
[84.97750854 -109.57720184]
[86.53803253 -94.65859985]
[88.09854889 -79.73999023]
[89.88101959 -64.84627533]
[91.88503265 -49.98074722]
[93.88904572 -35.11521912]
[105.85261536 -26.31700706]
[108.09674072 -11.26979542]
[98.78724670 1.21904576]
[100.79125977 16.08457375]
[102.79527283 30.95010185]
[113.82695007 20.78633690]
[128.67396545 22.92317581]
[136.39166260 35.78541565]
[131.29083252 49.89149857]
[117.13161469 54.84293747]
[104.35256958 46.99110794]
[105.24538422 61.96451569]
[106.13820648 76.93791962]
[107.03102112 91.91132355]
[110.02579498 106.60932922]
[115.06270599 120.73835754]
[120.09962463 134.86738586]
[125.13654327 148.99641418]
[137.05859375 159.39714050]
[134.04431152 173.98355103]
[139.08122253 188.11257935]
[155.94256592 188.70164490]
[171.25088501 195.70648193]
[182.66952515 208.02682495]
[188.46748352 223.75340271]
[187.78179932 240.46388245]
[180.74591064 255.59590149]
[168.46476746 266.83999634]
[173.92013550 280.81277466]
[179.37548828 294.78558350]
[184.83084106 308.75839233]
[199.02835083 315.16687012]
[204.36180115 329.41497803]
[198.16481018 342.91064453]
[203.62016296 356.88342285]
[209.07551575 370.85623169]
[214.53086853 384.82904053]
[228.88729858 380.45684814]
[243.53628540 377.19650269]
[258.39187622 375.06707764]
[273.36685181 374.08108521]
[288.37341309 374.24435425]
[303.32339478 375.55584717]
[318.12915039 378.00793457]
[332.70373535 381.58621216]
[346.96166992 386.26965332]
[360.81921387 392.03079224]
[374.19509888 398.83581543]
[387.01083374 406.64480591]
[399.19116211 415.41189575]
[410.66464233 425.08569336]
[421.36392212 435.60937500]
[431.22622681 446.92120361]
[440.19366455 458.95480347]
[448.21365356 471.63955688]
[455.23907471 484.90103149]
[461.22869873 498.66134644]
[466.14743042 512.83984375]
[469.96636963 527.35321045]
[472.66308594 542.11633301]
[474.22180176 557.04260254]
[474.63333130 572.04437256]
[473.89526367 587.03363037]
[472.01193237 601.92242432]
[468.99441528 616.62335205]
[464.86038208 631.05017090]
[459.63412476 645.11816406]
[453.34631348 658.74487305]
[446.03381348 671.85021973]
[437.73956299 684.35729980]
[428.51223755 696.19281006]
[418.40597534 707.28723145]
[407.48010254 717.57550049]
[395.79870605 726.99719238]
[383.43038940 735.49700928]
[370.44766235 743.02508545]
[356.92678833 749.53729248]
[342.94708252 754.99536133]
[328.59057617 759.36724854]
[313.94152832 762.62731934]
[299.08590698 764.75646973]
[284.11090088 765.74218750]
[269.10437012 765.57861328]
[254.15437317 764.26684570]
[239.34867859 761.81445312]
[224.77415466 758.23596191]
[210.51632690 753.55224609]
[196.65887451 747.79083252]
[183.28311157 740.98553467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 158]
[29 157]
[30 156]
[31 155]
[34 152]
[35 151]
[36 150]
[37 149]
[46 142]
[47 141]
[49 139]
[50 138]
[51 137]
[52 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 126]
[77 125]
[78 124]
[81 121]
[82 120]
[83 119]
[86 118]
[87 117]
[88 116]
[89 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
