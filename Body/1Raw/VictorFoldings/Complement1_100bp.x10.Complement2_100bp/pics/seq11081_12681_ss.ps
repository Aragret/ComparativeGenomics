%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[19.09682465 246.38792419]
[22.08773613 261.09774780]
[23.70862007 276.02081299]
[23.94565201 291.02975464]
[22.79680634 305.99652100]
[20.27188683 320.79348755]
[16.39243317 335.29431152]
[11.19154644 349.37533569]
[4.71359921 362.91644287]
[-2.98614073 375.80203247]
[-11.84197998 387.92221069]
[-21.77836037 399.17355347]
[-32.71051025 409.46008301]
[-44.54515457 418.69403076]
[-57.18132401 426.79663086]
[-70.51120758 433.69873047]
[-84.42108154 439.34143066]
[-98.79225922 443.67660522]
[-113.50214386 446.66726685]
[-128.42521667 448.28790283]
[-143.43417358 448.52468872]
[-158.40093994 447.37557983]
[-173.19783020 444.85043335]
[-187.69860840 440.97073364]
[-201.77955627 435.76959229]
[-215.32052612 429.29144287]
[-228.20600891 421.59149170]
[-240.32603455 412.73544312]
[-251.57722473 402.79885864]
[-261.86358643 391.86654663]
[-271.09732056 380.03173828]
[-279.19970703 367.39544678]
[-286.10156250 354.06542969]
[-291.74404907 340.15548706]
[-296.07897949 325.78421021]
[-299.06939697 311.07431030]
[-300.68978882 296.15118408]
[-300.92633057 281.14224243]
[-299.77697754 266.17547607]
[-297.25155640 251.37863159]
[-293.37161255 236.87791443]
[-288.17025757 222.79705811]
[-281.69186401 209.25619507]
[-273.99169922 196.37084961]
[-265.13546753 184.25096130]
[-255.19869995 172.99993896]
[-244.26620483 162.71377563]
[-232.43125916 153.48022461]
[-219.79481506 145.37805176]
[-206.46470642 138.47640991]
[-192.55464172 132.83416748]
[-178.18331909 128.49948120]
[-163.47334290 125.50930023]
[-148.55020142 123.88916016]
[-133.54124451 123.65287781]
[-118.57451630 124.80246735]
[-103.77770233 127.32813263]
[-89.27705383 131.20831299]
[-75.19628143 136.40989685]
[-61.65552902 142.88851929]
[-48.77031326 150.58891296]
[-36.65057755 159.44535828]
[-25.39971924 169.38229370]
[-15.11373234 180.31495667]
[-3.28746223 171.08786011]
[8.53880787 161.86076355]
[10.10322285 147.09295654]
[21.96529770 137.56689453]
[37.44452667 139.30792236]
[49.27079773 130.08082581]
[50.83521271 115.31301880]
[62.69728851 105.78695679]
[78.17652130 107.52799225]
[90.00279236 98.30089569]
[93.91558838 91.25372314]
[102.07452393 89.02602386]
[114.03685760 79.97602081]
[125.99919128 70.92602539]
[132.33651733 56.42950821]
[147.15454102 54.92113113]
[159.11688232 45.87113190]
[171.07920837 36.82113266]
[183.04154968 27.77113152]
[195.00389099 18.72113228]
[206.96623230 9.67113209]
[218.92855835 0.62113219]
[229.25523376 -10.25820255]
[237.66984558 -22.67569733]
[246.08447266 -35.09319305]
[254.49908447 -47.51068878]
[262.91369629 -59.92818451]
[271.32833862 -72.34568024]
[259.73153687 -81.87664032]
[249.06362915 -92.43696594]
[239.41563416 -103.93656921]
[230.86985779 -116.27732086]
[223.49920654 -129.35394287]
[217.36657715 -143.05487061]
[212.52427673 -157.26321411]
[209.01362610 -171.85772705]
[206.86457825 -186.71391296]
[206.09545898 -201.70501709]
[206.71286011 -216.70314026]
[208.71148682 -231.58030701]
[212.07427979 -246.20959473]
[216.77258301 -260.46618652]
[222.76628113 -274.22848511]
[230.00424194 -287.37899780]
[238.42472839 -299.80560303]
[247.95587158 -311.40222168]
[258.51638794 -322.06994629]
[270.01614380 -331.71774292]
[282.35702515 -340.26333618]
[295.43377686 -347.63375854]
[309.13482666 -353.76617432]
[323.34323120 -358.60824585]
[337.93780518 -362.11865234]
[352.79403687 -364.26742554]
[367.78515625 -365.03628540]
[382.78326416 -364.41867065]
[397.66040039 -362.41979980]
[412.28961182 -359.05673218]
[426.54614258 -354.35821533]
[440.30831909 -348.36428833]
[453.45874023 -341.12609863]
[465.88519287 -332.70541382]
[477.48165894 -323.17407227]
[488.14920044 -312.61337280]
[497.79681396 -301.11346436]
[506.34219360 -288.77239990]
[513.71240234 -275.69555664]
[519.84460449 -261.99441528]
[524.68640137 -247.78591919]
[528.19659424 -233.19128418]
[530.34509277 -218.33502197]
[531.11370850 -203.34390259]
[530.49584961 -188.34579468]
[528.49670410 -173.46870422]
[525.13342285 -158.83952332]
[520.43469238 -144.58306885]
[514.44049072 -130.82099915]
[507.20208740 -117.67070770]
[498.78121948 -105.24440002]
[489.24966431 -93.64808655]
[478.68881226 -82.98071289]
[467.18872070 -73.33329010]
[454.84753418 -64.78812408]
[441.77053833 -57.41812897]
[428.06930542 -51.28617859]
[413.86074829 -46.44458771]
[399.26605225 -42.93466568]
[384.40975952 -40.78636169]
[369.41860962 -40.01800156]
[354.42053223 -40.63614273]
[339.54345703 -42.63550949]
[324.91433716 -45.99904633]
[310.65795898 -50.69805145]
[296.89599609 -56.69244003]
[283.74581909 -63.93106079]
[275.33120728 -51.51356506]
[266.91659546 -39.09606934]
[258.50195312 -26.67857552]
[250.08734131 -14.26107883]
[241.67272949 -1.84358358]
[254.75859070 -9.17571831]
[269.28308105 -12.92263222]
[284.28280640 -12.83580589]
[298.76296997 -8.92099857]
[311.76306152 -1.43786418]
[322.42089844 9.11726665]
[330.02954102 22.04431152]
[334.08435059 36.48586273]
[334.31640625 51.48406982]
[330.71029663 66.04415131]
[323.50518799 79.20038605]
[313.17898560 90.08017731]
[300.41662598 97.96189880]
[286.06451416 102.32279205]
[271.07464600 102.87361145]
[256.44119263 99.57781982]
[243.13476562 92.65401459]
[232.03793335 82.56143188]
[223.88668823 69.96947479]
[219.22169495 55.71332932]
[218.35235596 40.73854065]
[221.33633423 26.03834152]
[227.97856140 12.58346939]
[216.01622009 21.63346863]
[204.05389404 30.68346977]
[192.09155273 39.73346710]
[180.12921143 48.78347015]
[168.16688538 57.83346939]
[156.20454407 66.88346863]
[150.72285461 80.73266602]
[135.04919434 82.88835907]
[123.08686066 91.93836212]
[111.12451935 100.98835754]
[99.22988892 110.12715912]
[87.40361786 119.35426331]
[85.32773590 134.79214478]
[73.20277405 143.98127747]
[58.49789810 141.90710449]
[46.67162704 151.13420105]
[44.59574509 166.57208252]
[32.47078323 175.76119995]
[17.76590538 173.68702698]
[5.93963575 182.91412354]
[-5.88663387 192.14123535]
[2.21616030 204.77726746]
[9.11847019 218.10702515]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 208]
[65 207]
[66 206]
[69 203]
[70 202]
[73 199]
[74 198]
[76 197]
[77 196]
[78 195]
[80 193]
[81 192]
[82 191]
[83 190]
[84 189]
[85 188]
[86 187]
[87 164]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
