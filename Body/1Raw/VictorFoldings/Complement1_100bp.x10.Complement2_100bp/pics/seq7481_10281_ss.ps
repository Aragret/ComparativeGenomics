%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[143.21104431 674.31170654]
[147.17109680 659.73449707]
[155.07878113 646.86413574]
[166.29306030 636.74407959]
[179.90484619 630.19451904]
[177.45910645 615.39526367]
[175.01338196 600.59600830]
[172.56765747 585.79675293]
[170.12193298 570.99743652]
[160.41300964 559.70208740]
[165.79667664 544.82501221]
[163.35093689 530.02575684]
[160.90521240 515.22644043]
[158.45948792 500.42718506]
[148.75056458 489.13180542]
[154.13423157 474.25473022]
[151.68850708 459.45547485]
[149.24276733 444.65618896]
[135.25399780 439.53958130]
[125.64056396 428.03140259]
[123.06115723 413.15817261]
[128.30715942 398.89718628]
[140.06369019 389.11294556]
[137.61796570 374.31369019]
[135.17224121 359.51440430]
[132.72651672 344.71514893]
[117.93531036 342.52850342]
[104.52601624 335.86810303]
[93.81743622 325.37493896]
[86.86710358 312.06765747]
[84.36684418 297.24365234]
[86.57392120 282.35256958]
[93.28463745 268.85464478]
[103.85305786 258.07730103]
[117.25317383 251.08485413]
[114.80744171 236.28558350]
[112.36171722 221.48631287]
[109.91599274 206.68704224]
[107.47026062 191.88775635]
[105.02453613 177.08848572]
[95.31561279 165.79309082]
[100.69927216 150.91603088]
[98.25354767 136.11676025]
[88.54462433 124.82136536]
[93.92829132 109.94431305]
[87.96343994 123.70732880]
[76.67456055 133.58464050]
[62.24135971 137.66908264]
[47.45066071 135.17202759]
[35.15831757 126.57562256]
[27.73778915 113.53968048]
[26.62186241 98.58124542]
[32.02600479 84.58856201]
[42.90675735 74.26338959]
[57.16322708 69.59936523]
[72.04270172 71.49703217]
[84.67219543 79.58998108]
[92.61357117 92.31680298]
[92.83689880 77.31846619]
[93.06022644 62.32012939]
[93.28355408 47.32178879]
[93.50688171 32.32345200]
[93.73020935 17.32511520]
[93.95353699 2.32677841]
[94.06520844 -12.67280579]
[93.73023224 -27.66906548]
[93.06044769 -42.65410233]
[84.71465302 -56.09502411]
[91.87593079 -69.15509033]
[91.20614624 -84.14012909]
[90.53636169 -99.12516785]
[89.53210449 -114.09151459]
[88.19387054 -129.03169250]
[86.85563660 -143.97187805]
[85.51740265 -158.91206360]
[84.17916870 -173.85224915]
[74.80001831 -182.70631409]
[73.99297333 -195.17758179]
[81.64640045 -204.54516602]
[80.53075409 -219.50361633]
[79.41510773 -234.46206665]
[78.29945374 -249.42051697]
[77.18380737 -264.37896729]
[76.06816101 -279.33743286]
[74.95250702 -294.29589844]
[73.72553253 -309.24560547]
[72.38729858 -324.18579102]
[57.42344666 -325.78869629]
[43.05992126 -330.28039551]
[29.84881973 -337.48825073]
[18.29794312 -347.13519287]
[8.85127544 -358.85043335]
[1.87192023 -372.18365479]
[-2.37185311 -386.62237549]
[-3.71692610 -401.61160278]
[-2.11159730 -416.57519531]
[2.38242841 -430.93798828]
[9.59241295 -444.14791870]
[19.24122429 -455.69723511]
[30.95798492 -465.14202881]
[44.29233932 -472.11920166]
[58.73174286 -476.36065674]
[73.72119141 -477.70330811]
[88.68452454 -476.09555054]
[103.04659271 -471.59918213]
[116.25536346 -464.38708496]
[127.80311584 -454.73638916]
[137.24598694 -443.01809692]
[144.22102356 -429.68261719]
[148.46012878 -415.24252319]
[149.80035400 -400.25286865]
[148.19017029 -385.28979492]
[143.69149780 -370.92843628]
[136.47724915 -357.72085571]
[126.82469177 -346.17465210]
[115.10487366 -336.73367310]
[101.76826477 -329.76080322]
[87.32748413 -325.52404785]
[88.66571808 -310.58386230]
[92.39343262 -304.20214844]
[89.91096497 -295.41152954]
[91.02661133 -280.45306396]
[92.14225769 -265.49462891]
[93.25791168 -250.53617859]
[94.37355804 -235.57771301]
[95.48920441 -220.61926270]
[96.60485840 -205.66081238]
[107.25257111 -191.71115112]
[99.11934662 -175.19049072]
[100.45758057 -160.25030518]
[101.79582214 -145.31011963]
[103.13405609 -130.36993408]
[104.47229004 -115.42974854]
[106.92899323 -112.90053558]
[108.28271484 -109.05573273]
[107.92844391 -104.42671204]
[105.52140045 -99.79495239]
[106.19118500 -84.80991364]
[106.86096954 -69.82487488]
[115.15885925 -57.45578384]
[108.04548645 -43.32389069]
[108.71527100 -28.33885002]
[111.05659485 -25.70246124]
[112.23728180 -21.80104828]
[111.67667389 -17.19246674]
[109.06520844 -12.67280579]
[112.20870972 -5.98399448]
[108.95187378 2.55010605]
[108.72854614 17.54844284]
[108.50521851 32.54677963]
[108.28189087 47.54511642]
[108.05856323 62.54345703]
[107.83523560 77.54179382]
[107.61190796 92.54013062]
[108.72756195 107.49858093]
[118.61141968 119.85253143]
[113.05281830 133.67103577]
[115.49854279 148.47030640]
[125.38240051 160.82424927]
[119.82380676 174.64276123]
[122.26953125 189.44203186]
[124.71526337 204.24130249]
[127.16098785 219.04057312]
[129.60671997 233.83984375]
[132.05244446 248.63911438]
[146.98977661 250.94851685]
[160.46371460 257.75262451]
[171.16035461 268.37384033]
[178.04103088 281.76306152]
[180.44308472 296.60330200]
[178.14370728 311.43917847]
[171.38049316 324.81973267]
[160.82702637 335.44021606]
[147.52578735 342.26940918]
[149.97151184 357.06866455]
[152.41723633 371.86795044]
[154.86296082 386.66720581]
[169.14231873 392.14877319]
[178.69763184 403.96368408]
[181.04058838 418.87600708]
[175.64085388 432.86526489]
[164.04203796 442.21047974]
[166.48777771 457.00973511]
[168.93350220 471.80902100]
[178.81735229 484.16296387]
[173.25875854 497.98147583]
[175.70448303 512.78076172]
[178.15020752 527.58001709]
[180.59594727 542.37927246]
[190.47979736 554.73321533]
[184.92120361 568.55175781]
[187.36692810 583.35101318]
[189.81265259 598.15026855]
[192.25837708 612.94952393]
[194.70411682 627.74884033]
[209.69935608 629.57073975]
[223.57334900 635.54473877]
[235.20138550 645.18658447]
[243.64085388 657.71466064]
[248.20758057 672.11334229]
[248.53135681 687.21539307]
[244.58596802 701.79656982]
[236.69122314 714.67480469]
[225.48710632 724.80615234]
[211.88191223 731.36932373]
[196.97853088 733.83227539]
[181.98512268 731.99530029]
[168.11714172 726.00732422]
[156.49879456 716.35382080]
[148.07191467 703.81732178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[11 189]
[12 188]
[13 187]
[14 186]
[16 184]
[17 183]
[18 182]
[23 177]
[24 176]
[25 175]
[26 174]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[42 158]
[43 157]
[45 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[65 146]
[66 142]
[67 141]
[69 139]
[70 138]
[71 137]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 119]
[87 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
