%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[88.86729431 923.03149414]
[73.89959717 922.01538086]
[58.98667908 920.38153076]
[44.15401459 918.13287354]
[29.42695045 915.27313232]
[14.83064365 911.80725098]
[0.39003345 907.74114990]
[-13.87020874 903.08172607]
[-27.92572021 897.83703613]
[-41.75248718 892.01593018]
[-55.32688522 885.62841797]
[-68.62572479 878.68542480]
[-81.62628174 871.19879150]
[-94.30634308 863.18127441]
[-106.64425659 854.64660645]
[-118.61893463 845.60937500]
[-130.20991516 836.08502197]
[-141.39739990 826.08978271]
[-152.16227722 815.64074707]
[-162.48616028 804.75579834]
[-172.35139465 793.45355225]
[-181.74113464 781.75323486]
[-190.63934326 769.67486572]
[-199.03080750 757.23913574]
[-206.90119934 744.46722412]
[-214.23706055 731.38098145]
[-221.02587891 718.00274658]
[-227.25604248 704.35546875]
[-232.91690063 690.46234131]
[-237.99879456 676.34710693]
[-242.49302673 662.03393555]
[-246.39193726 647.54730225]
[-249.68885803 632.91192627]
[-252.37814331 618.15277100]
[-254.45521545 603.29510498]
[-255.91651917 588.36431885]
[-256.75958252 573.38586426]
[-256.98291016 558.38537598]
[-256.58615112 543.38848877]
[-255.57000732 528.42077637]
[-253.93617249 513.50787354]
[-251.68746948 498.67520142]
[-248.82771301 483.94812012]
[-245.36181641 469.35183716]
[-241.29568481 454.91122437]
[-236.63626099 440.65100098]
[-231.39151001 426.59548950]
[-225.57040405 412.76873779]
[-219.18289185 399.19433594]
[-212.23985291 385.89550781]
[-204.75318909 372.89495850]
[-196.73565674 360.21490479]
[-188.20097351 347.87701416]
[-179.16372681 335.90234375]
[-169.63934326 324.31137085]
[-159.64408875 313.12390137]
[-149.19506836 302.35903931]
[-138.31010437 292.03518677]
[-127.00780487 282.16998291]
[-115.30747986 272.78024292]
[-103.22912598 263.88204956]
[-90.79336548 255.49061584]
[-78.02145386 247.62023926]
[-64.93520355 240.28439331]
[-51.55698776 233.49560547]
[-37.90964890 227.26545715]
[-24.01650620 221.60461426]
[-9.90129852 216.52275085]
[4.41185951 212.02853394]
[18.89851379 208.12963867]
[33.53391647 204.83274841]
[48.29306030 202.14347839]
[63.15073013 200.06642151]
[78.08154297 198.60514832]
[93.05998230 197.76211548]
[92.83665466 182.76377869]
[92.61332703 167.76544189]
[89.37059021 161.12417603]
[92.50000000 152.54254150]
[92.50000000 137.54254150]
[92.50000000 122.54253387]
[92.50000000 107.54253387]
[91.38435364 92.58408356]
[89.15923309 77.75003815]
[86.93412018 62.91599655]
[84.48838806 48.11672211]
[81.82259369 33.35550690]
[66.77670288 32.41493225]
[52.39332962 27.90029907]
[39.50869370 20.07408524]
[28.87189674 9.39129639]
[21.10134697 -3.52698421]
[16.64881325 -17.92970467]
[15.77315998 -32.97951126]
[18.52529907 -47.80142593]
[24.74522209 -61.53372574]
[34.07131195 -73.37802887]
[45.96136093 -82.64572144]
[59.72409821 -88.79799652]
[74.55937958 -91.47716522]
[89.60469055 -90.52746582]
[103.98532867 -86.00411987]
[116.86521912 -78.17009735]
[127.49553680 -67.48085785]
[135.25825500 -54.55786896]
[139.70205688 -40.15245056]
[140.56858826 -25.10211754]
[137.80746460 -10.28187275]
[131.57920837 3.44665122]
[122.24594116 15.28529739]
[110.35027313 24.54578018]
[96.58380890 30.68971062]
[99.24960327 45.45092773]
[102.59265900 48.86165237]
[103.82861328 54.40867233]
[101.76815796 60.69087601]
[103.99327850 75.52491760]
[106.21839142 90.35896301]
[113.17320251 77.06871796]
[125.78816986 68.95313263]
[140.76576233 68.13360596]
[154.19088745 74.82435608]
[162.55422974 87.27643585]
[163.66966248 102.23490906]
[157.24557495 115.78965759]
[144.96124268 124.39750671]
[130.02774048 125.80838776]
[116.34866333 119.65349579]
[107.50000000 107.54253387]
[107.50000000 122.54253387]
[107.50000000 137.54254150]
[107.50000000 152.54254150]
[107.61166382 167.54211426]
[107.83499146 182.54045105]
[108.05831909 197.53878784]
[123.05522919 197.93547058]
[138.02293396 198.95156860]
[152.93585205 200.58532715]
[167.76852417 202.83396912]
[182.49559021 205.69366455]
[197.09190369 209.15950012]
[211.53253174 213.22557068]
[225.79278564 217.88491821]
[239.84831238 223.12959290]
[253.67509460 228.95063782]
[267.24951172 235.33810425]
[280.54837036 242.28108215]
[293.54895020 249.76768494]
[306.22903442 257.78515625]
[318.56698608 266.31979370]
[330.54168701 275.35699463]
[342.13269043 284.88131714]
[353.32022095 294.87652588]
[364.08511353 305.32550049]
[374.40902710 316.21041870]
[384.27429199 327.51266479]
[393.66406250 339.21295166]
[402.56231689 351.29125977]
[410.95382690 363.72698975]
[418.82424927 376.49887085]
[426.16015625 389.58508301]
[432.94900513 402.96325684]
[439.17919922 416.61059570]
[444.84011841 430.50369263]
[449.92202759 444.61889648]
[454.41632080 458.93200684]
[458.31527710 473.41867065]
[461.61224365 488.05404663]
[464.30157471 502.81317139]
[466.37869263 517.67083740]
[467.84002686 532.60162354]
[468.68313599 547.58007812]
[468.90649414 562.58056641]
[468.50979614 577.57745361]
[467.49368286 592.54516602]
[465.85989380 607.45806885]
[463.61123657 622.29077148]
[460.75152588 637.01782227]
[457.28567505 651.61413574]
[453.21957397 666.05474854]
[448.56021118 680.31500244]
[443.31552124 694.37054443]
[437.49444580 708.19732666]
[431.10696411 721.77172852]
[424.16397095 735.07055664]
[416.67733765 748.07110596]
[408.65985107 760.75122070]
[400.12521362 773.08911133]
[391.08798218 785.06384277]
[381.56362915 796.65478516]
[371.56842041 807.84234619]
[361.11941528 818.60723877]
[350.23449707 828.93109131]
[338.93222046 838.79632568]
[327.23193359 848.18609619]
[315.15359497 857.08435059]
[302.71786499 865.47583008]
[289.94598389 873.34625244]
[276.85974121 880.68212891]
[263.48153687 887.47094727]
[249.83422852 893.70111084]
[235.94110107 899.36199951]
[221.82591248 904.44390869]
[207.51277161 908.93817139]
[193.02612305 912.83709717]
[178.39073181 916.13403320]
[163.63159180 918.82336426]
[148.77394104 920.90045166]
[133.84312439 922.36181641]
[118.86468506 923.20483398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 135]
[76 134]
[77 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 118]
[84 117]
[85 116]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
