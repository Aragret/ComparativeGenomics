%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[64.76281738 397.79916382]
[49.70418167 399.69705200]
[34.97777557 396.02316284]
[22.57521820 387.27438354]
[14.17385864 374.63391113]
[10.90990925 359.81127930]
[13.22479248 344.81106567]
[20.80544090 331.66198730]
[32.62663269 322.14233398]
[47.08964920 317.53955078]
[40.12360764 304.37432861]
[48.66859055 291.05914307]
[49.56140518 276.08575439]
[50.45421982 261.11233521]
[51.34703827 246.13893127]
[52.23985291 231.16552734]
[45.27381134 218.00028992]
[53.81879425 204.68510437]
[54.71160889 189.71170044]
[47.28458023 202.74394226]
[37.08712387 213.74447632]
[24.65417862 222.13626099]
[10.63795662 227.47904968]
[-4.22628403 229.49259949]
[-19.15879250 228.07127380]
[-33.37623978 223.28961182]
[-46.13280869 215.39848328]
[-56.75931168 204.81182861]
[-64.69830322 192.08499146]
[-69.53332520 177.88560486]
[-71.01074219 162.95854187]
[-69.05303955 148.08683777]
[-63.76293182 134.05064392]
[-55.41791534 121.58626556]
[-44.45575714 111.34756470]
[-31.45150948 103.87162781]
[-17.08735085 99.55064392]
[-2.11679268 98.61127472]
[12.67483616 101.10280609]
[26.51159859 106.89452362]
[38.66764450 115.68261719]
[48.50529099 127.00607300]
[55.50847626 140.27088928]
[59.30982971 154.78121948]
[59.70978928 169.77754211]
[65.98714447 156.15422058]
[72.26451111 142.53091431]
[78.54187012 128.90759277]
[84.81922913 115.28427124]
[91.09658813 101.66095734]
[90.28733063 97.89035034]
[91.14402008 93.78134155]
[93.78054047 90.08596802]
[97.97050476 87.57917023]
[104.84991455 74.24974060]
[91.84461212 81.72383118]
[76.89089203 82.90127563]
[62.87609863 77.55473328]
[52.50625992 66.71653748]
[47.78363419 52.47937393]
[49.62008286 37.59221649]
[57.66101837 24.92954254]
[70.35386658 16.93631363]
[85.24782562 15.15589905]
[99.46711731 19.93206787]
[110.26621246 30.34261703]
[115.55997467 44.37743378]
[114.32588959 59.32782745]
[123.46469116 47.43319702]
[132.60348511 35.53856277]
[141.74229431 23.64393044]
[150.52290344 11.48247433]
[158.93751526 -0.93502122]
[160.27386475 -16.69968796]
[173.81874084 -22.89531517]
[182.23335266 -35.31281281]
[190.64797974 -47.73030853]
[199.06259155 -60.14780045]
[207.47721863 -72.56529999]
[215.89183044 -84.98279572]
[204.07275391 -94.22866821]
[192.91220093 -104.25955963]
[182.46218872 -115.02868652]
[172.77146912 -126.48584747]
[163.88519287 -138.57762146]
[155.84481812 -151.24761963]
[148.68782043 -164.43679810]
[142.44757080 -178.08363342]
[137.15316772 -192.12449646]
[132.82929993 -206.49394226]
[129.49610901 -221.12495422]
[127.16915131 -235.94932556]
[125.85927582 -250.89793396]
[125.57258606 -265.90109253]
[126.31042480 -280.88882446]
[128.06935120 -295.79125977]
[130.84115601 -310.53894043]
[134.61291504 -325.06307983]
[139.36705017 -339.29595947]
[145.08139038 -353.17123413]
[151.72929382 -366.62420654]
[159.27976990 -379.59210205]
[167.69761658 -392.01455688]
[176.94357300 -403.83355713]
[186.97453308 -414.99404907]
[197.74372864 -425.44396973]
[209.20095825 -435.13464355]
[221.29278564 -444.02081299]
[233.96284485 -452.06109619]
[247.15206909 -459.21801758]
[260.79895020 -465.45819092]
[274.83984375 -470.75250244]
[289.20932007 -475.07626343]
[303.84036255 -478.40936279]
[318.66473389 -480.73620605]
[333.61337280 -482.04598999]
[348.61651611 -482.33258057]
[363.60424805 -481.59463501]
[378.50668335 -479.83560181]
[393.25433350 -477.06372070]
[407.77844238 -473.29183960]
[422.01129150 -468.53762817]
[435.88653564 -462.82318115]
[449.33944702 -456.17520142]
[462.30731201 -448.62463379]
[474.72967529 -440.20669556]
[486.54864502 -430.96066284]
[497.70904541 -420.92962646]
[508.15890503 -410.16036987]
[517.84948730 -398.70306396]
[526.73559570 -386.61117554]
[534.77581787 -373.94107056]
[541.93261719 -360.75180054]
[548.17266846 -347.10488892]
[553.46691895 -333.06393433]
[557.79058838 -318.69445801]
[561.12359619 -304.06338501]
[563.45031738 -289.23898315]
[564.76000977 -274.29034424]
[565.04650879 -259.28720093]
[564.30847168 -244.29946899]
[562.54931641 -229.39704895]
[559.77734375 -214.64941406]
[556.00537109 -200.12532043]
[551.25103760 -185.89250183]
[545.53656006 -172.01731873]
[538.88842773 -158.56443787]
[531.33776855 -145.59661865]
[522.91979980 -133.17430115]
[513.67364502 -121.35541534]
[503.64254761 -110.19506073]
[492.87322998 -99.74527740]
[481.41586304 -90.05477905]
[469.32391357 -81.16875458]
[456.65374756 -73.12863159]
[443.46444702 -65.97189331]
[429.81747437 -59.73192215]
[415.77648926 -54.43779755]
[401.40698242 -50.11421204]
[386.77587891 -46.78132248]
[371.95147705 -44.45466614]
[357.00283813 -43.14509201]
[341.99966431 -42.85870361]
[327.01196289 -43.59684372]
[312.10952759 -45.35606384]
[297.36190796 -48.12816238]
[282.83786011 -51.90021515]
[268.60507202 -56.65464020]
[254.72991943 -62.36925888]
[241.27709961 -69.01744080]
[228.30932617 -76.56817627]
[219.89471436 -64.15068054]
[211.48008728 -51.73318481]
[203.06547546 -39.31568909]
[194.65084839 -26.89819336]
[186.23623657 -14.48069763]
[185.50175476 0.39578757]
[171.35501099 7.47959757]
[162.94039917 19.89709282]
[163.33630371 22.67223167]
[162.65679932 25.77140617]
[160.77294922 28.78579330]
[157.70608521 31.26748848]
[153.63693237 32.78273392]
[144.49812317 44.67736435]
[135.35932922 56.57199860]
[126.22052002 68.46662903]
[118.17934418 81.12915802]
[111.29993439 94.45858765]
[104.71990967 107.93831635]
[98.44254303 121.56163788]
[92.16518402 135.18495178]
[85.88782501 148.80827332]
[79.61046600 162.43157959]
[73.33310699 176.05490112]
[69.68501282 190.60452271]
[68.79219818 205.57792664]
[75.69438171 219.81416321]
[67.21325684 232.05833435]
[66.32044220 247.03173828]
[65.42762756 262.00515747]
[64.53481293 276.97854614]
[63.64199448 291.95196533]
[70.54417419 306.18820190]
[62.06305313 318.43237305]
[75.87664032 324.72119141]
[86.48284149 335.57812500]
[92.44725800 349.53485107]
[92.96324921 364.70382690]
[87.96103668 379.03359985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[18 197]
[19 196]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[50 190]
[54 189]
[55 188]
[68 187]
[69 186]
[70 185]
[71 184]
[72 179]
[73 178]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[80 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
