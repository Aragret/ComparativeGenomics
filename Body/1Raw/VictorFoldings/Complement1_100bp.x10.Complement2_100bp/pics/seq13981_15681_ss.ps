%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[185.10038757 589.19274902]
[183.09031677 574.23876953]
[185.02009583 559.27423096]
[190.75811768 545.31933594]
[199.91317749 533.32574463]
[211.86106873 524.11102295]
[225.78713989 518.30358887]
[223.78312683 503.43804932]
[221.77911377 488.57250977]
[219.77510071 473.70700073]
[217.77108765 458.84146118]
[215.76707458 443.97592163]
[212.77230835 429.27792358]
[208.80020142 414.81341553]
[204.82810974 400.34887695]
[200.85601807 385.88436890]
[182.62567139 383.37808228]
[167.28633118 373.12088013]
[157.95413208 357.14276123]
[156.54829407 338.64135742]
[163.39662170 321.34182739]
[177.16043091 308.74694824]
[172.33444214 294.54449463]
[167.50843811 280.34204102]
[162.68244934 266.13958740]
[157.64552307 252.01055908]
[152.39880371 237.95809937]
[147.15208435 223.90562439]
[141.90538025 209.85314941]
[136.65866089 195.80067444]
[131.41194153 181.74821472]
[125.44037628 167.98811340]
[118.76017761 154.55772400]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[67.80944824 52.12246323]
[54.73593140 43.21214294]
[55.99554443 28.37089348]
[49.31534958 14.94051743]
[47.65108109 29.84790611]
[39.75703049 42.60266876]
[27.15741539 50.74205780]
[12.28502464 52.69449234]
[-1.98851645 48.08298111]
[-12.90721035 37.79793930]
[-18.36282921 23.82524109]
[-17.30197716 8.86280251]
[-9.92948818 -4.20036840]
[2.33112431 -12.84197617]
[17.11252975 -15.39346218]
[31.56066704 -11.36217403]
[42.88658905 -1.52546370]
[38.69957733 -15.92924595]
[34.51256561 -30.33302689]
[30.32555389 -44.73680878]
[25.92455673 -59.07665634]
[21.31054688 -73.34938812]
[9.70344353 -84.10047150]
[13.15068817 -98.59066772]
[8.53667927 -112.86340332]
[3.92266989 -127.13613129]
[-0.69133949 -141.40885925]
[-15.39997768 -138.38906860]
[-30.35154915 -137.00570679]
[-45.36455536 -137.27555847]
[-60.25675201 -139.19535828]
[-74.84736633 -142.74180603]
[-88.95927429 -147.87184143]
[-102.42117310 -154.52319336]
[-115.06964874 -162.61511230]
[-126.75115967 -172.04939270]
[-137.32389832 -182.71148682]
[-146.65953064 -194.47198486]
[-154.64472961 -207.18811035]
[-161.18255615 -220.70550537]
[-166.19363403 -234.86007690]
[-169.61717224 -249.48002625]
[-171.41157532 -264.38784790]
[-171.55506897 -279.40258789]
[-170.04592896 -294.34201050]
[-166.90246582 -309.02468872]
[-162.16282654 -323.27246094]
[-155.88455200 -336.91235352]
[-148.14385986 -349.77877808]
[-139.03471375 -361.71554565]
[-128.66767883 -372.57778931]
[-117.16862488 -382.23361206]
[-104.67712402 -390.56579590]
[-91.34481049 -397.47323608]
[-77.33353424 -402.87207031]
[-62.81336975 -406.69671631]
[-47.96058655 -408.90081787]
[-32.95547867 -409.45755005]
[-17.98019791 -408.36022949]
[-3.21653008 -405.62210083]
[11.15630913 -401.27645874]
[24.96384621 -395.37600708]
[38.03846741 -387.99243164]
[50.22146606 -379.21530151]
[61.36494446 -369.15121460]
[71.33363342 -357.92230225]
[80.00652313 -345.66488647]
[87.27832794 -332.52777100]
[93.06078339 -318.67041016]
[97.28369141 -304.26101685]
[99.89579010 -289.47454834]
[100.86536407 -274.49044800]
[100.18065643 -259.49063110]
[97.84996796 -244.65718079]
[93.90159607 -230.17016602]
[88.38346863 -216.20544434]
[81.36257935 -202.93254089]
[72.92414093 -190.51255798]
[63.17059708 -179.09626770]
[52.22034454 -168.82226562]
[40.20631027 -159.81526184]
[27.27433205 -152.18458557]
[13.58139420 -146.02287292]
[18.19540405 -131.75013733]
[22.80941200 -117.47740936]
[27.42342186 -103.20467377]
[38.70050049 -93.47447968]
[35.58327866 -77.96340179]
[40.19728851 -63.69066620]
[43.96604919 -60.75715256]
[45.93200684 -55.42498398]
[44.72933578 -48.92382050]
[48.91634750 -34.52003860]
[53.10335922 -20.11625671]
[57.29037094 -5.71247482]
[62.74572754 8.26032257]
[69.42591858 21.69069862]
[82.02162170 29.64039040]
[81.23982239 45.44226837]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[132.19055176 147.87753296]
[138.87074280 161.30790710]
[143.56054688 147.05990601]
[156.24491882 139.05322266]
[171.12471008 140.94839478]
[181.39709473 151.87899780]
[182.36567688 166.84770203]
[173.58764648 179.01100159]
[159.07617188 182.80801392]
[145.46440125 176.50149536]
[150.71112061 190.55397034]
[155.95783997 204.60643005]
[161.20455933 218.65890503]
[166.45127869 232.71138000]
[171.69799805 246.76385498]
[176.54615784 251.25906372]
[178.15486145 256.70965576]
[176.88490295 261.31359863]
[181.71089172 275.51605225]
[186.53689575 289.71850586]
[191.36289978 303.92095947]
[203.11509705 303.93472290]
[214.37559509 307.23071289]
[224.24792480 313.53530884]
[231.94931030 322.33578491]
[236.87266541 332.92211914]
[238.63450623 344.44412231]
[237.10473633 355.97979736]
[232.41622925 366.60913086]
[224.95338440 375.48736572]
[215.32054138 381.91226196]
[219.29263306 396.37677002]
[223.26473999 410.84130859]
[227.23683167 425.30584717]
[233.10752869 411.50238037]
[245.44877625 402.97634888]
[260.43649292 402.36953735]
[273.42657471 409.87005615]
[280.39392090 423.15374756]
[279.17959595 438.10449219]
[270.15988159 450.08969116]
[256.12963867 455.39556885]
[241.43630981 452.37805176]
[230.63261414 441.97192383]
[232.63662720 456.83743286]
[234.64064026 471.70297241]
[236.64465332 486.56851196]
[238.64866638 501.43402100]
[240.65267944 516.29956055]
[255.61947632 518.21197510]
[269.58093262 523.93383789]
[281.58517456 533.07501221]
[290.81369019 545.01220703]
[296.63729858 558.93157959]
[298.65890503 573.88403320]
[296.74069214 588.85003662]
[291.01342773 602.80932617]
[281.86764526 614.81005859]
[269.92687988 624.03393555]
[256.00527954 629.85217285]
[241.05206299 631.86798096]
[226.08674622 629.94403076]
[212.12969971 624.21136475]
[200.13252258 615.06091309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[13 180]
[14 179]
[15 178]
[16 177]
[22 167]
[23 166]
[24 165]
[25 164]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[31 156]
[32 148]
[33 147]
[34 146]
[35 145]
[36 144]
[38 142]
[39 141]
[40 140]
[41 139]
[43 137]
[44 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 129]
[62 128]
[64 126]
[65 125]
[66 124]
[67 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
