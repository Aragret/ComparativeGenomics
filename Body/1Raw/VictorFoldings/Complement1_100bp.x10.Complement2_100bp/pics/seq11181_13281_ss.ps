%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[70.52046967 371.10449219]
[61.85354233 358.77642822]
[56.26383972 344.78170776]
[54.05281067 329.87506104]
[55.33968735 314.86038208]
[60.05507660 300.54739380]
[67.94467926 287.70794678]
[78.58301544 277.03451538]
[91.39638519 269.10266113]
[105.69376373 264.34014893]
[104.35552979 249.39994812]
[95.51361847 237.41372681]
[101.98886871 222.97828674]
[100.65063477 208.03810120]
[96.92292786 201.65641785]
[99.40539551 192.86578369]
[98.28974152 177.90733337]
[97.17409515 162.94888306]
[96.05844879 147.99043274]
[94.94279480 133.03196716]
[93.82714844 118.07352448]
[82.91663361 108.53901672]
[81.83895111 94.08962250]
[91.21439362 83.04212952]
[84.78145599 96.59267426]
[73.93811798 106.95713806]
[60.11102676 112.77189636]
[45.11936569 113.27192688]
[30.93554306 108.39144135]
[19.42568779 98.77253723]
[12.10411930 85.68076324]
[9.93411636 70.83855438]
[13.20117950 56.19866562]
[21.47546959 43.68722534]
[33.66836166 34.95032883]
[48.17567444 31.13746452]
[63.08871460 32.75028229]
[76.44541931 39.57658005]
[86.48848724 50.71825409]
[91.89701843 64.71175385]
[94.12213135 49.87770844]
[96.34725189 35.04366302]
[98.57237244 20.20962143]
[100.68699646 5.35942316]
[102.69100952 -9.50610542]
[104.69502258 -24.37163353]
[106.69903564 -39.23716354]
[91.94775391 -41.97436905]
[77.34989166 -45.43773270]
[62.94116974 -49.61877823]
[48.75684357 -54.50727081]
[34.83162689 -60.09125519]
[21.19960022 -66.35706329]
[7.89412069 -73.28935242]
[-5.05225039 -80.87117004]
[-17.60783005 -89.08396149]
[-29.74189377 -97.90762329]
[-41.42474747 -107.32056427]
[-52.62779999 -117.29974365]
[-63.32363510 -127.82075500]
[-73.48608398 -138.85783386]
[-83.09026337 -150.38398743]
[-92.11268616 -162.37100220]
[-100.53126526 -174.78953552]
[-108.32540131 -187.60920715]
[-115.47601318 -200.79864502]
[-121.96561432 -214.32556152]
[-127.77831268 -228.15686035]
[-132.89988708 -242.25871277]
[-137.31781006 -256.59658813]
[-141.02125549 -271.13537598]
[-144.00119019 -285.83953857]
[-146.25027466 -300.67309570]
[-147.76306152 -315.59973145]
[-148.53579712 -330.58288574]
[-148.56661987 -345.58593750]
[-147.85543823 -360.57214355]
[-146.40402222 -375.50485229]
[-144.21588135 -390.34753418]
[-141.29640198 -405.06381226]
[-137.65272522 -419.61770630]
[-133.29374695 -433.97360229]
[-128.23016357 -448.09637451]
[-122.47433472 -461.95144653]
[-116.04037476 -475.50491333]
[-108.94400787 -488.72363281]
[-101.20261383 -501.57522583]
[-92.83513641 -514.02825928]
[-83.86203766 -526.05224609]
[-74.30529785 -537.61773682]
[-64.18828583 -548.69647217]
[-53.53577042 -559.26135254]
[-42.37381363 -569.28649902]
[-30.72973442 -578.74731445]
[-18.63202858 -587.62078857]
[-6.11029911 -595.88507080]
[6.80481052 -603.52001953]
[20.08169365 -610.50695801]
[33.68786240 -616.82867432]
[47.59001541 -622.46984863]
[61.75413513 -627.41656494]
[76.14556122 -631.65679932]
[90.72907257 -635.18011475]
[105.46897888 -637.97790527]
[120.32920837 -640.04333496]
[135.27340698 -641.37133789]
[150.26498413 -641.95867920]
[165.26727295 -641.80389404]
[180.24354553 -640.90740967]
[195.15715027 -639.27136230]
[209.97160339 -636.89978027]
[224.65065002 -633.79846191]
[239.15837097 -629.97497559]
[253.45924377 -625.43878174]
[267.51828003 -620.20086670]
[281.30108643 -614.27410889]
[294.77395630 -607.67291260]
[307.90383911 -600.41357422]
[320.65869141 -592.51379395]
[333.00723267 -583.99291992]
[344.91931152 -574.87176514]
[356.36569214 -565.17266846]
[367.31845093 -554.91937256]
[377.75073242 -544.13702393]
[387.63699341 -532.85186768]
[396.95309448 -521.09167480]
[405.67620850 -508.88510132]
[413.78497314 -496.26208496]
[421.25958252 -483.25350952]
[428.08169556 -469.89120483]
[434.23464966 -456.20788574]
[439.70339966 -442.23699951]
[444.47454834 -428.01278687]
[448.53640747 -413.57000732]
[451.87902832 -398.94403076]
[454.49426270 -384.17062378]
[456.37570190 -369.28598022]
[457.51873779 -354.32650757]
[457.92056274 -339.32879639]
[457.58020020 -324.32958984]
[456.49850464 -309.36553955]
[454.67807007 -294.47332764]
[452.12341309 -279.68933105]
[448.84075928 -265.04977417]
[444.83813477 -250.59046936]
[440.12533569 -236.34680176]
[434.71389771 -222.35363770]
[428.61706543 -208.64520264]
[421.84976196 -195.25505066]
[414.42855835 -182.21595764]
[406.37158203 -169.55981445]
[397.69857788 -157.31761169]
[388.43078613 -145.51930237]
[378.59082031 -134.19375610]
[368.20281982 -123.36869812]
[357.29220581 -113.07060242]
[345.88565063 -103.32468414]
[334.01107788 -94.15478516]
[321.69754028 -85.58335114]
[308.97518921 -77.63135529]
[295.87515259 -70.31825256]
[282.42947388 -63.66195297]
[268.67108154 -57.67873383]
[254.63362122 -52.38324356]
[240.35145569 -47.78843307]
[225.85954285 -43.90555573]
[211.19332886 -40.74411011]
[196.38871765 -38.31183243]
[181.48193359 -36.61467743]
[166.50946045 -35.65679169]
[151.50793457 -35.44052505]
[136.51406860 -35.96640778]
[121.56455994 -37.23314667]
[119.56054688 -22.36762047]
[117.55653381 -7.50209141]
[115.55252075 7.36343670]
[117.77420807 14.41225910]
[113.40641022 22.43473816]
[111.18129730 37.26877975]
[108.95617676 52.10282516]
[106.73106384 66.93686676]
[106.17285156 81.92647552]
[117.08336639 91.46098328]
[118.16104889 105.91037750]
[108.78560638 116.95787048]
[109.90125275 131.91632080]
[111.01689911 146.87478638]
[112.13254547 161.83323669]
[113.24819946 176.79168701]
[114.36384583 191.75013733]
[115.59082031 206.69987488]
[116.92905426 221.64006042]
[125.86669159 234.69491577]
[119.29571533 248.06172180]
[120.63394928 263.00189209]
[135.55012512 265.14767456]
[149.56916809 270.67608643]
[161.93504333 279.28897095]
[171.98086548 290.52188110]
[179.16488647 303.76901245]
[183.09968567 318.31597900]
[183.57305908 333.37826538]
[180.55947876 348.14358521]
[174.22145081 361.81570435]
[164.90080261 373.65722656]
[153.10015869 383.02963257]
[139.45593262 389.42739868]
[124.70393372 392.50558472]
[109.63970947 392.09814453]
[95.07566833 388.22705078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 195]
[11 194]
[13 192]
[14 191]
[16 190]
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[24 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 176]
[45 175]
[46 174]
[47 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
