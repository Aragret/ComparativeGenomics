%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[97.92262268 473.30307007]
[89.78649139 485.96008301]
[79.40184784 496.84838867]
[67.14408875 505.57443237]
[53.45631027 511.82272339]
[38.83332443 515.36743164]
[23.80374908 516.08038330]
[8.91088581 513.93579102]
[-5.30689335 509.01126099]
[-18.33562660 501.48474121]
[-29.70433235 491.62832642]
[-39.00203705 479.79830933]
[-45.89263916 466.42236328]
[-50.12704849 451.98397827]
[-51.55218506 437.00515747]
[-50.11653900 422.02731323]
[-45.87200546 407.59194946]
[-38.97202301 394.22082520]
[-29.66602135 382.39733887]
[-18.29040337 372.54888916]
[-5.25639439 365.03149414]
[8.96483612 360.11691284]
[23.85919952 357.98281860]
[38.88827133 358.70629883]
[42.42794418 344.12991333]
[45.96761703 329.55355835]
[49.50728989 314.97717285]
[44.99186325 300.78350830]
[55.76718903 289.19891357]
[59.30685806 274.62252808]
[62.52013397 259.97076416]
[65.40540314 245.25085449]
[60.26070023 231.27297974]
[70.50800323 219.21878052]
[73.39327240 204.49888611]
[76.16888428 189.75793457]
[78.83467865 174.99671936]
[81.50047302 160.23548889]
[84.16626740 145.47427368]
[86.83206177 130.71305847]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[98.40671539 66.62113953]
[101.07250977 51.85992432]
[103.73831177 37.09870911]
[98.57673645 22.14314842]
[108.45275879 10.99355030]
[111.11855316 -3.76766658]
[104.41883850 -14.78931141]
[106.94307709 -27.02908325]
[116.80388641 -34.03558350]
[119.68915558 -48.75547409]
[122.57443237 -63.47536469]
[125.45970154 -78.19525909]
[128.34497070 -92.91514587]
[131.23025513 -107.63504028]
[134.11552429 -122.35492706]
[137.00079346 -137.07482910]
[139.88606262 -151.79470825]
[142.77133179 -166.51460266]
[136.40098572 -183.79176331]
[148.44216919 -196.55799866]
[151.10795593 -211.31921387]
[153.77375793 -226.08042908]
[156.43954468 -240.84164429]
[144.71510315 -231.48550415]
[129.73608398 -230.69250488]
[117.08928680 -238.75839233]
[111.49166870 -252.67480469]
[115.03099060 -267.25128174]
[126.38718414 -277.05111694]
[141.32466125 -278.41925049]
[154.27210999 -270.84536743]
[160.40058899 -257.15322876]
[164.80158997 -271.49307251]
[169.20259094 -285.83291626]
[173.60359192 -300.17276001]
[178.00459290 -314.51260376]
[182.40557861 -328.85244751]
[179.05776978 -344.31539917]
[190.18873596 -354.21243286]
[176.32135010 -359.96047974]
[163.06314087 -367.00073242]
[150.53421021 -375.26937866]
[138.84799194 -384.69152832]
[128.11033630 -395.18188477]
[118.41849518 -406.64544678]
[109.86022949 -418.97836304]
[102.51304626 -432.06893921]
[96.44348907 -445.79867554]
[91.70652008 -460.04318237]
[88.34504700 -474.67346191]
[86.38950348 -489.55703735]
[85.85760498 -504.55908203]
[86.75417328 -519.54376221]
[89.07108307 -534.37536621]
[92.78734589 -548.91961670]
[97.86931610 -563.04467773]
[104.27096558 -576.62274170]
[111.93431854 -589.53082275]
[120.78997040 -601.65191650]
[130.75773621 -612.87640381]
[141.74731445 -623.10253906]
[153.65921021 -632.23773193]
[166.38551331 -640.19921875]
[179.81100464 -646.91497803]
[193.81407166 -652.32409668]
[208.26791382 -656.37768555]
[223.04162598 -659.03894043]
[238.00140381 -660.28375244]
[253.01177979 -660.10095215]
[267.93679810 -658.49212646]
[282.64132690 -655.47186279]
[296.99215698 -651.06750488]
[310.85931396 -645.31890869]
[324.11727905 -638.27819824]
[336.64590454 -630.00909424]
[348.33178711 -620.58648682]
[359.06906128 -610.09576416]
[368.76046753 -598.63183594]
[377.31829834 -586.29864502]
[384.66500854 -573.20776367]
[390.73406982 -559.47784424]
[395.47052002 -545.23315430]
[398.83145142 -530.60272217]
[400.78643799 -515.71911621]
[401.31781006 -500.71701050]
[400.42068481 -485.73236084]
[398.10324097 -470.90081787]
[394.38644409 -456.35675049]
[389.30395508 -442.23184204]
[382.90179443 -428.65402222]
[375.23797607 -415.74624634]
[366.38189697 -403.62542725]
[356.41372681 -392.40133667]
[345.42376709 -382.17559814]
[333.51153564 -373.04083252]
[320.78494263 -365.07980347]
[307.35922241 -358.36456299]
[293.35592651 -352.95593262]
[278.90194702 -348.90289307]
[264.12814331 -346.24218750]
[249.16831970 -344.99786377]
[234.15794373 -345.18124390]
[219.23298645 -346.79061890]
[204.52857971 -349.81143188]
[208.19117737 -335.37417603]
[196.74543762 -324.45144653]
[192.34443665 -310.11160278]
[187.94343567 -295.77175903]
[183.54243469 -281.43191528]
[179.14143372 -267.09207153]
[174.74044800 -252.75222778]
[171.20077515 -238.17584229]
[168.53497314 -223.41462708]
[165.86917114 -208.65341187]
[163.20338440 -193.89219666]
[169.84072876 -183.77922058]
[167.74061584 -171.45959473]
[157.49122620 -163.62933350]
[154.60595703 -148.90943909]
[151.72068787 -134.18954468]
[148.83541870 -119.46965790]
[145.95013428 -104.74976349]
[143.06486511 -90.02987671]
[140.17959595 -75.30998230]
[137.29432678 -60.59009171]
[134.40904236 -45.87020111]
[131.52377319 -31.15031052]
[138.09742737 -14.87904358]
[125.87976837 -1.10187113]
[123.21397400 13.65934563]
[128.56622314 27.55908585]
[118.49952698 39.76450348]
[115.83373260 54.52572250]
[113.16793823 69.28694153]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[101.59328461 133.37886047]
[98.92749023 148.14007568]
[96.26168823 162.90129089]
[93.59589386 177.66250610]
[90.93009949 192.42372131]
[92.48456573 201.42491150]
[88.11316681 207.38417053]
[85.22789001 222.10406494]
[90.16622162 237.13481140]
[80.12529755 248.13612366]
[77.24002838 262.85601807]
[78.93335724 267.79360962]
[78.59703064 272.42395020]
[76.68795013 276.02542114]
[73.88323212 278.16220093]
[70.34355927 292.73858643]
[74.60581207 307.97485352]
[64.08366394 318.51684570]
[60.54399109 333.09323120]
[57.00432205 347.66958618]
[53.46464920 362.24597168]
[67.15172577 368.49581909]
[79.40852356 377.22320557]
[89.79195404 388.11270142]
[97.92666626 400.77059937]
[103.51859283 414.73937988]
[106.36560059 429.51406860]
[106.36476135 444.56054688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 203]
[25 202]
[26 201]
[27 200]
[29 198]
[30 197]
[31 193]
[32 192]
[34 190]
[35 189]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[44 179]
[45 178]
[46 177]
[47 176]
[49 174]
[50 173]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 162]
[64 159]
[65 158]
[66 157]
[67 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[83 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
