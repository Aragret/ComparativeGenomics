%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[120.17981720 620.07482910]
[106.98391724 612.92993164]
[94.31239319 604.89172363]
[82.22563171 595.99841309]
[70.78122711 586.29241943]
[60.03372955 575.82000732]
[50.03434372 564.63104248]
[40.83073044 552.77886963]
[32.46674347 540.31994629]
[24.98224640 527.31365967]
[18.41290474 513.82202148]
[12.79002190 499.90930176]
[8.14039612 485.64178467]
[4.48618603 471.08749390]
[1.84480393 456.31579590]
[0.22883825 441.39703369]
[-0.35401031 426.40231323]
[0.09903583 411.40313721]
[1.58581769 396.47094727]
[4.09924984 381.67694092]
[7.62735510 367.09155273]
[12.15331936 352.78433228]
[17.65557480 338.82348633]
[24.10790062 325.27548218]
[31.47954750 312.20492554]
[39.73538589 299.67410278]
[48.83607483 287.74270630]
[58.73824310 276.46759033]
[69.39469910 265.90252686]
[80.75466156 256.09783936]
[92.76399994 247.10026550]
[105.36547852 238.95266724]
[118.49904633 231.69387817]
[132.10211182 225.35847473]
[146.10986328 219.97666931]
[141.70886230 205.63682556]
[137.30786133 191.29698181]
[132.90686035 176.95713806]
[128.50585938 162.61727905]
[122.22850037 148.99397278]
[114.18733215 136.33145142]
[106.14615631 123.66892242]
[98.10498810 111.00639343]
[89.96977234 98.40408325]
[81.74095917 85.86268616]
[73.51215363 73.32128143]
[65.28334808 60.77988052]
[57.05453873 48.23847961]
[48.82572937 35.69708252]
[50.50951385 50.60227585]
[48.16403961 65.41777039]
[41.95863342 79.07401276]
[32.34126663 90.58514404]
[20.00622749 99.12017822]
[5.84399080 104.06295776]
[-9.12305832 105.05665588]
[-23.81443596 102.02954102]
[-37.16955948 95.20014191]
[-48.22430801 85.06147766]
[-56.18063354 72.34547424]
[-60.46416092 57.97009659]
[-60.76565933 42.97312927]
[-57.06336212 28.43720627]
[-49.62453842 15.41169643]
[-38.98620987 4.83691740]
[-25.91636276 -2.52372599]
[-11.35851955 -6.13886356]
[3.63637424 -5.74751472]
[17.98582458 -1.37793195]
[30.65393448 6.65444088]
[40.72683716 17.77069855]
[36.75474167 3.30617547]
[32.78264618 -11.15834808]
[28.81054878 -25.62287331]
[24.83845329 -40.08739471]
[20.75878525 -54.52194977]
[16.57177544 -68.92572784]
[1.65025961 -67.09691620]
[-13.37138271 -67.68550873]
[-28.10405540 -70.67624664]
[-42.16614532 -75.99166870]
[-55.19341660 -83.49410248]
[-66.84841919 -92.98920441]
[-76.82927704 -104.23103333]
[-84.87744904 -116.92839813]
[-90.78446960 -130.75241089]
[-94.39733887 -145.34498596]
[-95.62247467 -160.32815552]
[-94.42813110 -175.31379700]
[-90.84526062 -189.91377258]
[-84.96665955 -203.74989319]
[-76.94459534 -216.46377563]
[-66.98686218 -227.72608948]
[-55.35139465 -237.24511719]
[-42.33957291 -244.77430725]
[-28.28843307 -250.11862183]
[-13.56193733 -253.13963318]
[1.45846319 -253.75907898]
[16.38370514 -251.96093750]
[30.82718849 -247.79177856]
[44.41479111 -241.35957336]
[56.79456329 -232.83094788]
[67.64583588 -222.42681885]
[76.68753815 -210.41665649]
[83.68547058 -197.11158752]
[88.45836639 -182.85620117]
[90.88259125 -168.01979065]
[90.89536285 -152.98663330]
[88.49634552 -138.14611816]
[83.74767303 -123.88265228]
[76.77235413 -110.56570435]
[67.75106812 -98.54020691]
[56.91748047 -88.11766052]
[44.55221558 -79.56801605]
[30.97555733 -73.11273956]
[35.16256714 -58.70896149]
[40.04819489 -53.16347504]
[39.30297470 -44.05949402]
[43.27507401 -29.59496880]
[47.24716949 -15.13044453]
[51.21926498 -0.66592079]
[55.19136047 13.79860306]
[61.36713028 27.46827316]
[69.59593964 40.00967407]
[77.82474518 52.55107498]
[86.05355072 65.09247589]
[94.28236389 77.63387299]
[102.51116943 90.17527771]
[109.21466064 94.65140533]
[110.76750946 102.96522522]
[118.80868530 115.62774658]
[126.84985352 128.29026794]
[134.89102173 140.95278931]
[133.69352722 126.00067139]
[137.11392212 111.39585114]
[144.82621765 98.53036499]
[156.09529114 88.63047028]
[169.84707642 82.63977051]
[184.77082825 81.12924957]
[199.44410706 84.24289703]
[212.46835327 91.68392181]
[222.60218811 102.74309540]
[228.87971497 116.36634064]
[230.70259094 131.25517273]
[227.89706421 145.99046326]
[220.73056030 159.16777039]
[209.88613892 169.53109741]
[196.39741516 176.09266663]
[181.55004883 178.22709656]
[166.75920105 175.73094177]
[153.43464661 168.84211731]
[142.84571838 158.21629333]
[147.24670410 172.55613708]
[151.64770508 186.89598083]
[156.04870605 201.23582458]
[160.44970703 215.57566833]
[175.06483459 212.17292786]
[189.87989807 209.78659058]
[204.82429504 208.42807007]
[219.82681274 208.10382080]
[234.81594849 208.81538391]
[249.72029114 210.55937195]
[264.46878052 213.32748413]
[278.99118042 217.10650635]
[293.21823120 221.87844849]
[307.08215332 227.62057495]
[320.51690674 234.30551147]
[333.45843506 241.90139771]
[345.84506226 250.37203979]
[357.61779785 259.67706299]
[368.72052002 269.77215576]
[379.10028076 280.60916138]
[388.70767212 292.13647461]
[397.49688721 304.29913330]
[405.42602539 317.03921509]
[412.45730591 330.29595947]
[418.55725098 344.00622559]
[423.69674683 358.10467529]
[427.85134888 372.52410889]
[431.00122070 387.19583130]
[433.13137817 402.04986572]
[434.23165894 417.01550293]
[434.29678345 432.02139282]
[433.32650757 446.99600220]
[431.32540894 461.86801147]
[428.30303955 476.56649780]
[424.27380371 491.02148438]
[419.25689697 505.16400146]
[413.27624512 518.92669678]
[406.36032104 532.24401855]
[398.54211426 545.05249023]
[389.85882568 557.29101562]
[380.35189819 568.90130615]
[370.06661987 579.82800293]
[359.05197144 590.01910400]
[347.36050415 599.42602539]
[335.04785156 608.00390625]
[322.17279053 615.71185303]
[308.79656982 622.51318359]
[294.98303223 628.37548828]
[280.79794312 633.27075195]
[266.30892944 637.17578125]
[251.58500671 640.07183838]
[236.69638062 641.94512939]
[221.71398926 642.78686523]
[206.70921326 642.59289551]
[191.75358582 641.36413574]
[176.91836548 639.10656738]
[162.27423096 635.83081055]
[147.89100647 631.55261230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[40 133]
[41 132]
[42 131]
[43 130]
[44 128]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 116]
[77 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
