%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[86.17317200 295.13958740]
[92.14331818 309.02658081]
[93.75330353 324.05654907]
[90.85997772 338.89297485]
[83.72060394 352.21667480]
[72.97001648 362.84289551]
[59.56415176 369.82672119]
[44.69504547 372.54721069]
[29.68484688 370.76245117]
[15.86825848 364.63110352]
[4.47383881 354.69839478]
[-3.48522782 341.84753418]
[-7.30122614 327.22122192]
[-6.63484097 312.11996460]
[-1.54532611 297.88662720]
[7.51476192 285.78677368]
[19.73980713 276.89636230]
[34.04276276 272.00588989]
[49.15182495 271.55020142]
[53.12392426 257.08566284]
[47.77868652 240.37055969]
[60.98719788 227.54025269]
[64.74349976 213.01818848]
[68.49980164 198.49612427]
[72.25609589 183.97407532]
[75.57836151 169.34660339]
[78.46363068 154.62672424]
[81.34889984 139.90682983]
[68.32841492 147.35443115]
[53.81966782 143.54702759]
[46.13394165 130.66564941]
[49.67396164 116.08936310]
[62.41184998 108.16810608]
[77.05075836 111.43954468]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[91.76921844 50.41804504]
[80.69719696 40.94240189]
[71.84725189 29.37178421]
[65.60618591 16.21606445]
[62.24589920 2.05429888]
[61.91156387 -12.49075794]
[64.61533356 -26.78003693]
[70.23593903 -40.18623734]
[78.52410889 -52.12135696]
[89.11364746 -62.06249619]
[101.53759003 -69.57474518]
[115.24879456 -74.33024597]
[129.64407349 -76.12245941]
[144.09066772 -74.87516022]
[148.49165344 -89.21500397]
[152.89265442 -103.55485535]
[157.29365540 -117.89469910]
[161.69465637 -132.23454285]
[166.09565735 -146.57438660]
[170.49665833 -160.91424561]
[174.89764404 -175.25408936]
[179.29864502 -189.59393311]
[183.69964600 -203.93377686]
[168.65667725 -213.38375854]
[156.85639954 -226.64642334]
[149.23094177 -242.66358948]
[146.37966919 -260.15985107]
[148.52210999 -277.74429321]
[155.48112488 -294.02090454]
[166.69740295 -307.69949341]
[181.27456665 -317.69796753]
[198.05064392 -323.22790527]
[215.69082642 -323.85668945]
[219.01309204 -338.48416138]
[222.33535767 -353.11160278]
[225.65760803 -367.73907471]
[228.97987366 -382.36654663]
[232.30212402 -396.99398804]
[233.64036560 -411.93417358]
[232.97058105 -426.91921997]
[232.30079651 -441.90426636]
[231.63101196 -456.88928223]
[230.96122742 -471.87432861]
[230.29144287 -486.85937500]
[215.34973145 -488.48596191]
[200.83146667 -492.37445068]
[187.07695007 -498.43365479]
[174.40864563 -506.52157593]
[163.12348938 -516.44860840]
[153.48602295 -527.98199463]
[145.72218323 -540.85150146]
[140.01393127 -554.75531006]
[136.49511719 -569.36755371]
[135.24818420 -584.34576416]
[136.30239868 -599.33868408]
[139.63302612 -613.99499512]
[145.16200256 -627.97106934]
[152.75971985 -640.93933105]
[162.24807739 -652.59570312]
[173.40464783 -662.66705322]
[185.96791077 -670.91717529]
[199.64335632 -677.15277100]
[214.11042786 -681.22760010]
[229.02998352 -683.04620361]
[244.05229187 -682.56591797]
[258.82519531 -679.79803467]
[273.00244141 -674.80737305]
[286.25164795 -667.71093750]
[298.26223755 -658.67517090]
[308.75268555 -647.91174316]
[317.47708130 -635.67303467]
[324.23089600 -622.24597168]
[328.85580444 -607.94525146]
[331.24340820 -593.10614014]
[331.33776855 -578.07641602]
[329.13659668 -563.20849609]
[324.69155884 -548.85083008]
[318.10684204 -535.34002686]
[309.53677368 -522.99279785]
[299.18225098 -512.09857178]
[287.28604126 -502.91268921]
[274.12695312 -495.65051270]
[260.01348877 -490.48229980]
[245.27647400 -487.52914429]
[245.94625854 -472.54412842]
[246.61604309 -457.55908203]
[247.28582764 -442.57403564]
[247.95561218 -427.58898926]
[248.62539673 -412.60397339]
[255.03076172 -426.16757202]
[265.26815796 -437.13095093]
[278.36181641 -444.44915771]
[293.06372070 -447.42468262]
[307.97259521 -445.77386475]
[321.66744995 -439.65411377]
[332.84292603 -429.64868164]
[340.43386841 -416.71124268]
[343.71676636 -402.07489014]
[342.37869263 -387.13470459]
[336.54721069 -373.31463623]
[326.77813721 -361.93197632]
[314.00259399 -354.07162476]
[299.43823242 -350.48278809]
[284.47329712 -351.50750732]
[270.53408813 -357.04815674]
[258.94921875 -366.57659912]
[250.82292175 -379.18466187]
[246.92959595 -393.67172241]
[243.60733032 -379.04428101]
[240.28506470 -364.41680908]
[236.96281433 -349.78936768]
[233.64054871 -335.16189575]
[230.31829834 -320.53442383]
[241.54193115 -315.24710083]
[251.50762939 -307.84732056]
[259.82284546 -298.62359619]
[266.15942383 -287.93652344]
[270.26663208 -276.20434570]
[271.98104858 -263.88684082]
[271.23309326 -251.46717834]
[268.04977417 -239.43302917]
[262.55377197 -228.25733948]
[254.95877075 -218.37985229]
[245.56103516 -210.18968201]
[234.72792053 -204.01008606]
[222.88349915 -200.08566284]
[210.49198914 -198.57266235]
[198.03948975 -199.53279114]
[193.63848877 -185.19293213]
[189.23750305 -170.85308838]
[184.83650208 -156.51324463]
[180.43550110 -142.17340088]
[176.03450012 -127.83354950]
[171.63349915 -113.49369812]
[167.23249817 -99.15385437]
[162.83151245 -84.81400299]
[158.43051147 -70.47415924]
[171.86968994 -62.84441376]
[183.28500366 -52.41703033]
[192.10475159 -39.71005249]
[197.88629150 -25.35579491]
[200.33824158 -10.06937885]
[199.33520508 5.38688993]
[194.92414856 20.24154282]
[187.32221985 33.75245285]
[176.90603638 45.24390793]
[164.19309998 54.14040375]
[149.81600952 59.99547577]
[134.49101257 62.51408386]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[96.06879425 142.79209900]
[93.18352509 157.51199341]
[90.29824829 172.23188782]
[91.85081482 176.28694153]
[92.01567078 180.22868347]
[90.99883270 183.63478088]
[89.12232971 186.19316101]
[86.77816010 187.73037720]
[83.02185822 202.25242615]
[79.26555634 216.77449036]
[75.50925446 231.29655457]
[81.37065887 242.78596497]
[77.94306183 254.80409241]
[67.58844757 261.05776978]
[63.61635208 275.52230835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 210]
[20 209]
[22 206]
[23 205]
[24 204]
[25 203]
[26 198]
[27 197]
[28 196]
[35 195]
[36 194]
[38 192]
[39 191]
[40 190]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
[63 168]
[73 153]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
