%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[69.84516144 643.13726807]
[54.89660645 644.51837158]
[39.88465881 644.42761230]
[24.95390129 642.86578369]
[10.24812222 639.84802246]
[-4.09104490 635.40338135]
[-17.92550468 629.57458496]
[-31.12201881 622.41790771]
[-43.55349731 614.00213623]
[-55.10021210 604.40838623]
[-65.65096283 593.72900391]
[-75.10412598 582.06689453]
[-83.36867523 569.53442383]
[-90.36501312 556.25213623]
[-96.02575684 542.34808350]
[-100.29637909 527.95611572]
[-103.13577271 513.21490479]
[-104.51657104 498.26629639]
[-104.42548370 483.25433350]
[-102.86338806 468.32360840]
[-99.84533691 453.61788940]
[-95.40038300 439.27880859]
[-89.57133484 425.44448853]
[-82.41434479 412.24810791]
[-73.99832153 399.81680298]
[-64.40433502 388.27026367]
[-53.72477722 377.71972656]
[-42.06249619 368.26681519]
[-29.52981186 360.00250244]
[-16.24742508 353.00643921]
[-2.34325528 347.34597778]
[12.04879093 343.07562256]
[26.79010391 340.23654175]
[41.73871613 338.85604858]
[56.75065994 338.94741821]
[58.31118393 324.02880859]
[59.87170792 309.11019897]
[61.43222809 294.19161987]
[62.99275208 279.27301025]
[64.44216919 264.34320068]
[65.78040314 249.40301514]
[67.11863708 234.46282959]
[68.45687103 219.52264404]
[69.79510498 204.58245850]
[71.13333893 189.64227295]
[64.56237030 176.27546692]
[73.50000763 163.22061157]
[74.83824158 148.28042603]
[66.90200806 161.00898743]
[55.86328125 171.16508484]
[42.51895905 178.01557922]
[27.83238029 181.06588745]
[12.86378098 180.09582520]
[-1.30624413 175.17541504]
[-13.65474796 166.65988159]
[-23.29028130 155.16394043]
[-29.51724625 141.51751709]
[-31.88611412 126.70574951]
[-30.22587395 111.79791260]
[-24.65637970 97.87021637]
[-15.57969666 85.92811584]
[-3.65108013 76.83371735]
[10.26833344 71.24355316]
[25.17368889 69.56118011]
[39.98895645 71.90805817]
[53.64461136 78.11476135]
[65.15483856 87.73321533]
[73.68869781 100.06906891]
[78.63013458 114.23177338]
[79.62233734 129.20007324]
[85.49129486 115.39589691]
[91.36025238 101.59172058]
[90.46381378 98.67866516]
[90.60750580 95.37504578]
[91.93802643 92.06549072]
[94.45792389 89.18341827]
[98.01141357 87.15717316]
[104.69161224 73.72679901]
[111.37180328 60.29642105]
[118.05200195 46.86604309]
[114.69510651 34.41236877]
[120.53554535 23.36370277]
[131.96015930 19.38818359]
[138.83956909 6.05875444]
[138.29312134 -9.75301266]
[151.00578308 -17.51429176]
[157.88520813 -30.84372139]
[164.76461792 -44.17314911]
[171.34463501 -57.65288544]
[177.62200928 -71.27619934]
[183.89936829 -84.89951324]
[190.17672729 -98.52283478]
[196.45408630 -112.14614868]
[202.73144531 -125.76946259]
[189.93043518 -133.62251282]
[178.14808655 -142.93449402]
[167.54983521 -153.57466125]
[158.28445435 -165.39367676]
[150.48200989 -178.22560120]
[144.25202942 -191.89028931]
[139.68199158 -206.19592285]
[136.83604431 -220.94166565]
[135.75413513 -235.92051697]
[136.45144653 -250.92218018]
[138.91821289 -265.73608398]
[143.11978149 -280.15423584]
[148.99717712 -293.97424316]
[156.46788025 -307.00207520]
[165.42703247 -319.05487061]
[175.74885559 -329.96340942]
[187.28845215 -339.57458496]
[199.88380432 -347.75341797]
[213.35810852 -354.38510132]
[227.52220154 -359.37658691]
[242.17726135 -362.65774536]
[257.11752319 -364.18252563]
[272.13323975 -363.92953491]
[287.01367188 -361.90234375]
[301.54986572 -358.12936401]
[315.53778076 -352.66360474]
[328.78103638 -345.58178711]
[341.09375000 -336.98330688]
[352.30300903 -326.98886108]
[362.25152588 -315.73883057]
[370.79956055 -303.39105225]
[377.82717896 -290.11895752]
[383.23571777 -276.10879517]
[386.94918823 -261.55728149]
[388.91552734 -246.66871643]
[389.10711670 -231.65206909]
[387.52124023 -216.71817017]
[384.18017578 -202.07666016]
[379.13082886 -187.93309021]
[372.44409180 -174.48602295]
[364.21380615 -161.92422485]
[354.55554199 -150.42402649]
[343.60488892 -140.14691162]
[331.51553345 -131.23710632]
[318.45724487 -123.81974030]
[304.61334229 -117.99890900]
[290.17810059 -113.85633850]
[275.35424805 -111.45018005]
[260.34985352 -110.81421661]
[245.37556458 -111.95736694]
[230.64158630 -114.86360168]
[216.35476685 -119.49210358]
[210.07739258 -105.86878967]
[203.80003357 -92.24547577]
[197.52267456 -78.62215424]
[191.24531555 -64.99884033]
[184.96795654 -51.37552261]
[185.83940125 -47.95895767]
[185.09930420 -43.95055389]
[182.48750305 -40.11235046]
[178.09403992 -37.29373932]
[171.21463013 -23.96430779]
[164.33522034 -10.63487911]
[165.37373352 4.22347784]
[152.16900635 12.93816662]
[145.28959656 26.26759529]
[147.06008911 43.72704315]
[131.48237610 53.54623795]
[124.80218506 66.97661591]
[118.12198639 80.40699005]
[111.44179535 93.83736420]
[105.16443634 107.46068573]
[99.29547119 121.26486206]
[93.42651367 135.06903076]
[89.77842712 149.61865234]
[88.44018555 164.55883789]
[94.91544342 178.99427795]
[86.07352448 190.98049927]
[84.73529053 205.92068481]
[83.39705658 220.86087036]
[82.05882263 235.80105591]
[80.72058868 250.74124146]
[79.38235474 265.68142700]
[81.73367310 274.50805664]
[77.91135406 280.83352661]
[76.35083771 295.75213623]
[74.79031372 310.67074585]
[73.22978973 325.58935547]
[71.66926575 340.50793457]
[86.37516022 343.52511597]
[100.71450806 347.96920776]
[114.54920197 353.79742432]
[127.74600220 360.95364380]
[140.17781067 369.36889648]
[151.72491455 378.96218872]
[162.27609253 389.64111328]
[171.72972107 401.30282593]
[179.99478149 413.83502197]
[186.99163818 427.11700439]
[192.65293884 441.02081299]
[196.92414856 455.41262817]
[199.76411438 470.15374756]
[201.14552307 485.10229492]
[201.05503845 500.11422729]
[199.49353027 515.04504395]
[196.47607422 529.75085449]
[192.03169250 544.09014893]
[186.20320129 557.92468262]
[179.04673767 571.12133789]
[170.63121033 583.55297852]
[161.03768921 595.09991455]
[150.35855103 605.65087891]
[138.69664001 615.10424805]
[126.16429138 623.36907959]
[112.88218689 630.36566162]
[98.97824097 636.02667236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[47 170]
[48 169]
[70 168]
[71 167]
[72 166]
[77 165]
[78 164]
[79 163]
[80 162]
[83 160]
[84 159]
[86 157]
[87 156]
[88 155]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[94 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
