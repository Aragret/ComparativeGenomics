%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[-26.56405449 413.12615967]
[-18.62597656 425.89950562]
[-13.02674007 439.85729980]
[-9.93649578 454.57534790]
[-9.44915485 469.60644531]
[-11.57952690 484.49377441]
[-16.26287079 498.78494263]
[-23.35686684 512.04565430]
[-32.64593506 523.87292480]
[-43.84779358 533.90734863]
[-56.62202835 541.84393311]
[-70.58044434 547.44158936]
[-85.29885864 550.53021240]
[-100.33000183 551.01580811]
[-115.21709442 548.88378906]
[-129.50772095 544.19879150]
[-142.76762390 537.10333252]
[-154.59384155 527.81286621]
[-164.62699890 516.60992432]
[-172.56217957 503.83477783]
[-178.15824890 489.87570190]
[-181.24514771 475.15695190]
[-181.72908020 460.12573242]
[-179.59533691 445.23889160]
[-174.90875244 430.94879150]
[-167.81173706 417.68969727]
[-158.51998901 405.86453247]
[-147.31585693 395.83267212]
[-134.53982544 387.89892578]
[-120.58013916 382.30444336]
[-105.86102295 379.21920776]
[-90.82977295 378.73696899]
[-75.94316101 380.87240601]
[-61.65359116 385.56060791]
[-54.57648849 372.33508301]
[-47.49938202 359.10955811]
[-50.70415878 347.44525146]
[-44.91634369 336.36892700]
[-32.75530243 332.07104492]
[-25.48207283 318.95233154]
[-18.20884323 305.83364868]
[-10.93561459 292.71496582]
[-11.53127480 277.83227539]
[1.92706466 269.51458740]
[9.20029449 256.39590454]
[8.60463333 241.51321411]
[22.06297302 233.19554138]
[29.33620262 220.07684326]
[36.41330719 206.85131836]
[35.37479782 191.99296570]
[48.57952499 183.27827454]
[55.45893478 169.94883728]
[62.33834839 156.61941528]
[69.21775818 143.28997803]
[76.09717560 129.96055603]
[82.97658539 116.63112640]
[89.85600281 103.30169678]
[95.41522217 89.36989594]
[99.60223389 74.96611786]
[96.02457428 59.55472946]
[107.00695038 49.49308395]
[111.19396210 35.08930206]
[107.61630249 19.67791176]
[118.59867859 9.61626530]
[122.78568268 -4.78751659]
[125.78046417 -19.48552132]
[127.56292725 -34.37923813]
[129.23446655 -49.28581238]
[130.79498291 -64.20441437]
[132.35551453 -79.12302399]
[126.09589386 -93.65325928]
[135.11529541 -105.50651550]
[136.67581177 -120.42512512]
[138.23634338 -135.34373474]
[139.79685974 -150.26232910]
[141.35739136 -165.18093872]
[142.91790771 -180.09954834]
[144.36732483 -195.02935791]
[145.70556641 -209.96954346]
[147.04379272 -224.90971375]
[148.38203430 -239.84989929]
[133.66978455 -242.85484314]
[119.38648987 -247.48817444]
[105.71179199 -253.69161987]
[92.81766510 -261.38717651]
[80.86625671 -270.47802734]
[70.00787354 -280.84988403]
[60.37907410 -292.37231445]
[52.10094452 -304.90039062]
[45.27759171 -318.27655029]
[39.99483109 -332.33261108]
[36.31909180 -346.89175415]
[34.29660797 -361.77093506]
[33.95281219 -376.78298950]
[35.29202652 -391.73913574]
[38.29740906 -406.45129395]
[42.93116379 -420.73443604]
[49.13501740 -434.40896606]
[56.83094788 -447.30285645]
[65.92217255 -459.25399780]
[76.29436493 -470.11206055]
[87.81707001 -479.74050903]
[100.34539032 -488.01828003]
[113.72176361 -494.84121704]
[127.77796936 -500.12356567]
[142.33723450 -503.79885864]
[157.21646118 -505.82089233]
[172.22851562 -506.16424561]
[187.18463135 -504.82458496]
[201.89671326 -501.81878662]
[216.17971802 -497.18460083]
[229.85403442 -490.98031616]
[242.74771118 -483.28399658]
[254.69857788 -474.19241333]
[265.55633545 -463.81991577]
[275.18444824 -452.29690552]
[283.46182251 -439.76834106]
[290.28439331 -426.39178467]
[295.56631470 -412.33541870]
[299.24118042 -397.77603149]
[301.26275635 -382.89675903]
[301.60565186 -367.88467407]
[300.26556396 -352.92858887]
[297.25927734 -338.21661377]
[292.62469482 -323.93374634]
[286.42001343 -310.25961304]
[278.72329712 -297.36618042]
[269.63137817 -285.41558838]
[259.25854492 -274.55813599]
[247.73524475 -264.93035889]
[235.20643616 -256.65335083]
[221.82965088 -249.83120728]
[207.77313232 -244.54969788]
[193.21365356 -240.87527466]
[178.33430481 -238.85412598]
[163.32221985 -238.51167297]
[161.98397827 -223.57148743]
[160.64575195 -208.63130188]
[159.30751038 -193.69111633]
[161.84173584 -186.74853516]
[157.83651733 -178.53901672]
[156.27598572 -163.62042236]
[154.71546936 -148.70181274]
[153.15493774 -133.78320312]
[151.59442139 -118.86460114]
[150.03388977 -103.94599915]
[156.40513611 -90.48283386]
[147.27412415 -77.56250000]
[145.71359253 -62.64389420]
[144.15307617 -47.72528839]
[146.58364868 -40.74573898]
[142.45664978 -32.59677124]
[140.67417908 -17.70305443]
[150.54425049 -28.99826241]
[164.49932861 -34.49879074]
[179.42181396 -32.97581100]
[191.97798157 -24.76955795]
[199.36274719 -11.71333027]
[199.92636108 3.27607727]
[193.54287720 16.84999275]
[181.63839722 25.97596931]
[166.87242126 28.61524010]
[152.54368591 24.17818451]
[141.85328674 13.65605354]
[137.18946838 -0.60050547]
[133.00245667 13.80327702]
[136.87960815 28.18441010]
[125.59774017 39.27630997]
[121.41072845 53.68009186]
[125.28787231 68.06122589]
[114.00601959 79.15312958]
[109.81900787 93.55690765]
[120.92669678 83.47628021]
[135.14855957 78.70774841]
[150.08793640 80.05490112]
[163.22729492 87.29072571]
[172.35243225 99.19584656]
[175.92558289 113.76405334]
[173.34461975 128.54034424]
[165.04447937 141.03463745]
[152.42387390 149.14144897]
[137.60960388 151.49464417]
[123.09813690 147.69763184]
[111.33490753 138.39030457]
[104.30221558 125.14110565]
[103.18542480 110.18111420]
[96.30601501 123.51053619]
[89.42660522 136.83996582]
[82.54718781 150.16940308]
[75.66777802 163.49882507]
[68.78836823 176.82826233]
[61.90895462 190.15768433]
[62.45540237 205.96945190]
[49.74273682 213.73072815]
[49.67243958 220.34182739]
[46.71754456 225.19627380]
[42.45489502 227.35008240]
[35.18166733 240.46876526]
[35.25709915 256.28979492]
[22.31898880 263.66912842]
[15.04575825 276.78781128]
[15.12118912 292.60885620]
[2.18307948 299.98818970]
[-5.09014988 313.10687256]
[-12.36337948 326.22558594]
[-19.63660812 339.34426880]
[-18.88957596 357.74328613]
[-34.27385330 366.18667603]
[-41.35095978 379.41220093]
[-48.42806625 392.63772583]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 210]
[35 209]
[36 208]
[39 206]
[40 205]
[41 204]
[42 203]
[44 201]
[45 200]
[47 198]
[48 197]
[49 194]
[51 192]
[52 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 172]
[59 171]
[61 169]
[62 168]
[64 166]
[65 165]
[66 153]
[67 152]
[68 150]
[69 149]
[70 148]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[78 139]
[79 138]
[80 137]
[81 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
