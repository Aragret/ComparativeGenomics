%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[74.83721161 559.45361328]
[59.85699844 560.69445801]
[44.86711502 559.57647705]
[30.23670387 556.12719727]
[16.32605171 550.43157959]
[3.47771907 542.62982178]
[-7.99189043 532.91412354]
[-17.80032730 521.52374268]
[-25.70605278 508.73916626]
[-31.51437759 494.87518311]
[-35.08226776 480.27322388]
[-36.32186127 465.29290771]
[-35.20262909 450.30313110]
[-31.75214005 435.67300415]
[-26.05536079 421.76281738]
[-18.25257874 408.91513062]
[-8.53594685 397.44631958]
[2.85525513 387.63882446]
[15.64050865 379.73416138]
[29.50496483 373.92697144]
[44.10719681 370.36029053]
[59.08761597 369.12191772]
[60.20326614 354.16348267]
[61.31891632 339.20501709]
[59.59395599 336.99536133]
[58.64034271 333.96926880]
[58.77342224 330.41711426]
[60.19770050 326.73800659]
[62.97236252 323.39807129]
[64.97637939 308.53253174]
[66.98039246 293.66699219]
[61.01282883 280.02011108]
[70.52448273 267.37738037]
[72.52849579 252.51184082]
[74.53250885 237.64631653]
[76.53652191 222.78077698]
[78.54053497 207.91525269]
[80.43383026 193.03521729]
[82.21629333 178.14151001]
[83.99875641 163.24778748]
[81.67237091 156.23281860]
[85.92024231 148.14620972]
[87.92425537 133.28067017]
[81.95669556 119.63378906]
[91.46834564 106.99104309]
[78.13905334 113.87071991]
[64.38790131 107.87857819]
[60.35172272 93.43180084]
[69.00584412 81.18002319]
[83.97076416 80.15478516]
[94.21440125 91.11029053]
[89.50040436 76.00768280]
[99.70401001 65.15707397]
[102.80812073 50.48177338]
[105.91223145 35.80646896]
[109.01634216 21.13116837]
[112.12045288 6.45586586]
[115.22456360 -8.21943665]
[105.52671814 3.22398448]
[92.67248535 10.95499992]
[78.01838684 14.15773869]
[63.11091995 12.49420547]
[49.52329636 6.13995981]
[38.68944931 -4.23442173]
[31.75270462 -17.53410530]
[29.44511223 -32.35554123]
[32.01019669 -47.13459396]
[39.17726135 -60.31158829]
[50.18994522 -70.49592590]
[63.88605499 -76.61283875]
[78.82021332 -78.01677704]
[93.41636658 -74.55959320]
[106.13417053 -66.60613251]
[115.63146210 -54.99573135]
[120.90599060 -40.95367432]
[121.40108490 -25.96165657]
[128.08128357 -39.39203262]
[121.07196808 -53.10974884]
[123.45623016 -68.14865875]
[134.11271667 -78.77424622]
[148.80670166 -81.06002808]
[155.48690796 -94.49040985]
[162.16709900 -107.92078400]
[158.81019592 -120.37445831]
[164.65065002 -131.42312622]
[176.07525635 -135.39865112]
[182.95466614 -148.72807312]
[189.83407593 -162.05749512]
[190.98898315 -171.11863708]
[196.91644287 -175.53303528]
[203.99354553 -188.75857544]
[211.07064819 -201.98410034]
[218.14775085 -215.20962524]
[225.22485352 -228.43515015]
[231.50221252 -242.05847168]
[236.95758057 -256.03128052]
[242.41293335 -270.00405884]
[229.35874939 -277.44757080]
[217.52751160 -286.71255493]
[207.17141724 -297.60150146]
[198.51119995 -309.88232422]
[191.73146057 -323.29324341]
[186.97669983 -337.54843140]
[184.34828186 -352.34402466]
[183.90220642 -367.36462402]
[185.64801025 -382.29013062]
[189.54846191 -396.80233765]
[195.52043152 -410.59194946]
[203.43661499 -423.36502075]
[213.12828064 -434.84933472]
[224.38887024 -444.80007935]
[236.97834778 -453.00512695]
[250.62835693 -459.28964233]
[265.04797363 -463.51962280]
[279.92980957 -465.60491943]
[294.95669556 -465.50106812]
[309.80831909 -463.21032715]
[324.16809082 -458.78149414]
[337.72994995 -452.30895996]
[350.20483398 -443.93069458]
[361.32684326 -433.82531738]
[370.85888672 -422.20819092]
[378.59780884 -409.32690430]
[384.37863159 -395.45608521]
[388.07818604 -380.89135742]
[389.61755371 -365.94317627]
[388.96395874 -350.93014526]
[386.13131714 -336.17230225]
[381.18002319 -321.98419189]
[374.21560669 -308.66824341]
[365.38650513 -296.50827026]
[354.88092041 -285.76345825]
[342.92279053 -276.66287231]
[329.76699829 -269.40045166]
[315.69393921 -264.13104248]
[301.00360107 -260.96688843]
[286.00909424 -259.97549438]
[271.03005981 -261.17797852]
[256.38574219 -264.54870605]
[250.93037415 -250.57591248]
[245.47502136 -236.60310364]
[258.78018188 -243.52931213]
[273.63201904 -241.42628479]
[284.49118042 -231.07836914]
[287.30743408 -216.34512329]
[281.03039551 -202.72166443]
[268.00125122 -195.28919983]
[253.07954407 -196.81985474]
[241.83071899 -206.74275208]
[238.45037842 -221.35804749]
[231.37327576 -208.13252258]
[224.29617310 -194.90699768]
[217.21907043 -181.68145752]
[210.14196777 -168.45593262]
[203.16351318 -155.17808533]
[196.28410339 -141.84866333]
[189.40467834 -128.51922607]
[191.17518616 -111.05978394]
[175.59747314 -101.24058533]
[168.91728210 -87.81021118]
[162.23709106 -74.37983704]
[169.27957153 -61.28245544]
[167.23518372 -46.37324524]
[156.68032837 -35.39834976]
[141.51165771 -32.71183777]
[134.83145142 -19.28146172]
[129.89985657 -5.11532640]
[126.79575348 9.55997658]
[123.69164276 24.23527908]
[120.58753204 38.91057968]
[117.48342133 53.58588409]
[114.37931061 68.26118469]
[119.31533813 82.31411743]
[108.88970947 94.21440125]
[106.33387756 108.99505615]
[112.15809631 123.70522308]
[102.78977966 135.28468323]
[100.78576660 150.15022278]
[98.89247894 165.03025818]
[97.11000824 179.92396545]
[95.32754517 194.81768799]
[97.41501617 203.71040344]
[93.40606689 209.91926575]
[91.40205383 224.78479004]
[89.39804077 239.65032959]
[87.39402008 254.51585388]
[85.39000702 269.38137817]
[91.21423340 284.09155273]
[81.84591675 295.67102051]
[79.84190369 310.53652954]
[77.83789062 325.40206909]
[76.27736664 340.32067871]
[75.16172028 355.27911377]
[74.04607391 370.23757935]
[88.67705536 373.68444824]
[102.58864594 379.37777710]
[115.43826294 387.17739868]
[126.90947723 396.89117432]
[136.71978760 408.27996826]
[144.62762451 421.06326294]
[150.43823242 434.92626953]
[154.00854492 449.52761841]
[155.25061035 464.50772095]
[154.13385010 479.49771118]
[150.68577576 494.12841797]
[144.99128723 508.03952026]
[137.19062805 520.88848877]
[127.47589111 532.35888672]
[116.08630371 542.16827393]
[103.30235291 550.07507324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 194]
[23 193]
[24 192]
[29 191]
[30 190]
[31 189]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 181]
[39 180]
[40 179]
[42 178]
[43 177]
[45 175]
[51 174]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[58 167]
[76 166]
[77 165]
[81 161]
[82 160]
[83 159]
[86 157]
[87 156]
[88 155]
[90 154]
[91 153]
[92 152]
[93 151]
[94 150]
[95 141]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
