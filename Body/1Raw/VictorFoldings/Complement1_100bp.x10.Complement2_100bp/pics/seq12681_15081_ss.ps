%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[23.04232979 831.82904053]
[8.71292210 836.28668213]
[-5.90364599 839.68646240]
[-20.72938919 842.01019287]
[-35.68520355 843.24548340]
[-50.69129181 843.38580322]
[-65.66759491 842.43035889]
[-80.53419495 840.38427734]
[-95.21178436 837.25842285]
[-109.62203979 833.06958008]
[-123.68808746 827.83996582]
[-137.33486938 821.59753418]
[-150.48957825 814.37561035]
[-163.08201599 806.21270752]
[-175.04501343 797.15240479]
[-186.31472778 787.24304199]
[-196.83103943 776.53747559]
[-206.53784180 765.09277344]
[-215.38331604 752.97009277]
[-223.32029724 740.23400879]
[-230.30644226 726.95263672]
[-236.30444336 713.19665527]
[-241.28233337 699.03955078]
[-245.21353149 684.55688477]
[-248.07705688 669.82586670]
[-249.85766602 654.92517090]
[-250.54582214 639.93420410]
[-250.13786316 624.93298340]
[-248.63597107 610.00158691]
[-246.04815674 595.21966553]
[-242.38824463 580.66607666]
[-237.67573547 566.41845703]
[-231.93577576 552.55279541]
[-225.19900513 539.14318848]
[-217.50135803 526.26104736]
[-208.88391113 513.97521973]
[-199.39263916 502.35119629]
[-189.07818604 491.45098877]
[-177.99557495 481.33279419]
[-166.20393372 472.05053711]
[-153.76620483 463.65380859]
[-140.74873352 456.18737793]
[-127.22095490 449.69107056]
[-113.25507355 444.19958496]
[-98.92559052 439.74218750]
[-84.30896759 436.34268188]
[-69.48318481 434.01916504]
[-54.52735138 432.78408813]
[-39.52125931 432.64404297]
[-24.54497719 433.59970093]
[-9.67840672 435.64605713]
[4.99912930 438.77212524]
[9.18614006 424.36834717]
[5.30899668 409.98721313]
[16.59085464 398.89529419]
[6.12109756 386.25167847]
[5.24185419 369.69302368]
[14.49744511 355.73468018]
[30.40534210 349.98709106]
[34.37743759 335.52255249]
[38.34953308 321.05804443]
[42.10583496 306.53598022]
[45.64550781 291.95959473]
[49.18518066 277.38320923]
[52.72485352 262.80685425]
[56.26452637 248.23046875]
[59.80419540 233.65409851]
[48.93257523 223.47207642]
[44.58827591 209.11996460]
[48.03385925 194.42321777]
[58.44146729 183.35169983]
[73.08896637 178.94738770]
[76.62863922 164.37101746]
[80.16831207 149.79464722]
[83.70798492 135.21826172]
[87.24765778 120.64189148]
[90.78733063 106.06552124]
[76.81463623 111.52114868]
[63.76149368 104.13092804]
[61.25019073 89.34264374]
[71.13196564 78.05767059]
[86.12233734 78.59487152]
[95.17063904 90.55662537]
[99.78464508 76.28389740]
[104.39865875 62.01116180]
[100.12649536 44.09943008]
[113.59938812 32.85451508]
[118.00038910 18.51466942]
[105.85867310 3.71891952]
[105.09371948 -15.25538921]
[115.83378601 -30.73374939]
[133.59025574 -36.56475449]
[137.34655762 -51.08681107]
[140.99464417 -65.63643646]
[136.73240662 -80.87270355]
[147.25454712 -91.41469574]
[150.79421997 -105.99107361]
[154.33389282 -120.56745148]
[157.87356567 -135.14382935]
[144.29846191 -141.65615845]
[132.37425232 -150.84890747]
[122.62218475 -162.32022095]
[115.46859741 -175.56860352]
[111.22620392 -190.01490784]
[110.08046722 -205.02760315]
[112.08146667 -219.95039368]
[117.14173889 -234.13092041]
[125.04006958 -246.94927979]
[135.43116760 -257.84509277]
[147.86079407 -266.34204102]
[161.78555298 -272.06869507]
[176.59674072 -274.77468872]
[191.64686584 -274.34173584]
[206.27799988 -270.78875732]
[219.85054016 -264.27108765]
[231.77113342 -255.07365417]
[241.51869202 -243.59851074]
[248.66706848 -230.34730530]
[252.90377808 -215.89932251]
[254.04360962 -200.88618469]
[252.03672791 -185.96418762]
[246.97088623 -171.78564453]
[239.06752014 -158.97041321]
[228.67213440 -148.07868958]
[216.23916626 -139.58662415]
[202.31214905 -133.86544800]
[187.49989319 -131.16528320]
[172.44993591 -131.60415649]
[168.91026306 -117.02777863]
[165.37059021 -102.45140076]
[161.83091736 -87.87502289]
[166.34635925 -73.68135834]
[155.57102966 -62.09675980]
[157.04733276 -54.85505676]
[151.86862183 -47.33051300]
[148.11231995 -32.80845261]
[156.70616150 -25.69531631]
[162.04930115 -15.84397411]
[163.33616638 -4.65939617]
[160.34281921 6.24696016]
[153.46476746 15.28932667]
[143.66520691 21.13817978]
[132.34024048 22.91566658]
[127.93923950 37.25551605]
[133.32781982 48.08555603]
[129.77862549 60.06833649]
[118.67138672 66.62516785]
[114.05738068 80.89790344]
[109.44337463 95.17063904]
[105.36370850 109.60519409]
[101.82403564 124.18156433]
[98.28436279 138.75793457]
[94.74468994 153.33432007]
[91.20501709 167.91069031]
[87.66534424 182.48706055]
[98.66159058 193.11860657]
[102.83238983 207.73030090]
[99.15390015 222.37048340]
[88.71115875 233.13175964]
[74.38056946 237.19377136]
[70.84089661 251.77014160]
[67.30123138 266.34652710]
[63.76155472 280.92288208]
[60.22188187 295.49926758]
[56.68220901 310.07565308]
[58.17397308 316.51663208]
[56.44807053 321.93124390]
[52.81405640 325.03012085]
[48.84196091 339.49465942]
[44.86986542 353.95916748]
[54.25477982 364.05444336]
[57.40098572 377.36306763]
[53.59077454 390.38427734]
[43.92202377 399.74694824]
[30.99463654 403.08230591]
[34.57229614 418.49371338]
[23.58992195 428.55535889]
[19.40291214 442.95913696]
[33.46904373 448.18850708]
[47.11592484 454.43069458]
[60.27075195 461.65240479]
[72.86332703 469.81509399]
[84.82646942 478.87518311]
[96.09635162 488.78439331]
[106.61283875 499.48980713]
[116.31981659 510.93432617]
[125.16550446 523.05688477]
[133.10269165 535.79278564]
[140.08905029 549.07409668]
[146.08728027 562.82995605]
[151.06539917 576.98693848]
[154.99684143 591.46960449]
[157.86061096 606.20056152]
[159.64144897 621.10125732]
[160.32986450 636.09216309]
[159.92214966 651.09338379]
[158.42050171 666.02484131]
[155.83294678 680.80682373]
[152.17324829 695.36047363]
[147.46098328 709.60815430]
[141.72125244 723.47387695]
[134.98469543 736.88360596]
[127.28726196 749.76586914]
[118.67002106 762.05181885]
[109.17893982 773.67602539]
[98.86466217 784.57641602]
[87.78221893 794.69476318]
[75.99073792 803.97723389]
[63.55314255 812.37414551]
[50.53578568 819.84082031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 178]
[53 177]
[55 175]
[59 170]
[60 169]
[61 168]
[62 165]
[63 164]
[64 163]
[65 162]
[66 161]
[67 160]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[83 149]
[84 148]
[85 147]
[87 144]
[88 143]
[92 136]
[93 135]
[94 133]
[96 131]
[97 130]
[98 129]
[99 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
