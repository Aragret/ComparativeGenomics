%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[38.48096085 541.09014893]
[28.73488426 552.54101562]
[17.19368553 562.17993164]
[4.18942642 569.72955322]
[-9.90373516 574.97271729]
[-24.68030930 577.75854492]
[-39.71514893 578.00689697]
[-54.57566452 575.71057129]
[-68.83429718 570.93566895]
[-82.08078766 563.81964111]
[-93.93402100 554.56713867]
[-104.05294800 543.44439697]
[-112.14642334 530.77142334]
[-117.98159027 516.91290283]
[-121.39055634 502.26754761]
[-122.27523804 487.25668335]
[-120.61017609 472.31228638]
[-116.44329071 457.86425781]
[-109.89446259 444.32836914]
[-101.15210724 432.09399414]
[-90.46777344 421.51321411]
[-78.14886475 412.89044189]
[-64.54981995 406.47372437]
[-50.06191635 402.44775391]
[-35.10199356 400.92828369]
[-20.10048103 401.95910645]
[-16.56080818 387.38275146]
[-13.02113533 372.80636597]
[-9.48146343 358.22998047]
[-5.94179058 343.65362549]
[-2.40211821 329.07723999]
[1.13755417 314.50085449]
[-3.37787390 300.30718994]
[7.39745188 288.72259521]
[10.93712425 274.14624023]
[0.29063454 284.71279907]
[-13.70410824 290.11160278]
[-28.68874359 289.43286133]
[-42.13809967 282.79095459]
[-51.78572083 271.30517578]
[-56.00581360 256.91104126]
[-54.08722305 242.03425598]
[-46.35325623 229.18179321]
[-34.10723114 220.51953125]
[-19.41281509 217.50720215]
[-4.74627304 220.65245056]
[7.42082214 229.42523193]
[15.03810215 242.34719849]
[16.82177734 257.24240112]
[23.09913826 243.61909485]
[29.37649918 229.99577332]
[28.59239197 225.28469849]
[30.75942802 220.03103638]
[36.04893494 216.06459045]
[42.72912979 202.63421631]
[49.40932465 189.20384216]
[56.08951950 175.77346802]
[62.76971436 162.34309387]
[69.24920654 148.81474304]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.12747192 44.90789413]
[123.40483856 31.28458023]
[121.29141998 12.99209595]
[136.00509644 3.42785716]
[142.07893372 -10.28740978]
[148.15275574 -24.00267601]
[154.22659302 -37.71794128]
[152.73999023 -53.46915054]
[164.96815491 -61.97334290]
[171.04197693 -75.68860626]
[177.11581421 -89.40387726]
[169.72691345 -98.16848755]
[166.15841675 -109.00852203]
[166.88949585 -120.34596252]
[171.77632141 -130.54536438]
[180.07836914 -138.14976501]
[190.57035828 -142.08879089]
[201.72309875 -141.82923889]
[208.40328979 -155.25961304]
[215.08348083 -168.68998718]
[221.76367188 -182.12036133]
[213.73593140 -197.00831604]
[216.14007568 -213.58303833]
[227.83259583 -225.34088135]
[244.06498718 -227.78770447]
[243.04800415 -243.57618713]
[255.52395630 -251.71253967]
[262.00344849 -265.24087524]
[268.48294067 -278.76922607]
[255.81800842 -286.84121704]
[244.21842957 -296.38095093]
[233.85333252 -307.24935913]
[224.87388611 -319.28793335]
[217.41104126 -332.32107544]
[211.57360840 -346.15878296]
[207.44674683 -360.59921265]
[205.09060669 -375.43182373]
[204.53956604 -390.44027710]
[205.80165100 -405.40573120]
[208.85845947 -420.10992432]
[213.66542053 -434.33840942]
[220.15243530 -447.88375854]
[228.22489929 -460.54837036]
[237.76507568 -472.14761353]
[248.63386536 -482.51229858]
[260.67276001 -491.49130249]
[273.70620728 -498.95364380]
[287.54412842 -504.79055786]
[301.98471069 -508.91690063]
[316.81741333 -511.27246094]
[331.82586670 -511.82296753]
[346.79125977 -510.56030273]
[361.49536133 -507.50292969]
[375.72369385 -502.69543457]
[389.26876831 -496.20794678]
[401.93310547 -488.13500977]
[413.53198242 -478.59439087]
[423.89624023 -467.72518921]
[432.87478638 -455.68597412]
[440.33666992 -442.65225220]
[446.17306519 -428.81411743]
[450.29885864 -414.37338257]
[452.65386963 -399.54058838]
[453.20379639 -384.53210449]
[451.94058228 -369.56674194]
[448.88269043 -354.86279297]
[444.07464600 -340.63464355]
[437.58663940 -327.08978271]
[429.51321411 -314.42578125]
[419.97216797 -302.82723999]
[409.10260010 -292.46337891]
[397.06304932 -283.48529053]
[384.02905273 -276.02389526]
[370.19067383 -270.18801880]
[355.74978638 -266.06277466]
[340.91693115 -263.70831299]
[325.90841675 -263.15893555]
[310.94311523 -264.42269897]
[296.23925781 -267.48117065]
[282.01129150 -272.28973389]
[275.53179932 -258.76138306]
[269.05230713 -245.23303223]
[270.53274536 -230.41218567]
[257.59332275 -221.30821228]
[265.00708008 -210.20512390]
[265.97415161 -196.78092957]
[260.13531494 -184.53439331]
[248.91911316 -176.71035767]
[235.19404602 -175.44017029]
[228.51385498 -162.00979614]
[221.83366394 -148.57940674]
[215.15347290 -135.14903259]
[224.74356079 -119.10774994]
[222.71151733 -100.37810516]
[209.69851685 -86.54801941]
[190.83108521 -83.33003998]
[184.75724792 -69.61477661]
[178.68341064 -55.89950562]
[180.60446167 -41.12930679]
[167.94186401 -31.64410973]
[161.86802673 -17.92884254]
[155.79418945 -4.21357584]
[149.72035217 9.50169086]
[153.78381348 20.89532661]
[148.83584595 32.37145233]
[137.02815247 37.56193924]
[130.75079346 51.18525696]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[82.87252808 155.09210205]
[83.09749603 161.69975281]
[80.36231232 166.68128967]
[76.20008850 169.02328491]
[69.51989746 182.45365906]
[62.83969879 195.88403320]
[56.15950394 209.31440735]
[49.47930908 222.74478149]
[42.99981308 236.27313232]
[36.72245407 249.89645386]
[30.44509315 263.51977539]
[25.51350021 277.68591309]
[21.97382736 292.26226807]
[26.23607445 307.49853516]
[15.71392918 318.04052734]
[12.17425728 332.61691284]
[8.63458443 347.19329834]
[5.09491205 361.76965332]
[1.55523980 376.34603882]
[-1.98443270 390.92242432]
[-5.52410507 405.49877930]
[8.27943325 411.46289062]
[20.87639046 419.67413330]
[31.90432930 429.89630127]
[41.04595184 441.83526611]
[48.03823853 455.14749146]
[52.68000412 469.45001221]
[54.83769608 484.33129883]
[54.44923782 499.36315918]
[51.52579880 514.11315918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[34 193]
[35 192]
[49 191]
[50 190]
[51 189]
[54 188]
[55 187]
[56 186]
[57 185]
[58 184]
[59 181]
[60 180]
[61 179]
[62 178]
[64 176]
[65 175]
[66 174]
[67 173]
[68 172]
[70 169]
[71 168]
[72 167]
[73 166]
[75 164]
[76 163]
[77 162]
[84 158]
[85 157]
[86 156]
[87 155]
[91 150]
[93 148]
[94 147]
[95 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
