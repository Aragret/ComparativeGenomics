%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[-76.22795105 438.46200562]
[-73.42032623 453.22463989]
[-72.79216766 468.23873901]
[-74.35686493 483.18429565]
[-78.08106995 497.74273682]
[-83.88539886 511.60375977]
[-91.64613342 524.47186279]
[-101.19785309 536.07287598]
[-112.33695221 546.15942383]
[-124.82601929 554.51647949]
[-138.39883423 560.96606445]
[-152.76609802 565.37054443]
[-167.62156677 567.63610840]
[-182.64859009 567.71447754]
[-197.52688599 565.60400391]
[-211.93931580 561.34960938]
[-225.57865906 555.04199219]
[-238.15422058 546.81561279]
[-249.39791870 536.84582520]
[-259.07012939 525.34509277]
[-266.96466064 512.55859375]
[-272.91326904 498.75888062]
[-276.78912354 484.24008179]
[-278.50961304 469.31167603]
[-278.03811646 454.29183960]
[-275.38461304 439.50073242]
[-270.60571289 425.25363159]
[-263.80325317 411.85418701]
[-255.12225342 399.58807373]
[-244.74772644 388.71667480]
[-232.90081787 379.47177124]
[-219.83403015 372.05038452]
[-205.82589722 366.61068726]
[-191.17500305 363.26867676]
[-176.19363403 362.09555054]
[-161.20109558 363.11633301]
[-146.51698303 366.30923462]
[-132.45428467 371.60623169]
[-125.18105316 358.48754883]
[-117.90782166 345.36883545]
[-110.63459778 332.25015259]
[-103.36136627 319.13146973]
[-96.08813477 306.01275635]
[-108.90032959 313.81326294]
[-123.65218353 316.53039551]
[-138.40283203 313.80673218]
[-151.21156311 306.00054932]
[-160.39318848 294.13894653]
[-164.73970032 279.78250122]
[-163.67922974 264.82000732]
[-157.35131836 251.22012329]
[-146.58848572 240.77207947]
[-132.80679321 234.85050964]
[-117.81945038 234.23451233]
[-103.59829712 239.00512695]
[-92.01436615 248.53469849]
[-84.59173584 261.56942749]
[-82.30697632 276.39440918]
[-85.46159363 291.06134033]
[-75.46341705 279.87936401]
[-65.46524811 268.69738770]
[-55.46707535 257.51541138]
[-45.46890259 246.33343506]
[-45.29957962 242.81155396]
[-43.41598129 239.19670105]
[-39.79300308 236.29371643]
[-34.76591873 234.88819885]
[-24.27841568 224.16381836]
[-13.79091549 213.43943787]
[-3.30341411 202.71505737]
[-3.12490201 190.61982727]
[5.52463913 181.59933472]
[18.40199280 180.86683655]
[29.04800224 170.29978943]
[39.69401169 159.73274231]
[50.34001923 149.16569519]
[60.33819199 137.98371887]
[69.65307617 126.22646332]
[78.96795654 114.46921539]
[88.28283691 102.71195984]
[97.42163849 90.81732941]
[106.38233948 78.78794861]
[113.94671631 65.83495331]
[120.02055359 52.11968613]
[126.09438324 38.40441895]
[132.16821289 24.68915176]
[138.24205017 10.97388458]
[144.31588745 -2.74138165]
[148.71688843 -17.08122826]
[151.38267517 -31.84244537]
[154.04847717 -46.60366440]
[156.71426392 -61.36487961]
[157.82992554 -76.32333374]
[157.38331604 -91.31668091]
[156.93670654 -106.31003571]
[148.79196167 -119.87371826]
[156.14688110 -132.82571411]
[141.92369080 -138.18942261]
[130.83920288 -148.59146118]
[124.58370972 -162.44560242]
[124.11112976 -177.63919067]
[129.49354553 -191.85531616]
[139.91015625 -202.92611694]
[153.77250671 -209.16337585]
[168.96670532 -209.61596680]
[183.17573547 -204.21485901]
[194.23281860 -193.78369141]
[200.45184326 -179.91314697]
[200.88444519 -164.71836853]
[195.46466064 -150.51644897]
[185.01895142 -139.47309875]
[171.14024353 -133.27232361]
[179.25305176 -120.78105927]
[171.93005371 -106.75663757]
[172.37666321 -91.76329041]
[172.82327271 -76.76994324]
[180.05451965 -89.91181946]
[191.71633911 -99.34591675]
[206.07873535 -103.67274475]
[221.01115417 -102.25044250]
[234.29844666 -95.29000092]
[243.96952820 -83.82395935]
[248.58976746 -69.55323792]
[247.47373962 -54.59481049]
[240.78704834 -41.16767502]
[229.52157593 -31.26366425]
[215.34852600 -26.35198021]
[200.37037659 -27.16124153]
[186.80903625 -33.57139969]
[176.67626953 -44.63154602]
[171.47549438 -58.69908524]
[168.80969238 -43.93786621]
[166.14389038 -29.17665100]
[163.47810364 -14.41543293]
[172.95350647 -26.04369926]
[185.79899597 -33.78925705]
[200.50546265 -36.74216461]
[215.34523010 -34.55552292]
[228.57492065 -27.48620987]
[238.64033508 -16.36472321]
[244.35899353 -2.49760675]
[245.05908203 12.48604774]
[240.65834045 26.82597351]
[231.67376709 38.83753204]
[219.16087341 47.10961533]
[204.58964539 50.67042923]
[189.67190552 49.10165024]
[176.16017151 42.58758163]
[165.64179993 31.89348602]
[159.35244751 18.27569580]
[158.03115845 3.33245230]
[151.95732117 17.04771996]
[145.88348389 30.76298523]
[139.80964661 44.47825241]
[133.73582458 58.19351959]
[127.66198730 71.90878296]
[139.72715759 62.99635315]
[154.17778015 58.97394562]
[169.11259460 60.37078094]
[182.56669617 67.00307465]
[192.76994324 77.99823761]
[198.37994385 91.90967560]
[198.65858459 106.90708160]
[193.56922913 121.01730347]
[183.78144836 132.38389587]
[170.58300781 139.51138306]
[155.71037292 141.46203613]
[141.12031555 137.97918701]
[128.73240662 129.52108765]
[120.17646790 117.20054626]
[116.57819366 102.63851929]
[118.41171265 87.74864960]
[109.45101929 99.77802277]
[109.01510620 105.00525665]
[105.68150330 109.61615753]
[100.04009247 112.02684021]
[90.72520447 123.78409576]
[81.41032410 135.54135132]
[72.09544373 147.29859924]
[86.84719849 144.58094788]
[100.42838287 150.94895935]
[107.77353668 164.02752686]
[106.14310455 178.93864441]
[96.14519501 190.12086487]
[81.50878906 193.40347290]
[67.69289398 187.56214905]
[59.85050201 174.77555847]
[60.90706635 159.81169128]
[50.26105881 170.37873840]
[39.61504745 180.94580078]
[28.96903992 191.51284790]
[24.55059052 209.38905334]
[7.42096567 213.20256042]
[-3.06653547 223.92694092]
[-13.55403709 234.65132141]
[-24.04153824 245.37570190]
[-34.28693008 256.33160400]
[-44.28510284 267.51358032]
[-54.28327179 278.69555664]
[-64.28144836 289.87753296]
[-74.27961731 301.05950928]
[-82.96944427 313.28598022]
[-90.24266815 326.40469360]
[-97.51589966 339.52337646]
[-104.78913116 352.64208984]
[-112.06236267 365.76077271]
[-119.33558655 378.87945557]
[-107.39289093 388.00030518]
[-96.90553284 398.76287842]
[-88.09704590 410.93780518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 207]
[39 206]
[40 205]
[41 204]
[42 203]
[43 202]
[59 201]
[60 200]
[61 199]
[62 198]
[63 197]
[67 196]
[68 195]
[69 194]
[70 193]
[73 191]
[74 190]
[75 189]
[76 188]
[77 179]
[78 178]
[79 177]
[80 176]
[81 173]
[82 172]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 134]
[90 133]
[91 132]
[92 131]
[93 116]
[94 115]
[95 114]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
