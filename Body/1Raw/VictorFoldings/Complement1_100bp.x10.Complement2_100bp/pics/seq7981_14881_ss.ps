%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[202.02616882 757.54882812]
[210.07470703 744.78625488]
[221.15284729 734.54235840]
[234.50527954 727.51562500]
[231.18302917 712.88818359]
[220.81900024 702.19067383]
[225.30761719 687.01959229]
[221.98536682 672.39215088]
[218.66310120 657.76464844]
[204.06260681 649.41815186]
[199.93493652 632.76647949]
[209.30836487 617.99633789]
[205.76869202 603.41992188]
[202.22901917 588.84356689]
[198.68934631 574.26721191]
[195.14967346 559.69079590]
[191.61000061 545.11444092]
[181.08786011 534.57244873]
[185.35009766 519.33618164]
[181.81042480 504.75979614]
[178.27075195 490.18344116]
[174.73107910 475.60705566]
[171.19140625 461.03067017]
[167.65173340 446.45431519]
[164.11206055 431.87792969]
[160.57238770 417.30154419]
[157.03271484 402.72518921]
[143.40411377 402.26589966]
[130.34814453 398.28601074]
[118.75915527 391.05126953]
[109.43281555 381.05053711]
[103.01144409 368.96295166]
[99.93981934 355.61160278]
[100.43434143 341.90762329]
[104.46781158 328.78802490]
[111.77085114 317.15148926]
[121.84986877 307.79693604]
[134.02041626 301.36865234]
[130.91630554 286.69332886]
[127.81219482 272.01803589]
[124.70808411 257.34274292]
[121.60397339 242.66743469]
[118.49986267 227.99212646]
[115.39575195 213.31683350]
[112.29164124 198.64152527]
[109.18753052 183.96621704]
[106.08341980 169.29092407]
[95.87982178 158.44030762]
[100.59381866 143.33770752]
[97.48970795 128.66239929]
[94.74985504 126.44303894]
[92.94884491 122.78634644]
[92.75053406 118.14803314]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[83.41667938 88.61205292]
[74.55461884 100.71427917]
[62.42336655 109.53657532]
[48.17920685 114.23804474]
[33.17979050 114.37057495]
[18.85477257 109.92154694]
[6.56952238 101.31500244]
[-2.50501060 89.37126923]
[-7.50389862 75.22873688]
[-7.95067978 60.23539352]
[-3.80276966 45.82030106]
[4.54447985 33.35742188]
[16.29546165 24.03462982]
[30.33014679 18.74051857]
[45.31083679 17.97968864]
[59.80967331 21.82465744]
[72.44471741 29.90894699]
[82.01167297 41.46201324]
[87.59893799 55.38380051]
[89.15945435 40.46519470]
[86.93981934 31.60454941]
[90.85588837 25.33667755]
[92.63835144 10.44296074]
[83.14395142 -1.90589154]
[85.16379547 -16.98484612]
[96.99504852 -25.96020317]
[98.77751160 -40.85391998]
[100.55998230 -55.74763870]
[102.34244537 -70.64135742]
[100.49257660 -74.56970978]
[100.03501129 -78.48827362]
[100.79570007 -81.96055603]
[102.47672272 -84.65142822]
[104.70006561 -86.35872650]
[107.36585999 -101.11994934]
[105.81139374 -110.12113953]
[110.18279266 -116.08038330]
[113.06806946 -130.80027771]
[115.95333862 -145.52017212]
[118.06796265 -160.37036133]
[119.40619659 -175.31054688]
[120.74443054 -190.25073242]
[122.08266449 -205.19091797]
[108.34728241 -211.60302734]
[97.63551331 -222.32839966]
[91.24084473 -236.07191467]
[89.93547821 -251.17395020]
[93.87702942 -265.81088257]
[102.58954620 -278.21524048]
[115.02095032 -286.88912964]
[129.67007446 -290.78509521]
[144.76799011 -289.43273926]
[158.49153137 -282.99533081]
[169.18353271 -272.25024414]
[175.55285645 -258.49496460]
[176.83038330 -243.39053345]
[172.86186218 -228.76089478]
[164.12651062 -216.37261963]
[151.67913818 -207.72166443]
[137.02285767 -203.85269165]
[135.68461609 -188.91250610]
[134.34638977 -173.97232056]
[133.00814819 -159.03213501]
[144.46224976 -168.71736145]
[159.46113586 -168.89987183]
[171.14752197 -159.49623108]
[174.17855835 -144.80566406]
[167.16847229 -131.54449463]
[153.32220459 -125.77553558]
[138.97006226 -130.13630676]
[130.67323303 -142.63490295]
[127.78795624 -127.91500092]
[124.90268707 -113.19511414]
[122.12707520 -98.45414734]
[119.46128082 -83.69293213]
[117.23616028 -68.85888672]
[115.45369720 -53.96517181]
[113.67123413 -39.07145309]
[111.88876343 -24.17773819]
[121.26789856 -12.66394234]
[119.67239380 2.46579695]
[107.53206635 12.22542667]
[105.74960327 27.11914444]
[104.07806396 42.02571869]
[102.51753998 56.94432449]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[112.16500854 125.55828857]
[115.26911926 140.23359680]
[125.69474792 152.13388062]
[120.75872803 166.18681335]
[123.86283875 180.86212158]
[126.96694946 195.53741455]
[130.07106018 210.21272278]
[133.17517090 224.88801575]
[136.27928162 239.56332397]
[139.38339233 254.23863220]
[142.48750305 268.91394043]
[145.59161377 283.58923340]
[148.69572449 298.26452637]
[165.07467651 299.82415771]
[180.15498352 306.35668945]
[192.46798706 317.21334839]
[200.81838989 331.32492065]
[204.40034485 347.30694580]
[202.87512207 363.59552002]
[196.40319824 378.60049438]
[185.62741089 390.86053467]
[171.60910034 399.18551636]
[175.14877319 413.76187134]
[178.68844604 428.33825684]
[182.22811890 442.91464233]
[185.76779175 457.49099731]
[189.30746460 472.06738281]
[192.84713745 486.64376831]
[196.38681030 501.22012329]
[199.92648315 515.79650879]
[210.70179749 527.38110352]
[206.18637085 541.57476807]
[209.72604370 556.15112305]
[213.26571655 570.72753906]
[216.80538940 585.30389404]
[220.34506226 599.88024902]
[223.88473511 614.45666504]
[236.11747742 620.09356689]
[242.77301025 631.57897949]
[241.61544800 644.60748291]
[233.29055786 654.44238281]
[236.61282349 669.06988525]
[239.93507385 683.69732666]
[250.53672791 695.44104004]
[245.81048584 709.56591797]
[249.13273621 724.19342041]
[264.21047974 724.76293945]
[278.62673950 729.21636963]
[291.39865112 737.25012207]
[301.65536499 748.31640625]
[308.69754028 761.66070557]
[312.04510498 776.37316895]
[311.46972656 791.45068359]
[307.01071167 805.86523438]
[298.97201538 818.63403320]
[287.90179443 828.88647461]
[274.55477905 835.92352295]
[259.84103394 839.26538086]
[244.76376343 838.68414307]
[230.35092163 834.21960449]
[217.58523560 826.17596436]
[207.33708191 815.10180664]
[200.30519104 801.75207520]
[196.96900940 787.03704834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[7 189]
[8 188]
[9 187]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[49 148]
[50 147]
[54 146]
[56 144]
[57 143]
[76 142]
[77 141]
[79 140]
[80 139]
[83 136]
[84 135]
[85 134]
[86 133]
[91 132]
[92 131]
[94 130]
[95 129]
[96 128]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
