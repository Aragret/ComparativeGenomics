%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[97.86552429 654.81524658]
[85.42260742 646.41418457]
[73.90946198 636.77819824]
[63.44812775 626.00952148]
[54.14950562 614.22222900]
[46.11216736 601.54138184]
[39.42131424 588.10125732]
[34.14786530 574.04443359]
[30.34772873 559.51983643]
[28.06118393 544.68151855]
[27.31247330 529.68676758]
[28.10953331 514.69445801]
[30.44391251 499.86358643]
[34.29086685 485.35134888]
[39.60961151 471.31158447]
[46.34377289 457.89312744]
[54.42195892 445.23822021]
[63.75854111 433.48098755]
[74.25453949 422.74609375]
[85.79869843 413.14730835]
[98.26864624 404.78640747]
[111.53218079 397.75201416]
[125.44870758 392.11871338]
[139.87071228 387.94619751]
[137.20491028 373.18496704]
[134.53910828 358.42373657]
[130.25692749 352.40008545]
[131.94523621 343.42303467]
[129.49949646 328.62374878]
[119.79058075 317.32836914]
[125.17424011 302.45129395]
[122.72851562 287.65203857]
[113.01959229 276.35662842]
[118.40325165 261.47958374]
[115.95752716 246.68029785]
[113.51180267 231.88102722]
[111.06607056 217.08175659]
[97.68942261 210.58535767]
[90.61946869 197.30079651]
[92.75255585 182.22421265]
[103.47815704 171.16674805]
[101.03242493 156.36747742]
[98.58670044 141.56819153]
[96.14097595 126.76892853]
[93.69524384 111.96965790]
[89.33283997 126.32128906]
[82.20739746 139.52084351]
[72.60272980 151.04257202]
[60.90137482 160.42758179]
[47.56940460 167.30206299]
[33.13781738 171.39221191]
[18.18142128 172.53511047]
[3.29592347 170.68525696]
[-10.92579079 165.91630554]
[-23.91727829 158.41822815]
[-35.16109085 148.48963928]
[-44.20939636 136.52603149]
[-50.70179749 123.00386810]
[-54.37970734 108.46175385]
[-55.09663773 93.47889709]
[-52.82403564 78.65205383]
[-47.65241241 64.57177734]
[-39.78775406 51.79887009]
[-29.54330826 40.84207535]
[-17.32710457 32.13780212]
[-3.62571287 26.03273392]
[11.01514721 22.77003479]
[26.01233673 22.47965813]
[40.76852036 25.17316628]
[54.69597244 30.74328232]
[67.23995972 38.96814728]
[77.90086365 49.52016830]
[86.25405884 61.97906113]
[91.96685028 75.84859467]
[94.81131744 90.57219696]
[98.78340912 76.10767365]
[102.75550842 61.64315033]
[101.45617676 55.16061020]
[103.34252930 49.79976273]
[107.06719208 46.81046295]
[111.46819305 32.47061920]
[115.76231384 18.09840393]
[114.57771301 13.92100239]
[114.76518250 9.98026943]
[116.08184814 6.67848015]
[118.17911530 4.29770851]
[120.65107727 2.97576618]
[125.68799591 -11.15326309]
[130.72491455 -25.28229332]
[135.76182556 -39.41132355]
[140.79873657 -53.54035187]
[145.83566284 -67.66938019]
[143.18164062 -83.26639557]
[154.74342346 -92.65651703]
[151.00645447 -110.68750763]
[164.80818176 -121.52629852]
[169.63418579 -135.72875977]
[174.46017456 -149.93121338]
[161.21366882 -157.04315186]
[149.31849670 -166.23852539]
[139.09919739 -177.26647949]
[130.83453369 -189.82614136]
[124.74997711 -203.57489014]
[121.01152802 -218.13764954]
[119.72116852 -233.11712646]
[120.91410065 -248.10467529]
[124.55777740 -262.69143677]
[130.55281067 -276.47946167]
[138.73562622 -289.09259033]
[148.88301086 -300.18676758]
[160.71813965 -309.45928955]
[173.91812134 -316.65719604]
[188.12287903 -321.58416748]
[202.94487000 -324.10577393]
[217.97975159 -324.15319824]
[232.81735229 -321.72518921]
[247.05290222 -316.88793945]
[260.29803467 -309.77343750]
[272.19143677 -300.57577515]
[282.40863037 -289.54586792]
[290.67086792 -276.98458862]
[296.75277710 -263.23468018]
[300.48840332 -248.67120361]
[301.77587891 -233.69148254]
[300.58007812 -218.70414734]
[296.93359375 -204.11810303]
[290.93588257 -190.33123779]
[282.75064087 -177.71966553]
[272.60110474 -166.62747192]
[260.76422119 -157.35722351]
[247.56283569 -150.16183472]
[233.35713196 -145.23760986]
[218.53466797 -142.71885681]
[203.49977112 -142.67433167]
[188.66262817 -145.10520935]
[183.83663940 -130.90275574]
[179.01063538 -116.70030212]
[184.07437134 -105.71462250]
[180.16999817 -93.84282684]
[168.87245178 -87.61959839]
[171.88674927 -73.03319550]
[159.96469116 -62.63246536]
[154.92778015 -48.50343704]
[149.89085388 -34.37440491]
[144.85394287 -20.24537659]
[139.81703186 -6.11634684]
[134.78010559 8.01268291]
[130.16609192 22.28541565]
[131.31758118 29.58581924]
[125.80804443 36.87161636]
[121.40704346 51.21146393]
[117.22003174 65.61524200]
[113.24793243 80.07976532]
[109.27584076 94.54429626]
[108.49451447 109.52393341]
[110.94024658 124.32320404]
[113.38597107 139.12246704]
[115.83169556 153.92173767]
[118.27742767 168.72100830]
[131.99031067 175.73977661]
[138.86061096 189.32846069]
[136.44065857 204.18133545]
[125.86534119 214.63603210]
[128.31106567 229.43530273]
[130.75679016 244.23457336]
[133.20252991 259.03384399]
[143.08638000 271.38778687]
[137.52778625 285.20629883]
[139.97351074 300.00558472]
[149.85737610 312.35952759]
[144.29876709 326.17803955]
[146.74450684 340.97729492]
[149.30033875 355.75796509]
[151.96612549 370.51916504]
[154.63192749 385.28039551]
[169.60237122 384.14480591]
[184.61024475 384.55453491]
[199.49644470 386.50521851]
[214.10316467 389.97622681]
[228.27555847 394.93072510]
[241.86340332 401.31622314]
[254.72267151 409.06500244]
[266.71701050 418.09490967]
[277.71932983 428.31027222]
[287.61294556 439.60275269]
[296.29299927 451.85269165]
[303.66744995 464.93020630]
[309.65820312 478.69665527]
[314.20166016 493.00610352]
[317.24972534 507.70690918]
[318.77005005 522.64318848]
[318.74655151 537.65661621]
[317.17944336 552.58807373]
[314.08535767 567.27923584]
[309.49707031 581.57440186]
[303.46325684 595.32202148]
[296.04785156 608.37640381]
[287.32946777 620.59906006]
[277.40054321 631.86053467]
[266.36630249 642.04138184]
[254.34371948 651.03369141]
[241.46025085 658.74212646]
[227.85247803 665.08502197]
[213.66462708 669.99511719]
[199.04710388 673.42034912]
[184.15487671 675.32440186]
[169.14579773 675.68713379]
[154.17897034 674.50463867]
[139.41307068 671.78948975]
[125.00459290 667.57049561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 175]
[25 174]
[26 173]
[28 172]
[29 171]
[31 169]
[32 168]
[34 166]
[35 165]
[36 164]
[37 163]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[75 154]
[76 153]
[77 152]
[80 151]
[81 150]
[82 148]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
[94 140]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
