%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[66.84737396 254.46350098]
[68.32321167 269.40338135]
[68.30416870 284.41598511]
[66.79042816 299.35211182]
[63.79703140 314.06326294]
[59.35373306 328.40325928]
[53.50469589 342.22958374]
[46.30804443 355.40481567]
[37.83531189 367.79803467]
[28.17069817 379.28601074]
[17.41026497 389.75460815]
[5.66095400 399.09979248]
[-6.96046257 407.22866821]
[-20.32854271 414.06042480]
[-34.31042480 419.52719116]
[-48.76715088 423.57464600]
[-63.55503082 426.16250610]
[-78.52709961 427.26510620]
[-93.53455353 426.87149048]
[-108.42823792 424.98553467]
[-123.06012726 421.62600708]
[-137.28479004 416.82626343]
[-150.96087646 410.63406372]
[-163.95243835 403.11090088]
[-176.13037109 394.33157349]
[-187.37362671 384.38330078]
[-197.57048035 373.36502075]
[-206.61956787 361.38616943]
[-214.43098450 348.56585693]
[-220.92706299 335.03149414]
[-226.04324341 320.91754150]
[-229.72869873 306.36431885]
[-231.94679260 291.51647949]
[-232.67547607 276.52154541]
[-231.90748596 261.52859497]
[-229.65049744 246.68661499]
[-225.92691040 232.14311218]
[-220.77374268 218.04263306]
[-214.24221802 204.52531433]
[-206.39723206 191.72550964]
[-197.31677246 179.77044678]
[-187.09107971 168.77891541]
[-175.82177734 158.86016846]
[-163.62088013 150.11277771]
[-150.60964966 142.62370300]
[-136.91738892 136.46734619]
[-122.68019104 131.70492554]
[-108.03954315 128.38374329]
[-93.14096832 126.53683472]
[-78.13253784 126.18254089]
[-63.16340637 127.32437897]
[-48.38235855 129.95100403]
[-33.93629456 134.03631592]
[-19.96878624 139.53971863]
[-6.61865759 146.40649414]
[5.98141003 154.56842041]
[17.70618820 163.94435120]
[28.19368935 153.21997070]
[38.68119049 142.49559021]
[49.16868973 131.77120972]
[34.37379456 134.24328613]
[20.29067802 129.07939148]
[10.60063076 117.62936401]
[7.83660746 102.88623047]
[12.72111893 88.70378876]
[23.97736359 78.78930664]
[38.66299057 75.73440552]
[52.93920517 80.33762360]
[63.07424545 91.39569855]
[66.41883087 106.01806641]
[62.09916687 120.38172913]
[74.06150055 111.33172607]
[85.81875610 102.01684570]
[90.85643768 88.97409058]
[104.60612488 86.43685150]
[110.28981781 71.67181396]
[125.02571869 69.50328827]
[136.57202148 59.92816925]
[129.42875671 46.68559265]
[125.00782776 32.30843353]
[123.47734070 17.34980011]
[124.89424896 2.38480496]
[129.20223999 -12.01157093]
[136.23394775 -25.28656006]
[145.71745300 -36.93082809]
[157.28683472 -46.49803162]
[170.49623108 -53.62191010]
[184.83706665 -58.03031158]
[199.75762939 -59.55559540]
[214.68428040 -58.14100647]
[229.04348755 -53.84277725]
[242.28393555 -46.82789230]
[253.89761353 -37.36762238]
[265.44390869 -46.94274139]
[271.12759399 -61.70777512]
[285.86349487 -63.87630463]
[297.40979004 -73.45142365]
[308.95611572 -83.02654266]
[320.50241089 -92.60166168]
[311.94964600 -104.93582916]
[304.48886108 -117.95957947]
[298.17526245 -131.57649231]
[293.05566406 -145.68572998]
[289.16787720 -160.18286133]
[286.54077148 -174.96054077]
[285.19375610 -189.90934753]
[285.13681030 -204.91862488]
[286.37036133 -219.87722778]
[288.88525391 -234.67440796]
[292.66287231 -249.20062256]
[297.67529297 -263.34832764]
[303.88534546 -277.01275635]
[311.24710083 -290.09274292]
[319.70602417 -302.49145508]
[329.19949341 -314.11709595]
[339.65722656 -324.88357544]
[351.00180054 -334.71121216]
[363.14920044 -343.52722168]
[376.00949097 -351.26632690]
[389.48748779 -357.87124634]
[403.48339844 -363.29309082]
[417.89358521 -367.49166870]
[432.61135864 -370.43594360]
[447.52774048 -372.10409546]
[462.53231812 -372.48376465]
[477.51397705 -371.57217407]
[492.36181641 -369.37603760]
[506.96591187 -365.91162109]
[521.21813965 -361.20458984]
[535.01293945 -355.28976440]
[548.24816895 -348.21099854]
[560.82592773 -340.02062988]
[572.65301514 -330.77932739]
[583.64190674 -320.55554199]
[593.71118164 -309.42492676]
[602.78637695 -297.46987915]
[610.80023193 -284.77896118]
[617.69342041 -271.44610596]
[623.41491699 -257.57003784]
[627.92242432 -243.25346375]
[631.18249512 -228.60240173]
[633.17095947 -213.72534180]
[633.87322998 -198.73239136]
[633.28399658 -183.73458862]
[631.40759277 -168.84295654]
[628.25805664 -154.16775513]
[623.85858154 -139.81762695]
[618.24176025 -125.89883423]
[611.44921875 -112.51441193]
[603.53118896 -99.76346588]
[594.54632568 -87.74040222]
[584.56121826 -76.53423309]
[573.64965820 -66.22792053]
[561.89257812 -56.89778137]
[549.37689209 -48.61288452]
[536.19531250 -41.43457413]
[522.44549561 -35.41600037]
[508.22915649 -30.60171509]
[493.65158081 -27.02736855]
[478.82070923 -24.71942139]
[463.84634399 -23.69496155]
[448.83932495 -23.96157455]
[433.91079712 -25.51728630]
[419.17126465 -28.35057831]
[404.72985840 -32.44047546]
[390.69348145 -37.75669098]
[377.16610718 -44.25987244]
[364.24786377 -51.90187073]
[352.03436279 -60.62610245]
[340.61608887 -70.36797333]
[330.07751465 -81.05536652]
[318.53121948 -71.48024750]
[306.98492432 -61.90512466]
[295.43862915 -52.33000565]
[290.58081055 -38.24984741]
[275.01904297 -35.39644241]
[263.47271729 -25.82132149]
[270.62063599 -12.65767193]
[275.06433105 1.65216041]
[276.63131714 16.55875015]
[275.25942993 31.48937988]
[270.99957275 45.87003708]
[264.01367188 59.14748764]
[254.56852722 70.81056213]
[243.02574158 80.40982819]
[229.82772827 87.57489777]
[215.48083496 92.02876282]
[200.53591919 93.59844208]
[185.56716919 92.22174835]
[171.15005493 87.94972992]
[157.83923340 80.94478607]
[146.14714050 71.47447205]
[134.60083008 81.04959106]
[129.74301147 95.12974548]
[114.18124390 97.98315430]
[109.14356232 111.02590942]
[95.39387512 113.56314850]
[93.58185577 118.45841980]
[90.39224243 121.83179474]
[86.63543701 123.41339111]
[83.11150360 123.29406738]
[71.14916992 132.34407043]
[59.89307022 142.25871277]
[49.40557098 152.98309326]
[38.91806793 163.70747375]
[28.43056679 174.43185425]
[38.06600189 185.94433594]
[46.50726700 198.35897827]
[53.67046356 211.55244446]
[59.48440933 225.39355469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 206]
[58 205]
[59 204]
[60 203]
[71 202]
[72 201]
[73 197]
[75 195]
[77 193]
[78 192]
[93 177]
[94 176]
[96 174]
[97 173]
[98 172]
[99 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
