%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[85.63529205 616.76019287]
[70.72387695 618.48767090]
[55.71622086 618.81121826]
[40.74420929 617.72802734]
[25.93942070 615.24755859]
[11.43196106 611.39166260]
[-2.65067291 606.19415283]
[-16.18472099 599.70080566]
[-29.05124092 591.96856689]
[-41.13716125 583.06549072]
[-52.33626556 573.06976318]
[-62.55013657 562.06927490]
[-71.68901062 550.16064453]
[-79.67256927 537.44854736]
[-86.43065643 524.04467773]
[-91.90387726 510.06692505]
[-96.04414368 495.63803101]
[-98.81504822 480.88485718]
[-100.19226074 465.93701172]
[-100.16365814 450.92590332]
[-98.72950745 435.98342896]
[-95.90241241 421.24090576]
[-91.70720673 406.82788086]
[-86.18076324 392.87106323]
[-79.37165833 379.49307251]
[-71.33972168 366.81149292]
[-62.15554428 354.93777466]
[-51.89983368 343.97625732]
[-40.66272736 334.02328491]
[-28.54297447 325.16629028]
[-15.64708710 317.48315430]
[-2.08839726 311.04138184]
[12.01393700 305.89758301]
[26.53598213 302.09698486]
[41.35011673 299.67294312]
[56.32614517 298.64678955]
[71.33245850 299.02755737]
[73.11492920 284.13381958]
[66.94484711 270.57730103]
[76.26721191 257.79434204]
[78.04967499 242.90063477]
[79.83214569 228.00691223]
[81.50368500 213.10034180]
[75.13244629 199.63717651]
[84.26346588 186.71684265]
[85.82398987 171.79823303]
[77.82490540 156.17832947]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[97.63335419 42.35549164]
[98.97158813 27.41530609]
[100.30982208 12.47512150]
[101.09114075 -2.50451565]
[93.56016541 -16.41835594]
[101.48609924 -29.02902031]
[101.70942688 -44.02735519]
[101.93275452 -59.02569580]
[102.15608215 -74.02403259]
[87.65781403 -78.17559052]
[74.73828888 -85.93260193]
[64.27508545 -96.76114655]
[56.97713852 -109.91890717]
[53.33666229 -124.50605011]
[53.59599304 -139.52676392]
[57.73144913 -153.95722961]
[65.45535278 -166.81544495]
[76.23604584 -177.22799683]
[89.33447266 -184.48941040]
[103.85483551 -188.10995483]
[104.07816315 -203.10829163]
[104.30149078 -218.10662842]
[104.52481842 -233.10496521]
[104.74814606 -248.10330200]
[102.20426941 -252.66134644]
[101.71233368 -257.27777100]
[102.95097351 -261.16116333]
[105.33129120 -263.76239014]
[106.22410583 -278.73580933]
[107.11692047 -293.70919800]
[92.81849670 -298.50399780]
[80.25822449 -306.83016968]
[70.28897858 -318.11511230]
[63.58583450 -331.58563232]
[60.60034180 -346.32077026]
[61.53012085 -361.31491089]
[66.30580902 -375.54635620]
[74.59615326 -388.04684448]
[85.83103943 -397.96762085]
[99.24063873 -404.63690186]
[113.90818787 -407.60546875]
[114.80101013 -422.57888794]
[115.69382477 -437.55230713]
[116.58663940 -452.52569580]
[117.47945404 -467.49911499]
[103.55924988 -473.49942017]
[92.53289032 -483.90109253]
[85.73186493 -497.44812012]
[83.97742462 -512.50463867]
[87.48143768 -527.25244141]
[95.82077026 -539.91064453]
[107.98840332 -548.95080566]
[122.51504517 -553.28125000]
[137.64653015 -552.37902832]
[151.55564880 -546.35302734]
[162.56282043 -535.93103027]
[169.33886719 -522.37152100]
[171.06556702 -507.31182861]
[167.53437805 -492.57049561]
[159.17173767 -479.92764282]
[146.98745728 -470.90991211]
[132.45286560 -466.60629272]
[131.56004333 -451.63287354]
[130.66722107 -436.65948486]
[129.77441406 -421.68606567]
[128.88159180 -406.71267700]
[143.09246826 -402.02218628]
[155.61453247 -393.80667114]
[165.59091187 -382.62112427]
[172.33706665 -369.22402954]
[175.38778687 -354.52597046]
[174.52920532 -339.52755737]
[169.81387329 -325.25158691]
[161.55751038 -312.67306519]
[150.31790161 -302.65274048]
[136.85722351 -295.87811279]
[122.09033203 -292.81640625]
[121.19751740 -277.84298706]
[120.30469513 -262.86956787]
[119.74649048 -247.87997437]
[119.52316284 -232.88163757]
[119.29983521 -217.88330078]
[119.07650757 -202.88496399]
[118.85317230 -187.88662720]
[133.25930786 -183.83535767]
[146.13572693 -176.18717957]
[156.60162354 -165.45826721]
[163.93927002 -152.37577820]
[167.64323425 -137.82856750]
[167.45523071 -122.80680084]
[163.38204956 -108.33451843]
[155.69558716 -95.39987946]
[144.91462708 -84.88766479]
[131.76986694 -77.51876068]
[117.15441895 -73.80070496]
[116.93109131 -58.80236816]
[116.70776367 -43.80402756]
[116.48443604 -28.80569267]
[124.03138733 -15.96463394]
[116.08947754 -2.28118801]
[128.50680542 -10.69605160]
[142.87258911 -6.38043213]
[148.59689331 7.48435640]
[141.45997620 20.67770767]
[126.72291565 23.47397423]
[115.25000763 13.81335545]
[113.91177368 28.75354004]
[112.57353973 43.69372559]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[111.36118317 153.08430481]
[109.93898773 165.50045776]
[100.74259186 173.35876465]
[99.18206787 188.27735901]
[105.44168091 202.80760193]
[96.42228699 214.66085815]
[98.64192963 223.52151489]
[94.72586060 229.78938293]
[92.94339752 244.68309021]
[91.16092682 259.57681274]
[97.20351410 274.19863892]
[88.00864410 285.91629028]
[86.22618103 300.81002808]
[100.89854431 303.98117065]
[115.20947266 308.51235962]
[129.03321838 314.36373901]
[142.24827576 321.48391724]
[154.73851013 329.81027222]
[166.39416504 339.26968384]
[177.11279297 349.77899170]
[186.80021667 361.24581909]
[195.37127686 373.56942749]
[202.75067139 386.64151001]
[208.87353516 400.34716797]
[213.68606567 414.56594849]
[217.14595032 429.17291260]
[219.22280884 444.03970337]
[219.89837646 459.03564453]
[219.16673279 474.02893066]
[217.03427124 488.88784790]
[213.51977539 503.48178101]
[208.65409851 517.68249512]
[202.48001099 531.36511230]
[195.05177307 544.40948486]
[186.43467712 556.70098877]
[176.70443726 568.13146973]
[165.94656372 578.60064697]
[154.25561523 588.01635742]
[141.73431396 596.29595947]
[128.49272156 603.36663818]
[114.64719391 609.16625977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 182]
[38 181]
[40 179]
[41 178]
[42 177]
[43 175]
[45 173]
[46 172]
[48 169]
[49 168]
[50 167]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 154]
[60 152]
[61 151]
[62 150]
[63 149]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[82 133]
[83 132]
[84 131]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
