%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[87.84510040 609.43878174]
[87.18463898 594.33728027]
[91.00637054 579.71240234]
[98.97048187 566.86468506]
[110.36879730 556.93646240]
[124.18778992 550.81054688]
[122.40531921 535.91680908]
[120.62285614 521.02313232]
[118.84039307 506.12939453]
[117.05792236 491.23568726]
[115.27545929 476.34194946]
[108.34955597 489.64727783]
[96.08660126 498.28558350]
[81.22615814 500.32696533]
[67.08810425 495.31546021]
[56.83089828 484.37060547]
[52.74604034 469.93753052]
[55.74608994 455.24060059]
[65.16083527 443.56317139]
[78.88699341 437.51397705]
[93.85810089 438.44445801]
[106.72958374 446.14672852]
[114.62592316 458.90008545]
[115.29570770 443.91506958]
[115.96549225 428.93002319]
[116.63527679 413.94497681]
[116.85861206 398.94665527]
[116.63527679 383.94830322]
[108.70935059 371.33764648]
[116.24032593 357.42379761]
[116.01699829 342.42547607]
[115.79367065 327.42712402]
[115.57034302 312.42880249]
[115.34701538 297.43045044]
[105.54847717 282.87176514]
[114.65060425 266.86447144]
[114.20399475 251.87112427]
[113.75739288 236.87777710]
[113.31078339 221.88442993]
[111.75026703 206.96582031]
[109.08446503 192.20460510]
[106.41867065 177.44338989]
[103.75287628 162.68217468]
[101.08708191 147.92095947]
[91.21105957 136.77136230]
[96.37263489 121.81580353]
[93.70683289 107.05458069]
[90.18663788 103.16586304]
[89.09580231 97.58164978]
[91.18828583 91.81463623]
[88.96316528 76.98059082]
[86.73804474 62.14654541]
[84.51293182 47.31250381]
[74.81410217 34.81277084]
[80.57781982 21.07855225]
[74.40872192 34.75123215]
[62.97403336 44.45937347]
[48.48162460 48.32847977]
[33.72974396 45.61149597]
[21.56674957 36.83301926]
[14.34112835 23.68804359]
[13.44803238 8.71465492]
[19.05990601 -5.19602060]
[30.09318161 -15.35804844]
[44.41751099 -19.80929947]
[59.26708603 -17.69030952]
[71.77468872 -9.41022015]
[79.52569580 3.43342257]
[72.20271301 -10.59099960]
[80.31552124 -23.08226204]
[80.76212311 -38.07561111]
[81.20873260 -53.06896210]
[81.65533447 -68.06230927]
[70.84371948 -74.33740234]
[63.76704025 -84.55449677]
[61.71780777 -96.73973846]
[65.02439117 -108.57052612]
[73.00019073 -117.81820679]
[84.08513641 -122.76787567]
[84.97795105 -137.74128723]
[85.87076569 -152.71469116]
[86.76358795 -167.68809509]
[87.65640259 -182.66149902]
[88.54921722 -197.63490295]
[89.44203186 -212.60830688]
[80.82054138 -228.87950134]
[91.04819489 -243.13999939]
[91.71797943 -258.12503052]
[92.38776398 -273.11007690]
[93.05755615 -288.09512329]
[93.72734070 -303.08013916]
[94.39712524 -318.06518555]
[94.84372711 -333.05853271]
[95.06705475 -348.05688477]
[95.29038239 -363.05520630]
[95.51371002 -378.05355835]
[95.73703766 -393.05187988]
[95.96036530 -408.05023193]
[81.87975311 -413.71597290]
[70.79933929 -424.08847046]
[64.21767426 -437.76495361]
[63.02486420 -452.89578247]
[67.38223267 -467.43460083]
[76.70047760 -479.41522217]
[89.71938324 -487.21728516]
[104.67825317 -489.78570557]
[119.55402374 -486.77304077]
[132.33485413 -478.58682251]
[141.29226685 -466.33407593]
[145.21482849 -451.67196655]
[143.57205200 -436.58337402]
[136.58609009 -423.10891724]
[125.20176697 -413.07089233]
[110.95870209 -407.82690430]
[110.73537445 -392.82855225]
[110.51204681 -377.83023071]
[110.28871918 -362.83187866]
[110.06539154 -347.83355713]
[109.84206390 -332.83520508]
[112.46663666 -328.84515381]
[112.61252594 -323.16397095]
[109.38216400 -317.39541626]
[108.71237946 -302.41036987]
[108.04259491 -287.42532349]
[107.37281036 -272.44027710]
[106.70301819 -257.45526123]
[106.03323364 -242.47021484]
[113.96217346 -233.33465576]
[113.52680969 -220.84489441]
[104.41543579 -211.71549988]
[103.52262115 -196.74209595]
[102.62980652 -181.76869202]
[101.73699188 -166.79528809]
[100.84417725 -151.82186890]
[99.95135498 -136.84846497]
[99.05854034 -121.87506104]
[113.20906067 -111.30934143]
[118.22863007 -94.21388245]
[111.92628479 -77.38058472]
[96.64868927 -67.61570740]
[96.20207977 -52.62235641]
[95.75547791 -37.62900543]
[95.30886841 -22.63565445]
[102.66380310 -9.68365765]
[94.51905060 3.88002849]
[95.41186523 18.85343361]
[104.95153809 30.29213524]
[99.34697723 45.08738708]
[101.57209015 59.92142868]
[103.79721069 74.75547028]
[106.02232361 89.58951569]
[108.46805573 104.38878632]
[111.13385010 119.15000153]
[121.20054626 131.35542297]
[115.84829712 145.25515747]
[118.51409149 160.01637268]
[121.17989349 174.77760315]
[123.84568787 189.53881836]
[126.51148224 204.30003357]
[133.06750488 190.80860901]
[145.43524170 182.32102966]
[160.38180542 181.05592346]
[174.00018311 187.34399414]
[182.73056030 199.54154968]
[184.29086304 214.46017456]
[178.27320862 228.20018005]
[166.25061035 237.16996765]
[151.36573792 239.02484131]
[137.50946045 233.27996826]
[128.30413818 221.43782043]
[128.75074768 236.43118286]
[129.19734192 251.42453003]
[129.64395142 266.41787720]
[138.47946167 275.81448364]
[138.54278564 288.31167603]
[130.34535217 297.20712280]
[130.56867981 312.20547485]
[130.79200745 327.20379639]
[131.01533508 342.20214844]
[131.23866272 357.20046997]
[139.18057251 370.88391113]
[131.63362122 383.72497559]
[131.85694885 398.72332764]
[134.21505737 402.36929321]
[135.19204712 406.19161987]
[134.90208435 409.73440552]
[133.59564209 412.62573242]
[131.62031555 414.61477661]
[130.95053101 429.59979248]
[130.28074646 444.58483887]
[129.61096191 459.56988525]
[130.16917419 474.55947876]
[131.95164490 489.45321655]
[133.73410034 504.34692383]
[135.51657104 519.24066162]
[137.29904175 534.13433838]
[139.08149719 549.02807617]
[153.95581055 551.72003174]
[167.37506104 558.67810059]
[178.14604187 569.28363037]
[185.31097412 582.59362793]
[188.23278809 597.42443848]
[186.65167236 612.45745850]
[180.70820618 626.35589600]
[170.93089294 637.88391113]
[158.18910217 646.01647949]
[143.61584473 650.03039551]
[128.50695801 649.56878662]
[114.20592499 644.67272949]
[101.98436737 635.77752686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[23 191]
[24 190]
[25 189]
[26 188]
[27 183]
[28 182]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[36 173]
[37 172]
[38 171]
[39 170]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[46 153]
[47 152]
[50 151]
[51 150]
[52 149]
[53 148]
[55 146]
[68 145]
[70 143]
[71 142]
[72 141]
[73 140]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
