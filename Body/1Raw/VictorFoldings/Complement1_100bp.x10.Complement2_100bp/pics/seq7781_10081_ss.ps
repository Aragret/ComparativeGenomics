%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[63.20961380 506.60522461]
[61.63294220 521.55548096]
[57.67836380 536.05920410]
[51.44831467 549.74066162]
[43.10416412 562.24554443]
[32.86204910 573.24987793]
[20.98726463 582.46862793]
[7.78739548 589.66302490]
[-6.39564991 594.64672852]
[-21.19449615 597.29064941]
[-36.22581863 597.52630615]
[-51.10026932 595.34759521]
[-65.43256378 590.81091309]
[-78.85146332 584.03375244]
[-91.00937653 575.19177246]
[-101.59140015 564.51385498]
[-110.32342529 552.27673340]
[-116.97927094 538.79724121]
[-121.38652802 524.42462158]
[-123.43105316 509.53115845]
[-123.05988312 494.50256348]
[-120.28263092 479.72814941]
[-115.17122650 465.59063721]
[-107.85807800 452.45617676]
[-98.53260803 440.66500854]
[-87.43637085 430.52252197]
[-74.85678864 422.29147339]
[-61.11969757 416.18505859]
[-46.58092117 412.36141968]
[-31.61705208 410.91961670]
[-16.61569023 411.89700317]
[-1.96540391 415.26824951]
[3.69738269 401.37820435]
[9.36016941 387.48818970]
[7.00020361 372.78173828]
[19.37478638 362.92373657]
[25.03757286 349.03369141]
[30.70035934 335.14367676]
[28.34039307 320.43722534]
[40.71497726 310.57919312]
[46.37776184 296.68917847]
[50.88539124 282.38250732]
[54.20765305 267.75503540]
[57.52991104 253.12757874]
[60.85216904 238.50010681]
[64.17443085 223.87265015]
[67.49668884 209.24519348]
[70.81894684 194.61773682]
[74.14120483 179.99028015]
[77.46347046 165.36280823]
[80.78572845 150.73535156]
[76.05947876 136.61048889]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[88.79720306 64.24016571]
[74.40825653 60.00246811]
[67.10945892 46.89797974]
[71.08190155 32.43355179]
[84.04998779 24.89506340]
[98.58500671 28.60090446]
[106.36048889 41.42726135]
[110.97450256 27.15452957]
[107.85727692 11.64345264]
[119.13436127 1.91325343]
[123.74836731 -12.35947990]
[120.63114929 -27.87055779]
[131.90823364 -37.60075760]
[136.52223206 -51.87348938]
[141.13624573 -66.14622498]
[145.43037415 -80.51843262]
[149.40246582 -94.98295593]
[153.37455750 -109.44748688]
[139.26873779 -114.57311249]
[125.62110138 -120.81716919]
[112.52015686 -128.13917542]
[100.05088043 -136.49162292]
[88.29413605 -145.82035828]
[77.32617188 -156.06486511]
[67.21812439 -167.15872192]
[58.03553772 -179.02996826]
[49.83797836 -191.60162354]
[42.67860413 -204.79212952]
[36.60384750 -218.51597595]
[31.65310860 -232.68412781]
[27.85849380 -247.20469666]
[25.24461365 -261.98352051]
[23.82842064 -276.92477417]
[23.61909866 -291.93151855]
[24.61800575 -306.90646362]
[26.81866264 -321.75244141]
[30.20679665 -336.37319946]
[34.76043701 -350.67395020]
[40.45004654 -364.56185913]
[47.23873138 -377.94692993]
[55.08245850 -390.74234009]
[63.93036270 -402.86508179]
[73.72505188 -414.23654175]
[84.40301514 -424.78298950]
[95.89498901 -434.43600464]
[108.12645721 -443.13299561]
[121.01807404 -450.81756592]
[134.48625183 -457.43984985]
[148.44361877 -462.95690918]
[162.79968262 -467.33297729]
[177.46130371 -470.53967285]
[192.33343506 -472.55618286]
[207.31959534 -473.36944580]
[222.32258606 -472.97415161]
[237.24513245 -471.37292480]
[251.99044800 -468.57608032]
[266.46289062 -464.60180664]
[280.56860352 -459.47589111]
[294.21609497 -453.23150635]
[307.31686401 -445.90924072]
[319.78598022 -437.55648804]
[331.54251099 -428.22750854]
[342.51025391 -417.98275757]
[352.61804199 -406.88867188]
[361.80038452 -395.01721191]
[369.99765015 -382.44540405]
[377.15673828 -369.25473022]
[383.23120117 -355.53076172]
[388.18161011 -341.36248779]
[391.97592163 -326.84182739]
[394.58947754 -312.06292725]
[396.00534058 -297.12167358]
[396.21432495 -282.11489868]
[395.21508789 -267.14001465]
[393.01409912 -252.29406738]
[389.62564087 -237.67337036]
[385.07168579 -223.37274170]
[379.38177490 -209.48493958]
[372.59280396 -196.10002136]
[364.74877930 -183.30479431]
[355.90060425 -171.18225098]
[346.10568237 -159.81098938]
[335.42749023 -149.26478577]
[323.93530273 -139.61201477]
[311.70364380 -130.91529846]
[298.81185913 -123.23101807]
[285.34353638 -116.60903168]
[271.38604736 -111.09226990]
[257.02987671 -106.71652222]
[242.36817932 -103.51015472]
[227.49600220 -101.49397278]
[212.50982666 -100.68105316]
[197.50683594 -101.07666016]
[182.58433533 -102.67823792]
[167.83908081 -105.47538757]
[163.86698914 -91.01086426]
[159.89489746 -76.54634094]
[161.31173706 -73.31758118]
[161.23510742 -69.24214935]
[159.28407288 -65.02945709]
[155.40898132 -61.53221512]
[150.79496765 -47.25947952]
[146.18095398 -32.98674774]
[149.62820435 -18.49655151]
[138.02110291 -7.74547052]
[133.40708923 6.52726269]
[136.85433960 21.01745796]
[125.24723053 31.76853943]
[120.63322449 46.04127121]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[105.77721405 143.36012268]
[95.41318512 154.05761719]
[92.09092712 168.68507385]
[88.76866913 183.31253052]
[85.44641113 197.93998718]
[82.12415314 212.56745911]
[78.80188751 227.19491577]
[75.47962952 241.82237244]
[72.15737152 256.44982910]
[68.83511353 271.07730103]
[65.51285553 285.70474243]
[76.50445557 275.49768066]
[90.95605469 271.47879028]
[105.63912201 274.54598999]
[117.27342224 284.01397705]
[123.25982666 297.76763916]
[122.26094818 312.73434448]
[114.49994659 325.57049561]
[101.71064758 333.40847778]
[86.75021362 334.49725342]
[72.96084595 328.59356689]
[63.42311859 317.01635742]
[60.26779175 302.35195923]
[54.60500336 316.24200439]
[56.55992889 331.94195557]
[44.59038544 340.80645752]
[38.92760086 354.69647217]
[33.26481247 368.58651733]
[35.21973801 384.28646851]
[23.25019646 393.15097046]
[17.58740997 407.04098511]
[11.92462254 420.93103027]
[24.75603485 428.76370239]
[36.16474152 438.55337524]
[45.85523224 450.04644775]
[53.57649612 462.94522095]
[59.12853622 476.91558838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 205]
[33 204]
[34 203]
[36 201]
[37 200]
[38 199]
[40 197]
[41 196]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[53 173]
[54 172]
[56 170]
[57 169]
[58 168]
[65 167]
[66 166]
[68 164]
[69 163]
[71 161]
[72 160]
[73 159]
[74 155]
[75 154]
[76 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
