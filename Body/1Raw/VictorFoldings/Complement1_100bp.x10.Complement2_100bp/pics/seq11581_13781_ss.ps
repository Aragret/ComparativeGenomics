%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[68.78210449 762.28851318]
[53.77854538 762.37866211]
[38.79280472 761.64215088]
[23.87038994 760.08123779]
[9.05662441 757.70062256]
[-5.60350418 754.50762939]
[-20.06547356 750.51184082]
[-34.28536606 745.72540283]
[-48.21998978 740.16296387]
[-61.82703018 733.84130859]
[-75.06516266 726.77966309]
[-87.89418030 718.99945068]
[-100.27512360 710.52441406]
[-112.17039490 701.38012695]
[-123.54386139 691.59448242]
[-134.36099243 681.19714355]
[-144.58892822 670.21972656]
[-154.19660950 658.69549561]
[-163.15484619 646.65948486]
[-171.43646240 634.14831543]
[-179.01628113 621.19989014]
[-185.87127686 607.85363770]
[-191.98065186 594.14996338]
[-197.32585144 580.13055420]
[-201.89062500 565.83795166]
[-205.66113281 551.31561279]
[-208.62590027 536.60766602]
[-210.77592468 521.75866699]
[-212.10470581 506.81378174]
[-212.60816956 491.81838989]
[-212.28482056 476.81805420]
[-211.13560486 461.85830688]
[-209.16404724 446.98458862]
[-206.37612915 432.24203491]
[-202.78028870 417.67547607]
[-198.38748169 403.32910156]
[-193.21102905 389.24652100]
[-187.26666260 375.47048950]
[-180.57243347 362.04281616]
[-173.14865112 349.00433350]
[-165.01788330 336.39459229]
[-156.20483398 324.25189209]
[-146.73623657 312.61312866]
[-136.64086914 301.51367188]
[-125.94937897 290.98718262]
[-114.69424438 281.06564331]
[-102.90964508 271.77917480]
[-90.63137054 263.15603638]
[-77.89670563 255.22235107]
[-64.74433136 248.00224304]
[-51.21419144 241.51763916]
[-37.34737015 235.78822327]
[-23.18598366 230.83140564]
[-8.77304173 226.66224670]
[5.84768534 223.29338074]
[20.63179398 220.73506165]
[35.53438568 218.99504089]
[50.51020432 218.07862854]
[65.51376343 217.98858643]
[80.49949646 218.72520447]
[82.06002045 203.80659485]
[83.62054443 188.88800049]
[85.18106842 173.96939087]
[86.74159241 159.05078125]
[88.30211639 144.13218689]
[80.30303192 128.51226807]
[91.24282074 113.70003510]
[83.79475403 98.66998291]
[93.59378052 85.05545807]
[94.70942688 70.09700012]
[95.82508087 55.13854980]
[96.94072723 40.18009567]
[98.05637360 25.22164154]
[99.17201996 10.26318836]
[100.28767395 -4.69526482]
[101.40332031 -19.65371895]
[102.51896667 -34.61217117]
[95.82950592 -48.94959641]
[104.49198914 -61.06613922]
[89.72257233 -63.76731873]
[75.32395172 -68.02310944]
[61.45927048 -73.78529358]
[48.28563309 -80.98857880]
[35.95230484 -89.55135345]
[24.59902954 -99.37659454]
[14.35445213 -110.35296631]
[5.33465004 -122.35610199]
[-2.35817599 -135.25000000]
[-8.63685989 -148.88854980]
[-13.43025970 -163.11723328]
[-16.68406105 -177.77482605]
[-18.36139870 -192.69523621]
[-18.44326401 -207.70941162]
[-16.92873192 -222.64721680]
[-13.83496189 -237.33941650]
[-9.19700909 -251.61952209]
[-3.06742454 -265.32574463]
[4.48433828 -278.30276489]
[13.37271214 -290.40353394]
[23.49698448 -301.49096680]
[34.74243927 -311.43942261]
[46.98165894 -320.13619995]
[60.07596207 -327.48269653]
[73.87698364 -333.39575195]
[88.22834015 -337.80828857]
[102.96742249 -340.67037964]
[117.92723083 -341.94952393]
[132.93826294 -341.63128662]
[147.83041382 -339.71926880]
[162.43495178 -336.23507690]
[176.58641052 -331.21826172]
[190.12442017 -324.72564697]
[202.89559937 -316.83078003]
[214.75523376 -307.62310791]
[225.56895447 -297.20697021]
[235.21423340 -285.70043945]
[243.58177185 -273.23382568]
[250.57676697 -259.94839478]
[256.11996460 -245.99472046]
[260.14852905 -231.53088379]
[262.61682129 -216.72076416]
[263.49691772 -201.73219299]
[262.77880859 -186.73497009]
[260.47061157 -171.89906311]
[256.59854126 -157.39254761]
[251.20640564 -143.37979126]
[244.35534668 -130.01959229]
[236.12297058 -117.46331787]
[226.60255432 -105.85324097]
[215.90199280 -95.32091522]
[204.14250183 -85.98567200]
[191.45735168 -77.95330048]
[177.99026489 -71.31480408]
[163.89382935 -66.14540100]
[149.32778931 -62.50366974]
[134.45715332 -60.43087006]
[119.45044708 -59.95049286]
[126.21970367 -46.68299866]
[117.47742462 -33.49652481]
[116.36177826 -18.53806877]
[115.24612427 -3.57961607]
[114.13047791 11.37883759]
[113.01483154 26.33728981]
[111.89917755 41.29574585]
[110.78353119 56.25419617]
[109.66788483 71.21265411]
[108.55223083 86.17110443]
[115.60665894 95.43805695]
[114.65399170 107.04553986]
[106.18300629 115.03826904]
[113.83930969 125.41824341]
[112.41711426 137.83441162]
[103.22071838 145.69270325]
[101.66019440 160.61131287]
[100.09967041 175.52990723]
[98.53914642 190.44851685]
[96.97862244 205.36712646]
[95.41810608 220.28573608]
[110.23188782 222.66621399]
[124.89203644 225.85916138]
[139.35403442 229.85484314]
[153.57395935 234.64114380]
[167.50862122 240.20352173]
[181.11570740 246.52507019]
[194.35388184 253.58662415]
[207.18296814 261.36669922]
[219.56396484 269.84170532]
[231.45930481 278.98587036]
[242.83283997 288.77145386]
[253.65003967 299.16873169]
[263.87805176 310.14608765]
[273.48580933 321.67022705]
[282.44415283 333.70614624]
[290.72583008 346.21728516]
[298.30575562 359.16561890]
[305.16085815 372.51187134]
[311.27032471 386.21551514]
[316.61560059 400.23486328]
[321.18048096 414.52740479]
[324.95108032 429.04971313]
[327.91595459 443.75769043]
[330.06610107 458.60665894]
[331.39498901 473.55154419]
[331.89855957 488.54690552]
[331.57528687 503.54724121]
[330.42620850 518.50701904]
[328.45474243 533.38073730]
[325.66693115 548.12329102]
[322.07119751 562.68988037]
[317.67849731 577.03631592]
[312.50213623 591.11889648]
[306.55786133 604.89501953]
[299.86370850 618.32269287]
[292.44003296 631.36126709]
[284.30935669 643.97106934]
[275.49639893 656.11383057]
[266.02786255 667.75262451]
[255.93258667 678.85217285]
[245.24116516 689.37872314]
[233.98611450 699.30035400]
[222.20156860 708.58691406]
[209.92335510 717.21014404]
[197.18875122 725.14392090]
[184.03642273 732.36407471]
[170.50633240 738.84881592]
[156.63955688 744.57830811]
[142.47819519 749.53521729]
[128.06529236 753.70452881]
[113.44458008 757.07348633]
[98.66049194 759.63189697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[67 150]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[79 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
