%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-0.33997464 722.79705811]
[-14.73570347 727.02337646]
[-29.32845116 730.50909424]
[-44.08014679 733.24517822]
[-58.95230865 735.22442627]
[-73.90612793 736.44177246]
[-88.90260315 736.89392090]
[-103.90260315 736.57977295]
[-118.86698914 735.50012207]
[-133.75672913 733.65777588]
[-148.53297424 731.05755615]
[-163.15718079 727.70623779]
[-177.59118652 723.61254883]
[-191.79734802 718.78723145]
[-205.73858643 713.24279785]
[-219.37854004 706.99377441]
[-232.68161011 700.05645752]
[-245.61311340 692.44891357]
[-258.13928223 684.19097900]
[-270.22747803 675.30419922]
[-281.84613037 665.81182861]
[-292.96496582 655.73858643]
[-303.55493164 645.11071777]
[-313.58840942 633.95599365]
[-323.03921509 622.30352783]
[-331.88275146 610.18365479]
[-340.09588623 597.62805176]
[-347.65719604 584.66943359]
[-354.54696655 571.34167480]
[-360.74725342 557.67950439]
[-366.24182129 543.71856689]
[-371.01638794 529.49523926]
[-375.05844116 515.04669189]
[-378.35751343 500.41061401]
[-380.90493774 485.62518311]
[-382.69406128 470.72894287]
[-383.72027588 455.76080322]
[-383.98083496 440.75976562]
[-383.47509766 425.76501465]
[-382.20440674 410.81564331]
[-380.17202759 395.95065308]
[-377.38327026 381.20880127]
[-373.84545898 366.62860107]
[-369.56774902 352.24807739]
[-364.56134033 338.10470581]
[-358.83932495 324.23544312]
[-352.41656494 310.67642212]
[-345.30987549 297.46304321]
[-337.53775024 284.62976074]
[-329.12051392 272.21008301]
[-320.08007812 260.23638916]
[-310.44006348 248.73991394]
[-300.22558594 237.75068665]
[-289.46334839 227.29733276]
[-278.18136597 217.40715027]
[-266.40911865 208.10594177]
[-254.17729187 199.41795349]
[-241.51780701 191.36587524]
[-228.46368408 183.97068787]
[-215.04899597 177.25170898]
[-201.30873108 171.22645569]
[-187.27873230 165.91064453]
[-172.99560547 161.31816101]
[-158.49661255 157.46096802]
[-143.81958008 154.34913635]
[-129.00280762 151.99076843]
[-114.08494568 150.39204407]
[-99.10491180 149.55712891]
[-84.10178375 149.48818970]
[-69.11470032 150.18540955]
[-54.18277359 151.64695740]
[-39.34495163 153.86904907]
[-24.63994789 156.84587097]
[-10.10612202 160.56964111]
[4.21860647 165.03067017]
[18.29686546 170.21731567]
[32.09192657 176.11604309]
[45.56779861 182.71145630]
[52.84103012 169.59275818]
[60.11425781 156.47406006]
[59.51859665 141.59136963]
[72.97693634 133.27371216]
[80.25016785 120.15501404]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[96.56044769 73.09930420]
[102.88841248 62.32244873]
[114.47914886 58.86103058]
[121.94689178 45.85207748]
[129.41462708 32.84312820]
[136.88237000 19.83417511]
[137.04249573 4.01377821]
[150.08905029 -3.17210960]
[157.55677795 -16.18106270]
[145.43536377 -25.04301643]
[134.36241150 -35.18466187]
[124.47235107 -46.48289108]
[115.88524628 -58.80055237]
[108.70532227 -71.98812103]
[103.01975250 -85.88550568]
[98.89753723 -100.32402039]
[96.38873291 -115.12837982]
[95.52378082 -130.11888123]
[96.31318665 -145.11354065]
[98.74737549 -159.93035889]
[102.79678345 -174.38945007]
[108.41226196 -188.31530762]
[115.52564240 -201.53889465]
[124.05057526 -213.89965820]
[133.88357544 -225.24757385]
[144.90528870 -235.44488525]
[156.98190308 -244.36781311]
[169.96684265 -251.90802002]
[183.70246887 -257.97396851]
[198.02203369 -262.49206543]
[212.75172424 -265.40744019]
[227.71273804 -266.68469238]
[242.72344971 -266.30834961]
[257.60165405 -264.28292847]
[272.16671753 -260.63305664]
[286.24188232 -255.40304565]
[299.65625000 -248.65635681]
[312.24700928 -240.47489929]
[323.86129761 -230.95799255]
[334.35812378 -220.22116089]
[343.61010742 -208.39472961]
[351.50488281 -195.62226868]
[357.94662476 -182.05883789]
[362.85717773 -167.86906433]
[366.17691040 -153.22520447]
[367.86550903 -138.30502319]
[367.90246582 -123.28962708]
[366.28738403 -108.36131287]
[363.03982544 -93.70127869]
[358.19921875 -79.48748779]
[351.82434082 -65.89248657]
[343.99258423 -53.08130264]
[334.79898071 -41.20945358]
[324.35513306 -30.42104721]
[312.78787231 -20.84704971]
[300.23757935 -12.60368156]
[286.85659790 -5.79100657]
[272.80737305 -0.49172631]
[258.26043701 3.22983146]
[243.39237976 5.32849026]
[228.38369751 5.77877426]
[213.41658020 4.57521772]
[198.67271423 1.73243046]
[184.33106995 -2.71507859]
[170.56573486 -8.71332073]
[163.09799194 4.29563141]
[163.47201538 19.18553925]
[149.89132690 27.30191612]
[142.42358398 40.31086731]
[134.95584106 53.31982040]
[127.48809814 66.32877350]
[128.47721863 83.84986115]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[93.36885834 127.42823792]
[86.09563446 140.54693604]
[86.17105865 156.36796570]
[73.23294830 163.74729919]
[65.95972443 176.86599731]
[58.68649292 189.98468018]
[71.41953278 197.91993713]
[83.73078156 206.49501038]
[95.58812714 215.68751526]
[106.96062469 225.47346497]
[117.81861115 235.82733154]
[128.13375854 246.72212219]
[137.87915039 258.12939453]
[147.02937317 270.01940918]
[155.56054688 282.36111450]
[163.45042419 295.12231445]
[170.67840576 308.26974487]
[177.22563171 321.76910400]
[183.07504272 335.58514404]
[188.21136475 349.68182373]
[192.62120056 364.02239990]
[196.29304504 378.56942749]
[199.21731567 393.28497314]
[201.38639832 408.13064575]
[202.79460144 423.06768799]
[203.43827820 438.05715942]
[203.31575012 453.05996704]
[202.42732239 468.03692627]
[200.77532959 482.94897461]
[198.36405945 497.75723267]
[195.19982910 512.42303467]
[191.29086304 526.90814209]
[186.64738464 541.17480469]
[181.28149414 555.18572998]
[175.20719910 568.90435791]
[168.44035339 582.29498291]
[160.99858093 595.32257080]
[152.90133667 607.95324707]
[144.16970825 620.15393066]
[134.82650757 631.89294434]
[124.89608765 643.13946533]
[114.40436554 653.86431885]
[103.37871552 664.03948975]
[91.84789276 673.63836670]
[79.84198761 682.63598633]
[67.39231873 691.00878906]
[54.53136444 698.73504639]
[41.29268265 705.79449463]
[27.71080971 712.16876221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 167]
[79 166]
[80 165]
[82 163]
[83 162]
[84 161]
[86 159]
[89 157]
[90 156]
[91 155]
[92 154]
[94 152]
[95 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
