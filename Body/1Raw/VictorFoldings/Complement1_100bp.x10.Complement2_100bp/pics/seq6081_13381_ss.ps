%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[62.30266571 836.71844482]
[47.29745483 836.60430908]
[32.33337784 835.48828125]
[17.47726059 833.37518311]
[2.79545832 830.27453613]
[-11.64645767 826.20019531]
[-25.78398514 821.17034912]
[-39.55398178 815.20739746]
[-52.89494705 808.33807373]
[-65.74729919 800.59301758]
[-78.05362701 792.00677490]
[-89.75897980 782.61773682]
[-100.81106567 772.46783447]
[-111.16053772 761.60235596]
[-120.76115417 750.06994629]
[-129.57005310 737.92199707]
[-137.54788208 725.21276855]
[-144.65901184 711.99908447]
[-150.87167358 698.33996582]
[-156.15814209 684.29638672]
[-160.49478149 669.93103027]
[-163.86224365 655.30810547]
[-166.24546814 640.49298096]
[-167.63383484 625.55169678]
[-168.02111816 610.55102539]
[-167.40560913 595.55804443]
[-165.79003906 580.63958740]
[-163.18164062 565.86242676]
[-159.59205627 551.29241943]
[-155.03730774 536.99475098]
[-149.53775024 523.03326416]
[-143.11795044 509.47021484]
[-135.80656433 496.36630249]
[-127.63626099 483.77996826]
[-118.64353180 471.76748657]
[-108.86852264 460.38247681]
[-98.35491180 449.67578125]
[-87.14965057 439.69522095]
[-75.30278015 430.48541260]
[-62.86721420 422.08743286]
[-49.89849472 414.53881836]
[-36.45454025 407.87329102]
[-22.59539795 402.12057495]
[-8.38296604 397.30642700]
[6.11927843 393.45233154]
[20.84656334 390.57546997]
[35.73311615 388.68872070]
[50.71244431 387.80047607]
[65.71765137 387.91476440]
[66.83329773 372.95629883]
[67.94895172 357.99783325]
[69.06459808 343.03939819]
[70.18024445 328.08093262]
[62.52682114 318.71334839]
[63.33386612 306.24209595]
[72.71301270 297.38803101]
[74.05124664 282.44784546]
[75.38948059 267.50765991]
[76.72771454 252.56747437]
[69.21460724 243.08697510]
[70.20723724 230.62910461]
[79.71717072 221.91566467]
[81.27768707 206.99707031]
[82.83821106 192.07846069]
[84.39873505 177.15985107]
[78.02750397 163.69670105]
[87.15851593 150.77636719]
[88.71903992 135.85775757]
[90.27956390 120.93914795]
[91.84008789 106.02054596]
[89.47990417 98.31327057]
[93.53651428 90.89202881]
[95.31897736 75.99831390]
[96.99051666 61.09173584]
[98.55104065 46.17313385]
[100.11156464 31.25452805]
[101.67208862 16.33592415]
[95.41247559 1.80568659]
[104.43186951 -10.04757404]
[94.75466156 -22.25370026]
[96.54978180 -37.36105728]
[108.24609375 -46.51156616]
[109.80661774 -61.43017197]
[111.36713409 -76.34877777]
[96.73430634 -79.73403168]
[82.62841797 -84.89187622]
[69.26329803 -91.74411774]
[56.84156418 -100.18687439]
[45.55152893 -110.09216309]
[35.56434631 -121.30982208]
[27.03141785 -133.66978455]
[20.08210182 -146.98469543]
[14.82174683 -161.05267334]
[11.33009911 -175.66047668]
[9.66009140 -190.58665466]
[9.83704090 -205.60491943]
[11.85826302 -220.48760986]
[15.69311905 -235.00909424]
[21.28347206 -248.94923401]
[28.54457474 -262.09671021]
[37.36634827 -274.25219727]
[47.61506271 -285.23141479]
[59.13534164 -294.86795044]
[71.75254822 -303.01571655]
[85.27540588 -309.55114746]
[99.49890900 -314.37521362]
[114.20743561 -317.41476440]
[129.17800903 -318.62371826]
[144.18367004 -317.98376465]
[158.99694824 -315.50457764]
[173.39328003 -311.22375488]
[187.15441895 -305.20620728]
[200.07173157 -297.54315186]
[211.94941711 -288.35076904]
[222.60740662 -277.76837158]
[231.88412476 -265.95642090]
[239.63893127 -253.09397888]
[245.75428772 -239.37603760]
[250.13746643 -225.01054382]
[252.72203064 -210.21528625]
[253.46878052 -195.21455383]
[252.36642456 -180.23574829]
[249.43165588 -165.50596619]
[244.70895386 -151.24847412]
[238.26994324 -137.67944336]
[230.21221924 -125.00456238]
[220.65794373 -113.41597748]
[209.75193787 -103.08937073]
[197.65954590 -94.18128967]
[184.56410217 -86.82678223]
[170.66410828 -81.13734436]
[156.17028809 -77.19921112]
[141.30236816 -75.07210541]
[126.28574371 -74.78825378]
[124.72521973 -59.86964798]
[123.16469574 -44.95104599]
[132.71421814 -33.57816696]
[131.34414673 -18.42634964]
[119.35047150 -8.48705101]
[125.72171021 4.97610760]
[116.59069061 17.89644623]
[115.03016663 32.81505203]
[113.46965027 47.73365402]
[111.90912628 62.65225983]
[114.33969879 69.63181305]
[110.21269226 77.78077698]
[108.43022919 92.67449188]
[106.75868988 107.58106995]
[105.19816589 122.49967194]
[103.63764191 137.41827393]
[102.07711792 152.33688354]
[108.33673859 166.86712646]
[99.31734467 178.72038269]
[97.75682068 193.63899231]
[96.19629669 208.55758667]
[94.63577271 223.47619629]
[102.52211761 240.11611938]
[91.66790009 253.90570068]
[90.32966614 268.84588623]
[88.99143219 283.78607178]
[87.65319824 298.72625732]
[95.78641510 315.24691772]
[85.13870239 329.19659424]
[84.02304840 344.15502930]
[82.90740204 359.11349487]
[81.79175568 374.07196045]
[80.67610168 389.03039551]
[95.53224945 391.14328003]
[110.21408844 394.24374390]
[124.65605927 398.31790161]
[138.79364014 403.34759521]
[152.56372070 409.31033325]
[165.90476990 416.17953491]
[178.75721741 423.92443848]
[191.06365967 432.51052856]
[202.76911926 441.89941406]
[213.82135010 452.04919434]
[224.17094421 462.91448975]
[233.77171326 474.44683838]
[242.58076477 486.59466553]
[250.55874634 499.30374146]
[257.67004395 512.51733398]
[263.88287354 526.17639160]
[269.16952515 540.21990967]
[273.50634766 554.58520508]
[276.87399292 569.20806885]
[279.25741577 584.02319336]
[280.64596558 598.96447754]
[281.03341675 613.96508789]
[280.41809082 628.95812988]
[278.80273438 643.87658691]
[276.19451904 658.65380859]
[272.60510254 673.22381592]
[268.05053711 687.52154541]
[262.55117798 701.48315430]
[256.13153076 715.04626465]
[248.82031250 728.15026855]
[240.65016174 740.73669434]
[231.65757751 752.74926758]
[221.88272095 764.13439941]
[211.36924744 774.84124756]
[200.16410828 784.82196045]
[188.31735229 794.03192139]
[175.88189697 802.43005371]
[162.91326904 809.97882080]
[149.46939087 816.64453125]
[135.61032104 822.39739990]
[121.39795685 827.21173096]
[106.89575958 831.06604004]
[92.16851044 833.94305420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[56 161]
[57 160]
[58 159]
[59 158]
[62 156]
[63 155]
[64 154]
[65 153]
[67 151]
[68 150]
[69 149]
[70 148]
[72 147]
[73 146]
[74 144]
[75 143]
[76 142]
[77 141]
[79 139]
[82 136]
[83 135]
[84 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
