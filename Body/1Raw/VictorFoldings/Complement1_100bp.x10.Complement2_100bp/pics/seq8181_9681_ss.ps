%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[-7.11350727 347.84555054]
[-0.01879106 361.15405273]
[3.54254532 375.80899048]
[3.34663320 390.88919067]
[-0.59421211 405.44668579]
[-8.03226566 418.56637573]
[-18.49996567 429.42355347]
[-31.33930397 437.33569336]
[-45.74318695 441.80548096]
[-60.80617523 442.55191040]
[-75.58139801 439.52807617]
[-89.14007568 432.92404175]
[-100.62989044 423.15496826]
[-109.32858276 410.83493042]
[-114.68935394 396.73837280]
[-116.37522125 381.75140381]
[-114.28019714 366.81616211]
[-108.53598785 352.87145996]
[-99.50367737 340.79385376]
[-87.75104523 331.34259033]
[-74.01686859 325.11178589]
[-59.16448593 322.49307251]
[-44.12754059 323.65109253]
[-39.30154037 309.44863892]
[-34.47554398 295.24618530]
[-29.64954567 281.04373169]
[-24.82354927 266.84127808]
[-29.88728523 255.85559082]
[-25.98290062 243.98379517]
[-14.68536472 237.76057434]
[-9.64844894 223.63153076]
[-4.61153269 209.50250244]
[-15.38565254 219.93890381]
[-28.01764107 228.02796936]
[-42.00436783 233.44749451]
[-56.78875351 235.98165894]
[-71.78193665 235.52951050]
[-86.38674927 232.10905457]
[-100.02147675 225.85652161]
[-112.14306641 217.02096558]
[-122.26871490 205.95429993]
[-129.99511719 193.09729004]
[-135.01454163 178.96203613]
[-137.12705994 164.11152649]
[-136.24853516 149.13728333]
[-132.41395569 134.63569641]
[-125.77604675 121.18436432]
[-116.59920502 109.31906128]
[-105.24893188 99.51235962]
[-92.17731476 92.15486145]
[-77.90497589 87.53962708]
[-63.00038910 85.85045624]
[-48.05719376 87.15464783]
[-33.67057419 91.40024567]
[-20.41353798 98.41815948]
[-8.81411362 107.92885590]
[0.66570097 119.55352783]
[7.64832735 132.82917786]
[11.85565090 147.22705078]
[13.12009430 162.17366028]
[11.39129734 177.07369995]
[6.73980141 191.32987976]
[17.22730255 180.60551453]
[27.71480370 169.88113403]
[38.20230484 159.15675354]
[48.68980408 148.43237305]
[58.77094650 137.32513428]
[68.43175507 125.85043335]
[78.09256744 114.37573242]
[87.75337219 102.90103149]
[97.15552521 91.21345520]
[106.29432678 79.31881714]
[115.43312836 67.42418671]
[124.57193756 55.52955246]
[126.84424591 39.87237930]
[140.73387146 34.49393845]
[139.83514404 21.62711906]
[147.69175720 11.90819263]
[159.66772461 10.20445347]
[168.98260498 -1.55279779]
[178.29748535 -13.31004906]
[187.61236572 -25.06730080]
[196.92724609 -36.82455063]
[206.24212646 -48.58180237]
[213.70986938 -61.59075546]
[219.16523743 -75.56355286]
[224.62059021 -89.53635406]
[230.07594299 -103.50914764]
[226.87748718 -121.64340973]
[240.99580383 -132.06646729]
[246.24252319 -146.11894226]
[251.48924255 -160.17140198]
[256.73596191 -174.22387695]
[243.43351746 -181.19873047]
[231.11018372 -189.78584290]
[219.96031189 -199.84982300]
[210.15975952 -211.23191833]
[201.86306763 -223.75263977]
[195.20111084 -237.21449280]
[190.27894592 -251.40518188]
[187.17420959 -266.10089111]
[185.93588257 -281.06985474]
[186.58345032 -296.07595825]
[189.10675049 -310.88259888]
[193.46595764 -325.25619507]
[199.59233093 -338.97009277]
[207.38923645 -351.80798340]
[216.73371887 -363.56741333]
[227.47840881 -374.06289673]
[239.45382690 -383.12890625]
[252.47111511 -390.62246704]
[266.32495117 -396.42538452]
[280.79687500 -400.44616699]
[295.65863037 -402.62136841]
[310.67584229 -402.91668701]
[325.61160278 -401.32748413]
[340.23043823 -397.87881470]
[354.30172729 -392.62509155]
[367.60357666 -385.64910889]
[379.92617798 -377.06094360]
[391.07522583 -366.99603271]
[400.87481689 -355.61312866]
[409.17044067 -343.09170532]
[415.83126831 -329.62927246]
[420.75225830 -315.43820190]
[423.85574341 -300.74221802]
[425.09283447 -285.77316284]
[424.44396973 -270.76708984]
[421.91943359 -255.96066284]
[417.55902100 -241.58741760]
[411.43148804 -227.87405396]
[403.63351440 -215.03681946]
[394.28802490 -203.27818298]
[383.54248047 -192.78361511]
[371.56628418 -183.71861267]
[358.54837036 -176.22613525]
[344.69403076 -170.42437744]
[330.22177124 -166.40481567]
[315.35983276 -164.23086548]
[300.34262085 -163.93679810]
[285.40695190 -165.52725220]
[270.78842163 -168.97715759]
[265.54171753 -154.92468262]
[260.29498291 -140.87222290]
[255.04827881 -126.81974792]
[259.78268433 -115.68817139]
[255.52656555 -103.93788910]
[244.04873657 -98.05379486]
[238.59338379 -84.08099365]
[233.13803101 -70.10819244]
[227.68267822 -56.13539886]
[238.90313721 -66.09035492]
[252.44908142 -72.53297424]
[267.25222778 -74.95515442]
[282.14514160 -73.16587830]
[295.95327759 -67.30625153]
[307.58767700 -57.83838654]
[316.13082886 -45.50896835]
[320.90896606 -31.29033852]
[321.54525757 -16.30384064]
[317.98956299 -1.73137200]
[310.52224731 11.27782249]
[299.73220825 21.69778442]
[286.47045898 28.70674896]
[271.78280640 31.75196457]
[256.82763672 30.59326744]
[242.78434753 25.32204247]
[230.76043701 16.35399628]
[221.70419312 4.39638853]
[216.32981873 -9.60775471]
[215.06114197 -24.55400658]
[217.99938965 -39.26692200]
[208.68450928 -27.50966835]
[199.36961365 -15.75241756]
[190.05473328 -3.99516630]
[180.73985291 7.76208496]
[171.42497253 19.51933670]
[169.80404663 36.99330521]
[152.62850952 43.63274384]
[151.00985718 58.43913651]
[136.46656799 64.66835785]
[127.32776642 76.56298828]
[118.18896484 88.45761871]
[109.05016327 100.35225677]
[109.00419617 104.20845032]
[107.25869751 108.02566528]
[103.86919403 111.04531860]
[99.22807312 112.56184387]
[89.56726837 124.03654480]
[79.90645599 135.51124573]
[70.24564362 146.98594666]
[85.18585968 148.32388306]
[93.58188629 160.75395203]
[89.24449921 175.11317444]
[75.37104797 180.81645203]
[62.18853378 173.65954590]
[59.41418457 158.91987610]
[48.92668533 169.64424133]
[38.43918228 180.36862183]
[27.95168304 191.09300232]
[17.46418190 201.81738281]
[9.51749706 214.53942871]
[4.48058033 228.66845703]
[-0.55633563 242.79748535]
[3.18063092 260.82846069]
[-10.62109280 271.66726685]
[-15.44709015 285.86972046]
[-20.27308846 300.07217407]
[-25.09908485 314.27462769]
[-29.92508316 328.47708130]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[30 204]
[31 203]
[32 202]
[62 201]
[63 200]
[64 199]
[65 198]
[66 197]
[67 191]
[68 190]
[69 189]
[70 188]
[71 184]
[72 183]
[73 182]
[74 181]
[76 179]
[79 177]
[80 176]
[81 175]
[82 174]
[83 173]
[84 172]
[85 151]
[86 150]
[87 149]
[88 148]
[90 145]
[91 144]
[92 143]
[93 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
