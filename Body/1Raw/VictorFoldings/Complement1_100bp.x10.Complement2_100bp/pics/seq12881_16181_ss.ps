%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[132.99147034 197.20443726]
[136.40281677 182.58947754]
[140.95034790 168.28724670]
[146.60600281 154.38587952]
[153.33491516 140.97113037]
[140.49597168 133.21473694]
[127.65703583 125.45834351]
[114.81809235 117.70195007]
[101.97915649 109.94555664]
[93.99980927 108.80426788]
[89.00801849 101.97689819]
[76.28598022 94.03021240]
[63.38965607 86.36962128]
[50.32546997 78.99893188]
[37.26128387 71.62823486]
[24.19709969 64.25754547]
[11.13291359 56.88685989]
[-1.93127131 49.51617050]
[-10.07240009 62.12004089]
[-18.95272255 74.21447754]
[-28.54045105 85.75617981]
[-38.80126190 96.70384216]
[-49.69842529 107.01826477]
[-61.19293213 116.66253662]
[-73.24362946 125.60211945]
[-85.80738831 133.80500793]
[-98.83922577 141.24186707]
[-112.29249573 147.88604736]
[-126.11903381 153.71376038]
[-140.26934814 158.70416260]
[-154.69277954 162.83938599]
[-169.33770752 166.10462952]
[-184.15168762 168.48818970]
[-199.08171082 169.98153687]
[-214.07431030 170.57934570]
[-229.07583618 170.27944946]
[-244.03256226 169.08294678]
[-258.89096069 166.99409485]
[-273.59786987 164.02040100]
[-288.10058594 160.17248535]
[-302.34722900 155.46412659]
[-316.28680420 149.91218567]
[-329.86938477 143.53654480]
[-343.04635620 136.36001587]
[-355.77056885 128.40827942]
[-367.99645996 119.70982361]
[-379.68026733 110.29576874]
[-390.78015137 100.19982910]
[-401.25637817 89.45813751]
[-411.07147217 78.10914612]
[-420.19027710 66.19348145]
[-428.58013916 53.75380707]
[-436.21105957 40.83464432]
[-443.05569458 27.48224258]
[-449.08953857 13.74440384]
[-454.29098511 -0.32969680]
[-458.64144897 -14.68967628]
[-462.12533569 -29.28413010]
[-464.73016357 -44.06081009]
[-466.44662476 -58.96682739]
[-467.26858521 -73.94881439]
[-467.19308472 -88.95314026]
[-466.22036743 -103.92609406]
[-464.35397339 -118.81407928]
[-461.60055542 -133.56379700]
[-457.96994019 -148.12243652]
[-453.47518921 -162.43791199]
[-448.13232422 -176.45893860]
[-441.96051025 -190.13536072]
[-434.98184204 -203.41819763]
[-427.22131348 -216.25990295]
[-418.70666504 -228.61450195]
[-409.46838379 -240.43778992]
[-399.53958130 -251.68740845]
[-388.95574951 -262.32312012]
[-377.75482178 -272.30682373]
[-365.97686768 -281.60281372]
[-353.66403198 -290.17779541]
[-340.86044312 -298.00103760]
[-327.61190796 -305.04458618]
[-313.96582031 -311.28320312]
[-299.97109985 -316.69454956]
[-285.67776489 -321.25927734]
[-271.13705444 -324.96105957]
[-256.40097046 -327.78659058]
[-241.52230835 -329.72576904]
[-226.55429077 -330.77166748]
[-211.55050659 -330.92056274]
[-196.56468201 -330.17190552]
[-181.65045166 -328.52835083]
[-166.86120605 -325.99581909]
[-152.24989319 -322.58334351]
[-137.86880493 -318.30316162]
[-123.76943207 -313.17059326]
[-110.00225067 -307.20401001]
[-96.61653900 -300.42477417]
[-83.66020966 -292.85711670]
[-71.17964935 -284.52819824]
[-59.21953201 -275.46777344]
[-47.82267761 -265.70831299]
[-37.02987671 -255.28472900]
[-26.87977219 -244.23435974]
[-17.40869331 -232.59674072]
[-8.65054798 -220.41352844]
[-0.63668674 -207.72836304]
[6.60420275 -194.58663940]
[13.04619980 -181.03538513]
[18.66624451 -167.12313843]
[23.44421577 -152.89968872]
[27.36301231 -138.41595459]
[30.40860367 -123.72378540]
[32.57009125 -108.87577820]
[33.83972931 -93.92507172]
[34.21298218 -78.92520142]
[33.68851089 -63.92985153]
[32.26818848 -48.99271011]
[29.95710373 -34.16724396]
[26.76352882 -19.50652695]
[22.69889450 -5.06304169]
[17.77775383 9.11150932]
[12.01772213 22.96638298]
[5.43941832 36.45198441]
[18.50360298 43.82267380]
[31.56778908 51.19336319]
[44.63197327 58.56405258]
[57.69615936 65.93474579]
[70.76034546 73.30543518]
[74.23674011 72.71637726]
[78.17117310 73.78188324]
[81.78287506 76.69888306]
[84.23266602 81.30818176]
[96.95470428 89.25485992]
[109.73554230 97.10662079]
[122.57448578 104.86300659]
[135.41342163 112.61940002]
[148.25236511 120.37579346]
[161.09130859 128.13218689]
[169.83541870 115.93486786]
[179.50958252 104.46121216]
[190.05412292 93.78195190]
[201.40406799 83.96294403]
[213.48941040 75.06470490]
[226.23565674 67.14212036]
[239.56420898 60.24401474]
[253.39288330 54.41292953]
[267.63644409 49.68481064]
[282.20706177 46.08881378]
[297.01489258 43.64710617]
[311.96868896 42.37474442]
[326.97616577 42.27957153]
[341.94488525 43.36217499]
[356.78250122 45.61587906]
[371.39755249 49.02678680]
[385.69992065 53.57387543]
[399.60147095 59.22910309]
[413.01641846 65.95760345]
[425.86212158 73.71789551]
[438.05935669 82.46213531]
[449.53289795 92.13641357]
[460.21206665 102.68107605]
[470.03094482 114.03111267]
[478.92904663 126.11654663]
[486.85153198 138.86286926]
[493.74948120 152.19148254]
[499.58044434 166.02023315]
[504.30841064 180.26383972]
[507.90426636 194.83448792]
[510.34579468 209.64236450]
[511.61801147 224.59614563]
[511.71304321 239.60363770]
[510.63027954 254.57232666]
[508.37643433 269.40994263]
[504.96536255 284.02493286]
[500.41815186 298.32727051]
[494.76275635 312.22875977]
[488.03411865 325.64364624]
[480.27371216 338.48925781]
[471.52932739 350.68640137]
[461.85494995 362.15985107]
[451.31018066 372.83889771]
[439.96005249 382.65768433]
[427.87451172 391.55566406]
[415.12811279 399.47799683]
[401.79940796 406.37582397]
[387.97061157 412.20663452]
[373.72695923 416.93447876]
[359.15628052 420.53015137]
[344.34838867 422.97155762]
[329.39459229 424.24362183]
[314.38708496 424.33850098]
[299.41839600 423.25558472]
[284.58084106 421.00158691]
[269.96585083 417.59036255]
[255.66355896 413.04299927]
[241.76214600 407.38748169]
[228.34732056 400.65869141]
[215.50177002 392.89813232]
[203.30473328 384.15365601]
[191.83137512 374.47915649]
[181.15243530 363.93426514]
[171.33377075 352.58404541]
[162.43591309 340.49841309]
[154.51370239 327.75192261]
[147.61601257 314.42315674]
[141.78535461 300.59429932]
[137.05766296 286.35061646]
[133.46211243 271.77987671]
[131.02085876 256.97195435]
[129.74896240 242.01815796]
[129.65425110 227.01065063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 137]
[6 136]
[7 135]
[8 134]
[9 133]
[11 132]
[12 131]
[13 127]
[14 126]
[15 125]
[16 124]
[17 123]
[18 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
