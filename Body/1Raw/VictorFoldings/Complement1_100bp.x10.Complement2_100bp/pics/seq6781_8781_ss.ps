%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[31.22878265 530.69604492]
[33.94523621 545.50531006]
[33.52291489 560.55572510]
[29.98027611 575.18939209]
[23.47219276 588.76647949]
[14.28316975 600.69360352]
[2.81491017 610.44921875]
[-10.43124104 617.60699463]
[-24.87622070 621.85388184]
[-39.88855743 623.00433350]
[-54.81196976 621.00799561]
[-68.99407959 615.95214844]
[-81.81489563 608.05780029]
[-92.71395874 597.67010498]
[-101.21479797 585.24316406]
[-106.94580078 571.32019043]
[-109.65643311 556.50982666]
[-109.22818756 541.45959473]
[-105.67979431 526.82733154]
[-99.16636658 513.25274658]
[-89.97264862 501.32928467]
[-78.50055695 491.57815552]
[-65.25158691 484.42562866]
[-50.80493927 480.18441772]
[-35.79215240 479.03988647]
[-20.86952591 481.04208374]
[-15.83260918 466.91305542]
[-10.79569244 452.78402710]
[-5.96969509 438.58157349]
[-1.35568595 424.30883789]
[-4.80293083 409.81863403]
[6.80417204 399.06756592]
[11.41818142 384.79483032]
[16.03219032 370.52209473]
[11.43865395 353.58496094]
[25.20689392 341.35723877]
[29.60789299 327.01739502]
[34.00889206 312.67755127]
[38.40988922 298.33770752]
[28.04411888 281.84332275]
[33.23094177 262.74880981]
[51.05914688 253.48411560]
[54.81544876 238.96205139]
[58.57175064 224.43998718]
[62.32804871 209.91793823]
[66.08435059 195.39587402]
[64.47547913 190.89913940]
[65.67433929 185.34399414]
[70.17472839 180.50064087]
[74.36173248 166.09686279]
[78.54874420 151.69306946]
[82.73575592 137.28929138]
[86.92276764 122.88551331]
[90.57085419 108.33589172]
[93.34646606 93.59492493]
[95.79219818 78.79565430]
[98.23792267 63.99638748]
[92.85426331 49.11933136]
[102.56318665 37.82392883]
[105.00891113 23.02466011]
[107.45463562 8.22538853]
[109.90036774 -6.57388210]
[90.04068756 -16.12635422]
[74.45648193 -31.68270111]
[64.88407898 -51.49300385]
[62.38448334 -73.33432007]
[67.22579193 -94.76013947]
[78.85448456 -113.37441254]
[95.95868683 -127.09948730]
[116.61615753 -134.40805054]
[115.72334290 -149.38145447]
[114.83052826 -164.35487366]
[113.93771362 -179.32827759]
[113.04489899 -194.30168152]
[112.15208435 -209.27508545]
[103.60710144 -222.59025574]
[110.57314301 -235.75549316]
[109.68032074 -250.72889709]
[108.56467438 -265.68734741]
[107.22644043 -280.62753296]
[105.88820648 -295.56771851]
[104.54997253 -310.50790405]
[94.11779022 -316.20932007]
[87.79783630 -326.13702393]
[87.06256104 -337.76257324]
[91.97918701 -348.19055176]
[101.22162628 -354.87960815]
[100.32881165 -369.85299683]
[89.83488464 -384.98440552]
[98.29547882 -400.35922241]
[97.17983246 -415.31768799]
[88.43755341 -428.50415039]
[95.20681000 -441.77163696]
[94.09116364 -456.73010254]
[79.43827057 -460.54736328]
[66.82015991 -468.91766357]
[57.60554504 -480.93304443]
[52.79395294 -495.29019165]
[52.90731812 -510.43170166]
[57.93334198 -524.71520996]
[67.32683563 -536.59124756]
[80.06886292 -544.77166748]
[94.77726746 -548.36914062]
[109.85659027 -546.99334717]
[123.67113495 -540.79357910]
[134.72241211 -530.44238281]
[141.81166077 -517.06250000]
[144.16987610 -502.10528564]
[141.54127502 -487.19323730]
[134.21098328 -473.94387817]
[122.97413635 -463.79440308]
[109.04962158 -457.84573364]
[110.16526794 -442.88729858]
[118.82774353 -430.77075195]
[112.13829041 -416.43331909]
[113.25393677 -401.47485352]
[122.21228790 -393.34625244]
[123.26416779 -380.89324951]
[115.30221558 -370.74581909]
[116.19503021 -355.77243042]
[130.59352112 -344.46759033]
[132.18356323 -325.90997314]
[119.49015808 -311.84613037]
[120.82839203 -296.90594482]
[122.16662598 -281.96575928]
[123.50485992 -267.02560425]
[126.53029633 -263.33020020]
[127.26643372 -257.69503784]
[124.65373230 -251.62171936]
[125.54654694 -236.64831543]
[134.02766418 -224.40414429]
[127.12548828 -210.16789246]
[128.01831055 -195.19448853]
[128.91111755 -180.22108459]
[129.80393982 -165.24768066]
[130.69674683 -150.27427673]
[131.58956909 -135.30087280]
[140.44416809 -134.22099304]
[149.07225037 -131.94691467]
[157.31349182 -128.52017212]
[165.01463318 -124.00372314]
[172.03237915 -118.48083496]
[178.23603821 -112.05346680]
[183.50996399 -104.84045410]
[187.75570679 -96.97528076]
[190.89381409 -88.60362244]
[192.86543274 -79.88063049]
[193.63325500 -70.96807098]
[193.18237305 -62.03133392]
[191.52044678 -53.23633194]
[188.67765808 -44.74645615]
[184.70611572 -36.71952057]
[179.67892456 -29.30482864]
[173.68882751 -22.64040184]
[166.84651184 -16.85041237]
[159.27853394 -12.04286385]
[151.12503052 -8.30757618]
[142.53701782 -5.71451378]
[133.67375183 -4.31247139]
[124.69963837 -4.12815475]
[122.25390625 10.67111588]
[119.80818176 25.47038651]
[117.36245728 40.26965714]
[122.92105103 54.08816910]
[113.03719330 66.44211578]
[110.59146881 81.24138641]
[108.14573669 96.04065704]
[109.92459106 99.46235657]
[110.18657684 103.65154266]
[108.62273407 107.91316223]
[105.24616241 111.44000244]
[119.05022430 105.57077026]
[132.31761169 112.56907654]
[135.26811218 127.27603149]
[125.72670746 138.85021973]
[110.72698212 138.75956726]
[101.32655334 127.07252502]
[97.13954163 141.47630310]
[92.95252991 155.88008118]
[88.76551819 170.28387451]
[84.57850647 184.68765259]
[80.60640717 199.15217590]
[76.85011292 213.67424011]
[73.09381104 228.19628906]
[69.33750916 242.71835327]
[65.58120728 257.24041748]
[73.11688995 264.79272461]
[76.80968475 274.71594238]
[76.05607605 285.19619751]
[71.05891418 294.34722900]
[62.77870178 300.54992676]
[52.74973679 302.73870850]
[48.34873581 317.07855225]
[43.94773865 331.41839600]
[39.54674149 345.75823975]
[44.88926697 357.49792480]
[40.92845154 369.35101318]
[30.30492401 375.13610840]
[25.69091415 389.40884399]
[21.07690620 403.68157959]
[24.19412613 419.19265747]
[12.91704750 428.92285156]
[8.30303860 443.19558716]
[9.31161118 449.72967529]
[7.18776703 455.00094604]
[3.33333659 457.82095337]
[-1.70357955 471.94998169]
[-6.74049568 486.07901001]
[6.08342886 493.96829224]
[16.98657608 504.35168457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 208]
[27 207]
[28 206]
[29 203]
[30 202]
[32 200]
[33 199]
[34 198]
[36 195]
[37 194]
[38 193]
[39 192]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[54 171]
[55 167]
[56 166]
[57 165]
[59 163]
[60 162]
[61 161]
[62 160]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[77 130]
[78 129]
[79 126]
[80 125]
[81 124]
[82 123]
[87 120]
[88 119]
[90 116]
[91 115]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
