%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[151.25749207 886.03021240]
[136.65034485 882.60687256]
[122.22564697 878.48175049]
[108.01709747 873.66455078]
[94.05787659 868.16650391]
[80.38058472 862.00048828]
[67.01716614 855.18084717]
[53.99883270 847.72357178]
[41.35598755 839.64599609]
[29.11816406 830.96710205]
[17.31394005 821.70703125]
[5.97088528 811.88751221]
[-4.88450718 801.53137207]
[-15.22688389 790.66290283]
[-25.03209114 779.30749512]
[-34.27722549 767.49157715]
[-42.94069672 755.24279785]
[-51.00226974 742.58978271]
[-58.44311905 729.56201172]
[-65.24586487 716.19000244]
[-71.39461517 702.50494385]
[-76.87501526 688.53875732]
[-81.67425537 674.32415771]
[-85.78114319 659.89428711]
[-89.18606567 645.28277588]
[-91.88108826 630.52392578]
[-93.85991669 615.65203857]
[-95.11791229 600.70190430]
[-95.65215302 585.70849609]
[-95.46138763 570.70678711]
[-94.54605103 555.73175049]
[-92.90830231 540.81848145]
[-90.55194092 526.00177002]
[-87.48249054 511.31616211]
[-83.70711517 496.79598999]
[-79.23462677 482.47521973]
[-74.07546997 468.38723755]
[-68.24170685 454.56494141]
[-61.74694824 441.04064941]
[-54.60636902 427.84594727]
[-46.83664703 415.01162720]
[-38.45592880 402.56768799]
[-29.48378944 390.54315186]
[-19.94117928 378.96615601]
[-9.85038948 367.86373901]
[0.76501495 357.26177979]
[11.88023949 347.18505859]
[23.46932411 337.65713501]
[35.50520325 328.70025635]
[47.95976639 320.33532715]
[60.80392075 312.58187866]
[74.00767517 305.45803833]
[87.54018402 298.98040771]
[101.36985016 293.16418457]
[115.46436310 288.02288818]
[129.79081726 283.56854248]
[126.03451538 269.04650879]
[122.27821350 254.52444458]
[118.52191925 240.00238037]
[113.80356598 234.31388855]
[114.81951141 225.23612976]
[111.27983856 210.65975952]
[107.74016571 196.08337402]
[99.03143311 208.29640198]
[84.26092529 210.91020203]
[71.88985443 202.42749023]
[69.00492859 187.70751953]
[77.25877380 175.18258667]
[91.92321014 172.02752686]
[104.59722900 180.04893494]
[102.37210846 165.21488953]
[100.14699554 150.38084412]
[97.92187500 135.54679871]
[95.69675446 120.71276093]
[93.47164154 105.87871552]
[91.18298340 103.86586761]
[89.57613373 100.97578430]
[88.97742462 97.45939636]
[89.61589813 93.68466187]
[91.58303070 90.09811401]
[88.09831238 84.47955322]
[87.99037933 78.79753113]
[90.43416595 74.69424438]
[89.54135132 59.72083664]
[88.64852905 44.74743271]
[80.10354614 31.43225861]
[87.06958771 18.26701927]
[86.17677307 3.29361272]
[76.28611755 14.57079601]
[61.48024368 16.97624397]
[48.52820587 9.41022015]
[43.35149765 -4.66819239]
[48.31684494 -18.82253265]
[61.15415192 -26.58162689]
[75.99437714 -24.39812279]
[86.05347443 -13.26857281]
[86.72325897 -28.25361061]
[87.39304352 -43.23865128]
[88.06282806 -58.22369003]
[88.73261261 -73.20872498]
[75.09194946 -79.98015594]
[65.38977814 -91.71845245]
[61.30704498 -106.38989258]
[63.55112457 -121.45256042]
[71.73320770 -134.29676819]
[84.43569946 -142.69715881]
[99.45781708 -145.19831848]
[114.19689178 -141.36691284]
[126.09928131 -131.86676025]
[133.10282898 -118.34381866]
[133.99414062 -103.14100647]
[128.61875916 -88.89231110]
[117.90804291 -78.06640625]
[103.71765137 -72.53894043]
[103.04786682 -57.55390549]
[102.37808228 -42.56886673]
[101.70829773 -27.58382607]
[101.03851318 -12.59878731]
[101.15017700 2.40079689]
[102.04299927 17.37420273]
[110.52411652 29.61837769]
[103.62194061 43.85461426]
[104.51475525 58.82802200]
[105.40756989 73.80142975]
[106.52321625 88.75988007]
[108.30568695 103.65359497]
[110.53079987 118.48764038]
[112.75592041 133.32168579]
[114.98103333 148.15573120]
[117.20615387 162.98977661]
[119.43126678 177.82382202]
[122.31654358 192.54370117]
[125.85621643 207.12008667]
[129.39588928 221.69645691]
[133.04397583 236.24607849]
[136.80027771 250.76814270]
[140.55657959 265.29019165]
[144.31288147 279.81225586]
[159.00231934 276.76129150]
[173.82202148 274.42358398]
[188.73735046 272.80459595]
[203.71348572 271.90811157]
[218.71543884 271.73620605]
[233.70819092 272.28930664]
[248.65669250 273.56613159]
[263.52606201 275.56365967]
[278.28155518 278.27725220]
[292.88873291 281.70056152]
[307.31344604 285.82559204]
[321.52200317 290.64273071]
[335.48126221 296.14068604]
[349.15856934 302.30664062]
[362.52203369 309.12622070]
[375.54040527 316.58343506]
[388.18328857 324.66091919]
[400.42114258 333.33981323]
[412.22540283 342.59979248]
[423.56851196 352.41928101]
[434.42395020 362.77532959]
[444.76638794 373.64373779]
[454.57165527 384.99914551]
[463.81683350 396.81500244]
[472.48037720 409.06375122]
[480.54199219 421.71673584]
[487.98291016 434.74444580]
[494.78570557 448.11645508]
[500.93453979 461.80148315]
[506.41500854 475.76760864]
[511.21429443 489.98220825]
[515.32128906 504.41207886]
[518.72625732 519.02349854]
[521.42132568 533.78240967]
[523.40026855 548.65429688]
[524.65832520 563.60437012]
[525.19262695 578.59777832]
[525.00195312 593.59954834]
[524.08666992 608.57452393]
[522.44897461 623.48779297]
[520.09271240 638.30456543]
[517.02331543 652.99017334]
[513.24798584 667.51037598]
[508.77557373 681.83117676]
[503.61648560 695.91918945]
[497.78280640 709.74145508]
[491.28811646 723.26580811]
[484.14758301 736.46057129]
[476.37792969 749.29492188]
[467.99728394 761.73889160]
[459.02517700 773.76342773]
[449.48263550 785.34051514]
[439.39190674 796.44299316]
[428.77655029 807.04498291]
[417.66137695 817.12176514]
[406.07232666 826.64971924]
[394.03649902 835.60668945]
[381.58197021 843.97167969]
[368.73785400 851.72515869]
[355.53411865 858.84906006]
[342.00164795 865.32672119]
[328.17199707 871.14306641]
[314.07751465 876.28442383]
[299.75109863 880.73883057]
[285.22616577 884.49584961]
[270.53671265 887.54675293]
[255.71701050 889.88439941]
[240.80166626 891.50329590]
[225.82553101 892.39971924]
[210.82357788 892.57153320]
[195.83084106 892.01837158]
[180.88232422 890.74151611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 138]
[57 137]
[58 136]
[59 135]
[61 134]
[62 133]
[63 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[80 125]
[83 124]
[84 123]
[85 122]
[87 120]
[88 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
