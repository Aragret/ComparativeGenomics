%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[63.24427414 494.97094727]
[58.79309082 509.31811523]
[52.50725174 522.96154785]
[44.49430847 535.66778564]
[34.89138031 547.21936035]
[23.86278343 557.41857910]
[11.59723186 566.09106445]
[-1.69539523 573.08825684]
[-15.78764343 578.29052734]
[-30.43837547 581.60882568]
[-45.39689636 582.98638916]
[-60.40724945 582.39959717]
[-75.21258545 579.85852051]
[-89.55957031 575.40667725]
[-103.20270538 569.12017822]
[-115.90853119 561.10662842]
[-127.45964050 551.50311279]
[-137.65838623 540.47406006]
[-146.33024597 528.20806885]
[-153.32682800 514.91516113]
[-158.52842712 500.82263184]
[-161.84602356 486.17175293]
[-163.22285461 471.21316528]
[-162.63536072 456.20285034]
[-160.09358215 441.39761353]
[-155.64103699 427.05084229]
[-149.35389709 413.40802002]
[-141.33975220 400.70257568]
[-131.73571777 389.15191650]
[-120.70615387 378.95370483]
[-108.43977356 370.28240967]
[-95.14648438 363.28646851]
[-81.05374146 358.08554077]
[-66.40268707 354.76864624]
[-51.44403839 353.39251709]
[-36.43373871 353.98074341]
[-21.62864494 356.52322388]
[-7.28208637 360.97644043]
[-1.00472569 347.35311890]
[5.27263498 333.72979736]
[11.54999542 320.10650635]
[9.00166321 302.74353027]
[24.12538147 292.23852539]
[30.09694481 278.47842407]
[35.96590424 264.67425537]
[41.83486557 250.87007141]
[47.70382690 237.06590271]
[53.57278824 223.26171875]
[59.44174957 209.45755005]
[64.47866058 195.32852173]
[68.66567230 180.92474365]
[72.85268402 166.52095032]
[77.03969574 152.11717224]
[65.20704651 145.08686829]
[55.40655899 135.42315674]
[48.21065140 123.69047546]
[44.03962326 110.57409668]
[43.13709259 96.84011078]
[45.55577087 83.29068756]
[51.15439224 70.71721649]
[59.60595322 59.85406494]
[70.41682434 51.33573532]
[82.95556641 45.65975189]
[96.48983002 43.15763855]
[110.22911072 43.97553635]
[114.84312439 29.70280457]
[119.45713043 15.43007088]
[116.33991241 -0.08100661]
[127.61698914 -9.81120586]
[114.74765778 -2.10534167]
[99.79697418 -3.32065487]
[88.34116364 -13.00386333]
[84.65297699 -27.54336929]
[90.10800171 -41.51629639]
[102.67165375 -49.71109009]
[117.65799713 -49.07129288]
[129.47750854 -39.83553314]
[133.72175598 -25.44735527]
[139.99913025 -39.07067108]
[146.27648926 -52.69398880]
[152.45225525 -66.36365509]
[158.52609253 -80.07892609]
[164.59991455 -93.79418945]
[163.11331177 -109.54540253]
[175.34147644 -118.04959106]
[181.41531372 -131.76486206]
[187.48913574 -145.48011780]
[174.40306091 -152.83534241]
[162.07539368 -161.40116882]
[150.61779785 -171.10005188]
[140.13404846 -181.84414673]
[130.71905518 -193.53613281]
[122.45809937 -206.07014465]
[115.42601013 -219.33267212]
[109.68645477 -233.20358276]
[105.29141998 -247.55728149]
[102.28070068 -262.26373291]
[100.68157959 -277.18981934]
[100.50852203 -292.20031738]
[101.76310730 -307.15927124]
[104.43396759 -321.93124390]
[108.49691772 -336.38244629]
[113.91515350 -350.38201904]
[120.63961792 -363.80313110]
[128.60940552 -376.52426147]
[137.75233459 -388.43020630]
[147.98561096 -399.41314697]
[159.21655273 -409.37359619]
[171.34344482 -418.22137451]
[184.25648499 -425.87631226]
[197.83869934 -432.26913452]
[211.96710205 -437.34191895]
[226.51371765 -441.04873657]
[241.34683228 -443.35598755]
[256.33212280 -444.24282837]
[271.33383179 -443.70117188]
[286.21612549 -441.73593140]
[300.84420776 -438.36495972]
[315.08563232 -433.61871338]
[328.81140137 -427.54025269]
[341.89721680 -420.18453979]
[354.22457886 -411.61825562]
[365.68179321 -401.91897583]
[376.16519165 -391.17449951]
[385.57974243 -379.48214722]
[393.84024048 -366.94784546]
[400.87185669 -353.68505859]
[406.61090088 -339.81393433]
[411.00540161 -325.46008301]
[414.01559448 -310.75350952]
[415.61416626 -295.82739258]
[415.78668213 -280.81689453]
[414.53155518 -265.85797119]
[411.86013794 -251.08609009]
[407.79666138 -236.63502502]
[402.37792969 -222.63568115]
[395.65298462 -209.21481323]
[387.68270874 -196.49395752]
[378.53936768 -184.58834839]
[368.30566406 -173.60578918]
[357.07437134 -163.64573669]
[344.94714355 -154.79841614]
[332.03384399 -147.14392090]
[318.45138550 -140.75160217]
[304.32281494 -135.67933655]
[289.77603149 -131.97305298]
[274.94284058 -129.66633606]
[259.95755005 -128.78005981]
[244.95585632 -129.32226562]
[230.07362366 -131.28802490]
[215.44566345 -134.65954590]
[201.20440674 -139.40629578]
[195.13056946 -125.69102478]
[189.05674744 -111.97575378]
[190.97779846 -97.20555115]
[178.31518555 -87.72035980]
[172.24134827 -74.00508881]
[166.16752625 -60.28982162]
[166.33332825 -52.90102768]
[159.89979553 -46.41662598]
[153.62243652 -32.79331207]
[147.34507751 -19.16999435]
[141.88972473 -5.19719648]
[145.33695984 9.29299927]
[133.72985840 20.04407883]
[129.11585999 34.31681442]
[124.50184631 48.58954620]
[137.95799255 57.54335785]
[148.35679626 69.91684723]
[154.86068726 84.71339417]
[156.94581604 100.74120331]
[154.44422913 116.70931244]
[147.55741882 131.33155823]
[136.84008789 143.43020630]
[123.15546417 152.03076172]
[107.60577393 156.44047546]
[91.44348145 156.30418396]
[87.25646973 170.70796204]
[83.06945801 185.11175537]
[78.88244629 199.51553345]
[91.51663971 191.42991638]
[106.49687958 192.19955444]
[118.23591614 201.53738403]
[122.35536957 215.96063232]
[117.31878662 230.08978271]
[105.00469208 238.65501404]
[90.00593567 238.46170044]
[77.91668701 229.58193970]
[73.24592590 215.32650757]
[67.37696075 229.13069153]
[61.50800323 242.93486023]
[55.63904190 256.73904419]
[49.77008057 270.54321289]
[43.90111923 284.34738159]
[43.42335892 293.46932983]
[37.84064865 298.31237793]
[41.75028229 310.60372925]
[36.40901566 321.90216064]
[25.17331123 326.38385010]
[18.89595032 340.00717163]
[12.61859035 353.63049316]
[6.34122992 367.25381470]
[19.04782104 375.26614380]
[30.59984970 384.86853027]
[40.79964066 395.89663696]
[49.47266769 408.16177368]
[56.47052002 421.45407104]
[61.67345810 435.54605103]
[64.99244690 450.19662476]
[66.37070465 465.15509033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 202]
[39 201]
[40 200]
[41 199]
[43 196]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[49 189]
[50 180]
[51 179]
[52 178]
[53 177]
[65 167]
[66 166]
[67 165]
[69 163]
[78 162]
[79 161]
[80 160]
[81 158]
[82 157]
[83 156]
[85 154]
[86 153]
[87 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
