%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[95.97103119 413.49154663]
[89.83866119 427.20568848]
[81.93302917 439.98004150]
[72.39524078 451.58666992]
[61.39548492 461.81845093]
[49.13008499 470.49273682]
[35.81792068 477.45474243]
[21.69656372 482.58026123]
[7.01803017 485.77777100]
[-7.95572615 486.99023438]
[-22.95748138 486.19601440]
[-37.71950912 483.40927124]
[-51.97836685 478.67971802]
[-65.47959137 472.09182739]
[-77.98222351 463.76312256]
[-89.26316071 453.84222412]
[-99.12106323 442.50622559]
[-107.38001251 429.95736694]
[-113.89261627 416.41967773]
[-118.54264832 402.13470459]
[-121.24713135 387.35739136]
[-121.95778656 372.35144043]
[-120.66194916 357.38467407]
[-117.38272858 342.72415161]
[-112.17865753 328.63156128]
[-105.14260101 315.35839844]
[-96.40013123 303.14147949]
[-86.10726166 292.19891357]
[-74.44768524 282.72589111]
[-61.62948227 274.89154053]
[-47.88140869 268.83566284]
[-33.44881058 264.66629028]
[-18.58925629 262.45788574]
[-3.56793261 262.24981689]
[11.34708691 264.04580688]
[25.88962746 267.81384277]
[31.55241394 253.92381287]
[37.21519852 240.03378296]
[36.22151566 235.36242676]
[38.15180206 230.01724243]
[43.25892258 225.81855774]
[49.33275604 212.10330200]
[55.40658951 198.38803101]
[61.48042297 184.67276001]
[59.55936813 169.90255737]
[72.22197723 160.41735840]
[78.29580688 146.70210266]
[83.33272552 132.57307434]
[87.30482483 118.10854340]
[91.27691650 103.64402008]
[89.78188324 98.61621094]
[91.21026611 93.10866547]
[95.58860779 88.81134033]
[99.98960114 74.47148895]
[104.39060211 60.13164139]
[99.04807281 48.39195633]
[103.00888824 36.53886795]
[113.63241577 30.75378418]
[118.24642944 16.48105049]
[122.86043549 2.20831752]
[112.15590668 -5.92015505]
[104.48992920 -16.93287468]
[100.59700012 -29.75011253]
[100.84252930 -43.12046814]
[105.18859863 -55.74305725]
[113.19898224 -66.39406586]
[124.08292389 -74.04543304]
[136.77317810 -77.96403503]
[150.03065491 -77.78195190]
[155.06756592 -91.91098022]
[160.10447693 -106.04000854]
[165.14140320 -120.16903687]
[162.48738098 -135.76605225]
[174.04916382 -145.15617371]
[171.39515686 -160.75318909]
[182.95693970 -170.14331055]
[187.99385071 -184.27233887]
[174.29057312 -190.39184570]
[161.10270691 -197.55485535]
[148.50958252 -205.71827698]
[136.58694458 -214.83303833]
[125.40648651 -224.84431458]
[115.03544617 -235.69189453]
[105.53620148 -247.31053162]
[96.96588898 -259.63034058]
[89.37604523 -272.57727051]
[82.81232452 -286.07339478]
[77.31418610 -300.03759766]
[72.91471863 -314.38589478]
[69.64036560 -329.03195190]
[67.51081848 -343.88769531]
[66.53889465 -358.86380005]
[66.73043823 -373.87017822]
[68.08428955 -388.81658936]
[70.59231567 -403.61315918]
[74.23942566 -418.17086792]
[79.00368500 -432.40216064]
[84.85644531 -446.22149658]
[91.76251221 -459.54571533]
[99.68033600 -472.29467773]
[108.56230164 -484.39172363]
[118.35500336 -495.76412964]
[128.99952698 -506.34347534]
[140.43186951 -516.06610107]
[152.58328247 -524.87359619]
[165.38066101 -532.71295166]
[178.74705505 -539.53698730]
[192.60206604 -545.30474854]
[206.86236572 -549.98150635]
[221.44221497 -553.53912354]
[236.25390625 -555.95617676]
[251.20835876 -557.21820068]
[266.21563721 -557.31750488]
[281.18548584 -556.25360107]
[296.02786255 -554.03283691]
[310.65353394 -550.66857910]
[324.97451782 -546.18103027]
[338.90466309 -540.59722900]
[352.36022949 -533.95068359]
[365.26025391 -526.28143311]
[377.52719116 -517.63562012]
[389.08724976 -508.06515503]
[399.87091064 -497.62765503]
[409.81329346 -486.38592529]
[418.85464478 -474.40750122]
[426.94055176 -461.76446533]
[434.02239990 -448.53283691]
[440.05761719 -434.79220581]
[445.00985718 -420.62524414]
[448.84936523 -406.11709595]
[451.55307007 -391.35501099]
[453.10467529 -376.42782593]
[453.49487305 -361.42529297]
[452.72128296 -346.43765259]
[450.78860474 -331.55499268]
[447.70843506 -316.86688232]
[443.49929810 -302.46160889]
[438.18652344 -288.42587280]
[431.80203247 -274.84399414]
[424.38424683 -261.79776001]
[415.97778320 -249.36553955]
[406.63320923 -237.62216187]
[396.40667725 -226.63824463]
[385.35974121 -216.47982788]
[373.55880737 -207.20802307]
[361.07485962 -198.87858582]
[347.98297119 -191.54162598]
[334.36190796 -185.24124146]
[320.29357910 -180.01535034]
[305.86254883 -175.89535522]
[291.15567017 -172.90606689]
[276.26138306 -171.06542969]
[261.26922607 -170.38455200]
[246.26937866 -170.86749268]
[231.35206604 -172.51136780]
[216.60700989 -175.30627441]
[202.12287903 -179.23542786]
[197.08596802 -165.10639954]
[200.10025024 -150.51998901]
[188.17819214 -140.11926270]
[191.19248962 -125.53284454]
[179.27043152 -115.13211823]
[174.23352051 -101.00308990]
[169.19659424 -86.87406158]
[164.15968323 -72.74503326]
[176.77015686 -61.87158203]
[184.25346375 -46.95576096]
[185.43637085 -30.27310181]
[180.10922241 -14.38086414]
[169.06246948 -1.72602129]
[153.96949768 5.73149729]
[137.13317871 6.82232666]
[132.51916504 21.09506035]
[127.90515137 35.36779404]
[132.49868774 52.30492401]
[118.73044586 64.53263855]
[114.32945251 78.87248993]
[109.92845154 93.21233368]
[105.74143982 107.61611938]
[101.76934814 122.08064270]
[97.79724884 136.54516602]
[109.53790283 127.20937347]
[124.35858917 124.89695740]
[138.38522339 130.21238708]
[147.95126343 141.76620483]
[150.55616760 156.53828430]
[145.51904297 170.66723633]
[134.15655518 180.45979309]
[119.43885803 183.35618591]
[105.21309662 178.59931946]
[95.19786072 167.43263245]
[92.01107788 152.77592468]
[85.93724060 166.49119568]
[87.42385101 182.24240112]
[75.19568634 190.74659729]
[69.12185669 204.46186829]
[63.04802322 218.17712402]
[56.97418594 231.89239502]
[51.10522842 245.69657898]
[45.44244003 259.58660889]
[39.77965164 273.47662354]
[52.81144333 280.95031738]
[64.73077393 290.09432983]
[75.32492828 300.74548340]
[84.40484619 312.71371460]
[91.80847931 325.78543091]
[97.40370178 339.72735596]
[101.09066772 354.29064941]
[102.80357361 369.21542358]
[102.51185608 384.23538208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 201]
[37 200]
[38 199]
[41 198]
[42 197]
[43 196]
[44 195]
[46 193]
[47 192]
[48 181]
[49 180]
[50 179]
[53 178]
[54 177]
[55 176]
[58 174]
[59 173]
[60 172]
[69 165]
[70 164]
[71 163]
[72 162]
[74 160]
[76 158]
[77 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
