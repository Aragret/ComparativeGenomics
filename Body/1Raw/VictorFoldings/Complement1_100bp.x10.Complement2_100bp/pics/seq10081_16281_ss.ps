%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[93.37210083 779.99011230]
[78.59445953 782.61596680]
[63.64736176 783.97912598]
[48.63851166 784.06970215]
[33.67604446 782.88714600]
[18.86777115 780.43994141]
[4.32038450 776.74572754]
[-9.86129761 771.83105469]
[-23.57509422 765.73144531]
[-36.72219849 758.49072266]
[-49.20787811 750.16119385]
[-60.94217682 740.80273438]
[-71.84054565 730.48291016]
[-81.82446289 719.27593994]
[-90.82198334 707.26269531]
[-98.76829529 694.52966309]
[-105.60612488 681.16864014]
[-111.28621674 667.27581787]
[-115.76764679 652.95129395]
[-119.01811981 638.29840088]
[-121.01422119 623.42260742]
[-121.74156189 608.43109131]
[-121.19490814 593.43194580]
[-119.37818909 578.53314209]
[-116.30450439 563.84216309]
[-111.99599457 549.46472168]
[-106.48370361 535.50445557]
[-99.80735016 522.06195068]
[-92.01503754 509.23413086]
[-83.16291809 497.11334229]
[-73.31475830 485.78692627]
[-62.54152298 475.33651733]
[-50.92083359 465.83737183]
[-38.53642273 457.35797119]
[-25.47751427 449.95941162]
[-11.83820724 443.69497681]
[2.28322983 438.60980225]
[16.78504753 434.74057007]
[31.56276131 432.11511230]
[46.50989151 430.75234985]
[61.51874542 430.66210938]
[76.48118591 431.84506226]
[78.92691040 417.04580688]
[81.37263489 402.24652100]
[83.81836700 387.44726562]
[86.26409149 372.64797974]
[88.70981598 357.84872437]
[91.15554810 343.04943848]
[92.04836273 328.07604980]
[91.37857819 313.09100342]
[83.08068848 300.72189331]
[90.19406891 286.58999634]
[88.21875000 284.60098267]
[86.91230011 281.70965576]
[86.62232971 278.16687012]
[87.59931946 274.34454346]
[89.95743561 270.69854736]
[82.41048431 257.85751343]
[90.35239410 244.17405701]
[90.57572174 229.17572021]
[90.79904938 214.17738342]
[91.02237701 199.17904663]
[91.24570465 184.18070984]
[91.46903229 169.18237305]
[91.69235992 154.18403625]
[77.94158173 150.18318176]
[65.69631958 142.75726318]
[55.79233932 132.41310120]
[48.90559769 119.85668945]
[45.50612259 105.94503021]
[45.82593536 91.62761688]
[49.84320831 77.88162994]
[57.28375626 65.64525604]
[67.63974762 55.75363922]
[80.20437622 48.88190460]
[94.12008667 45.49905777]
[94.56669617 30.50570679]
[87.24370575 16.48128319]
[95.35651398 3.99002290]
[95.80312347 -11.00332737]
[96.24972534 -25.99667740]
[96.69633484 -40.99002838]
[88.43578339 -50.89588928]
[89.11643219 -63.37469101]
[97.82878876 -71.76643372]
[98.49857330 -86.75147247]
[99.16835785 -101.73651123]
[92.05498505 -115.86840820]
[100.35286713 -128.23750305]
[101.02265930 -143.22253418]
[101.69244385 -158.20758057]
[102.36222839 -173.19261169]
[103.03201294 -188.17765808]
[100.28891754 -196.89047241]
[103.82496643 -203.38032532]
[104.71778107 -218.35372925]
[105.61059570 -233.32713318]
[91.39129639 -238.42500305]
[79.18502808 -247.32351685]
[69.98129272 -259.30133057]
[64.52619934 -273.38745117]
[63.26197052 -288.43997192]
[66.29108429 -303.23864746]
[73.36798859 -316.58383179]
[83.91899109 -327.39370728]
[97.08876801 -334.79190063]
[111.80970764 -338.17874146]
[126.88844299 -337.27966309]
[141.10261536 -332.16751099]
[153.29994202 -323.25674438]
[162.49163818 -311.26968384]
[167.93257141 -297.17810059]
[169.18168640 -282.12429810]
[166.13771057 -267.32867432]
[159.04739380 -253.99060059]
[148.48553467 -243.19134521]
[135.30833435 -235.80636597]
[120.58400726 -232.43431091]
[119.69118500 -217.46090698]
[118.79837036 -202.48750305]
[118.01705170 -187.50787354]
[117.34726715 -172.52282715]
[116.67748260 -157.53779602]
[116.00769806 -142.55274963]
[115.33790588 -127.56771088]
[122.49919128 -114.50764465]
[114.15339661 -101.06672668]
[113.48361206 -86.08168793]
[112.81382751 -71.09664917]
[121.72843933 -55.98054886]
[111.68968201 -40.54342270]
[111.24308014 -25.55007172]
[110.79647064 -10.55672073]
[110.34986877 4.43662882]
[117.70479584 17.38862610]
[109.56004333 30.95231247]
[109.11344147 45.94566345]
[123.95447540 50.69371796]
[136.85997009 59.42576218]
[146.78715515 71.43623352]
[152.93389893 85.75468445]
[154.80354309 101.22416687]
[152.24501038 116.59473419]
[145.46504211 130.62443542]
[135.01147461 142.17965698]
[121.72894287 150.32672119]
[106.69069672 154.40736389]
[106.46736908 169.40570068]
[106.24404144 184.40403748]
[106.02071381 199.40237427]
[105.79738617 214.40071106]
[105.57405853 229.39904785]
[105.35073090 244.39738464]
[112.88170624 258.31121826]
[104.95578003 270.92187500]
[105.17910767 285.92022705]
[113.52489471 299.36114502]
[106.36361694 312.42120361]
[107.03340149 327.40625000]
[114.06819153 314.15817261]
[125.58824921 304.55148315]
[139.88464355 300.01129150]
[154.83657837 301.21112061]
[168.22602844 307.97296143]
[178.06675720 319.29376221]
[182.89894104 333.49411011]
[182.00575256 348.46749878]
[175.51969910 361.99267578]
[164.40295410 372.06332397]
[150.30459595 377.18548584]
[135.31605530 376.59930420]
[121.66078186 370.39178467]
[111.36446381 359.48370361]
[105.95481873 345.49517822]
[103.50908661 360.29443359]
[101.06336212 375.09371948]
[98.61763763 389.89297485]
[96.17190552 404.69226074]
[93.72618103 419.49151611]
[91.28045654 434.29080200]
[105.82793427 437.98464966]
[120.00974274 442.89892578]
[133.72369385 448.99822998]
[146.87098694 456.23855591]
[159.35688782 464.56781006]
[171.09143066 473.92593384]
[181.99006653 484.24551392]
[191.97425842 495.45217896]
[200.97209167 507.46520996]
[208.91873169 520.19799805]
[215.75691223 533.55889893]
[221.43736267 547.45159912]
[225.91915894 561.77593994]
[229.17001343 576.42877197]
[231.16650391 591.30450439]
[231.89422607 606.29602051]
[231.34796143 621.29516602]
[229.53163147 636.19396973]
[226.45831299 650.88513184]
[222.15017700 665.26263428]
[216.63825989 679.22302246]
[209.96224976 692.66571045]
[202.17027283 705.49371338]
[193.31845093 717.61474609]
[183.47059631 728.94140625]
[172.69763184 739.39215088]
[161.07717896 748.89154053]
[148.69299316 757.37127686]
[135.63427734 764.77020264]
[121.99512482 771.03497314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 180]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 159]
[50 158]
[52 156]
[57 155]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
[76 137]
[77 136]
[79 134]
[80 133]
[81 132]
[82 131]
[85 129]
[86 128]
[87 127]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
