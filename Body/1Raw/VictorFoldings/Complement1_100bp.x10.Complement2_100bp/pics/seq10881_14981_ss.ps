%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[102.30195618 486.24523926]
[88.90557098 493.03616333]
[74.77617645 498.12927246]
[60.12798691 501.44741821]
[45.18305588 502.94027710]
[30.16794395 502.58520508]
[15.31027985 500.38760376]
[0.83530128 496.38079834]
[-13.03755474 490.62548828]
[-26.09798050 483.20895386]
[-38.14797974 474.24365234]
[-49.00488281 463.86541748]
[-58.50410080 452.23165894]
[-66.50162506 439.51870728]
[-72.87621307 425.91928101]
[-77.53123474 411.63955688]
[-80.39611053 396.89602661]
[-81.42742920 381.91217041]
[-80.60953522 366.91513062]
[-77.95483398 352.13229370]
[-73.50357819 337.78775024]
[-67.32323456 324.09896851]
[-59.50751114 311.27343750]
[-50.17488098 299.50561523]
[-39.46682358 288.97390747]
[-27.54567719 279.83795166]
[-14.59216022 272.23623657]
[-0.80264395 266.28402710]
[13.61382580 262.07153320]
[28.43869781 259.66262817]
[43.44723129 259.09384155]
[58.41190338 260.37377930]
[61.51601410 245.69848633]
[56.57998657 231.64555359]
[67.00562286 219.74526978]
[70.10973358 205.06996155]
[73.21383667 190.39466858]
[68.27781677 176.34173584]
[78.70344543 164.44145203]
[81.80755615 149.76614380]
[84.91166687 135.09083557]
[72.64128876 126.65569305]
[64.52835083 114.16994476]
[61.80569458 99.53092194]
[64.88705444 84.96318054]
[73.30418396 72.68043518]
[85.77802277 64.54918671]
[100.41303253 61.80504608]
[103.51714325 47.12974548]
[106.62125397 32.45444107]
[109.72535706 17.77914047]
[108.43958282 8.73565578]
[112.98647308 2.90920281]
[111.83548737 -6.15242147]
[116.46862030 -11.91053200]
[120.00829315 -26.48690796]
[123.54796600 -41.06328201]
[109.18502045 -45.40156937]
[95.08287811 -50.52449036]
[81.28435516 -56.41648865]
[67.83135986 -63.05967331]
[54.76475906 -70.43386841]
[42.12422180 -78.51667786]
[29.94814873 -87.28355408]
[18.27351189 -96.70787048]
[7.13576794 -106.76100159]
[-3.43125725 -117.41242981]
[-13.39547157 -128.62979126]
[-22.72661591 -140.37904358]
[-31.39634705 -152.62446594]
[-39.37834167 -165.32890320]
[-46.64835358 -178.45376587]
[-53.18430710 -191.95916748]
[-58.96634674 -205.80413818]
[-63.97692108 -219.94657898]
[-68.20080566 -234.34358215]
[-71.62518311 -248.95141602]
[-74.23963928 -263.72570801]
[-76.03624725 -278.62158203]
[-77.00953674 -293.59381104]
[-77.15656281 -308.59692383]
[-76.47688293 -323.58532715]
[-74.97254944 -338.51354980]
[-72.64813232 -353.33624268]
[-69.51069641 -368.00836182]
[-65.56977081 -382.48538208]
[-60.83732224 -396.72332764]
[-55.32772064 -410.67892456]
[-49.05770111 -424.30984497]
[-42.04630280 -437.57464600]
[-34.31481934 -450.43307495]
[-25.88673592 -462.84606934]
[-16.78764343 -474.77593994]
[-7.04517746 -486.18640137]
[3.31107402 -497.04287720]
[14.24965954 -507.31237793]
[25.73735809 -516.96368408]
[37.73928452 -525.96746826]
[50.21898651 -534.29644775]
[63.13856125 -541.92529297]
[76.45877838 -548.83087158]
[90.13918304 -554.99218750]
[104.13822174 -560.39044189]
[118.41339111 -565.00939941]
[132.92132568 -568.83496094]
[147.61796570 -571.85546875]
[162.45869446 -574.06176758]
[177.39842224 -575.44720459]
[192.39178467 -576.00750732]
[207.39324951 -575.74102783]
[222.35725403 -574.64855957]
[237.23834229 -572.73339844]
[251.99134827 -570.00140381]
[266.57144165 -566.46081543]
[280.93435669 -562.12243652]
[295.03646851 -556.99938965]
[308.83496094 -551.10729980]
[322.28790283 -544.46405029]
[335.35443115 -537.08972168]
[347.99493408 -529.00683594]
[360.17092896 -520.23986816]
[371.84552002 -510.81549072]
[382.98318481 -500.76226807]
[393.55014038 -490.11077881]
[403.51425171 -478.89334106]
[412.84533691 -467.14401245]
[421.51498413 -454.89852905]
[429.49688721 -442.19403076]
[436.76678467 -429.06912231]
[443.30264282 -415.56365967]
[449.08459473 -401.71868896]
[454.09506226 -387.57617188]
[458.31884766 -373.17916870]
[461.74313354 -358.57131958]
[464.35748291 -343.79699707]
[466.15399170 -328.90112305]
[467.12716675 -313.92889404]
[467.27407837 -298.92578125]
[466.59429932 -283.93734741]
[465.08987427 -269.00912476]
[462.76535034 -254.18646240]
[459.62780762 -239.51435852]
[455.68676758 -225.03736877]
[450.95422363 -210.79946899]
[445.44451904 -196.84388733]
[439.17440796 -183.21302795]
[432.16293335 -169.94827271]
[424.43133545 -157.08988953]
[416.00317383 -144.67697144]
[406.90399170 -132.74717712]
[397.16146851 -121.33676147]
[386.80511475 -110.48036194]
[375.86645508 -100.21096039]
[364.37869263 -90.55973816]
[352.37670898 -81.55600739]
[339.89694214 -73.22711182]
[326.97732544 -65.59835052]
[313.65704346 -58.69288635]
[299.97662354 -52.53169250]
[285.97753906 -47.13348007]
[271.70233154 -42.51464844]
[257.19436646 -38.68922043]
[242.49771118 -35.66881180]
[227.65696716 -33.46260071]
[212.71722412 -32.07728195]
[197.72386169 -31.51706696]
[182.72239685 -31.78365517]
[167.75840759 -32.87623596]
[152.87731934 -34.79149246]
[138.12434387 -37.52360916]
[134.58467102 -22.94723511]
[131.04499817 -8.37086010]
[127.61393738 6.23146248]
[124.40066528 20.88324928]
[121.29655457 35.55855179]
[118.19244385 50.23385620]
[115.08833313 64.90915680]
[127.35871124 73.34430695]
[135.47164917 85.83005524]
[138.19430542 100.46907806]
[135.11294556 115.03681946]
[126.69581604 127.31956482]
[114.22197723 135.45082092]
[99.58696747 138.19494629]
[96.48285675 152.87025452]
[93.37874603 167.54556274]
[98.09275055 182.64816284]
[87.88914490 193.49877930]
[84.78503418 208.17407227]
[81.68092346 222.84938049]
[86.39492035 237.95199585]
[76.19131470 248.80259705]
[73.08720398 263.47790527]
[87.28844452 268.36709595]
[100.78120422 274.96447754]
[113.36092377 283.16998291]
[124.83691406 292.85922241]
[135.03518677 303.88531494]
[143.80114746 316.08111572]
[151.00190735 329.26171875]
[156.52830505 343.22735596]
[160.29655457 357.76626587]
[162.24952698 372.65805054]
[162.35763550 387.67697144]
[160.61921692 402.59533691]
[157.06063843 417.18698120]
[151.73585510 431.23071289]
[144.72558594 444.51361084]
[136.13607788 456.83432007]
[126.09757996 468.00607300]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 193]
[33 192]
[35 190]
[36 189]
[37 188]
[39 186]
[40 185]
[41 184]
[48 177]
[49 176]
[50 175]
[51 174]
[53 173]
[55 172]
[56 171]
[57 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
