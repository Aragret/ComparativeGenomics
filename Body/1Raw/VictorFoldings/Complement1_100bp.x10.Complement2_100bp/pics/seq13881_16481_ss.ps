%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-2.13707757 844.87695312]
[-16.89123535 847.60162354]
[-31.77037430 849.53045654]
[-46.73159409 850.65777588]
[-61.73175812 850.98046875]
[-76.72761536 850.49749756]
[-91.67593384 849.21032715]
[-106.53360748 847.12255859]
[-121.25780487 844.24035645]
[-135.80606079 840.57196045]
[-150.13642883 836.12792969]
[-164.20761108 830.92108154]
[-177.97901917 824.96649170]
[-191.41094971 818.28125000]
[-204.46466064 810.88464355]
[-217.10253906 802.79803467]
[-229.28814697 794.04473877]
[-240.98632812 784.65002441]
[-252.16336060 774.64086914]
[-262.78701782 764.04620361]
[-272.82669067 752.89654541]
[-282.25338745 741.22412109]
[-291.03997803 729.06250000]
[-299.16110229 716.44677734]
[-306.59335327 703.41333008]
[-313.31527710 689.99975586]
[-319.30752563 676.24462891]
[-324.55282593 662.18774414]
[-329.03601074 647.86962891]
[-332.74417114 633.33142090]
[-335.66665649 618.61517334]
[-337.79498291 603.76324463]
[-339.12304688 588.81854248]
[-339.64700317 573.82403564]
[-339.36535645 558.82305908]
[-338.27890015 543.85882568]
[-336.39080811 528.97442627]
[-333.70648193 514.21289062]
[-330.23364258 499.61669922]
[-325.98236084 485.22796631]
[-320.96487427 471.08816528]
[-315.19564819 457.23809814]
[-308.69128418 443.71765137]
[-301.47058105 430.56582642]
[-293.55432129 417.82055664]
[-284.96536255 405.51855469]
[-275.72848511 393.69534302]
[-265.87023926 382.38494873]
[-255.41912842 371.62005615]
[-244.40525818 361.43164062]
[-232.86038208 351.84912109]
[-220.81779480 342.90008545]
[-208.31221008 334.61035156]
[-195.37969971 327.00384521]
[-182.05752563 320.10247803]
[-168.38412476 313.92617798]
[-154.39889526 308.49267578]
[-140.14219666 303.81771851]
[-125.65509796 299.91473389]
[-110.97939301 296.79501343]
[-96.15738678 294.46752930]
[-81.23181915 292.93899536]
[-66.24571991 292.21383667]
[-51.24229813 292.29409790]
[-36.26481628 293.17959595]
[-21.35645866 294.86776733]
[-6.56020832 297.35372925]
[8.08127308 300.63034058]
[22.52577019 304.68811035]
[27.35176849 290.48565674]
[32.17776489 276.28320312]
[37.00376511 262.08074951]
[41.82976151 247.87828064]
[46.65575790 233.67582703]
[51.48175812 219.47337341]
[56.30775452 205.27091980]
[61.13375092 191.06845093]
[65.95974731 176.86599731]
[70.78574371 162.66354370]
[75.61174774 148.46109009]
[80.43774414 134.25863647]
[77.20661926 119.71871948]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[89.04770660 79.96353149]
[74.04830933 80.09855652]
[61.30059052 72.19314575]
[54.75455475 58.69686890]
[56.43857193 43.79170227]
[65.83082581 32.09616470]
[80.02102661 27.23425293]
[94.61218262 30.71248055]
[105.08307648 41.45307922]
[108.18915558 56.12821960]
[114.86934662 42.69784164]
[121.54954529 29.26746750]
[128.22973633 15.83709145]
[115.83833313 7.34007406]
[104.75013733 -2.79885745]
[95.18096924 -14.38234615]
[87.31710815 -27.18491554]
[81.31161499 -40.95735931]
[77.28140259 -55.43159485]
[75.30490875 -70.32587433]
[75.42061615 -85.35028076]
[77.62625885 -100.21235657]
[81.87891388 -114.62280273]
[88.09580231 -128.30113220]
[96.15590668 -140.98106384]
[105.90233612 -152.41580200]
[117.14537048 -162.38276672]
[129.66616821 -170.68792725]
[143.22100830 -177.16964722]
[157.54602051 -181.70173645]
[172.36239624 -184.19599915]
[187.38171387 -184.60385132]
[202.31161499 -182.91738892]
[216.86148071 -179.16941833]
[230.74810791 -173.43289185]
[243.70118713 -165.81948853]
[255.46858215 -156.47740173]
[265.82122803 -145.58847046]
[274.55761719 -133.36465454]
[281.50769043 -120.04389191]
[286.53616333 -105.88548279]
[289.54513550 -91.16501617]
[290.47607422 -76.16903687]
[289.31082153 -61.18943405]
[286.07208252 -46.51780701]
[280.82290649 -32.43973160]
[273.66546631 -19.22924423]
[264.73904419 -7.14349222]
[254.21745300 3.58227181]
[242.30545044 12.73926830]
[229.23493958 20.14925385]
[215.26033020 25.66798973]
[200.65365601 29.18805313]
[185.69920349 30.64092445]
[170.68811035 29.99832344]
[155.91253662 27.27276039]
[141.66011047 22.51728630]
[134.97991943 35.94766235]
[128.29972839 49.37803650]
[121.61952972 62.80841446]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[106.06089783 129.52340698]
[94.64019775 139.08462524]
[89.81420135 153.28709412]
[84.98820496 167.48954773]
[80.16220856 181.69200134]
[75.33620453 195.89445496]
[70.51020813 210.09690857]
[65.68421173 224.29936218]
[60.85821533 238.50181580]
[56.03221893 252.70428467]
[51.20621872 266.90673828]
[46.38022232 281.10919189]
[41.55422592 295.31164551]
[36.72822571 309.51409912]
[50.65457153 315.09674072]
[64.26118469 321.41885376]
[77.50882721 328.46221924]
[90.35931396 336.20651245]
[102.77558136 344.62942505]
[114.72183990 353.70666504]
[126.16363525 363.41201782]
[137.06797791 373.71755981]
[147.40344238 384.59356689]
[157.14021301 396.00866699]
[166.25022888 407.92993164]
[174.70721436 420.32302856]
[182.48677063 433.15216064]
[189.56649780 446.38043213]
[195.92597961 459.96960449]
[201.54685974 473.88058472]
[206.41293335 488.07318115]
[210.51019287 502.50653076]
[213.82679749 517.13897705]
[216.35321045 531.92840576]
[218.08212280 546.83209229]
[219.00857544 561.80706787]
[219.12986755 576.81024170]
[218.44567871 591.79827881]
[216.95796204 606.72796631]
[214.67100525 621.55627441]
[211.59143066 636.24047852]
[207.72807312 650.73815918]
[203.09210205 665.00762939]
[197.69688416 679.00762939]
[191.55796814 692.69787598]
[184.69305420 706.03887939]
[177.12193298 718.99212646]
[168.86643982 731.52032471]
[159.95036316 743.58734131]
[150.39942932 755.15838623]
[140.24118042 766.20007324]
[129.50488281 776.68054199]
[118.22151184 786.56964111]
[106.42358398 795.83886719]
[94.14512634 804.46142578]
[81.42153931 812.41247559]
[68.28951263 819.66912842]
[54.78689575 826.21044922]
[40.95263672 832.01751709]
[26.82661247 837.07366943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 153]
[81 152]
[83 150]
[85 148]
[86 147]
[96 146]
[97 145]
[98 144]
[99 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
