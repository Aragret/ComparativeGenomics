%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-34.66878510 465.72280884]
[-30.14227486 480.05081177]
[-27.70100594 494.87716675]
[-27.39468193 509.90005493]
[-29.22953987 524.81359863]
[-33.16822052 539.31420898]
[-39.13054276 553.10662842]
[-46.99511719 565.91015625]
[-56.60183334 577.46398926]
[-67.75510406 587.53302002]
[-80.22787476 595.91223145]
[-93.76621246 602.43096924]
[-108.09449005 606.95660400]
[-122.92099762 609.39691162]
[-137.94389343 609.70233154]
[-152.85733032 607.86657715]
[-167.35769653 603.92700195]
[-181.14978027 597.96380615]
[-193.95277405 590.09844971]
[-205.50604248 580.49102783]
[-215.57437134 569.33709717]
[-223.95278931 556.86383057]
[-230.47071838 543.32507324]
[-234.99545288 528.99652100]
[-237.43489075 514.16986084]
[-237.73934937 499.14694214]
[-235.90264893 484.23361206]
[-231.96217346 469.73348999]
[-225.99813843 455.94180298]
[-218.13198853 443.13928223]
[-208.52383423 431.58660889]
[-197.36930847 421.51895142]
[-184.89550781 413.14132690]
[-171.35636902 406.62423706]
[-157.02752686 402.10037231]
[-142.20071411 399.66186523]
[-127.17778015 399.35833740]
[-112.26457214 401.19595337]
[-97.76469421 405.13732910]
[-83.97335815 411.10220337]
[-76.12160492 398.32138062]
[-68.26985168 385.54052734]
[-60.41809082 372.75967407]
[-52.56633759 359.97885132]
[-52.49685669 345.08441162]
[-38.68053818 337.37597656]
[-30.82878113 324.59512329]
[-22.97702599 311.81430054]
[-15.12526989 299.03344727]
[-7.27351475 286.25259399]
[0.57824075 273.47177124]
[0.64772147 258.57733154]
[14.46404076 250.86888123]
[22.31579590 238.08804321]
[30.16755295 225.30720520]
[38.01930618 212.52636719]
[45.87106323 199.74551392]
[53.72282028 186.96467590]
[61.57457352 174.18383789]
[69.42633057 161.40298462]
[75.80493164 147.82678223]
[80.63093567 133.62432861]
[85.45693207 119.42187500]
[90.28292847 105.21941376]
[75.87922668 109.40671539]
[63.53746033 100.88141632]
[62.35551453 85.92805481]
[73.20467377 75.56968689]
[88.08734894 77.44213104]
[96.03239441 90.16342926]
[94.31143188 74.43610382]
[106.41162872 65.75079346]
[112.28058624 51.94661713]
[110.55963135 36.21928787]
[122.65982056 27.53398323]
[128.52877808 13.72980595]
[134.39775085 -0.07437082]
[140.16377258 -13.92185688]
[145.82656860 -27.81188393]
[151.48934937 -41.70191193]
[138.09255981 -48.46743011]
[125.28360748 -56.28901291]
[113.14557648 -65.11592865]
[101.75717926 -74.89093781]
[91.19228363 -85.55063629]
[81.51940155 -97.02590179]
[72.80126190 -109.24230194]
[65.09441376 -122.12060547]
[58.44884109 -135.57730103]
[52.90763855 -149.52511597]
[48.50674057 -163.87358093]
[45.27470016 -178.52964783]
[43.23246765 -193.39825439]
[42.39329147 -208.38298035]
[42.76261520 -223.38664246]
[44.33804703 -238.31193542]
[47.10935974 -253.06205750]
[51.05858994 -267.54135132]
[56.16011810 -281.65591431]
[62.38086319 -295.31417847]
[69.68048096 -308.42761230]
[78.01162720 -320.91113281]
[87.32026672 -332.68380737]
[97.54603577 -343.66925049]
[108.62261200 -353.79623413]
[120.47815704 -362.99908447]
[133.03578186 -371.21807861]
[146.21405029 -378.39999390]
[159.92749023 -384.49816895]
[174.08717346 -389.47308350]
[188.60125732 -393.29251099]
[203.37559509 -395.93161011]
[218.31440735 -397.37332153]
[233.32077026 -397.60827637]
[248.29737854 -396.63494873]
[263.14712524 -394.45965576]
[277.77365112 -391.09649658]
[292.08212280 -386.56726074]
[305.97973633 -380.90139771]
[319.37640381 -374.13555908]
[332.18518066 -366.31372070]
[344.32299805 -357.48651123]
[355.71118164 -347.71127319]
[366.27584839 -337.05133057]
[375.94848633 -325.57586670]
[384.66635132 -313.35925293]
[392.37292480 -300.48077393]
[399.01818848 -287.02395630]
[404.55908203 -273.07601929]
[408.95965576 -258.72744751]
[412.19137573 -244.07131958]
[414.23330688 -229.20265198]
[415.07214355 -214.21791077]
[414.70248413 -199.21424866]
[413.12673950 -184.28900146]
[410.35507202 -169.53894043]
[406.40554810 -155.05972290]
[401.30368042 -140.94528198]
[395.08264160 -127.28713989]
[387.78274536 -114.17387390]
[379.45132446 -101.69053650]
[370.14242554 -89.91808319]
[359.91641235 -78.93286133]
[348.83959961 -68.80612183]
[336.98385620 -59.60354233]
[324.42605591 -51.38479996]
[311.24761963 -44.20320129]
[297.53405762 -38.10531616]
[283.37426758 -33.13070297]
[268.86010742 -29.31161499]
[254.08569336 -26.67282486]
[239.14686584 -25.23144722]
[224.14048767 -24.99682617]
[209.16389465 -25.97048759]
[194.31422424 -28.14611435]
[179.68775940 -31.50959778]
[165.37937927 -36.03912354]
[159.71659851 -22.14909744]
[154.05380249 -8.25906944]
[154.43954468 -0.87848711]
[148.20191956 5.79459000]
[142.33296204 19.59876633]
[136.46400452 33.40294266]
[138.60475159 48.14290619]
[126.08476257 57.81557846]
[120.21580505 71.61975861]
[122.35655212 86.35971832]
[109.83657074 96.03239441]
[104.48538208 110.04541779]
[99.65938568 124.24787140]
[94.83338928 138.45033264]
[90.00739288 152.65278625]
[101.22933197 142.69949341]
[115.26345825 137.40390015]
[130.26333618 137.46273804]
[144.25549316 142.86827087]
[155.39900208 152.90930176]
[162.22773743 166.26477051]
[163.84327698 181.17750549]
[160.03306580 195.68551636]
[151.29838562 207.88000488]
[138.78846741 216.15658569]
[124.14917755 219.42631531]
[109.30657196 217.25903320]
[96.21345520 209.93984985]
[86.59245300 198.43176270]
[81.70937347 184.24882507]
[82.20716858 169.25474548]
[74.35541534 182.03558350]
[66.50366211 194.81643677]
[58.65190506 207.59727478]
[50.80015182 220.37811279]
[42.94839478 233.15896606]
[35.09663773 245.93980408]
[27.24488449 258.72064209]
[26.61379242 274.52926636]
[13.35908318 281.32351685]
[5.50732803 294.10437012]
[-2.34442759 306.88519287]
[-10.19618320 319.66604614]
[-18.04793930 332.44689941]
[-25.89969444 345.22772217]
[-26.53078461 361.03634644]
[-39.78549576 367.83059692]
[-47.63724899 380.61145020]
[-55.48900604 393.39227295]
[-63.34075928 406.17312622]
[-71.19251251 418.95397949]
[-59.63805771 428.55996704]
[-49.56834412 439.71261597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 208]
[41 207]
[42 206]
[43 205]
[44 204]
[46 202]
[47 201]
[48 200]
[49 199]
[50 198]
[51 197]
[53 195]
[54 194]
[55 193]
[56 192]
[57 191]
[58 190]
[59 189]
[60 188]
[61 172]
[62 171]
[63 170]
[64 169]
[70 168]
[72 166]
[73 165]
[75 163]
[76 162]
[77 161]
[78 159]
[79 158]
[80 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
