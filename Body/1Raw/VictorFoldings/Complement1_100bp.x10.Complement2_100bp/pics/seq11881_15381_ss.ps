%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[110.99610901 301.37966919]
[114.05859375 286.67868042]
[118.77693176 272.42263794]
[125.08961487 258.79736328]
[132.91433716 245.98052979]
[142.14909363 234.13920593]
[152.67349243 223.42776489]
[164.35032654 213.98587036]
[156.30915833 201.32334900]
[148.26799011 188.66082764]
[140.22680664 175.99829102]
[132.18563843 163.33576965]
[124.14446259 150.67324829]
[116.00924683 138.07093811]
[107.78044128 125.52953339]
[99.55163574 112.98813629]
[90.95307159 100.69729614]
[81.99237061 88.66791534]
[73.03167725 76.63854218]
[64.07098389 64.60916138]
[55.11028671 52.57978439]
[47.47412872 47.56710815]
[46.10731125 40.30393982]
[37.32670975 28.14248657]
[28.54610634 15.98102951]
[19.76550293 3.81957412]
[10.98489952 -8.34188175]
[2.20429659 -20.50333786]
[-10.42556286 -12.40386105]
[-23.48242760 -5.01243496]
[-36.92664337 1.64849198]
[-50.71738052 7.55869102]
[-64.81275940 12.70021248]
[-79.16996765 17.05744362]
[-93.74540710 20.61714745]
[-108.49480438 23.36851883]
[-123.37337494 25.30319595]
[-138.33593750 26.41530800]
[-153.33703613 26.70147705]
[-168.33111572 26.16083145]
[-183.27265930 24.79501343]
[-198.11625671 22.60817337]
[-212.81684875 19.60695076]
[-227.32980347 15.80045986]
[-241.61100769 11.20026207]
[-255.61712646 5.82032824]
[-269.30560303 -0.32300341]
[-282.63485718 -7.21107578]
[-295.56445312 -14.82296944]
[-308.05505371 -23.13556862]
[-320.06878662 -32.12362671]
[-331.56915283 -41.75984573]
[-342.52120972 -52.01496506]
[-352.89169312 -62.85783386]
[-362.64910889 -74.25553131]
[-371.76385498 -86.17343140]
[-380.20822144 -98.57534790]
[-387.95657349 -111.42361450]
[-394.98538208 -124.67921448]
[-401.27328491 -138.30187988]
[-406.80117798 -152.25025940]
[-411.55230713 -166.48197937]
[-415.51223755 -180.95379639]
[-418.66891479 -195.62181091]
[-421.01278687 -210.44142151]
[-422.53671265 -225.36766052]
[-423.23605347 -240.35517883]
[-423.10870361 -255.35847473]
[-422.15505981 -270.33197021]
[-420.37802124 -285.23019409]
[-417.78292847 -300.00787354]
[-414.37774658 -314.62017822]
[-410.17276001 -329.02273560]
[-405.18072510 -343.17175293]
[-399.41687012 -357.02429199]
[-392.89865112 -370.53826904]
[-385.64587402 -383.67263794]
[-377.68054199 -396.38754272]
[-369.02688599 -408.64434814]
[-359.71118164 -420.40582275]
[-349.76168823 -431.63623047]
[-339.20864868 -442.30151367]
[-328.08410645 -452.36926270]
[-316.42184448 -461.80889893]
[-304.25729370 -470.59173584]
[-291.62738037 -478.69113159]
[-278.57046509 -486.08245850]
[-265.12619019 -492.74328613]
[-251.33540344 -498.65341187]
[-237.23999023 -503.79483032]
[-222.88275146 -508.15194702]
[-208.30729675 -511.71154785]
[-193.55787659 -514.46282959]
[-178.67929077 -516.39739990]
[-163.71672058 -517.50939941]
[-148.71562195 -517.79547119]
[-133.72154236 -517.25469971]
[-118.78002167 -515.88879395]
[-103.93643188 -513.70184326]
[-89.23585510 -510.70053101]
[-74.72293854 -506.89392090]
[-60.44175339 -502.29364014]
[-46.43568039 -496.91360474]
[-32.74724960 -490.77017212]
[-19.41802979 -483.88198853]
[-6.48850632 -476.27001953]
[6.00205564 -467.95733643]
[18.01572227 -458.96917725]
[29.51600838 -449.33288574]
[40.46798706 -439.07769775]
[50.83840179 -428.23474121]
[60.59575272 -416.83697510]
[69.71040344 -404.91900635]
[78.15468597 -392.51702881]
[85.90294647 -379.66873169]
[92.93164825 -366.41305542]
[99.21945190 -352.79034424]
[104.74726868 -338.84194946]
[109.49829865 -324.61019897]
[113.45811462 -310.13833618]
[116.61470032 -295.47030640]
[118.95845795 -280.65066528]
[120.48226929 -265.72442627]
[121.18151855 -250.73690796]
[121.05406952 -235.73361206]
[120.10031891 -220.76013184]
[118.32315826 -205.86192322]
[115.72798920 -191.08424377]
[112.32268524 -176.47195435]
[108.11759186 -162.06945801]
[103.12548065 -147.92047119]
[97.36151123 -134.06797791]
[90.84319305 -120.55404663]
[83.59031677 -107.41970825]
[75.62491608 -94.70487213]
[66.97116852 -82.44813538]
[57.65537262 -70.68672180]
[47.70580673 -59.45635986]
[37.15269089 -48.79115295]
[26.02807808 -38.72348785]
[14.36575222 -29.28394127]
[23.14635468 -17.12248421]
[31.92695808 -4.96102905]
[40.70756149 7.20042658]
[49.48816681 19.36188316]
[58.26876831 31.52333832]
[67.13966370 43.61909103]
[76.10035706 55.64846802]
[85.06105804 67.67784882]
[94.02175140 79.70722198]
[102.98244476 91.73660278]
[105.95003510 92.43152618]
[108.73035431 94.22159576]
[110.91729736 97.03952789]
[112.13529968 100.66895294]
[112.09303284 104.75932312]
[120.32184601 117.30072784]
[128.55064392 129.84213257]
[135.87490845 135.30043030]
[136.80699158 142.63208008]
[144.84815979 155.29460144]
[152.88934326 167.95712280]
[160.93051147 180.61964417]
[168.97167969 193.28218079]
[177.01284790 205.94470215]
[190.52398682 199.39129639]
[204.69409180 194.42080688]
[219.33843994 191.09800720]
[234.26609802 189.46624756]
[249.28247070 189.54676819]
[264.19177246 191.33854675]
[278.79965210 194.81820679]
[292.91561890 199.94038391]
[306.35568237 206.63830566]
[318.94464111 214.82466125]
[330.51834106 224.39270020]
[340.92587280 235.21771240]
[350.03158569 247.15853882]
[357.71679688 260.05953979]
[363.88125610 273.75250244]
[368.44461060 288.05889893]
[371.34738159 302.79226685]
[372.55172729 317.76046753]
[372.04196167 332.76840210]
[369.82467651 347.62039185]
[365.92883301 362.12280273]
[360.40518188 376.08657837]
[353.32577515 389.32968140]
[344.78289795 401.67944336]
[334.88787842 412.97488403]
[323.76977539 423.06869507]
[311.57348633 431.82934570]
[298.45806885 439.14257812]
[284.59448242 444.91305542]
[270.16345215 449.06555176]
[255.35313416 451.54595947]
[240.35661316 452.32189941]
[225.36938477 451.38327026]
[210.58686829 448.74230957]
[196.20175171 444.43344116]
[182.40158081 438.51287842]
[169.36628723 431.05776978]
[157.26579285 422.16528320]
[146.25787354 411.95141602]
[136.48602295 400.54928589]
[128.07763672 388.10754395]
[121.14233398 374.78842163]
[115.77054596 360.76550293]
[112.03229523 346.22167969]
[109.97631073 331.34649658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[14 158]
[15 157]
[16 156]
[17 151]
[18 150]
[19 149]
[20 148]
[21 147]
[23 146]
[24 145]
[25 144]
[26 143]
[27 142]
[28 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
