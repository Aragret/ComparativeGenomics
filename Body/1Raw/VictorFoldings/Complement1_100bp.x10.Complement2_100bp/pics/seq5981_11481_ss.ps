%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[169.03427124 646.18902588]
[156.98152161 637.25250244]
[145.47398376 627.62402344]
[134.55137634 617.33679199]
[124.25131989 606.42626953]
[114.60933685 594.93011475]
[105.65865326 582.88781738]
[97.43013000 570.34106445]
[89.95213318 557.33294678]
[83.25044250 543.90844727]
[77.34815216 530.11376953]
[72.26562500 515.99645996]
[68.02036285 501.60519409]
[64.62701416 486.98959351]
[62.09727097 472.20004272]
[60.43984985 457.28750610]
[59.66047287 442.30343628]
[59.76181793 427.29940796]
[60.74354172 412.32720947]
[62.60226059 397.43844604]
[65.33156586 382.68441772]
[68.92204285 368.11599731]
[73.36132050 353.78341675]
[78.63410187 339.73605347]
[84.72219849 326.02233887]
[91.60462189 312.68957520]
[99.25765991 299.78369141]
[107.65492249 287.34921265]
[116.76746368 275.42898560]
[126.56387329 264.06408691]
[137.01037598 253.29370117]
[148.07095337 243.15496826]
[159.70750427 233.68283081]
[171.87988281 224.90994263]
[163.83871460 212.24742126]
[155.79754639 199.58489990]
[147.75636292 186.92237854]
[131.78671265 179.64659119]
[131.16322327 161.24298096]
[122.93441010 148.70158386]
[114.70560455 136.16018677]
[106.47679138 123.61878204]
[98.24798584 111.07738495]
[95.28451538 125.78173065]
[83.64147949 135.23898315]
[68.64190674 135.12541199]
[57.14340973 125.49294281]
[54.40294266 110.74540710]
[61.67340851 97.62517548]
[75.63085175 92.13065338]
[89.89557648 96.77499390]
[83.01616669 83.44556427]
[69.81143951 74.73087311]
[70.84995270 59.87251663]
[63.97053909 46.54308701]
[57.09112549 33.21365738]
[50.21171188 19.88422775]
[43.33230209 6.55479908]
[35.86455917 -6.45415306]
[27.82338715 -19.11667824]
[19.78221321 -31.77920341]
[6.22646189 -25.31399155]
[-8.00976181 -20.52992439]
[-22.71885109 -17.49676895]
[-37.68630600 -16.25875664]
[-52.69385529 -16.83394051]
[-67.52264404 -19.21393394]
[-81.95642853 -23.36402893]
[-95.78471375 -29.22370529]
[-108.80585480 -36.70751190]
[-120.82994843 -45.70631027]
[-131.68167114 -56.08887482]
[-141.20274353 -67.70379639]
[-149.25434875 -80.38169098]
[-155.71905518 -93.93768311]
[-160.50257874 -108.17408752]
[-163.53518677 -122.88329315]
[-164.77264404 -137.85079956]
[-164.19689941 -152.85832214]
[-161.81634521 -167.68702698]
[-157.66571045 -182.12065125]
[-151.80552673 -195.94871521]
[-144.32122803 -208.96957397]
[-135.32197571 -220.99333191]
[-124.93901062 -231.84466553]
[-113.32373810 -241.36531067]
[-100.64553833 -249.41644287]
[-87.08930206 -255.88063049]
[-72.85272217 -260.66363525]
[-58.14340210 -263.69567871]
[-43.17585754 -264.93258667]
[-28.16835022 -264.35629272]
[-13.33973885 -261.97518921]
[1.09373331 -257.82400513]
[14.92158318 -251.96328735]
[27.94216156 -244.47851562]
[39.96558762 -235.47882080]
[50.81652451 -225.09544373]
[60.33673859 -213.47979736]
[68.38739014 -200.80130005]
[74.85108185 -187.24482727]
[79.63355255 -173.00807190]
[82.66505432 -158.29864502]
[83.90139008 -143.33103943]
[83.32452393 -128.32356262]
[80.94286346 -113.49504089]
[76.79115295 -99.06172180]
[70.92992401 -85.23409271]
[63.44465637 -72.21379089]
[54.44450760 -60.19070435]
[44.06072617 -49.34015274]
[32.44474030 -39.82037735]
[40.48591232 -27.15785027]
[48.52708435 -14.49532604]
[52.84344101 -28.86087799]
[65.98766327 -36.08787155]
[80.43014526 -32.03635406]
[87.89757538 -19.02722359]
[84.11226654 -4.51269770]
[71.24262238 3.19264388]
[56.66173172 -0.32461327]
[63.54114151 13.00481606]
[70.42055511 26.33424568]
[77.29996490 39.66367340]
[84.17938232 52.99310303]
[96.89204407 60.75438309]
[96.34559631 76.56614685]
[103.22500610 89.89557648]
[110.78939056 102.84857941]
[119.01819611 115.38997650]
[127.24700165 127.93138123]
[135.47581482 140.47277832]
[143.70462036 153.01417542]
[156.15164185 156.39567566]
[162.74723816 167.01084900]
[160.41889954 178.88119507]
[168.46006775 191.54373169]
[176.50123596 204.20625305]
[184.54240417 216.86877441]
[197.65876770 209.58236694]
[211.18014526 203.07830811]
[225.05992126 197.37898254]
[239.25025940 192.50405884]
[253.70222473 188.47032166]
[268.36602783 185.29171753]
[283.19110107 182.97915649]
[298.12631226 181.54063416]
[313.12023926 180.98112488]
[328.12112427 181.30252075]
[343.07733154 182.50373840]
[357.93722534 184.58062744]
[372.64965820 187.52603149]
[387.16384888 191.32980347]
[401.42977905 195.97882080]
[415.39828491 201.45706177]
[429.02124023 207.74565125]
[442.25161743 214.82289124]
[455.04385376 222.66439819]
[467.35382080 231.24313354]
[479.13912964 240.52952576]
[490.35913086 250.49157715]
[500.97512817 261.09490967]
[510.95053101 272.30303955]
[520.25097656 284.07723999]
[528.84442139 296.37698364]
[536.70117188 309.15985107]
[543.79418945 322.38180542]
[550.09899902 335.99722290]
[555.59387207 349.95919800]
[560.25988770 364.21957397]
[564.08099365 378.72921753]
[567.04394531 393.43811035]
[569.13854980 408.29553223]
[570.35760498 423.25027466]
[570.69689941 438.25079346]
[570.15527344 453.24536133]
[568.73455811 468.18231201]
[566.43963623 483.01013184]
[563.27856445 497.67770386]
[559.26202393 512.13446045]
[554.40405273 526.33062744]
[548.72125244 540.21716309]
[542.23333740 553.74627686]
[534.96258545 566.87133789]
[526.93408203 579.54705811]
[518.17547607 591.72973633]
[508.71704102 603.37738037]
[498.59133911 614.44989014]
[487.83325195 624.90905762]
[476.47985840 634.71881104]
[464.57034302 643.84533691]
[452.14575195 652.25720215]
[439.24887085 659.92541504]
[425.92419434 666.82354736]
[412.21768188 672.92773438]
[398.17651367 678.21704102]
[383.84915161 682.67315674]
[369.28497314 686.28076172]
[354.53414917 689.02740479]
[339.64758301 690.90362549]
[324.67654419 691.90295410]
[309.67266846 692.02191162]
[294.68765259 691.26013184]
[279.77319336 689.62023926]
[264.98068237 687.10791016]
[250.36109924 683.73175049]
[235.96487427 679.50341797]
[221.84159851 674.43743896]
[208.03997803 668.55139160]
[194.60758972 661.86547852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 139]
[35 138]
[36 137]
[37 136]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[51 128]
[52 127]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 114]
[60 113]
[61 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
