%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[86.61412048 638.26251221]
[72.72659302 632.55560303]
[59.52436066 625.40484619]
[47.15701675 616.89129639]
[35.76469040 607.11132812]
[25.47646332 596.17584229]
[16.40891266 584.20874023]
[8.66477871 571.34564209]
[2.33180881 557.73217773]
[-2.51823974 543.52270508]
[-5.83041191 528.87823486]
[-7.56717825 513.96459961]
[-7.70885992 498.95086670]
[-6.25385189 484.00714111]
[-3.21864009 469.30273438]
[1.36238408 455.00427246]
[7.43731403 441.27374268]
[14.93731689 428.26672363]
[23.77741051 416.13064575]
[33.85742950 405.00296021]
[45.06316376 395.00976562]
[57.26763535 386.26431274]
[70.33256531 378.86569214]
[84.10991669 372.89773560]
[98.44358063 368.42803955]
[113.17115021 365.50726318]
[111.83291626 350.56707764]
[110.49468231 335.62689209]
[109.15644836 320.68670654]
[107.81821442 305.74652100]
[106.47998047 290.80633545]
[105.14174652 275.86614990]
[91.07205963 274.44546509]
[77.50331879 270.44738770]
[64.90361023 264.00814819]
[53.70787811 255.34832764]
[44.30293655 244.76506042]
[37.01409912 232.62208557]
[32.09391785 219.33703613]
[29.71344376 205.36726379]
[29.95627403 191.19390869]
[32.81562042 177.30549622]
[38.19448853 164.18098450]
[45.90895844 152.27328491]
[55.69449615 141.99365234]
[67.21498871 133.69743347]
[80.07433319 127.67184448]
[93.83000946 124.12596893]
[92.93719482 109.15256500]
[85.23162079 122.02207184]
[72.47624969 129.91513062]
[57.52064896 131.06842041]
[43.70594788 125.22427368]
[34.11837769 113.68830872]
[30.89983559 99.03767395]
[34.76934433 84.54537201]
[44.86244965 73.44901276]
[58.92432404 68.22754669]
[73.81350708 70.04747009]
[86.20372772 78.50220490]
[93.32697296 91.70296478]
[94.88749695 76.78436279]
[96.44801331 61.86575699]
[98.00853729 46.94715118]
[99.56906128 32.02854919]
[91.57602692 44.72151184]
[80.99139404 55.35004044]
[68.33161926 63.39554214]
[54.21439743 68.46546173]
[39.32854080 70.31242371]
[24.40036392 68.84631348]
[10.15824223 64.13865662]
[-2.70291734 56.41916656]
[-13.55559063 46.06448364]
[-21.87025261 33.57983398]
[-27.24121094 19.57437897]
[-29.40640450 4.73147058]
[-28.26018906 -10.22467232]
[-23.85849380 -24.56430435]
[-16.41608238 -37.58776474]
[-6.29609013 -48.65961075]
[6.00770760 -57.23962021]
[19.89498138 -62.90915680]
[34.68813705 -65.39159393]
[49.66539001 -64.56579590]
[64.09596252 -60.47207260]
[77.27575684 -53.31015778]
[88.56169891 -43.42949295]
[97.40312195 -31.31218338]
[103.36863708 -17.54945946]
[106.16717529 -2.81283092]
[105.66313934 12.17211819]
[112.74024200 -1.05340981]
[119.81735229 -14.27893734]
[126.89445496 -27.50446510]
[133.97155762 -40.72999191]
[121.66065979 -49.33104706]
[110.45347595 -59.32781219]
[100.50732422 -70.57994843]
[91.96184540 -82.92948914]
[84.93700409 -96.20306396]
[79.53141022 -110.21434784]
[75.82096100 -124.76662445]
[73.85773468 -139.65562439]
[73.66930389 -154.67230225]
[75.25830078 -169.60588074]
[78.60241699 -184.24667358]
[83.65472412 -198.38919067]
[90.34428406 -211.83486938]
[98.57717896 -224.39494324]
[108.23784637 -235.89311218]
[119.19065857 -246.16795349]
[131.28184509 -255.07522583]
[144.34169006 -262.48986816]
[158.18682861 -268.30780029]
[172.62290955 -272.44735718]
[187.44728088 -274.85043335]
[202.45179749 -275.48324585]
[217.42585754 -274.33697510]
[232.15924072 -271.42764282]
[246.44508362 -266.79617310]
[260.08288574 -260.50750732]
[272.88113403 -252.64997864]
[284.66021729 -243.33387756]
[295.25473022 -232.68998718]
[304.51599121 -220.86773682]
[312.31393433 -208.03308105]
[318.53912354 -194.36621094]
[323.10415649 -180.05897522]
[325.94494629 -165.31224060]
[327.02160645 -150.33302307]
[326.31903076 -135.33158875]
[323.84710693 -120.51856232]
[319.64047241 -106.10188293]
[313.75823975 -92.28393555]
[306.28295898 -79.25870514]
[297.31958008 -67.20904541]
[286.99395752 -56.30411530]
[275.45098877 -46.69700623]
[262.85278320 -38.52257919]
[249.37614441 -31.89559937]
[235.21029663 -26.90909386]
[220.55410767 -23.63306618]
[205.61331177 -22.11350632]
[190.59767151 -22.37174606]
[175.71795654 -24.40416336]
[161.18309021 -28.18222237]
[147.19708252 -33.65288544]
[140.11997986 -20.42735863]
[133.04287720 -7.20183182]
[125.96577454 6.02369547]
[118.88866425 19.24922371]
[114.48767090 33.58906937]
[112.92714691 48.50767517]
[111.36662292 63.42628098]
[109.80609894 78.34488678]
[108.24557495 93.26348877]
[107.91059875 108.25975037]
[108.80341339 123.23315430]
[124.54146576 125.52092743]
[139.46154785 131.01069641]
[152.91990662 139.46318054]
[164.33641052 150.51136780]
[173.21942139 163.67634583]
[179.18713379 178.38816833]
[181.98381042 194.01045227]
[181.49090576 209.86798096]
[177.73193359 225.27578735]
[170.87149048 239.56883240]
[161.20797729 252.13067627]
[149.16061401 262.42004395]
[135.25128174 269.99420166]
[120.08193207 274.52792358]
[121.42016602 289.46810913]
[122.75839996 304.40829468]
[124.09663391 319.34848022]
[125.43486786 334.28866577]
[126.77310181 349.22885132]
[128.11132812 364.16903687]
[143.12353516 364.42593384]
[158.02337646 366.27709961]
[172.64202881 369.70156860]
[186.81387329 374.66052246]
[200.37829590 381.09777832]
[213.18164062 388.94039917]
[225.07879639 398.09951782]
[235.93499756 408.47134399]
[245.62719727 419.93841553]
[254.04560852 432.37072754]
[261.09481812 445.62744141]
[266.69497681 459.55834961]
[270.78262329 474.00561523]
[273.31143188 488.80551147]
[274.25277710 503.79037476]
[273.59594727 518.79040527]
[271.34838867 533.63562012]
[267.53561401 548.15783691]
[262.20080566 562.19250488]
[255.40437317 575.58056641]
[247.22337341 588.17041016]
[237.75048828 599.81927490]
[227.09304810 610.39526367]
[215.37181091 619.77844238]
[202.71958923 627.86260986]
[189.27973938 634.55609131]
[175.20454407 639.78302002]
[160.65348816 643.48425293]
[145.79145813 645.61779785]
[130.78683472 646.15948486]
[115.80964661 645.10321045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 179]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[48 159]
[49 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[92 152]
[93 151]
[94 150]
[95 149]
[96 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
