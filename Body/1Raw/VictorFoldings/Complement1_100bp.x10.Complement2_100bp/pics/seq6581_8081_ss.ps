%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[93.56412506 396.78121948]
[106.27638245 388.69750977]
[101.23947144 374.56848145]
[96.20255280 360.43945312]
[91.16563416 346.31042480]
[86.12872314 332.18139648]
[84.38632965 347.07983398]
[79.72013855 361.33560181]
[72.31600189 374.38085938]
[62.46881866 385.69604492]
[50.57080460 394.83044434]
[37.09585190 401.42025757]
[22.58066177 405.20300293]
[7.60336924 406.02804565]
[-7.23948765 403.86248779]
[-21.35672188 398.79260254]
[-34.18605042 391.02032471]
[-45.21648788 380.85522461]
[-54.00868988 368.70214844]
[-60.21247482 355.04516602]
[-63.58074188 340.42822266]
[-63.97933578 325.43353271]
[-61.39238358 310.65829468]
[-55.92291641 296.69100952]
[-47.78878784 284.08798218]
[-37.31397629 273.35122681]
[-24.91568375 264.90832520]
[-11.08773518 259.09561157]
[3.61910963 256.14456177]
[18.61908340 256.17272949]
[33.31474304 259.17898560]
[47.12076187 265.04360962]
[59.48725891 273.53298950]
[69.92167664 284.30902100]
[78.00841522 296.94250488]
[83.42427063 310.92620850]
[84.76250458 295.98602295]
[86.10073853 281.04583740]
[87.43897247 266.10565186]
[88.77720642 251.16546631]
[90.11544037 236.22528076]
[90.89676666 221.24563599]
[80.37068939 210.77008057]
[80.38352203 195.55645752]
[91.44261932 184.58676147]
[91.66594696 169.58842468]
[91.88927460 154.59008789]
[92.11260223 139.59175110]
[92.22427368 124.59216309]
[92.22427368 109.59216309]
[85.31479645 122.90603638]
[74.83081818 133.63386536]
[61.67929840 140.84756470]
[46.99798203 143.92309570]
[32.05694580 142.59440613]
[18.14874077 136.97640991]
[6.47656488 127.55514526]
[-1.94982195 115.14562988]
[-6.40145254 100.82141876]
[-6.49321651 85.82170105]
[-2.21717548 71.44409943]
[6.05675077 58.93241882]
[17.61278343 49.36904526]
[31.45121193 43.58130646]
[46.37487411 42.06990433]
[61.09272003 44.96558380]
[74.33151245 52.01784134]
[84.94596100 62.61658859]
[92.01781464 75.84492493]
[94.93511200 90.55495453]
[99.12212372 76.15117645]
[103.30913544 61.74739456]
[107.49614716 47.34361267]
[111.68315887 32.93983078]
[108.10549927 17.52844048]
[119.08787537 7.46679497]
[106.61362457 -1.06846166]
[97.40077209 -13.02529049]
[92.34157562 -27.22504234]
[91.91966248 -42.27286911]
[96.16375732 -56.69473267]
[104.64616394 -69.08181763]
[116.52577972 -78.22811127]
[130.63153076 -83.24787903]
[145.57775879 -83.66136169]
[149.76477051 -98.06513977]
[153.95178223 -112.46892548]
[150.37413025 -127.88031769]
[161.35650635 -137.94195557]
[156.55293274 -155.71855164]
[169.68505859 -167.35961914]
[173.65715027 -181.82414246]
[177.62924194 -196.28866577]
[181.60134888 -210.75318909]
[167.86344910 -216.84646606]
[155.18721008 -224.91929626]
[143.85581970 -234.79133606]
[134.12240601 -246.24203491]
[126.20444489 -259.01559448]
[120.27880859 -272.82659912]
[116.47788239 -287.36657715]
[114.88658142 -302.31063843]
[115.54045105 -317.32498169]
[118.42488861 -332.07412720]
[123.47544861 -346.22863770]
[130.57931519 -359.47222900]
[139.57775879 -371.50906372]
[150.26979065 -382.07022095]
[162.41650391 -390.91979980]
[175.74655151 -397.86007690]
[189.96215820 -402.73596191]
[204.74571228 -405.43859863]
[219.76695251 -405.90756226]
[234.69030762 -404.13238525]
[249.18237305 -400.15270996]
[262.91940308 -394.05749512]
[275.59448242 -385.98284912]
[286.92446899 -376.10919189]
[296.65625000 -364.65710449]
[304.57238770 -351.88244629]
[310.49606323 -338.07055664]
[314.29492188 -323.53005981]
[315.88409424 -308.58575439]
[315.22808838 -293.57153320]
[312.34155273 -278.82278442]
[307.28897095 -264.66900635]
[300.18322754 -251.42642212]
[291.18304443 -239.39086914]
[280.48953247 -228.83122253]
[268.34155273 -219.98338318]
[255.01049805 -213.04501343]
[240.79421997 -208.17112732]
[226.01026917 -205.47061157]
[210.98896790 -205.00378418]
[196.06587219 -206.78109741]
[192.09376526 -192.31657410]
[188.12167358 -177.85205078]
[184.14958191 -163.38752747]
[189.85821533 -152.72271729]
[186.66737366 -140.63957214]
[175.76028442 -133.75494385]
[179.63742065 -119.37381744]
[168.35557556 -108.28191376]
[164.16856384 -93.87813568]
[159.98155212 -79.47434998]
[172.37702942 -71.11294556]
[181.59365845 -59.31364059]
[186.71893311 -45.22422028]
[187.23905945 -30.22020531]
[183.09054565 -15.77055454]
[174.66757202 -3.29383802]
[162.78457642 5.98102045]
[148.59757996 11.13578510]
[133.49165344 11.65380573]
[137.36880493 26.03494072]
[126.08694458 37.12684250]
[121.89993286 51.53062439]
[117.71292114 65.93440247]
[113.52590942 80.33818817]
[109.33889771 94.74196625]
[107.22427368 109.59216309]
[107.22427368 124.59216309]
[110.35368347 133.17381287]
[107.11094666 139.81507874]
[106.88761902 154.81341553]
[106.66429138 169.81175232]
[106.44096375 184.81008911]
[117.16854858 196.10418701]
[116.72840881 211.31144714]
[105.89510345 221.46896362]
[118.31243134 213.05410767]
[132.67820740 217.36972046]
[138.40251160 231.23451233]
[131.26559448 244.42785645]
[116.52854156 247.22413635]
[105.05562592 237.56350708]
[103.71739197 252.50369263]
[102.37915802 267.44387817]
[101.04092407 282.38406372]
[99.70269012 297.32424927]
[98.36445618 312.26443481]
[100.25775146 327.14447021]
[105.29467010 341.27349854]
[110.33158112 355.40252686]
[115.36849976 369.53155518]
[120.40541840 383.66058350]
[135.36454773 381.87960815]
[150.34489441 383.47250366]
[164.59500122 388.35940552]
[177.40013123 396.29516602]
[188.11796570 406.88174438]
[196.21092224 419.58813477]
[201.27302551 433.77697754]
[203.05038452 448.73654175]
[201.45385742 463.71649170]
[196.56349182 477.96542358]
[188.62463379 490.76861572]
[178.03544617 501.48388672]
[165.32710266 509.57376099]
[151.13705444 514.63244629]
[136.17706299 516.40618896]
[121.19749451 514.80596924]
[106.94974518 509.91220093]
[94.14846802 501.97021484]
[83.43576050 491.37844849]
[75.34897614 478.66815186]
[70.29374695 464.47686768]
[68.52363586 449.51644897]
[70.12742615 434.53726196]
[75.02468109 420.29071045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 170]
[45 167]
[46 166]
[47 165]
[48 164]
[49 162]
[50 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
[76 154]
[85 145]
[86 144]
[87 143]
[89 141]
[91 138]
[92 137]
[93 136]
[94 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
