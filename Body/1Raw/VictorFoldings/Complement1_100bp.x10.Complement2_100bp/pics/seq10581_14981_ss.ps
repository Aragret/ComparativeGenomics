%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[108.66546631 731.17993164]
[93.92688751 734.00781250]
[79.01507568 735.69915771]
[64.01754761 736.24407959]
[49.02231216 735.63928223]
[34.11737442 733.88842773]
[19.39019775 731.00170898]
[4.92721176 726.99615479]
[-9.18671036 721.89514160]
[-22.86874008 715.72875977]
[-36.03858566 708.53302002]
[-48.61896133 700.35034180]
[-60.53603745 691.22857666]
[-71.71987915 681.22137451]
[-82.10485840 670.38739014]
[-91.63002777 658.79022217]
[-100.23948669 646.49798584]
[-107.88271332 633.58270264]
[-114.51485443 620.12030029]
[-120.09698486 606.18963623]
[-124.59635925 591.87255859]
[-127.98655701 577.25311279]
[-130.24769592 562.41699219]
[-131.36648560 547.45129395]
[-131.33639526 532.44390869]
[-130.15756226 517.48284912]
[-127.83694458 502.65594482]
[-124.38813019 488.05020142]
[-119.83136749 473.75128174]
[-114.19339752 459.84317017]
[-107.50730896 446.40740967]
[-99.81233215 433.52291870]
[-91.15363312 421.26528931]
[-81.58202362 409.70645142]
[-71.15367126 398.91421509]
[-59.92977905 388.95193481]
[-47.97621155 379.87808228]
[-35.36311340 371.74588013]
[-22.16450882 364.60308838]
[-8.45785332 358.49157715]
[5.67641640 353.44726562]
[20.15535355 349.49972534]
[34.89398956 346.67211914]
[49.80583191 344.98104858]
[64.80337524 344.43646240]
[79.79859161 345.04150391]
[94.70349884 346.79263306]
[97.58876801 332.07275391]
[100.47404480 317.35287476]
[103.35931396 302.63296509]
[101.70624542 299.51855469]
[101.47955322 295.44869995]
[103.11185455 291.10256958]
[106.71611023 287.32678223]
[110.25577545 272.75039673]
[113.79544830 258.17404175]
[114.46523285 243.18899536]
[112.24011993 228.35494995]
[110.01499939 213.52090454]
[107.78988647 198.68685913]
[105.56476593 183.85282898]
[103.33965302 169.01878357]
[101.11453247 154.18473816]
[89.45878601 141.06564331]
[96.34072113 123.98582458]
[93.89499664 109.18655396]
[83.17082214 119.67426300]
[68.26676941 117.98042297]
[60.16954422 105.35366821]
[64.84812164 91.10197449]
[78.85363007 85.73115540]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[87.84608459 48.37846756]
[79.61569977 60.91883469]
[65.95566559 67.11588287]
[51.09869385 65.04940033]
[39.64837646 55.35969925]
[35.15272522 41.04924393]
[39.00476074 26.55228615]
[50.01088715 16.36086273]
[64.76074219 13.63289738]
[78.68392181 19.21368217]
[87.46625519 31.37419128]
[88.13603973 16.38915253]
[88.80583191 1.40411282]
[81.69245148 -12.72778320]
[89.99034119 -25.09687233]
[90.66012573 -40.08191299]
[88.52320099 -43.86179733]
[87.77545166 -47.73547745]
[88.27577972 -51.25471878]
[89.75200653 -54.06316376]
[91.84220886 -55.93110275]
[93.40273285 -70.84970856]
[94.96325684 -85.76831055]
[96.52378082 -100.68692017]
[98.08429718 -115.60552216]
[84.17563629 -121.52501678]
[72.63076782 -131.28244019]
[64.47625732 -144.01019287]
[60.43720245 -158.57649231]
[60.87275314 -173.68615723]
[65.74417877 -187.99560547]
[74.61831665 -200.23248291]
[86.70607758 -209.30868530]
[100.93263245 -214.41716003]
[116.03297424 -215.10365295]
[130.66436768 -211.30714417]
[143.52581787 -203.36520386]
[153.47369385 -191.98402405]
[159.62342834 -178.17561340]
[161.42819214 -163.16780090]
[158.72752380 -148.29508972]
[151.76153564 -134.87992859]
[141.14965820 -124.11519623]
[127.83547974 -116.95808411]
[113.00290680 -114.04499817]
[111.44238281 -99.12639618]
[109.88185883 -84.20778656]
[108.32133484 -69.28918457]
[106.76081085 -54.37057877]
[105.64516449 -39.41212463]
[104.97537994 -24.42708778]
[112.13665771 -11.36702156]
[103.79087067 2.07389808]
[103.12107849 17.05893707]
[102.45129395 32.04397583]
[102.78627014 47.04023361]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.69426727 106.74082184]
[111.13999176 121.54009247]
[121.15169525 129.67204285]
[122.88407898 142.04873657]
[115.94857788 151.95960999]
[118.17369080 166.79365540]
[120.39881134 181.62770081]
[122.62393188 196.46174622]
[124.84904480 211.29579163]
[127.07416534 226.12983704]
[129.29928589 240.96388245]
[133.85906982 226.67373657]
[141.44483948 213.73324585]
[151.68649292 202.77383423]
[164.08428955 194.33023071]
[178.03332520 188.81439209]
[192.85299683 186.49548340]
[207.82022095 187.48661804]
[222.20469666 191.73945618]
[235.30459595 199.04649353]
[246.48072815 209.05117798]
[255.18780518 221.26539612]
[261.00097656 235.09315491]
[263.63659668 249.85978699]
[262.96609497 264.84478760]
[259.02215576 279.31701660]
[251.99720764 292.57034302]
[242.23405457 303.95806885]
[230.20903015 312.92462158]
[216.50888062 319.03247070]
[201.80204773 321.98358154]
[186.80612183 321.63400269]
[172.25277710 318.00076294]
[158.85212708 311.26116943]
[147.25799561 301.74401855]
[138.03608704 289.91369629]
[131.63638306 276.34741211]
[128.37182617 261.71371460]
[124.83215332 276.29006958]
[121.29248047 290.86645508]
[118.07920837 305.51824951]
[115.19393921 320.23812866]
[112.30866241 334.95803833]
[109.42339325 349.67791748]
[123.88645172 353.68322754]
[138.00047302 358.78393555]
[151.68261719 364.95010376]
[164.85260010 372.14553833]
[177.43313599 380.32803345]
[189.35038757 389.44952393]
[200.53440857 399.45654297]
[210.91960144 410.29031372]
[220.44497681 421.88729858]
[229.05467224 434.17941284]
[236.69815063 447.09451294]
[243.33055115 460.55682373]
[248.91294861 474.48736572]
[253.41258240 488.80435181]
[256.80307007 503.42376709]
[259.06448364 518.25982666]
[260.18356323 533.22546387]
[260.15374756 548.23284912]
[258.97521973 563.19390869]
[256.65484619 578.02087402]
[253.20631409 592.62670898]
[248.64982605 606.92572021]
[243.01213074 620.83392334]
[236.32629395 634.26983643]
[228.63156128 647.15447998]
[219.97309875 659.41223145]
[210.40170288 670.97131348]
[199.97355652 681.76373291]
[188.74984741 691.72619629]
[176.79646301 700.80029297]
[164.18351746 708.93273926]
[150.98504639 716.07574463]
[137.27850342 722.18750000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 177]
[48 176]
[49 175]
[50 174]
[54 173]
[55 172]
[56 171]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[65 135]
[66 134]
[72 133]
[73 132]
[74 131]
[75 130]
[85 129]
[86 128]
[87 127]
[89 125]
[90 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
