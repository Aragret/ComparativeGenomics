%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[-26.60702896 357.05004883]
[-18.98428917 369.99896240]
[-13.28203964 383.90097046]
[-9.61637115 398.47296143]
[-8.06191254 413.41836548]
[-8.65030956 428.43283081]
[-11.36958313 443.21072388]
[-16.16437340 457.45120239]
[-22.93706512 470.86428833]
[-31.54977226 483.17697144]
[-41.82715225 494.13854980]
[-53.55997467 503.52587891]
[-66.50936890 511.14779663]
[-80.41170502 516.84918213]
[-94.98394775 520.51397705]
[-109.92942047 522.06750488]
[-124.94386292 521.47814941]
[-139.72158813 518.75799561]
[-153.96176147 513.96228027]
[-167.37445068 507.18878174]
[-179.68659973 498.57531738]
[-190.64753723 488.29727173]
[-200.03411865 476.56387329]
[-207.65525818 463.61398315]
[-213.35578918 449.71130371]
[-217.01965332 435.13882446]
[-218.57226562 420.19326782]
[-217.98200989 405.17886353]
[-215.26091003 390.40130615]
[-210.46435547 376.16143799]
[-203.69000244 362.74914551]
[-195.07577515 350.43756104]
[-184.79702759 339.47723389]
[-173.06304932 330.09136963]
[-160.11271667 322.47103882]
[-146.20967102 316.77136230]
[-131.63697815 313.10839844]
[-116.69130707 311.55673218]
[-101.67694092 312.14791870]
[-86.89954376 314.86993408]
[-72.65997314 319.66735840]
[-59.24812317 326.44253540]
[-50.64955902 314.15170288]
[-42.05099487 301.86087036]
[-33.45243073 289.57003784]
[-24.85386658 277.27920532]
[-23.89797592 262.41528320]
[-9.64733887 255.54289246]
[-1.32539487 243.06309509]
[6.71577787 230.40057373]
[14.75695133 217.73805237]
[22.79812431 205.07551575]
[30.83929634 192.41299438]
[24.79748535 180.50759888]
[25.43246269 167.06359863]
[32.68519974 155.59767151]
[44.75165939 149.16191101]
[58.53041458 149.53167725]
[59.04332733 134.64590454]
[73.08303070 127.35226440]
[81.31183624 114.81085968]
[89.54064178 102.26946259]
[96.12067413 88.78972626]
[93.23473358 73.23395538]
[104.65543365 63.67273712]
[109.48143005 49.47027969]
[114.30742645 35.26782608]
[101.02204895 25.56208611]
[91.39287567 12.24410343]
[86.35128021 -3.37830496]
[86.37884521 -19.77540779]
[91.46136475 -35.34534073]
[101.09136963 -48.57060242]
[114.31877136 -58.16595459]
[129.84460449 -63.20331573]
[146.14852905 -63.20151138]
[150.54953003 -77.54135895]
[154.95053101 -91.88120270]
[159.35151672 -106.22105408]
[163.10781860 -120.74311066]
[166.21192932 -135.41841125]
[169.31604004 -150.09371948]
[172.42015076 -164.76901245]
[175.52426147 -179.44432068]
[178.62837219 -194.11962891]
[172.51594543 -211.48970032]
[184.74588013 -224.07525635]
[187.63114929 -238.79513550]
[190.51641846 -253.51502991]
[189.09614563 -262.53836060]
[193.55578613 -268.43188477]
[196.65989685 -283.10717773]
[199.76400757 -297.78247070]
[202.86811829 -312.45779419]
[188.87033081 -317.94525146]
[175.96676636 -325.66195679]
[164.50939941 -335.39736938]
[154.81082153 -346.88595581]
[147.13558960 -359.81423950]
[141.69313049 -373.82958984]
[138.63188171 -388.54959106]
[138.03536987 -403.57269287]
[139.91987610 -418.48907471]
[144.23397827 -432.89181519]
[150.85998535 -446.38793945]
[159.61715698 -458.60934448]
[170.26655579 -469.22253418]
[182.51766968 -477.93801880]
[196.03630066 -484.51806641]
[210.45361328 -488.78308105]
[225.37632751 -490.61679077]
[240.39733887 -489.96914673]
[255.10682678 -486.85781860]
[269.10354614 -481.36764526]
[282.00564575 -473.64846802]
[293.46112061 -463.91082764]
[303.15750122 -452.42037964]
[310.83023071 -439.49060059]
[316.26998901 -425.47421265]
[319.32839966 -410.75363159]
[319.92202759 -395.73040771]
[318.03463745 -380.81436157]
[313.71777344 -366.41247559]
[307.08914185 -352.91763306]
[298.32965088 -340.69793701]
[287.67819214 -330.08679199]
[275.42538452 -321.37362671]
[261.90548706 -314.79623413]
[247.48735046 -310.53396606]
[232.56428528 -308.70312500]
[217.54341125 -309.35366821]
[214.43930054 -294.67837524]
[211.33518982 -280.00308228]
[208.23107910 -265.32775879]
[205.23631287 -250.62976074]
[202.35104370 -235.90986633]
[199.46575928 -221.18997192]
[205.95179749 -210.97930908]
[203.66850281 -198.69230652]
[193.30368042 -191.01551819]
[190.19956970 -176.34020996]
[187.09545898 -161.66490173]
[183.99134827 -146.98960876]
[180.88723755 -132.31430054]
[177.78312683 -117.63899994]
[190.91305542 -124.89192200]
[205.36351013 -120.86891937]
[212.85659790 -107.87455750]
[209.09994507 -93.35258484]
[196.24554443 -85.62185669]
[181.65695190 -89.11088562]
[173.69137573 -101.82005310]
[169.29037476 -87.48020935]
[164.88937378 -73.14035797]
[160.48837280 -58.80051422]
[171.97108459 -51.44542313]
[181.16346741 -41.35593414]
[187.43232727 -29.21724701]
[190.34326172 -15.85605526]
[189.69085693 -2.18424439]
[185.51307678 10.86334515]
[178.08920288 22.39284134]
[167.92114258 31.61257553]
[155.69946289 37.88744354]
[142.25654602 40.78264618]
[128.50988770 40.09382248]
[123.68388367 54.29627991]
[118.85788727 68.49873352]
[122.08901215 83.03865051]
[110.32312775 93.61572266]
[121.31208801 83.40579224]
[134.99392700 77.25703430]
[149.92477417 75.81835175]
[164.52894592 79.24156952]
[177.26521301 87.16542053]
[186.78948975 98.75369263]
[192.09667969 112.78343964]
[192.62666321 127.77407837]
[188.32354736 142.14360046]
[179.64143372 154.37556458]
[167.49656677 163.17909241]
[153.17060852 167.62513733]
[138.17544556 167.24447632]
[124.09352875 162.07731628]
[112.41095734 152.66894531]
[104.36063385 140.01223755]
[100.79211426 125.44289398]
[102.08204651 110.49826813]
[93.85324097 123.03967285]
[85.62442780 135.58106995]
[84.52293396 151.36389160]
[71.07181549 157.76048279]
[77.27352905 173.49690247]
[72.91683197 189.66850281]
[59.90995789 199.95358276]
[43.50182343 200.45417786]
[35.46064758 213.11669922]
[27.41947556 225.77922058]
[19.37830353 238.44174194]
[11.33712959 251.10426331]
[11.11875343 256.31958008]
[9.12144184 260.51052856]
[6.03328085 263.17102051]
[2.64349914 264.14144897]
[1.07258189 279.88449097]
[-12.56302929 285.87774658]
[-21.16159248 298.16857910]
[-29.76015663 310.45944214]
[-38.35872269 322.75027466]
[-46.95728683 335.04110718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 210]
[43 209]
[44 208]
[45 207]
[46 206]
[48 204]
[49 200]
[50 199]
[51 198]
[52 197]
[53 196]
[58 192]
[60 190]
[61 189]
[62 188]
[63 170]
[65 168]
[66 167]
[67 166]
[76 155]
[77 154]
[78 153]
[79 152]
[80 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[87 137]
[88 136]
[89 135]
[91 134]
[92 133]
[93 132]
[94 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
