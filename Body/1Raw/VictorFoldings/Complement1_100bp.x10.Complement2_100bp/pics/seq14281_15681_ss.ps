%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[319.68084717 256.57235718]
[310.63986206 268.53906250]
[300.94781494 279.98483276]
[290.63467407 290.87429810]
[279.73226929 301.17376709]
[268.27432251 310.85144043]
[256.29626465 319.87734985]
[243.83508301 328.22366333]
[230.92933655 335.86453247]
[217.61888123 342.77636719]
[203.94488525 348.93780518]
[189.94960022 354.32980347]
[175.67628479 358.93566895]
[161.16905212 362.74114990]
[146.47276306 365.73455811]
[131.63282776 367.90658569]
[116.69510651 369.25051880]
[101.70578766 369.76223755]
[86.71119690 369.44012451]
[71.75768280 368.28518677]
[56.89146042 366.30099487]
[42.15848160 363.49371338]
[27.60429192 359.87194824]
[13.27387238 355.44696045]
[-0.78848374 350.23239136]
[-14.53930855 344.24438477]
[-27.93610001 337.50143433]
[-40.93745041 330.02435303]
[-53.50317001 321.83630371]
[-65.59442139 312.96258545]
[-77.17383575 303.43060303]
[-88.20561218 293.26980591]
[-98.65565491 282.51165771]
[-108.49166870 271.18936157]
[-117.68325043 259.33792114]
[-126.20198822 246.99400330]
[-134.02154541 234.19570923]
[-141.11775208 220.98265076]
[-147.46868896 207.39562988]
[-153.05471802 193.47665405]
[-157.85856628 179.26873779]
[-161.86538696 164.81582642]
[-165.06280518 150.16256714]
[-167.44093323 135.35424805]
[-168.99241638 120.43666840]
[-169.71244812 105.45590973]
[-169.59883118 90.45829010]
[-168.65190125 75.49016571]
[-166.87457275 60.59779358]
[-164.27236938 45.82721329]
[-160.85330200 31.22407913]
[-156.62796021 16.83352661]
[-151.60940552 2.70003629]
[-145.81312561 -11.13270664]
[-139.25706482 -24.62194443]
[-131.96147156 -37.72598648]
[-123.94890594 -50.40432358]
[-115.24412537 -62.61777115]
[-105.87403870 -74.32857513]
[-95.86760712 -85.50054932]
[-85.25576782 -96.09914398]
[-74.07131195 -106.09161377]
[-62.34880829 -115.44706726]
[-50.12449646 -124.13658142]
[-37.43616104 -132.13331604]
[-24.32301903 -139.41253662]
[-10.82560253 -145.95173645]
[3.01436853 -151.73072815]
[17.15411568 -156.73162842]
[31.54993439 -160.93899536]
[46.15732956 -164.33981323]
[60.93114471 -166.92358398]
[75.82572174 -168.68229675]
[90.79502106 -169.61053467]
[105.79277039 -169.70542908]
[120.77262115 -168.96667480]
[135.68826294 -167.39656067]
[150.49359131 -164.99993896]
[165.14283752 -161.78422546]
[179.59074402 -157.75935364]
[193.79263306 -152.93777466]
[207.70462036 -147.33436584]
[221.28370667 -140.96646118]
[234.48789978 -133.85375977]
[247.27641296 -126.01821136]
[259.60968018 -117.48406982]
[271.44961548 -108.27769470]
[282.75964355 -98.42754364]
[293.50473022 -87.96407318]
[303.65173340 -76.91960907]
[313.16925049 -65.32830811]
[322.02786255 -53.22597885]
[330.20022583 -40.65004349]
[337.66104126 -27.63936424]
[344.38726807 -14.23416233]
[358.14736938 -20.20572472]
[371.90747070 -26.17728806]
[385.66757202 -32.14884949]
[399.42767334 -38.12041473]
[394.40689087 -52.26143646]
[390.36285400 -66.71212769]
[387.31436157 -81.40510559]
[385.27569580 -96.27186584]
[384.25631714 -111.24308777]
[384.26101685 -126.24897766]
[385.28973389 -141.21957397]
[387.33767700 -156.08505249]
[390.39532471 -170.77612305]
[394.44836426 -185.22428894]
[399.47796631 -199.36218262]
[405.46066284 -213.12387085]
[412.36853027 -226.44520569]
[420.16937256 -239.26408386]
[428.82684326 -251.52072144]
[438.30053711 -263.15798950]
[448.54632568 -274.12158203]
[459.51638794 -284.36044312]
[471.15960693 -293.82681274]
[483.42172241 -302.47653198]
[496.24551392 -310.26928711]
[509.57119751 -317.16876221]
[523.33666992 -323.14276123]
[537.47772217 -328.16345215]
[551.92840576 -332.20739746]
[566.62145996 -335.25576782]
[581.48822021 -337.29434204]
[596.45941162 -338.31359863]
[611.46533203 -338.30883789]
[626.43591309 -337.27999878]
[641.30139160 -335.23196411]
[655.99243164 -332.17422485]
[670.44055176 -328.12106323]
[684.57843018 -323.09136963]
[698.34008789 -317.10861206]
[711.66137695 -310.20065308]
[724.48016357 -302.39971924]
[736.73675537 -293.74215698]
[748.37396240 -284.26837158]
[759.33752441 -274.02252197]
[769.57629395 -263.05239868]
[779.04260254 -251.40910339]
[787.69219971 -239.14694214]
[795.48492432 -226.32310486]
[802.38427734 -212.99736023]
[808.35815430 -199.23185730]
[813.37878418 -185.09075928]
[817.42260742 -170.64002991]
[820.47088623 -155.94700623]
[822.50933838 -141.08021545]
[823.52850342 -126.10897827]
[823.52362061 -111.10308838]
[822.49475098 -96.13251495]
[820.44659424 -81.26705933]
[817.38873291 -66.57602692]
[813.33551025 -52.12791824]
[808.30572510 -37.99009705]
[802.32281494 -24.22848129]
[795.41479492 -10.90723324]
[787.61376953 1.91153407]
[778.95617676 14.16805553]
[769.48229980 25.80518341]
[759.23638916 36.76866150]
[748.26617432 47.00737000]
[736.62280273 56.47357559]
[724.36059570 65.12313843]
[711.53668213 72.91572571]
[698.21093750 79.81501770]
[684.44537354 85.78883362]
[670.30426025 90.80931854]
[655.85345459 94.85308075]
[641.16040039 97.90125275]
[626.29364014 99.93962097]
[611.32238770 100.95869446]
[596.31646729 100.95371246]
[581.34594727 99.92469788]
[566.48046875 97.87644958]
[551.78948975 94.81851959]
[537.34136963 90.76515961]
[523.20361328 85.73527527]
[509.44201660 79.75231934]
[496.12081909 72.84418488]
[483.30212402 65.04307556]
[471.04565430 56.38536835]
[459.40856934 46.91143417]
[448.44515991 36.66543961]
[438.20654297 25.69515800]
[428.74041748 14.05173874]
[420.09094238 1.78946900]
[412.29843140 -11.03447819]
[405.39923096 -24.36030960]
[391.63912964 -18.38874817]
[377.87902832 -12.41718483]
[364.11892700 -6.44562149]
[350.35882568 -0.47405887]
[355.55572510 13.59483624]
[359.96270752 27.93080330]
[363.56616211 42.48953247]
[366.35494995 57.22602463]
[368.32046509 72.09472656]
[369.45660400 87.04968262]
[369.75988770 102.04466248]
[369.22933960 117.03332520]
[367.86663818 131.96934509]
[365.67596436 146.80654907]
[362.66412354 161.49906921]
[358.84039307 176.00149536]
[354.21658325 190.26902771]
[348.80703735 204.25752258]
[342.62844849 217.92376709]
[335.69989014 231.22552490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[95 194]
[96 193]
[97 192]
[98 191]
[99 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
