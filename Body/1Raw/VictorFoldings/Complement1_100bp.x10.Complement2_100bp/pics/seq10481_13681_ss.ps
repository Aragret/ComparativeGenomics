%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[37.17743301 808.23400879]
[22.31249046 810.26800537]
[7.36147022 811.52124023]
[-7.63465071 811.99029541]
[-22.63476753 811.67382812]
[-37.59776688 810.57281494]
[-52.48263550 808.69018555]
[-67.24857330 806.03106689]
[-81.85511017 802.60284424]
[-96.26220703 798.41485596]
[-110.43038177 793.47863770]
[-124.32079315 787.80767822]
[-137.89537048 781.41748047]
[-151.11691284 774.32562256]
[-163.94917297 766.55151367]
[-176.35696411 758.11645508]
[-188.30632019 749.04357910]
[-199.76445007 739.35778809]
[-210.69995117 729.08557129]
[-221.08287048 718.25512695]
[-230.88473511 706.89611816]
[-240.07867432 695.03967285]
[-248.63949585 682.71832275]
[-256.54373169 669.96575928]
[-263.76974487 656.81707764]
[-270.29766846 643.30816650]
[-276.10964966 629.47619629]
[-281.18975830 615.35894775]
[-285.52407837 600.99517822]
[-289.10070801 586.42431641]
[-291.90985107 571.68615723]
[-293.94381714 556.82122803]
[-295.19699097 541.87017822]
[-295.66598511 526.87408447]
[-295.34951782 511.87396240]
[-294.24841309 496.91094971]
[-292.36575317 482.02609253]
[-289.70660400 467.26016235]
[-286.27835083 452.65365601]
[-282.09033203 438.24655151]
[-277.15405273 424.07839966]
[-271.48300171 410.18801880]
[-265.09277344 396.61343384]
[-258.00088501 383.39193726]
[-250.22673035 370.55969238]
[-241.79164124 358.15191650]
[-232.71873474 346.20260620]
[-223.03289795 334.74450684]
[-212.76065063 323.80902100]
[-201.93017578 313.42614746]
[-190.57112122 303.62432861]
[-178.71466064 294.43041992]
[-166.39328003 285.86962891]
[-153.64074707 277.96542358]
[-140.49200439 270.73947144]
[-126.98310852 264.21157837]
[-113.15108490 258.39962769]
[-99.03384399 253.31954956]
[-84.67007446 248.98529053]
[-70.09915924 245.40870667]
[-55.36102295 242.59960938]
[-40.49607086 240.56568909]
[-25.54504204 239.31254578]
[-10.54891777 238.84358215]
[4.45119762 239.16011047]
[19.41419029 240.26124573]
[34.29904556 242.14398193]
[49.06496811 244.80314636]
[63.67148590 248.23146057]
[67.85849762 233.82768250]
[72.04550934 219.42390442]
[76.23252106 205.02011108]
[80.41953278 190.61633301]
[83.41430664 175.91833496]
[85.19676971 161.02461243]
[86.97923279 146.13088989]
[80.80915070 132.57437134]
[90.13152313 119.79141235]
[91.91398621 104.89769745]
[89.68966675 100.14729309]
[90.28524780 94.48879242]
[93.97767639 89.58951569]
[96.20278931 74.75547028]
[98.42790985 59.92142868]
[100.65302277 45.08738708]
[100.98799896 30.09112549]
[99.42747498 15.17252159]
[97.86695862 0.25391668]
[88.73593903 -12.66642189]
[95.10717773 -26.12957954]
[93.54665375 -41.04818344]
[91.98612976 -55.96678925]
[77.15355682 -58.87987900]
[63.83938217 -66.03698730]
[53.22750473 -76.80171967]
[46.26151657 -90.21688080]
[43.56083679 -105.08959961]
[45.36560440 -120.09740448]
[51.51533890 -133.90580750]
[61.46321106 -145.28698730]
[74.32466125 -153.22892761]
[88.95606232 -157.02545166]
[104.05639648 -156.33894348]
[118.28295898 -151.23048401]
[130.37072754 -142.15428162]
[139.24485779 -129.91740417]
[144.11628723 -115.60794830]
[144.55183411 -100.49829102]
[140.51277161 -85.93197632]
[132.35827637 -73.20423126]
[120.81340027 -63.44680405]
[106.90473175 -57.52731323]
[108.46525574 -42.60870743]
[110.02577972 -27.69010353]
[119.04517365 -15.83684349]
[112.78556061 -1.30660629]
[114.34608459 13.61199856]
[115.90660858 28.53060341]
[121.61425018 14.65894794]
[131.46719360 3.34879541]
[144.42562866 -4.20626783]
[159.12202454 -7.20893764]
[174.00541687 -5.34233570]
[187.50515747 1.19655192]
[198.19657898 11.71765995]
[204.95137024 25.11067200]
[207.05670166 39.96218872]
[204.29037476 54.70489883]
[196.94433594 67.78296661]
[185.79383850 77.81623077]
[172.01562500 83.74585724]
[157.06372070 84.94608307]
[142.51603699 81.29023743]
[129.90785217 73.16413879]
[120.56970978 61.42535019]
[115.48706818 47.31250381]
[113.26195526 62.14654541]
[111.03683472 76.98059082]
[108.81171417 91.81463623]
[106.80770111 106.68016052]
[105.02523804 121.57388306]
[111.06782532 136.19570923]
[101.87295532 147.91336060]
[100.09048462 162.80708313]
[98.30802155 177.70079041]
[108.17809296 166.40559387]
[122.13317108 160.90505981]
[137.05564880 162.42803955]
[149.61181641 170.63429260]
[156.99659729 183.69052124]
[157.56019592 198.67993164]
[151.17672729 212.25384521]
[139.27224731 221.37982178]
[124.50626373 224.01908875]
[110.17752838 219.58203125]
[99.48712921 209.05990601]
[94.82331085 194.80334473]
[90.63629913 209.20712280]
[86.44928741 223.61091614]
[82.26227570 238.01469421]
[78.07526398 252.41847229]
[92.24346924 257.35464478]
[106.13391876 263.02554321]
[119.70853424 269.41564941]
[132.93011475 276.50744629]
[145.76242065 284.28146362]
[158.17027283 292.71643066]
[170.11967468 301.78921509]
[181.57785034 311.47497559]
[192.51342773 321.74710083]
[202.89640808 332.57751465]
[212.69833374 343.93646240]
[221.89234924 355.79284668]
[230.45324707 368.11413574]
[238.35757446 380.86660767]
[245.58364868 394.01528931]
[252.11166382 407.52410889]
[257.92373657 421.35607910]
[263.00393677 435.47329712]
[267.33831787 449.83700562]
[270.91503906 464.40789795]
[273.72427368 479.14599609]
[275.75833130 494.01095581]
[277.01159668 508.96197510]
[277.48068237 523.95806885]
[277.16430664 538.95819092]
[276.06329346 553.92120361]
[274.18069458 568.80609131]
[271.52166748 583.57202148]
[268.09347534 598.17858887]
[263.90554810 612.58569336]
[258.96936035 626.75384521]
[253.29840088 640.64428711]
[246.90826416 654.21887207]
[239.81643677 667.44042969]
[232.04235840 680.27270508]
[223.60734558 692.68054199]
[214.53453064 704.62994385]
[204.84875488 716.08807373]
[194.57656860 727.02362061]
[183.74615479 737.40655518]
[172.38717651 747.20849609]
[160.53076172 756.40246582]
[148.20942688 764.96331787]
[135.45693970 772.86761475]
[122.30824280 780.09362793]
[108.79939270 786.62158203]
[94.96739960 792.43365479]
[80.85018921 797.51379395]
[66.48645020 801.84814453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 145]
[75 144]
[76 143]
[78 141]
[79 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 118]
[87 117]
[88 116]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
