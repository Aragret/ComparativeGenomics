%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[11.60518360 693.37335205]
[-0.61934054 684.64611816]
[-11.65362644 674.45556641]
[-21.32364655 662.96234131]
[-29.47689247 650.34777832]
[-35.98477554 636.81079102]
[-40.74465561 622.56481934]
[-43.68146515 607.83465576]
[-44.74888229 592.85253906]
[-43.93007660 577.85473633]
[-41.23795700 563.07788086]
[-36.71498871 548.75500488]
[-30.43249893 535.11187744]
[-22.48957634 522.36383057]
[-13.01148987 510.71182251]
[-2.14772296 500.33966064]
[9.93038654 491.41091919]
[23.03235054 484.06640625]
[36.95153046 478.42196655]
[51.46840286 474.56665039]
[49.46438980 459.70111084]
[47.46037674 444.83557129]
[45.45635986 429.97006226]
[40.58850479 444.15820312]
[32.25849915 456.63262939]
[21.01883698 466.56591797]
[7.61500978 473.29922485]
[-7.06395674 476.38595581]
[-22.04445839 475.62139893]
[-36.33289337 471.05624390]
[-48.98155975 462.99328613]
[-59.15151978 451.96731567]
[-66.16823578 438.70965576]
[-69.56630707 424.09960938]
[-69.12036133 409.10623169]
[-64.85997772 394.72399902]
[-57.06772232 381.90679932]
[-46.26043320 371.50473022]
[-33.15491867 364.20779419]
[-18.62042046 360.49990845]
[-3.62095833 360.62704468]
[10.84860516 364.58074951]
[23.82855797 372.09878540]
[34.45798492 382.68249512]
[42.03187561 395.62994385]
[46.04860306 410.08740234]
[48.93387604 395.36752319]
[51.81914902 380.64764404]
[54.70442200 365.92773438]
[43.59565735 351.37744141]
[46.70347595 333.01296997]
[62.51430511 322.57592773]
[64.96003723 307.77664185]
[67.40576172 292.97738647]
[69.85148621 278.17810059]
[72.29721832 263.37884521]
[74.74294281 248.57955933]
[65.88728333 236.65844727]
[68.15677643 221.61503601]
[80.72077942 212.40724182]
[83.16651154 197.60797119]
[85.05979919 182.72793579]
[86.39803314 167.78775024]
[87.73626709 152.84756470]
[81.16529083 139.48075867]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[87.14339447 72.74061584]
[95.98531342 60.75438690]
[97.32354736 45.81420135]
[98.66178131 30.87401581]
[100.00001526 15.93383026]
[101.11566162 0.97537673]
[94.21347809 -13.26086044]
[102.69460297 -25.50503540]
[103.58741760 -40.47844315]
[104.48023987 -55.45184708]
[105.03844452 -70.44145966]
[105.26177216 -85.43979645]
[105.48509979 -100.43813324]
[105.70842743 -115.43647003]
[105.70842743 -130.43646240]
[105.48509979 -145.43479919]
[105.26177216 -160.43315125]
[90.38865662 -162.62092590]
[76.05912018 -167.16633606]
[62.64434814 -173.95161438]
[50.49180984 -182.80102539]
[39.91628647 -193.48533630]
[31.19170952 -205.72779846]
[24.54406357 -219.21130371]
[20.14554214 -233.58659363]
[18.11007690 -248.48132324]
[18.49039078 -263.50967407]
[21.27663231 -278.28240967]
[26.39663124 -292.41680908]
[33.71776581 -305.54681396]
[43.05040741 -317.33233643]
[54.15280914 -327.46804810]
[66.73739624 -335.69143677]
[80.47820282 -341.78952026]
[95.01930237 -345.60430908]
[109.98404694 -347.03701782]
[124.98480988 -346.05050659]
[139.63304138 -342.67034912]
[153.54931641 -336.98410034]
[166.37316895 -329.13903809]
[177.77243042 -319.33834839]
[187.45182800 -307.83593750]
[195.16064453 -294.92974854]
[200.69921875 -280.95404053]
[203.92405701 -266.27081299]
[204.75164795 -251.26045227]
[203.16055298 -236.31172180]
[199.19200134 -221.81184387]
[192.94874573 -208.13638306]
[184.59254456 -195.63958740]
[174.33982849 -184.64514160]
[162.45614624 -175.43783569]
[149.24934387 -168.25614929]
[135.06150818 -163.28611755]
[120.26011658 -160.65647888]
[120.48344421 -145.65812683]
[120.70677185 -130.65979004]
[123.44897461 -126.74963379]
[123.76394653 -121.07532501]
[120.70677185 -115.21314240]
[120.48344421 -100.21480560]
[120.26011658 -85.21646881]
[120.03678894 -70.21813202]
[122.21703339 -67.44705963]
[123.16341400 -63.48228455]
[122.32949066 -58.91524124]
[119.45364380 -54.55903244]
[118.56082916 -39.58562469]
[117.66801453 -24.61222076]
[124.63405609 -11.44698048]
[116.08906555 1.86819255]
[118.53285217 5.97147942]
[118.42491913 11.65350151]
[114.94020081 17.27206421]
[113.60196686 32.21224976]
[112.26373291 47.15243530]
[110.92549896 62.09262085]
[117.49647522 75.45942688]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[111.51837158 142.19956970]
[102.67645264 154.18580627]
[101.33821869 169.12599182]
[99.99998474 184.06617737]
[113.00878906 176.59817505]
[127.01379395 181.97032166]
[131.69102478 196.22245789]
[123.59260559 208.84844971]
[108.68839264 210.54087830]
[97.96578217 200.05369568]
[95.52005005 214.85296631]
[104.45357513 227.61344910]
[101.76243591 242.58717346]
[89.54221344 251.02528381]
[87.09648895 265.82455444]
[84.65075684 280.62384033]
[82.20503235 295.42309570]
[79.75930786 310.22238159]
[77.31357574 325.02163696]
[85.98561096 333.15383911]
[89.61810303 344.34783936]
[87.41867828 355.78707886]
[80.04734039 364.65158081]
[69.42431641 368.81301880]
[66.53903961 383.53289795]
[63.65376663 398.25280762]
[60.76849747 412.97268677]
[60.32189178 427.96603394]
[62.32590485 442.83157349]
[64.32991791 457.69708252]
[66.33393097 472.56262207]
[81.35349274 472.43618774]
[96.27046204 474.19323730]
[110.84957886 477.80606079]
[124.86090851 483.21771240]
[138.08348083 490.34280396]
[150.30873108 499.06900024]
[161.34387207 509.25863647]
[171.01486206 520.75103760]
[179.16917419 533.36492920]
[185.67819214 546.90136719]
[190.43927002 561.14691162]
[193.37731934 575.87689209]
[194.44599915 590.85888672]
[193.62844849 605.85675049]
[190.93757629 620.63385010]
[186.41581726 634.95709229]
[180.13447571 648.60070801]
[172.19262695 661.34948730]
[162.71551514 673.00225830]
[151.85263062 683.37536621]
[139.77526855 692.30511475]
[126.67392731 699.65069580]
[112.75521851 705.29632568]
[98.23867035 709.15289307]
[83.35322571 711.15960693]
[68.33365631 711.28479004]
[53.41683197 709.52648926]
[38.83802032 705.91241455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 182]
[21 181]
[22 180]
[23 179]
[46 178]
[47 177]
[48 176]
[49 175]
[52 170]
[53 169]
[54 168]
[55 167]
[56 166]
[57 165]
[60 162]
[61 161]
[62 155]
[63 154]
[64 153]
[66 151]
[67 150]
[69 148]
[71 146]
[72 145]
[73 144]
[74 143]
[75 140]
[77 138]
[78 137]
[79 136]
[80 132]
[81 131]
[82 130]
[83 129]
[84 126]
[85 125]
[86 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
