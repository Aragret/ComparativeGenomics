%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[106.43019104 658.01739502]
[92.93395996 651.45837402]
[79.90596008 644.01251221]
[67.40438843 635.71313477]
[55.48506927 626.59722900]
[44.20124817 616.70556641]
[33.60331345 606.08233643]
[23.73860550 594.77496338]
[14.65117741 582.83398438]
[6.38161898 570.31262207]
[-1.03313732 557.26690674]
[-7.55997419 543.75506592]
[-13.16974068 529.83746338]
[-17.83738327 515.57629395]
[-21.54205322 501.03512573]
[-24.26720619 486.27902222]
[-26.00066948 471.37384033]
[-26.73470116 456.38616943]
[-26.46602440 441.38293457]
[-25.19583702 426.43115234]
[-22.92981339 411.59759521]
[-19.67807388 396.94851685]
[-15.45514202 382.54934692]
[-10.27987862 368.46438599]
[-4.17539597 354.75656128]
[2.83103943 341.48706055]
[10.70813560 328.71520996]
[19.42071152 316.49798584]
[28.92985344 304.88998413]
[39.19309235 293.94308472]
[50.16458893 283.70611572]
[61.79534149 274.22482300]
[74.03340149 265.54153442]
[86.82411957 257.69509888]
[100.11035156 250.72047424]
[113.83277893 244.64888000]
[127.93009186 239.50738525]
[123.74308014 225.10360718]
[119.55606842 210.69982910]
[108.57369995 200.63818359]
[112.15135956 185.22679138]
[109.76245880 183.76005554]
[107.81061554 181.25866699]
[106.69281769 177.88436890]
[106.74023438 173.93946838]
[108.17137909 169.83998108]
[104.84912109 155.21250916]
[101.52686310 140.58505249]
[98.20459747 125.95759583]
[85.66680145 121.71588135]
[76.83792114 111.85488129]
[74.00254822 98.92626190]
[77.89439392 86.27548981]
[87.50637054 77.17612457]
[84.40225983 62.50082016]
[81.29814911 47.82551956]
[78.19403839 33.15021515]
[75.08992767 18.47491264]
[62.12730789 9.83730793]
[59.18835449 -5.08975506]
[67.50287628 -17.39440155]
[64.39876556 -32.06970596]
[53.97313309 -43.96998978]
[58.90915680 -58.02292252]
[55.80504608 -72.69822693]
[52.70093536 -87.37352753]
[42.33610916 -95.05032349]
[40.05281067 -107.33731842]
[46.53884888 -117.54798889]
[43.65357590 -132.26788330]
[40.76830292 -146.98777771]
[37.88302994 -161.70767212]
[22.91373253 -160.51692200]
[7.90627337 -161.04032898]
[-6.94369173 -163.27110291]
[-21.44256401 -167.18011475]
[-35.40132141 -172.71644592]
[-48.63798141 -179.80789185]
[-60.97998047 -188.36199951]
[-72.26641083 -198.26725769]
[-82.35013580 -209.39454651]
[-91.09968567 -221.59877014]
[-98.40100098 -234.72082520]
[-104.15888977 -248.58966064]
[-108.29827881 -263.02444458]
[-110.76522064 -277.83700562]
[-111.52753448 -292.83422852]
[-110.57529449 -307.82058716]
[-107.92091370 -322.60070801]
[-103.59899139 -336.98190308]
[-97.66587830 -350.77670288]
[-90.19892120 -363.80520630]
[-81.29546356 -375.89761353]
[-71.07159424 -386.89627075]
[-59.66058731 -396.65774536]
[-47.21121979 -405.05484009]
[-33.88578415 -411.97802734]
[-19.85801506 -417.33706665]
[-5.31078672 -421.06210327]
[9.56624603 -423.10458374]
[24.57913017 -423.43783569]
[39.53214264 -422.05755615]
[54.23033905 -418.98171997]
[68.48210144 -414.25042725]
[82.10162354 -407.92538452]
[94.91135406 -400.08901978]
[106.74428558 -390.84350586]
[117.44615173 -380.30935669]
[126.87743378 -368.62396240]
[134.91517639 -355.93963623]
[141.45458984 -342.42172241]
[146.41041565 -328.24649048]
[149.71806335 -313.59869385]
[151.33438110 -298.66937256]
[151.23831177 -283.65307617]
[149.43112183 -268.74563599]
[145.93634033 -254.14138794]
[140.79956055 -240.03071594]
[134.08772278 -226.59757996]
[125.88835907 -214.01710510]
[116.30834198 -202.45332336]
[105.47257233 -192.05699158]
[93.52232361 -182.96362305]
[80.61338043 -175.29179382]
[66.91404724 -169.14149475]
[52.60292053 -164.59294128]
[55.48819351 -149.87304688]
[58.37346649 -135.15315247]
[61.25873947 -120.43326569]
[73.48866272 -107.84771729]
[67.37623596 -90.47763824]
[70.48034668 -75.80233765]
[73.58445740 -61.12703323]
[83.78806305 -50.27642441]
[79.07406616 -35.17381287]
[82.17817688 -20.49851227]
[94.76299286 -12.61447906]
[98.12005615 2.22414541]
[89.76522827 15.37080288]
[92.86933899 30.04610634]
[95.97344971 44.72140884]
[99.07756042 59.39670944]
[102.18167114 74.07201385]
[117.14569092 80.42845154]
[125.41558838 94.42612457]
[123.76258850 110.59998322]
[112.83206177 122.63533783]
[116.15431976 137.26280212]
[119.47657776 151.89025879]
[122.79883575 166.51771545]
[126.55513763 181.03977966]
[137.83699036 192.13168335]
[133.95985413 206.51281738]
[138.14686584 220.91659546]
[142.33387756 235.32037354]
[156.99063110 232.10339355]
[171.82951355 229.87255859]
[186.78427124 228.63783264]
[201.78810120 228.40475464]
[216.77400208 229.17433167]
[231.67501831 230.94314575]
[246.42462158 233.70327759]
[260.95693970 237.44242859]
[275.20703125 242.14389038]
[289.11129761 247.78665161]
[302.60763550 254.34552002]
[315.63571167 261.79119873]
[328.13739014 270.09042358]
[340.05682373 279.20614624]
[351.34075928 289.09765625]
[361.93884277 299.72076416]
[371.80368042 311.02801514]
[380.89126587 322.96890259]
[389.16098022 335.49014282]
[396.57589722 348.53576660]
[403.10290527 362.04751587]
[408.71286011 375.96505737]
[413.38067627 390.22622681]
[417.08551025 404.76730347]
[419.81085205 419.52337646]
[421.54452515 434.42852783]
[422.27874756 449.41619873]
[422.01025391 464.41943359]
[420.74023438 479.37124634]
[418.47439575 494.20483398]
[415.22283936 508.85394287]
[411.00009155 523.25317383]
[405.82501221 537.33819580]
[399.72070312 551.04608154]
[392.71444702 564.31567383]
[384.83749390 577.08764648]
[376.12509155 589.30493164]
[366.61608887 600.91308594]
[356.35296631 611.86010742]
[345.38162231 622.09722900]
[333.75097656 631.57867432]
[321.51303101 640.26208496]
[308.72241211 648.10870361]
[295.43624878 655.08349609]
[281.71392822 661.15527344]
[267.61666870 666.29693604]
[253.20745850 670.48553467]
[238.55067444 673.70233154]
[223.71176147 675.93298340]
[208.75698853 677.16748047]
[193.75315857 677.40039062]
[178.76727295 676.63061523]
[163.86625671 674.86163330]
[149.11669922 672.10131836]
[134.58442688 668.36193848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 155]
[38 154]
[39 153]
[41 151]
[46 150]
[47 149]
[48 148]
[49 147]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[61 136]
[62 135]
[64 133]
[65 132]
[66 131]
[69 129]
[70 128]
[71 127]
[72 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
