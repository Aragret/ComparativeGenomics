%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[41.65330124 811.23651123]
[26.97506905 814.34527588]
[12.14787102 816.64074707]
[-2.78326464 818.11590576]
[-17.77298927 818.76629639]
[-32.77578354 818.58990479]
[-47.74607849 817.58740234]
[-62.63841629 815.76165771]
[-77.40756226 813.11834717]
[-92.00866699 809.66540527]
[-106.39738464 805.41339111]
[-120.53002167 800.37518311]
[-134.36366272 794.56610107]
[-147.85627747 788.00378418]
[-160.96688843 780.70812988]
[-173.65570068 772.70135498]
[-185.88417053 764.00769043]
[-197.61515808 754.65362549]
[-208.81301880 744.66748047]
[-219.44378662 734.07965088]
[-229.47512817 722.92230225]
[-238.87661743 711.22924805]
[-247.61967468 699.03607178]
[-255.67776489 686.37976074]
[-263.02639771 673.29876709]
[-269.64328003 659.83282471]
[-275.50830078 646.02282715]
[-280.60366821 631.91070557]
[-284.91387939 617.53930664]
[-288.42584229 602.95227051]
[-291.12890625 588.19396973]
[-293.01489258 573.30914307]
[-294.07800293 558.34301758]
[-294.31506348 543.34106445]
[-293.72534180 528.34881592]
[-292.31060791 513.41186523]
[-290.07519531 498.57546997]
[-287.02587891 483.88476562]
[-283.17190552 469.38436890]
[-278.52496338 455.11828613]
[-273.09921265 441.12988281]
[-266.91110229 427.46157837]
[-259.97943115 414.15493774]
[-252.32525635 401.25033569]
[-243.97181702 388.78698730]
[-234.94447327 376.80276489]
[-225.27066040 365.33401489]
[-214.97975159 354.41558838]
[-204.10298157 344.08065796]
[-192.67341614 334.36056519]
[-180.72573853 325.28491211]
[-168.29624939 316.88116455]
[-155.42268372 309.17492676]
[-142.14414978 302.18957520]
[-128.50096130 295.94628906]
[-114.53456879 290.46408081]
[-100.28737640 285.75955200]
[-85.80265808 281.84701538]
[-71.12440491 278.73837280]
[-56.29719162 276.44302368]
[-41.36604691 274.96798706]
[-26.37631607 274.31768799]
[-11.37352371 274.49414062]
[3.59676552 275.49679565]
[18.48908806 277.32263184]
[33.25821686 279.96606445]
[47.85929871 283.41906738]
[62.24798965 287.67120361]
[67.28490448 273.54214478]
[72.32182312 259.41311646]
[77.35873413 245.28410339]
[82.39565277 231.15507507]
[87.43257141 217.02604675]
[90.75482941 202.39857483]
[92.31535339 187.47998047]
[93.87587738 172.56137085]
[95.43639374 157.64276123]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[81.75518799 60.24319839]
[88.52445221 46.97570419]
[87.40879822 32.01725006]
[86.29315186 17.05879593]
[83.35276794 12.74588490]
[82.45093536 8.19176579]
[83.33818054 4.21334267]
[85.47693634 1.41011631]
[85.03032684 -13.58323383]
[84.58372498 -28.57658386]
[84.13711548 -43.56993484]
[83.69050598 -58.56328201]
[83.24390411 -73.55663300]
[82.79729462 -88.54998016]
[68.57410431 -93.91368866]
[57.48961258 -104.31572723]
[51.23411942 -118.16986847]
[50.76154327 -133.36344910]
[56.14395142 -147.57957458]
[66.56056213 -158.65037537]
[80.42292023 -164.88763428]
[95.61711884 -165.34022522]
[109.82614899 -159.93913269]
[120.88323975 -149.50796509]
[127.10225677 -135.63740540]
[127.53485870 -120.44263458]
[122.11506653 -106.24071503]
[111.66936493 -95.19735718]
[97.79064941 -88.99658966]
[98.23725128 -74.00324249]
[98.68386078 -59.00988770]
[99.13046265 -44.01654053]
[99.57707214 -29.02318954]
[100.02367401 -14.02983952]
[100.47028351 0.96351045]
[101.25160217 15.94314766]
[102.36725616 30.90160179]
[103.48290253 45.86005402]
[112.14538574 57.97660065]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[117.78711700 128.35281372]
[129.91218567 119.52202606]
[144.65223694 116.74153137]
[159.16117859 120.54818726]
[170.63755798 130.20698547]
[176.86549377 143.85298157]
[176.64244080 158.85131836]
[170.01148987 172.30607605]
[158.25296021 181.61933899]
[143.63723755 184.99285889]
[128.98638916 181.77528381]
[117.12928009 172.58786011]
[110.35500336 159.20329285]
[108.79447937 174.12188721]
[107.23395538 189.04049683]
[105.67343140 203.95910645]
[114.25772858 191.65829468]
[126.49153900 182.97879028]
[140.93765259 178.94024658]
[155.89895630 180.01710510]
[169.61779785 186.08285522]
[180.48249817 196.42489624]
[187.21672058 209.82827759]
[189.02928162 224.71835327]
[185.70729065 239.34588623]
[177.64099121 251.99241638]
[165.77799988 261.17224121]
[151.51196289 265.80694580]
[136.51887512 265.35205078]
[122.56006622 259.86099243]
[111.27542877 249.97883606]
[103.99066925 236.86653137]
[101.56159973 222.06295776]
[96.52468109 236.19198608]
[91.48776245 250.32101440]
[86.45085144 264.45004272]
[81.41393280 278.57907104]
[76.37701416 292.70809937]
[90.21069336 298.51708984]
[103.70335388 305.07934570]
[116.81402588 312.37487793]
[129.50289917 320.38159180]
[141.73141479 329.07516479]
[153.46246338 338.42916870]
[164.66041565 348.41522217]
[175.29124451 359.00296021]
[185.32267761 370.16024780]
[194.72422791 381.85321045]
[203.46737671 394.04635620]
[211.52555847 406.70260620]
[218.87429810 419.78353882]
[225.49127197 433.24942017]
[231.35639954 447.05941772]
[236.45184326 461.17150879]
[240.76216125 475.54287720]
[244.27423096 490.12985229]
[246.97740173 504.88815308]
[248.86347961 519.77294922]
[249.92671204 534.73907471]
[250.16386414 549.74102783]
[249.57424927 564.73327637]
[248.15963745 579.67028809]
[245.92431641 594.50665283]
[242.87509155 609.19738770]
[239.02120972 623.69781494]
[234.37438965 637.96392822]
[228.94873047 651.95239258]
[222.76072693 665.62072754]
[215.82914734 678.92742920]
[208.17506409 691.83203125]
[199.82170105 704.29547119]
[190.79444885 716.27978516]
[181.12071228 727.74859619]
[170.82987976 738.66705322]
[159.95318604 749.00207520]
[148.52368164 758.72222900]
[136.57608032 767.79797363]
[124.14663696 776.20178223]
[111.27313232 783.90814209]
[97.99464417 790.89361572]
[84.35150146 797.13696289]
[70.38514709 802.61926270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 166]
[69 165]
[70 164]
[71 163]
[72 162]
[73 161]
[74 144]
[75 143]
[76 142]
[77 141]
[78 128]
[79 127]
[80 126]
[82 124]
[83 123]
[85 121]
[86 120]
[87 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
