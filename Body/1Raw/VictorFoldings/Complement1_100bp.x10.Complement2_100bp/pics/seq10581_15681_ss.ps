%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[92.24643707 878.26965332]
[77.36257935 876.37384033]
[62.61122131 873.63134766]
[48.04048920 870.05126953]
[33.69790649 865.64514160]
[19.63025475 860.42742920]
[5.88341856 854.41510010]
[-7.49776077 847.62780762]
[-20.46963692 840.08764648]
[-32.98989868 831.81927490]
[-45.01770401 822.84960938]
[-56.51382446 813.20788574]
[-67.44075775 802.92559814]
[-77.76287079 792.03625488]
[-87.44648743 780.57537842]
[-96.46002197 768.58044434]
[-104.77407074 756.09039307]
[-112.36152649 743.14617920]
[-119.19763184 729.78985596]
[-125.26008606 716.06506348]
[-130.52912903 702.01654053]
[-134.98754883 687.69012451]
[-138.62083435 673.13256836]
[-141.41709900 658.39129639]
[-143.36726379 643.51446533]
[-144.46492004 628.55059814]
[-144.70652771 613.54840088]
[-144.09127808 598.55688477]
[-142.62118530 583.62500000]
[-140.30105591 568.80133057]
[-137.13842773 554.13433838]
[-133.14363098 539.67181396]
[-128.32971191 525.46087646]
[-122.71234131 511.54800415]
[-116.30986786 497.97848511]
[-109.14317322 484.79660034]
[-101.23561859 472.04537964]
[-92.61300659 459.76635742]
[-83.30346680 447.99963379]
[-73.33735657 436.78356934]
[-62.74718475 426.15475464]
[-51.56750107 416.14785767]
[-39.83476257 406.79553223]
[-27.58724594 398.12823486]
[-14.86489677 390.17428589]
[-1.70921469 382.95962524]
[11.83689022 376.50775146]
[25.72923088 370.83975220]
[39.92249680 365.97409058]
[54.37038803 361.92666626]
[69.02578735 358.71063232]
[83.84087372 356.33648682]
[98.76734161 354.81201172]
[98.09755707 339.82699585]
[97.42777252 324.84194946]
[96.75798798 309.85690308]
[96.08820343 294.87185669]
[95.41841888 279.88684082]
[94.74863434 264.90179443]
[94.07884979 249.91674805]
[82.94792175 240.08628845]
[82.05519104 224.89886475]
[92.44175720 213.29039001]
[91.77197266 198.30534363]
[91.10218811 183.32031250]
[88.76086426 180.68391418]
[87.58017731 176.78250122]
[88.14079285 172.17391968]
[90.75225067 167.65426636]
[90.75225067 152.65426636]
[90.75225067 137.65426636]
[90.75225067 122.65425873]
[80.87721252 133.94512939]
[66.27757263 137.38757324]
[52.39863586 131.69766235]
[44.41690063 118.99758911]
[45.30936050 104.02416229]
[54.74314880 92.36209869]
[69.19969177 88.36106873]
[83.28706360 93.51335144]
[91.75135040 105.89839172]
[89.50618744 98.15682983]
[93.67283630 90.79680634]
[95.67684937 75.93128204]
[97.68086243 61.06575012]
[91.85663605 46.35558319]
[101.22495270 34.77611923]
[103.22896576 19.91059113]
[97.40474701 5.20042372]
[106.77305603 -6.37904072]
[104.78883362 -11.20707798]
[104.84896088 -15.84924221]
[106.54029846 -19.55793953]
[109.21285248 -21.85789108]
[111.87864685 -36.61910629]
[114.54444122 -51.38032532]
[117.21024323 -66.14154053]
[119.87603760 -80.90275574]
[106.01585388 -86.80557251]
[93.81698608 -95.64498901]
[83.89131927 -106.97763824]
[76.73671722 -120.23506165]
[72.71205139 -134.75228882]
[72.01920319 -149.80113220]
[74.69291687 -164.62675476]
[80.59909058 -178.48550415]
[89.44146729 -190.68222046]
[100.77651215 -200.60514832]
[114.03567505 -207.75654602]
[128.55387878 -211.77767944]
[143.60289001 -212.46688843]
[158.42785645 -209.78958130]
[172.28517151 -203.88005066]
[184.47975159 -195.03472900]
[194.39993286 -183.69726562]
[201.54811096 -170.43637085]
[205.56573486 -155.91720581]
[206.25129700 -140.86802673]
[203.57038879 -126.04370117]
[197.65750122 -112.18782043]
[188.80921936 -99.99537659]
[177.46936035 -90.07794952]
[164.20674133 -82.93298340]
[149.68659973 -78.91887665]
[134.63725281 -78.23696136]
[131.97145081 -63.47574615]
[129.30566406 -48.71453094]
[126.63986969 -33.95331192]
[123.97406769 -19.19209480]
[121.63858032 -4.37502670]
[127.60614777 9.27185822]
[118.09449005 21.91460419]
[116.09047699 36.78013229]
[122.05804443 50.42701721]
[112.54638672 63.06976318]
[110.54237366 77.93529510]
[108.53836060 92.80081940]
[106.64507294 107.68085480]
[105.75225067 122.65425873]
[105.75225067 137.65426636]
[105.75225067 152.65426636]
[105.75225067 167.65426636]
[106.08722687 182.65052795]
[106.75701141 197.63555908]
[107.42680359 212.62060547]
[118.80760956 223.25614929]
[119.27339935 238.46264648]
[109.06388855 249.24696350]
[109.73367310 264.23199463]
[110.40345764 279.21704102]
[111.07324219 294.20208740]
[111.74302673 309.18713379]
[112.41281128 324.17214966]
[113.08259583 339.15719604]
[113.75238037 354.14224243]
[128.75534058 354.32894897]
[143.72315979 355.37188721]
[158.60702515 357.26760864]
[173.35839844 360.00991821]
[187.92916870 363.58993530]
[202.27178955 367.99591064]
[216.33947754 373.21353149]
[230.08636475 379.22573853]
[243.46759033 386.01290894]
[256.43951416 393.55297852]
[268.95983887 401.82128906]
[280.98773193 410.79086304]
[292.48391724 420.43249512]
[303.41094971 430.71469116]
[313.73312378 441.60394287]
[323.41683960 453.06472778]
[332.43048096 465.05963135]
[340.74462891 477.54956055]
[348.33218384 490.49377441]
[355.16839600 503.85003662]
[361.23095703 517.57476807]
[366.50009155 531.62322998]
[370.95864868 545.94958496]
[374.59204102 560.50714111]
[377.38842773 575.24835205]
[379.33868408 590.12518311]
[380.43646240 605.08911133]
[380.67819214 620.09124756]
[380.06307983 635.08276367]
[378.59307861 650.01470947]
[376.27307129 664.83837891]
[373.11056519 679.50537109]
[369.11587524 693.96795654]
[364.30206299 708.17889404]
[358.68481445 722.09185791]
[352.28244019 735.66137695]
[345.11584473 748.84332275]
[337.20840454 761.59460449]
[328.58587646 773.87371826]
[319.27642822 785.64050293]
[309.31039429 796.85662842]
[298.72030640 807.48553467]
[287.54071045 817.49255371]
[275.80804443 826.84497070]
[263.56060791 835.51232910]
[250.83831787 843.46636963]
[237.68269348 850.68115234]
[224.13662720 857.13311768]
[210.24433899 862.80126953]
[196.05110168 867.66699219]
[181.60324097 871.71459961]
[166.94787598 874.93072510]
[152.13279724 877.30493164]
[137.20634460 878.82952881]
[122.21720123 879.49951172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 155]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[63 145]
[64 144]
[65 143]
[69 142]
[70 141]
[71 140]
[72 139]
[81 138]
[83 137]
[84 136]
[85 135]
[87 133]
[88 132]
[90 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
