%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[115.94714355 510.13949585]
[104.81417847 499.95523071]
[96.69725800 487.23602295]
[92.14981842 472.84912109]
[91.48190308 457.77542114]
[94.73905182 443.04269409]
[101.69918823 429.65542603]
[111.88776398 418.52639771]
[124.61009979 410.41439819]
[138.99876404 405.87249756]
[138.32897949 390.88745117]
[137.65919495 375.90243530]
[136.98941040 360.91738892]
[126.76174927 346.65689087]
[135.38323975 330.38571167]
[134.49043274 315.41229248]
[133.59761047 300.43887329]
[132.70478821 285.46548462]
[130.70077515 270.59994507]
[127.59667206 255.92465210]
[124.49256134 241.24934387]
[121.38845062 226.57405090]
[118.28433990 211.89874268]
[115.18022919 197.22343445]
[112.07611847 182.54814148]
[108.75386047 167.92068481]
[105.21418762 153.34429932]
[101.67451477 138.76792908]
[98.13484192 124.19155121]
[94.59516907 109.61517334]
[84.68074036 120.87146759]
[69.69198608 120.29083252]
[60.67805099 108.30129242]
[64.28368378 93.74109650]
[77.85093689 87.34346771]
[91.37750244 93.82322693]
[88.93177032 79.02395630]
[86.48604584 64.22468567]
[84.04032135 49.42541504]
[81.59458923 34.62614441]
[71.58288574 26.49419403]
[69.85050964 14.11749649]
[76.78601074 4.20662355]
[74.56089020 -10.62742043]
[72.33577728 -25.46146393]
[70.11065674 -40.29550934]
[67.22538757 -55.01539993]
[63.68571091 -69.59177399]
[60.14604187 -84.16815186]
[56.60636902 -98.74452209]
[45.83104324 -110.32912445]
[50.34646988 -124.52278900]
[46.80679703 -139.09916687]
[32.01298141 -136.58367920]
[17.07972717 -135.10627747]
[2.07979417 -134.67417908]
[-12.91374207 -135.28947449]
[-27.82783318 -136.94917297]
[-42.58982086 -139.64518738]
[-57.12778091 -143.36439514]
[-71.37088776 -148.08865356]
[-85.24974823 -153.79495239]
[-98.69674683 -160.45550537]
[-111.64636993 -168.03785706]
[-124.03553009 -176.50505066]
[-135.80386353 -185.81585693]
[-146.89404297 -195.92489624]
[-157.25202942 -206.78292847]
[-166.82736206 -218.33705139]
[-175.57339478 -230.53096008]
[-183.44750977 -243.30526733]
[-190.41134644 -256.59774780]
[-196.43098450 -270.34359741]
[-201.47709656 -284.47589111]
[-205.52508545 -298.92575073]
[-208.55523682 -313.62280273]
[-210.55279541 -328.49539185]
[-211.50801086 -343.47113037]
[-211.41625977 -358.47698975]
[-210.27795410 -373.43991089]
[-208.09866333 -388.28698730]
[-204.88899231 -402.94586182]
[-200.66458130 -417.34512329]
[-195.44602966 -431.41464233]
[-189.25872803 -445.08587646]
[-182.13284302 -458.29217529]
[-174.10308838 -470.96923828]
[-165.20858765 -483.05526733]
[-155.49267578 -494.49142456]
[-145.00267029 -505.22198486]
[-133.78968811 -515.19464111]
[-121.90836334 -524.36083984]
[-109.41658020 -532.67584229]
[-96.37519073 -540.09924316]
[-82.84774017 -546.59484863]
[-68.90013123 -552.13104248]
[-54.60031509 -556.68072510]
[-40.01795578 -560.22186279]
[-25.22410393 -562.73712158]
[-10.29082966 -564.21429443]
[4.70911074 -564.64617920]
[19.70263863 -564.03070068]
[34.61670685 -562.37078857]
[49.37865448 -559.67456055]
[63.91656113 -555.95513916]
[78.15959930 -551.23065186]
[92.03837585 -545.52416992]
[105.48528290 -538.86340332]
[118.43479919 -531.28088379]
[130.82383728 -522.81353760]
[142.59204102 -513.50256348]
[153.68206787 -503.39334106]
[164.03990173 -492.53518677]
[173.61506653 -480.98092651]
[182.36093140 -468.78686523]
[190.23486328 -456.01245117]
[197.19851685 -442.71987915]
[203.21795654 -428.97393799]
[208.26385498 -414.84158325]
[212.31163025 -400.39166260]
[215.34158325 -385.69458008]
[217.33892822 -370.82192993]
[218.29393005 -355.84619141]
[218.20195007 -340.84033203]
[217.06344604 -325.87741089]
[214.88392639 -311.03039551]
[211.67405701 -296.37155151]
[207.44944763 -281.97235107]
[202.23068237 -267.90289307]
[196.04318237 -254.23176575]
[188.91711426 -241.02555847]
[180.88717651 -228.34861755]
[171.99250793 -216.26271057]
[162.27641296 -204.82669067]
[151.78625488 -194.09629822]
[140.57313538 -184.12379456]
[128.69168091 -174.95779419]
[116.19978333 -166.64291382]
[103.15828705 -159.21969604]
[89.63074493 -152.72428894]
[75.68305969 -147.18835449]
[61.38317108 -142.63883972]
[64.92284393 -128.06246948]
[75.44499207 -117.52046204]
[71.18273926 -102.28419495]
[74.72241211 -87.70782471]
[78.26208496 -73.13144684]
[81.80175781 -58.55507278]
[90.51049042 -70.76809692]
[105.28100586 -73.38190460]
[117.65207672 -64.89917755]
[120.53699493 -50.17921829]
[112.28314972 -37.65428162]
[97.61872101 -34.49922180]
[84.94470215 -42.52062607]
[87.16981506 -27.68658066]
[89.39493561 -12.85253716]
[91.62005615 1.98150611]
[103.27580261 15.10059261]
[96.39385986 32.18041611]
[98.83959198 46.97968674]
[101.28531647 61.77895737]
[103.73104095 76.57823181]
[106.17677307 91.37750244]
[109.17154694 106.07550812]
[112.71121979 120.65187836]
[116.25089264 135.22825623]
[119.79056549 149.80462646]
[123.33023834 164.38101196]
[127.60987091 169.42048645]
[128.55947876 175.02362061]
[126.75141907 179.44403076]
[129.85552979 194.11932373]
[132.95964050 208.79463196]
[136.06375122 223.46994019]
[139.16786194 238.14523315]
[142.27197266 252.82054138]
[145.37608337 267.49584961]
[151.52751160 253.81520081]
[163.63705444 244.96315002]
[178.53932190 243.25358582]
[192.33888245 249.13340759]
[201.42857361 261.06561279]
[203.43235779 275.93118286]
[197.82646179 289.84426880]
[186.07624817 299.16802979]
[171.25320435 301.46527100]
[157.23204041 296.13546753]
[147.67820740 284.57266235]
[148.57101440 299.54608154]
[149.46383667 314.51947021]
[150.35664368 329.49288940]
[159.46801758 338.62228394]
[159.90338135 351.11203003]
[151.97444153 360.24758911]
[152.64422607 375.23263550]
[153.31401062 390.21768188]
[153.98379517 405.20272827]
[168.72029114 408.44281006]
[182.11561584 415.38742065]
[193.25643921 425.56311035]
[201.38317871 438.27603149]
[205.94172668 452.65942383]
[206.62129211 467.73260498]
[203.37551880 482.46783447]
[196.42572021 495.86047363]
[186.24574280 506.99737549]
[173.52967834 515.11920166]
[159.14451599 519.67218018]
[144.07109070 520.34594727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[12 196]
[13 195]
[15 192]
[16 191]
[17 190]
[18 189]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[43 158]
[44 157]
[45 156]
[46 155]
[47 148]
[48 147]
[49 146]
[50 145]
[52 143]
[53 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
