%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[91.42033386 585.64678955]
[80.02802277 575.86956787]
[69.66584015 565.00665283]
[60.43675613 553.16595459]
[52.43250656 540.46508789]
[45.73264313 527.03045654]
[40.40375519 512.99542236]
[36.49880219 498.49957275]
[34.05659485 483.68692017]
[33.10140228 468.70474243]
[33.64272690 453.70187378]
[35.67517853 438.82748413]
[39.17856216 424.22937012]
[44.11806107 410.05264282]
[50.44458008 396.43817139]
[58.09524155 383.52127075]
[66.99400330 371.43035889]
[77.05243683 360.28555298]
[88.17055511 350.19763184]
[100.23787689 341.26687622]
[113.13445282 333.58203125]
[126.73211670 327.21948242]
[140.89572144 322.24243164]
[137.35604858 307.66607666]
[133.81637573 293.08969116]
[123.29423523 282.54769897]
[127.55648804 267.31143188]
[124.01681519 252.73504639]
[120.47714233 238.15867615]
[116.93746948 223.58230591]
[114.13275146 221.44549561]
[112.22367096 217.84405518]
[111.88734436 213.21369934]
[113.58068085 208.27610779]
[110.69540405 193.55622864]
[107.81013489 178.83633423]
[104.92485809 164.11643982]
[92.45881653 156.04591370]
[89.32305145 141.15895081]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[80.04539490 77.41283417]
[85.19010162 63.43495178]
[82.30482483 48.71506119]
[79.41955566 33.99516678]
[75.01855469 19.65532112]
[69.14959717 5.85114384]
[63.28063583 -7.95303297]
[57.41167450 -21.75720978]
[42.23702240 -21.68204117]
[28.22742653 -27.40692329]
[17.50595093 -38.03065109]
[11.68445587 -51.91221619]
[11.62133217 -66.92424011]
[17.29505730 -80.77899170]
[27.81222534 -91.37703705]
[21.94326401 -105.18121338]
[16.07430267 -118.98538971]
[10.20534229 -132.78956604]
[4.13150835 -146.50483704]
[-2.14585209 -160.12814331]
[-8.42321301 -173.75146484]
[-14.70057392 -187.37478638]
[-28.98739624 -182.74627686]
[-43.72137833 -179.84004211]
[-58.69567490 -178.69688416]
[-73.70007324 -179.33285522]
[-88.52392578 -181.73901367]
[-102.95914459 -185.88157654]
[-116.80307007 -191.70240784]
[-129.86135864 -199.11979675]
[-141.95069885 -208.02958679]
[-152.90135193 -218.30670166]
[-162.55961609 -229.80690002]
[-170.78988647 -242.36869812]
[-177.47663879 -255.81576538]
[-182.52598572 -269.95935059]
[-185.86705017 -284.60083008]
[-187.45292664 -299.53472900]
[-187.26135254 -314.55139160]
[-185.29501343 -329.43997192]
[-181.58152771 -343.99148560]
[-176.17300415 -358.00161743]
[-169.14538574 -371.27374268]
[-160.59732056 -383.62149048]
[-150.64883423 -394.87155151]
[-139.43954468 -404.86596680]
[-127.12685394 -413.46444702]
[-113.88359070 -420.54629517]
[-99.89567566 -426.01205444]
[-85.35948181 -429.78503418]
[-70.47906494 -431.81222534]
[-55.46332550 -432.06521606]
[-40.52306747 -430.54040527]
[-25.86802101 -427.25924683]
[-11.70392609 -422.26779175]
[1.77037966 -415.63607788]
[14.36573601 -407.45724487]
[25.90532494 -397.84609985]
[36.22714615 -386.93756104]
[45.18630219 -374.88476562]
[52.65701675 -361.85690308]
[58.53441238 -348.03689575]
[62.73598099 -333.61874390]
[65.20273590 -318.80487061]
[65.90005493 -303.80319214]
[64.81814575 -288.82434082]
[61.97219086 -274.07858276]
[57.40214920 -259.77297974]
[51.17217636 -246.10827637]
[43.36973190 -233.27635193]
[34.10434723 -221.45733643]
[23.50609398 -210.81716919]
[11.72375774 -201.50518799]
[-1.07725739 -193.65214539]
[5.20010328 -180.02882385]
[11.47746372 -166.40550232]
[17.75482559 -152.78219604]
[21.84547234 -150.31730652]
[24.43112755 -145.25654602]
[24.00951958 -138.65852356]
[29.87848091 -124.85434723]
[35.74744034 -111.05017090]
[41.61640167 -97.24599457]
[56.54558563 -97.46668243]
[70.45957184 -91.93980408]
[81.22659302 -81.47863007]
[87.18421936 -67.65494537]
[87.39599609 -52.56293488]
[81.79853058 -38.50194550]
[71.21585083 -27.62617111]
[77.08480835 -13.82199383]
[82.95377350 -0.01781676]
[88.82273102 13.78635979]
[90.77921295 -1.08549833]
[98.21132660 -14.11483765]
[110.01656342 -23.36883163]
[124.44368744 -27.47470856]
[139.35250854 -25.82338142]
[152.53141785 -18.65981865]
[162.02537537 -7.04668951]
[166.42601013 7.29326534]
[165.08053589 22.23279953]
[158.18853760 35.55572128]
[146.77238464 45.28565979]
[132.52561951 49.97922897]
[117.56165314 48.94016647]
[104.10030365 42.32261658]
[94.13944244 31.10989571]
[97.02471924 45.82978821]
[99.90998840 60.54967880]
[109.95091248 71.55100250]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[125.42516327 134.08250427]
[128.14155579 149.05168152]
[119.64475250 161.23117065]
[122.53002167 175.95106506]
[125.41529846 190.67094421]
[128.30056763 205.39083862]
[131.51383972 220.04263306]
[135.05351257 234.61900330]
[138.59318542 249.19537354]
[142.13285828 263.77175903]
[152.90818787 275.35635376]
[148.39276123 289.55001831]
[151.93243408 304.12640381]
[155.47210693 318.70275879]
[170.34089661 316.62966919]
[185.34220886 316.04736328]
[200.32696533 316.96160889]
[215.14620972 319.36334229]
[229.65269470 323.22866821]
[243.70220947 328.51919556]
[257.15515137 335.18231201]
[269.87777710 343.15182495]
[281.74368286 352.34851074]
[292.63488770 362.68099976]
[302.44320679 374.04653931]
[311.07110596 386.33221436]
[318.43286133 399.41592407]
[324.45529175 413.16760254]
[329.07855225 427.45059204]
[332.25671387 442.12295532]
[333.95816040 457.03884888]
[334.16598511 472.05001831]
[332.87811279 487.00729370]
[330.10736084 501.76199341]
[325.88128662 516.16754150]
[320.24185181 530.08062744]
[313.24511719 543.36315918]
[304.96063232 555.88293457]
[295.47070312 567.51568604]
[284.86968994 578.14569092]
[273.26293945 587.66735840]
[260.76580811 595.98602295]
[247.50250244 603.01904297]
[233.60482788 608.69647217]
[219.21092224 612.96191406]
[204.46383667 615.77294922]
[189.51013184 617.10168457]
[174.49844360 616.93487549]
[159.57795715 615.27416992]
[144.89697266 612.13616943]
[130.60139465 607.55194092]
[116.83331299 601.56707764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 172]
[24 171]
[25 170]
[27 168]
[28 167]
[29 166]
[30 165]
[34 164]
[35 163]
[36 162]
[37 161]
[40 158]
[41 157]
[43 155]
[45 153]
[46 152]
[47 151]
[48 136]
[49 135]
[50 134]
[51 133]
[58 126]
[59 125]
[60 124]
[61 123]
[62 120]
[63 119]
[64 118]
[65 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
