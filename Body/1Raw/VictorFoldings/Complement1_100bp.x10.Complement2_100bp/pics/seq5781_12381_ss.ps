%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[139.78205872 636.18078613]
[126.56941986 629.07220459]
[113.75035858 621.27624512]
[101.36059570 612.81463623]
[89.43466187 603.71093750]
[78.00579834 593.99047852]
[67.10587311 583.68048096]
[56.76524353 572.80950928]
[47.01274872 561.40802002]
[37.87556076 549.50775146]
[29.37915039 537.14178467]
[21.54720116 524.34466553]
[14.40153790 511.15206909]
[7.96207857 497.60073853]
[2.24677134 483.72845459]
[-2.72845411 469.57385254]
[-6.94973135 455.17642212]
[-10.40529442 440.57626343]
[-13.08551216 425.81408691]
[-14.98291397 410.93103027]
[-16.09221077 395.96859741]
[-16.41031456 380.96844482]
[-15.93633366 365.97241211]
[-14.67159176 351.02230835]
[-12.61961365 336.15979004]
[-9.78611851 321.42626953]
[-6.17900324 306.86279297]
[-1.80832279 292.51000977]
[3.31374168 278.40789795]
[9.17291451 264.59573364]
[15.75286388 251.11206055]
[23.03524971 237.99443054]
[30.99977875 225.27941895]
[39.62424850 213.00244141]
[48.88462067 201.19773865]
[58.75508499 189.89822388]
[69.20812988 179.13536072]
[80.21463013 168.93916321]
[91.74388885 159.33804321]
[103.76379395 150.35876465]
[116.24082947 142.02636719]
[108.58023071 129.13003540]
[100.91963196 116.23371124]
[86.08281708 108.40779114]
[86.05792999 91.63353729]
[78.20617676 78.85269165]
[70.35441589 66.07185364]
[62.50266266 53.29100800]
[54.65090561 40.51016617]
[46.79915237 27.72932434]
[33.39834595 34.48839188]
[19.47895432 40.10239792]
[5.13860750 44.53195572]
[-9.52210331 47.74600220]
[-24.40034294 49.72198868]
[-39.39175034 50.44606018]
[-54.39116669 49.91312790]
[-69.29338074 48.12694168]
[-83.99387360 45.10002136]
[-98.38951111 40.85360336]
[-112.37933350 35.41747284]
[-125.86519623 28.82975960]
[-138.75251770 21.13667297]
[-150.95089722 12.39217758]
[-162.37475586 2.65760946]
[-172.94398499 -7.99875021]
[-182.58442688 -19.50215340]
[-191.22848511 -31.77190971]
[-198.81550598 -44.72195435]
[-205.29226685 -58.26145172]
[-210.61335754 -72.29543304]
[-214.74145508 -86.72544861]
[-217.64756775 -101.45029449]
[-219.31135559 -116.36666870]
[-219.72111511 -131.36996460]
[-218.87399292 -146.35491943]
[-216.77592468 -161.21643066]
[-213.44161987 -175.85026550]
[-208.89447021 -190.15376282]
[-203.16638184 -204.02659607]
[-196.29751587 -217.37144470]
[-188.33607483 -230.09472656]
[-179.33787537 -242.10717773]
[-169.36605835 -253.32455444]
[-158.49055481 -263.66815186]
[-146.78767395 -273.06542969]
[-134.33946228 -281.45046997]
[-121.23328400 -288.76446533]
[-107.56103516 -294.95608521]
[-93.41864014 -299.98193359]
[-78.90528107 -303.80673218]
[-64.12277222 -306.40365601]
[-49.17480850 -307.75448608]
[-34.16622543 -307.84979248]
[-19.20231247 -306.68884277]
[-4.38802528 -304.27978516]
[10.17271996 -300.63958740]
[24.37779045 -295.79370117]
[38.12754440 -289.77615356]
[51.32553864 -282.62915039]
[63.87919235 -274.40283203]
[75.70045471 -265.15490723]
[86.70639801 -254.95021057]
[96.81983185 -243.86035156]
[105.96981812 -231.96311951]
[114.09216309 -219.34194946]
[121.12990570 -206.08537292]
[127.03366852 -192.28637695]
[131.76205444 -178.04176331]
[135.28189087 -163.45144653]
[137.56848145 -148.61776733]
[138.60578918 -133.64477539]
[138.38655090 -118.63749695]
[136.91227722 -103.70119476]
[134.19334412 -88.94064331]
[130.24879456 -74.45938110]
[125.10631561 -60.35897064]
[118.80197144 -46.73833466]
[111.37998199 -33.69300461]
[102.89241028 -21.31448936]
[93.39878845 -9.68961525]
[82.96571350 1.10007679]
[71.66635895 10.97890282]
[59.57999420 19.87756920]
[67.43174744 32.65841293]
[75.28350830 45.43925476]
[83.13526154 58.22009659]
[90.98701477 71.00093842]
[98.83876801 83.78178406]
[109.98287201 87.16561890]
[116.00519562 97.13420868]
[113.81596375 108.57311249]
[121.47656250 121.46943665]
[129.13716125 134.36576843]
[142.42286682 127.39473724]
[156.05796814 121.13459015]
[170.00444031 115.60276031]
[184.22343445 110.81466675]
[198.67529297 106.78366852]
[213.31976318 103.52098846]
[228.11601257 101.03572083]
[243.02279663 99.33479309]
[257.99856567 98.42295074]
[273.00161743 98.30273438]
[287.99008179 98.97447968]
[302.92221069 100.43630219]
[317.75637817 102.68415070]
[332.45123291 105.71173859]
[346.96585083 109.51063538]
[361.25973511 114.07025146]
[375.29306030 119.37788391]
[389.02673340 125.41873169]
[402.42245483 132.17596436]
[415.44287109 139.63073730]
[428.05172729 147.76229858]
[440.21386719 156.54794312]
[451.89538574 165.96322632]
[463.06375122 175.98187256]
[473.68780518 186.57597351]
[483.73791504 197.71600342]
[493.18612671 209.37091064]
[502.00607300 221.50820923]
[510.17318726 234.09407043]
[517.66467285 247.09339905]
[524.45971680 260.47000122]
[530.53930664 274.18655396]
[535.88647461 288.20486450]
[540.48645020 302.48580933]
[544.32629395 316.98965454]
[547.39532471 331.67590332]
[549.68505859 346.50366211]
[551.18902588 361.43161011]
[551.90301514 376.41812134]
[551.82519531 391.42144775]
[550.95562744 406.39974976]
[549.29675293 421.31124878]
[546.85327148 436.11447144]
[543.63189697 450.76806641]
[539.64172363 465.23126221]
[534.89379883 479.46371460]
[529.40130615 493.42575073]
[523.17968750 507.07846069]
[516.24621582 520.38378906]
[508.62014771 533.30468750]
[500.32284546 545.80505371]
[491.37738037 557.85015869]
[481.80868530 569.40637207]
[471.64346313 580.44146729]
[460.91000366 590.92468262]
[449.63827515 600.82690430]
[437.85964966 610.12036133]
[425.60696411 618.77929688]
[412.91436768 626.77954102]
[399.81726074 634.09875488]
[386.35211182 640.71655273]
[372.55648804 646.61450195]
[358.46881104 651.77618408]
[344.12835693 656.18719482]
[329.57510376 659.83520508]
[314.84960938 662.71008301]
[299.99288940 664.80383301]
[285.04638672 666.11059570]
[270.05175781 666.62670898]
[255.05078125 666.35076904]
[240.08528137 665.28350830]
[225.19694519 663.42791748]
[210.42730713 660.78918457]
[195.81750488 657.37469482]
[181.40824890 653.19384766]
[167.23973083 648.25842285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 134]
[42 133]
[43 132]
[45 129]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
