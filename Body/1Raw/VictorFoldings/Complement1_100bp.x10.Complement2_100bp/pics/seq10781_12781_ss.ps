%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[-6.15206957 801.37786865]
[-20.94069290 803.90417480]
[-35.83277130 805.72393799]
[-50.79457092 806.83306885]
[-65.79219818 807.22900391]
[-80.79167938 806.91088867]
[-95.75903320 805.87945557]
[-110.66035461 804.13696289]
[-125.46189117 801.68743896]
[-140.13009644 798.53643799]
[-154.63177490 794.69097900]
[-168.93403625 790.15991211]
[-183.00451660 784.95343018]
[-196.81132507 779.08337402]
[-210.32316589 772.56298828]
[-223.50947571 765.40710449]
[-236.34033203 757.63183594]
[-248.78671265 749.25488281]
[-260.82040405 740.29516602]
[-272.41412354 730.77307129]
[-283.54165649 720.71008301]
[-294.17773438 710.12896729]
[-304.29833984 699.05383301]
[-313.88046265 687.50964355]
[-322.90246582 675.52258301]
[-331.34387207 663.11987305]
[-339.18557739 650.32946777]
[-346.40979004 637.18048096]
[-353.00018311 623.70263672]
[-358.94180298 609.92645264]
[-364.22119141 595.88317871]
[-368.82641602 581.60461426]
[-372.74700928 567.12310791]
[-375.97409058 552.47143555]
[-378.50036621 537.68280029]
[-380.32009888 522.79071045]
[-381.42919922 507.82891846]
[-381.82510376 492.83129883]
[-381.50695801 477.83181763]
[-380.47546387 462.86447144]
[-378.73297119 447.96313477]
[-376.28341675 433.16162109]
[-373.13235474 418.49340820]
[-369.28689575 403.99172974]
[-364.75579834 389.68948364]
[-359.54928589 375.61901855]
[-353.67916870 361.81222534]
[-347.15875244 348.30038452]
[-340.00280762 335.11410522]
[-332.22753906 322.28326416]
[-323.85055542 309.83691406]
[-314.89083862 297.80325317]
[-305.36868286 286.20953369]
[-295.30566406 275.08203125]
[-284.72457886 264.44595337]
[-273.64938354 254.32539368]
[-262.10519409 244.74328613]
[-250.11811829 235.72131348]
[-237.71534729 227.27993774]
[-224.92497253 219.43826294]
[-211.77595520 212.21406555]
[-198.29809570 205.62371826]
[-184.52191162 199.68212891]
[-170.47862244 194.40275574]
[-156.20004272 189.79759216]
[-141.71850586 185.87702942]
[-127.06682587 182.64997864]
[-112.27819061 180.12373352]
[-97.38610077 178.30403137]
[-82.42430115 177.19497681]
[-67.42666626 176.79908752]
[-52.42719269 177.11726379]
[-37.45984268 178.14878845]
[-22.55852699 179.89132690]
[-7.75700474 182.34092712]
[6.91119671 185.49201965]
[21.41284752 189.33750916]
[35.71509933 193.86863708]
[49.78554916 199.07518005]
[55.65451050 185.27099609]
[61.52347183 171.46682739]
[67.39243317 157.66264343]
[73.26139069 143.85847473]
[79.13035583 130.05429077]
[84.99931335 116.25011444]
[90.86827087 102.44593811]
[90.05836487 97.26347351]
[92.20975494 91.99613190]
[97.12297058 88.32227325]
[95.87103271 72.55068207]
[108.22445679 64.22949219]
[114.50181580 50.60617447]
[120.77918243 36.98285675]
[107.94557953 29.18564415]
[96.08447266 19.97630692]
[85.35049438 9.47490883]
[75.88356781 -2.18164182]
[67.80712891 -14.84137821]
[61.22647095 -28.33925438]
[56.22737885 -42.49929810]
[52.87502670 -57.13690567]
[51.21312714 -72.06124115]
[51.26333618 -87.07774353]
[53.02500534 -101.99063110]
[56.47516632 -116.60549164]
[61.56884003 -130.73178101]
[68.23961639 -144.18534851]
[76.40053558 -156.79080200]
[85.94519806 -168.38377380]
[96.74916840 -178.81315613]
[108.67160034 -187.94297791]
[121.55705261 -195.65419006]
[135.23753357 -201.84628296]
[149.53471375 -206.43852234]
[164.26217651 -209.37103271]
[179.22792053 -210.60560608]
[194.23684692 -210.12611389]
[209.09327698 -207.93884277]
[223.60353088 -204.07226562]
[237.57843018 -198.57682800]
[250.83580017 -191.52416992]
[263.20278931 -183.00622559]
[274.51815796 -173.13403320]
[284.63439941 -162.03633118]
[293.41964722 -149.85777283]
[300.75933838 -136.75712585]
[306.55780029 -122.90521240]
[310.73944092 -108.48260498]
[313.24972534 -93.67732239]
[314.05593872 -78.68240356]
[313.14758301 -63.69331741]
[310.53646851 -48.90548706]
[306.25665283 -34.51170349]
[300.36395264 -20.69961548]
[292.93518066 -7.64929438]
[284.06713867 4.46912336]
[273.87551880 15.49764919]
[262.49313354 25.29250336]
[250.06840515 33.72599030]
[236.76329041 40.68815994]
[222.75126648 46.08824921]
[208.21501160 49.85585785]
[193.34400940 51.94186020]
[178.33216858 52.31906891]
[163.37518311 50.98256302]
[148.66804504 47.94976807]
[134.40249634 43.26021957]
[128.12513733 56.88353348]
[121.84777069 70.50685120]
[123.54870605 85.30401611]
[110.74628448 94.59963226]
[104.67244720 108.31490326]
[98.80348969 122.11907959]
[92.93453217 135.92324829]
[87.06556702 149.72743225]
[81.19660950 163.53161621]
[75.32764435 177.33578491]
[69.45868683 191.13996887]
[63.58972549 204.94413757]
[77.10160828 211.46446228]
[90.28794098 218.62031555]
[103.11884308 226.39550781]
[115.56525421 234.77239990]
[127.59897614 243.73204041]
[139.19274902 253.25411987]
[150.32032776 263.31704712]
[160.95646667 273.89807129]
[171.07710266 284.97320557]
[180.65930176 296.51733398]
[189.68135071 308.50433350]
[198.12280273 320.90704346]
[205.96456909 333.69738770]
[213.18885803 346.84634399]
[219.77929688 360.32415771]
[225.72097778 374.10031128]
[231.00044250 388.14355469]
[235.60571289 402.42211914]
[239.52636719 416.90362549]
[242.75352478 431.55526733]
[245.27986145 446.34390259]
[247.09967041 461.23596191]
[248.20883179 476.19775391]
[248.60481262 491.19540405]
[248.28672791 506.19488525]
[247.25531006 521.16223145]
[245.51287842 536.06353760]
[243.06338501 550.86511230]
[239.91238403 565.53332520]
[236.06700134 580.03497314]
[231.53596497 594.33728027]
[226.32951355 608.40777588]
[220.45947266 622.21459961]
[213.93911743 635.72644043]
[206.78323364 648.91278076]
[199.00801086 661.74365234]
[190.63108826 674.19006348]
[181.67143250 686.22375488]
[172.14932251 697.81750488]
[162.08634949 708.94506836]
[151.50531006 719.58117676]
[140.43016052 729.70178223]
[128.88600159 739.28393555]
[116.89897919 748.30596924]
[104.49624634 756.74737549]
[91.70590210 764.58911133]
[78.55692291 771.81335449]
[65.07909393 778.40380859]
[51.30294037 784.34545898]
[37.25967407 789.62487793]
[22.98111153 794.23010254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[85 153]
[86 152]
[89 151]
[91 149]
[92 148]
[93 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
