%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[84.98090363 541.79803467]
[77.22936249 528.21685791]
[80.07198334 512.83984375]
[92.16656494 502.92745972]
[92.16656494 487.92745972]
[92.16656494 472.92745972]
[92.16656494 457.92745972]
[92.16656494 442.92745972]
[92.16656494 427.92745972]
[81.48569489 417.60977173]
[81.27201080 402.39764404]
[92.16656494 391.26449585]
[92.16656494 376.26449585]
[84.42926788 363.53723145]
[92.16656494 349.73706055]
[92.16656494 334.73706055]
[79.77731323 323.36407471]
[79.44022369 306.21176147]
[91.85221100 293.88449097]
[91.62888336 278.88613892]
[91.40555573 263.88781738]
[91.18222809 248.88946533]
[87.93949127 242.24819946]
[91.06890106 233.66656494]
[91.06890106 218.66656494]
[91.06890106 203.66656494]
[87.92539978 196.97775269]
[91.18222809 188.44364929]
[91.40555573 173.44531250]
[76.36650848 170.06808472]
[62.35429001 163.64651489]
[49.97771835 154.45960999]
[39.77452850 142.90653992]
[32.18803406 129.48924255]
[27.54785156 114.79068756]
[26.05559349 99.44950867]
[27.77609444 84.13224792]
[32.63460159 69.50440979]
[40.42001724 56.20155334]
[50.79408646 44.80166626]
[63.30606461 35.80005264]
[77.41233826 29.58781624]
[92.50000000 26.43487167]
[92.50000000 11.43487072]
[92.38833618 -3.56471372]
[92.16500854 -18.56305122]
[91.94168091 -33.56138992]
[91.71835327 -48.55972672]
[91.49502563 -63.55806351]
[83.55311584 -77.24150848]
[91.10006714 -90.08256531]
[82.43201447 -77.84063721]
[68.84589386 -71.48317719]
[53.89308167 -72.67201233]
[41.48220444 -81.09638977]
[34.85743713 -94.55419159]
[35.75048065 -109.52758789]
[43.92789078 -122.10256195]
[57.25211716 -128.99205017]
[72.24023438 -128.39514160]
[84.97438812 -120.46789551]
[92.12569427 -107.28331757]
[94.12970734 -122.14884186]
[96.13372040 -137.01437378]
[94.17887878 -145.93717957]
[98.27983093 -152.08567810]
[100.50494385 -166.91970825]
[98.59282684 -171.77676392]
[98.72206116 -176.41751099]
[100.46842957 -180.10061646]
[103.17493439 -182.36051941]
[106.06020355 -197.08041382]
[108.94547272 -211.80030823]
[111.83074951 -226.52020264]
[114.71601868 -241.24009705]
[116.94113922 -256.07412720]
[118.50166321 -270.99273682]
[120.06218719 -285.91134644]
[121.62270355 -300.82995605]
[123.18322754 -315.74856567]
[108.50078583 -318.88827515]
[94.23525238 -323.57086182]
[80.54828644 -329.74331665]
[67.59495544 -337.33563232]
[55.52204132 -346.26181030]
[44.46633530 -356.42074585]
[34.55310440 -367.69726562]
[25.89468002 -379.96362305]
[18.58916473 -393.08084106]
[12.71933460 -406.90029907]
[8.35170174 -421.26538086]
[5.53575277 -436.01336670]
[4.30339575 -450.97708130]
[4.66859388 -465.98706055]
[6.62720966 -480.87313843]
[10.15704918 -495.46670532]
[15.21811867 -509.60241699]
[21.75307083 -523.12005615]
[29.68785858 -535.86645508]
[38.93257904 -547.69726562]
[49.38247681 -558.47833252]
[60.91915131 -568.08752441]
[73.41188049 -576.41601562]
[86.71910858 -583.36944580]
[100.69006348 -588.86895752]
[115.16643524 -592.85223389]
[129.98420715 -595.27423096]
[144.97546387 -596.10742188]
[159.97035217 -595.34234619]
[174.79898071 -592.98779297]
[189.29330444 -589.07031250]
[203.28912354 -583.63439941]
[216.62782288 -576.74157715]
[229.15827942 -568.46997070]
[240.73851013 -558.91326904]
[251.23731995 -548.17980957]
[260.53573608 -536.39117432]
[268.52838135 -523.68096924]
[275.12469482 -510.19314575]
[280.24996948 -496.08062744]
[283.84613037 -481.50323486]
[285.87240601 -466.62622070]
[286.30581665 -451.61807251]
[285.14151001 -436.64889526]
[282.39260864 -421.88827515]
[278.09033203 -407.50347900]
[272.28338623 -393.65747070]
[265.03756714 -380.50717163]
[256.43499756 -368.20156860]
[246.57313538 -356.88009644]
[235.56372070 -346.67105103]
[223.53150940 -337.69006348]
[210.61283875 -330.03894043]
[196.95405579 -323.80435181]
[182.70996094 -319.05694580]
[168.04194641 -315.85052490]
[153.11619568 -314.22137451]
[138.10183716 -314.18801880]
[136.54130554 -299.26943970]
[134.98078918 -284.35083008]
[133.42027283 -269.43222046]
[131.85974121 -254.51361084]
[144.16386414 -263.09313965]
[158.95443726 -260.59533691]
[167.75874329 -248.45101929]
[165.53326416 -233.61701965]
[153.55287170 -224.59094238]
[138.68048096 -226.54330444]
[129.43591309 -238.35481262]
[126.55063629 -223.63493347]
[123.66536713 -208.91503906]
[120.78009796 -194.19514465]
[117.89482117 -179.47525024]
[115.33898926 -164.69459534]
[113.11387634 -149.86054993]
[110.99925232 -135.01036072]
[108.99523163 -120.14482880]
[106.99121857 -105.27929688]
[106.09840393 -90.30589294]
[114.02433777 -77.69522858]
[106.49336243 -63.78139114]
[106.71669006 -48.78305435]
[106.94001770 -33.78471756]
[107.16334534 -18.78637886]
[107.38667297 -3.78804135]
[110.62940979 2.85322666]
[107.50000000 11.43487072]
[107.50000000 26.43487167]
[121.74562073 29.32322693]
[135.15101624 34.94245148]
[147.19821167 43.07542419]
[157.42172241 53.40789795]
[165.42652893 65.54064178]
[170.90332031 79.00485229]
[173.64050293 93.28028870]
[173.53228760 107.81536865]
[170.58288574 122.04846954]
[164.90623474 135.42964172]
[156.72167969 147.44186401]
[146.34545898 157.62097168]
[134.17851257 165.57368469]
[120.69093323 170.99270630]
[106.40389252 173.66864014]
[106.18056488 188.66697693]
[106.06890106 203.66656494]
[106.06890106 218.66656494]
[106.06890106 233.66656494]
[106.18056488 248.66613770]
[106.40389252 263.66448975]
[106.62722015 278.66281128]
[106.85054779 293.66116333]
[117.53098297 301.86743164]
[121.47739410 314.54165649]
[117.46297455 326.99023438]
[107.16656494 334.73706055]
[107.16656494 349.73706055]
[114.90386963 363.53723145]
[107.16656494 376.26449585]
[107.16656494 391.26449585]
[118.06111908 402.39764404]
[117.84744263 417.60977173]
[107.16656494 427.92745972]
[107.16656494 442.92745972]
[107.16656494 457.92745972]
[107.16656494 472.92745972]
[107.16656494 487.92745972]
[107.16656494 502.92745972]
[119.26114655 512.83984375]
[122.10376740 528.21685791]
[114.35222626 541.79803467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[12 199]
[13 198]
[15 196]
[16 195]
[19 191]
[20 190]
[21 189]
[22 188]
[24 187]
[25 186]
[26 185]
[28 184]
[29 183]
[43 168]
[44 167]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[51 159]
[62 158]
[63 157]
[64 156]
[66 155]
[67 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
