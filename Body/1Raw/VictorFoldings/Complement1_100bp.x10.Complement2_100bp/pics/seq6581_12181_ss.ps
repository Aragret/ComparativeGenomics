%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[183.89656067 625.17950439]
[174.30178833 613.64117432]
[165.55459595 601.44769287]
[157.69956970 588.66131592]
[150.77671814 575.34710693]
[144.82135010 561.57299805]
[139.86378479 547.40911865]
[135.92930603 532.92761230]
[133.03794861 518.20239258]
[131.20445251 503.30834961]
[130.43817139 488.32150269]
[130.74298096 473.31814575]
[132.11735535 458.37478638]
[134.55427551 443.56753540]
[138.04132080 428.97186279]
[142.56074524 414.66213989]
[148.08949280 400.71127319]
[154.59941101 387.19039917]
[162.05731201 374.16839600]
[170.42520142 361.71157837]
[179.66041565 349.88348389]
[189.71592712 338.74435425]
[200.54046631 328.35098267]
[212.07888794 318.75628662]
[224.27239990 310.00918579]
[216.42063904 297.22836304]
[203.16592407 290.43408203]
[202.53483582 274.62548828]
[194.68309021 261.84463501]
[186.83132935 249.06379700]
[170.97177124 241.55105591]
[170.62234497 223.14019775]
[162.58117676 210.47767639]
[154.54000854 197.81515503]
[146.40478516 185.21284485]
[138.17597961 172.67144775]
[129.94717407 160.13003540]
[121.71836090 147.58863831]
[113.48955536 135.04724121]
[100.03842926 128.65063477]
[98.93693542 112.86782074]
[100.74662018 127.75825500]
[98.98912048 142.65493774]
[93.76382446 156.71539307]
[85.36626434 169.14442444]
[74.27134705 179.23912048]
[61.10655594 186.42857361]
[46.61641693 190.30618286]
[31.62041855 190.65264893]
[16.96665764 187.44839478]
[3.48387742 180.87460327]
[-8.06540775 171.30308533]
[-17.02803040 159.27514648]
[-22.89710808 145.47102356]
[-25.34071732 130.67140198]
[-24.22066116 115.71327209]
[-19.60028458 101.44259644]
[-11.74088860 88.66645050]
[-1.08696365 78.10739136]
[11.75896072 70.36256409]
[26.07038307 65.87000275]
[41.03792572 64.88376617]
[55.81510162 67.45963287]
[69.56618500 73.45192719]
[81.51349640 82.52176666]
[90.98191833 94.15709686]
[87.65966034 79.52963257]
[77.05800629 67.78588867]
[81.78425598 53.66102600]
[78.46199799 39.03356552]
[75.13973236 24.40610504]
[62.04994965 15.96245193]
[58.88908005 1.08080029]
[67.01948547 -11.34627342]
[63.69722366 -25.97373390]
[60.37496185 -40.60119247]
[56.82732391 -44.43020630]
[55.25991058 -48.80016327]
[55.54717636 -52.86618423]
[57.24642944 -55.95566177]
[54.58063507 -70.71688080]
[51.91484070 -85.47809601]
[39.69718933 -99.25527191]
[46.27083588 -115.52653503]
[43.38556290 -130.24642944]
[40.50028992 -144.96632385]
[25.44181633 -145.54864502]
[10.92370224 -149.58857727]
[-2.27110934 -156.86825562]
[-13.43103790 -166.99508667]
[-21.95424461 -179.42294312]
[-27.38108063 -193.48161316]
[-29.41888618 -208.41293335]
[-27.95776367 -223.41165161]
[-23.07650948 -237.66894531]
[-15.03836536 -250.41589355]
[-4.27681637 -260.96511841]
[8.62778091 -268.74765015]
[22.97949600 -273.34384155]
[38.00436020 -274.50579834]
[52.89210129 -272.17089844]
[66.83984375 -266.46499634]
[79.09539795 -257.69583130]
[88.99784851 -246.33633423]
[96.01315308 -232.99908447]
[99.76300049 -218.40336609]
[100.04515076 -203.33627319]
[96.84440613 -188.61038208]
[90.33335876 -175.01983643]
[80.86315918 -163.29754639]
[68.94451141 -154.07568359]
[55.22018051 -147.85159302]
[58.10545349 -133.13169861]
[60.99072647 -118.41181183]
[70.85153198 -111.40531158]
[73.37577057 -99.16553497]
[66.67605591 -88.14389038]
[69.34185028 -73.38267517]
[72.00765228 -58.62145615]
[75.00242615 -43.92345428]
[78.32468414 -29.29599380]
[81.64694214 -14.66853333]
[94.34774780 -6.97274351]
[97.92536163 7.81425476]
[89.76719666 21.08384514]
[93.08945465 35.71130753]
[96.41171265 50.33876801]
[106.77574158 61.03625488]
[102.28711700 76.20737457]
[105.60937500 90.83483887]
[111.47834015 104.63901520]
[125.51804352 111.93266296]
[126.03095245 126.81843567]
[134.25976562 139.35983276]
[142.48857117 151.90122986]
[150.71737671 164.44262695]
[158.94618225 176.98403931]
[166.27044678 182.44233704]
[167.20252991 189.77398682]
[175.24369812 202.43650818]
[183.28486633 215.09902954]
[195.68016052 218.66546631]
[202.11698914 229.37765503]
[199.61216736 241.21203613]
[207.46392822 253.99287415]
[215.31568909 266.77371216]
[229.13200378 274.48214722]
[229.20147705 289.37658691]
[237.05323792 302.15744019]
[250.36726379 295.23428345]
[264.14126587 289.27859497]
[278.30505371 284.32070923]
[292.78643799 280.38589478]
[307.51162720 277.49420166]
[322.40557861 275.66036987]
[337.39242554 274.89373779]
[352.39578247 275.19821167]
[367.33920288 276.57223511]
[382.14648438 279.00881958]
[396.74224854 282.49551392]
[411.05206299 287.01461792]
[425.00305176 292.54306030]
[438.52407837 299.05264282]
[451.54626465 306.51025391]
[464.00326538 314.87783813]
[475.83157349 324.11279297]
[486.97094727 334.16806030]
[497.36456299 344.99234009]
[506.95953369 356.53054810]
[515.70690918 368.72384644]
[523.56213379 381.51013184]
[530.48516846 394.82421875]
[536.44073486 408.59826660]
[541.39855957 422.76208496]
[545.33325195 437.24349976]
[548.22479248 451.96868896]
[550.05853271 466.86267090]
[550.82507324 481.84954834]
[550.52044678 496.85287476]
[549.14636230 511.79626465]
[546.70965576 526.60357666]
[543.22283936 541.19927979]
[538.70361328 555.50909424]
[533.17504883 569.46002197]
[526.66534424 582.98101807]
[519.20764160 596.00311279]
[510.83996582 608.46008301]
[501.60491943 620.28833008]
[491.54959106 631.42755127]
[480.72521973 641.82110596]
[469.18695068 651.41601562]
[456.99356079 660.16326904]
[444.20724487 668.01843262]
[430.89309692 674.94134521]
[417.11901855 680.89685059]
[402.95516968 685.85449219]
[388.47372437 689.78906250]
[373.74847412 692.68054199]
[358.85446167 694.51416016]
[343.86761475 695.28057861]
[328.86425781 694.97589111]
[313.92089844 693.60162354]
[299.11361694 691.16479492]
[284.51791382 687.67785645]
[270.20816040 683.15856934]
[256.25726318 677.62988281]
[242.73634338 671.12011719]
[229.71426392 663.66229248]
[217.25740051 655.29449463]
[205.42922974 646.05938721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 149]
[26 148]
[28 146]
[29 145]
[30 144]
[32 141]
[33 140]
[34 139]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[41 131]
[66 130]
[67 129]
[69 127]
[70 126]
[71 125]
[74 122]
[75 121]
[76 120]
[80 119]
[81 118]
[82 117]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
