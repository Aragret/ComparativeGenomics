%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[104.26778412 712.70874023]
[89.85085297 708.54724121]
[75.74047852 703.44207764]
[61.99836349 697.41546631]
[48.68459320 690.49383545]
[35.85739517 682.70739746]
[23.57285118 674.09020996]
[11.88468361 664.67999268]
[0.84400034 654.51782227]
[-9.50091934 643.64819336]
[-19.10483932 632.11865234]
[-27.92576408 619.97961426]
[-35.92512131 607.28411865]
[-43.06793213 594.08764648]
[-49.32296371 580.44799805]
[-54.66286087 566.42474365]
[-59.06427383 552.07928467]
[-62.50796127 537.47424316]
[-64.97885895 522.67358398]
[-66.46616364 507.74191284]
[-66.96337891 492.74462891]
[-66.46831512 477.74728394]
[-64.98315430 462.81542969]
[-62.51437759 448.01440430]
[-59.07278442 433.40887451]
[-54.67342758 419.06274414]
[-49.33554077 405.03875732]
[-43.08246613 391.39819336]
[-35.94154739 378.20074463]
[-27.94400978 365.50408936]
[-19.12482643 353.36373901]
[-9.52255917 341.83282471]
[0.82080156 330.96173096]
[11.86002731 320.79800415]
[23.54684448 311.38610840]
[35.83015442 302.76718140]
[48.65623474 294.97888184]
[61.96900940 288.05532837]
[75.71026611 282.02676392]
[89.81990814 276.91952515]
[104.23623657 272.75598145]
[118.89622498 269.55435181]
[116.67110443 254.72030640]
[114.44599152 239.88626099]
[112.22087097 225.05221558]
[102.68119812 213.61351013]
[108.28575897 198.81826782]
[106.06064606 183.98422241]
[94.40489197 170.86512756]
[101.28683472 153.78530884]
[98.84111023 138.98603821]
[96.39537811 124.18676758]
[93.94965363 109.38749695]
[91.39382172 94.60684204]
[81.32712555 82.40142059]
[86.67936707 68.50168610]
[83.57525635 53.82638168]
[80.03559113 39.25000763]
[76.49591827 24.67363167]
[72.95624542 10.09725666]
[58.12886047 12.42281532]
[43.16007233 13.51598644]
[28.15214157 13.36930180]
[13.20758438 11.98376369]
[-1.57151234 9.36883736]
[-16.08418846 5.54238462]
[-30.23130989 0.53054488]
[-43.91622925 -5.63244534]
[-57.04547119 -12.90448570]
[-69.52934265 -21.23590088]
[-81.28256989 -30.56977654]
[-92.22486115 -40.84235382]
[-102.28146362 -51.98345947]
[-111.38368988 -63.91698456]
[-119.46935272 -76.56140900]
[-126.48323059 -89.83036041]
[-132.37739563 -103.63320160]
[-137.11158752 -117.87563324]
[-140.65347290 -132.46037292]
[-142.97886658 -147.28778076]
[-144.07185364 -162.25657654]
[-143.92498779 -177.26451111]
[-142.53927612 -192.20906067]
[-139.92417908 -206.98811340]
[-136.09754944 -221.50074768]
[-131.08554077 -235.64781189]
[-124.92238617 -249.33265686]
[-117.65018463 -262.46182251]
[-109.31862640 -274.94558716]
[-99.98461151 -286.69869995]
[-89.71189880 -297.64086914]
[-78.57067871 -307.69732666]
[-66.63704681 -316.79943848]
[-53.99251938 -324.88494873]
[-40.72348404 -331.89865112]
[-26.92057419 -337.79266357]
[-12.67808533 -342.52667236]
[1.90669489 -346.06838989]
[16.73413467 -348.39361572]
[31.70294571 -349.48641968]
[46.71087265 -349.33938599]
[61.65539932 -347.95349121]
[76.43443298 -345.33819580]
[90.94702148 -341.51141357]
[105.09401703 -336.49923706]
[118.77879333 -330.33590698]
[131.90786743 -323.06356812]
[144.39154053 -314.73184204]
[156.14453125 -305.39767456]
[167.08657837 -295.12484741]
[177.14292908 -283.98352051]
[186.24485779 -272.04977417]
[194.33023071 -259.40515137]
[201.34378052 -246.13601685]
[207.23762512 -232.33303833]
[211.97148132 -218.09049988]
[215.51301575 -203.50567627]
[217.83804321 -188.67820740]
[218.93067932 -173.70938110]
[218.78346252 -158.70146179]
[217.39738464 -143.75694275]
[214.78193665 -128.97795105]
[210.95497131 -114.46540833]
[205.94261169 -100.31846619]
[199.77914429 -86.63376617]
[192.50662231 -73.50478363]
[184.17477417 -61.02120972]
[174.84046936 -49.26831818]
[164.56750488 -38.32639694]
[153.42604065 -28.27018738]
[141.49218750 -19.16838837]
[128.84747314 -11.08317471]
[115.57826996 -4.06977701]
[101.77522278 1.82389629]
[87.53261566 6.55758381]
[91.07228851 21.13395882]
[94.61196136 35.71033478]
[98.15163422 50.28670883]
[100.47265625 51.85865021]
[102.31085968 54.44469070]
[103.27687836 57.86554337]
[103.05335999 61.80439377]
[101.44058990 65.83589172]
[111.31660461 76.98548889]
[106.15503693 91.94104767]
[110.57276917 98.68316650]
[108.74892426 106.94177246]
[111.19464874 121.74104309]
[113.64038086 136.54031372]
[116.08610535 151.33958435]
[126.09780884 159.47152710]
[127.83018494 171.84823608]
[120.89468384 181.75910950]
[123.11980438 196.59313965]
[132.81863403 209.09288025]
[127.05491638 222.82710266]
[129.28002930 237.66114807]
[131.50515747 252.49517822]
[133.73027039 267.32922363]
[148.68443298 266.08874512]
[163.68788147 265.83929443]
[178.67500305 266.58197021]
[193.58029175 268.31353760]
[208.33853149 271.02642822]
[222.88522339 274.70877075]
[237.15673828 279.34445190]
[251.09066772 284.91323853]
[264.62609863 291.39074707]
[277.70379639 298.74865723]
[290.26666260 306.95480347]
[302.25967407 315.97329712]
[313.63043213 325.76467896]
[324.32922363 336.28619385]
[334.30923462 347.49176025]
[343.52682495 359.33242798]
[351.94171143 371.75640869]
[359.51712036 384.70938110]
[366.21984863 398.13467407]
[372.02066040 411.97363281]
[376.89416504 426.16567993]
[380.81903076 440.64883423]
[383.77810669 455.35968018]
[385.75848389 470.23394775]
[386.75146484 485.20657349]
[386.75271606 500.21209717]
[385.76223755 515.18487549]
[383.78439331 530.05950928]
[380.82775879 544.77087402]
[376.90530396 559.25463867]
[372.03421021 573.44750977]
[366.23571777 587.28747559]
[359.53521729 600.71386719]
[351.96200562 613.66809082]
[343.54919434 626.09350586]
[334.33358765 637.93572998]
[324.35543823 649.14300537]
[313.65844727 659.66625977]
[302.28930664 669.45959473]
[290.29782104 678.48010254]
[277.73635864 686.68835449]
[264.65985107 694.04840088]
[251.12551880 700.52819824]
[237.19252014 706.09930420]
[222.92179871 710.73742676]
[208.37573242 714.42218018]
[193.61793518 717.13757324]
[178.71293640 718.87164307]
[163.72593689 719.61682129]
[148.72244263 719.36987305]
[133.76808167 718.13189697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 159]
[43 158]
[44 157]
[45 156]
[47 154]
[48 153]
[50 150]
[51 149]
[52 148]
[53 147]
[54 145]
[56 143]
[57 138]
[58 137]
[59 136]
[60 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
