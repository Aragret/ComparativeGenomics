%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[87.79808807 541.04840088]
[72.80484772 540.37823486]
[57.91415405 538.50384521]
[43.22257996 535.43725586]
[28.82540131 531.19842529]
[14.81599426 525.81481934]
[1.28521812 519.32141113]
[-11.67917538 511.76028442]
[-23.99310493 503.18048096]
[-35.57670975 493.63760376]
[-46.35486603 483.19357300]
[-56.25766754 471.91610718]
[-65.22089386 459.87838745]
[-73.18641663 447.15844727]
[-80.10256958 433.83880615]
[-85.92449951 420.00582886]
[-90.61445618 405.74920654]
[-94.14200592 391.16146851]
[-96.48429108 376.33715820]
[-97.62610626 361.37243652]
[-97.56005859 346.36437988]
[-96.28656006 331.41030884]
[-93.81388855 316.60717773]
[-90.15806580 302.05105591]
[-85.34280396 287.83627319]
[-79.39933777 274.05508423]
[-72.36621094 260.79681396]
[-64.28903961 248.14747620]
[-55.22020340 236.18911743]
[-45.21851730 224.99926758]
[-34.34885025 214.65051270]
[-22.68169785 205.20997620]
[-10.29272461 196.73887634]
[2.73772049 189.29212952]
[16.32512856 182.91807556]
[30.38137817 177.65802002]
[44.81530762 173.54609680]
[59.53330994 170.60894775]
[74.43992615 168.86564636]
[89.43848419 168.32749939]
[90.10826874 153.34245300]
[90.77805328 138.35742188]
[83.61677551 125.29735565]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.73153687 27.53362465]
[80.45794678 19.68459511]
[70.18493652 5.99310923]
[66.94060516 -10.75722599]
[71.33016205 -27.18723869]
[82.42372131 -40.00389099]
[97.95279694 -46.66029358]
[98.17612457 -61.65863037]
[98.39945221 -76.65696716]
[98.62277985 -91.65530396]
[95.74149323 -97.60591125]
[96.22528076 -103.26833344]
[99.08268738 -107.09511566]
[99.75247192 -122.08015442]
[100.42225647 -137.06518555]
[101.09204102 -152.05023193]
[101.76182556 -167.03526306]
[102.43161011 -182.02030945]
[87.53594971 -183.84994507]
[72.82686615 -186.82839966]
[58.39282227 -190.93772888]
[44.32062531 -196.15324402]
[30.69491196 -202.44358826]
[17.59762764 -209.77088928]
[5.10754395 -218.09111023]
[-6.70022345 -227.35421753]
[-17.75465965 -237.50447083]
[-27.98928070 -248.48085022]
[-37.34253311 -260.21731567]
[-45.75816727 -272.64331055]
[-53.18556595 -285.68411255]
[-59.58006287 -299.26126099]
[-64.90319824 -313.29309082]
[-69.12295532 -327.69525146]
[-72.21396637 -342.38107300]
[-74.15763092 -357.26229858]
[-74.94226074 -372.24938965]
[-74.56313324 -387.25219727]
[-73.02254486 -402.18051147]
[-70.32974243 -416.94458008]
[-66.50093079 -431.45556641]
[-61.55913162 -445.62619019]
[-55.53407288 -459.37124634]
[-48.46198273 -472.60809326]
[-40.38540268 -485.25711060]
[-31.35289955 -497.24218750]
[-21.41880035 -508.49127197]
[-10.64284801 -518.93670654]
[0.91014665 -528.51568604]
[13.17070198 -537.17053223]
[26.06508255 -544.84930420]
[39.51573563 -551.50573730]
[53.44176865 -557.09985352]
[67.75942993 -561.59796143]
[82.38260651 -564.97302246]
[97.22335052 -567.20471191]
[112.19241333 -568.27972412]
[127.19976044 -568.19140625]
[142.15513611 -566.94042969]
[156.96861267 -564.53430176]
[171.55107117 -560.98748779]
[185.81481934 -556.32122803]
[199.67408752 -550.56372070]
[213.04550171 -543.74951172]
[225.84866333 -535.91961670]
[238.00656128 -527.12109375]
[249.44607544 -517.40686035]
[260.09841919 -506.83538818]
[269.89950562 -495.47024536]
[278.79037476 -483.37973022]
[286.71762085 -470.63659668]
[293.63351440 -457.31747437]
[299.49645996 -443.50247192]
[304.27120972 -429.27468872]
[307.92904663 -414.71969604]
[310.44799805 -399.92498779]
[311.81286621 -384.97955322]
[312.01550293 -369.97332764]
[311.05462646 -354.99652100]
[308.93603516 -340.13919067]
[305.67248535 -325.49072266]
[301.28359985 -311.13922119]
[295.79577637 -297.17095947]
[289.24200439 -283.66998291]
[281.66171265 -270.71746826]
[273.10049438 -258.39132690]
[263.60980225 -246.76568604]
[253.24678040 -235.91046143]
[242.07371521 -225.89094543]
[230.15779114 -216.76737976]
[217.57069397 -208.59466553]
[204.38812256 -201.42193604]
[190.68936157 -195.29232788]
[176.55679321 -190.24270630]
[162.07540894 -186.30343628]
[147.33230591 -183.49822998]
[132.41613770 -181.84393311]
[117.41664886 -181.35052490]
[116.74686432 -166.36547852]
[116.07707977 -151.38044739]
[115.40729523 -136.39540100]
[114.73751068 -121.41036987]
[114.06772614 -106.42533112]
[113.62111664 -91.43197632]
[113.39778900 -76.43363953]
[113.17446136 -61.43530273]
[112.95113373 -46.43696594]
[125.00493622 -41.59447479]
[134.71957397 -32.92267227]
[140.92433167 -21.43753433]
[142.86155701 -8.49577427]
[140.27922058 4.36542225]
[133.46339417 15.61096954]
[123.20679474 23.89111137]
[110.71657562 28.20340919]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[114.06097412 126.65811920]
[105.76309204 139.02720642]
[105.09330750 154.01223755]
[104.42352295 168.99728394]
[119.31425476 170.87139893]
[134.00590515 173.93765259]
[148.40316772 178.17614746]
[162.41270447 183.55941772]
[175.94361877 190.05253601]
[188.90817261 197.61338806]
[201.22229004 206.19294739]
[212.80610657 215.73554993]
[223.58450317 226.17935181]
[233.48754883 237.45657349]
[242.45103455 249.49411011]
[250.41683960 262.21386719]
[257.33328247 275.53335571]
[263.15551758 289.36621094]
[267.84579468 303.62271118]
[271.37365723 318.21038818]
[273.71627808 333.03466797]
[274.85842896 347.99932861]
[274.79269409 363.00741577]
[273.51953125 377.96151733]
[271.04718018 392.76467896]
[267.39169312 407.32089233]
[262.57675171 421.53576660]
[256.63357544 435.31710815]
[249.60075378 448.57553101]
[241.52384949 461.22503662]
[232.45527649 473.18359375]
[222.45384216 484.37365723]
[211.58439636 494.72265625]
[199.91744995 504.16345215]
[187.52867126 512.63482666]
[174.49838257 520.08184814]
[160.91111755 526.45623779]
[146.85499573 531.71661377]
[132.42114258 535.82885742]
[117.70321655 538.76629639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 174]
[41 173]
[42 172]
[44 170]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[56 156]
[57 155]
[58 154]
[59 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
