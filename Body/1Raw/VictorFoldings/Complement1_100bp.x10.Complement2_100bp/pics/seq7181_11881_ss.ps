%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[194.19615173 635.16741943]
[186.34043884 622.37988281]
[179.51225281 609.01538086]
[173.75369263 595.15631104]
[169.10026550 580.88818359]
[165.58064270 566.29895020]
[163.21655273 551.47851562]
[162.02253723 536.51824951]
[162.00598145 521.51049805]
[163.16699219 506.54766846]
[165.49839783 491.72204590]
[168.98582458 477.12506104]
[173.60777283 462.84671021]
[179.33575439 448.97497559]
[186.13442993 435.59545898]
[193.96191406 422.79058838]
[202.76994324 410.63934326]
[212.50418091 399.21661377]
[223.10464478 388.59286499]
[234.50596619 378.83355713]
[246.63784790 369.99887085]
[238.78608704 357.21804810]
[230.93434143 344.43719482]
[217.67962646 337.64294434]
[217.04853821 321.83432007]
[209.19677734 309.05346680]
[201.34503174 296.27264404]
[190.25993347 297.52615356]
[179.45834351 294.53887939]
[170.51097107 287.70547485]
[164.73368835 277.98272705]
[162.99404907 266.75573730]
[165.58122253 255.64054871]
[172.15872192 246.25167847]
[164.88548279 233.13299561]
[150.54135132 229.28831482]
[142.97837830 216.08770752]
[147.10829163 201.06832886]
[139.83505249 187.94963074]
[132.56182861 174.83094788]
[125.28859711 161.71224976]
[118.01537323 148.59355164]
[110.74214172 135.47486877]
[97.80403137 128.09552002]
[97.87946320 112.27449799]
[98.37983704 127.26615143]
[94.69213104 141.80578613]
[87.10715485 154.74673462]
[76.22309113 165.06842041]
[62.89831924 171.95684814]
[48.18367386 174.86874390]
[33.23961258 173.57449341]
[19.24469376 168.17613220]
[7.30260897 159.09942627]
[-1.64483714 147.06019592]
[-6.89201164 133.00788879]
[-8.02510071 118.05075073]
[-4.95474434 103.36834717]
[2.07691717 90.11860657]
[12.51533699 79.34644318]
[25.53729820 71.90141296]
[40.11583328 68.37064362]
[55.10121918 69.03260803]
[69.31164551 73.83507538]
[81.62641907 82.39932251]
[91.07613373 94.05290985]
[87.97202301 79.37760925]
[84.86791229 64.70230103]
[81.76380157 50.02700043]
[69.14137268 36.61970139]
[75.22764587 20.15992737]
[71.90538788 5.53246784]
[57.32508087 0.91056472]
[47.08346558 -10.31468010]
[43.85707855 -25.06109619]
[48.41458130 -39.34693146]
[59.43659210 -49.36595917]
[56.11433029 -63.99341965]
[52.79207230 -78.62088013]
[43.90246964 -66.53886414]
[29.09468079 -64.14526367]
[16.85127449 -72.81123352]
[14.18583298 -87.57251740]
[22.62524033 -99.97317505]
[37.33502197 -102.90955353]
[49.88820648 -94.70034027]
[40.37655640 -107.34308624]
[46.34411621 -120.98997498]
[44.34010315 -135.85549927]
[42.33609009 -150.72102356]
[40.33207703 -165.58656311]
[25.41934204 -168.05673218]
[11.89797974 -174.81425476]
[0.97029924 -185.25825500]
[-6.39201689 -198.46006775]
[-9.53431702 -213.24578857]
[-8.17718887 -228.30067444]
[-2.44130921 -242.28605652]
[7.16329288 -253.95837402]
[19.78258324 -262.27972412]
[34.29446030 -266.51019287]
[49.40854263 -266.27359009]
[63.78089142 -261.59097290]
[76.13352966 -252.87869263]
[85.36806488 -240.91145325]
[90.66337585 -226.75338745]
[91.54860687 -211.66339111]
[87.94503784 -196.98327637]
[80.17309570 -184.01838684]
[68.92385864 -173.92155457]
[55.19760513 -167.59057617]
[57.20161819 -152.72503662]
[59.20563126 -137.85951233]
[61.20964432 -122.99398804]
[70.57795715 -111.41452026]
[64.75373840 -96.70435333]
[67.41953278 -81.94313812]
[70.74179077 -67.31567383]
[74.06404877 -52.68821716]
[88.33257294 -48.41329956]
[98.61393738 -37.49773788]
[102.07404327 -22.80440521]
[97.68616486 -8.25644016]
[86.53284454 2.21020818]
[89.85510254 16.83766747]
[99.92015076 23.54746819]
[102.80769348 35.70665741]
[96.43910980 46.92289352]
[99.54321289 61.59819412]
[102.64732361 76.27349854]
[105.75143433 90.94879913]
[110.99815369 105.00127411]
[124.45649719 113.31893921]
[123.86083221 128.20162964]
[131.13406372 141.32032776]
[138.40728760 154.43902588]
[145.68052673 167.55770874]
[152.95375061 180.67640686]
[160.22697449 193.79510498]
[175.15338135 198.24932861]
[182.34259033 211.65716553]
[178.00418091 225.85975647]
[185.27740479 238.97845459]
[204.35670471 240.50033569]
[218.55168152 253.11430359]
[222.24659729 271.58798218]
[214.12586975 288.42086792]
[221.97763062 301.20172119]
[229.82937622 313.98257446]
[243.64570618 321.69097900]
[243.71517944 336.58544922]
[251.56694031 349.36627197]
[259.41870117 362.14712524]
[272.78298950 355.31854248]
[286.64184570 349.55953979]
[300.90985107 344.90567017]
[315.49899292 341.38562012]
[330.31933594 339.02105713]
[345.27954102 337.82659912]
[360.28732300 337.80957031]
[375.25018311 338.97012329]
[390.07586670 341.30108643]
[404.67297363 344.78805542]
[418.95147705 349.40957642]
[432.82336426 355.13711548]
[446.20309448 361.93539429]
[459.00820923 369.76248169]
[471.15972900 378.57012939]
[482.58273315 388.30401611]
[493.20681763 398.90417480]
[502.96649170 410.30517578]
[511.80154419 422.43679810]
[519.65747070 435.22421265]
[526.48596191 448.58856201]
[532.24481201 462.44750977]
[536.89849854 476.71554565]
[540.41845703 491.30471802]
[542.78283691 506.12509155]
[543.97717285 521.08532715]
[543.99401855 536.09307861]
[542.83331299 551.05596924]
[540.50219727 565.88159180]
[537.01507568 580.47863770]
[532.39343262 594.75714111]
[526.66571045 608.62896729]
[519.86730957 622.00860596]
[512.04010010 634.81365967]
[503.23233032 646.96508789]
[493.49832153 658.38800049]
[482.89807129 669.01196289]
[471.49694824 678.77148438]
[459.36523438 687.60644531]
[446.57775879 695.46228027]
[433.21331787 702.29058838]
[419.35433960 708.04931641]
[405.08624268 712.70288086]
[390.49703979 716.22265625]
[375.67663574 718.58691406]
[360.71640015 719.78106689]
[345.70861816 719.79772949]
[330.74578857 718.63690186]
[315.92013550 716.30566406]
[301.32312012 712.81835938]
[287.04470825 708.19659424]
[273.17294312 702.46875000]
[259.79333496 695.67016602]
[246.98840332 687.84283447]
[234.83705139 679.03491211]
[223.41423035 669.30078125]
[212.79037476 658.70043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 153]
[22 152]
[23 151]
[25 149]
[26 148]
[27 147]
[34 143]
[35 142]
[38 139]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[45 132]
[66 131]
[67 130]
[68 129]
[69 128]
[71 125]
[72 124]
[77 119]
[78 118]
[79 117]
[86 116]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
