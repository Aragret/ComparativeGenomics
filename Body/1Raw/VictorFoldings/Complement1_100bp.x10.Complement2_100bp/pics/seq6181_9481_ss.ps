%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[35.20059204 542.70361328]
[26.35395813 554.82873535]
[16.49772835 566.14849854]
[5.70488071 576.57897949]
[-5.94467926 586.04309082]
[-18.36470032 594.47070312]
[-31.46322823 601.79943848]
[-45.14328384 607.97497559]
[-59.30358124 612.95166016]
[-73.83927917 616.69262695]
[-88.64276886 619.17016602]
[-103.60443878 620.36596680]
[-118.61351776 620.27111816]
[-133.55888367 618.88641357]
[-148.32987976 616.22198486]
[-162.81715393 612.29766846]
[-176.91343689 607.14245605]
[-190.51435852 600.79449463]
[-203.51924133 593.30090332]
[-215.83178711 584.71704102]
[-227.36082458 575.10650635]
[-238.02102661 564.54040527]
[-247.73342896 553.09704590]
[-256.42614746 540.86114502]
[-264.03482056 527.92321777]
[-270.50311279 514.37908936]
[-275.78314209 500.32910156]
[-279.83581543 485.87719727]
[-282.63110352 471.13040161]
[-284.14831543 456.19790649]
[-284.37625122 441.19024658]
[-283.31320190 426.21856689]
[-280.96704102 411.39370728]
[-277.35513306 396.82540894]
[-272.50421143 382.62152100]
[-266.45022583 368.88723755]
[-259.23794556 355.72421265]
[-250.92083740 343.22994995]
[-241.56040955 331.49691772]
[-231.22601318 320.61199951]
[-219.99414062 310.65576172]
[-207.94796753 301.70193481]
[-195.17665100 293.81683350]
[-181.77476501 287.05880737]
[-167.84153748 281.47787476]
[-153.48013306 277.11538696]
[-138.79685974 274.00366211]
[-123.90043640 272.16567993]
[-108.90116119 271.61511230]
[-93.91007233 272.35598755]
[-79.03817749 274.38281250]
[-64.39557648 277.68063354]
[-50.09067154 282.22500610]
[-36.22938538 287.98226929]
[-22.91433907 294.90982056]
[-14.87316704 282.24731445]
[-6.83199358 269.58477783]
[1.20917928 256.92224121]
[9.25035191 244.25971985]
[17.29152489 231.59719849]
[17.58275414 216.70544434]
[31.51231003 209.20356750]
[39.17290878 196.30725098]
[46.44613647 183.18855286]
[43.41538239 171.47782898]
[49.36746216 160.48890686]
[61.59114456 156.37254333]
[69.05888367 143.36358643]
[76.52662659 130.35462952]
[83.50508118 117.07678986]
[89.98457336 103.54844666]
[95.54380035 89.61664581]
[100.15780640 75.34391022]
[104.77182007 61.07117844]
[101.65460205 45.56010056]
[112.93167877 35.82990265]
[117.54568481 21.55716896]
[121.94668579 7.21732283]
[126.13369751 -7.18645954]
[130.32070923 -21.59024048]
[134.50772095 -35.99402237]
[138.69473267 -50.39780426]
[142.88174438 -64.80158997]
[147.06875610 -79.20536804]
[151.25576782 -93.60915375]
[155.44277954 -108.01293182]
[159.62979126 -122.41671753]
[163.16946411 -136.99308777]
[166.05473328 -151.71298218]
[168.94000244 -166.43287659]
[160.39036560 -179.45368958]
[163.52613831 -194.34063721]
[175.99217224 -202.41117859]
[178.87744141 -217.13105774]
[181.76272583 -231.85095215]
[167.75486755 -237.32998657]
[154.95054626 -245.22233582]
[143.76138306 -255.27430725]
[134.54704285 -267.16278076]
[127.60373688 -280.50558472]
[123.15466309 -294.87380981]
[121.34284973 -309.80554199]
[122.22652435 -324.82083130]
[125.77729034 -339.43698120]
[131.88101196 -353.18414307]
[140.34146118 -365.62039185]
[150.88667297 -376.34597778]
[163.17767334 -385.01611328]
[176.81935120 -391.35208130]
[191.37318420 -395.15017700]
[206.37133789 -396.28836060]
[221.33166504 -394.73001099]
[235.77325439 -390.52523804]
[249.23187256 -383.80920410]
[261.27490234 -374.79779053]
[271.51516724 -363.78067017]
[279.62353516 -351.11203003]
[285.33929443 -337.19912720]
[288.47875977 -322.48913574]
[288.94100952 -307.45495605]
[286.71115112 -292.57989502]
[281.86087036 -278.34210205]
[274.54611206 -265.19927979]
[265.00198364 -253.57389832]
[253.53530884 -243.83967590]
[240.51469421 -236.30952454]
[226.35868835 -231.22549438]
[211.52235413 -228.75103760]
[196.48260498 -228.96568298]
[193.59733582 -214.24578857]
[190.71206665 -199.52589417]
[199.20886230 -187.34640503]
[196.49247742 -172.37724304]
[183.65989685 -163.54760742]
[180.77462769 -148.82771301]
[177.88934326 -134.10781860]
[190.90983582 -141.55541992]
[205.41857910 -137.74801636]
[213.10430908 -124.86664581]
[209.56428528 -110.29035187]
[196.82640076 -102.36910248]
[182.18750000 -105.64054108]
[174.03356934 -118.22970581]
[169.84655762 -103.82592010]
[165.65954590 -89.42214203]
[161.47253418 -75.01835632]
[157.28552246 -60.61457443]
[153.09851074 -46.21079254]
[148.91149902 -31.80701256]
[144.72448730 -17.40323067]
[140.53747559 -2.99944806]
[136.35046387 11.40433407]
[137.82473755 15.94697094]
[136.46101379 21.46396828]
[131.81842041 26.17117882]
[127.20441437 40.44391251]
[130.65165710 54.93410873]
[119.04455566 65.68518829]
[114.43054199 79.95792389]
[109.81653595 94.23065186]
[122.29737854 85.91028595]
[137.29309082 85.55194855]
[150.15710449 93.26669312]
[156.90335083 106.66400909]
[155.44143677 121.59259796]
[146.22434998 133.42668152]
[132.10810852 138.49932861]
[117.46678925 135.23872375]
[106.83715057 124.65520477]
[103.51292419 110.02793884]
[97.03342438 123.55628204]
[111.83264923 121.11026764]
[123.07389832 131.04174805]
[122.47054291 146.02960205]
[110.46736145 155.02536011]
[95.91264343 151.39765930]
[89.53557587 137.82237244]
[82.06784058 150.83132935]
[74.60009766 163.84028625]
[75.07311249 182.24836731]
[59.56483078 190.46177673]
[52.29159927 203.58047485]
[52.52155304 207.91650391]
[51.46593094 211.71783447]
[49.45067978 214.64601135]
[46.87819290 216.50314331]
[44.17483521 217.24475098]
[43.30844879 233.04220581]
[29.95405006 239.63838196]
[21.91287804 252.30090332]
[13.87170410 264.96340942]
[5.83053112 277.62594604]
[-2.21064162 290.28848267]
[-10.25181484 302.95098877]
[1.68027186 312.05630493]
[12.78544426 322.15365601]
[22.98148155 333.16830444]
[32.19289398 345.01867676]
[40.35148621 357.61703491]
[47.39684677 370.87014771]
[53.27682114 384.67980957]
[57.94786835 398.94384766]
[61.37541199 413.55664062]
[63.53406906 428.40997314]
[64.40785980 443.39389038]
[63.99031830 458.39746094]
[62.28453064 473.30960083]
[59.30312729 488.01989746]
[55.06818390 502.41943359]
[49.61105347 516.40161133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 194]
[56 193]
[57 192]
[58 191]
[59 190]
[60 189]
[62 187]
[63 182]
[64 181]
[67 179]
[68 178]
[69 177]
[70 171]
[71 170]
[72 160]
[73 159]
[74 158]
[76 156]
[77 155]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 136]
[89 135]
[90 134]
[93 131]
[94 130]
[95 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
