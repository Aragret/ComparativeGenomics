%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[12.32340050 967.14526367]
[-2.67848086 967.18713379]
[-17.67044067 966.64001465]
[-32.62936020 965.50469971]
[-47.53217697 963.78302002]
[-62.35591125 961.47760010]
[-77.07770538 958.59191895]
[-91.67486572 955.13055420]
[-106.12487030 951.09875488]
[-120.40544891 946.50274658]
[-134.49458313 941.34960938]
[-148.37052917 935.64733887]
[-162.01191711 929.40466309]
[-175.39770508 922.63128662]
[-188.50724792 915.33758545]
[-201.32034302 907.53485107]
[-213.81721497 899.23504639]
[-225.97860718 890.45104980]
[-237.78575134 881.19635010]
[-249.22047424 871.48522949]
[-260.26510620 861.33270264]
[-270.90264893 850.75439453]
[-281.11669922 839.76660156]
[-290.89147949 828.38629150]
[-300.21194458 816.63098145]
[-309.06369019 804.51879883]
[-317.43310547 792.06848145]
[-325.30725098 779.29913330]
[-332.67404175 766.23052979]
[-339.52206421 752.88275146]
[-345.84075928 739.27642822]
[-351.62042236 725.43249512]
[-356.85211182 711.37237549]
[-361.52774048 697.11767578]
[-365.64016724 682.69036865]
[-369.18298340 668.11279297]
[-372.15078735 653.40734863]
[-374.53894043 638.59667969]
[-376.34381104 623.70373535]
[-377.56256104 608.75134277]
[-378.19338989 593.76269531]
[-378.23522949 578.76080322]
[-377.68811035 563.76885986]
[-376.55279541 548.80993652]
[-374.83108521 533.90710449]
[-372.52563477 519.08337402]
[-369.63995361 504.36160278]
[-366.17855835 489.76443481]
[-362.14672852 475.31445312]
[-357.55068970 461.03387451]
[-352.39755249 446.94476318]
[-346.69525146 433.06878662]
[-340.45260620 419.42742920]
[-333.67916870 406.04165649]
[-326.38546753 392.93209839]
[-318.58270264 380.11901855]
[-310.28289795 367.62216187]
[-301.49887085 355.46078491]
[-292.24417114 343.65365601]
[-282.53305054 332.21893311]
[-272.38049316 321.17431641]
[-261.80215454 310.53677368]
[-250.81436157 300.32275391]
[-239.43402100 290.54800415]
[-227.67869568 281.22753906]
[-215.56652832 272.37582397]
[-203.11616516 264.00640869]
[-190.34683228 256.13226318]
[-177.27819824 248.76551819]
[-163.93041992 241.91751099]
[-150.32408142 235.59881592]
[-136.48016357 229.81918335]
[-122.42002106 224.58752441]
[-108.16531372 219.91188049]
[-93.73803711 215.79948425]
[-79.16043091 212.25666809]
[-64.45497131 209.28890991]
[-49.64433289 206.90077209]
[-34.75135422 205.09593201]
[-19.79900360 203.87718201]
[-4.81033087 203.24639893]
[10.19155025 203.20454407]
[25.18350792 203.75170898]
[40.14242554 204.88702393]
[55.04523849 206.60874939]
[69.86896515 208.91423035]
[72.75424194 194.19435120]
[75.63951111 179.47445679]
[73.84131622 172.30589294]
[78.67887878 164.55761719]
[81.78298950 149.88230896]
[84.88710022 135.20700073]
[87.99120331 120.53170776]
[91.09531403 105.85639954]
[92.87778473 90.96268463]
[93.32438660 75.96933746]
[93.77099609 60.97598648]
[86.44800568 46.95156097]
[94.56081390 34.46030045]
[80.68209839 28.25952911]
[70.23639679 17.21617126]
[64.81660461 3.01425958]
[65.24920654 -12.18051910]
[71.46822357 -26.05107117]
[82.52531433 -36.48223495]
[96.73434448 -41.88333893]
[111.92854309 -41.43075180]
[125.79090118 -35.19348526]
[136.20751953 -24.12268448]
[141.58992004 -9.90656281]
[141.11734009 5.28702497]
[134.86184692 19.14116669]
[123.77735901 29.54320526]
[109.55416870 34.90690613]
[116.90909576 47.85890579]
[108.76434326 61.42259216]
[108.31774139 76.41593933]
[107.87113190 91.40929413]
[116.37193298 79.05063629]
[129.34991455 71.52920532]
[144.29924011 70.29727173]
[158.33343506 75.59271240]
[168.74269104 86.39304352]
[173.51716614 100.61289978]
[171.73498535 115.50665283]
[163.74024963 128.19854736]
[151.07661438 136.23797607]
[136.18923950 138.07264709]
[121.95263672 133.34832764]
[111.11567688 122.97720337]
[105.77062225 108.96051025]
[102.66651154 123.63581848]
[99.56240082 138.31111145]
[96.45829010 152.98641968]
[93.35417938 167.66172791]
[90.35940552 182.35972595]
[87.47412872 197.07962036]
[84.58885956 211.79951477]
[99.18601990 215.26086426]
[113.63603973 219.29264832]
[127.91662598 223.88861084]
[142.00576782 229.04168701]
[155.88174438 234.74394226]
[169.52314758 240.98655701]
[182.90895081 247.75991821]
[196.01850891 255.05358887]
[208.83161926 262.85632324]
[221.32850647 271.15606689]
[233.48992920 279.94003296]
[245.29710388 289.19470215]
[256.73184204 298.90576172]
[267.77651978 309.05825806]
[278.41409302 319.63656616]
[288.62814331 330.62432861]
[298.40295410 342.00463867]
[307.72344971 353.75991821]
[316.57522583 365.87207031]
[324.94467163 378.32238770]
[332.81887817 391.09170532]
[340.18566895 404.16030884]
[347.03372192 417.50805664]
[353.35247803 431.11434937]
[359.13217163 444.95825195]
[364.36389160 459.01837158]
[369.03958130 473.27307129]
[373.15200806 487.70034790]
[376.69488525 502.27792358]
[379.66271973 516.98339844]
[382.05090332 531.79400635]
[383.85580444 546.68695068]
[385.07461548 561.63934326]
[385.70544434 576.62799072]
[385.74734497 591.62988281]
[385.20025635 606.62182617]
[384.06500244 621.58074951]
[382.34332275 636.48358154]
[380.03790283 651.30731201]
[377.15225220 666.02911377]
[373.69088745 680.62628174]
[369.65908813 695.07629395]
[365.06311035 709.35687256]
[359.91000366 723.44598389]
[354.20773315 737.32196045]
[347.96511841 750.96337891]
[341.19174194 764.34918213]
[333.89804077 777.45867920]
[326.09530640 790.27178955]
[317.79553223 802.76867676]
[309.01156616 814.93011475]
[299.75686646 826.73724365]
[290.04580688 838.17199707]
[279.89328003 849.21661377]
[269.31497192 859.85418701]
[258.32717896 870.06823730]
[246.94686890 879.84301758]
[235.19157410 889.16351318]
[223.07942200 898.01531982]
[210.62907410 906.38470459]
[197.85975647 914.25891113]
[184.79115295 921.62567139]
[171.44338989 928.47369385]
[157.83706665 934.79241943]
[143.99317932 940.57214355]
[129.93302917 945.80383301]
[115.67834473 950.47949219]
[101.25107574 954.59191895]
[86.67347717 958.13476562]
[71.96802521 961.10260010]
[57.15739059 963.49078369]
[42.26441956 965.29565430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[86 138]
[87 137]
[88 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 118]
[96 117]
[97 116]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
