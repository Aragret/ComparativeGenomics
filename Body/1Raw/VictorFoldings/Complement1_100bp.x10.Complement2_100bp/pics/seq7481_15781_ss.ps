%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[96.17194366 641.61584473]
[83.43828583 649.59075928]
[69.71861267 655.71588135]
[55.27999496 659.87188721]
[40.40347290 661.97790527]
[25.37863159 661.99291992]
[10.49792767 659.91668701]
[-3.94897890 655.78955078]
[-17.68087578 649.69195557]
[-30.43046570 641.74249268]
[-41.94957733 632.09588623]
[-52.01398468 620.94000244]
[-60.42778015 608.49194336]
[-67.02719116 594.99401855]
[-71.68375397 580.70898438]
[-74.30683136 565.91485596]
[-74.84536743 550.89965820]
[-73.28886414 535.95568848]
[-69.66764069 521.37371826]
[-64.05216217 507.43771362]
[-56.55175400 494.41888428]
[-47.31240845 482.57064819]
[-36.51396561 472.12365723]
[-24.36662865 463.28125000]
[-11.10684586 456.21551514]
[3.00727749 451.06405640]
[17.70100594 447.92709351]
[32.68832016 446.86572266]
[47.67749023 447.90057373]
[50.78160095 433.22528076]
[53.88571167 418.54998779]
[56.98981857 403.87466431]
[60.09392929 389.19937134]
[63.19804001 374.52407837]
[66.30214691 359.84875488]
[57.98762894 347.54412842]
[60.92658234 332.61706543]
[73.88920593 323.97946167]
[75.78249359 309.09942627]
[76.45227814 294.11437988]
[77.12206268 279.12933350]
[77.79185486 264.14428711]
[78.46163940 249.15925598]
[79.13142395 234.17422485]
[79.80120850 219.18917847]
[80.47099304 204.20414734]
[81.14077759 189.21910095]
[69.36912537 198.51579285]
[54.45610809 196.90274048]
[44.94458008 185.30400085]
[46.28316879 170.36384583]
[57.70507812 160.64068604]
[72.66732025 161.70437622]
[82.59851837 172.94468689]
[84.60253906 158.07916260]
[86.60655212 143.21363831]
[73.92492676 136.97152710]
[63.78848267 127.12063599]
[57.18662643 114.62251282]
[54.76376343 100.69709778]
[56.75639343 86.70363617]
[62.97000885 74.00802612]
[72.79810333 63.84948349]
[85.28136444 57.21957397]
[99.20130920 54.76544571]
[101.42642975 39.93140030]
[103.65154266 25.09735680]
[105.87666321 10.26331329]
[100.27209473 -4.53193712]
[109.81177521 -15.97063828]
[112.03688812 -30.80468178]
[114.26200867 -45.63872528]
[102.25173950 -36.65243530]
[87.26857758 -37.36299133]
[76.16262054 -47.44554138]
[74.01136780 -62.29047775]
[81.79833984 -75.11089325]
[95.96343994 -80.04547119]
[110.03057098 -74.83818054]
[117.56876373 -61.86791229]
[121.32506561 -76.38996887]
[125.08136749 -90.91203308]
[128.83766174 -105.43408966]
[132.59396362 -119.95614624]
[135.58874512 -134.65415955]
[137.81385803 -149.48820496]
[140.03897095 -164.32223511]
[142.26409912 -179.15628052]
[130.43028259 -193.95071411]
[133.12207031 -212.38078308]
[148.16792297 -222.80854797]
[149.95037842 -237.70227051]
[151.73284912 -252.59597778]
[137.37736511 -257.09426880]
[124.09296417 -264.15399170]
[112.33213806 -273.53466797]
[102.49542999 -284.91687012]
[94.91789246 -297.91284180]
[89.85761261 -312.07998657]
[87.48693085 -326.93579102]
[87.88659668 -341.97421265]
[91.04299164 -356.68313599]
[96.84862518 -370.56149292]
[105.10575104 -383.13665771]
[115.53313446 -393.98028564]
[127.77561951 -402.72308350]
[141.41622925 -409.06723022]
[155.99038696 -412.79666138]
[171.00167847 -413.78436279]
[185.93885803 -411.99670410]
[200.29312134 -407.49453735]
[213.57562256 -400.43124390]
[225.33392334 -391.04739380]
[235.16755676 -379.66256714]
[242.74159241 -366.66452026]
[247.79804993 -352.49603271]
[250.16473389 -337.63958740]
[249.76101685 -322.60125732]
[246.60064697 -307.89318848]
[240.79127502 -294.01638794]
[232.53076172 -281.44345093]
[222.10044861 -270.60263062]
[209.85560608 -261.86315918]
[196.21328735 -255.52268982]
[181.63812256 -251.79718018]
[166.62657166 -250.81352234]
[164.84410095 -235.91979980]
[163.06163025 -221.02607727]
[171.88954163 -213.79876709]
[176.17677307 -203.09663391]
[174.75083923 -191.53547668]
[167.85118103 -182.00155640]
[157.09814453 -176.93116760]
[154.87301636 -162.09712219]
[152.64790344 -147.26307678]
[150.42279053 -132.42903137]
[162.43305969 -141.41532898]
[177.41621399 -140.70477295]
[188.52217102 -130.62222290]
[190.67341614 -115.77728271]
[182.88645935 -102.95687103]
[168.72135925 -98.02229309]
[154.65422058 -103.22957611]
[147.11602783 -116.19985199]
[143.35972595 -101.67778778]
[139.60342407 -87.15573120]
[135.84712219 -72.63367462]
[132.09082031 -58.11161423]
[129.09605408 -43.41360855]
[126.87093353 -28.57956505]
[124.64581299 -13.74552059]
[130.40953064 -0.01130014]
[120.71070099 12.48843098]
[118.48558807 27.32247353]
[116.26046753 42.15651703]
[114.03535461 56.99056244]
[127.90384674 64.38851166]
[138.40412903 76.08503723]
[144.26875305 90.66828156]
[144.78977966 106.37792969]
[139.90435791 121.31771851]
[130.20216370 133.68429565]
[116.85434723 141.98492432]
[101.47207642 145.21765137]
[99.46806335 160.08317566]
[97.46405029 174.94869995]
[96.12581635 189.88888550]
[95.45603180 204.87393188]
[94.78624725 219.85896301]
[94.11646271 234.84400940]
[93.44667816 249.82904053]
[92.77689362 264.81408691]
[92.10710907 279.79913330]
[91.43731689 294.78414917]
[90.76753235 309.76919556]
[99.77016449 297.77117920]
[113.27748108 291.24795532]
[128.27191162 291.65682983]
[141.40365601 298.90646362]
[149.73905945 311.37728882]
[151.41595459 326.28326416]
[146.05973816 340.29434204]
[134.86698914 350.28045654]
[120.33821106 354.01068115]
[105.71915436 350.65164185]
[94.27575684 340.95376587]
[88.56450653 327.08355713]
[96.91933441 340.23022461]
[93.56227112 355.06884766]
[80.97745514 362.95288086]
[77.87334442 377.62817383]
[74.76923370 392.30346680]
[71.66512299 406.97879028]
[68.56101227 421.65408325]
[65.45690155 436.32937622]
[62.35279083 451.00469971]
[76.47719574 456.12792969]
[89.75108337 463.16708374]
[101.91609192 471.98516846]
[112.73540497 482.41055298]
[121.99844360 494.24029541]
[129.52488708 507.24407959]
[135.16822815 521.16882324]
[138.81861877 535.74346924]
[140.40501404 550.68438721]
[139.89653015 565.70062256]
[137.30305481 580.49993896]
[132.67507935 594.79425049]
[126.10267639 608.30535889]
[117.71379852 620.77020264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[38 187]
[39 175]
[40 174]
[41 173]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[54 166]
[55 165]
[56 164]
[65 156]
[66 155]
[67 154]
[68 153]
[70 151]
[71 150]
[72 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 136]
[86 135]
[87 134]
[88 133]
[91 128]
[92 127]
[93 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
