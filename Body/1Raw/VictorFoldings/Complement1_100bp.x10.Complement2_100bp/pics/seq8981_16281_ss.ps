%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[175.46083069 529.65655518]
[173.47732544 514.77154541]
[173.20355225 499.75747681]
[174.64306641 484.81005859]
[177.77711487 470.12414551]
[182.56483459 455.89123535]
[188.94380188 442.29690552]
[196.83085632 429.51831055]
[206.12318420 417.72210693]
[216.69963074 407.06207275]
[228.42230225 397.67715454]
[241.13838196 389.68972778]
[234.65888977 376.16137695]
[228.07885742 362.68164062]
[221.39866638 349.25128174]
[214.51925659 335.92184448]
[207.44215393 322.69631958]
[200.36505127 309.47079468]
[193.28794861 296.24526978]
[186.21083069 283.01974487]
[179.13372803 269.79418945]
[164.37820435 267.94692993]
[153.41007996 257.64334106]
[150.57910156 242.68208313]
[157.17687988 228.76174927]
[150.09977722 215.53622437]
[143.02265930 202.31069946]
[130.19586182 194.73954773]
[130.50683594 178.92140198]
[123.42972565 165.69587708]
[116.35261536 152.47033691]
[113.71190643 151.52972412]
[111.28467560 149.48640442]
[109.49279022 146.41645813]
[108.72282410 142.54713440]
[109.27463531 138.24021912]
[102.99727631 124.61690521]
[96.71991730 110.99359131]
[93.75130463 125.69689941]
[83.90309906 137.01116943]
[69.74958801 141.97888184]
[54.99046707 139.30148315]
[43.48374176 129.67884827]
[38.23723602 115.62629700]
[40.62237549 100.81713867]
[50.01568985 89.12245941]
[63.96179199 83.59920502]
[78.81520081 85.69115448]
[90.69273376 94.85076904]
[79.41087341 83.75886536]
[83.28801727 69.37773132]
[79.10100555 54.97395325]
[74.91399384 40.57017136]
[70.72698212 26.16638947]
[65.32653046 18.79937172]
[66.58657074 11.51692104]
[62.61447906 -2.94760323]
[58.64238358 -17.41212654]
[54.67028427 -31.87665176]
[50.69818878 -46.34117508]
[46.72609329 -60.80569839]
[37.15119934 -49.25920868]
[22.15180016 -49.39331436]
[12.78489113 -61.10915756]
[15.95541000 -75.77025604]
[29.32616806 -82.56899261]
[43.03966522 -76.49484253]
[40.15439224 -91.21473694]
[27.73297119 -104.80847931]
[34.06363297 -121.17581177]
[30.95952415 -135.85112000]
[27.85541534 -150.52641296]
[17.42978287 -162.42669678]
[22.36580658 -176.47962952]
[19.26169777 -191.15493774]
[4.28513002 -189.98983765]
[-10.71538353 -190.78959656]
[-25.48316383 -193.54054260]
[-39.76551819 -198.19558716]
[-53.31805038 -204.67507935]
[-65.90886688 -212.86814880]
[-77.32251740 -222.63459778]
[-87.36369324 -233.80732727]
[-95.86059570 -246.19512939]
[-102.66780853 -259.58605957]
[-107.66886902 -273.75094604]
[-110.77819061 -288.44744873]
[-111.94258118 -303.42407227]
[-111.14210510 -318.42456055]
[-108.39046478 -333.19219971]
[-103.73474121 -347.47433472]
[-97.25460052 -361.02655029]
[-89.06092834 -373.61697388]
[-79.29393005 -385.03015137]
[-68.12073517 -395.07080078]
[-55.73252487 -403.56710815]
[-42.34127808 -410.37368774]
[-28.17613792 -415.37408447]
[-13.47948933 -418.48269653]
[1.49718904 -419.64639282]
[16.49762535 -418.84518433]
[31.26514435 -416.09286499]
[45.54705429 -411.43646240]
[59.09897232 -404.95565796]
[71.68900299 -396.76138306]
[83.10172272 -386.99386597]
[93.14184570 -375.82019043]
[101.63755798 -363.43154907]
[108.44350433 -350.03997803]
[113.44321442 -335.87460327]
[116.55113983 -321.17782593]
[117.71409607 -306.20108032]
[116.91219330 -291.20068359]
[114.15914917 -276.43328857]
[109.50206757 -262.15161133]
[103.02063751 -248.60000610]
[94.82576752 -236.01036072]
[85.05768585 -224.59809875]
[73.88352966 -214.55851746]
[61.49451065 -206.06338501]
[48.10261536 -199.25808716]
[33.93700027 -194.25904846]
[37.04111099 -179.58374023]
[47.24471283 -168.73313904]
[42.53071594 -153.63052368]
[45.63482666 -138.95523071]
[48.73893738 -124.27992249]
[58.70296860 -117.42101288]
[61.40915680 -105.22018433]
[54.87428284 -94.10000610]
[57.75955582 -79.38011932]
[61.19061661 -64.77779388]
[65.16271210 -50.31327057]
[69.13481140 -35.84874725]
[73.10690308 -21.38422394]
[77.07900238 -6.91969967]
[81.05110168 7.54482460]
[85.13076782 21.97937775]
[89.31777954 36.38315964]
[93.50478363 50.78694153]
[97.69179535 65.19072723]
[108.67417145 75.25237274]
[105.09651184 90.66375732]
[110.34323120 104.71623230]
[116.62059021 118.33954620]
[122.89794922 131.96286011]
[129.57814026 145.39323425]
[136.65525818 158.61875916]
[143.73236084 171.84429932]
[157.06536865 180.36141968]
[156.24819946 195.23359680]
[163.32530212 208.45912170]
[170.40240479 221.68464661]
[185.64434814 223.91833496]
[196.52128601 234.57411194]
[199.00866699 249.41584778]
[192.35925293 262.71710205]
[199.43637085 275.94262695]
[206.51347351 289.16815186]
[213.59057617 302.39367676]
[220.66767883 315.61920166]
[227.74478149 328.84472656]
[233.15003967 332.65191650]
[235.47253418 337.83874512]
[234.82904053 342.57107544]
[241.50924683 356.00146484]
[248.13298035 362.29141235]
[248.18724060 369.68188477]
[254.66673279 383.21023560]
[268.86087036 378.30880737]
[283.52124023 375.05737305]
[298.45666504 373.49832153]
[313.47247314 373.65200806]
[328.37286377 375.51635742]
[342.96362305 379.06713867]
[357.05447388 384.25799561]
[370.46176147 391.02130127]
[383.01068115 399.26885986]
[394.53762817 408.89318848]
[404.89233398 419.76873779]
[413.93978882 431.75378418]
[421.56207275 444.69204712]
[427.65975952 458.41488647]
[432.15338135 472.74334717]
[434.98437500 487.49066162]
[436.11581421 502.46456909]
[435.53292847 517.46984863]
[433.24334717 532.31085205]
[429.27691650 546.79412842]
[423.68533325 560.73083496]
[416.54150391 573.93927002]
[407.93856812 586.24731445]
[397.98864746 597.49438477]
[386.82150269 607.53393555]
[374.58273315 616.23504639]
[361.43182373 623.48431396]
[347.54028320 629.18725586]
[333.08920288 633.26940918]
[318.26699829 635.67761230]
[303.26687622 636.38055420]
[288.28439331 635.36889648]
[273.51492310 632.65600586]
[259.15097046 628.27716064]
[245.37979126 622.28942871]
[232.38096619 614.77087402]
[220.32392883 605.81958008]
[209.36587524 595.55224609]
[199.64967346 584.10266113]
[191.30197144 571.62011719]
[184.43164062 558.26733398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 169]
[13 168]
[14 166]
[15 165]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[25 153]
[26 152]
[27 151]
[29 149]
[30 148]
[31 147]
[36 146]
[37 145]
[38 144]
[49 143]
[51 141]
[52 140]
[53 139]
[54 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[67 131]
[68 130]
[70 127]
[71 126]
[72 125]
[74 123]
[75 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
