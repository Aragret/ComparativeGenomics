%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[53.89218521 608.83184814]
[58.96409988 623.09912109]
[59.12613678 638.24017334]
[54.36072540 652.61273193]
[45.18478012 664.65765381]
[32.59363937 673.06848145]
[17.95309448 676.93286133]
[2.85124493 675.83154297]
[-11.07377529 669.88403320]
[-22.31148338 659.73553467]
[-29.64289856 646.48681641]
[-32.27276230 631.57495117]
[-29.91580582 616.61755371]
[-22.82769775 603.23712158]
[-11.77729797 592.88494873]
[2.03672528 586.68402100]
[17.11593056 585.30694580]
[20.65560341 570.73059082]
[24.19527626 556.15417480]
[27.73494911 541.57781982]
[31.27462006 527.00146484]
[20.82664108 511.96963501]
[24.75137711 493.76223755]
[41.01247406 484.04159546]
[44.11658478 469.36627197]
[47.22069550 454.69097900]
[50.32480621 440.01568604]
[53.10041809 425.27471924]
[47.54182053 411.45620728]
[57.42567825 399.10226440]
[59.87140274 384.30297852]
[62.31713104 369.50372314]
[64.76285553 354.70443726]
[59.20426178 340.88592529]
[69.08811951 328.53198242]
[71.53384399 313.73272705]
[73.53785706 298.86718750]
[75.09838104 283.94857788]
[76.65890503 269.02996826]
[78.21942902 254.11137390]
[64.91371918 244.94238281]
[58.00781250 230.22966003]
[59.47231674 213.94862366]
[69.00182343 200.55145264]
[84.07255554 193.74961853]
[85.41078949 178.80943298]
[86.74902344 163.86924744]
[88.08725739 148.92906189]
[89.42549133 133.98887634]
[90.76372528 119.04869843]
[81.53729248 110.35810089]
[78.92923737 97.95440674]
[83.87445831 86.28399658]
[94.60025024 79.53040314]
[96.16077423 64.61180115]
[89.90116119 50.08156204]
[98.92055511 38.22830200]
[100.48107910 23.30969810]
[102.04159546 8.39109230]
[91.72664642 1.32925296]
[85.42948151 -9.38588428]
[84.29222107 -21.68979263]
[88.46958160 -33.24187851]
[97.11109924 -41.87072754]
[108.53348541 -45.98223495]
[110.53749847 -60.84776306]
[104.71327209 -75.55792999]
[114.08158875 -87.13739014]
[116.08560181 -102.00292206]
[118.08961487 -116.86844635]
[120.09362793 -131.73397827]
[122.09764099 -146.59950256]
[122.32096863 -161.59783936]
[120.76044464 -176.51644897]
[119.08890533 -191.42301941]
[117.30644226 -206.31674194]
[115.52397156 -221.21046448]
[106.20160675 -233.99342346]
[112.37168884 -247.54994202]
[110.58922577 -262.44366455]
[108.80675507 -277.33737183]
[100.34339142 -264.95306396]
[86.25626373 -259.80010986]
[71.79953003 -263.80044556]
[62.36518860 -275.46206665]
[61.47201538 -290.43545532]
[69.45314789 -303.13589478]
[83.33181000 -308.82647705]
[97.93161774 -305.38470459]
[107.80765533 -294.09326172]
[107.80765533 -309.09326172]
[107.80765533 -324.09326172]
[107.80765533 -339.09326172]
[93.16844177 -342.69281006]
[79.81636810 -349.69177246]
[68.52771759 -359.68325806]
[59.95878601 -372.08636475]
[54.60776901 -386.17996216]
[52.78576279 -401.14471436]
[54.59869766 -416.11056519]
[59.94116974 -430.20742798]
[68.50257874 -442.61572266]
[79.78517151 -452.61404419]
[93.13299561 -459.62112427]
[107.77002716 -463.22955322]
[122.84529114 -463.22955322]
[137.48231506 -459.62112427]
[150.83013916 -452.61404419]
[162.11274719 -442.61572266]
[170.67414856 -430.20742798]
[176.01661682 -416.11056519]
[177.82955933 -401.14471436]
[176.00755310 -386.17996216]
[170.65652466 -372.08636475]
[162.08760071 -359.68325806]
[150.79895020 -349.69177246]
[137.44686890 -342.69281006]
[122.80765533 -339.09326172]
[122.80765533 -324.09326172]
[122.80765533 -309.09326172]
[122.80765533 -294.09326172]
[123.70047760 -279.11984253]
[125.48294067 -264.22613525]
[127.26540375 -249.33241272]
[136.46028137 -237.61474609]
[130.41769409 -222.99291992]
[132.20014954 -208.09921265]
[133.98262024 -193.20549011]
[137.89868164 -186.93762207]
[135.67904663 -178.07696533]
[137.23957825 -163.15837097]
[143.09251404 -176.96934509]
[153.26536560 -187.99264526]
[166.56303406 -194.93325806]
[181.42330933 -196.97581482]
[196.10043335 -193.88035583]
[208.87016296 -186.01051331]
[218.23229980 -174.29086304]
[223.08700562 -160.09819031]
[222.86393738 -145.09985352]
[217.58932495 -131.05783081]
[207.88281250 -119.62176514]
[194.88470459 -112.13516235]
[180.12200928 -109.47753143]
[165.32904053 -111.96109772]
[152.24366760 -119.29409027]
[142.40312195 -130.61503601]
[136.96316528 -144.59548950]
[134.95915222 -129.72996521]
[132.95513916 -114.86443329]
[130.95112610 -99.99890900]
[128.94711304 -85.13337708]
[134.91467285 -71.48649597]
[125.40302277 -58.84374619]
[123.39900970 -43.97821808]
[136.72448730 -32.38929367]
[140.45866394 -14.96784687]
[132.92176819 1.35007977]
[116.96020508 9.95161533]
[115.39968109 24.87022018]
[113.83915710 39.78882599]
[120.21039581 53.25198364]
[111.07937622 66.17232513]
[109.51885223 81.09092712]
[120.20149994 93.67062378]
[118.60679626 110.09696960]
[105.70391083 120.38693237]
[104.36567688 135.32711792]
[103.02744293 150.26730347]
[101.68920898 165.20748901]
[100.35097504 180.14767456]
[99.01274109 195.08786011]
[110.85655212 202.53010559]
[118.30282593 214.29313660]
[119.94657898 228.05091858]
[115.52362823 241.11180115]
[105.95113373 250.94520569]
[93.13803101 255.67190552]
[91.57750702 270.59051514]
[90.01699066 285.50912476]
[88.45646667 300.42770386]
[90.36461639 304.32809448]
[90.88047791 308.23941040]
[90.17156982 311.72262573]
[88.53079224 314.43823242]
[86.33311462 316.17843628]
[83.88739014 330.97772217]
[89.27104950 345.85476685]
[79.56212616 357.15017700]
[77.11640167 371.94943237]
[74.67067719 386.74871826]
[72.22494507 401.54797363]
[77.60861206 416.42504883]
[67.89968872 427.72042847]
[69.73928070 432.60540771]
[69.54096222 437.24374390]
[67.73995972 440.90042114]
[65.00010681 443.11978149]
[61.89599991 457.79507446]
[58.79188919 472.47039795]
[55.68777847 487.14569092]
[63.98803711 495.65701294]
[67.11706543 507.00204468]
[64.40904999 518.33166504]
[56.64924240 526.85815430]
[45.85099792 530.54113770]
[42.31132507 545.11749268]
[38.77165222 559.69384766]
[35.23197937 574.27026367]
[31.69230652 588.84661865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 210]
[18 209]
[19 208]
[20 207]
[21 206]
[24 201]
[25 200]
[26 199]
[27 198]
[28 194]
[30 192]
[31 191]
[32 190]
[33 189]
[35 187]
[36 186]
[37 181]
[38 180]
[39 179]
[40 178]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[54 164]
[55 163]
[57 161]
[58 160]
[59 159]
[65 155]
[66 154]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 131]
[74 130]
[75 128]
[76 127]
[77 126]
[79 124]
[80 123]
[81 122]
[90 121]
[91 120]
[92 119]
[93 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
