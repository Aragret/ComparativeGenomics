%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[146.09527588 914.77893066]
[131.43402100 911.58197021]
[117.02203369 907.40258789]
[102.92507172 902.25976562]
[89.20746613 896.17694092]
[75.93180847 889.18194580]
[63.15866852 881.30670166]
[50.94632721 872.58709717]
[39.35050964 863.06292725]
[28.42412186 852.77764893]
[18.21702385 841.77819824]
[8.77578545 830.11474609]
[0.14348513 817.84051514]
[-7.64048862 805.01153564]
[-14.54061890 791.68634033]
[-20.52542305 777.92572021]
[-25.56759071 763.79241943]
[-29.64411926 749.35101318]
[-32.73640442 734.66729736]
[-34.83034134 719.80834961]
[-35.91637039 704.84191895]
[-35.98954010 689.83636475]
[-35.04951859 674.86004639]
[-33.10058594 659.98138428]
[-30.15164375 645.26824951]
[-26.21614456 630.78778076]
[-21.31204605 616.60595703]
[-15.46172142 602.78765869]
[-8.69186783 589.39575195]
[-1.03337431 576.49151611]
[7.47881556 564.13366699]
[16.80586243 552.37872314]
[26.90520668 541.28021240]
[37.73077011 530.88891602]
[49.23315811 521.25207520]
[61.35988235 512.41375732]
[74.05561829 504.41433716]
[87.26242828 497.29022217]
[100.92005920 491.07394409]
[114.96619415 485.79388428]
[129.33674622 481.47412109]
[143.96612549 478.13436890]
[158.78761292 475.78985596]
[157.44937134 460.84967041]
[156.11114502 445.90948486]
[154.77290344 430.96929932]
[153.43467712 416.02911377]
[152.09643555 401.08892822]
[150.75820923 386.14874268]
[149.41996765 371.20855713]
[147.52667236 356.32852173]
[145.08094788 341.52926636]
[142.19567871 326.80935669]
[138.87341309 312.18191528]
[135.55116272 297.55444336]
[132.22889709 282.92700195]
[128.90663147 268.29953003]
[114.45308685 268.24795532]
[100.36772156 264.97265625]
[87.36078644 258.63528442]
[76.08890533 249.55207825]
[67.12194061 238.17791748]
[60.91419601 225.08366394]
[57.78137970 210.92742920]
[57.88456726 196.42153931]
[61.22190857 182.29669189]
[67.62857056 169.26509094]
[76.78485870 157.98463440]
[88.23217010 149.02563477]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[77.17433167 80.97511292]
[74.23537445 66.04804993]
[82.54989624 53.74340439]
[79.44578552 39.06809998]
[69.08095551 31.39130783]
[66.79766083 19.10431099]
[73.28369904 8.89363575]
[60.45111465 0.06399351]
[57.73472595 -14.90517139]
[66.23152161 -27.08466339]
[63.34625244 -41.80455399]
[60.46097946 -56.52444458]
[45.40250778 -57.10677338]
[30.88439178 -61.14670944]
[17.68958092 -68.42638397]
[6.52965164 -78.55321503]
[-1.99355412 -90.98107910]
[-7.42039108 -105.03974152]
[-9.45819664 -119.97105408]
[-7.99707413 -134.96978760]
[-3.11582041 -149.22706604]
[4.92232466 -161.97402954]
[15.68387413 -172.52323914]
[28.58847046 -180.30578613]
[42.94018555 -184.90197754]
[57.96504974 -186.06393433]
[72.85279083 -183.72901917]
[86.80053711 -178.02311707]
[99.05609131 -169.25396729]
[108.95853424 -157.89447021]
[115.97384644 -144.55722046]
[119.72368622 -129.96148682]
[120.00584412 -114.89440155]
[116.80509186 -100.16851044]
[110.29405212 -86.57795715]
[100.82385254 -74.85567474]
[88.90520477 -65.63381958]
[75.18087006 -59.40971756]
[78.06613922 -44.68982697]
[80.95141602 -29.96993637]
[93.41745758 -21.89940834]
[96.55322266 -7.01244640]
[88.00358582 6.00836325]
[100.23351288 18.59390831]
[94.12108612 35.96399307]
[97.22519684 50.63929367]
[109.81001282 58.52332687]
[113.16707611 73.36195374]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[131.65414429 140.21192932]
[146.66442871 144.39166260]
[160.23445129 152.03114319]
[171.58079529 162.68457031]
[180.04960632 175.73226929]
[185.15422058 190.41677856]
[186.60308838 205.88679504]
[184.31652832 221.24652100]
[178.43099976 235.60755920]
[169.29100037 248.14024353]
[157.42895508 258.12167358]
[143.53410339 264.97726440]
[146.85635376 279.60473633]
[150.17861938 294.23217773]
[153.50086975 308.85964966]
[156.82313538 323.48712158]
[159.88470459 326.56619263]
[161.63154602 330.10357666]
[162.08099365 333.62966919]
[161.40116882 336.72879028]
[159.88021851 339.08352661]
[162.32594299 353.88281250]
[173.05012512 343.39508057]
[187.95417786 345.08892822]
[196.05140686 357.71569824]
[191.37281799 371.96737671]
[177.36730957 377.33819580]
[164.36015320 369.87033081]
[165.69839478 384.81051636]
[167.03662109 399.75070190]
[168.37486267 414.69088745]
[169.71308899 429.63107300]
[171.05133057 444.57125854]
[172.38955688 459.51144409]
[173.72779846 474.45162964]
[188.72999573 474.12472534]
[203.72004700 474.81140137]
[218.62953186 476.50845337]
[233.39044189 479.20819092]
[247.93540955 482.89828491]
[262.19808960 487.56188965]
[276.11337280 493.17770386]
[289.61779785 499.72015381]
[302.64971924 507.15936279]
[315.14971924 515.46136475]
[327.06069946 524.58831787]
[338.32836914 534.49853516]
[348.90127563 545.14685059]
[358.73120117 556.48468018]
[367.77328491 568.46020508]
[375.98626709 581.01885986]
[383.33267212 594.10333252]
[389.77899170 607.65386963]
[395.29580688 621.60876465]
[399.85794067 635.90417480]
[403.44458008 650.47503662]
[406.03936768 665.25469971]
[407.63046265 680.17590332]
[408.21057129 695.17047119]
[407.77709961 710.16992188]
[406.33200073 725.10595703]
[403.88186646 739.91033936]
[400.43786621 754.51556396]
[396.01571655 768.85491943]
[390.63562012 782.86303711]
[384.32211304 796.47601318]
[377.10397339 809.63165283]
[369.01419067 822.27001953]
[360.08963013 834.33343506]
[350.37106323 845.76678467]
[339.90277100 856.51794434]
[328.73254395 866.53790283]
[316.91137695 875.78088379]
[304.49316406 884.20471191]
[291.53457642 891.77099609]
[278.09478760 898.44519043]
[264.23507690 904.19677734]
[250.01867676 908.99963379]
[235.51048279 912.83178711]
[220.77668762 915.67572021]
[205.88450623 917.51849365]
[190.90188599 918.35168457]
[175.89720154 918.17150879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 149]
[52 148]
[53 143]
[54 142]
[55 141]
[56 140]
[57 139]
[70 127]
[71 126]
[72 125]
[74 123]
[77 120]
[78 119]
[81 117]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
