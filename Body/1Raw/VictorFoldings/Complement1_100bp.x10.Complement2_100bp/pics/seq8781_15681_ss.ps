%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[219.59236145 440.75442505]
[211.55119324 428.09188843]
[203.51000977 415.42938232]
[188.96247864 412.44531250]
[180.62719727 399.71826172]
[183.85580444 384.47967529]
[175.81463623 371.81716919]
[167.77346802 359.15463257]
[159.73229980 346.49209595]
[151.69111633 333.82958984]
[153.27890015 348.74530029]
[151.29980469 363.61416626]
[145.86575317 377.59527588]
[137.28407288 389.89791870]
[126.04009247 399.82629395]
[112.76972198 406.81893921]
[98.22345734 410.48037720]
[83.22396088 410.60354614]
[68.61952972 407.18145752]
[55.23611832 400.40768433]
[43.83061981 390.66528320]
[35.04806900 378.50521851]
[29.38516426 364.61523438]
[27.16217041 349.78088379]
[28.50480652 334.84109497]
[33.33714294 320.64077759]
[41.38588333 307.98306274]
[52.19583511 297.58380127]
[65.15564728 290.03109741]
[79.53237152 285.75210571]
[94.51293945 284.98883057]
[109.25012207 287.78442383]
[122.91046906 293.98077393]
[134.72142029 303.22747803]
[144.01554871 315.00250244]
[140.91143799 300.32717896]
[137.80734253 285.65188599]
[134.70323181 270.97659302]
[131.59912109 256.30130005]
[128.05944824 241.72491455]
[124.08734894 227.26039124]
[113.25598907 217.03634644]
[117.06270599 201.67993164]
[113.09061432 187.21540833]
[109.11851501 172.75088501]
[105.14642334 158.28636169]
[102.77962494 156.78422546]
[100.86523438 154.25405884]
[99.79779816 150.86347961]
[99.90394592 146.91972351]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.81956482 60.28562927]
[80.49730682 45.65816879]
[77.17504883 31.03070831]
[69.25547028 43.76963806]
[55.03993607 48.55697250]
[41.02759171 43.20400620]
[33.62469482 30.15804482]
[36.21574783 15.38352489]
[47.61616135 5.63515854]
[62.61381149 5.36976767]
[74.35295868 14.71026134]
[72.57048798 -0.18345580]
[69.44045258 -4.36077023]
[68.33617401 -8.87007904]
[69.04488373 -12.88415146]
[71.05633545 -15.78008175]
[69.94068909 -30.73853493]
[68.82503510 -45.69698715]
[67.70938873 -60.65544128]
[66.59374237 -75.61389160]
[65.47808838 -90.57234955]
[64.36244202 -105.53079987]
[63.24679565 -120.48925781]
[50.34803009 -125.90078735]
[41.08345795 -136.29231262]
[37.21851730 -149.59797668]
[39.45272064 -163.20523071]
[47.29379654 -174.46783447]
[59.16474915 -181.22042847]
[58.27193451 -196.19383240]
[57.37911987 -211.16723633]
[56.48630142 -226.14064026]
[55.59348679 -241.11404419]
[52.27759552 -246.83387756]
[52.33888626 -252.51658630]
[54.90375900 -256.54528809]
[54.45715332 -271.53863525]
[54.01054764 -286.53201294]
[53.56393814 -301.52536011]
[53.11733246 -316.51870728]
[38.71731567 -321.25317383]
[26.80693245 -330.62966919]
[18.82442093 -343.51593018]
[15.73370838 -358.35583496]
[17.90801239 -373.35745239]
[25.08477402 -386.70922852]
[36.39736938 -396.79885864]
[50.47974014 -402.40802002]
[65.63137817 -402.85934448]
[80.02264404 -398.09832764]
[91.91572571 -388.69992065]
[99.87448120 -375.79898071]
[102.93784332 -360.95336914]
[100.73589325 -345.95581055]
[93.53453827 -332.61727905]
[82.20336914 -322.54849243]
[68.11068726 -316.96530151]
[68.55728912 -301.97195435]
[69.00389862 -286.97860718]
[69.45050049 -271.98526001]
[69.89710999 -256.99191284]
[70.56689453 -242.00686646]
[71.45970917 -227.03346252]
[72.35252380 -212.06005859]
[73.24533844 -197.08665466]
[74.13815308 -182.11325073]
[88.76080322 -175.23641968]
[97.97318268 -161.84657288]
[99.18287659 -145.54463196]
[91.96527863 -130.77297974]
[78.20524597 -121.60490417]
[79.32089996 -106.64645386]
[80.43654633 -91.68799591]
[81.55219269 -76.72954559]
[82.66783905 -61.77109146]
[83.78349304 -46.81263733]
[84.89913940 -31.85418320]
[86.01478577 -16.89573097]
[87.46421051 -1.96592164]
[89.24667358 12.92779541]
[91.80250549 27.70844841]
[95.12476349 42.33591080]
[98.44702148 56.96337128]
[102.99391937 62.78982162]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[119.61094666 154.31425476]
[123.58303833 168.77877808]
[127.55513763 183.24331665]
[131.52723694 197.70783997]
[142.64270020 208.96647644]
[138.55186462 223.28828430]
[142.52397156 237.75280762]
[145.71997070 240.69210815]
[147.62301636 244.14796448]
[148.22947693 247.65048218]
[147.68870544 250.77685547]
[146.27441406 253.19717407]
[149.37852478 267.87246704]
[152.48263550 282.54779053]
[155.58674622 297.22308350]
[158.69085693 311.89837646]
[164.35363770 325.78842163]
[172.39482117 338.45092773]
[180.43598938 351.11346436]
[188.47715759 363.77600098]
[196.51834106 376.43850708]
[211.68339539 379.99639893]
[219.65791321 392.95257568]
[216.17254639 407.38821411]
[224.21371460 420.05072021]
[232.25488281 432.71325684]
[246.02308655 426.68521118]
[260.55010986 422.82965088]
[275.49548340 421.23690796]
[290.50878906 421.94433594]
[305.23815918 424.93536377]
[319.33828735 430.13989258]
[332.47863770 437.43588257]
[344.35119629 446.65231323]
[354.67767334 457.57315063]
[363.21594238 469.94238281]
[369.76589966 483.47009277]
[374.17401123 497.83911133]
[376.33691406 512.71264648]
[376.20391846 527.74206543]
[373.77816772 542.57501221]
[369.11645508 556.86376953]
[362.32815552 570.27343750]
[353.57229614 582.48962402]
[343.05419922 593.22601318]
[331.02041626 602.23095703]
[317.75299072 609.29321289]
[303.56298828 614.24743652]
[288.78298950 616.97735596]
[273.75949097 617.41900635]
[258.84466553 615.56201172]
[244.38813782 611.44995117]
[230.72877502 605.17926025]
[218.18676758 596.89678955]
[207.05613708 586.79681396]
[197.59779358 575.11608887]
[190.03346252 562.12835693]
[184.54045105 548.13806152]
[181.24752808 533.47326660]
[180.23187256 518.47760010]
[181.51731873 503.50271606]
[185.07371521 488.89953613]
[190.81770325 475.01043701]
[198.61462402 462.16098022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[35 162]
[36 161]
[37 160]
[38 159]
[39 158]
[40 153]
[41 152]
[43 150]
[44 149]
[45 148]
[46 147]
[51 146]
[52 145]
[53 144]
[55 142]
[56 141]
[57 139]
[58 138]
[59 137]
[67 136]
[68 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
