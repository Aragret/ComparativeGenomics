%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[64.71593475 812.51586914]
[49.71155167 812.36083984]
[34.74792480 811.24481201]
[19.88654709 809.17230225]
[5.18848705 806.15191650]
[-9.28585625 802.19604492]
[-23.47700310 797.32092285]
[-37.32664108 791.54656982]
[-50.77785873 784.89672852]
[-63.77537918 777.39868164]
[-76.26579285 769.08337402]
[-88.19777679 759.98480225]
[-99.52230072 750.14044189]
[-110.19281769 739.59082031]
[-120.16549683 728.37915039]
[-129.39933777 716.55157471]
[-137.85643005 704.15667725]
[-145.50198364 691.24536133]
[-152.30459595 677.87078857]
[-158.23631287 664.08776855]
[-163.27276611 649.95306396]
[-167.39326477 635.52471924]
[-170.58085632 620.86206055]
[-172.82244873 606.02520752]
[-174.10884094 591.07525635]
[-174.43473816 576.07360840]
[-173.79879761 561.08190918]
[-172.20364380 546.16174316]
[-169.65582275 531.37445068]
[-166.16581726 516.78076172]
[-161.74795532 502.44070435]
[-156.42039490 488.41311646]
[-150.20501709 474.75570679]
[-143.12738037 461.52459717]
[-135.21656799 448.77410889]
[-126.50507355 436.55667114]
[-117.02870178 424.92251587]
[-106.82639313 413.91940308]
[-95.94007874 403.59255981]
[-84.41448212 393.98440552]
[-72.29696655 385.13446045]
[-59.63732529 377.07907104]
[-46.48758698 369.85134888]
[-32.90178299 363.48098755]
[-18.93573952 357.99417114]
[-4.64684677 353.41342163]
[9.90617752 349.75756836]
[24.66353226 347.04165649]
[39.56457520 345.27685547]
[54.54807663 344.47036743]
[69.55245972 344.62554932]
[70.66810608 329.66711426]
[71.78376007 314.70864868]
[72.89940643 299.75018311]
[74.01505280 284.79174805]
[75.13070679 269.83328247]
[76.24635315 254.87483215]
[73.60904694 247.97074890]
[77.49160004 239.70251465]
[78.82983398 224.76232910]
[80.16806793 209.82214355]
[77.63385010 202.87956238]
[81.63906097 194.67004395]
[83.19958496 179.75144958]
[73.76499939 170.97546387]
[71.06744385 158.17681885]
[76.31099701 145.98191833]
[87.78721619 138.93130493]
[89.56968689 124.03759003]
[91.35214996 109.14387512]
[92.80156708 94.21406555]
[93.91721344 79.25561523]
[95.03286743 64.29715729]
[96.14851379 49.33870697]
[97.26416016 34.38025284]
[98.15697479 19.40684891]
[98.82676697 4.42180967]
[99.49655151 -10.56322956]
[90.63375854 -26.70424652]
[100.64796448 -41.11544037]
[101.09457397 -56.10879135]
[101.54117584 -71.10214233]
[101.98778534 -86.09548950]
[102.43438721 -101.08884430]
[102.88099670 -116.08219147]
[88.54185486 -120.80120087]
[76.12596893 -129.36087036]
[66.63469696 -141.06048584]
[60.83059692 -154.94647217]
[59.17616653 -169.89019775]
[61.79698563 -184.67962646]
[68.47223663 -198.11770630]
[78.65329742 -209.11915588]
[91.50878143 -216.79820251]
[105.99246979 -220.53987122]
[106.43907166 -235.53321838]
[106.88568115 -250.52656555]
[107.33228302 -265.51992798]
[107.77889252 -280.51327515]
[93.90016937 -286.71405029]
[83.45446777 -297.75738525]
[78.03468323 -311.95932007]
[78.46727753 -327.15408325]
[84.68630219 -341.02462769]
[95.74339294 -351.45581055]
[109.95242310 -356.85690308]
[125.14662170 -356.40432739]
[139.00897217 -350.16705322]
[149.42558289 -339.09625244]
[154.80799866 -324.88012695]
[154.33541870 -309.68655396]
[148.07992554 -295.83239746]
[136.99543762 -285.43035889]
[122.77223969 -280.06665039]
[122.32563782 -265.07330322]
[121.87902832 -250.07995605]
[121.43242645 -235.08660889]
[120.98581696 -220.09326172]
[135.22111511 -215.49615479]
[147.59674072 -207.06553650]
[157.10493469 -195.47760010]
[162.96850586 -181.66604614]
[164.70439148 -166.74682617]
[162.16343689 -151.92808533]
[155.54312134 -138.41217041]
[145.37229919 -127.29824066]
[132.46894836 -119.49274445]
[117.87434387 -115.63558960]
[117.42773438 -100.64223480]
[116.98113251 -85.64888763]
[116.53452301 -70.65553284]
[116.08792114 -55.66218567]
[115.64131165 -40.66883469]
[123.70539093 -31.65233994]
[123.45602417 -19.15747643]
[114.48159027 -9.89344406]
[113.81180573 5.09159470]
[113.14201355 20.07663345]
[115.64662170 24.14308167]
[115.62329865 29.82608032]
[112.22261810 35.49590302]
[111.10696411 50.45435715]
[109.99131775 65.41281128]
[108.87567139 80.37126160]
[107.76001740 95.32971954]
[109.83705139 98.57907104]
[110.47172546 102.72817993]
[109.29432678 107.11232758]
[106.24586487 110.92634583]
[104.46340179 125.82006073]
[102.68093109 140.71377563]
[113.74310303 154.26544189]
[111.62340546 171.28959656]
[98.11819458 181.31196594]
[96.55767059 196.23057556]
[95.10825348 211.16038513]
[93.77001953 226.10057068]
[92.43178558 241.04075623]
[91.20480347 255.99049377]
[90.08915710 270.94894409]
[88.97351074 285.90737915]
[87.85785675 300.86584473]
[86.74221039 315.82431030]
[85.62656403 330.78274536]
[84.51091766 345.74121094]
[99.37231445 347.81350708]
[114.07040405 350.83374023]
[128.54479980 354.78945923]
[142.73599243 359.66445923]
[156.58569336 365.43865967]
[170.03698730 372.08834839]
[183.03459167 379.58621216]
[195.52510071 387.90142822]
[207.45718384 396.99984741]
[218.78181458 406.84405518]
[229.45245361 417.39358521]
[239.42524719 428.60516357]
[248.65924072 440.43261719]
[257.11645508 452.82742310]
[264.76214600 465.73861694]
[271.56491089 479.11315918]
[277.49679565 492.89605713]
[282.53338623 507.03070068]
[286.65405273 521.45904541]
[289.84179688 536.12170410]
[292.08355713 550.95849609]
[293.37011719 565.90838623]
[293.69616699 580.91003418]
[293.06042480 595.90173340]
[291.46542358 610.82196045]
[288.91778564 625.60925293]
[285.42791748 640.20300293]
[281.01022339 654.54315186]
[275.68280029 668.57073975]
[269.46759033 682.22821045]
[262.39010620 695.45941162]
[254.47943115 708.21002197]
[245.76806641 720.42755127]
[236.29182434 732.06182861]
[226.08964539 743.06506348]
[215.20343018 753.39202881]
[203.67794800 763.00024414]
[191.56053162 771.85034180]
[178.90098572 779.90588379]
[165.75131226 787.13372803]
[152.16558838 793.50427246]
[138.19960022 798.99127197]
[123.91075897 803.57214355]
[109.35778046 807.22814941]
[94.60045624 809.94421387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[59 158]
[60 157]
[61 156]
[63 155]
[64 154]
[68 151]
[69 150]
[70 149]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 138]
[77 137]
[78 136]
[80 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
