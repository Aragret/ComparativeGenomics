%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[101.14164734 698.33709717]
[86.89524078 693.60900879]
[73.13780975 687.60498047]
[59.98336029 680.37475586]
[47.54089737 671.97833252]
[35.91352463 662.48516846]
[25.19759178 651.97406006]
[15.48189640 640.53198242]
[6.84694672 628.25384521]
[-0.63570333 615.24133301]
[-6.90404892 601.60229492]
[-11.90614796 587.44976807]
[-15.60054970 572.90100098]
[-17.95664215 558.07659912]
[-18.95489883 543.09930420]
[-18.58704948 528.09332275]
[-16.85614395 513.18292236]
[-13.77652264 498.49172974]
[-9.37370586 484.14144897]
[-3.68417692 470.25100708]
[3.24491739 456.93551636]
[11.35615921 444.30526733]
[20.58233452 432.46496582]
[30.84699249 421.51269531]
[42.06507492 411.53921509]
[54.14361954 402.62722778]
[66.98254395 394.85049438]
[80.47544861 388.27352905]
[94.51054382 382.95077515]
[108.97150421 378.92639160]
[123.73851776 376.23370361]
[122.40028381 361.29351807]
[121.06204987 346.35333252]
[119.72381592 331.41314697]
[108.16503143 322.08950806]
[106.59504700 306.95709229]
[116.45290375 294.89639282]
[115.11466980 279.95620728]
[113.77643585 265.01602173]
[111.99397278 250.12231445]
[109.76885223 235.28826904]
[107.54373932 220.45422363]
[105.31861877 205.62017822]
[102.07859802 202.11143494]
[101.00835419 196.53007507]
[103.25493622 190.31199646]
[94.06005859 178.59432983]
[100.10264587 163.97251892]
[98.32018280 149.07879639]
[96.53771973 134.18507385]
[85.23409271 131.02539062]
[75.65338135 124.24560547]
[68.91348267 114.63679504]
[65.80081940 103.32012939]
[66.67858124 91.61607361]
[71.44435120 80.89026642]
[79.54205322 72.39421844]
[90.02681732 67.11926270]
[88.91117096 52.16081238]
[87.79552460 37.20235825]
[86.67987061 22.24390411]
[85.56422424 7.28545141]
[84.44857788 -7.67300177]
[73.73052979 -22.64647675]
[81.96128082 -38.14556122]
[80.62304688 -53.08574677]
[79.28481293 -68.02593231]
[69.90567017 -76.87999725]
[69.09862518 -89.35125732]
[76.75205231 -98.71884155]
[75.63639832 -113.67729950]
[74.52075195 -128.63574219]
[65.77847290 -141.82221985]
[72.54772949 -155.08972168]
[71.43208313 -170.04817200]
[70.31643677 -185.00662231]
[69.20078278 -199.96507263]
[52.30925369 -206.06753540]
[39.82700348 -218.90718079]
[34.23687744 -235.86355591]
[36.62166595 -253.50415039]
[46.45470047 -268.27932739]
[61.71529388 -277.23645020]
[59.93282700 -292.13018799]
[58.15036011 -307.02389526]
[56.36789703 -321.91760254]
[54.58543015 -336.81134033]
[39.58996201 -338.16397095]
[25.20352745 -342.60516357]
[12.05503845 -349.94076538]
[0.71929222 -359.85006714]
[-8.30816269 -371.89993286]
[-14.63268375 -385.56353760]
[-17.97779083 -400.24359131]
[-18.19725037 -415.29833984]
[-15.28146648 -430.06964111]
[-9.35790730 -443.91180420]
[-0.68552434 -456.21966553]
[10.35656261 -466.45520020]
[23.28564262 -474.17092896]
[37.53651047 -479.02957153]
[52.48617935 -480.81872559]
[67.48110962 -479.46020508]
[81.86579895 -475.01333618]
[95.01139832 -467.67257690]
[106.34324646 -457.75878906]
[115.36595917 -445.70541382]
[121.68510437 -432.03930664]
[125.02443695 -417.35794067]
[125.23797607 -402.30310059]
[122.31638336 -387.53292847]
[116.38737488 -373.69311523]
[107.71015167 -361.38867188]
[96.66403961 -351.15750122]
[83.73192596 -343.44683838]
[69.47914886 -338.59381104]
[71.26161194 -323.70007324]
[73.04407501 -308.80636597]
[74.82654572 -293.91265869]
[76.60900879 -279.01892090]
[88.54179382 -276.32318115]
[99.09320068 -270.08422852]
[107.23799896 -260.89080811]
[112.17947388 -249.61962891]
[113.42733002 -237.35168457]
[110.84629822 -225.26858521]
[104.67064667 -214.53877258]
[95.48296356 -206.20452881]
[84.15924072 -201.08073425]
[85.27488708 -186.12226868]
[86.39053345 -171.16381836]
[87.50618744 -156.20536804]
[96.16866302 -144.08882141]
[89.47920990 -129.75140381]
[90.59485626 -114.79294586]
[91.71050262 -99.83448792]
[102.35821533 -85.88482666]
[94.22499847 -69.36416626]
[95.56323242 -54.42398071]
[96.90146637 -39.48379517]
[105.97984314 -31.48944664]
[107.21702576 -19.05348396]
[99.40702820 -8.78865051]
[100.52268219 6.16980267]
[101.63832855 21.12825584]
[102.75397491 36.08670807]
[103.86962128 51.04516220]
[104.98527527 66.00361633]
[121.52423096 73.21726990]
[132.12748718 87.81674194]
[133.87100220 105.77597809]
[126.27398682 122.14237213]
[111.43143463 132.40261841]
[113.21389771 147.29632568]
[114.99636841 162.19004822]
[124.31873322 174.97300720]
[118.14865112 188.52952576]
[120.15266418 203.39506531]
[122.37778473 218.22911072]
[124.60289764 233.06314087]
[126.82801819 247.89718628]
[129.65209961 251.19544983]
[131.13099670 254.85296631]
[131.31694031 258.40274048]
[130.40849304 261.44268799]
[128.71662903 263.67779541]
[130.05485535 278.61798096]
[131.39309692 293.55816650]
[143.23744202 303.67492676]
[144.38177490 318.84545898]
[134.66400146 330.07489014]
[136.00222778 345.01507568]
[137.34046936 359.95526123]
[138.67869568 374.89544678]
[153.68917847 374.92089844]
[168.63516235 376.31124878]
[183.39277649 379.05493164]
[197.83975220 383.12924194]
[211.85636902 388.50045776]
[225.32647705 395.12399292]
[238.13847351 402.94500732]
[250.18615723 411.89868164]
[261.36972046 421.91085815]
[271.59646606 432.89849854]
[280.78170776 444.77059937]
[288.84927368 457.42880249]
[295.73233032 470.76815796]
[301.37384033 484.67819214]
[305.72705078 499.04357910]
[308.75592041 513.74530029]
[310.43530273 528.66162109]
[310.75131226 543.66876221]
[309.70132446 558.64251709]
[307.29403687 573.45874023]
[303.54940796 587.99462891]
[298.49844360 602.12982178]
[292.18301392 615.74713135]
[284.65545654 628.73370361]
[275.97814941 640.98193359]
[266.22299194 652.39031982]
[255.47080994 662.86437988]
[243.81071472 672.31732178]
[231.33930969 680.67071533]
[218.15997314 687.85540771]
[204.38188171 693.81188965]
[190.11921692 698.49078369]
[175.49018860 701.85327148]
[160.61598206 703.87152100]
[145.61987305 704.52886963]
[130.62612915 703.81976318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 174]
[32 173]
[33 172]
[34 171]
[37 168]
[38 167]
[39 166]
[40 161]
[41 160]
[42 159]
[43 158]
[46 157]
[48 155]
[49 154]
[50 153]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[65 140]
[66 139]
[67 138]
[70 136]
[71 135]
[72 134]
[74 132]
[75 131]
[76 130]
[77 129]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
