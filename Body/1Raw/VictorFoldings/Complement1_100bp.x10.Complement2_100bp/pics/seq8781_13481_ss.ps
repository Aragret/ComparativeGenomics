%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[34.14136505 629.82031250]
[22.12975883 638.81927490]
[9.41604996 646.79553223]
[-3.91291714 653.69470215]
[-17.76608849 659.46954346]
[-32.04883194 664.08074951]
[-46.66358185 667.49664307]
[-61.51050568 669.69403076]
[-76.48817444 670.65783691]
[-91.49427795 670.38153076]
[-106.42630768 668.86694336]
[-121.18226624 666.12445068]
[-135.66134644 662.17279053]
[-149.76464844 657.03887939]
[-163.39581299 650.75793457]
[-176.46174622 643.37274170]
[-188.87316895 634.93377686]
[-200.54533386 625.49871826]
[-211.39846802 615.13201904]
[-221.35845947 603.90441895]
[-230.35725403 591.89270020]
[-238.33338928 579.17889404]
[-245.23237610 565.84985352]
[-251.00708008 551.99664307]
[-255.61805725 537.71380615]
[-259.03381348 523.09906006]
[-261.23101807 508.25210571]
[-262.19467163 493.27441406]
[-261.91815186 478.26831055]
[-260.40341187 463.33630371]
[-257.66073608 448.58038330]
[-253.70886230 434.10134888]
[-248.57482910 419.99810791]
[-242.29368591 406.36700439]
[-234.90834045 393.30117798]
[-226.46925354 380.88983154]
[-217.03405762 369.21780396]
[-206.66720581 358.36477661]
[-195.43951416 348.40493774]
[-183.42770386 339.40628052]
[-170.71380615 331.43029785]
[-157.38467407 324.53146362]
[-143.53135681 318.75692749]
[-129.24850464 314.14611816]
[-114.63367462 310.73052979]
[-99.78670502 308.53347778]
[-84.80900574 307.57003784]
[-69.80290985 307.84671021]
[-54.87091446 309.36166382]
[-40.11502457 312.10452271]
[-25.63603973 316.05654907]
[-11.53286552 321.19073486]
[-5.25550508 307.56741333]
[0.92026323 293.89773560]
[6.99409723 280.18249512]
[6.82828283 272.79370117]
[13.26181602 266.30929565]
[19.53917694 252.68597412]
[25.81653786 239.06265259]
[15.46324921 229.40745544]
[8.58754539 217.00802612]
[5.87324572 203.07022095]
[7.59873056 188.95417786]
[13.60845184 176.04165649]
[23.32685661 165.60066223]
[35.81348038 158.66104126]
[49.85395432 155.91285706]
[64.07809448 157.63780212]
[70.55759430 144.10946655]
[77.03708649 130.58111572]
[83.51658630 117.05277252]
[89.99607849 103.52442169]
[95.76211548 89.67694092]
[100.79902649 75.54791260]
[105.83594513 61.41888046]
[110.87286377 47.28985214]
[99.66160583 37.06324768]
[93.23713684 23.36035728]
[92.55025482 8.28249836]
[97.67451477 -5.87128401]
[107.79978180 -16.95477486]
[121.36013031 -23.30002975]
[136.27598572 -23.96833229]
[141.31289673 -38.09736252]
[146.34982300 -52.22639084]
[151.38673401 -66.35542297]
[144.29800415 -75.89934540]
[142.71273804 -87.56072235]
[146.91012573 -98.42699432]
[155.73951721 -105.84033203]
[166.93299866 -108.04760742]
[172.38835144 -122.02040100]
[177.73954773 -136.03343201]
[182.98626709 -150.08589172]
[188.23297119 -164.13836670]
[193.47969055 -178.19084167]
[191.05819702 -193.82563782]
[202.75849915 -203.04258728]
[189.67120361 -210.43644714]
[177.90177917 -219.78669739]
[167.74003601 -230.86303711]
[159.43623352 -243.39273071]
[153.19483948 -257.06723022]
[149.16958618 -271.54977417]
[147.45957947 -286.48370361]
[148.10691833 -301.50125122]
[151.09568787 -316.23266602]
[156.35226440 -330.31509399]
[163.74720764 -343.40176392]
[173.09841919 -355.17041016]
[184.17561340 -365.33123779]
[196.70599365 -373.63403320]
[210.38099670 -379.87426758]
[224.86386108 -383.89834595]
[239.79792786 -385.60711670]
[254.81544495 -384.95852661]
[269.54660034 -381.96856689]
[283.62860107 -376.71081543]
[296.71466064 -369.31478882]
[308.48254395 -359.96261597]
[318.64245605 -348.88458252]
[326.94421387 -336.35351562]
[333.18331909 -322.67800903]
[337.20620728 -308.19479370]
[338.91375732 -293.26058960]
[338.26391602 -278.24313354]
[335.27273560 -263.51223755]
[330.01382446 -249.43066406]
[322.61669922 -236.34519958]
[313.26354980 -224.57807922]
[302.18469238 -214.41908264]
[289.65295410 -206.11837769]
[275.97689819 -199.88038635]
[261.49337769 -195.85870361]
[246.55902100 -194.15238953]
[231.54161072 -194.80345154]
[216.81097412 -197.79586792]
[219.60775757 -183.16619873]
[207.53216553 -172.94412231]
[202.28544617 -158.89164734]
[197.03872681 -144.83918762]
[191.79200745 -130.78671265]
[192.39732361 -123.42088318]
[186.36116028 -116.56504822]
[180.90579224 -102.59224701]
[189.25184631 -86.29933167]
[182.92977905 -68.77951050]
[165.51576233 -61.31850433]
[160.47885132 -47.18947601]
[155.44192505 -33.06044388]
[150.40501404 -18.93141556]
[161.53434753 -8.97815895]
[168.02265930 4.51432753]
[168.85317993 19.50349236]
[163.86825562 33.70694733]
[153.79811096 44.94999313]
[140.15411377 51.49859238]
[125.00189209 52.32676697]
[119.96497345 66.45579529]
[114.92805481 80.58482361]
[109.89114380 94.71385956]
[123.40566254 88.20556641]
[137.97235107 91.78488922]
[146.93151855 103.81540680]
[146.18714905 118.79692078]
[136.07957458 129.88009644]
[121.22982025 131.99784851]
[108.42700195 124.18196869]
[103.52442169 110.00392151]
[97.04492950 123.53226471]
[90.56542969 137.06060791]
[84.08593750 150.58895874]
[77.60643768 164.11730957]
[88.81506348 175.44013977]
[95.45769501 189.89215088]
[96.74790955 205.71832275]
[92.54801941 221.00367737]
[83.38354492 233.90495300]
[70.37751007 242.87297058]
[55.11287308 246.83854675]
[39.43985367 245.34001160]
[33.16249466 258.96331787]
[26.88513184 272.58663940]
[20.70936394 286.25631714]
[14.63552952 299.97158813]
[14.02200985 309.08538818]
[8.36781120 313.84478760]
[2.09045029 327.46810913]
[15.15655613 334.85296631]
[27.56819153 343.29162598]
[39.24057007 352.72640991]
[50.09395599 363.09286499]
[60.05421066 374.32019043]
[69.05329132 386.33169556]
[77.02973175 399.04531860]
[83.92903137 412.37420654]
[89.70407104 426.22729492]
[94.31539154 440.50997925]
[97.73150635 455.12469482]
[99.92906189 469.97158813]
[100.89305878 484.94924927]
[100.61691284 499.95535278]
[99.10250092 514.88739014]
[96.36017609 529.64337158]
[92.40866852 544.12249756]
[87.27497101 558.22589111]
[80.99415588 571.85711670]
[73.60912323 584.92315674]
[65.17031860 597.33465576]
[55.73540115 609.00695801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 188]
[53 187]
[54 185]
[55 184]
[57 183]
[58 182]
[59 181]
[68 173]
[69 172]
[70 171]
[71 170]
[72 169]
[73 161]
[74 160]
[75 159]
[76 158]
[83 151]
[84 150]
[85 149]
[86 148]
[91 145]
[92 144]
[93 142]
[94 141]
[95 140]
[96 139]
[98 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
