%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[9.41229725 497.99627686]
[-1.25218201 508.55087280]
[-12.51770592 518.46142578]
[-24.34543800 527.69366455]
[-36.69460678 536.21594238]
[-49.52264023 543.99871826]
[-62.78532028 551.01525879]
[-76.43692780 557.24133301]
[-90.43039703 562.65551758]
[-104.71749115 567.23913574]
[-119.24896240 570.97631836]
[-133.97471619 573.85430908]
[-148.84399414 575.86309814]
[-163.80552673 576.99572754]
[-178.80775452 577.24841309]
[-193.79893494 576.62017822]
[-208.72741699 575.11322021]
[-223.54173279 572.73278809]
[-238.19081116 569.48699951]
[-252.62414551 565.38708496]
[-266.79199219 560.44714355]
[-280.64550781 554.68432617]
[-294.13693237 548.11834717]
[-307.21975708 540.77191162]
[-319.84890747 532.67034912]
[-331.98080444 523.84155273]
[-343.57363892 514.31597900]
[-354.58749390 504.12649536]
[-364.98434448 493.30816650]
[-374.72836304 481.89834595]
[-383.78598022 469.93630981]
[-392.12597656 457.46334839]
[-399.71957397 444.52239990]
[-406.54058838 431.15811157]
[-412.56555176 417.41656494]
[-417.77365112 403.34509277]
[-422.14697266 388.99224854]
[-425.67041016 374.40744019]
[-428.33181763 359.64102173]
[-430.12200928 344.74386597]
[-431.03488159 329.76730347]
[-431.06719971 314.76300049]
[-430.21890259 299.78265381]
[-428.49291992 284.87789917]
[-425.89517212 270.10012817]
[-422.43463135 255.50030518]
[-418.12322998 241.12872314]
[-412.97583008 227.03494263]
[-407.01013184 213.26754761]
[-400.24676514 199.87399292]
[-392.70904541 186.90045166]
[-384.42288208 174.39164734]
[-375.41690063 162.39068604]
[-365.72213745 150.93896484]
[-355.37200928 140.07594299]
[-344.40219116 129.83906555]
[-332.85052490 120.26362610]
[-320.75677490 111.38263702]
[-308.16265869 103.22670746]
[-295.11163330 95.82395935]
[-281.64862061 89.19990540]
[-267.82006836 83.37738800]
[-253.67366028 78.37646484]
[-239.25811768 74.21438599]
[-224.62316895 70.90550232]
[-209.81925964 68.46120453]
[-194.89741516 66.88993835]
[-179.90907288 66.19710541]
[-164.90589905 66.38509369]
[-149.93962097 67.45326996]
[-135.06182861 69.39794159]
[-120.32379913 72.21240234]
[-105.77635956 75.88695526]
[-91.46963501 80.40892792]
[-77.45296478 85.76274109]
[-63.77465057 91.92993164]
[-50.48185349 98.88924408]
[-37.62039566 106.61668396]
[-25.23460960 115.08561707]
[-13.36719513 124.26684570]
[-2.05906200 134.12872314]
[8.65080833 144.63725281]
[18.72549820 155.75621033]
[30.41307831 146.35404968]
[42.10065842 136.95190430]
[53.78824234 127.54975128]
[65.47582245 118.14759827]
[77.16340637 108.74544525]
[88.85098267 99.34329987]
[100.46824646 89.85440063]
[112.01454926 80.27928162]
[123.56085205 70.70416260]
[114.83982849 58.49180984]
[107.02275848 45.68199921]
[100.15039825 32.34151840]
[94.25857544 18.53991890]
[89.37801361 4.34915257]
[85.53414917 -10.15679359]
[82.74702454 -24.90229034]
[81.03118134 -39.81046295]
[80.39554596 -54.80358505]
[80.84345245 -69.80348969]
[82.37255096 -84.73197174]
[84.97487640 -99.51120758]
[88.63685608 -114.06413269]
[93.33940887 -128.31488037]
[99.05800629 -142.18914795]
[105.76283264 -155.61460876]
[113.41894531 -168.52127075]
[121.98641205 -180.84182739]
[131.42057800 -192.51205444]
[141.67225647 -203.47111511]
[152.68798828 -213.66186523]
[164.41035461 -223.03115845]
[176.77822876 -231.53018188]
[189.72714233 -239.11460876]
[203.18957520 -245.74488831]
[217.09535217 -251.38645935]
[231.37194824 -256.00991821]
[245.94496155 -259.59115601]
[260.73840332 -262.11148071]
[275.67514038 -263.55776978]
[290.67727661 -263.92248535]
[305.66665649 -263.20373535]
[320.56509399 -261.40524292]
[335.29489136 -258.53637695]
[349.77929688 -254.61215210]
[363.94277954 -249.65296936]
[377.71151733 -243.68470764]
[391.01367188 -236.73846436]
[403.77993774 -228.85049438]
[415.94375610 -220.06187439]
[427.44168091 -210.41845703]
[438.21377563 -199.97052002]
[448.20388794 -188.77250671]
[457.35992432 -176.88282776]
[465.63418579 -164.36344910]
[472.98345947 -151.27966309]
[479.36950684 -137.69967651]
[484.75900269 -123.69427490]
[489.12384033 -109.33648682]
[492.44125366 -94.70117188]
[494.69396973 -79.86462402]
[495.87023926 -64.90420532]
[495.96392822 -49.89791107]
[494.97454834 -34.92396927]
[492.90725708 -20.06045723]
[489.77282715 -5.38486099]
[485.58758545 9.02630424]
[480.37341309 23.09790421]
[474.15740967 36.75657654]
[466.97204590 49.93110657]
[458.85476685 62.55281448]
[449.84790039 74.55589294]
[439.99838257 85.87776184]
[429.35754395 96.45938873]
[417.98092651 106.24562073]
[405.92782593 115.18541718]
[393.26104736 123.23218536]
[380.04663086 130.34396362]
[366.35351562 136.48367310]
[352.25305176 141.61930847]
[337.81875610 145.72410583]
[323.12591553 148.77664185]
[308.25109863 150.76100159]
[293.27188110 151.66687012]
[278.26632690 151.48948669]
[263.31271362 150.22981262]
[248.48896790 147.89437866]
[233.87237549 144.49539185]
[219.53915405 140.05055237]
[205.56404114 134.58303833]
[192.01986694 128.12136841]
[178.97726440 120.69921875]
[166.50422668 112.35528564]
[154.66580200 103.13307190]
[143.52368164 93.08066559]
[133.13597107 82.25045776]
[121.58966827 91.82557678]
[110.04336548 101.40070343]
[106.34212494 108.56124115]
[98.25313568 111.03087616]
[86.56555176 120.43302917]
[74.87797546 129.83517456]
[63.19039154 139.23733521]
[51.50281143 148.63948059]
[39.81523132 158.04164124]
[28.12764931 167.44378662]
[36.83030319 179.66647339]
[44.80063248 192.37884521]
[52.01116562 205.53706360]
[58.43704224 219.09577942]
[64.05611420 233.00823975]
[68.84900665 247.22648621]
[72.79920959 261.70150757]
[75.89308929 276.38342285]
[78.11998749 291.22158813]
[79.47222900 306.16488647]
[79.94515228 321.16177368]
[79.53712463 336.16058350]
[78.24955750 351.10958862]
[76.08688354 365.95724487]
[73.05655670 380.65240479]
[69.16902924 395.14437866]
[64.43770599 409.38323975]
[58.87888336 423.31988525]
[52.51173401 436.90628052]
[45.35820770 450.09558105]
[37.44295502 462.84231567]
[28.79327202 475.10253906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 188]
[84 187]
[85 186]
[86 185]
[87 184]
[88 183]
[89 182]
[90 180]
[91 179]
[92 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
