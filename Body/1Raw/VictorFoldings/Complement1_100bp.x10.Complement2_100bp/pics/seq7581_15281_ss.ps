%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[130.69955444 637.15924072]
[121.74702454 625.09973145]
[114.34437561 612.03143311]
[108.60381317 598.15246582]
[104.61237335 583.67327881]
[102.43055725 568.81329346]
[102.09143829 553.79779053]
[103.60016632 538.85443115]
[106.93386841 524.20977783]
[112.04200745 510.08581543]
[118.84713745 496.69665527]
[127.24609375 484.24526978]
[137.11155701 472.92041016]
[148.29397583 462.89379883]
[160.62380981 454.31738281]
[173.91415405 447.32122803]
[187.96353149 442.01135254]
[184.42385864 427.43496704]
[180.88418579 412.85861206]
[177.34451294 398.28222656]
[173.80484009 383.70584106]
[170.26516724 369.12948608]
[166.72549438 354.55310059]
[162.96919250 340.03103638]
[158.99710083 325.56652832]
[155.02500916 311.10198975]
[151.05290222 296.63748169]
[134.62515259 295.62585449]
[119.51295471 289.04092407]
[107.54981995 277.66241455]
[100.19377136 262.85281372]
[98.34960938 246.39422607]
[102.25771332 230.27395630]
[111.46281433 216.44444275]
[124.86698914 206.58692932]
[113.73603058 196.68991089]
[117.08384705 181.22695923]
[112.68284607 166.88711548]
[108.28184509 152.54727173]
[103.88085175 138.20742798]
[99.47985077 123.86757660]
[85.60165405 119.04256439]
[77.17742157 107.00440216]
[77.39817810 92.31304169]
[86.18029785 80.53342438]
[81.77930450 66.19357300]
[70.33355713 55.27087402]
[73.99615479 40.83361053]
[62.55040741 29.91090965]
[66.21300507 15.47364426]
[61.81200790 1.13379669]
[50.36626053 -9.78890419]
[54.02885818 -24.22616959]
[49.62786102 -38.56601715]
[44.11832428 -45.85181427]
[45.26980209 -53.15221786]
[41.08279037 -67.55599976]
[36.89577866 -81.95977783]
[32.70877075 -96.36356354]
[28.52175713 -110.76734161]
[24.33474731 -125.17112732]
[20.14773560 -139.57490540]
[5.41266203 -136.71258545]
[-9.52164745 -135.20208740]
[-24.53144073 -135.05589294]
[-39.49233627 -136.27523804]
[-54.28036499 -138.85000610]
[-68.77298737 -142.75886536]
[-82.85010529 -147.96943665]
[-96.39506531 -154.43852234]
[-109.29563904 -162.11253357]
[-121.44492340 -170.92787170]
[-132.74223328 -180.81149292]
[-143.09396362 -191.68148804]
[-152.41433716 -203.44779968]
[-160.62611389 -216.01290894]
[-167.66125488 -229.27270508]
[-173.46144104 -243.11730957]
[-177.97863770 -257.43197632]
[-181.17539978 -272.09814453]
[-183.02523804 -286.99423218]
[-183.51283264 -301.99679565]
[-182.63412476 -316.98156738]
[-180.39640808 -331.82434082]
[-176.81823730 -346.40213013]
[-171.92922974 -360.59411621]
[-165.76992798 -374.28274536]
[-158.39135742 -387.35455322]
[-149.85466003 -399.70120239]
[-140.23059082 -411.22042847]
[-129.59887695 -421.81674194]
[-118.04763031 -431.40237427]
[-105.67256927 -439.89782715]
[-92.57624054 -447.23278809]
[-78.86716461 -453.34640503]
[-64.65893555 -458.18804932]
[-50.06929779 -461.71759033]
[-35.21914673 -463.90582275]
[-20.23153877 -464.73455811]
[-5.23066425 -464.19692993]
[9.65916920 -462.29742432]
[24.31457901 -459.05178833]
[38.61412048 -454.48687744]
[52.43930435 -448.64056396]
[65.67556763 -441.56124878]
[78.21322632 -433.30761719]
[89.94838715 -423.94805908]
[100.78380585 -413.56015015]
[110.62969971 -402.22994995]
[119.40447998 -390.05133057]
[127.03543091 -377.12524414]
[133.45932007 -363.55877686]
[138.62292480 -349.46435547]
[142.48342896 -334.95880127]
[145.00888062 -320.16226196]
[146.17832947 -305.19738770]
[145.98208618 -290.18817139]
[144.42178345 -275.25897217]
[141.51036072 -260.53350830]
[137.27191162 -246.13383484]
[131.74159241 -232.17924500]
[124.96520233 -218.78536987]
[116.99890900 -206.06320190]
[107.90872192 -194.11817932]
[97.76996613 -183.04925537]
[86.66666412 -172.94818115]
[74.69081116 -163.89863586]
[61.94165039 -155.97563171]
[48.52482605 -149.24479675]
[34.55151749 -143.76191711]
[38.73852921 -129.35813904]
[42.92554092 -114.95435333]
[47.11255264 -100.55057526]
[51.29956055 -86.14678955]
[55.48657227 -71.74301147]
[59.67358398 -57.33922958]
[63.96770859 -42.96701431]
[68.36870575 -28.62716866]
[79.49966431 -18.73014832]
[76.15185547 -3.26720142]
[80.55285645 11.07264614]
[91.68381500 20.96966553]
[88.33599854 36.43261337]
[99.46696472 46.32963181]
[96.11914825 61.79257965]
[100.52014923 76.13242340]
[114.39834595 80.95743561]
[122.82257843 92.99559784]
[122.60182190 107.68695831]
[113.81970215 119.46657562]
[118.22069550 133.80642700]
[122.62169647 148.14627075]
[127.02268982 162.48611450]
[131.42369080 176.82595825]
[142.86944580 187.74867249]
[139.20683289 202.18592834]
[152.82617188 202.27433777]
[165.85321045 206.19001770]
[177.23605347 213.60688782]
[186.05836487 223.91656494]
[191.61309814 236.27827454]
[193.45919800 249.68734741]
[191.45658875 263.05694580]
[185.77677917 275.30612183]
[176.88815308 285.44717407]
[165.51742554 292.66537476]
[169.48953247 307.12988281]
[173.46162415 321.59442139]
[177.43371582 336.05892944]
[181.86149597 340.96875000]
[182.97752380 346.54113770]
[181.30187988 351.01342773]
[184.84155273 365.58981323]
[188.38122559 380.16616821]
[191.92089844 394.74255371]
[195.46055603 409.31893921]
[199.00022888 423.89529419]
[202.53990173 438.47167969]
[217.45983887 436.74673462]
[232.47865295 436.86840820]
[247.36866760 438.83486938]
[261.90417480 442.61624146]
[275.86480713 448.15524292]
[289.03890991 455.36791992]
[301.22677612 464.14489746]
[312.24365234 474.35311890]
[321.92251587 485.83786011]
[330.11663818 498.42498779]
[336.70181274 511.92370605]
[341.57818604 526.12939453]
[344.67184448 540.82659912]
[345.93588257 555.79260254]
[345.35116577 570.80053711]
[342.92651367 585.62286377]
[338.69873047 600.03485107]
[332.73187256 613.81805420]
[325.11639404 626.76348877]
[315.96777344 638.67492676]
[305.42468262 649.37176514]
[293.64697266 658.69189453]
[280.81314087 666.49395752]
[267.11779785 672.65979004]
[252.76852417 677.09582520]
[237.98287964 679.73480225]
[222.98500061 680.53674316]
[208.00224304 679.48950195]
[193.26174927 676.60900879]
[178.98698425 671.93878174]
[165.39434814 665.54974365]
[152.68989563 657.53875732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 169]
[25 168]
[26 167]
[27 166]
[35 156]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[45 146]
[46 145]
[48 143]
[50 141]
[51 140]
[53 138]
[54 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
