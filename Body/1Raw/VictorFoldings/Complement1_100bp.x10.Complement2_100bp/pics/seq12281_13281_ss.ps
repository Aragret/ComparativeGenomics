%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[56.23306274 303.96948242]
[54.17378616 289.08749390]
[54.16018677 274.06372070]
[56.19252014 259.17807007]
[60.23292542 244.70777893]
[66.20613098 230.92248535]
[74.00086212 218.07896423]
[83.47190857 206.41650391]
[94.44282532 196.15234375]
[106.70923615 187.47773743]
[120.04261780 180.55424500]
[115.00569916 166.42521667]
[109.96878815 152.29618835]
[104.76174927 147.05133057]
[104.96376801 137.91914368]
[100.13777161 123.71668243]
[95.31176758 109.51422882]
[89.85641479 95.54142761]
[83.78257751 81.82616425]
[77.70874786 68.11089325]
[71.63491058 54.39562988]
[57.35184097 57.31938934]
[42.77913666 57.20169830]
[28.55700493 54.05024719]
[15.30972004 48.00597000]
[3.61822772 39.33670425]
[-6.00533533 28.42535782]
[-13.14007378 15.75297165]
[-17.47474098 1.87752533]
[-18.82131577 -12.59063435]
[-17.12316132 -27.01564026]
[-12.45739365 -40.76405334]
[-5.03139162 -53.23267365]
[4.82642269 -63.87501526]
[16.68110847 -72.22524261]
[10.81214714 -86.02941895]
[4.94318628 -99.83359528]
[-0.92577457 -113.63777161]
[-6.79473543 -127.44194794]
[-20.92360687 -122.39165497]
[-35.32451630 -118.17926025]
[-49.94782257 -114.81928253]
[-64.74311066 -112.32330322]
[-79.65937805 -110.69992828]
[-94.64521790 -109.95475769]
[-109.64894867 -110.09035492]
[-124.61886597 -111.10625458]
[-139.50335693 -112.99895477]
[-154.25112915 -115.76193237]
[-168.81130981 -119.38565826]
[-183.13372803 -123.85764313]
[-197.16902161 -129.16247559]
[-210.86878967 -135.28186035]
[-224.18580627 -142.19470215]
[-237.07417297 -149.87718201]
[-249.48945618 -158.30281067]
[-261.38885498 -167.44253540]
[-272.73138428 -177.26486206]
[-283.47787476 -187.73593140]
[-293.59133911 -198.81962585]
[-303.03686523 -210.47776794]
[-311.78195190 -222.67013550]
[-319.79641724 -235.35473633]
[-327.05264282 -248.48780823]
[-333.52560425 -262.02410889]
[-339.19299316 -275.91696167]
[-344.03524780 -290.11846924]
[-348.03573608 -304.57968140]
[-351.18063354 -319.25073242]
[-353.45907593 -334.08108521]
[-354.86325073 -349.01959229]
[-355.38827515 -364.01473999]
[-355.03237915 -379.01486206]
[-353.79675293 -393.96826172]
[-351.68569946 -408.82336426]
[-348.70648193 -423.52896118]
[-344.86932373 -438.03436279]
[-340.18753052 -452.28958130]
[-334.67715454 -466.24545288]
[-328.35726929 -479.85388184]
[-321.24960327 -493.06796265]
[-313.37872314 -505.84213257]
[-304.77169800 -518.13232422]
[-295.45822144 -529.89624023]
[-285.47039795 -541.09332275]
[-274.84265137 -551.68487549]
[-263.61163330 -561.63452148]
[-251.81607056 -570.90783691]
[-239.49658203 -579.47296143]
[-226.69567871 -587.30029297]
[-213.45745850 -594.36285400]
[-199.82757568 -600.63635254]
[-185.85301208 -606.09912109]
[-171.58192444 -610.73236084]
[-157.06353760 -614.52008057]
[-142.34786987 -617.44915771]
[-127.48566437 -619.50958252]
[-112.52815247 -620.69427490]
[-97.52690125 -620.99902344]
[-82.53361511 -620.42291260]
[-67.59999084 -618.96789551]
[-52.77749252 -616.63891602]
[-38.11722565 -613.44403076]
[-23.66972923 -609.39434814]
[-9.48480225 -604.50366211]
[4.38865566 -598.78900146]
[17.90281868 -592.26995850]
[31.01109886 -584.96905518]
[43.66831207 -576.91143799]
[55.83082581 -568.12481689]
[67.45671082 -558.63964844]
[78.50588989 -548.48846436]
[88.94027710 -537.70635986]
[98.72389984 -526.33044434]
[107.82302856 -514.39996338]
[116.20630646 -501.95605469]
[123.84483337 -489.04159546]
[130.71226501 -475.70108032]
[136.78494263 -461.98056030]
[142.04191589 -447.92727661]
[146.46507263 -433.58969116]
[150.03916931 -419.01724243]
[152.75189209 -404.26016235]
[154.59385681 -389.36929321]
[155.55876160 -374.39599609]
[155.64323425 -359.39190674]
[154.84700012 -344.40869141]
[153.17282104 -329.49804688]
[150.62644958 -314.71133423]
[147.21667480 -300.09954834]
[142.95523071 -285.71310425]
[137.85682678 -271.60150146]
[131.93904114 -257.81344604]
[125.22225952 -244.39648438]
[117.72964478 -231.39682007]
[109.48701477 -218.85928345]
[100.52280426 -206.82711792]
[90.86789703 -195.34176636]
[80.55558014 -184.44284058]
[69.62140656 -174.16790771]
[58.10306168 -164.55238342]
[46.04026031 -155.62940979]
[33.47458267 -147.42976379]
[20.44934082 -139.98170471]
[7.00944138 -133.31091309]
[12.87840271 -119.50672913]
[18.74736404 -105.70255280]
[24.61632347 -91.89837646]
[30.48528481 -78.09420013]
[45.67995453 -80.91315460]
[61.12824249 -80.28849792]
[76.05915833 -76.24830627]
[89.72683716 -68.99121094]
[101.44780731 -58.87659836]
[110.63517761 -46.40685272]
[116.82800293 -32.20237732]
[119.71443176 -16.97074318]
[119.14738464 -1.47143066]
[115.15206909 13.52202892]
[107.92485809 27.26066399]
[97.82366180 39.05747604]
[85.35018158 48.32179642]
[91.42401123 62.03706360]
[97.49784851 75.75232697]
[103.57167816 89.46759796]
[109.97128296 75.90127563]
[124.04214478 70.70407104]
[137.72383118 76.85317230]
[143.17884827 90.82610321]
[137.28231812 104.61852264]
[123.41204834 110.32952118]
[109.51422882 104.68823242]
[114.34022522 118.89068604]
[119.16622162 133.09313965]
[124.09781647 147.25927734]
[129.13473511 161.38830566]
[134.17164612 175.51733398]
[148.87789917 172.44485474]
[163.86553955 171.40356445]
[178.85536194 172.41285706]
[193.56814575 175.45393372]
[207.72975159 180.47013855]
[221.07640076 187.36802673]
[233.35943604 196.01908875]
[244.35002136 206.26217651]
[253.84341431 217.90644836]
[261.66278076 230.73498535]
[267.66241455 244.50880432]
[271.73059082 258.97131348]
[273.79147339 273.85305786]
[273.80670166 288.87680054]
[271.77597046 303.76272583]
[267.73712158 318.23342896]
[261.76541138 332.01937866]
[253.97207642 344.86373901]
[244.50228882 356.52722168]
[233.53248596 366.79257202]
[221.26701355 375.46850586]
[207.93438721 382.39343262]
[193.78295898 387.43832397]
[179.07638550 390.50921631]
[164.08862305 391.54888916]
[149.09890747 390.53796387]
[134.38645935 387.49530029]
[120.22538757 382.47756958]
[106.87949371 375.57821655]
[94.59739685 366.92584229]
[83.60791779 356.68154907]
[74.11577606 345.03625488]
[66.29780579 332.20687866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 177]
[12 176]
[13 175]
[15 174]
[16 173]
[17 172]
[18 165]
[19 164]
[20 163]
[21 162]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
