%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[156.32696533 232.11674500]
[161.23815918 217.93272400]
[167.40106201 204.24604797]
[174.76600647 191.16691589]
[183.27372742 178.80064392]
[171.72743225 169.22552490]
[160.18112183 159.65040588]
[148.63482666 150.07528687]
[137.08853149 140.50016785]
[125.54222107 130.92503357]
[113.99591827 121.34992218]
[102.44962311 111.77480316]
[90.76203918 102.37265015]
[78.93576813 93.14555359]
[67.10949707 83.91845703]
[51.46967316 81.52964020]
[46.19478607 67.60036469]
[34.36851501 58.37326431]
[24.50696564 69.68090820]
[14.04262829 80.43314362]
[3.00673389 90.59787750]
[-8.56778240 100.14479065]
[-20.64637756 109.04537201]
[-33.19300461 117.27307129]
[-46.17021561 124.80333710]
[-59.53928757 131.61367798]
[-73.26032257 137.68379211]
[-87.29235840 142.99554443]
[-101.59353638 147.53309631]
[-116.12115479 151.28288269]
[-130.83187866 154.23374939]
[-145.68179321 156.37686157]
[-160.62658691 157.70582581]
[-175.62164307 158.21669006]
[-190.62223816 157.90792847]
[-205.58357239 156.78044128]
[-220.46101379 154.83761597]
[-235.21015930 152.08523560]
[-249.78698730 148.53153992]
[-264.14801025 144.18708801]
[-278.25033569 139.06489563]
[-292.05191040 133.18022156]
[-305.51153564 126.55062866]
[-318.58905029 119.19590759]
[-331.24539185 111.13801575]
[-343.44281006 102.40098572]
[-355.14492798 93.01090240]
[-366.31677246 82.99578857]
[-376.92504883 72.38552856]
[-386.93804932 61.21179199]
[-396.32595825 49.50792313]
[-405.06066895 37.30885696]
[-413.11621094 24.65099144]
[-420.46847534 11.57211018]
[-427.09552002 -1.88875699]
[-432.97760010 -15.69143772]
[-438.09716797 -29.79473877]
[-442.43890381 -44.15657043]
[-445.98986816 -58.73406982]
[-448.73947144 -73.48373413]
[-450.67950439 -88.36154175]
[-451.80416870 -103.32308960]
[-452.11010742 -118.32373047]
[-451.59643555 -133.31869507]
[-450.26464844 -148.26324463]
[-448.11874390 -163.11274719]
[-445.16513062 -177.82292175]
[-441.41259766 -192.34983826]
[-436.87237549 -206.65016174]
[-431.55798340 -220.68119812]
[-425.48529053 -234.40109253]
[-418.67242432 -247.76887512]
[-411.13973999 -260.74468994]
[-402.90966797 -273.28976440]
[-394.00683594 -285.36666870]
[-384.45773315 -296.93939209]
[-374.29092407 -307.97338867]
[-363.53674316 -318.43569946]
[-352.22723389 -328.29513550]
[-340.39620972 -337.52224731]
[-328.07894897 -346.08950806]
[-315.31219482 -353.97134399]
[-302.13409424 -361.14422607]
[-288.58395386 -367.58676147]
[-274.70217896 -373.27972412]
[-260.53027344 -378.20611572]
[-246.11045837 -382.35122681]
[-231.48579407 -385.70269775]
[-216.69995117 -388.25054932]
[-201.79702759 -389.98712158]
[-186.82150269 -390.90728760]
[-171.81808472 -391.00827026]
[-156.83152771 -390.28976440]
[-141.90658569 -388.75393677]
[-127.08777618 -386.40536499]
[-112.41933441 -383.25103760]
[-97.94503784 -379.30041504]
[-83.70807648 -374.56521606]
[-69.75095367 -369.05963135]
[-56.11531067 -362.80007935]
[-42.84184265 -355.80520630]
[-29.97016907 -348.09594727]
[-17.53870010 -339.69525146]
[-5.58453608 -330.62823486]
[5.85664558 -320.92193604]
[16.75070000 -310.60531616]
[27.06511497 -299.70919800]
[36.76910782 -288.26605225]
[45.83371735 -276.31005859]
[54.23189545 -263.87689209]
[61.93857193 -251.00367737]
[68.93074799 -237.72880554]
[75.18756104 -224.09188843]
[80.69033813 -210.13365173]
[85.42265320 -195.89575195]
[89.37037659 -181.42065430]
[92.52174377 -166.75157166]
[94.86733246 -151.93229675]
[96.40015411 -137.00703430]
[97.11563110 -122.02033997]
[97.01161957 -107.01693726]
[96.08844757 -92.04160309]
[94.34885406 -77.13903046]
[91.79803467 -62.35369492]
[88.44361115 -47.72971725]
[84.29557800 -33.31074524]
[79.36633301 -19.13981056]
[73.67057800 -5.25920439]
[67.22530365 8.28964806]
[60.04975891 21.46631050]
[52.16535187 34.23145676]
[43.59561539 46.54699707]
[55.42188263 55.77409363]
[70.21581268 57.50292206]
[76.33660126 72.09218597]
[88.16286469 81.31928253]
[99.98913574 90.54637909]
[105.20532990 91.09891510]
[109.74063873 94.53466034]
[112.02474213 100.22850037]
[123.57104492 109.80361938]
[135.11734009 119.37873840]
[146.66365051 128.95385742]
[158.20994568 138.52897644]
[169.75624084 148.10409546]
[181.30255127 157.67921448]
[192.84884644 167.25433350]
[203.42730713 156.60527039]
[214.91775513 146.94732666]
[227.22767639 138.35827637]
[240.25798035 130.90727234]
[253.90373230 124.65428925]
[268.05505371 119.64968872]
[282.59805298 115.93376923]
[297.41555786 113.53644562]
[312.38833618 112.47701263]
[327.39581299 112.76400757]
[342.31710815 114.39511871]
[357.03216553 117.35721588]
[371.42242432 121.62644958]
[385.37207031 127.16843414]
[398.76876831 133.93856812]
[411.50466919 141.88232422]
[423.47720337 150.93574524]
[434.58999634 161.02593994]
[444.75357056 172.07167053]
[453.88607788 183.98399353]
[461.91400146 196.66699219]
[468.77270508 210.01856995]
[474.40695190 223.93121338]
[478.77139282 238.29289246]
[481.83087158 252.98799133]
[483.56076050 267.89816284]
[483.94714355 282.90341187]
[482.98687744 297.88287354]
[480.68774414 312.71594238]
[477.06820679 327.28320312]
[472.15744019 341.46737671]
[465.99496460 355.15423584]
[458.63040161 368.23358154]
[450.12307739 380.60012817]
[440.54144287 392.15429688]
[429.96264648 402.80303955]
[418.47192383 412.46063232]
[406.16171265 421.04928589]
[393.13119507 428.49990845]
[379.48526001 434.75247192]
[365.33377075 439.75665283]
[350.79067993 443.47210693]
[335.97308350 445.86898804]
[321.00027466 446.92797852]
[305.99282837 446.64050293]
[291.07156372 445.00894165]
[276.35662842 442.04638672]
[261.96646118 437.77673340]
[248.01699829 432.23431396]
[234.62049866 425.46377563]
[221.88484192 417.51962280]
[209.91258240 408.46585083]
[198.80009460 398.37530518]
[188.63687134 387.32928467]
[179.50471497 375.41665649]
[171.47717285 362.73342896]
[164.61889648 349.38162231]
[158.98506165 335.46881104]
[154.62106323 321.10699463]
[151.56204224 306.41180420]
[149.83259583 291.50158691]
[149.44668579 276.49633789]
[150.40739441 261.51690674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 140]
[13 137]
[14 136]
[15 135]
[17 133]
[18 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
