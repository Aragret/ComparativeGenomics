%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[52.70338058 628.09490967]
[38.84333801 633.84344482]
[24.65272141 638.71923828]
[10.18643093 642.70330811]
[-4.49956560 645.78033447]
[-19.34845161 647.93835449]
[-34.30277634 649.16906738]
[-49.30468750 649.46765137]
[-64.29614258 648.83306885]
[-79.21914673 647.26763916]
[-94.01596069 644.77746582]
[-108.62934113 641.37225342]
[-123.00274658 637.06506348]
[-137.08056641 631.87261963]
[-150.80834961 625.81506348]
[-164.13298035 618.91571045]
[-177.00289917 611.20135498]
[-189.36831665 602.70172119]
[-201.18141174 593.44982910]
[-212.39645386 583.48144531]
[-222.97006226 572.83508301]
[-232.86134338 561.55194092]
[-242.03201294 549.67565918]
[-250.44660950 537.25225830]
[-258.07257080 524.32977295]
[-264.88037109 510.95812988]
[-270.84368896 497.18914795]
[-275.93948364 483.07604980]
[-280.14797974 468.67343140]
[-283.45294189 454.03704834]
[-285.84158325 439.22351074]
[-287.30462646 424.29013062]
[-287.83642578 409.29467773]
[-287.43496704 394.29516602]
[-286.10174561 379.34963989]
[-283.84191895 364.51589966]
[-280.66427612 349.85134888]
[-276.58108521 335.41268921]
[-271.60815430 321.25585938]
[-265.76470947 307.43554688]
[-259.07336426 294.00527954]
[-251.55999756 281.01696777]
[-243.25369263 268.52090454]
[-234.18656921 256.56539917]
[-224.39372253 245.19674683]
[-213.91302490 234.45889282]
[-202.78503418 224.39338684]
[-191.05279541 215.03918457]
[-178.76170349 206.43247986]
[-165.95930481 198.60653687]
[-152.69514465 191.59167480]
[-139.02052307 185.41499329]
[-124.98834991 180.10041809]
[-110.65291595 175.66850281]
[-96.06968689 172.13639832]
[-81.29506683 169.51776123]
[-66.38623047 167.82272339]
[-51.40085983 167.05783081]
[-36.39691925 167.22607422]
[-21.43246078 168.32678223]
[-6.56538296 170.35568237]
[8.14680004 173.30496216]
[22.64716721 177.16317749]
[36.87961960 181.91542053]
[50.78909302 187.54330444]
[57.26858902 174.01495361]
[63.74808502 160.48661804]
[70.12669373 146.91040039]
[76.40405273 133.28709412]
[82.68141174 119.66377258]
[88.95877075 106.04045868]
[94.93033600 92.28034973]
[100.59312439 78.39032745]
[106.25591278 64.50029755]
[101.98204803 52.33079147]
[106.98455048 40.87833786]
[118.08183289 36.06410599]
[123.95079803 22.25992775]
[129.81976318 8.45575047]
[135.68872070 -5.34842587]
[140.93544006 -19.40089798]
[145.54945374 -33.67362976]
[150.16345215 -47.94636536]
[154.77746582 -62.21909714]
[159.39147949 -76.49182892]
[164.00547791 -90.76456451]
[168.61949158 -105.03730011]
[154.90460205 -111.14744568]
[141.91690063 -118.68080902]
[129.80352783 -127.55202484]
[118.70175171 -137.66056824]
[108.73736572 -148.89190674]
[100.02326965 -161.11878967]
[92.65820312 -174.20266724]
[86.72560883 -187.99530029]
[82.29271698 -202.34037781]
[79.40975952 -217.07539368]
[78.10939026 -232.03337097]
[78.40634918 -247.04483032]
[80.29727936 -261.93969727]
[83.76074219 -276.54916382]
[88.75749969 -290.70770264]
[95.23093414 -304.25491333]
[103.10769653 -317.03726196]
[112.29853821 -328.90994263]
[122.69931793 -339.73840332]
[134.19218445 -349.39999390]
[146.64692688 -357.78518677]
[159.92240906 -364.79901123]
[173.86822510 -370.36196899]
[188.32633972 -374.41104126]
[203.13293457 -376.90032959]
[218.12025452 -377.80166626]
[233.11846924 -377.10479736]
[247.95764160 -374.81765747]
[262.46963501 -370.96612549]
[276.49002075 -365.59387207]
[289.85992432 -358.76174927]
[302.42785645 -350.54718018]
[314.05139160 -341.04324341]
[324.59887695 -330.35760498]
[333.95077515 -318.61135864]
[342.00112915 -305.93762207]
[348.65872192 -292.47994995]
[353.84808350 -278.39086914]
[357.51046753 -263.82998657]
[359.60433960 -248.96231079]
[360.10598755 -233.95629883]
[359.00973511 -218.98197937]
[356.32797241 -204.20901489]
[352.09112549 -189.80480957]
[346.34716797 -175.93255615]
[339.16122437 -162.74946594]
[330.61468506 -150.40487671]
[320.80438232 -139.03869629]
[309.84149170 -128.77969360]
[297.85021973 -119.74411011]
[284.96646118 -112.03433228]
[271.33618164 -105.73771667]
[257.11380005 -100.92560577]
[242.46051025 -97.65253448]
[227.54232788 -95.95557404]
[212.52827454 -95.85395813]
[197.58848572 -97.34884644]
[182.89222717 -100.42328644]
[178.27821350 -86.15055847]
[173.66421509 -71.87782288]
[169.05020142 -57.60508728]
[164.43618774 -43.33235550]
[159.82217407 -29.05962181]
[155.20817566 -14.78688812]
[169.02140808 -20.63448334]
[182.97491455 -15.12996006]
[189.07548523 -1.42656243]
[183.82843018 12.62578297]
[170.23950195 18.97725487]
[156.09306335 13.98943996]
[149.49288940 0.52053469]
[143.62393188 14.32471180]
[137.75497437 28.12888908]
[131.88601685 41.93306351]
[134.95018005 59.21247101]
[120.14593506 70.16308594]
[114.48314667 84.05311584]
[108.82036591 97.94313812]
[109.79718781 101.67385101]
[109.12482452 105.81700897]
[106.65594482 109.62642670]
[102.58209229 112.31781769]
[96.30472565 125.94113159]
[90.02736664 139.56445312]
[83.75000763 153.18775940]
[83.00086212 162.29142761]
[77.27642822 166.96611023]
[70.79693604 180.49444580]
[64.31743622 194.02279663]
[77.42112732 201.33306885]
[90.04498291 209.44383240]
[102.14018250 218.32374573]
[113.65991211 227.93843079]
[124.55962372 238.25070190]
[134.79713440 249.22065735]
[144.33283997 260.80584717]
[153.12985229 272.96148682]
[161.15412903 285.64050293]
[168.37463379 298.79385376]
[174.76342773 312.37066650]
[180.29579163 326.31838989]
[184.95033264 340.58309937]
[188.70903015 355.10958862]
[191.55735779 369.84164429]
[193.48428345 384.72229004]
[194.48234558 399.69393921]
[194.54769897 414.69869995]
[193.68008423 429.67846680]
[191.88284302 444.57531738]
[189.16296387 459.33163452]
[185.53092957 473.89031982]
[181.00082397 488.19500732]
[175.59014893 502.19039917]
[169.31987000 515.82238770]
[162.21420288 529.03808594]
[154.30067444 541.78656006]
[145.60987854 554.01831055]
[136.17544556 565.68615723]
[126.03387451 576.74487305]
[115.22440338 587.15167236]
[103.78885651 596.86633301]
[91.77146912 605.85125732]
[79.21873474 614.07171631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 176]
[66 175]
[67 174]
[68 172]
[69 171]
[70 170]
[71 169]
[72 165]
[73 164]
[74 163]
[77 161]
[78 160]
[79 159]
[80 158]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
