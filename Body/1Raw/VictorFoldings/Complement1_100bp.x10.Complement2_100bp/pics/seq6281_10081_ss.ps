%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[69.37400055 502.43191528]
[54.93797302 507.19317627]
[39.77914047 506.06259155]
[26.20911789 499.21255493]
[16.29723167 487.68765259]
[11.55497742 473.24539185]
[12.70551109 458.08804321]
[19.57338524 444.52706909]
[31.11129951 434.63034058]
[45.55980301 429.90707397]
[46.67545319 414.94863892]
[39.90619659 401.68115234]
[48.64847565 388.49465942]
[41.87921524 375.22717285]
[50.62149429 362.04067993]
[51.73714447 347.08224487]
[39.35084534 338.80908203]
[32.72458649 325.35736084]
[33.72777939 310.29550171]
[42.19091797 297.67520142]
[55.92429352 290.94155884]
[57.03993988 275.98312378]
[58.15559006 261.02465820]
[59.27124023 246.06620789]
[60.38688660 231.10774231]
[51.60573196 243.26879883]
[38.67853165 250.87719727]
[23.78375435 252.65075684]
[9.43142509 248.29063416]
[-1.95983338 238.53158569]
[-8.47039413 225.01815796]
[-9.00311470 210.02761841]
[-3.46822071 196.08613586]
[7.20156002 185.54309082]
[21.20818329 180.17517090]
[36.19128418 180.88697815]
[49.62594986 187.55853271]
[59.24820328 199.06559753]
[63.43664932 213.47064209]
[67.40874481 199.00611877]
[71.38084412 184.54159546]
[75.35293579 170.07707214]
[64.50066376 153.89862061]
[69.11667633 134.65814209]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[105.35592651 42.55607605]
[108.67818451 27.92861557]
[107.52719879 18.86699104]
[112.16033173 13.10888100]
[115.70000458 -1.46749461]
[116.70426941 -16.43383980]
[115.14374542 -31.35244370]
[113.58322144 -46.27104950]
[112.02269745 -61.18965149]
[102.89168549 -74.10999298]
[109.26291656 -87.57315063]
[107.70239258 -102.49175262]
[92.29193115 -104.08505249]
[77.55210876 -108.83726501]
[64.12284851 -116.53961182]
[52.58668900 -126.85528564]
[43.44347000 -139.33418274]
[37.08869934 -153.43254089]
[33.79644775 -168.53660583]
[33.70751953 -183.98941040]
[36.82344055 -199.11930847]
[43.00648117 -213.26916504]
[51.98575974 -225.82489014]
[63.36909103 -236.24214172]
[76.66012573 -244.06987000]
[91.28000641 -248.96986389]
[89.49754333 -263.86358643]
[87.71507263 -278.75729370]
[85.93260956 -293.65100098]
[76.61024475 -306.43395996]
[82.78032684 -319.99050903]
[80.99785614 -334.88421631]
[79.21539307 -349.77792358]
[77.32209778 -364.65795898]
[75.31808472 -379.52349854]
[73.31407166 -394.38903809]
[58.29648209 -395.41705322]
[43.79333496 -399.44738770]
[30.39852905 -406.31500244]
[18.66057014 -415.73864746]
[9.06012344 -427.33245850]
[1.99031806 -440.62164307]
[-2.25934029 -455.06207275]
[-3.51483083 -470.06234741]
[-1.72474205 -485.00827026]
[3.03762293 -499.28778076]
[10.57724857 -512.31616211]
[20.58539009 -523.55993652]
[32.65222549 -532.55859375]
[46.28361893 -538.94378662]
[60.92137527 -542.45385742]
[75.96609497 -542.94525146]
[90.80168915 -540.39770508]
[104.82067108 -534.91564941]
[117.44895172 -526.72351074]
[128.16943359 -516.15673828]
[136.54309082 -503.64807129]
[142.22705078 -489.70971680]
[144.98855591 -474.91247559]
[144.71450806 -459.86221313]
[141.41615295 -445.17529297]
[135.22854614 -431.45312500]
[126.40505219 -419.25759888]
[115.30700684 -409.08810425]
[102.38886261 -401.36111450]
[88.17960358 -396.39303589]
[90.18361664 -381.52749634]
[92.18762970 -366.66198730]
[96.19657898 -360.45309448]
[94.10910797 -351.56039429]
[95.89157867 -336.66668701]
[97.67404175 -321.77294922]
[106.86891174 -310.05529785]
[100.82632446 -295.43347168]
[102.60879517 -280.53976440]
[104.39125824 -265.64605713]
[106.17372131 -250.75233459]
[120.66867065 -249.60168457]
[134.66314697 -245.63598633]
[147.61567688 -239.00663757]
[159.02476501 -229.96813965]
[168.44818115 -218.86834717]
[175.52020264 -206.13502502]
[179.96578979 -192.25941467]
[181.61125183 -177.77723694]
[180.39105225 -163.24806213]
[176.35041809 -149.23364258]
[169.64366150 -136.27619934]
[160.52827454 -124.87748718]
[149.35508728 -115.47928619]
[136.55471802 -108.44637299]
[122.62100220 -104.05227661]
[124.18152618 -89.13367462]
[133.20091248 -77.28041077]
[126.94129944 -62.75017548]
[128.50183105 -47.83156967]
[130.06234741 -32.91296768]
[131.62286377 -17.99436188]
[136.87197876 -32.04594040]
[145.40869141 -44.37981796]
[156.71098328 -54.24177170]
[170.08772278 -61.02874374]
[184.72090149 -64.32570648]
[199.71571350 -63.93104172]
[214.15519714 -59.86889267]
[227.15640259 -52.38766098]
[237.92427063 -41.94482040]
[245.80036926 -29.17896271]
[250.30305481 -14.87071800]
[251.15698242 0.10495517]
[248.30995178 14.83228970]
[241.93605042 28.41070366]
[232.42503357 40.00987244]
[220.35852051 48.92050171]
[206.47438049 54.59770203]
[191.62162781 56.69430923]
[176.70852661 55.08211899]
[162.64698792 49.85971832]
[150.29692078 41.34645081]
[140.41351318 30.06291580]
[133.60113525 16.69909859]
[130.27638245 2.07217789]
[126.73670959 16.64855385]
[123.30564880 31.25087547]
[119.98339081 45.87833405]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[109.04579163 135.51359558]
[113.03240204 145.32247925]
[112.59116364 155.82051086]
[107.86867523 165.11627197]
[99.77681732 171.56275940]
[89.81745911 174.04917908]
[85.84536743 188.51370239]
[81.87326813 202.97822571]
[77.90117645 217.44274902]
[75.34533691 232.22340393]
[74.22969055 247.18185425]
[73.11404419 262.14028931]
[71.99839783 277.09875488]
[70.88274384 292.05722046]
[83.46530151 300.75357056]
[89.96269989 314.48968506]
[88.72049713 329.53372192]
[80.17210388 341.85366821]
[66.69559479 348.19787598]
[65.57994843 363.15634155]
[72.26940918 377.49377441]
[63.60692596 389.61032104]
[70.29638672 403.94772339]
[61.63390732 416.06427002]
[60.51825714 431.02273560]
[74.10625458 437.83703613]
[84.04843140 449.33581543]
[88.82866669 463.76556396]
[87.71800995 478.92587280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 206]
[11 205]
[13 203]
[15 201]
[16 200]
[21 195]
[22 194]
[23 193]
[24 192]
[25 191]
[39 190]
[40 189]
[41 188]
[42 187]
[45 181]
[46 180]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[54 173]
[55 172]
[56 148]
[57 147]
[58 146]
[59 145]
[61 143]
[62 142]
[76 127]
[77 126]
[78 125]
[79 124]
[81 122]
[82 121]
[83 120]
[84 118]
[85 117]
[86 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
