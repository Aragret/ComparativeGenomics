%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[78.10959625 506.09091187]
[66.28067780 496.85876465]
[55.06756973 486.88772583]
[44.51634979 476.21871948]
[34.67037582 464.89562988]
[25.57010460 452.96496582]
[17.25293541 440.47573853]
[9.75304508 427.47930908]
[3.10125136 414.02905273]
[-2.67511225 400.18026733]
[-7.55230856 385.98980713]
[-11.51029587 371.51605225]
[-14.53281116 356.81842041]
[-16.60743141 341.95736694]
[-17.72563553 326.99389648]
[-17.88282585 311.98953247]
[-17.07835579 297.00592041]
[-15.31553173 282.10464478]
[-12.60159874 267.34692383]
[-8.94770908 252.79341125]
[-4.36887550 238.50390625]
[1.11608458 224.53712463]
[7.48463297 210.95046997]
[14.71059990 197.79975891]
[22.76429176 185.13903809]
[31.61261368 173.02033997]
[41.21920776 161.49345398]
[51.54459381 150.60575867]
[62.54634476 140.40197754]
[74.17925262 130.92405701]
[86.39551544 122.21092224]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[73.47532654 66.32765198]
[66.39822388 53.10212326]
[59.32111740 39.87659454]
[52.24401093 26.65106773]
[45.16690826 13.42553997]
[38.08980179 0.20001215]
[24.42915916 6.40853405]
[10.39528656 11.71978092]
[-3.95295119 16.11147690]
[-18.55537224 19.56519890]
[-33.35073090 22.06646347]
[-48.27696609 23.60477638]
[-63.27147293 24.17368889]
[-78.27136230 23.77081299]
[-93.21370697 22.39783859]
[-108.03585052 20.06052399]
[-122.67561340 16.76867294]
[-137.07159424 12.53609276]
[-151.16340637 7.38053751]
[-164.89193726 1.32363009]
[-178.19963074 -5.60922384]
[-191.03063965 -13.38894463]
[-203.33116150 -21.98290253]
[-215.04959106 -31.35505104]
[-226.13679504 -41.46607971]
[-236.54624939 -52.27357864]
[-246.23431396 -63.73221588]
[-255.16033936 -75.79393005]
[-263.28689575 -88.40813446]
[-270.57989502 -101.52191162]
[-277.00872803 -115.08026886]
[-282.54644775 -129.02632141]
[-287.16983032 -143.30158997]
[-290.85946655 -157.84619141]
[-293.59991455 -172.59912109]
[-295.37963867 -187.49850464]
[-296.19119263 -202.48182678]
[-296.03118896 -217.48628235]
[-294.90026855 -232.44889832]
[-292.80319214 -247.30693054]
[-289.74874878 -261.99804688]
[-285.74975586 -276.46066284]
[-280.82299805 -290.63409424]
[-274.98910522 -304.45886230]
[-268.27258301 -317.87704468]
[-260.70156860 -330.83230591]
[-252.30784607 -343.27032471]
[-243.12661743 -355.13894653]
[-233.19639587 -366.38836670]
[-222.55880737 -376.97140503]
[-211.25849915 -386.84368896]
[-199.34284973 -395.96377563]
[-186.86184692 -404.29345703]
[-173.86784363 -411.79776001]
[-160.41532898 -418.44525146]
[-146.56074524 -424.20797729]
[-132.36219788 -429.06182861]
[-117.87921906 -432.98645020]
[-103.17258453 -435.96533203]
[-88.30397034 -437.98602295]
[-73.33573151 -439.04000854]
[-58.33066940 -439.12289429]
[-43.35170364 -438.23434448]
[-28.46166992 -436.37805176]
[-13.72302151 -433.56182861]
[0.80242318 -429.79745483]
[15.05373859 -425.10076904]
[28.97114754 -419.49142456]
[42.49627686 -412.99298096]
[55.57239914 -405.63269043]
[68.14466095 -397.44140625]
[80.16033936 -388.45352173]
[91.56903076 -378.70666504]
[102.32288361 -368.24179077]
[112.37679291 -357.10278320]
[121.68858337 -345.33633423]
[130.21920776 -332.99179077]
[137.93287659 -320.12097168]
[144.79722595 -306.77783203]
[150.78349304 -293.01834106]
[155.86654663 -278.90020752]
[160.02508545 -264.48266602]
[163.24163818 -249.82617188]
[165.50273132 -234.99221802]
[166.79888916 -220.04301453]
[167.12466431 -205.04124451]
[166.47868347 -190.04986572]
[164.86367798 -175.13172913]
[162.28639221 -160.34942627]
[158.75765991 -145.76495361]
[154.29228210 -131.43948364]
[148.90896606 -117.43309021]
[142.63031006 -103.80453491]
[135.48265076 -90.61098480]
[127.49595642 -77.90777588]
[118.70372772 -65.74817657]
[109.14285278 -54.18320847]
[98.85343170 -43.26136780]
[87.87860870 -33.02846527]
[76.26443481 -23.52742386]
[64.05960846 -14.79809570]
[51.31533051 -6.87709332]
[58.39243317 6.34843445]
[65.46954346 19.57396126]
[72.54664612 32.79948807]
[79.62374878 46.02501678]
[86.70085907 59.25054550]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[126.02690125 101.00379181]
[140.05363464 95.67404175]
[154.39303589 91.25394440]
[168.98617554 87.76165009]
[183.77307129 85.21153259]
[198.69299316 83.61405182]
[213.68460083 82.97577667]
[228.68629456 83.29933167]
[243.63644409 84.58338928]
[258.47360229 86.82266998]
[273.13681030 90.00797272]
[287.56579590 94.12621307]
[301.70129395 99.16046143]
[315.48516846 105.09003448]
[328.86083984 111.89056396]
[341.77331543 119.53410339]
[354.16952515 127.98925018]
[365.99856567 137.22125244]
[377.21179199 147.19218445]
[387.76312256 157.86105347]
[397.60922241 169.18403625]
[406.70962524 181.11460876]
[415.02691650 193.60372925]
[422.52694702 206.60006714]
[429.17889404 220.05024719]
[434.95541382 233.89898682]
[439.83276367 248.08937073]
[443.79092407 262.56311035]
[446.81359863 277.26068115]
[448.88839722 292.12173462]
[450.00674438 307.08520508]
[450.16412354 322.08956909]
[449.35980225 337.07318115]
[447.59713745 351.97448730]
[444.88339233 366.73223877]
[441.22964478 381.28576660]
[436.65097046 395.57534790]
[431.16616821 409.54217529]
[424.79776001 423.12890625]
[417.57196045 436.27969360]
[409.51840210 448.94049072]
[400.67022705 461.05929565]
[391.06375122 472.58627319]
[380.73849487 483.47409058]
[369.73684692 493.67800903]
[358.10403442 503.15606689]
[345.88787842 511.86932373]
[333.13854980 519.78198242]
[319.90844727 526.86151123]
[306.25192261 533.07885742]
[292.22512817 538.40850830]
[277.88568115 542.82843018]
[263.29251099 546.32055664]
[248.50558472 548.87048340]
[233.58564758 550.46783447]
[218.59403992 551.10595703]
[203.59234619 550.78222656]
[188.64221191 549.49798584]
[173.80508423 547.25854492]
[159.14190674 544.07305908]
[144.71296692 539.95465088]
[130.57752991 534.92028809]
[116.79370117 528.99053955]
[103.41810608 522.18988037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 146]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
