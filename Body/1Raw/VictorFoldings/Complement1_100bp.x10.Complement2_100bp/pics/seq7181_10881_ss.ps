%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[39.29259491 188.82739258]
[38.74890518 203.82344055]
[37.18311310 218.74740601]
[34.60251617 233.52973938]
[31.01915359 248.10150146]
[26.44972610 262.39474487]
[20.91554070 276.34286499]
[14.44239998 289.88076782]
[7.06048679 302.94537354]
[-1.19578171 315.47576904]
[-10.28791142 327.41354370]
[-20.17350960 338.70297241]
[-30.80648232 349.29150391]
[-42.13725662 359.12969971]
[-54.11300278 368.17172241]
[-66.67788696 376.37542725]
[-79.77331543 383.70251465]
[-93.33823395 390.11886597]
[-107.30940247 395.59457397]
[-121.62168121 400.10406494]
[-136.20832825 403.62634277]
[-151.00134277 406.14495850]
[-165.93174744 407.64819336]
[-180.92993164 408.12905884]
[-195.92596436 407.58526611]
[-210.84992981 406.01937866]
[-225.63224792 403.43869019]
[-240.20397949 399.85522461]
[-254.49720764 395.28570557]
[-268.44528198 389.75140381]
[-281.98315430 383.27819824]
[-295.04769897 375.89617920]
[-307.57803345 367.63983154]
[-319.51574707 358.54760742]
[-330.80511475 348.66195679]
[-341.39355469 338.02890015]
[-351.23168945 326.69805908]
[-360.27365112 314.72225952]
[-368.47723389 302.15731812]
[-375.80426025 289.06182861]
[-382.22052002 275.49688721]
[-387.69610596 261.52566528]
[-392.20550537 247.21336365]
[-395.72769165 232.62669373]
[-398.24621582 217.83366394]
[-399.74935913 202.90324402]
[-400.23010254 187.90505981]
[-399.68621826 172.90902710]
[-398.12023926 157.98507690]
[-395.53942871 143.20277405]
[-391.95587158 128.63105774]
[-387.38626099 114.33787537]
[-381.85189819 100.38984680]
[-375.37857056 86.85201263]
[-367.99649048 73.78749847]
[-359.74005127 61.25721741]
[-350.64776611 49.31958771]
[-340.76199341 38.03026962]
[-330.12887573 27.44190025]
[-318.79797363 17.60384750]
[-306.82211304 8.56198025]
[-294.25711060 0.35845879]
[-281.16159058 -6.96846962]
[-267.59658813 -13.38464355]
[-253.62533569 -18.86014557]
[-239.31300354 -23.36944962]
[-224.72631836 -26.89152718]
[-209.93325806 -29.40995789]
[-195.00283813 -30.91300011]
[-180.00465393 -31.39364815]
[-165.00862122 -30.84965515]
[-150.08467102 -29.28356361]
[-135.30239868 -26.70267105]
[-120.73071289 -23.11901283]
[-106.43754578 -18.54929924]
[-92.48955536 -13.01483345]
[-78.95177460 -6.54142094]
[-65.88730621 0.84075511]
[-53.35707855 9.09727573]
[-41.41950989 18.18964577]
[-30.13025856 28.07546997]
[-19.54195976 38.70865631]
[-9.70398235 50.03963089]
[-0.66219610 62.01556015]
[7.54124165 74.58060455]
[14.86808205 87.67617798]
[21.28416443 101.24123383]
[26.75957489 115.21250916]
[41.06626129 110.70487976]
[55.37294769 106.19725800]
[69.67963409 101.68962860]
[83.98632050 97.18199921]
[94.99849701 84.52861023]
[111.33372498 88.34127808]
[125.57171631 83.62114716]
[139.80970764 78.90101624]
[135.95654297 64.39958954]
[132.98597717 49.69197845]
[130.90885925 34.83183670]
[129.73277283 19.87339592]
[129.46199036 4.87123537]
[130.09751892 -10.11990356]
[131.63703918 -25.04531860]
[134.07492065 -39.85055161]
[137.40228271 -54.48157501]
[141.60696411 -68.88500214]
[146.67364502 -83.00827789]
[152.58381653 -96.79986572]
[159.31593323 -110.20944977]
[166.84541321 -123.18808746]
[175.14479065 -135.68843079]
[184.18377686 -147.66485596]
[193.92939758 -159.07366943]
[204.34609985 -169.87324524]
[215.39584351 -180.02415466]
[227.03833008 -189.48939514]
[239.23106384 -198.23440552]
[251.92958069 -206.22726440]
[265.08752441 -213.43884277]
[278.65689087 -219.84278870]
[292.58816528 -225.41575623]
[306.83047485 -230.13740540]
[321.33193970 -233.99050903]
[336.03955078 -236.96099854]
[350.89971924 -239.03805542]
[365.85815430 -240.21406555]
[380.86032104 -240.48477173]
[395.85144043 -239.84918213]
[410.77685547 -238.30958557]
[425.58209229 -235.87164307]
[440.21307373 -232.54421997]
[454.61648560 -228.33946228]
[468.73974609 -223.27272034]
[482.53131104 -217.36247253]
[495.94085693 -210.63031006]
[508.91946411 -203.10075378]
[521.41973877 -194.80133057]
[533.39611816 -185.76228333]
[544.80493164 -176.01660156]
[555.60443115 -165.59986877]
[565.75531006 -154.55007935]
[575.22052002 -142.90754700]
[583.96545410 -130.71475220]
[591.95825195 -118.01621246]
[599.16973877 -104.85823059]
[605.57366943 -91.28884125]
[611.14654541 -77.35755157]
[615.86816406 -63.11519241]
[619.72119141 -48.61373520]
[622.69158936 -33.90609360]
[624.76855469 -19.04593468]
[625.94451904 -4.08748245]
[626.21514893 10.91468048]
[625.57946777 25.90581322]
[624.03985596 40.83121490]
[621.60180664 55.63642502]
[618.27435303 70.26741791]
[614.06951904 84.67080688]
[609.00268555 98.79403687]
[603.09240723 112.58557129]
[596.36016846 125.99508667]
[588.83056641 138.97366333]
[580.53106689 151.47392273]
[571.49194336 163.45025635]
[561.74621582 174.85897827]
[551.32946777 185.65846252]
[540.27960205 195.80928040]
[528.63702393 205.27439880]
[516.44421387 214.01930237]
[503.74560547 222.01205444]
[490.58761597 229.22349548]
[477.01818848 235.62731934]
[463.08685303 241.20016479]
[448.84448242 245.92167664]
[434.34301758 249.77464294]
[419.63534546 252.74501038]
[404.77517700 254.82191467]
[389.81674194 255.99780273]
[374.81457520 256.26837158]
[359.82342529 255.63262939]
[344.89804077 254.09289551]
[330.09283447 251.65481567]
[315.46185303 248.32725525]
[301.05850220 244.12236023]
[286.93530273 239.05549622]
[273.14376831 233.14512634]
[259.73428345 226.41282654]
[246.75576782 218.88316345]
[234.25553894 210.58360291]
[222.27923584 201.54444885]
[210.87055969 191.79867554]
[200.07113647 181.38183594]
[189.92036438 170.33193970]
[180.45529175 158.68933105]
[171.71044922 146.49645996]
[163.71775818 133.79783630]
[156.50637817 120.63979340]
[150.10261536 107.07034302]
[144.52983093 93.13899994]
[130.29185486 97.85913849]
[116.05386353 102.57926941]
[110.21066284 112.65390778]
[99.12882996 116.23638153]
[88.49394989 111.48868561]
[74.18726349 115.99631500]
[59.88057709 120.50394440]
[45.57389069 125.01156616]
[31.26720238 129.51919556]
[34.78957367 144.10581970]
[37.30830383 158.89881897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 208]
[89 207]
[90 206]
[91 205]
[92 204]
[94 201]
[95 200]
[96 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
