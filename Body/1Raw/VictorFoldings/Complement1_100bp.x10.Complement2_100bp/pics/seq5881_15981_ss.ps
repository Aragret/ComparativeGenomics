%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[133.36814880 550.04455566]
[137.04280090 535.46740723]
[143.00833130 521.66851807]
[151.11021423 509.00537109]
[161.13859558 497.80590820]
[172.83372498 488.36026001]
[185.89265442 480.91308594]
[180.64593506 466.86062622]
[175.39921570 452.80813599]
[170.15249634 438.75567627]
[164.86795044 433.58892822]
[164.93399048 424.45474243]
[159.89706421 410.32571411]
[154.02810669 396.52151489]
[147.34791565 383.09115601]
[140.66772461 369.66076660]
[133.98751831 356.23040771]
[127.30732727 342.80001831]
[120.62713623 329.36965942]
[114.83374023 324.78070068]
[113.94913483 315.68920898]
[107.46964264 302.16085815]
[100.99014282 288.63250732]
[100.80716705 303.63140869]
[97.64939117 318.29525757]
[91.64259338 332.04000854]
[83.02601624 344.31823730]
[72.14286804 354.64086914]
[59.42660141 362.59680176]
[45.38371658 367.86911011]
[30.57352638 370.24783325]
[15.58591843 369.63821411]
[1.01784480 366.06451416]
[-12.55045509 359.66909790]
[-24.57856178 350.70669556]
[-34.58739853 339.53427124]
[-42.17832184 326.59683228]
[-47.04898071 312.40960693]
[-49.00538635 297.53775024]
[-47.96960831 282.57354736]
[-43.98291016 268.11303711]
[-37.20407104 254.73219299]
[-27.90309715 242.96392822]
[-16.45043755 233.27700806]
[-3.30225086 226.05722046]
[11.01777744 221.59216309]
[25.93928719 220.05966187]
[40.86795807 221.52075195]
[55.20918655 225.91723633]
[68.39176941 233.07402039]
[79.89064789 242.70603943]
[89.24783325 254.42965698]
[96.08908844 267.77401733]
[95.86576080 252.77569580]
[85.03246307 242.61817932]
[84.59231567 227.41090393]
[95.31990814 216.11682129]
[95.09658051 201.11848450]
[94.87325287 186.12014771]
[94.64992523 171.12181091]
[94.42659760 156.12347412]
[94.20326996 141.12512207]
[93.97994232 126.12679291]
[93.31015778 111.14175415]
[91.74963379 96.22315216]
[89.74562073 81.35762024]
[87.74160767 66.49208832]
[78.22994995 53.84934616]
[84.19751740 40.20246124]
[82.19350433 25.33693314]
[80.18949127 10.47140408]
[70.42433929 2.04497313]
[69.06123352 -10.37781620]
[76.28874207 -20.07780075]
[74.50627136 -34.97151947]
[70.37927246 -43.12048721]
[72.80984497 -50.10003281]
[71.24932098 -65.01863861]
[62.11830902 -77.93898010]
[68.48954010 -91.40213776]
[66.92902374 -106.32073975]
[64.25502777 -109.74181366]
[62.94092560 -113.46171570]
[62.91366577 -117.01624298]
[63.95695114 -120.01259613]
[65.74694061 -122.16992950]
[65.07715607 -137.15496826]
[56.73136139 -150.59588623]
[63.89263916 -163.65596008]
[63.22285461 -178.64099121]
[62.55307007 -193.62603760]
[61.88328552 -208.61106873]
[61.21350098 -223.59611511]
[46.50676727 -227.00413513]
[33.26543045 -234.25462341]
[22.47207832 -244.80952454]
[14.92765236 -257.88562012]
[11.19200039 -272.51257324]
[11.54233074 -287.60494995]
[15.95264816 -302.04278564]
[24.09567642 -314.75476074]
[35.36714935 -324.79748535]
[48.93064880 -331.42575073]
[63.77967072 -334.14773560]
[78.81232452 -332.76138306]
[92.91307831 -327.36959839]
[105.03557587 -318.37252808]
[114.28023529 -306.43774414]
[119.96105194 -292.45092773]
[121.65645599 -277.44998169]
[119.24065399 -262.54809570]
[112.89290619 -248.85105896]
[103.08425903 -237.37530518]
[90.54257965 -228.97239685]
[76.19853973 -224.26589966]
[76.86832428 -209.28085327]
[77.53810883 -194.29582214]
[78.20789337 -179.31077576]
[78.87767792 -164.32574463]
[87.17556763 -151.95664978]
[80.06219482 -137.82475281]
[80.73197937 -122.83971405]
[81.84762573 -107.88126373]
[83.40814972 -92.96266174]
[92.42754364 -81.10939789]
[86.16793060 -66.57916260]
[87.72844696 -51.66055679]
[89.39999390 -36.75398254]
[91.18245697 -21.86026573]
[102.44243622 -8.39996147]
[95.05501556 8.46739101]
[97.05902863 23.33291817]
[99.06304169 38.19844818]
[108.43135834 49.77791214]
[102.60713196 64.48807526]
[104.61114502 79.35360718]
[106.61515808 94.21913147]
[108.87359619 96.26583099]
[110.43723297 99.17951965]
[110.98352814 102.70442963]
[110.28892517 106.46923828]
[108.26860809 110.02610779]
[110.83956146 113.52527618]
[112.04232788 117.28265381]
[111.96373749 120.83641052]
[110.83170319 123.80037689]
[108.97827911 125.90346527]
[109.20160675 140.90179443]
[109.42493439 155.90014648]
[109.64826202 170.89848328]
[109.87158966 185.89682007]
[110.09491730 200.89515686]
[110.31824493 215.89349365]
[121.37734985 226.86317444]
[121.39017487 242.07679749]
[110.86410522 252.55236816]
[111.08743286 267.55068970]
[114.51849365 282.15301514]
[120.99798584 295.68136597]
[127.47748566 309.20971680]
[134.05751038 322.68945312]
[140.73770142 336.11981201]
[147.41789246 349.55020142]
[154.09809875 362.98059082]
[160.77828979 376.41094971]
[167.45848083 389.84133911]
[171.27183533 375.33413696]
[182.81066895 365.75003052]
[197.77127075 364.66360474]
[210.57371521 372.48007202]
[216.44300842 386.28411865]
[213.19003296 400.92715454]
[202.02809143 410.94766235]
[187.12030029 412.60830688]
[174.02609253 405.28878784]
[179.06301880 419.41781616]
[184.20497131 433.50894165]
[189.45169067 447.56143188]
[194.69841003 461.61389160]
[199.94512939 475.66638184]
[214.68928528 472.73281860]
[229.71310425 472.20251465]
[244.62741089 474.08920288]
[259.04589844 478.34402466]
[272.59509277 484.85675049]
[284.92404175 493.45867920]
[295.71337891 503.92703247]
[304.68362427 515.99066162]
[311.60247803 529.33703613]
[316.29067993 543.62048340]
[318.62683105 558.47100830]
[318.55038452 573.50396729]
[316.06332397 588.33001709]
[311.23007202 602.56500244]
[304.17584229 615.84033203]
[295.08334351 627.81207275]
[284.18811035 638.17016602]
[271.77230835 646.64624023]
[258.15759277 653.02087402]
[243.69657898 657.12878418]
[228.76385498 658.86370850]
[213.74621582 658.18060303]
[199.03263855 655.09722900]
[185.00427246 649.69348145]
[172.02445984 642.10925293]
[160.42941284 632.54101562]
[150.51948547 621.23663330]
[142.55134583 608.48883057]
[136.73139954 594.62799072]
[133.21040344 580.01293945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 180]
[8 179]
[9 178]
[10 177]
[12 176]
[13 175]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[21 160]
[22 159]
[23 158]
[53 157]
[54 156]
[57 153]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[64 142]
[65 137]
[66 136]
[67 135]
[69 133]
[70 132]
[71 131]
[74 129]
[75 128]
[77 127]
[78 126]
[80 124]
[81 123]
[86 122]
[87 121]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
