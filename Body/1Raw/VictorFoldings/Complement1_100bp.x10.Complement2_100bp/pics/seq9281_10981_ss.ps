%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[143.26704407 308.49267578]
[140.40649414 293.76220703]
[138.53620911 278.87359619]
[137.66456604 263.89328003]
[137.79545593 248.88821411]
[138.92826843 233.92539978]
[141.05796814 219.07165527]
[144.17503357 204.39332581]
[148.26554871 189.95597839]
[153.31124878 175.82409668]
[159.28958130 162.06077576]
[166.17385864 148.72750854]
[153.33491516 140.97113037]
[140.49597168 133.21473694]
[127.65703583 125.45834351]
[114.81809235 117.70195007]
[101.97915649 109.94555664]
[93.99980927 108.80426788]
[89.00801849 101.97689819]
[76.28598022 94.03021240]
[63.56394577 86.08353424]
[50.84190750 78.13684845]
[37.88891220 70.57246399]
[24.71643448 63.39710236]
[11.54395866 56.22173309]
[-1.62851691 49.04636765]
[-14.80099297 41.87100220]
[-22.92219353 54.49037170]
[-31.94289017 66.48326111]
[-41.81494904 77.78569031]
[-52.48570251 88.33734894]
[-63.89821625 98.08193207]
[-75.99159241 106.96746063]
[-88.70131683 114.94651794]
[-101.95956421 121.97653961]
[-115.69561005 128.02000427]
[-129.83615112 133.04467773]
[-144.30575562 137.02374268]
[-159.02722168 139.93598938]
[-173.92198181 141.76585388]
[-188.91058350 142.50357056]
[-203.91305542 142.14523315]
[-218.84933472 140.69273376]
[-233.63975525 138.15382385]
[-248.20538330 134.54203796]
[-262.46850586 129.87667847]
[-276.35302734 124.18260956]
[-289.78485107 117.49021912]
[-302.69235229 109.83521271]
[-315.00662231 101.25844574]
[-326.66198730 91.80566406]
[-337.59625244 81.52731323]
[-347.75103760 70.47822571]
[-357.07223511 58.71735382]
[-365.51004028 46.30745697]
[-373.01950073 33.31473923]
[-379.56048584 19.80852699]
[-385.09814453 5.86087990]
[-389.60290527 -8.45378208]
[-393.05072021 -23.05908394]
[-395.42324829 -37.87710190]
[-396.70776367 -52.82876968]
[-396.89746094 -67.83431244]
[-395.99130249 -82.81367493]
[-393.99414062 -97.68693542]
[-390.91662598 -112.37472534]
[-386.77517700 -126.79869080]
[-381.59188843 -140.88186646]
[-375.39440918 -154.54911804]
[-368.21582031 -167.72752380]
[-360.09442139 -180.34675598]
[-351.07351685 -192.33949280]
[-341.20126343 -203.64176941]
[-330.53033447 -214.19323730]
[-319.11767578 -223.93763733]
[-307.02413940 -232.82296753]
[-294.31430054 -240.80181885]
[-281.05593872 -247.83161926]
[-267.31979370 -253.87486267]
[-253.17915344 -258.89929199]
[-238.70948792 -262.87814331]
[-223.98799133 -265.79013062]
[-209.09318542 -267.61975098]
[-194.10458374 -268.35723877]
[-179.10211182 -267.99865723]
[-164.16586304 -266.54589844]
[-149.37548828 -264.00674438]
[-134.80992126 -260.39471436]
[-120.54686737 -255.72912598]
[-106.66243744 -250.03482056]
[-93.23070526 -243.34220886]
[-80.32334137 -235.68699646]
[-68.00920868 -227.11003113]
[-56.35400391 -217.65705872]
[-45.41992188 -207.37852478]
[-35.26529694 -196.32926941]
[-25.94431114 -184.56825256]
[-17.50669479 -172.15821838]
[-9.99746609 -159.16537476]
[-3.45669246 -145.65905762]
[2.08072901 -131.71131897]
[6.58525324 -117.39657593]
[10.03284645 -102.79122162]
[12.40511417 -87.97316742]
[13.68939877 -73.02147675]
[13.87884903 -58.01592636]
[12.97245312 -43.03657532]
[10.97504616 -28.16335297]
[7.89728785 -13.47561073]
[3.75559759 0.94828677]
[-1.42792594 15.03137875]
[-7.62562656 28.69852638]
[5.54684925 35.87389374]
[18.71932602 43.04925919]
[31.89180183 50.22462463]
[45.06427765 57.39999008]
[47.78817368 56.73777771]
[50.93850327 57.11463547]
[54.12081909 58.69839096]
[56.88724518 61.51111221]
[58.78859329 65.41481018]
[71.51062775 73.36149597]
[84.23266602 81.30818176]
[96.95470428 89.25485992]
[109.73554230 97.10662079]
[122.57448578 104.86300659]
[135.41342163 112.61940002]
[148.25236511 120.37579346]
[161.09130859 128.13218689]
[173.93025208 135.88858032]
[182.52995300 123.59164429]
[191.93179321 111.89657593]
[202.09378052 100.85560608]
[212.97053528 90.51802826]
[224.51348877 80.93003845]
[236.67106628 72.13443756]
[249.38897705 64.17052460]
[262.61041260 57.07386017]
[276.27636719 50.87614441]
[290.32571411 45.60505295]
[304.69580078 41.28413010]
[319.32238770 37.93267822]
[334.14016724 35.56566238]
[349.08294678 34.19365311]
[364.08401489 33.82278061]
[379.07632446 34.45470047]
[393.99298096 36.08658981]
[408.76730347 38.71115875]
[423.33334351 42.31669235]
[437.62603760 46.88707733]
[451.58151245 52.40190887]
[465.13751221 58.83655167]
[478.23342896 66.16226959]
[490.81079102 74.34634399]
[502.81344604 83.35221863]
[514.18774414 93.13967133]
[524.88293457 103.66499329]
[534.85119629 114.88117218]
[544.04809570 126.73811340]
[552.43243408 139.18286133]
[559.96685791 152.15983582]
[566.61767578 165.61106873]
[572.35516357 179.47650146]
[577.15380859 193.69419861]
[580.99200439 208.20065308]
[583.85278320 222.93107605]
[585.72320557 237.81968689]
[586.59503174 252.79997253]
[586.46435547 267.80505371]
[585.33172607 282.76788330]
[583.20220947 297.62164307]
[580.08532715 312.30001831]
[575.99499512 326.73739624]
[570.94946289 340.86935425]
[564.97131348 354.63275146]
[558.08721924 367.96609497]
[550.32794189 380.80987549]
[541.72808838 393.10668945]
[532.32604980 404.80163574]
[522.16394043 415.84249878]
[511.28704834 426.17993164]
[499.74398804 435.76776123]
[487.58630371 444.56323242]
[474.86828613 452.52697754]
[461.64675903 459.62347412]
[447.98074341 465.82101440]
[433.93130493 471.09191895]
[419.56118774 475.41265869]
[404.93453979 478.76394653]
[390.11672974 481.13076782]
[375.17395020 482.50259399]
[360.17288208 482.87329102]
[345.18054199 482.24118042]
[330.26394653 480.60910034]
[315.48962402 477.98434448]
[300.92364502 474.37863159]
[286.63101196 469.80804443]
[272.67559814 464.29306030]
[259.11968994 457.85824585]
[246.02386475 450.53234863]
[233.44659424 442.34811401]
[221.44406128 433.34210205]
[210.06987000 423.55450439]
[199.37481689 413.02905273]
[189.40669250 401.81274414]
[180.20997620 389.95568848]
[171.82577515 377.51083374]
[164.29151917 364.53375244]
[157.64086914 351.08242798]
[151.90351868 337.21691895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 130]
[13 129]
[14 128]
[15 127]
[16 126]
[17 125]
[19 124]
[20 123]
[21 122]
[22 121]
[23 116]
[24 115]
[25 114]
[26 113]
[27 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
