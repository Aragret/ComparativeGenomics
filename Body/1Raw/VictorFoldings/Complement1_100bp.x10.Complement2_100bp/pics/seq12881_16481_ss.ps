%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-4.87548971 811.36590576]
[-19.53842545 814.54479980]
[-34.34976959 816.93884277]
[-49.26753616 818.54113770]
[-64.24943542 819.34722900]
[-79.25301361 819.35479736]
[-94.23571777 818.56390381]
[-109.15509796 816.97662354]
[-123.96885681 814.59759521]
[-138.63499451 811.43353271]
[-153.11195374 807.49334717]
[-167.35868835 802.78826904]
[-181.33480835 797.33160400]
[-195.00071716 791.13885498]
[-208.31765747 784.22753906]
[-221.24787903 776.61724854]
[-233.75474548 768.32958984]
[-245.80281067 759.38800049]
[-257.35787964 749.81787109]
[-268.38726807 739.64636230]
[-278.85964966 728.90222168]
[-288.74533081 717.61590576]
[-298.01635742 705.81951904]
[-306.64642334 693.54638672]
[-314.61102295 680.83135986]
[-321.88760376 667.71044922]
[-328.45556641 654.22082520]
[-334.29629517 640.40081787]
[-339.39318848 626.28948975]
[-343.73181152 611.92694092]
[-347.29989624 597.35382080]
[-350.08728027 582.61145020]
[-352.08612061 567.74163818]
[-353.29071045 552.78649902]
[-353.69766235 537.78839111]
[-353.30578613 522.78997803]
[-352.11621094 507.83361816]
[-350.13232422 492.96179199]
[-347.35974121 478.21661377]
[-343.80630493 463.63992310]
[-339.48208618 449.27301025]
[-334.39938354 435.15658569]
[-328.57257080 421.33068848]
[-322.01815796 407.83450317]
[-314.75473022 394.70629883]
[-306.80291748 381.98324585]
[-298.18518066 369.70147705]
[-288.92602539 357.89575195]
[-279.05166626 346.59954834]
[-268.59008789 335.84490967]
[-257.57095337 325.66229248]
[-246.02548218 316.08056641]
[-233.98640442 307.12689209]
[-221.48786926 298.82666016]
[-208.56529236 291.20339966]
[-195.25531006 284.27871704]
[-181.59564209 278.07220459]
[-167.62500000 272.60153198]
[-153.38299561 267.88214111]
[-138.91000366 263.92742920]
[-124.24704742 260.74859619]
[-109.43569183 258.35467529]
[-94.51791382 256.75244141]
[-79.53601074 255.94644165]
[-64.53244019 255.93894958]
[-49.54973221 256.73001099]
[-34.63036346 258.31735229]
[-19.81662178 260.69647217]
[-5.15049934 263.86065674]
[9.32643223 267.80090332]
[23.57313538 272.50607300]
[29.02849197 258.53329468]
[34.48384857 244.56048584]
[39.93920517 230.58769226]
[33.16535568 219.62664795]
[33.95325851 206.57057190]
[42.23891830 196.19953918]
[55.17250061 192.43960571]
[60.83528519 178.54957581]
[66.49806976 164.65954590]
[72.16085815 150.76953125]
[77.82364655 136.87950134]
[83.48643494 122.98947144]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[107.10718536 57.72857666]
[112.14410400 43.59954834]
[117.18101501 29.47051620]
[110.04564667 18.04680824]
[110.78173828 4.79280472]
[118.89684296 -5.46522188]
[131.25254822 -9.12121868]
[128.83103943 -24.75601578]
[140.53134155 -33.97296143]
[145.77806091 -48.02543259]
[151.02478027 -62.07790375]
[156.27149963 -76.13037872]
[143.24259949 -83.63356781]
[131.62649536 -93.17903137]
[121.74005890 -104.50635529]
[113.85300446 -117.30651855]
[108.18050385 -131.23033142]
[104.87729645 -145.89793396]
[104.03350830 -160.90919495]
[105.67214203 -175.85458374]
[109.74851227 -190.32638550]
[116.15139771 -203.92980957]
[124.70613861 -216.29371643]
[135.17933655 -227.08084106]
[147.28529358 -235.99687195]
[160.69374084 -242.79859924]
[175.03887939 -247.30046082]
[189.92938232 -249.37962341]
[204.95899963 -248.97938538]
[219.71774292 -246.11067200]
[233.80296326 -240.85173035]
[246.83039856 -233.34602356]
[258.44467163 -223.79832458]
[268.32891846 -212.46910095]
[276.21353149 -199.66741943]
[281.88333130 -185.74250793]
[285.18371582 -171.07426453]
[286.02462769 -156.06285095]
[284.38308716 -141.11776733]
[280.30395508 -126.64675140]
[273.89843750 -113.04457092]
[265.34130859 -100.68230438]
[254.86604309 -89.89720917]
[242.75836182 -80.98350525]
[229.34860229 -74.18436432]
[215.00259399 -69.68527222]
[200.11169434 -67.60896301]
[185.08215332 -68.01209259]
[170.32397461 -70.88365936]
[165.07725525 -56.83118439]
[159.83053589 -42.77871323]
[154.58381653 -28.72624397]
[157.38059998 -14.09657288]
[145.30500793 -3.87450027]
[152.93359375 11.11361122]
[147.24983215 27.30032730]
[131.31004333 34.50743484]
[126.27313232 48.63646317]
[121.23621368 62.76549149]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[103.90879822 119.14750671]
[102.88932037 123.67674255]
[100.46711731 126.95515442]
[97.37645721 128.65225220]
[91.71367645 142.54228210]
[86.05088806 156.43231201]
[80.38809967 170.32234192]
[74.72531128 184.21237183]
[69.06252289 198.10238647]
[76.14122009 214.09962463]
[69.58909607 229.95472717]
[53.91200638 236.04304504]
[48.45664597 250.01585388]
[43.00128937 263.98864746]
[37.54593277 277.96145630]
[51.21187592 284.15411377]
[64.52886200 291.06536865]
[77.45913696 298.67556763]
[89.96605682 306.96313477]
[102.01416779 315.90463257]
[113.56931305 325.47467041]
[124.59873962 335.64614868]
[135.07118225 346.39022827]
[144.95697021 357.67642212]
[154.22805786 369.47277832]
[162.85818481 381.74584961]
[170.82287598 394.46084595]
[178.09956360 407.58169556]
[184.66760254 421.07125854]
[190.50840759 434.89126587]
[195.60537720 449.00253296]
[199.94410706 463.36508179]
[203.51228333 477.93817139]
[206.29977417 492.68054199]
[208.29870605 507.55035400]
[209.50338745 522.50549316]
[209.91041565 537.50354004]
[209.51864624 552.50201416]
[208.32917786 567.45831299]
[206.34536743 582.33020020]
[203.57287598 597.07537842]
[200.01953125 611.65209961]
[195.69541931 626.01904297]
[190.61279297 640.13549805]
[184.78605652 653.96142578]
[178.23175049 667.45764160]
[170.96841431 680.58593750]
[163.01666260 693.30895996]
[154.39903259 705.59082031]
[145.13993835 717.39660645]
[135.26564026 728.69287109]
[124.80413055 739.44757080]
[113.78504944 749.63024902]
[102.23964691 759.21209717]
[90.20063782 768.16583252]
[77.70215607 776.46612549]
[64.77962494 784.08947754]
[51.46968079 791.01422119]
[37.81004715 797.22082520]
[23.83944511 802.69158936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 165]
[72 164]
[73 163]
[74 162]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 154]
[84 150]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[94 141]
[96 139]
[97 138]
[98 137]
[99 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
