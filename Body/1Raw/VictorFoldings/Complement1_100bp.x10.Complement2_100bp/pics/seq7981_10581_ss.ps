%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[131.37158203 376.94024658]
[129.16029358 362.09490967]
[128.21597290 347.11553955]
[128.54539490 332.11001587]
[130.14619446 317.18649292]
[133.00685120 302.45251465]
[137.10673523 288.01419067]
[142.41630554 273.97561646]
[148.89732361 260.43786621]
[156.50308228 247.49853516]
[165.17878723 235.25083923]
[174.86190796 223.78302002]
[185.48271179 213.17770386]
[175.82189941 201.70300293]
[166.16108704 190.22830200]
[156.50027466 178.75361633]
[146.83946228 167.27891541]
[137.17864990 155.80421448]
[127.51784515 144.32951355]
[117.85703278 132.85481262]
[103.74110413 128.10194397]
[100.77192688 112.56184387]
[90.85726929 101.30574799]
[80.69372559 90.27387238]
[62.99432755 85.19323730]
[59.82092285 67.93356323]
[49.49425507 57.05422592]
[39.16758347 46.17489243]
[28.84091568 35.29555511]
[18.51424789 24.41622162]
[8.18757915 13.53688812]
[-3.32860947 23.15613556]
[-15.43170452 32.02561188]
[-28.07297134 40.10960388]
[-41.20150757 47.37555695]
[-54.76444626 53.79421616]
[-68.70717621 59.33973312]
[-82.97355652 63.98978043]
[-97.50614166 67.72563171]
[-112.24640656 70.53224945]
[-127.13500214 72.39832306]
[-142.11196899 73.31634521]
[-157.11701965 73.28261566]
[-172.08972168 72.29727936]
[-186.96977234 70.36428833]
[-201.69726562 67.49143219]
[-216.21290588 63.69028854]
[-230.45823669 58.97615433]
[-244.37590027 53.36801147]
[-257.90985107 46.88844681]
[-271.00558472 39.56354523]
[-283.61038208 31.42280579]
[-295.67349243 22.49901009]
[-307.14630127 12.82808781]
[-317.98266602 2.44898272]
[-328.13894653 -8.59651279]
[-337.57418823 -20.26392174]
[-346.25045776 -32.50626373]
[-354.13278198 -45.27424240]
[-361.18945312 -58.51644516]
[-367.39205933 -72.17955017]
[-372.71557617 -86.20854187]
[-377.13861084 -100.54692078]
[-380.64334106 -115.13697052]
[-383.21566772 -129.91992188]
[-384.84518433 -144.83625793]
[-385.52539062 -159.82591248]
[-385.25350952 -174.82853699]
[-384.03067017 -189.78370667]
[-381.86175537 -204.63121033]
[-378.75552368 -219.31126404]
[-374.72445679 -233.76473999]
[-369.78482056 -247.93345642]
[-363.95651245 -261.76034546]
[-357.26293945 -275.18975830]
[-349.73114014 -288.16760254]
[-341.39135742 -300.64160156]
[-332.27722168 -312.56155396]
[-322.42544556 -323.87942505]
[-311.87564087 -334.54971313]
[-300.67034912 -344.52935791]
[-288.85464478 -353.77825928]
[-276.47616577 -362.25912476]
[-263.58468628 -369.93783569]
[-250.23214722 -376.78344727]
[-236.47232056 -382.76840210]
[-222.36061096 -387.86859131]
[-207.95382690 -392.06350708]
[-193.30999756 -395.33624268]
[-178.48808289 -397.67358398]
[-163.54776001 -399.06619263]
[-148.54919434 -399.50839233]
[-133.55278015 -398.99844360]
[-118.61889648 -397.53836060]
[-103.80768585 -395.13409424]
[-89.17878723 -391.79525757]
[-74.79109955 -387.53530884]
[-60.70256805 -382.37142944]
[-46.96991730 -376.32437134]
[-33.64844131 -369.41851807]
[-20.79178429 -361.68167114]
[-8.45171452 -353.14495850]
[3.32207775 -343.84280396]
[14.48218250 -333.81262207]
[24.98366356 -323.09481812]
[34.78423309 -311.73251343]
[43.84442902 -299.77154541]
[52.12776566 -287.25997925]
[59.60089493 -274.24826050]
[66.23371887 -260.78875732]
[71.99952698 -246.93568420]
[76.87511444 -232.74479675]
[80.84083557 -218.27325439]
[83.88072968 -203.57931519]
[85.98255157 -188.72216797]
[87.13784027 -173.76162720]
[87.34194946 -158.75793457]
[86.59404755 -143.77149963]
[84.89714813 -128.86267090]
[82.25808716 -114.09149170]
[78.68748474 -99.51742554]
[74.19972992 -85.19916534]
[68.81288910 -71.19436646]
[62.54864502 -57.55941772]
[55.43223190 -44.34922791]
[47.49230194 -31.61698341]
[38.76082230 -19.41395760]
[29.27296066 -7.78928709]
[19.06691360 3.21021914]
[29.39358139 14.08955383]
[39.72024918 24.96888733]
[50.04692078 35.84822083]
[60.37358856 46.72755814]
[70.70025635 57.60689163]
[82.78047180 58.23539352]
[91.47282410 67.21463013]
[91.72560120 80.11032104]
[101.88915253 91.14220428]
[105.68112946 91.84455109]
[109.14510345 94.21492767]
[111.54306793 98.06938171]
[112.24662781 102.90103149]
[127.05355835 108.47464752]
[129.33172607 123.19400024]
[138.99253845 134.66870117]
[148.65335083 146.14340210]
[158.31416321 157.61810303]
[167.97497559 169.09280396]
[177.63578796 180.56750488]
[187.29660034 192.04220581]
[196.95739746 203.51689148]
[209.21730042 194.85844421]
[222.16731262 187.27090454]
[235.71415710 180.80892944]
[249.76020813 175.51911926]
[264.20428467 171.43954468]
[278.94229126 168.59963989]
[293.86804199 167.01983643]
[308.87399292 166.71151733]
[323.85202026 167.67692566]
[338.69424438 169.90908813]
[353.29370117 173.39192200]
[367.54516602 178.10035706]
[381.34600830 184.00042725]
[394.59674072 191.04965210]
[407.20193481 199.19723511]
[419.07073975 208.38447571]
[430.11764526 218.54515076]
[440.26306152 229.60609436]
[449.43389893 241.48757935]
[457.56405640 254.10400391]
[464.59497070 267.36447144]
[470.47598267 281.17343140]
[475.16473389 295.43139648]
[478.62741089 310.03564453]
[480.83905029 324.88092041]
[481.78378296 339.86029053]
[481.45474243 354.86581421]
[479.85430908 369.78936768]
[476.99404907 384.52343750]
[472.89453125 398.96185303]
[467.58532715 413.00057983]
[461.10464478 426.53848267]
[453.49923706 439.47802734]
[444.82385254 451.72592163]
[435.14102173 463.19400024]
[424.52050781 473.79959106]
[413.03881836 483.46627808]
[400.77868652 492.12442017]
[387.82849121 499.71163940]
[374.28146362 506.17324829]
[360.23529053 511.46270752]
[345.79110718 515.54187012]
[331.05303955 518.38140869]
[316.12725830 519.96081543]
[301.12127686 520.26873779]
[286.14324951 519.30297852]
[271.30111694 517.07043457]
[256.70175171 513.58721924]
[242.45040894 508.87841797]
[228.64971924 502.97799683]
[215.39915466 495.92840576]
[202.79418945 487.78051758]
[190.92561340 478.59295654]
[179.87896729 468.43200684]
[169.73382568 457.37078857]
[160.56330872 445.48907471]
[152.43347168 432.87243652]
[145.40289307 419.61178589]
[139.52223206 405.80267334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 151]
[14 150]
[15 149]
[16 148]
[17 147]
[18 146]
[19 145]
[20 144]
[22 142]
[23 138]
[24 137]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
