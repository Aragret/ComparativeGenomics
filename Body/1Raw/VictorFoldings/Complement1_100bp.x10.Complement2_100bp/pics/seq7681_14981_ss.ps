%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[94.55020905 956.02581787]
[79.59584045 954.82592773]
[64.70861053 952.97027588]
[49.91726303 950.46252441]
[35.25033569 947.30749512]
[20.73615074 943.51129150]
[6.40271807 939.08117676]
[-7.72229242 934.02581787]
[-21.61161613 928.35485840]
[-35.23844147 922.07934570]
[-48.57646942 915.21130371]
[-61.59994888 907.76397705]
[-74.28374481 899.75189209]
[-86.60337067 891.19036865]
[-98.53504181 882.09594727]
[-110.05574036 872.48626709]
[-121.14321899 862.37976074]
[-131.77607727 851.79608154]
[-141.93379211 840.75549316]
[-151.59674072 829.27941895]
[-160.74630737 817.39001465]
[-169.36479187 805.11016846]
[-177.43559265 792.46362305]
[-184.94309998 779.47479248]
[-191.87283325 766.16870117]
[-198.21142578 752.57110596]
[-203.94664001 738.70819092]
[-209.06739807 724.60675049]
[-213.56381226 710.29394531]
[-217.42721558 695.79748535]
[-220.65013123 681.14538574]
[-223.22636414 666.36578369]
[-225.15092468 651.48730469]
[-226.42010498 636.53863525]
[-227.03144836 621.54870605]
[-226.98377991 606.54632568]
[-226.27719116 591.56054688]
[-224.91304016 576.62030029]
[-222.89396667 561.75433350]
[-220.22386169 546.99145508]
[-216.90789795 532.36004639]
[-212.95245361 517.88842773]
[-208.36517334 503.60455322]
[-203.15490723 489.53591919]
[-197.33171082 475.70974731]
[-190.90682983 462.15267944]
[-183.89268494 448.89093018]
[-176.30278015 435.95004272]
[-168.15177917 423.35504150]
[-159.45542908 411.13021851]
[-150.23049927 399.29916382]
[-140.49481201 387.88473511]
[-130.26713562 376.90896606]
[-119.56723785 366.39303589]
[-108.41575623 356.35720825]
[-96.83422089 346.82092285]
[-84.84499359 337.80252075]
[-72.47121429 329.31945801]
[-59.73675919 321.38809204]
[-46.66621399 314.02374268]
[-33.28481293 307.24060059]
[-19.61838150 301.05178833]
[-5.69330025 295.46920776]
[8.46355152 290.50369263]
[22.82484627 286.16479492]
[37.36286545 282.46087646]
[52.04954147 279.39910889]
[66.85652924 276.98541260]
[81.75524902 275.22442627]
[96.71694183 274.11956787]
[88.60413361 261.62829590]
[95.92711639 247.60386658]
[95.48051453 232.61051941]
[95.03390503 217.61717224]
[94.58730316 202.62382507]
[94.14069366 187.63047791]
[93.69409180 172.63713074]
[90.35282898 166.04487610]
[93.35412598 157.41758728]
[93.13079834 142.41925049]
[79.04524994 137.51635742]
[67.48394012 128.09420776]
[59.83954620 115.28778839]
[57.03292847 100.63978577]
[59.40217590 85.91471863]
[66.66188049 72.88637543]
[77.93753815 63.12417603]
[91.87086487 57.80408096]
[91.64753723 42.80574036]
[91.42420959 27.80740356]
[90.75442505 12.82236576]
[89.63877869 -2.13608766]
[80.89649200 -15.32256317]
[87.66575623 -28.59005737]
[73.01286316 -32.40732193]
[60.39475250 -40.77762604]
[51.18013382 -52.79301453]
[46.36854553 -67.15014648]
[46.48191071 -82.29167938]
[51.50793076 -96.57515717]
[60.90142441 -108.45122528]
[73.64345551 -116.63165283]
[88.35186005 -120.22909546]
[103.43118286 -118.85331726]
[117.24572754 -112.65356445]
[128.29699707 -102.30233002]
[135.38624573 -88.92243958]
[137.74446106 -73.96525574]
[135.11585999 -59.05320358]
[127.78557587 -45.80384445]
[116.54872131 -35.65436554]
[102.62420654 -29.70570564]
[111.28668976 -17.58915901]
[104.59722900 -3.25173640]
[105.71287537 11.70671654]
[107.74653625 13.63605976]
[109.13849640 16.48721313]
[109.53381348 20.01979256]
[108.67105865 23.86949158]
[106.42254639 27.58407593]
[106.64587402 42.58241272]
[106.86920166 57.58075333]
[120.95475006 62.48364258]
[132.51606750 71.90579987]
[140.16046143 84.71221161]
[142.96707153 99.36021423]
[140.59782410 114.08528137]
[133.33811951 127.11362457]
[122.06246185 136.87582397]
[108.12913513 142.19592285]
[108.35246277 157.19425964]
[108.68743896 172.19052124]
[109.13404846 187.18386841]
[109.58065033 202.17721558]
[110.02725983 217.17056274]
[110.47386169 232.16390991]
[110.92047119 247.15727234]
[119.06522369 260.72094727]
[111.71028900 273.67294312]
[126.71121979 273.88531494]
[141.68833923 274.75640869]
[156.61273193 276.28451538]
[171.45561218 278.46667480]
[186.18832397 281.29867554]
[200.78240967 284.77511597]
[215.20971680 288.88919067]
[229.44238281 293.63302612]
[243.45295715 298.99743652]
[257.21438599 304.97207642]
[270.70007324 311.54541016]
[283.88403320 318.70474243]
[296.74081421 326.43624878]
[309.24557495 334.72503662]
[321.37417603 343.55508423]
[333.10321045 352.90936279]
[344.41006470 362.76977539]
[355.27288818 373.11734009]
[365.67071533 383.93203735]
[375.58349609 395.19305420]
[384.99206543 406.87857056]
[393.87826538 418.96609497]
[402.22497559 431.43228149]
[410.01605225 444.25302124]
[417.23648071 457.40365601]
[423.87228394 470.85870361]
[429.91070557 484.59225464]
[435.34002686 498.57778931]
[440.14984131 512.78833008]
[444.33081055 527.19641113]
[447.87487793 541.77416992]
[450.77520752 556.49359131]
[453.02618408 571.32617188]
[454.62350464 586.24334717]
[455.56402588 601.21624756]
[455.84600830 616.21606445]
[455.46884155 631.21374512]
[454.43325806 646.18035889]
[452.74130249 661.08709717]
[450.39620972 675.90509033]
[447.40249634 690.60583496]
[443.76596069 705.16082764]
[439.49362183 719.54205322]
[434.59371948 733.72174072]
[429.07568359 747.67254639]
[422.95022583 761.36749268]
[416.22915649 774.78015137]
[408.92538452 787.88470459]
[401.05310059 800.65570068]
[392.62744141 813.06866455]
[383.66467285 825.09954834]
[374.18209839 836.72509766]
[364.19805908 847.92297363]
[353.73178101 858.67144775]
[342.80349731 868.94982910]
[331.43429565 878.73828125]
[319.64608765 888.01788330]
[307.46166992 896.77081299]
[294.90457153 904.98004150]
[281.99896240 912.62976074]
[268.76983643 919.70532227]
[255.24267578 926.19287109]
[241.44360352 932.08007812]
[227.39927673 937.35540771]
[213.13677979 942.00878906]
[198.68363953 946.03125000]
[184.06777954 949.41491699]
[169.31739807 952.15338135]
[154.46096802 954.24127197]
[139.52716064 955.67462158]
[124.54481506 956.45062256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 139]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[79 131]
[80 130]
[88 122]
[89 121]
[90 120]
[91 115]
[92 114]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
