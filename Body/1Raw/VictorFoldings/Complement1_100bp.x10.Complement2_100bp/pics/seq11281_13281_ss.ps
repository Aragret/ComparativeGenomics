%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[110.11901855 396.99142456]
[102.14668274 409.71697998]
[92.77568054 421.45077515]
[82.12818909 432.03985596]
[70.34300995 441.34616089]
[57.57379532 449.24838257]
[43.98701096 455.64346313]
[29.75979805 460.44805908]
[15.07763004 463.59951782]
[0.13192105 465.05676270]
[-14.88248062 464.80078125]
[-29.76983070 462.83496094]
[-44.33604431 459.18484497]
[-58.39121628 453.89807129]
[-71.75211334 447.04357910]
[-84.24454498 438.71069336]
[-95.70565796 429.00808716]
[-105.98601532 418.06222534]
[-114.95159912 406.01580811]
[-122.48552704 393.02590942]
[-128.48957825 379.26184082]
[-132.88548279 364.90310669]
[-135.61592102 350.13684082]
[-136.64529419 335.15557861]
[-135.96020508 320.15463257]
[-133.56954956 305.32955933]
[-129.50451660 290.87365723]
[-123.81810760 276.97537231]
[-116.58444214 263.81588745]
[-107.89783478 251.56678772]
[-97.87152863 240.38774109]
[-86.63624573 230.42449951]
[-74.33844757 221.80696106]
[-61.13846588 214.64747620]
[-47.20839691 209.03936768]
[-32.72983932 205.05575562]
[-17.89155388 202.74856567]
[-2.88699007 202.14790344]
[12.08823967 203.26156616]
[26.83890152 206.07505798]
[41.17269135 210.55169678]
[47.24652481 196.83644104]
[47.08071136 189.44763184]
[53.51424408 182.96324158]
[59.79160309 169.33992004]
[58.09067154 154.54275513]
[70.89308929 145.24713135]
[77.17045593 131.62382507]
[83.44781494 118.00050354]
[89.72517395 104.37718964]
[95.90093994 90.70751953]
[101.97477722 76.99224854]
[96.52137756 62.40121841]
[102.87648773 48.57851410]
[116.82041931 43.46945190]
[122.89424896 29.75418472]
[122.57092285 23.15062523]
[125.23164368 18.12891006]
[129.35853577 15.72520638]
[135.83802795 2.19686127]
[142.31752014 -11.33148384]
[148.79702759 -24.85982895]
[155.27651978 -38.38817596]
[161.75601196 -51.91651917]
[168.23550415 -65.44487000]
[174.71501160 -78.97321320]
[181.19450378 -92.50155640]
[187.67399597 -106.02989960]
[174.54931641 -113.30148315]
[161.87846375 -121.33780670]
[149.70594788 -130.11064148]
[138.07452393 -139.58918762]
[127.02503204 -149.74014282]
[116.59630585 -160.52784729]
[106.82495880 -171.91441345]
[97.74533081 -183.85983276]
[89.38930511 -196.32217407]
[81.78622437 -209.25762939]
[74.96281433 -222.62078857]
[68.94302368 -236.36470032]
[63.74801254 -250.44110107]
[59.39601898 -264.80053711]
[55.90233231 -279.39254761]
[53.27922440 -294.16589355]
[51.53591156 -309.06872559]
[50.67851257 -324.04864502]
[50.71004105 -339.05303955]
[51.63038635 -354.02920532]
[53.43631744 -368.92456055]
[56.12149048 -383.68676758]
[59.67646790 -398.26397705]
[64.08877563 -412.60498047]
[69.34289551 -426.65942383]
[75.42039490 -440.37792969]
[82.29990387 -453.71228027]
[89.95727539 -466.61569214]
[98.36560822 -479.04278564]
[107.49536133 -490.94995117]
[117.31446838 -502.29534912]
[127.78844452 -513.03912354]
[138.88049316 -523.14355469]
[150.55165100 -532.57312012]
[162.76094055 -541.29473877]
[175.46545410 -549.27770996]
[188.62057495 -556.49407959]
[202.18008423 -562.91845703]
[216.09637451 -568.52825928]
[230.32055664 -573.30377197]
[244.80265808 -577.22827148]
[259.49182129 -580.28796387]
[274.33642578 -582.47210693]
[289.28436279 -583.77294922]
[304.28311157 -584.18597412]
[319.27996826 -583.70977783]
[334.22229004 -582.34600830]
[349.05758667 -580.09936523]
[363.73373413 -576.97784424]
[378.19918823 -572.99243164]
[392.40310669 -568.15698242]
[406.29565430 -562.48864746]
[419.82800293 -556.00726318]
[432.95260620 -548.73553467]
[445.62338257 -540.69909668]
[457.79583740 -531.92614746]
[469.42718506 -522.44750977]
[480.47656250 -512.29644775]
[490.90521240 -501.50866699]
[500.67645264 -490.12203979]
[509.75598145 -478.17651367]
[518.11187744 -465.71411133]
[525.71484375 -452.77859497]
[532.53814697 -439.41537476]
[538.55780029 -425.67138672]
[543.75268555 -411.59497070]
[548.10455322 -397.23550415]
[551.59814453 -382.64343262]
[554.22113037 -367.87005615]
[555.96429443 -352.96722412]
[556.82159424 -337.98730469]
[556.78991699 -322.98291016]
[555.86944580 -308.00674438]
[554.06335449 -293.11138916]
[551.37805176 -278.34921265]
[547.82293701 -263.77203369]
[543.41052246 -249.43106079]
[538.15631104 -235.37667847]
[532.07867432 -221.65823364]
[525.19903564 -208.32394409]
[517.54156494 -195.42060852]
[509.13311768 -182.99357605]
[500.00326538 -171.08648682]
[490.18405151 -159.74118042]
[479.70999146 -148.99749756]
[468.61785889 -138.89315796]
[456.94659424 -129.46368408]
[444.73724365 -120.74218750]
[432.03265381 -112.75930023]
[418.87747192 -105.54305267]
[405.31790161 -99.11881256]
[391.40158081 -93.50913239]
[377.17733765 -88.73371887]
[362.69522095 -84.80934143]
[348.00604248 -81.74979401]
[333.16140747 -79.56581879]
[318.21343994 -78.26509094]
[303.21469116 -77.85217285]
[288.21783447 -78.32851410]
[273.27551270 -79.69244385]
[258.44024658 -81.93917847]
[243.76414490 -85.06082153]
[229.29872131 -89.04640198]
[215.09483337 -93.88192749]
[201.20234680 -99.55040741]
[194.72283936 -86.02206421]
[188.24334717 -72.49371338]
[181.76385498 -58.96537018]
[175.28436279 -45.43702698]
[168.80485535 -31.90867996]
[162.32536316 -18.38033485]
[155.84587097 -4.85198832]
[149.36637878 8.67635727]
[142.88688660 22.20470238]
[136.60951233 35.82801819]
[130.53569031 49.54328537]
[136.12388611 63.30219269]
[130.15954590 77.29795074]
[115.69004059 83.06608582]
[109.61621094 96.78134918]
[109.49119568 104.84093475]
[103.34848785 110.65454865]
[97.07112885 124.27786255]
[90.79376984 137.90118408]
[84.51641083 151.52449036]
[85.76834106 167.29609680]
[73.41491699 175.61727905]
[67.13755798 189.24060059]
[60.96179199 202.91026306]
[54.88795853 216.62553406]
[67.83621979 224.23080444]
[79.83312988 233.26252747]
[90.72227478 243.60295105]
[100.36169434 255.11726379]
[108.62571716 267.65536499]
[115.40661621 281.05374146]
[120.61597443 295.13778687]
[124.18588257 309.72387695]
[126.06980133 324.62182617]
[126.24317169 339.63739014]
[124.70372772 354.57485962]
[121.47154236 369.23947144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 198]
[42 197]
[44 196]
[45 195]
[47 193]
[48 192]
[49 191]
[50 190]
[51 188]
[52 187]
[55 184]
[56 183]
[59 182]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[67 174]
[68 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
