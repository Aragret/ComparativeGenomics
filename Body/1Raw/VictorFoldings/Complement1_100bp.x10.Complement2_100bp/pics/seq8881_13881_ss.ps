%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[205.23811340 207.66156006]
[208.65548706 193.04876709]
[213.15533447 178.73222351]
[218.71247864 164.79197693]
[205.23274231 158.21194458]
[191.75300598 151.63191223]
[174.33744812 153.79187012]
[164.17283630 138.43733215]
[150.59661865 132.05873108]
[137.02041626 125.68012238]
[123.44420624 119.30151367]
[109.86800385 112.92291260]
[93.19544983 114.76743317]
[83.76492310 100.89511108]
[70.09525299 94.71934509]
[56.42557907 88.54357910]
[44.10545349 92.36160278]
[32.84709549 86.93637085]
[28.44917297 75.66761780]
[14.87296581 69.28900909]
[1.29675853 62.91040421]
[-12.27944851 56.53179932]
[-19.57234764 69.64630890]
[-27.74321365 82.23255920]
[-36.75395203 94.23186493]
[-46.56254959 105.58827972]
[-57.12327194 116.24885559]
[-68.38688660 126.16388702]
[-80.30086517 135.28713989]
[-92.80966187 143.57609558]
[-105.85496521 150.99208069]
[-119.37593842 157.50053406]
[-133.30955505 163.07110596]
[-147.59082031 167.67782593]
[-162.15318298 171.29920959]
[-176.92872620 173.91838074]
[-191.84857178 175.52311707]
[-206.84313965 176.10594177]
[-221.84251404 175.66413879]
[-236.77679443 174.19978333]
[-251.57630920 171.71966553]
[-266.17208862 168.23538208]
[-280.49603271 163.76316833]
[-294.48141479 158.32386780]
[-308.06298828 151.94284058]
[-321.17745972 144.64985657]
[-333.76367188 136.47891235]
[-345.76290894 127.46808624]
[-357.11926270 117.65941620]
[-367.77975464 107.09861755]
[-377.69470215 95.83494568]
[-386.81790161 83.92089844]
[-395.10675049 71.41204071]
[-402.52264404 58.36669540]
[-409.03100586 44.84567642]
[-414.60150146 30.91202736]
[-419.20812988 16.63072014]
[-422.82940674 2.06833601]
[-425.44848633 -12.70722580]
[-427.05313110 -27.62707329]
[-427.63583374 -42.62164688]
[-427.19393921 -57.62102890]
[-425.72946167 -72.55528259]
[-423.24926758 -87.35478973]
[-419.76489258 -101.95053864]
[-415.29257202 -116.27447510]
[-409.85317993 -130.25981140]
[-403.47207642 -143.84135437]
[-396.17898560 -156.95576477]
[-388.00796509 -169.54190063]
[-378.99707031 -181.54109192]
[-369.18829346 -192.89736938]
[-358.62744141 -203.55780029]
[-347.36370850 -213.47268677]
[-335.44958496 -222.59577942]
[-322.94067383 -230.88456726]
[-309.89529419 -238.30036926]
[-296.37420654 -244.80863953]
[-282.44052124 -250.37902832]
[-268.15921021 -254.98554993]
[-253.59678650 -258.60675049]
[-238.82121277 -261.22570801]
[-223.90135193 -262.83026123]
[-208.90676880 -263.41287231]
[-193.90739441 -262.97088623]
[-178.97314453 -261.50631714]
[-164.17366028 -259.02600098]
[-149.57794189 -255.54153442]
[-135.25402832 -251.06912231]
[-121.26873016 -245.62962341]
[-107.68723297 -239.24842834]
[-94.57286835 -231.95526123]
[-81.98678589 -223.78414917]
[-69.98765564 -214.77316284]
[-58.63143921 -204.96434021]
[-47.97107697 -194.40339661]
[-38.05627441 -183.13958740]
[-28.93325615 -171.22543335]
[-20.64456177 -158.71646118]
[-13.22883511 -145.67100525]
[-6.72065449 -132.14990234]
[-1.15036261 -118.21618652]
[3.45606875 -103.93481445]
[7.07716227 -89.37238312]
[9.69603348 -74.59678650]
[11.30047417 -59.67691422]
[11.88300133 -44.68233490]
[11.44089985 -29.68296051]
[9.97623158 -14.74872112]
[7.49582434 0.05074901]
[4.01124382 14.64644814]
[-0.46126306 28.97032356]
[-5.90084362 42.95559311]
[7.67536354 49.33419800]
[21.25156975 55.71280289]
[34.82777786 62.09140778]
[52.20924377 59.67240524]
[62.60134888 74.87390900]
[76.27101898 81.04967499]
[89.94068909 87.22544098]
[101.06438446 83.77513885]
[111.64199066 88.64909363]
[116.24660492 99.34670258]
[129.82281494 105.72530365]
[143.39901733 112.10391235]
[156.97523499 118.48252106]
[170.55143738 124.86112213]
[182.92704773 121.22695160]
[194.10337830 126.81919861]
[198.33303833 138.15219116]
[211.81277466 144.73220825]
[225.29251099 151.31224060]
[232.86482239 138.35568237]
[241.38421631 126.00125122]
[250.80303955 114.31801605]
[261.06860352 103.37132263]
[272.12353516 93.22238922]
[283.90600586 83.92797852]
[296.35006714 75.54006195]
[309.38619995 68.10555267]
[322.94143677 61.66603088]
[336.94000244 56.25750732]
[351.30361938 51.91022491]
[365.95193481 48.64849854]
[380.80307007 46.49057007]
[395.77389526 45.44850922]
[410.78076172 45.52813721]
[425.73971558 46.72901535]
[440.56707764 49.04442596]
[455.17996216 52.46141815]
[469.49664307 56.96088409]
[483.43704224 62.51766205]
[496.92318726 69.10066986]
[509.87966919 76.67310333]
[522.23400879 85.19260406]
[533.91717529 94.61152649]
[544.86376953 104.87720490]
[555.01263428 115.93222046]
[564.30694580 127.71475220]
[572.69470215 140.15890503]
[580.12915039 153.19508362]
[586.56854248 166.75039673]
[591.97692871 180.74900818]
[596.32409668 195.11267090]
[599.58569336 209.76101685]
[601.74346924 224.61215210]
[602.78540039 239.58300781]
[602.70562744 254.58985901]
[601.50463867 269.54879761]
[599.18908691 284.37615967]
[595.77197266 298.98901367]
[591.27239990 313.30563354]
[585.71551514 327.24597168]
[579.13238525 340.73208618]
[571.55981445 353.68847656]
[563.04022217 366.04278564]
[553.62115479 377.72586060]
[543.35540771 388.67236328]
[532.30029297 398.82110596]
[520.51770020 408.11529541]
[508.07345581 416.50299072]
[495.03720093 423.93728638]
[481.48184204 430.37655640]
[467.48318481 435.78482056]
[453.11947632 440.13186646]
[438.47109985 443.39334106]
[423.61996460 445.55099487]
[408.64907837 446.59280396]
[393.64224243 446.51290894]
[378.68328857 445.31176758]
[363.85595703 442.99609375]
[349.24313354 439.57882690]
[334.92654419 435.07913208]
[320.98626709 429.52209473]
[307.50024414 422.93884277]
[294.54388428 415.36618042]
[282.18966675 406.84646606]
[270.50668335 397.42733765]
[259.56024170 387.16146851]
[249.41162109 376.10626221]
[240.11752319 364.32357788]
[231.72993469 351.87927246]
[224.29577637 338.84295654]
[217.85661316 325.28753662]
[212.44845581 311.28881836]
[208.10154724 296.92510986]
[204.84020996 282.27670288]
[202.68267822 267.42553711]
[201.64100647 252.45465088]
[201.72103882 237.44778442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 132]
[5 131]
[6 130]
[8 127]
[9 126]
[10 125]
[11 124]
[12 123]
[14 120]
[15 119]
[16 118]
[19 116]
[20 115]
[21 114]
[22 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
