%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[9.98168468 671.18481445]
[-3.15255904 678.44067383]
[-16.72470284 684.84008789]
[-30.67897415 690.35681152]
[-44.95803070 694.96807861]
[-59.50320053 698.65509033]
[-74.25470734 701.40252686]
[-89.15194702 703.19927979]
[-104.13368225 704.03778076]
[-119.13836670 703.91473389]
[-134.10433960 702.83050537]
[-148.97009277 700.78967285]
[-163.67454529 697.80059814]
[-178.15727234 693.87554932]
[-192.35876465 689.03063965]
[-206.22067261 683.28576660]
[-219.68600464 676.66455078]
[-232.69946289 669.19421387]
[-245.20755005 660.90545654]
[-257.15887451 651.83233643]
[-268.50433350 642.01214600]
[-279.19726562 631.48522949]
[-289.19378662 620.29479980]
[-298.45278931 608.48687744]
[-306.93624878 596.11004639]
[-314.60925293 583.21502686]
[-321.44033813 569.85498047]
[-327.40136719 556.08465576]
[-332.46789551 541.96069336]
[-336.61911011 527.54113770]
[-339.83789062 512.88525391]
[-342.11105347 498.05325317]
[-343.42926025 483.10607910]
[-343.78710938 468.10516357]
[-343.18307495 453.11212158]
[-341.61968994 438.18862915]
[-339.10336304 423.39593506]
[-335.64440918 408.79486084]
[-331.25708008 394.44537354]
[-325.95938110 380.40649414]
[-319.77310181 366.73590088]
[-312.72366333 353.48974609]
[-304.83999634 340.72244263]
[-296.15451050 328.48651123]
[-286.70294189 316.83218384]
[-276.52407837 305.80737305]
[-265.65975952 295.45739746]
[-254.15464783 285.82473755]
[-242.05599976 276.94900513]
[-229.41352844 268.86669922]
[-216.27920532 261.61099243]
[-202.70700073 255.21173096]
[-188.75265503 249.69519043]
[-174.47355652 245.08404541]
[-159.92834473 241.39723206]
[-145.17680359 238.64991760]
[-130.27955627 236.85337830]
[-115.29779816 236.01501465]
[-100.29312134 236.13825989]
[-85.32716370 237.22261047]
[-70.46142578 239.26359558]
[-55.75700760 242.25285339]
[-41.27431870 246.17808533]
[-27.07288170 251.02316284]
[-13.21104717 256.76818848]
[0.25422075 263.38952637]
[7.72196198 250.38058472]
[15.18970299 237.37162781]
[22.65744400 224.36267090]
[30.12518501 211.35372925]
[30.72896385 203.98777771]
[37.80218887 198.20787048]
[45.46278763 185.31153870]
[52.83347702 172.24736023]
[59.91058350 159.02183533]
[59.09340668 144.14965820]
[72.42641449 135.63253784]
[79.50352478 122.40700531]
[86.58062744 109.18147278]
[85.60704803 92.43547821]
[99.95175934 83.74033356]
[96.78064728 71.23806000]
[102.78494263 60.27757263]
[114.26747894 56.47259140]
[121.34458160 43.24706268]
[128.42169189 30.02153587]
[135.49879456 16.79600716]
[142.57589722 3.57048059]
[149.25608826 -9.85989571]
[155.53346252 -23.48321152]
[161.81082153 -37.10652924]
[168.08818054 -50.72984314]
[174.16201782 -64.44511414]
[180.03097534 -78.24929047]
[185.89993286 -92.05346680]
[191.76889038 -105.85764313]
[178.84982300 -113.52452087]
[167.06794739 -122.84497833]
[156.63356018 -133.65269470]
[147.73283386 -145.75479126]
[140.52464294 -158.93528748]
[135.13760376 -172.95895386]
[131.66787720 -187.57553101]
[130.17736816 -202.52416992]
[130.69268799 -217.53808594]
[133.20462036 -232.34936523]
[137.66836548 -246.69364929]
[144.00424194 -260.31494141]
[152.09918213 -272.97021484]
[161.80871582 -284.43353271]
[172.95957947 -294.50039673]
[185.35278320 -302.99111938]
[198.76712036 -309.75418091]
[212.96322632 -314.66885376]
[227.68772888 -317.64746094]
[242.67788696 -318.63687134]
[257.66613770 -317.61938477]
[272.38504028 -314.61315918]
[286.57189941 -309.67187500]
[299.97354126 -302.88366699]
[312.35079956 -294.36975098]
[323.48278809 -284.28198242]
[333.17080688 -272.80047607]
[341.24200439 -260.13006592]
[347.55233765 -246.49688721]
[351.98916626 -232.14427185]
[354.47335815 -217.32832336]
[354.96051025 -202.31346130]
[353.44198608 -187.36763000]
[349.94485474 -172.75758362]
[344.53152466 -158.74403381]
[337.29864502 -145.57708740]
[328.37524414 -133.49169922]
[317.92059326 -122.70356750]
[306.12127686 -113.40521240]
[293.18786621 -105.76257324]
[279.35113525 -99.91203308]
[264.85806274 -95.95802307]
[249.96728516 -93.97108459]
[234.94451904 -93.98669434]
[220.05789185 -96.00456238]
[205.57307434 -99.98867798]
[199.70411682 -86.18450165]
[193.83514404 -72.38032532]
[187.96618652 -58.57614899]
[188.89021301 -53.89051056]
[186.88055420 -48.57465744]
[181.71148682 -44.45248413]
[175.43412781 -30.82916641]
[169.15676880 -17.20585060]
[162.87940979 -3.58253479]
[163.72250366 -0.90908521]
[163.55740356 2.25940871]
[162.19026184 5.54061604]
[159.56907654 8.48915005]
[155.80142212 10.64758587]
[148.72431946 23.87311363]
[141.64721680 37.09864044]
[134.57011414 50.32416916]
[127.49300385 63.54969788]
[129.00335693 81.03356934]
[113.28118896 90.61974335]
[116.14739227 101.90806580]
[110.72908783 112.21743774]
[99.80615234 116.25858307]
[92.72904968 129.48411560]
[85.65194702 142.70964050]
[85.96292114 158.52778625]
[73.13610840 166.09893799]
[66.05900574 179.32446289]
[66.22912598 184.54156494]
[64.54905701 188.86946106]
[61.66733170 191.75228882]
[58.35911560 192.97213745]
[50.69851685 205.86846924]
[43.13413620 218.82145691]
[35.66639709 231.83041382]
[28.19865608 244.83937073]
[20.73091507 257.84832764]
[13.26317310 270.85726929]
[25.77135277 279.14587402]
[37.72277451 288.21887207]
[49.06833267 298.03897095]
[59.76140594 308.56576538]
[69.75804901 319.75607300]
[79.01718140 331.56387329]
[87.50076294 343.94064331]
[95.17392731 356.83554077]
[102.00514221 370.19555664]
[107.96634674 383.96582031]
[113.03302765 398.08969116]
[117.18437958 412.50918579]
[120.40333557 427.16503906]
[122.67667389 441.99703979]
[123.99504852 456.94418335]
[124.35305023 471.94509888]
[123.74919128 486.93814087]
[122.18596649 501.86166382]
[119.66979218 516.65441895]
[116.21101379 531.25549316]
[111.82384491 545.60504150]
[106.52630615 559.64398193]
[100.34017944 573.31463623]
[93.29086304 586.56085205]
[85.40734863 599.32824707]
[76.72201538 611.56427002]
[67.27056122 623.21868896]
[57.09181976 634.24365234]
[46.22762299 644.59375000]
[34.72261047 654.22650146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[72 175]
[73 174]
[74 170]
[75 169]
[77 167]
[78 166]
[79 165]
[81 162]
[84 160]
[85 159]
[86 158]
[87 157]
[88 156]
[89 151]
[90 150]
[91 149]
[92 148]
[93 145]
[94 144]
[95 143]
[96 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
