%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[110.54251099 394.39340210]
[106.00569153 380.08755493]
[102.61982727 365.46646118]
[100.40632629 350.62258911]
[99.37917328 335.64978027]
[99.54486847 320.64270020]
[100.90236664 305.69622803]
[103.44307709 290.90484619]
[107.15094757 276.36209106]
[112.00252533 262.15988159]
[117.96714020 248.38804626]
[125.00708008 235.13363647]
[133.07783508 222.48046875]
[142.12838745 210.50851440]
[152.10151672 199.29347229]
[162.93414307 188.90626526]
[153.44525146 177.28900146]
[139.40164185 172.32649231]
[136.66416931 156.74391174]
[127.17526245 145.12664795]
[113.13166046 140.16413879]
[110.39418793 124.58156586]
[100.90528870 112.96430206]
[91.07470703 101.63471222]
[80.91115570 90.60282898]
[70.74761200 79.57095337]
[58.47274399 83.58433533]
[45.63835144 82.66053772]
[34.14852905 76.97203827]
[25.69450188 67.39557648]
[21.50568199 55.37718964]
[22.17098618 42.71392441]
[27.55629158 31.28516006]
[17.72570992 19.95556641]
[7.89512968 8.62597275]
[-2.67191815 -2.02003574]
[-13.92801380 -11.93468666]
[-25.18411064 -21.84933853]
[-36.44020462 -31.76398849]
[-47.69630051 -41.67864227]
[-58.95239639 -51.59329224]
[-70.20849609 -61.50794220]
[-81.08605194 -51.16500854]
[-92.83516693 -41.82391739]
[-105.36387634 -33.55778122]
[-118.57412720 -26.43128777]
[-132.36253357 -20.50021744]
[-146.62117004 -15.81098843]
[-161.23844910 -12.40030193]
[-176.09996033 -10.29485035]
[-191.08940125 -9.51111221]
[-206.08946228 -10.05522251]
[-220.98272705 -11.92292118]
[-235.65263367 -15.09959221]
[-249.98439026 -19.56037331]
[-263.86581421 -25.27034950]
[-277.18826294 -32.18483734]
[-289.84744263 -40.24971390]
[-301.74432373 -49.40186310]
[-312.78579712 -59.56965637]
[-322.88537598 -70.67351532]
[-331.96411133 -82.62652588]
[-339.95086670 -95.33515167]
[-346.78317261 -108.69992828]
[-352.40756226 -122.61624908]
[-356.77999878 -136.97518921]
[-359.86627197 -151.66439819]
[-361.64221191 -166.56887817]
[-362.09393311 -181.57199097]
[-361.21789551 -196.55633545]
[-359.02096558 -211.40460205]
[-355.52032471 -226.00059509]
[-350.74337769 -240.23008728]
[-344.72750854 -253.98170471]
[-337.51980591 -267.14782715]
[-329.17666626 -279.62539673]
[-319.76339722 -291.31674194]
[-309.35366821 -302.13040161]
[-298.02896118 -311.98171997]
[-285.87789917 -320.79360962]
[-272.99560547 -328.49710083]
[-259.48284912 -335.03189087]
[-245.44543457 -340.34683228]
[-230.99320984 -344.40032959]
[-216.23928833 -347.16067505]
[-201.29914856 -348.60623169]
[-186.28970337 -348.72573853]
[-171.32844543 -347.51821899]
[-156.53244019 -344.99310303]
[-142.01751709 -341.17022705]
[-127.89725494 -336.07943726]
[-114.28218842 -329.76062012]
[-101.27885437 -322.26324463]
[-88.98903656 -313.64593506]
[-77.50891876 -303.97616577]
[-66.92834473 -293.32958984]
[-57.33012772 -281.78958130]
[-48.78939056 -269.44644165]
[-41.37297440 -256.39675903]
[-35.13892365 -242.74266052]
[-30.13603020 -228.59101868]
[-26.40344810 -214.05261230]
[-23.97039032 -199.24119568]
[-22.85589981 -184.27272034]
[-23.06870079 -169.26431274]
[-24.60712433 -154.33343506]
[-27.45913315 -139.59696960]
[-31.60240364 -125.17021942]
[-37.00450897 -111.16611481]
[-43.62317276 -97.69425964]
[-51.40658569 -84.86008453]
[-60.29384232 -72.76403809]
[-49.03774643 -62.84938812]
[-37.78165054 -52.93473434]
[-26.52555466 -43.02008438]
[-15.26945877 -33.10543442]
[-4.01336288 -23.19078255]
[7.24273300 -13.27613163]
[4.57879639 -28.03768349]
[10.21994305 -41.93651199]
[22.41820145 -50.66591644]
[37.39381027 -51.52099228]
[50.50641251 -44.23678589]
[57.69292831 -31.07038879]
[56.72653198 -16.10155106]
[47.90667725 -3.96853209]
[33.96629333 1.56912208]
[19.22472191 -1.20460773]
[29.05530357 10.12498569]
[38.88588333 21.45457840]
[55.66006470 17.57317543]
[72.17449951 22.74874496]
[83.85266876 35.64155579]
[87.41048431 52.76033401]
[81.77948761 69.40740967]
[91.94303894 80.43928528]
[102.10658264 91.47116089]
[105.13036346 91.85358429]
[108.08182526 93.34468842]
[110.55006409 95.91980743]
[112.13904572 99.40282440]
[112.52255249 103.47540283]
[122.01144409 115.09266663]
[136.73376465 120.88611603]
[138.79252625 135.63775635]
[148.28143311 147.25502014]
[163.00373840 153.04847717]
[165.06251526 167.80010986]
[174.55140686 179.41737366]
[186.89224243 170.87664795]
[199.87263489 163.34341431]
[213.41050720 156.86531067]
[227.42028809 151.48326111]
[241.81336975 147.23132324]
[256.49877930 144.13636780]
[271.38366699 142.21795654]
[286.37393188 141.48822021]
[301.37475586 141.95178223]
[316.29135132 143.60571289]
[331.02938843 146.43952942]
[345.49566650 150.43534851]
[359.59875488 155.56790161]
[373.24948120 161.80471802]
[386.36154175 169.10636902]
[398.85198975 177.42671204]
[410.64193726 186.71313477]
[421.65679932 196.90690613]
[431.82693481 207.94360352]
[441.08804321 219.75343323]
[449.38156128 232.26171875]
[456.65509033 245.38940430]
[462.86260986 259.05346680]
[467.96487427 273.16754150]
[471.92965698 287.64236450]
[474.73187256 302.38644409]
[476.35382080 317.30654907]
[476.78518677 332.30831909]
[476.02331543 347.29699707]
[474.07296753 362.17773438]
[470.94653320 376.85644531]
[466.66372681 391.24038696]
[461.25164795 405.23858643]
[454.74450684 418.76254272]
[447.18347168 431.72674561]
[438.61630249 444.04922485]
[429.09716797 455.65209961]
[418.68630981 466.46200562]
[407.44946289 476.41055298]
[395.45776367 485.43490601]
[382.78695679 493.47796631]
[369.51718140 500.48889160]
[355.73233032 506.42337036]
[341.51956177 511.24386597]
[326.96871948 514.91992188]
[312.17184448 517.42828369]
[297.22241211 518.75311279]
[282.21499634 518.88598633]
[267.24447632 517.82604980]
[252.40548706 515.58007812]
[237.79183960 512.16223145]
[223.49594116 507.59414673]
[209.60818481 501.90469360]
[196.21635437 495.12982178]
[183.40512085 487.31234741]
[171.25550842 478.50173950]
[159.84429932 468.75372314]
[149.24365234 458.12985229]
[139.52058411 446.69735718]
[130.73657227 434.52847290]
[122.94716644 421.70019531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 149]
[17 148]
[19 146]
[20 145]
[22 143]
[23 142]
[24 137]
[25 136]
[26 135]
[33 130]
[34 129]
[35 128]
[36 118]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[42 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
