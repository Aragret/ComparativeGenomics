%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[202.10176086 505.21817017]
[198.28434753 490.70285034]
[195.69496155 475.91903687]
[194.35173035 460.97036743]
[194.26409912 445.96176147]
[195.43266296 430.99841309]
[197.84925842 416.18536377]
[201.49688721 401.62649536]
[206.35000610 387.42388916]
[212.37455750 373.67718506]
[219.52827454 360.48284912]
[227.76098633 347.93338013]
[237.01495361 336.11685181]
[247.22523499 325.11608887]
[258.32025146 315.00830078]
[249.18145752 303.11367798]
[240.04264832 291.21905518]
[230.90383911 279.32440186]
[221.76504517 267.42977905]
[212.53794861 255.60350037]
[203.22306824 243.84625244]
[189.25489807 238.67521667]
[186.74972534 223.05360413]
[172.78157043 217.88255310]
[170.27639771 202.26094055]
[160.96150208 190.50369263]
[151.64662170 178.74644470]
[138.27748108 182.45243835]
[124.46202087 180.77770996]
[112.29003906 173.94233704]
[103.61543274 162.94952393]
[99.77381134 149.43852234]
[101.37692261 135.44015503]
[108.21553802 123.07164764]
[99.07673645 111.17700958]
[97.21513367 126.06104279]
[86.30773926 136.35807800]
[71.34127045 137.36042786]
[59.15819168 128.60986328]
[55.32844162 114.10699463]
[61.60293198 100.48236084]
[75.11305237 93.96494293]
[89.68370056 97.53545380]
[81.83194733 84.75461578]
[73.98018646 71.97377014]
[66.12843323 59.19292831]
[58.96993637 53.51897430]
[58.25655746 46.16283035]
[50.59596252 33.26650238]
[42.93536377 20.37017632]
[35.27476501 7.47384930]
[36.38787079 22.43249321]
[33.79626083 37.20691299]
[27.65841484 50.89365387]
[18.34966660 62.65576553]
[6.43924904 71.77398682]
[-7.34451294 77.69073486]
[-22.15873528 80.04419708]
[-37.09752274 78.69046021]
[-51.24736786 73.71231079]
[-63.74299240 65.41416168]
[-73.82028961 54.30344391]
[-80.86302948 41.05958557]
[-84.44055176 26.49245071]
[-84.33407593 11.49282932]
[-80.55011749 -3.02204871]
[-73.32007599 -16.16459274]
[-63.08605957 -27.13113022]
[-50.47388840 -35.25105286]
[-36.25479889 -40.02782822]
[-21.29829979 -41.16934586]
[-6.51898003 -38.60581207]
[7.17939663 -32.49398041]
[18.95916939 -23.20759583]
[28.10001564 -11.31449795]
[25.21474266 -26.03438950]
[22.32947159 -40.75428009]
[19.44419861 -55.47417068]
[9.19689941 -67.52835846]
[14.34160423 -81.50624847]
[11.45633125 -96.22613525]
[5.10190010 -82.63859558]
[-7.13810062 -73.96781921]
[-22.06416321 -72.48032379]
[-35.77465057 -78.56494141]
[-44.68567657 -90.63115692]
[-46.46791840 -105.52490234]
[-40.65550232 -119.35298157]
[-28.76777840 -128.50077820]
[-13.91217232 -130.57705688]
[0.02809734 -125.03910828]
[9.40871811 -113.33534241]
[8.73893356 -128.32037354]
[8.06914806 -143.30541992]
[7.39936304 -158.29045105]
[-7.13337708 -162.54229736]
[-19.49668121 -171.28457642]
[-28.34947014 -183.56900024]
[-32.73146057 -198.06301880]
[-32.16732788 -213.19447327]
[-26.71825981 -227.32197571]
[-16.97533798 -238.91310120]
[-3.99539590 -246.71052551]
[10.81359673 -249.86843872]
[25.84527206 -248.04431152]
[39.46910477 -241.43598938]
[50.20728683 -230.76029968]
[56.89501953 -217.17527771]
[58.80686188 -202.15451050]
[55.73543930 -187.32733154]
[48.01391602 -174.30209351]
[36.47985840 -164.49168396]
[22.38440132 -158.96025085]
[23.05418777 -143.97520447]
[23.72397232 -128.99017334]
[24.39375687 -114.00512695]
[26.17622375 -99.11141205]
[29.06149483 -84.39151764]
[39.10242081 -73.39019775]
[34.16408920 -58.35944366]
[37.04936218 -43.63955307]
[39.93463516 -28.91966248]
[42.81990814 -14.19977093]
[48.17109299 -0.18674810]
[55.83169174 12.70957851]
[63.49228668 25.60590553]
[71.15288544 38.50223160]
[78.90927887 51.34117126]
[86.76103210 64.12201691]
[94.61278534 76.90285492]
[102.46454620 89.68370056]
[110.97136688 102.03820801]
[120.11017609 113.93284607]
[136.00843811 110.47178650]
[151.76808167 114.27673340]
[164.24588013 124.53659821]
[170.97598267 139.15812683]
[170.65711975 155.19284058]
[163.40386963 169.43156433]
[172.71876526 181.18881226]
[182.03364563 192.94606018]
[196.66806030 198.95806885]
[198.50697327 213.73872375]
[213.14140320 219.75071716]
[214.98031616 234.53137207]
[224.29519653 246.28862000]
[232.07720947 251.07171631]
[233.65968323 258.29098511]
[242.79847717 270.18560791]
[251.93728638 282.08023071]
[261.07608032 293.97488403]
[270.21487427 305.86950684]
[282.83978271 297.75296021]
[296.09960938 290.72131348]
[309.90130615 284.82391357]
[324.14810181 280.10208130]
[338.74002075 276.58895874]
[353.57473755 274.30917358]
[368.54821777 273.27874756]
[383.55538940 273.50491333]
[398.49102783 274.98602295]
[413.25033569 277.71176147]
[427.72976685 281.66296387]
[441.82781982 286.81192017]
[455.44555664 293.12252808]
[468.48745728 300.55053711]
[480.86206055 309.04379272]
[492.48257446 318.54275513]
[503.26748657 328.98080444]
[513.14111328 340.28469849]
[522.03417969 352.37515259]
[529.88439941 365.16735840]
[536.63665771 378.57162476]
[542.24359131 392.49386597]
[546.66583252 406.83645630]
[549.87237549 421.49880981]
[551.84082031 436.37805176]
[552.55725098 451.36984253]
[552.01666260 466.36898804]
[550.22290039 481.27029419]
[547.18847656 495.96923828]
[542.93469238 510.36270142]
[537.49145508 524.34973145]
[530.89685059 537.83227539]
[523.19720459 550.71563721]
[514.44653320 562.90954590]
[504.70611572 574.32849121]
[494.04437256 584.89227295]
[482.53607178 594.52685547]
[470.26190186 603.16467285]
[457.30798340 610.74505615]
[443.76519775 617.21496582]
[429.72851562 622.52886963]
[415.29638672 626.64959717]
[400.57006836 629.54821777]
[385.65283203 631.20440674]
[370.64935303 631.60656738]
[355.66482544 630.75177002]
[340.80438232 628.64611816]
[326.17224121 625.30438232]
[311.87106323 620.74993896]
[298.00115967 615.01477051]
[284.65982056 608.13909912]
[271.94058228 600.17120361]
[259.93270874 591.16687012]
[248.72042847 581.18933105]
[238.38237000 570.30859375]
[228.99105835 558.60089111]
[220.61236572 546.14843750]
[213.30505371 533.03851318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[20 146]
[21 145]
[23 143]
[25 141]
[26 140]
[27 139]
[34 133]
[35 132]
[43 131]
[44 130]
[45 129]
[46 128]
[48 127]
[49 126]
[50 125]
[51 124]
[75 123]
[76 122]
[77 121]
[78 120]
[80 118]
[81 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
