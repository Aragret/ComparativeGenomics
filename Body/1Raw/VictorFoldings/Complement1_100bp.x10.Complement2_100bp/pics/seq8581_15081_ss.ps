%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[124.29544830 339.86679077]
[115.28812408 351.91287231]
[104.27450562 362.15689087]
[91.60861969 370.26953125]
[77.69763184 375.99005127]
[62.98871613 379.13449097]
[47.95470810 379.60183716]
[33.07888794 377.37704468]
[18.83945274 372.53161621]
[5.69413948 365.22131348]
[-5.93448496 355.68112183]
[-15.67260742 344.21777344]
[-23.20718765 331.19970703]
[-28.29601860 317.04544067]
[-30.77551842 302.20993042]
[-30.56597900 287.17013550]
[-27.67413712 272.40945435]
[-22.19295311 258.40246582]
[-14.29862595 245.59934998]
[-4.24492311 234.41172791]
[7.64496899 225.19923401]
[20.98884010 218.25798035]
[35.35773849 213.81112671]
[50.28976440 212.00161743]
[65.30491638 212.88760376]
[68.84458923 198.31123352]
[72.38426208 183.73486328]
[75.92393494 169.15847778]
[79.46360779 154.58210754]
[83.00328064 140.00573730]
[77.16274261 123.45716858]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[105.35592651 42.55607605]
[108.02172089 27.79485893]
[110.02573395 12.92933083]
[112.02974701 -1.93619740]
[114.03376770 -16.80172539]
[116.03778076 -31.66725349]
[118.04179382 -46.53278351]
[103.28290558 -49.22667694]
[88.66533661 -52.60431671]
[74.22074127 -56.65839005]
[59.98040390 -61.38010788]
[45.97516632 -66.75925446]
[32.23536682 -72.78417206]
[18.79075241 -79.44181824]
[5.67044926 -86.71776581]
[-7.09713030 -94.59626770]
[-19.48433495 -103.06024933]
[-31.46433449 -112.09138489]
[-43.01118469 -121.67011261]
[-54.09987640 -131.77569580]
[-64.70639038 -142.38623047]
[-74.80776215 -153.47875977]
[-84.38211823 -165.02923584]
[-93.40870667 -177.01266479]
[-101.86798859 -189.40307617]
[-109.74164581 -202.17364502]
[-117.01261902 -215.29670715]
[-123.66516113 -228.74385071]
[-129.68487549 -242.48593140]
[-135.05870056 -256.49319458]
[-139.77502441 -270.73532104]
[-143.82360840 -285.18145752]
[-147.19570923 -299.80032349]
[-149.88400269 -314.56021118]
[-151.88267517 -329.42922974]
[-153.18740845 -344.37512207]
[-153.79534912 -359.36550903]
[-153.70521545 -374.36798096]
[-152.91717529 -389.34997559]
[-151.43293762 -404.27911377]
[-149.25573730 -419.12301636]
[-146.39025879 -433.84954834]
[-142.84274292 -448.42681885]
[-138.62084961 -462.82327271]
[-133.73373413 -477.00769043]
[-128.19195557 -490.94937134]
[-122.00755310 -504.61813354]
[-115.19390106 -517.98437500]
[-107.76576233 -531.01910400]
[-99.73921204 -543.69415283]
[-91.13165283 -555.98199463]
[-81.96170807 -567.85607910]
[-72.24925232 -579.29071045]
[-62.01531219 -590.26104736]
[-51.28205872 -600.74334717]
[-40.07273102 -610.71496582]
[-28.41160965 -620.15423584]
[-16.32395172 -629.04077148]
[-3.83593297 -637.35528564]
[9.02539825 -645.07977295]
[22.23218727 -652.19757080]
[35.75583267 -658.69311523]
[49.56704330 -664.55255127]
[63.63590622 -669.76300049]
[77.93195343 -674.31323242]
[92.42422485 -678.19342041]
[107.08132172 -681.39520264]
[121.87151337 -683.91156006]
[136.76277161 -685.73706055]
[151.72282410 -686.86773682]
[166.71928406 -687.30120850]
[181.71968079 -687.03649902]
[196.69151306 -686.07415771]
[211.60235596 -684.41625977]
[226.41992188 -682.06646729]
[241.11212158 -679.02978516]
[255.64712524 -675.31286621]
[269.99343872 -670.92376709]
[284.12002563 -665.87188721]
[297.99627686 -660.16827393]
[311.59216309 -653.82519531]
[324.87817383 -646.85644531]
[337.82559204 -639.27709961]
[350.40637207 -631.10363770]
[362.59323120 -622.35363770]
[374.35980225 -613.04614258]
[385.68057251 -603.20123291]
[396.53109741 -592.84033203]
[406.88778687 -581.98583984]
[416.72827148 -570.66119385]
[426.03121948 -558.89105225]
[434.77645874 -546.70080566]
[442.94509888 -534.11688232]
[450.51940918 -521.16650391]
[457.48297119 -507.87777710]
[463.82077026 -494.27944946]
[469.51901245 -480.40100098]
[474.56539917 -466.27243042]
[478.94897461 -451.92440796]
[482.66027832 -437.38796997]
[485.69122314 -422.69461060]
[488.03527832 -407.87612915]
[489.68737793 -392.96463013]
[490.64389038 -377.99243164]
[490.90280151 -362.99194336]
[490.46353149 -347.99563599]
[489.32702637 -333.03604126]
[487.49575806 -318.14547729]
[484.97366333 -303.35626221]
[481.76623535 -288.70040894]
[477.88043213 -274.20965576]
[473.32461548 -259.91537476]
[468.10870361 -245.84852600]
[462.24398804 -232.03958130]
[455.74313354 -218.51846313]
[448.62023926 -205.31443787]
[440.89074707 -192.45610046]
[432.57138062 -179.97131348]
[423.68017578 -167.88710022]
[414.23638916 -156.22962952]
[404.26043701 -145.02416992]
[393.77395630 -134.29498291]
[382.79965210 -124.06529999]
[371.36129761 -114.35727692]
[359.48364258 -105.19194794]
[347.19244385 -96.58914185]
[334.51428223 -88.56751251]
[321.47668457 -81.14442444]
[308.10781860 -74.33596039]
[294.43664551 -68.15685272]
[280.49282837 -62.62049484]
[266.30648804 -57.73887253]
[251.90843201 -53.52256012]
[237.32977295 -49.98069000]
[222.60212708 -47.12093353]
[207.75738525 -44.94948196]
[192.82768250 -43.47104263]
[177.84535217 -42.68881226]
[162.84286499 -42.60448456]
[147.85269165 -43.21824646]
[132.90731812 -44.52876663]
[130.90330505 -29.66324043]
[128.89929199 -14.79771233]
[126.89527893 0.06781623]
[124.89126587 14.93334484]
[122.88725281 29.79887199]
[135.44137573 21.58947945]
[150.15101624 24.52656364]
[158.58982849 36.92763138]
[155.92367554 51.68878174]
[143.67985535 60.35416412]
[128.87217712 57.95985031]
[119.98339081 45.87833405]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[110.81173706 124.87135315]
[107.74348450 136.98620605]
[97.57965851 143.54541016]
[94.03998566 158.12178040]
[90.50031281 172.69815063]
[86.96063995 187.27453613]
[83.42096710 201.85090637]
[79.88129425 216.42727661]
[93.63053131 222.52632141]
[106.06966400 230.98254395]
[116.79882812 241.52412415]
[125.47312927 253.81217957]
[131.81372070 267.45172119]
[135.61677551 282.00424194]
[136.76004028 297.00201416]
[135.20678711 311.96286011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[32 194]
[34 192]
[35 191]
[36 190]
[37 189]
[38 182]
[39 181]
[40 180]
[41 179]
[42 178]
[43 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
