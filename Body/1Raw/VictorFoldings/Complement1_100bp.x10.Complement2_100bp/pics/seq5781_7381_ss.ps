%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[276.64590454 358.18276978]
[285.85552979 346.32464600]
[271.32174683 343.06613159]
[266.75195312 327.91925049]
[255.94979858 317.51187134]
[245.14764404 307.10452271]
[234.34548950 296.69714355]
[223.54333496 286.28976440]
[212.74118042 275.88238525]
[201.93901062 265.47500610]
[191.13685608 255.06764221]
[180.33470154 244.66026306]
[169.53254700 234.25289917]
[154.99874878 230.99436951]
[150.42897034 215.84750366]
[139.62681580 205.44012451]
[144.71360779 219.55126953]
[146.79797363 234.40574646]
[145.79127502 249.37193298]
[141.73631287 263.81344604]
[134.80554199 277.11624146]
[125.29361725 288.71466064]
[113.60501862 298.11553955]
[100.23674774 304.91915894]
[85.75721741 308.83621216]
[70.78211975 309.70016479]
[55.94819641 307.47424316]
[41.88619232 302.25314331]
[29.19403267 294.25881958]
[18.41139412 283.83123779]
[9.99676132 271.41375732]
[4.30792713 257.53436279]
[1.58678389 242.78324890]
[1.94903636 227.78762817]
[5.37928152 213.18510437]
[11.73166275 199.59661865]
[20.73607445 187.59992981]
[32.00964355 177.70513916]
[45.07301331 170.33300781]
[59.37072372 165.79698181]
[74.29482269 164.28994751]
[89.21073914 165.87597656]
[103.48423767 170.48762512]
[116.50839996 177.92880249]
[127.72954559 187.88325500]
[122.06675720 173.99322510]
[116.40396881 160.10321045]
[110.74118805 146.21318054]
[105.07839966 132.32315063]
[88.04574585 130.45770264]
[74.29138184 120.23964691]
[67.58726501 104.47113037]
[69.77191162 87.47647095]
[80.24620819 73.91621399]
[74.17237091 60.20095062]
[68.09853363 46.48568344]
[62.02470398 32.77041626]
[55.95087051 19.05514908]
[43.28826141 9.56995201]
[45.20931625 -5.20024824]
[44.56691742 9.78598976]
[40.40405273 24.19676781]
[32.95615005 37.21709061]
[22.64442825 48.11059189]
[10.05206013 56.26118851]
[-4.10879135 61.20793533]
[-19.03726387 62.67105865]
[-33.88907623 60.56781769]
[-47.82429123 55.01715851]
[-60.05480194 46.33300018]
[-69.88891602 35.00646973]
[-76.77046204 21.67814255]
[-80.31025696 7.10179710]
[-80.30811310 -7.89820290]
[-76.76414490 -22.47353363]
[-69.87878418 -35.79989243]
[-60.04143143 -47.12360764]
[-47.80843353 -55.80426407]
[-33.87163162 -61.35093689]
[-19.01921844 -63.44992828]
[-4.09116554 -61.98253250]
[10.06827068 -57.03173447]
[22.65830421 -48.87753296]
[32.96691132 -37.98108292]
[40.41150284 -24.95764160]
[39.51868820 -39.93104935]
[38.62587357 -54.90445328]
[24.57210541 -60.75705719]
[14.49413872 -72.08496857]
[10.35085964 -86.60575867]
[12.91255760 -101.42462921]
[21.61835289 -113.61144257]
[34.69791794 -120.78015900]
[33.80509949 -135.75357056]
[32.91228485 -150.72697449]
[32.01947021 -165.70037842]
[17.64288712 -170.63822937]
[6.25359964 -180.70562744]
[-0.41161031 -194.36737061]
[-1.33634603 -209.54016113]
[3.62040782 -223.91023254]
[13.70278263 -235.28627014]
[27.37328911 -241.93350220]
[42.54727173 -242.83827209]
[56.91081619 -237.86262512]
[68.27357483 -227.76528931]
[74.90281677 -214.08605957]
[75.78763580 -198.91088867]
[70.79309082 -184.55390930]
[60.68082428 -173.20443726]
[46.99287415 -166.59320068]
[47.88569260 -151.61978149]
[48.77850723 -136.64637756]
[49.67132187 -121.67297363]
[63.51007843 -116.10931396]
[73.60236359 -105.04336548]
[77.90685272 -90.63391113]
[75.51844788 -75.72365570]
[66.85799408 -63.27843094]
[53.59927750 -55.79726791]
[54.49209595 -40.82386398]
[55.38491058 -25.85045815]
[58.92458344 -11.27408218]
[71.15274811 -2.76989222]
[69.66613770 12.98131561]
[75.73996735 26.69658279]
[81.81380463 40.41184998]
[87.88763428 54.12711716]
[93.96147156 67.84238434]
[106.54388428 67.94139862]
[118.15853119 72.78154755]
[127.08771515 81.64701843]
[132.01091003 93.22670746]
[132.20004272 105.80809021]
[127.62711334 117.53051758]
[118.96842957 126.66036224]
[124.63121033 140.55038452]
[130.29400635 154.44041443]
[135.95678711 168.33044434]
[141.61956787 182.22047424]
[150.03419495 194.63796997]
[160.83634949 205.04533386]
[176.14279175 209.04827881]
[179.93992615 223.45074463]
[190.74208069 233.85810852]
[201.54423523 244.26548767]
[212.34638977 254.67286682]
[223.14854431 265.08023071]
[233.95069885 275.48760986]
[244.75285339 285.89498901]
[255.55500793 296.30236816]
[266.35717773 306.70971680]
[277.15933228 317.11709595]
[292.46575928 321.12002563]
[296.26290894 335.52249146]
[307.77008057 325.87796021]
[320.23721313 317.51123047]
[333.52307129 310.51708984]
[347.47711182 304.97479248]
[361.94122314 300.94714355]
[376.75149536 298.47976685]
[391.74011230 297.60064697]
[406.73727417 298.31970215]
[421.57305908 300.62884521]
[436.07931519 304.50186157]
[450.09173584 309.89486694]
[463.45147705 316.74679565]
[476.00723267 324.97998047]
[487.61669922 334.50112915]
[498.14834595 345.20236206]
[507.48284912 356.96243286]
[515.51440430 369.64810181]
[522.15203857 383.11560059]
[527.32055664 397.21237183]
[530.96136475 411.77865601]
[533.03320312 426.64941406]
[533.51263428 441.65615845]
[532.39416504 456.62884521]
[529.69055176 471.39779663]
[525.43237305 485.79571533]
[519.66790771 499.65945435]
[512.46240234 512.83190918]
[503.89758301 525.16381836]
[494.07046509 536.51544189]
[483.09240723 546.75817871]
[471.08776855 555.77600098]
[458.19259644 563.46667480]
[444.55297852 569.74310303]
[430.32351685 574.53411865]
[415.66537476 577.78552246]
[400.74468994 579.46038818]
[385.73049927 579.53973389]
[370.79293823 578.02270508]
[356.10125732 574.92651367]
[341.82192993 570.28619385]
[328.11672974 564.15435791]
[315.14096069 556.60040283]
[303.04165649 547.71002197]
[291.95590210 537.58392334]
[282.00930786 526.33679199]
[273.31460571 514.09613037]
[265.97024536 501.00064087]
[260.05950928 487.19863892]
[255.64933777 472.84655762]
[252.78970337 458.10699463]
[251.51303101 443.14697266]
[251.83375549 428.13598633]
[253.74826050 413.24417114]
[257.23486328 398.64019775]
[262.25402832 384.48956299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[13 144]
[15 142]
[16 141]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[60 123]
[85 122]
[86 121]
[87 120]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
