%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[30.69395256 823.48272705]
[15.70835495 824.19317627]
[0.70601428 824.24475098]
[-14.28411198 823.63726807]
[-29.23308754 822.37194824]
[-44.11205673 820.45123291]
[-58.89230347 817.87884521]
[-73.54528809 814.65972900]
[-88.04273987 810.80004883]
[-102.35666656 806.30737305]
[-116.45943451 801.19024658]
[-130.32382202 795.45861816]
[-143.92308044 789.12353516]
[-157.23094177 782.19726562]
[-170.22174072 774.69311523]
[-182.87037659 766.62561035]
[-195.15245056 758.01025391]
[-207.04423523 748.86376953]
[-218.52281189 739.20379639]
[-229.56597900 729.04895020]
[-240.15246582 718.41882324]
[-250.26179504 707.33398438]
[-259.87448120 695.81573486]
[-268.97195435 683.88641357]
[-277.53668213 671.56903076]
[-285.55209351 658.88732910]
[-293.00274658 645.86578369]
[-299.87423706 632.52947998]
[-306.15328979 618.90429688]
[-311.82785034 605.01647949]
[-316.88687134 590.89276123]
[-321.32067871 576.56048584]
[-325.12063599 562.04724121]
[-328.27947998 547.38116455]
[-330.79104614 532.59045410]
[-332.65054321 517.70367432]
[-333.85433960 502.74963379]
[-334.40011597 487.75714111]
[-334.28686523 472.75515747]
[-333.51473999 457.77261353]
[-332.08526611 442.83843994]
[-330.00122070 427.98144531]
[-327.26660156 413.23037720]
[-323.88665771 398.61361694]
[-319.86798096 384.15945435]
[-315.21829224 369.89575195]
[-309.94656372 355.85006714]
[-304.06295776 342.04946899]
[-297.57885742 328.52062988]
[-290.50677490 315.28964233]
[-282.86038208 302.38208008]
[-274.65438843 289.82284546]
[-265.90466309 277.63616943]
[-256.62808228 265.84558105]
[-246.84255981 254.47383118]
[-236.56700134 243.54287720]
[-225.82121277 233.07382202]
[-214.62596130 223.08688354]
[-203.00283813 213.60131836]
[-190.97428894 204.63543701]
[-178.56353760 196.20655823]
[-165.79452515 188.33096313]
[-152.69189453 181.02381897]
[-139.28096008 174.29925537]
[-125.58760071 168.17025757]
[-111.63824463 162.64863586]
[-97.45981598 157.74505615]
[-83.07968140 153.46899414]
[-68.52561188 149.82868958]
[-53.82568359 146.83119202]
[-39.00828171 144.48225403]
[-24.10200500 142.78642273]
[-9.13562679 141.74699402]
[5.86196280 141.36593628]
[20.86181450 141.64401245]
[35.83497620 142.58068848]
[50.75254440 144.17413330]
[65.58572388 146.42127991]
[80.30587769 149.31781006]
[83.84555054 134.74142456]
[87.38522339 120.16505432]
[90.92489624 105.58868408]
[93.15001678 90.75463867]
[86.24783325 76.51840210]
[94.72895813 64.27422333]
[95.62177277 49.30081940]
[96.51458740 34.32741165]
[97.40740204 19.35400772]
[98.30021667 4.38060093]
[99.19303894 -10.59280491]
[100.08585358 -25.56620979]
[85.48806763 -29.20206451]
[71.80702972 -35.45856094]
[59.50870132 -44.12261200]
[49.01195908 -54.89911652]
[40.67432022 -67.42103577]
[34.77976227 -81.26187134]
[31.52905273 -95.95021820]
[31.03290558 -110.98579407]
[33.30821991 -125.85649109]
[38.27750397 -140.05581665]
[45.77150345 -153.10014343]
[55.53497314 -164.54521179]
[67.23537445 -174.00117493]
[80.47419739 -181.14598083]
[94.80052948 -185.73626709]
[109.72642517 -187.61572266]
[124.74350739 -186.72029114]
[139.34031677 -183.08050537]
[153.01966858 -176.82032776]
[165.31565857 -168.15295410]
[175.80949402 -157.37362671]
[184.14375305 -144.84945679]
[190.03457642 -131.00703430]
[193.28134155 -116.31781006]
[193.77342224 -101.28210449]
[191.49411011 -86.41201782]
[186.52099609 -72.21403503]
[179.02348328 -59.17172241]
[169.25692749 -47.72929764]
[157.55397034 -38.27648544]
[144.31323242 -31.13525009]
[129.98565674 -26.54881668]
[115.05925751 -24.67339516]
[114.16644287 -9.69998837]
[113.27362823 5.27341700]
[112.38081360 20.24682236]
[111.48799133 35.22023010]
[110.59517670 50.19363403]
[109.70236206 65.16703796]
[116.66840363 78.33228302]
[108.12342072 91.64745331]
[116.98841858 79.54737854]
[130.18458557 72.41568756]
[145.16397095 71.62939453]
[159.03427124 77.34033203]
[169.11734009 88.44580078]
[173.46632385 102.80151367]
[171.24148560 117.63559723]
[162.87240601 130.08383179]
[149.97502136 137.74264526]
[135.03962708 139.13327026]
[120.94999695 133.98716736]
[110.42662811 123.29797363]
[105.50127411 109.12834930]
[101.96160126 123.70472717]
[98.42192841 138.28109741]
[94.88225555 152.85748291]
[109.29143524 157.03462219]
[123.50322723 161.84063721]
[137.49020386 167.26626587]
[151.22535706 173.30101013]
[164.68218994 179.93325806]
[177.83471680 187.15016174]
[190.65756226 194.93783569]
[203.12594604 203.28121948]
[215.21583557 212.16421509]
[226.90386963 221.56968689]
[238.16749573 231.47946167]
[248.98497009 241.87442017]
[259.33541870 252.73448181]
[269.19885254 264.03872681]
[278.55624390 275.76528931]
[287.38949585 287.89154053]
[295.68161011 300.39410400]
[303.41656494 313.24880981]
[310.57940674 326.43084717]
[317.15631104 339.91482544]
[323.13461304 353.67465210]
[328.50274658 367.68377686]
[333.25036621 381.91519165]
[337.36828613 396.34140015]
[340.84857178 410.93457031]
[343.68450928 425.66653442]
[345.87063599 440.50881958]
[347.40267944 455.43280029]
[348.27774048 470.40969849]
[348.49411011 485.41058350]
[348.05136108 500.40646362]
[346.95037842 515.36846924]
[345.19323730 530.26763916]
[342.78335571 545.07525635]
[339.72540283 559.76269531]
[336.02526855 574.30169678]
[331.69006348 588.66406250]
[326.72821045 602.82220459]
[321.14926147 616.74877930]
[314.96395874 630.41680908]
[308.18429565 643.79992676]
[300.82330322 656.87237549]
[292.89523315 669.60888672]
[284.41537476 681.98486328]
[275.40008545 693.97644043]
[265.86679077 705.56042480]
[255.83386230 716.71453857]
[245.32069397 727.41711426]
[234.34756470 737.64764404]
[222.93565369 747.38629150]
[211.10700989 756.61425781]
[198.88442993 765.31378174]
[186.29153442 773.46807861]
[173.35261536 781.06127930]
[160.09266663 788.07891846]
[146.53727722 794.50726318]
[132.71260071 800.33404541]
[118.64532471 805.54791260]
[104.36261749 810.13891602]
[89.89203644 814.09808350]
[75.26151276 817.41784668]
[60.49929810 820.09179688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 148]
[80 147]
[81 146]
[82 145]
[83 132]
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
