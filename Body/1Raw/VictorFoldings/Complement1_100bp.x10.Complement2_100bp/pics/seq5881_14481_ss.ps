%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[62.50391388 493.92385864]
[63.20594025 508.98898315]
[60.13855743 523.75524902]
[53.49458694 537.29437256]
[43.69167709 548.75537109]
[31.34604263 557.41766357]
[17.23374367 562.73687744]
[2.24188805 564.37854004]
[-12.68712139 562.23950195]
[-26.61483574 556.45422363]
[-38.66574478 547.38635254]
[-48.08232117 535.60589600]
[-54.27263260 521.85339355]
[-56.84754562 506.99337769]
[-55.64519882 491.95993042]
[-50.74118042 477.69802856]
[-42.44375229 465.10424805]
[-31.27450371 454.97021484]
[-17.93554115 447.93295288]
[-3.26536250 444.43484497]
[11.81385231 444.69580078]
[15.78594875 430.23129272]
[19.75804520 415.76675415]
[23.73014069 401.30224609]
[27.59444618 386.80853271]
[31.35074615 372.28649902]
[35.10704803 357.76443481]
[30.80344200 343.50509644]
[41.75005341 332.08221436]
[45.50635147 317.56015015]
[41.20274734 303.30084229]
[52.14935684 291.87796021]
[50.54048157 287.38122559]
[51.73934174 281.82608032]
[56.23973083 276.98272705]
[60.42674255 262.57894897]
[64.61375427 248.17515564]
[60.73660660 233.79402161]
[72.01846313 222.70211792]
[68.14131927 208.32098389]
[79.42317963 197.22908020]
[82.41795349 182.53108215]
[84.20041656 167.63735962]
[85.98288727 152.74365234]
[87.76535034 137.84992981]
[89.54782104 122.95620728]
[91.33028412 108.06249237]
[82.22955322 119.98628235]
[69.29730225 127.58607483]
[54.45195389 129.73449707]
[39.89573288 126.11283875]
[27.78796387 117.25835419]
[19.92476273 104.48455048]
[17.47258759 89.68634796]
[20.79520607 75.05896759]
[29.39972687 62.77230072]
[42.00971985 54.64899445]
[56.75456619 51.89410019]
[71.44696045 54.91628265]
[83.90737152 63.26722717]
[92.28736115 75.70811462]
[95.34380341 90.39150238]
[100.16979980 76.18904877]
[92.15148163 60.64151001]
[97.74828339 44.42452240]
[113.03519440 37.41387939]
[117.64920044 23.14114571]
[122.26321411 8.86841297]
[126.87722015 -5.40432072]
[131.49122620 -19.67705345]
[135.89222717 -34.01690292]
[132.31457520 -49.42829132]
[143.29695129 -59.48993683]
[147.48394775 -73.89371490]
[151.67095947 -88.29750061]
[155.85797119 -102.70127869]
[160.04498291 -117.10506439]
[164.23199463 -131.50885010]
[168.41900635 -145.91262817]
[170.31230164 -160.79266357]
[169.86569214 -175.78601074]
[169.41909790 -190.77935791]
[168.97248840 -205.77272034]
[168.52587891 -220.76606750]
[156.59205627 -227.66349792]
[149.67955017 -239.46331787]
[149.50166321 -253.02937317]
[155.99787903 -264.81680298]
[167.37773132 -271.79827881]
[167.15440369 -286.79663086]
[159.21249390 -300.48007202]
[166.75944519 -313.32110596]
[158.81755066 -327.00457764]
[166.36450195 -339.84561157]
[166.14117432 -354.84396362]
[165.91784668 -369.84228516]
[165.69451904 -384.84063721]
[151.45144653 -390.08462524]
[140.06712341 -400.12265015]
[133.08117676 -413.59710693]
[131.43840027 -428.68569946]
[135.36094666 -443.34780884]
[144.31835938 -455.60055542]
[157.09919739 -463.78677368]
[171.97496033 -466.79943848]
[186.93383789 -464.23101807]
[199.95274353 -456.42895508]
[209.27098083 -444.44836426]
[213.62835693 -429.90951538]
[212.43554688 -414.77868652]
[205.85388184 -401.10220337]
[194.77346802 -390.72970581]
[180.69285583 -385.06396484]
[180.91618347 -370.06561279]
[181.13951111 -355.06729126]
[181.36283875 -340.06893921]
[189.28877258 -327.45828247]
[181.75778198 -313.54443359]
[189.68371582 -300.93377686]
[182.15274048 -287.01995850]
[182.37606812 -272.02160645]
[196.09469604 -263.00622559]
[201.79354858 -247.43431091]
[197.04066467 -231.37469482]
[183.51922607 -221.21267700]
[183.96583557 -206.21931458]
[184.41244507 -191.22596741]
[184.85905457 -176.23262024]
[185.30564880 -161.23927307]
[191.67311096 -174.82070923]
[201.42675781 -186.21659851]
[213.86247253 -194.60426331]
[228.08251953 -199.37818909]
[243.06033325 -200.19372559]
[257.71466064 -196.99203491]
[270.98757935 -190.00421143]
[281.92089844 -179.73472595]
[289.72537231 -166.92495728]
[293.83755493 -152.49963379]
[293.96060181 -137.50013733]
[290.08560181 -123.00929260]
[282.49230957 -110.07321930]
[271.72891235 -99.62576294]
[258.57241821 -92.42115021]
[243.97259521 -88.97948456]
[228.98341370 -89.54921722]
[214.68698120 -94.08922577]
[202.11532593 -102.27175903]
[192.17605591 -113.50611877]
[185.58666992 -126.98127747]
[182.82279968 -141.72561646]
[178.63578796 -127.32183838]
[174.44877625 -112.91805267]
[170.26176453 -98.51427460]
[166.07475281 -84.11048889]
[161.88774109 -69.70671082]
[157.70072937 -55.30292511]
[161.57786560 -40.92179108]
[150.29600525 -29.82988930]
[151.77029419 -25.28725433]
[150.40655518 -19.77025414]
[145.76396179 -15.06304455]
[141.14996338 -0.79031152]
[136.53594971 13.48242188]
[131.92193604 27.75515556]
[127.30792999 42.02788925]
[134.72218323 52.56631088]
[134.71278381 65.64614105]
[127.05911255 76.49195862]
[114.37226105 81.01504517]
[109.54625702 95.21749878]
[106.22399902 109.84496307]
[104.44153595 124.73867798]
[102.65906525 139.63240051]
[100.87660217 154.52610779]
[99.09413910 169.41983032]
[97.31166840 184.31355286]
[107.18173981 173.01834106]
[121.13681793 167.51780701]
[136.05929565 169.04078674]
[148.61547852 177.24703979]
[156.00024414 190.30326843]
[156.56385803 205.29267883]
[150.18037415 218.86659241]
[138.27589417 227.99256897]
[123.50991058 230.63183594]
[109.18118286 226.19477844]
[98.49077606 215.67265320]
[93.82695770 201.41609192]
[97.40462494 216.82748413]
[86.42224884 226.88912964]
[89.99990845 242.30052185]
[79.01753235 252.36216736]
[74.83052063 266.76596069]
[70.64350891 281.16973877]
[66.67141724 295.63424683]
[70.70634460 310.93228149]
[60.02841187 321.31646729]
[56.27210999 335.83853149]
[60.30704117 351.13656616]
[49.62910843 361.52072144]
[45.87280655 376.04278564]
[42.11650467 390.56484985]
[42.99718857 399.65673828]
[38.19466400 405.27432251]
[34.22256851 419.73886108]
[30.25047302 434.20336914]
[26.27837563 448.66790771]
[39.37607956 456.14459229]
[50.20233917 466.64425659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 208]
[22 207]
[23 206]
[24 205]
[25 203]
[26 202]
[27 201]
[29 199]
[30 198]
[32 196]
[35 195]
[36 194]
[37 193]
[39 191]
[41 189]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[62 171]
[63 170]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[71 159]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[89 121]
[90 120]
[92 118]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
