%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[133.07505798 909.00262451]
[118.25214386 906.68756104]
[103.54997253 903.70019531]
[88.99900055 900.04675293]
[74.62940216 895.73480225]
[60.47094727 890.77331543]
[46.55298233 885.17254639]
[32.90436172 878.94409180]
[19.55337143 872.10089111]
[6.52768183 864.65710449]
[-6.14570856 856.62823486]
[-18.44053078 848.03082275]
[-30.33130455 838.88269043]
[-41.79338074 829.20288086]
[-52.80300903 819.01135254]
[-63.33736038 808.32934570]
[-73.37461090 797.17889404]
[-82.89394379 785.58319092]
[-91.87564087 773.56622314]
[-100.30108643 761.15295410]
[-108.15280914 748.36901855]
[-115.41453552 735.24096680]
[-122.07122803 721.79602051]
[-128.10906982 708.06201172]
[-133.51556396 694.06744385]
[-138.27949524 679.84130859]
[-142.39097595 665.41308594]
[-145.84152222 650.81262207]
[-148.62394714 636.07031250]
[-150.73249817 621.21661377]
[-152.16279602 606.28234863]
[-152.91189575 591.29846191]
[-152.97822571 576.29595947]
[-152.36166382 561.30603027]
[-151.06347656 546.35974121]
[-149.08634949 531.48797607]
[-146.43438721 516.72161865]
[-143.11309814 502.09124756]
[-139.12934875 487.62722778]
[-134.49139404 473.35949707]
[-129.20887756 459.31765747]
[-123.29270935 445.53082275]
[-116.75517273 432.02752686]
[-109.60980988 418.83578491]
[-101.87143707 405.98291016]
[-93.55609131 393.49560547]
[-84.68100739 381.39968872]
[-75.26457977 369.72024536]
[-65.32632446 358.48150635]
[-54.88683701 347.70672607]
[-43.96776199 337.41830444]
[-32.59172821 327.63748169]
[-20.78231430 318.38458252]
[-8.56399632 309.67880249]
[4.03790140 301.53811646]
[16.99725914 293.97946167]
[30.28721619 287.01849365]
[43.88022995 280.66958618]
[57.74811935 274.94598389]
[71.86215210 269.85946655]
[86.19306183 265.42065430]
[100.71115112 261.63867188]
[115.38633728 258.52142334]
[112.94061279 243.72215271]
[110.49488068 228.92288208]
[108.04915619 214.12361145]
[104.75725555 210.66348267]
[103.60402679 205.09867859]
[105.75778198 198.84785461]
[103.75376892 183.98231506]
[94.38545227 172.40286255]
[100.20967865 157.69268799]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[79.34655762 74.59893036]
[86.64019012 58.63742447]
[84.41507721 43.80337906]
[82.18995667 28.96933556]
[79.96484375 14.13529205]
[77.73972321 -0.69875193]
[67.85020447 -8.97886086]
[66.30229187 -21.37997818]
[73.38457489 -31.18649483]
[71.38056183 -46.05202103]
[69.37654877 -60.91754913]
[59.86489868 -73.56029510]
[65.83245850 -87.20718384]
[63.82844543 -102.07270813]
[48.91571045 -104.54288483]
[35.39434814 -111.30041504]
[24.46666908 -121.74441528]
[17.10435295 -134.94622803]
[13.96205235 -149.73193359]
[15.31917953 -164.78681946]
[21.05505943 -178.77221680]
[30.65966225 -190.44453430]
[43.27895355 -198.76588440]
[57.79082870 -202.99635315]
[72.90490723 -202.75975037]
[87.27725983 -198.07711792]
[99.62989807 -189.36483765]
[108.86443329 -177.39761353]
[114.15974426 -163.23953247]
[115.04497528 -148.14953613]
[111.44140625 -133.46943665]
[103.66946411 -120.50453949]
[92.42022705 -110.40770721]
[78.69397736 -104.07672119]
[80.69799042 -89.21119690]
[90.06629944 -77.63172913]
[84.24208069 -62.92156601]
[86.24609375 -48.05603409]
[88.25010681 -33.19050598]
[99.70923615 -19.89933968]
[92.57376862 -2.92386913]
[94.79888916 11.91017437]
[97.02400208 26.74421883]
[99.24912262 41.57826233]
[101.47423553 56.41230774]
[111.01235199 63.85212708]
[112.98754120 76.19239807]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[115.07520294 155.68867493]
[124.58685303 168.33142090]
[118.61929321 181.97830200]
[120.62330627 196.84384155]
[122.84842682 211.67787170]
[125.29415131 226.47714233]
[127.73988342 241.27641296]
[130.18560791 256.07568359]
[145.08343506 254.30570984]
[160.04640198 253.21563721]
[175.04345703 252.80773926]
[190.04354858 253.08283997]
[205.01556396 254.04037476]
[219.92849731 255.67837524]
[234.75140381 257.99340820]
[249.45359802 260.98074341]
[264.00457764 264.63412476]
[278.37420654 268.94598389]
[292.53265381 273.90744019]
[306.45065308 279.50814819]
[320.09930420 285.73654175]
[333.45031738 292.57968140]
[346.47604370 300.02337646]
[359.14944458 308.05224609]
[371.44430542 316.64962769]
[383.33511353 325.79766846]
[394.79724121 335.47747803]
[405.80691528 345.66891479]
[416.34130859 356.35089111]
[426.37860107 367.50128174]
[435.89797974 379.09695435]
[444.87973022 391.11389160]
[453.30520630 403.52716064]
[461.15698242 416.31103516]
[468.41876221 429.43905640]
[475.07550049 442.88400269]
[481.11340332 456.61798096]
[486.51995850 470.61251831]
[491.28393555 484.83865356]
[495.39547729 499.26687622]
[498.84606934 513.86724854]
[501.62857056 528.60961914]
[503.73718262 543.46325684]
[505.16754150 558.39752197]
[505.91668701 573.38140869]
[505.98309326 588.38391113]
[505.36657715 603.37384033]
[504.06845093 618.32019043]
[502.09136963 633.19195557]
[499.43948364 647.95831299]
[496.11825562 662.58868408]
[492.13455200 677.05273438]
[487.49667358 691.32043457]
[482.21420288 705.36230469]
[476.29809570 719.14916992]
[469.76058960 732.65252686]
[462.61529541 745.84429932]
[454.87698364 758.69714355]
[446.56167603 771.18450928]
[437.68664551 783.28045654]
[428.27026367 794.95996094]
[418.33203125 806.19873047]
[407.89260864 816.97351074]
[396.97357178 827.26202393]
[385.59756470 837.04284668]
[373.78820801 846.29583740]
[361.56991577 855.00164795]
[348.96804810 863.14239502]
[336.00872803 870.70111084]
[322.71878052 877.66210938]
[309.12579346 884.01104736]
[295.25793457 889.73474121]
[281.14392090 894.82128906]
[266.81301880 899.26019287]
[252.29495239 903.04223633]
[237.61978149 906.15954590]
[222.81793213 908.60571289]
[207.92008972 910.37561035]
[192.95713806 911.46563721]
[177.96006775 911.87347412]
[162.95999146 911.59832764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 137]
[64 136]
[65 135]
[66 134]
[69 133]
[70 132]
[72 130]
[73 129]
[74 128]
[75 127]
[77 125]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[86 116]
[87 115]
[88 114]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
