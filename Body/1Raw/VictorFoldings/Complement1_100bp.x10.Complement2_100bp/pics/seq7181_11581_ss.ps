%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[72.87854004 628.23468018]
[58.06872559 630.76110840]
[43.05282211 631.24743652]
[28.11057472 629.68438721]
[13.52034283 626.10125732]
[-0.44606343 620.56475830]
[-13.52845955 613.17791748]
[-25.48312759 604.07849121]
[-36.08736038 593.43597412]
[-45.14360809 581.44854736]
[-52.48315430 568.33959961]
[-57.96927261 554.35327148]
[-61.49975967 539.75024414]
[-63.00884247 524.80242920]
[-62.46840668 509.78839111]
[-59.88852310 494.98779297]
[-55.31725311 480.67633057]
[-48.83975601 467.12069702]
[-40.57670212 454.57333374]
[-30.68202782 443.26806641]
[-19.34006691 433.41546631]
[-6.76211214 425.19909668]
[6.81751776 418.77203369]
[21.14584160 414.25396729]
[35.95593262 411.72909546]
[50.97188568 411.24444580]
[52.53240967 396.32583618]
[54.09293365 381.40722656]
[55.65345764 366.48861694]
[57.21397781 351.57003784]
[50.84274292 338.10687256]
[59.97375870 325.18652344]
[58.31535339 322.92648315]
[57.45226288 319.87332153]
[57.69104004 316.32672119]
[59.22422791 312.69165039]
[62.09710693 309.43579102]
[64.54283142 294.63653564]
[66.98856354 279.83724976]
[69.43428802 265.03799438]
[71.88001251 250.23870850]
[74.32574463 235.43943787]
[76.77146912 220.64016724]
[79.10695648 205.82310486]
[81.33207703 190.98905945]
[83.33609009 176.12353516]
[85.11855316 161.22981262]
[86.90101624 146.33609009]
[88.68348694 131.44238281]
[90.46595001 116.54866028]
[81.59315491 105.09354401]
[83.31495667 90.70668793]
[94.64032745 81.66887665]
[88.59774017 67.04705048]
[97.79261780 55.32938766]
[98.12759399 40.33312988]
[97.01194000 25.37467766]
[95.89629364 10.41622353]
[94.78064728 -4.54223013]
[93.66499329 -19.50068283]
[84.65708160 -7.50662184]
[70.35391998 -2.98783398]
[56.09022522 -7.62971687]
[47.18601227 -19.70096207]
[46.96232605 -34.69929504]
[55.50260162 -47.03070450]
[69.62152100 -52.09588623]
[84.05308533 -48.00564575]
[93.41508484 -36.28445435]
[94.08486938 -51.26949310]
[94.75465393 -66.25453186]
[95.42443848 -81.23957062]
[81.42855835 -85.19412994]
[68.67368317 -92.16677094]
[57.80066681 -101.80334473]
[49.35495758 -113.61595917]
[43.75923920 -127.00765228]
[41.29227066 -141.30259705]
[42.07500839 -155.78019714]
[46.06468582 -169.71138000]
[53.05711746 -182.39538574]
[62.69715500 -193.19490051]
[74.49673462 -201.56822205]
[87.85957336 -207.09631348]
[102.11129761 -209.50381470]
[103.00411224 -224.47721863]
[103.89693451 -239.45062256]
[104.78974915 -254.42402649]
[105.68256378 -269.39743042]
[105.79422760 -284.39703369]
[105.12444305 -299.38204956]
[104.45465851 -314.36709595]
[103.78487396 -329.35214233]
[89.07814026 -332.76016235]
[75.83680725 -340.01065063]
[65.04344940 -350.56555176]
[57.49902725 -363.64163208]
[53.76337433 -378.26858521]
[54.11370468 -393.36096191]
[58.52402115 -407.79882812]
[66.66705322 -420.51077271]
[77.93852234 -430.55349731]
[91.50202179 -437.18179321]
[106.35104370 -439.90374756]
[121.38369751 -438.51739502]
[135.48445129 -433.12564087]
[147.60694885 -424.12854004]
[156.85160828 -412.19375610]
[162.53242493 -398.20693970]
[164.22782898 -383.20602417]
[161.81202698 -368.30410767]
[155.46427917 -354.60708618]
[145.65562439 -343.13131714]
[133.11395264 -334.72842407]
[118.76991272 -330.02191162]
[119.43969727 -315.03689575]
[120.10948181 -300.05184937]
[120.77926636 -285.06680298]
[130.83673096 -296.19546509]
[145.67677307 -298.38021851]
[158.51472473 -290.62219238]
[163.48126221 -276.46826172]
[158.30572510 -262.38943481]
[145.35432434 -254.82232666]
[130.54824829 -257.22653198]
[120.65596771 -268.50460815]
[119.76315308 -253.53121948]
[118.87033844 -238.55780029]
[117.97752380 -223.58439636]
[117.08470917 -208.61099243]
[131.91142273 -204.11265564]
[145.24218750 -196.19889832]
[156.30329895 -185.32418823]
[164.45161438 -172.11497498]
[169.21195984 -157.33360291]
[170.30484009 -141.83436584]
[167.66282654 -126.51406860]
[161.43475342 -112.26013947]
[151.97726440 -99.89926910]
[139.83445740 -90.14945221]
[125.70653534 -83.57824707]
[110.40947723 -80.56978607]
[109.73969269 -65.58474731]
[109.06990814 -50.59970856]
[108.40012360 -35.61466980]
[108.62345123 -20.61633301]
[109.73909760 -5.65787888]
[110.85474396 9.30057430]
[111.97039795 24.25902748]
[113.08604431 39.21747971]
[119.96606445 25.88836479]
[131.62159729 16.44651985]
[146.08850098 12.48306274]
[160.92881775 14.66590500]
[173.64172363 22.62719917]
[182.08483887 35.02532959]
[184.83538818 49.77099228]
[181.42982483 64.37928009]
[172.44206238 76.38845062]
[159.38668823 83.77473450]
[144.46376038 85.29341888]
[130.18806458 80.68858337]
[118.96530151 70.73621368]
[112.68633270 57.11185455]
[118.85641479 70.66838074]
[109.53404999 83.45133972]
[118.40684509 94.90645599]
[116.68504333 109.29331207]
[105.35967255 118.33112335]
[103.57720184 133.22483826]
[101.79473877 148.11856079]
[100.01226807 163.01228333]
[98.22980499 177.90599060]
[100.47638702 184.12406921]
[99.40614319 189.70542908]
[96.16611481 193.21417236]
[93.94100189 208.04821777]
[95.76277924 216.99914551]
[91.57073975 223.08589172]
[89.12501526 237.88516235]
[86.67928314 252.68443298]
[84.23355865 267.48370361]
[81.78783417 282.28298950]
[79.34210205 297.08224487]
[76.89637756 311.88153076]
[74.89236450 326.74703979]
[81.15197754 341.27728271]
[72.13258362 353.13055420]
[70.57205963 368.04916382]
[69.01153564 382.96774292]
[67.45101166 397.88635254]
[65.89049530 412.80496216]
[80.48110962 416.38653564]
[94.44811249 421.92156982]
[107.53131104 429.30694580]
[119.48696136 438.40505981]
[130.09234619 449.04647827]
[139.14988708 461.03292847]
[146.49085999 474.14108276]
[151.97848511 488.12677002]
[155.51055908 502.72946167]
[157.02125549 517.67706299]
[156.48245239 532.69116211]
[153.90417480 547.49206543]
[149.33444214 561.80401611]
[142.85841370 575.36035156]
[134.59672546 587.90856934]
[124.70326996 599.21496582]
[113.36237335 609.06878662]
[100.78530884 617.28649902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[32 186]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 177]
[45 176]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[53 166]
[55 164]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[69 145]
[70 144]
[71 143]
[72 142]
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
