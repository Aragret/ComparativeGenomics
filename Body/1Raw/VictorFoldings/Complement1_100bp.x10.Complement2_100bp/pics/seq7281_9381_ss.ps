%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[124.70754242 678.15197754]
[110.77550507 672.58319092]
[97.16835785 666.26196289]
[83.92671967 659.20703125]
[71.09009552 651.43951416]
[58.69681549 642.98260498]
[46.78384781 633.86151123]
[35.38675690 624.10351562]
[24.53955078 613.73760986]
[14.27460480 602.79486084]
[4.62255096 591.30792236]
[-4.38780308 579.31097412]
[-12.72956753 566.83990479]
[-20.37784576 553.93188477]
[-27.30981445 540.62548828]
[-33.50478363 526.96032715]
[-38.94426727 512.97735596]
[-43.61203003 498.71813965]
[-47.49414444 484.22531128]
[-50.57901764 469.54208374]
[-52.85745239 454.71234131]
[-54.32263947 439.78030396]
[-54.97021484 424.79052734]
[-54.79824066 409.78775024]
[-53.80723190 394.81674194]
[-52.00014496 379.92221069]
[-49.38237381 365.14855957]
[-45.96173096 350.53994751]
[-41.74842453 336.13989258]
[-36.75502777 321.99145508]
[-30.99644470 308.13677979]
[-24.48986244 294.61727905]
[-17.25469780 281.47323608]
[-9.31254101 268.74395752]
[-0.68709862 256.46737671]
[8.59588909 244.68013000]
[18.50871849 233.41740417]
[29.02180481 222.71282959]
[40.10377502 212.59834290]
[51.72154999 203.10412598]
[63.84046555 194.25852966]
[76.42434692 186.08792114]
[89.43564606 178.61669922]
[102.83552551 171.86717224]
[116.58399963 165.85948181]
[111.33728027 151.80700684]
[106.09056091 137.75453186]
[100.84384155 123.70206451]
[95.59712219 109.64959717]
[89.72816467 95.84542084]
[83.24866486 82.31707001]
[76.76917267 68.78872681]
[70.28967285 55.26037979]
[63.50968552 41.88010788]
[56.43257904 28.65458107]
[49.35547256 15.42905331]
[35.51527023 21.24138641]
[21.19159889 25.73214722]
[6.51034117 28.86187172]
[-8.39947987 30.60305405]
[-23.40683365 30.94038963]
[-38.37983322 29.87091827]
[-53.18688965 27.40403748]
[-67.69788361 23.56142426]
[-81.78527069 18.37685204]
[-95.32527161 11.89588165]
[-108.19887543 4.17546988]
[-120.29295349 -4.71653414]
[-131.50122070 -14.70198631]
[-141.72517395 -25.69313049]
[-150.87495422 -37.59337616]
[-158.87017822 -50.29814148]
[-165.64054871 -63.69577026]
[-171.12658691 -77.66852570]
[-175.28007507 -92.09360504]
[-178.06451416 -106.84424591]
[-179.45542908 -121.79080963]
[-179.44059753 -136.80195618]
[-178.02015686 -151.74574280]
[-175.20657349 -166.49084473]
[-171.02458191 -180.90769958]
[-165.51094055 -194.86958313]
[-158.71411133 -208.25379944]
[-150.69380188 -220.94274902]
[-141.52052307 -232.82489014]
[-131.27485657 -243.79580688]
[-120.04689026 -253.75909424]
[-107.93525696 -262.62716675]
[-95.04642487 -270.32214355]
[-81.49364471 -276.77633667]
[-67.39603424 -281.93304443]
[-52.87747955 -285.74697876]
[-38.06557846 -288.18460083]
[-23.09049416 -289.22448730]
[-8.08383560 -288.85748291]
[6.82251549 -287.08685303]
[21.49755859 -283.92813110]
[35.81232834 -279.40905762]
[49.64101791 -273.56939697]
[62.86210251 -266.46041870]
[75.35939026 -258.14465332]
[87.02305603 -248.69512939]
[97.75058746 -238.19491577]
[107.44772339 -226.73628235]
[116.02922821 -214.41993713]
[123.41969299 -201.35412598]
[129.55416870 -187.65367126]
[134.37873840 -173.43894958]
[137.85101318 -158.83491516]
[139.94046021 -143.96990967]
[140.62873840 -128.97454834]
[139.90979004 -113.98062897]
[137.78991699 -99.11991882]
[134.28778076 -84.52302551]
[129.43414307 -70.31821442]
[123.27165222 -56.63032532]
[115.85447693 -43.57965851]
[107.24778748 -31.28090096]
[97.52723694 -19.84213448]
[86.77824402 -9.36389065]
[75.09527588 0.06174868]
[62.58100128 8.35194778]
[69.65810394 21.57747459]
[76.73521423 34.80300140]
[79.98565674 36.16936111]
[82.73578644 39.17798996]
[84.22093201 43.57658386]
[83.81802368 48.78088379]
[90.29751587 62.30923080]
[96.77701569 75.83757782]
[103.25650787 89.36592102]
[109.24935150 75.61507416]
[123.15923309 70.00122833]
[137.01792908 75.74025726]
[142.88656616 89.54457092]
[137.40330505 103.50644684]
[123.70922089 109.62787628]
[109.64959717 104.40287781]
[114.89631653 118.45534515]
[120.14302826 132.50781250]
[125.38974762 146.56028748]
[130.63647461 160.61276245]
[144.95805359 156.14004517]
[159.50251770 152.45610046]
[174.22645569 149.57191467]
[189.08592224 147.49609375]
[204.03657532 146.23484802]
[219.03379822 145.79191589]
[234.03283691 146.16864014]
[248.98890686 147.36389160]
[263.85739136 149.37409973]
[278.59393311 152.19325256]
[293.15451050 155.81297302]
[307.49569702 160.22242737]
[321.57467651 165.40846252]
[335.34945679 171.35559082]
[348.77890015 178.04609680]
[361.82296753 185.45997620]
[374.44268799 193.57513428]
[386.60040283 202.36732483]
[398.25982666 211.81033325]
[409.38619995 221.87594604]
[419.94628906 232.53416443]
[429.90859985 243.75314331]
[439.24334717 255.49942017]
[447.92272949 267.73794556]
[455.92083740 280.43215942]
[463.21377563 293.54421997]
[469.77978516 307.03497314]
[475.59927368 320.86416626]
[480.65487671 334.99050903]
[484.93151855 349.37185669]
[488.41641235 363.96530151]
[491.09915161 378.72726440]
[492.97177124 393.61370850]
[494.02865601 408.58020020]
[494.26663208 423.58206177]
[493.68502808 438.57455444]
[492.28558350 453.51290894]
[490.07241821 468.35253906]
[487.05218506 483.04919434]
[483.23388672 497.55895996]
[478.62890625 511.83856201]
[473.25100708 525.84539795]
[467.11624146 539.53759766]
[460.24288940 552.87438965]
[452.65148926 565.81597900]
[444.36468506 578.32360840]
[435.40719604 590.36010742]
[425.80578613 601.88940430]
[415.58908081 612.87725830]
[404.78759766 623.29071045]
[393.43356323 633.09881592]
[381.56085205 642.27221680]
[369.20489502 650.78363037]
[356.40258789 658.60754395]
[343.19210815 665.72064209]
[329.61291504 672.10174561]
[315.70550537 677.73175049]
[301.51141357 682.59387207]
[287.07296753 686.67364502]
[272.43328857 689.95880127]
[257.63604736 692.43963623]
[242.72541809 694.10870361]
[227.74588013 694.96099854]
[212.74215698 694.99401855]
[197.75901794 694.20764160]
[182.84117126 692.60418701]
[168.03315735 690.18853760]
[153.37915039 686.96777344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 131]
[51 130]
[52 129]
[53 128]
[54 124]
[55 123]
[56 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
