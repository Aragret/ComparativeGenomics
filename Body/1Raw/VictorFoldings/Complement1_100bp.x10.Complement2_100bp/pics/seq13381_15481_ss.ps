%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[199.15112305 577.99890137]
[187.92370605 568.04638672]
[177.24191284 557.51043701]
[167.13600159 546.42089844]
[157.63462830 534.80920410]
[148.76470947 522.70831299]
[140.55140686 510.15249634]
[133.01799011 497.17733765]
[126.18582916 483.81961060]
[120.07427216 470.11718750]
[114.70065308 456.10894775]
[110.08020020 441.83453369]
[106.22601318 427.33444214]
[103.14901733 412.64978027]
[100.85793304 397.82217407]
[99.35925293 382.89364624]
[98.65722656 367.90649414]
[98.75385284 352.90322876]
[99.64884186 337.92639160]
[101.33966827 323.01840210]
[103.82154083 308.22152710]
[107.08740997 293.57769775]
[111.12802887 279.12844849]
[115.93194580 264.91473389]
[121.48554230 250.97685242]
[127.77307129 237.35429382]
[134.77671814 224.08567810]
[142.47660828 211.20861816]
[150.85095215 198.75961304]
[159.87597656 186.77395630]
[169.52612305 175.28561401]
[158.57022095 165.04022217]
[147.61430359 154.79483032]
[136.65840149 144.54943848]
[125.70248413 134.30404663]
[114.74657440 124.05865479]
[103.79066467 113.81326294]
[90.21636963 110.46212006]
[85.96394348 97.14264679]
[75.00803375 86.89725494]
[63.89771271 96.98752594]
[52.00190353 106.13861847]
[39.39977264 114.28964233]
[26.17518997 121.38633728]
[12.41615677 127.38149261]
[-1.78575611 132.23519897]
[-16.33603859 135.91516113]
[-31.13785744 138.39688110]
[-46.09270859 139.66384888]
[-61.10107040 139.70764160]
[-76.06305695 138.52793884]
[-90.87910461 136.13262939]
[-105.45061493 132.53762817]
[-119.68060303 127.76687622]
[-133.47438049 121.85211182]
[-146.74015808 114.83269501]
[-159.38963318 106.75534058]
[-171.33862305 97.67381287]
[-182.50762939 87.64853668]
[-192.82231140 76.74623871]
[-202.21403503 65.03947449]
[-210.62028503 52.60613632]
[-217.98512268 39.52898407]
[-224.25953674 25.89503479]
[-229.40176392 11.79502773]
[-233.37759399 -2.67720580]
[-236.16056824 -17.42535400]
[-237.73216248 -32.35126495]
[-238.08192444 -47.35561371]
[-237.20751953 -62.33854675]
[-235.11476135 -77.20034790]
[-231.81758118 -91.84211731]
[-227.33792114 -106.16641235]
[-221.70559692 -120.07791138]
[-214.95809937 -133.48402405]
[-207.14031982 -146.29554749]
[-198.30427551 -158.42721558]
[-188.50878906 -169.79827881]
[-177.81904602 -180.33309937]
[-166.30618286 -189.96153259]
[-154.04681396 -198.61950684]
[-141.12252808 -206.24942017]
[-127.61933136 -212.80049133]
[-113.62709045 -218.22911072]
[-99.23892212 -222.49917603]
[-84.55057526 -225.58224487]
[-69.65980530 -227.45780945]
[-54.66570282 -228.11338806]
[-39.66806030 -227.54461670]
[-24.76668167 -225.75529480]
[-10.06073570 -222.75729370]
[4.35191202 -218.57060242]
[18.37534523 -213.22306824]
[31.91623878 -206.75028992]
[44.88447952 -199.19531250]
[57.19376373 -190.60845947]
[68.76217651 -181.04682922]
[79.51272583 -170.57408142]
[89.37387848 -159.25990295]
[98.27999115 -147.17959595]
[106.17181396 -134.41354370]
[112.99681091 -121.04671478]
[118.70957184 -107.16806030]
[123.27207184 -92.86993408]
[126.65396118 -78.24749756]
[128.83271790 -63.39805603]
[129.79385376 -48.42044067]
[129.53096008 -33.41431808]
[128.04579163 -18.47955704]
[125.34824371 -3.71554613]
[121.45626068 10.77946091]
[116.39573669 24.90900040]
[110.20035553 38.57904434]
[102.91134644 51.69861221]
[94.57720947 64.18040466]
[85.25342560 75.94134521]
[96.20933533 86.18673706]
[109.78363037 89.53787994]
[114.03605652 102.85735321]
[124.99196625 113.10274506]
[135.94787598 123.34813690]
[146.90379333 133.59353638]
[157.85969543 143.83891296]
[168.81559753 154.08430481]
[179.77151489 164.32969666]
[190.58799744 153.93206787]
[201.94253540 144.12483215]
[213.80293274 134.93582153]
[226.13558960 126.39106750]
[238.90553284 118.51479340]
[252.07658386 111.32933044]
[265.61138916 104.85504913]
[279.47158813 99.11029053]
[293.61785889 94.11135101]
[308.01019287 89.87239075]
[322.60769653 86.40543365]
[337.36904907 83.72029877]
[352.25238037 81.82460785]
[367.21548462 80.72372437]
[382.21600342 80.42076874]
[397.21139526 80.91661072]
[412.15911865 82.20983887]
[427.01684570 84.29678345]
[441.74243164 87.17153168]
[456.29415894 90.82593536]
[470.63073730 95.24963379]
[484.71157837 100.43009186]
[498.49676514 106.35262299]
[511.94717407 113.00043488]
[525.02471924 120.35469055]
[537.69232178 128.39453125]
[549.91406250 137.09718323]
[561.65533447 146.43797302]
[572.88281250 156.39041138]
[583.56463623 166.92630005]
[593.67065430 178.01577759]
[603.17205811 189.62738037]
[612.04205322 201.72824097]
[620.25543213 214.28401184]
[627.78894043 227.25912476]
[634.62121582 240.61680603]
[640.73284912 254.31918335]
[646.10656738 268.32739258]
[650.72711182 282.60177612]
[654.58135986 297.10183716]
[657.65844727 311.78646851]
[659.94964600 326.61407471]
[661.44842529 341.54260254]
[662.15051270 356.52975464]
[662.05401611 371.53302002]
[661.15911865 386.50985718]
[659.46838379 401.41787720]
[656.98663330 416.21475220]
[653.72082520 430.85861206]
[649.68029785 445.30786133]
[644.87646484 459.52160645]
[639.32293701 473.45953369]
[633.03552246 487.08212280]
[626.03198242 500.35079956]
[618.33215332 513.22790527]
[609.95788574 525.67694092]
[600.93292236 537.66265869]
[591.28283691 549.15106201]
[581.03503418 560.10961914]
[570.21850586 570.50720215]
[558.86389160 580.31433105]
[547.00341797 589.50329590]
[534.67071533 598.04797363]
[521.90069580 605.92413330]
[508.72964478 613.10949707]
[495.19479370 619.58367920]
[481.33456421 625.32836914]
[467.18823242 630.32720947]
[452.79589844 634.56610107]
[438.19836426 638.03295898]
[423.43701172 640.71801758]
[408.55364990 642.61358643]
[393.59051514 643.71441650]
[378.58999634 644.01727295]
[363.59463501 643.52130127]
[348.64691162 642.22796631]
[333.78918457 640.14093018]
[319.06362915 637.26611328]
[304.51193237 633.61163330]
[290.17535400 629.18780518]
[276.09454346 624.00726318]
[262.30941772 618.08465576]
[248.85903931 611.43676758]
[235.78153992 604.08239746]
[223.11399841 596.04248047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 125]
[32 124]
[33 123]
[34 122]
[35 121]
[36 120]
[37 119]
[39 117]
[40 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
