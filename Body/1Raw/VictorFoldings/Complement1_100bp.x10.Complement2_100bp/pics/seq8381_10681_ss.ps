%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[-135.75572205 150.57637024]
[-138.44398499 135.82171631]
[-140.20976257 120.92846680]
[-141.04620361 105.95425415]
[-140.95010376 90.95700073]
[-139.92181396 75.99473572]
[-137.96531677 61.12534714]
[-135.08818054 46.40635300]
[-131.30152893 31.89469910]
[-126.62002563 17.64653397]
[-140.55181885 12.08730793]
[-154.48362732 6.52808189]
[-168.41542053 0.96885586]
[-182.34721375 -4.59037018]
[-196.27902222 -10.14959621]
[-210.21081543 -15.70882225]
[-224.14260864 -21.26804733]
[-230.58511353 -7.71629906]
[-237.88264465 5.39483213]
[-246.00520325 18.01146889]
[-254.91944885 30.08176804]
[-264.58871460 41.55612564]
[-274.97326660 52.38739395]
[-286.03048706 62.53106689]
[-297.71487427 71.94545746]
[-309.97842407 80.59188080]
[-322.77078247 88.43480682]
[-336.03933716 95.44200897]
[-349.72961426 101.58468628]
[-363.78527832 106.83760834]
[-378.14865112 111.17917633]
[-392.76068115 114.59156036]
[-407.56134033 117.06072998]
[-422.48974609 118.57655334]
[-437.48461914 119.13278198]
[-452.48434448 118.72714233]
[-467.42721558 117.36129761]
[-482.25192261 115.04086304]
[-496.89746094 111.77536774]
[-511.30371094 107.57823944]
[-525.41143799 102.46672058]
[-539.16265869 96.46180725]
[-552.50091553 89.58818817]
[-565.37139893 81.87410736]
[-577.72113037 73.35125732]
[-589.49951172 64.05466461]
[-600.65795898 54.02252960]
[-611.15075684 43.29607773]
[-620.93475342 31.91938782]
[-629.96972656 19.93920517]
[-638.21862793 7.40476227]
[-645.64739990 -5.63243389]
[-652.22564697 -19.11881065]
[-657.92633057 -32.99894714]
[-662.72595215 -47.21581268]
[-666.60479736 -61.71097946]
[-669.54705811 -76.42488861]
[-671.54046631 -91.29707336]
[-672.57696533 -106.26641846]
[-672.65222168 -121.27142334]
[-671.76593018 -136.25041199]
[-669.92175293 -151.14184570]
[-667.12725830 -165.88452148]
[-663.39398193 -180.41786194]
[-658.73718262 -194.68214417]
[-653.17602539 -208.61877441]
[-646.73333740 -222.17044067]
[-639.43566895 -235.28149414]
[-631.31298828 -247.89804077]
[-622.39862061 -259.96823120]
[-612.72918701 -271.44250488]
[-602.34454346 -282.27365112]
[-591.28723145 -292.41720581]
[-579.60272217 -301.83145142]
[-567.33905029 -310.47775269]
[-554.54663086 -318.32052612]
[-541.27795410 -325.32757568]
[-527.58764648 -331.47012329]
[-513.53192139 -336.72286987]
[-499.16848755 -341.06427002]
[-484.55642700 -344.47650146]
[-469.75576782 -346.94552612]
[-454.82730103 -348.46115112]
[-439.83242798 -349.01724243]
[-424.83273315 -348.61141968]
[-409.88986206 -347.24542236]
[-395.06518555 -344.92480469]
[-380.41967773 -341.65914917]
[-366.01348877 -337.46188354]
[-351.90582275 -332.35018921]
[-338.15463257 -326.34512329]
[-324.81646729 -319.47137451]
[-311.94607544 -311.75714111]
[-299.59640503 -303.23416138]
[-287.81817627 -293.93743896]
[-276.65982056 -283.90518188]
[-266.16711426 -273.17858887]
[-256.38327026 -261.80178833]
[-247.34840393 -249.82151794]
[-239.09970093 -237.28698730]
[-231.67103577 -224.24971008]
[-225.09294128 -210.76325989]
[-219.39244080 -196.88305664]
[-214.59297180 -182.66613770]
[-210.71424866 -168.17092896]
[-207.77220154 -153.45698547]
[-205.77893066 -138.58477783]
[-204.74261475 -123.61542511]
[-204.66752625 -108.61042023]
[-205.55398560 -93.63143921]
[-207.39831543 -78.74002838]
[-210.19296265 -63.99738312]
[-213.92643738 -49.46408081]
[-218.58338928 -35.19984436]
[-204.65158081 -29.64061928]
[-190.71978760 -24.08139420]
[-176.78799438 -18.52216911]
[-162.85618591 -12.96294308]
[-148.92439270 -7.40371656]
[-134.99259949 -1.84449089]
[-121.06079865 3.71473503]
[-114.64717102 -9.84225845]
[-107.40311432 -22.97429466]
[-99.35665894 -35.63056946]
[-90.53893280 -47.76211929]
[-80.98405457 -59.32200241]
[-70.72898102 -70.26551056]
[-59.81339645 -80.55028534]
[-48.27952576 -90.13655853]
[-36.17199326 -98.98722839]
[-23.53763962 -107.06805420]
[-10.42534351 -114.34778595]
[3.11416578 -120.79824066]
[17.02850533 -126.39447784]
[31.26384544 -131.11483765]
[45.76511002 -134.94107056]
[60.47620010 -137.85835266]
[75.34020233 -139.85542297]
[90.29959869 -140.92453003]
[105.29653168 -141.06155396]
[120.27297211 -140.26596069]
[135.17097473 -138.54083252]
[149.93292236 -135.89283752]
[164.50167847 -132.33222961]
[178.82089233 -127.87276459]
[192.83515930 -122.53170776]
[206.49028015 -116.32971954]
[219.73339844 -109.29080200]
[232.51330566 -101.44218445]
[244.78053284 -92.81422424]
[256.48764038 -83.44029999]
[267.58932495 -73.35668945]
[278.04266357 -62.60240173]
[287.80715942 -51.21903229]
[296.84509277 -39.25062943]
[305.12145996 -26.74349785]
[312.60424805 -13.74601841]
[319.26452637 -0.30848008]
[325.07653809 13.51713085]
[330.01773071 27.67732620]
[334.06906128 42.11732483]
[337.21481323 56.78125763]
[339.44284058 71.61239624]
[340.74450684 86.55335999]
[341.11477661 101.54634094]
[340.55224609 116.53334808]
[339.05905151 131.45639038]
[336.64096069 146.25772095]
[333.30740356 160.88011169]
[329.07119751 175.26695251]
[323.94876099 189.36260986]
[317.95993042 203.11253357]
[311.12786865 216.46354675]
[303.47897339 229.36398315]
[295.04284668 241.76393127]
[285.85217285 253.61543274]
[275.94247437 264.87261963]
[265.35205078 275.49194336]
[254.12194824 285.43234253]
[242.29557800 294.65533447]
[229.91868591 303.12524414]
[217.03916931 310.80929565]
[203.70686340 317.67779541]
[189.97331238 323.70410156]
[175.89169312 328.86499023]
[161.51646423 333.14041138]
[146.90322876 336.51388550]
[132.10853577 338.97232056]
[117.18963623 340.50622559]
[102.20422363 341.10964966]
[87.21028137 340.78030396]
[72.26582336 339.51940918]
[57.42866135 337.33184814]
[42.75619888 334.22613525]
[28.30520058 330.21420288]
[14.13157558 325.31164551]
[0.29015794 319.53741455]
[-13.16550350 312.91381836]
[-26.18334961 305.46652222]
[-38.71302032 297.22430420]
[-50.70603943 288.21908569]
[-62.11600494 278.48565674]
[-72.89878082 268.06170654]
[-83.01264191 256.98757935]
[-92.41847229 245.30609131]
[-101.07987213 233.06245422]
[-108.96333313 220.30401611]
[-116.03836060 207.08013916]
[-122.27758026 193.44200134]
[-127.65685272 179.44235229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 121]
[11 120]
[12 119]
[13 118]
[14 117]
[15 116]
[16 115]
[17 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
