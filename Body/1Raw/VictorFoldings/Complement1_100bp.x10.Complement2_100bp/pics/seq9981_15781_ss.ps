%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[160.85188293 511.45541382]
[154.94406128 497.65933228]
[150.13690186 483.44226074]
[146.46000671 468.89184570]
[143.93608093 454.09777832]
[142.58065796 439.15130615]
[142.40211487 424.14459229]
[143.40155029 409.17010498]
[145.57278442 394.32019043]
[148.90245056 379.68640137]
[153.37002563 365.35897827]
[158.94793701 351.42626953]
[165.60180664 337.97412109]
[173.29061890 325.08551025]
[181.96696472 312.83990479]
[191.57734680 301.31277466]
[202.06253052 290.57519531]
[213.35783386 280.69342041]
[204.39714050 268.66403198]
[195.43644714 256.63464355]
[186.47575378 244.60527039]
[183.72471619 244.06678772]
[181.02124023 242.40612793]
[178.79377747 239.63595581]
[177.45834351 235.92366028]
[177.36517334 231.58255005]
[169.13635254 219.04115295]
[160.90754700 206.49975586]
[152.67874146 193.95834351]
[144.44993591 181.41694641]
[136.22113037 168.87554932]
[122.77000427 162.47894287]
[121.66851044 146.69612122]
[108.21738434 140.29953003]
[107.11589813 124.51670837]
[98.88708496 111.97531128]
[90.47246552 99.55781555]
[81.87390137 87.26697540]
[73.27533722 74.97613525]
[64.49473572 62.81468201]
[55.53404236 50.78530502]
[46.57334518 38.75592422]
[37.61264801 26.72654724]
[28.65195274 14.69717026]
[19.69125748 2.66779256]
[5.24232006 -3.77726674]
[3.84429932 -18.60611725]
[-2.06591821 -21.56936836]
[-5.13213825 -26.35427475]
[-5.19776392 -31.12970543]
[-13.79632759 -43.42054367]
[-22.39489174 -55.71138000]
[-30.99345589 -68.00222015]
[-29.60386276 -53.06672287]
[-33.63327408 -38.61806107]
[-42.55154800 -26.55720139]
[-55.18534088 -18.47095871]
[-69.87245178 -15.42321587]
[-84.68054199 -17.81495857]
[-97.66135406 -25.33150864]
[-107.10704041 -36.98393631]
[-111.77484894 -51.23916626]
[-111.05065918 -66.22167206]
[-105.02974701 -79.96025085]
[-94.50426483 -90.64736176]
[-80.85902405 -96.87692261]
[-65.88929749 -97.82933044]
[-51.56459427 -93.37928009]
[-39.76801300 -84.11047363]
[-45.43079758 -98.00049591]
[-51.09358597 -111.89052582]
[-56.75637054 -125.78055573]
[-62.41915894 -139.67057800]
[-77.05417633 -136.24090576]
[-92.04554749 -135.14300537]
[-107.02408600 -136.40391541]
[-121.62093353 -139.99258423]
[-135.47663879 -145.82063293]
[-148.24996948 -153.74453735]
[-159.62638855 -163.56916809]
[-169.32574463 -175.05259705]
[-177.10917664 -187.91201782]
[-182.78501892 -201.83074951]
[-186.21347046 -216.46606445]
[-187.31013489 -231.45751953]
[-186.04800415 -246.43595886]
[-182.45812988 -261.03250122]
[-176.62893677 -274.88772583]
[-168.70397949 -287.66040039]
[-158.87840271 -299.03601074]
[-147.39418030 -308.73443604]
[-134.53411865 -316.51678467]
[-120.61490631 -322.19149780]
[-105.97932434 -325.61874390]
[-90.98777008 -326.71417236]
[-76.00944519 -325.45077515]
[-61.41318893 -321.85971069]
[-47.55845261 -316.02938843]
[-34.78641891 -308.10336304]
[-23.41161728 -298.27685547]
[-13.71415615 -286.79183960]
[-5.93284655 -273.93112183]
[-0.25931042 -260.01144409]
[3.16673684 -245.37557983]
[4.26092529 -230.38394165]
[2.99631023 -215.40571594]
[-0.59596670 -200.80975342]
[-6.42744207 -186.95549011]
[-14.35451031 -174.18411255]
[-24.18196106 -162.81013489]
[-35.66778564 -153.11361694]
[-48.52912903 -145.33335876]
[-42.86634445 -131.44334412]
[-37.20355606 -117.55331421]
[-31.54077148 -103.66328430]
[-25.87798500 -89.77326202]
[-18.70261765 -76.60078430]
[-10.10405445 -64.30994415]
[-1.50549006 -52.01910782]
[7.09307384 -39.72826767]
[15.87367725 -27.56681252]
[29.68168449 -21.98217583]
[31.72063446 -6.29290342]
[40.68133163 5.73647404]
[49.64202499 17.76585197]
[58.60272217 29.79522896]
[67.56341553 41.82460785]
[76.52411652 53.85398483]
[81.03630066 55.41898727]
[84.61326599 59.83513641]
[85.56617737 66.37757111]
[94.16474152 78.66841125]
[102.76330566 90.95925140]
[107.58782196 93.01789856]
[110.91547394 97.63309479]
[111.42848969 103.74649811]
[119.65729523 116.28790283]
[133.69699097 123.58155060]
[134.20991516 138.46731567]
[148.24961853 145.76097107]
[148.76252747 160.64674377]
[156.99133301 173.18814087]
[165.22013855 185.72953796]
[173.44894409 198.27093506]
[181.67776489 210.81234741]
[189.90657043 223.35374451]
[198.50512695 235.64457703]
[207.46582031 247.67395020]
[216.42652893 259.70333862]
[225.38722229 271.73272705]
[238.08900452 263.73904419]
[251.37881470 256.76660156]
[265.17471313 250.85835266]
[279.39163208 246.05075073]
[293.94195557 242.37341309]
[308.73590088 239.84902954]
[323.68234253 238.49316406]
[338.68908691 238.31416321]
[353.66360474 239.31312561]
[368.51358032 241.48391724]
[383.14746094 244.81314087]
[397.47500610 249.28025818]
[411.40789795 254.85774231]
[424.86026001 261.51119995]
[437.74908447 269.19961548]
[449.99496460 277.87561035]
[461.52239990 287.48562622]
[472.26028442 297.97045898]
[482.14242554 309.26547241]
[491.10791016 321.30102539]
[499.10144043 334.00289917]
[506.07376099 347.29278564]
[511.98184204 361.08874512]
[516.78930664 375.30572510]
[520.46649170 389.85604858]
[522.99072266 404.65005493]
[524.34643555 419.59649658]
[524.52526855 434.60324097]
[523.52618408 449.57772827]
[521.35522461 464.42767334]
[518.02587891 479.06152344]
[513.55859375 493.38903809]
[507.98095703 507.32189941]
[501.32736206 520.77416992]
[493.63882446 533.66290283]
[484.96270752 545.90869141]
[475.35256958 557.43603516]
[464.86761475 568.17382812]
[453.57250977 578.05584717]
[441.53686523 587.02117920]
[428.83493042 595.01458740]
[415.54498291 601.98681641]
[401.74896240 607.89477539]
[387.53192139 612.70208740]
[372.98153687 616.37908936]
[358.18753052 618.90319824]
[343.24105835 620.25872803]
[328.23434448 620.43743896]
[313.25982666 619.43817139]
[298.40991211 617.26708984]
[283.77609253 613.93756104]
[269.44863892 609.47015381]
[255.51583862 603.89239502]
[242.06362915 597.23864746]
[229.17494202 589.54992676]
[216.92924500 580.87371826]
[205.40202332 571.26348877]
[194.66435242 560.77838135]
[184.78244019 549.48321533]
[175.81719971 537.44744873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 150]
[19 149]
[20 148]
[21 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[31 141]
[33 139]
[35 137]
[36 136]
[37 133]
[38 132]
[39 131]
[40 128]
[41 127]
[42 126]
[43 125]
[44 124]
[45 123]
[47 121]
[50 120]
[51 119]
[52 118]
[53 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
