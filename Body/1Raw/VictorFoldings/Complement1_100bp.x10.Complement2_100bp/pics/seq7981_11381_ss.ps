%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[106.85194397 483.61804199]
[102.02594757 469.41558838]
[97.19995117 455.21313477]
[92.37395477 441.01065063]
[87.54795837 426.80819702]
[84.49077606 441.49334717]
[76.11016846 453.93383789]
[63.64934921 462.28417969]
[48.95681000 465.30563354]
[34.21209717 462.55001831]
[21.60250092 454.42608643]
[12.99858379 442.13900757]
[9.67668343 427.51144409]
[12.12958336 412.71337891]
[19.99341202 399.93994141]
[32.10161591 391.08605957]
[46.65801620 387.46511841]
[61.50325394 389.61425781]
[74.43513489 397.21469116]
[83.53443146 409.13720703]
[81.75196838 394.24349976]
[79.96950531 379.34979248]
[70.76760864 391.19567871]
[56.13116455 394.47811890]
[42.75175095 387.69644165]
[36.74626160 373.95111084]
[40.86032104 359.52630615]
[53.21303558 351.01687622]
[68.15691376 352.31320190]
[78.86062622 362.82431030]
[78.63729858 347.82595825]
[78.41397095 332.82763672]
[78.19064331 317.82928467]
[77.96731567 302.83096313]
[77.74398804 287.83261108]
[75.82876587 285.78564453]
[74.60897827 282.85668945]
[74.42462158 279.30685425]
[75.51498413 275.51531982]
[77.98061371 271.94116211]
[78.65039825 256.95611572]
[79.32018280 241.97108459]
[79.98996735 226.98605347]
[80.65975189 212.00100708]
[78.86976624 209.84367371]
[77.82647705 206.84732056]
[77.85373688 203.29278564]
[79.16783905 199.57289124]
[81.84183502 196.15180969]
[83.40235901 181.23321533]
[84.96288300 166.31460571]
[86.52339935 151.39599609]
[79.15227509 141.80470276]
[80.33027649 129.36299133]
[89.96888733 120.79210663]
[91.75135040 105.89839172]
[89.50618744 98.15682983]
[93.67283630 90.79680634]
[95.67684937 75.93128204]
[86.73011780 87.97104645]
[74.24330902 96.28245544]
[59.68335724 99.88909912]
[44.76075363 98.36727142]
[31.22859383 91.89574432]
[20.67661858 81.23479462]
[14.34446526 67.63686371]
[12.97602654 52.69941330]
[16.73206711 38.17728424]
[25.17133141 25.77652550]
[37.30237961 16.95396233]
[51.70007324 12.74606133]
[66.67298126 13.64716148]
[80.46210480 19.55140305]
[91.44750977 29.76516342]
[98.33864594 43.08853531]
[100.32587433 57.95787430]
[105.78123474 43.98507690]
[103.59278107 28.31596184]
[115.42901611 19.27423668]
[113.24055481 3.60512018]
[125.07678986 -5.43660402]
[130.53215027 -19.40940094]
[135.98750305 -33.38219833]
[136.19346619 -42.51430893]
[141.62950134 -47.52142715]
[147.29229736 -61.41145325]
[143.01843262 -73.58096313]
[148.02093506 -85.03341675]
[159.11820984 -89.84764862]
[164.98718262 -103.65182495]
[170.85614014 -117.45600128]
[176.72509766 -131.26017761]
[182.59405518 -145.06436157]
[188.46302795 -158.86853027]
[194.33198547 -172.67271423]
[200.20094299 -186.47688293]
[204.06524658 -200.97058105]
[205.84771729 -215.86430359]
[207.63017273 -230.75801086]
[209.41264343 -245.65173340]
[195.67491150 -251.98652649]
[184.56846619 -262.25796509]
[177.18144226 -275.45974731]
[174.23751831 -290.29849243]
[176.02513123 -305.32046509]
[182.36912537 -319.05395508]
[192.64801025 -330.15350342]
[205.85473633 -337.53167725]
[220.69544983 -340.46566772]
[235.71621704 -338.66799927]
[249.44546509 -332.31478882]
[260.53811646 -322.02847290]
[267.90744019 -308.81680298]
[270.83148193 -293.97412109]
[269.02374268 -278.95455933]
[262.66134644 -265.22958374]
[252.36759949 -254.14382935]
[239.15100098 -246.78335571]
[224.30636597 -243.86926270]
[222.52389526 -228.97555542]
[220.74142456 -214.08183289]
[218.95896912 -199.18811035]
[227.40158081 -211.58659363]
[239.08607483 -220.99258423]
[253.00161743 -226.59236145]
[267.94439697 -227.90150452]
[282.62167358 -224.80676270]
[295.76373291 -217.57585144]
[306.23367310 -206.83432007]
[313.12570190 -193.51141357]
[315.84362793 -178.75971985]
[314.15231323 -163.85537720]
[308.19805908 -150.08776855]
[298.49600220 -138.64793396]
[285.88540649 -130.52554321]
[271.45727539 -126.42324829]
[256.45974731 -126.69594574]
[242.19029236 -131.32005310]
[229.88333130 -139.89552307]
[220.60354614 -151.68049622]
[215.15373230 -165.65545654]
[214.00512695 -180.60792542]
[208.13615417 -166.80375671]
[202.26719666 -152.99957275]
[196.39823914 -139.19538879]
[190.52928162 -125.39122009]
[184.66030884 -111.58704376]
[178.79135132 -97.78286743]
[172.92239380 -83.97869110]
[175.98655701 -66.69928741]
[161.18231201 -55.74866867]
[155.51953125 -41.85864258]
[149.96031189 -27.92684174]
[144.50494385 -13.95404434]
[139.04959106 0.01875313]
[141.62825012 14.68844223]
[129.40180969 24.72959328]
[131.98046875 39.39928436]
[119.75403595 49.44043350]
[114.29867554 63.41323471]
[110.54237366 77.93529510]
[108.53836060 92.80081940]
[106.64507294 107.68085480]
[104.86260223 122.57456970]
[112.50033569 139.33006287]
[101.44200897 152.95652771]
[99.88148499 167.87512207]
[98.32096100 182.79373169]
[96.76043701 197.71234131]
[95.64479065 212.67079163]
[94.97500610 227.65583801]
[94.30522156 242.64086914]
[93.63543701 257.62591553]
[92.96565247 272.61096191]
[92.74232483 287.60928345]
[92.96565247 302.60763550]
[93.18898010 317.60595703]
[93.41230774 332.60430908]
[93.63563538 347.60263062]
[93.85896301 362.60098267]
[94.86322021 377.56732178]
[96.64568329 392.46102905]
[98.42815399 407.35473633]
[101.75041199 421.98220825]
[106.57640839 436.18466187]
[111.40240479 450.38711548]
[116.22840118 464.58956909]
[121.05440521 478.79202271]
[136.09135437 477.63400269]
[150.94372559 480.25271606]
[164.67790222 486.48355103]
[176.43054199 495.93481445]
[185.46286011 508.01239014]
[191.20706177 521.95709229]
[193.30207825 536.89233398]
[191.61622620 551.87933350]
[186.25544739 565.97589111]
[177.55674744 578.29589844]
[166.06694031 588.06500244]
[152.50827026 594.66900635]
[137.73303223 597.69287109]
[122.67005157 596.94641113]
[108.26616669 592.47662354]
[95.42682648 584.56451416]
[84.95912933 573.70733643]
[77.52107239 560.58764648]
[73.58023071 546.03015137]
[73.38431549 530.94995117]
[76.94565582 516.29498291]
[84.04036713 502.98651123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[20 183]
[21 182]
[22 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[40 174]
[41 173]
[42 172]
[43 171]
[44 170]
[49 169]
[50 168]
[51 167]
[52 166]
[55 164]
[56 163]
[58 162]
[59 161]
[76 160]
[77 159]
[79 157]
[81 155]
[82 154]
[83 153]
[85 152]
[86 151]
[89 149]
[90 148]
[91 147]
[92 146]
[93 145]
[94 144]
[95 143]
[96 142]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
