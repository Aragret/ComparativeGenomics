%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[46.99729919 604.45440674]
[32.79438400 610.04370117]
[17.57354164 608.90844727]
[4.35688305 601.27416992]
[-4.23141623 588.65655518]
[-6.48614264 573.56091309]
[-1.95961785 558.98443604]
[8.44941235 547.82135010]
[22.67422867 542.28802490]
[23.78987694 527.32958984]
[24.90552521 512.37109375]
[17.25209999 503.00354004]
[18.05914307 490.53225708]
[27.43828964 481.67819214]
[28.77652359 466.73800659]
[26.24230576 459.79544067]
[30.24752235 451.58593750]
[31.80804634 436.66732788]
[33.36856842 421.74871826]
[26.99733353 408.28555298]
[36.12834930 395.36520386]
[33.69777679 388.38568115]
[37.82477570 380.23669434]
[39.60724258 365.34298706]
[26.38185501 372.42034912]
[12.54300976 366.63360596]
[8.29219055 352.24853516]
[16.76294136 339.86926270]
[31.71094131 338.62133789]
[42.11655426 349.42309570]
[45.00182724 334.70321655]
[47.88710022 319.98333740]
[50.77237320 305.26342773]
[53.65764618 290.54354858]
[56.54291916 275.82363892]
[59.31852722 261.08270264]
[61.98432541 246.32147217]
[64.65012360 231.56025696]
[67.31591797 216.79904175]
[60.67857361 206.68606567]
[62.77868652 194.36642456]
[73.02806854 186.53616333]
[75.91333771 171.81628418]
[78.79861450 157.09638977]
[81.68388367 142.37649536]
[84.56916046 127.65660858]
[72.16960907 136.09764099]
[57.23311996 134.71876526]
[46.58845520 124.15036774]
[45.10220718 109.22417450]
[53.45387268 96.76425171]
[67.82518005 92.46710205]
[81.64576721 98.29732513]
[88.59729004 111.59125519]
[83.77055359 100.99201965]
[87.27043152 89.88381958]
[97.30129242 83.96578979]
[101.91529846 69.69305420]
[98.79808044 54.18197632]
[110.07515717 44.45177841]
[114.68916321 30.17904282]
[119.30317688 15.90631008]
[116.18595123 0.39523289]
[127.46303558 -9.33496571]
[131.54269409 -23.76951981]
[135.08236694 -38.34589386]
[124.20807648 -28.01391983]
[109.95452881 -23.34097672]
[95.07386780 -25.22933769]
[82.43931580 -33.31438828]
[74.49040222 -46.03503418]
[72.76194000 -60.93511581]
[77.58767700 -75.13766479]
[88.03582764 -85.90038300]
[102.08901978 -91.14516449]
[117.03380585 -89.85932922]
[129.98457336 -82.29113770]
[138.44075012 -69.90190125]
[140.76948547 -55.08251190]
[146.84330750 -68.79777527]
[145.35670471 -84.54898834]
[157.58486938 -93.05317688]
[163.65870667 -106.76844025]
[156.04385376 -120.15950012]
[157.75421143 -135.28987122]
[167.92562866 -146.38069153]
[182.50288391 -149.32032776]
[188.57672119 -163.03558350]
[194.65055847 -176.75085449]
[200.72438049 -190.46612549]
[200.16670227 -195.65611267]
[201.52023315 -200.09698486]
[204.17956543 -203.18615723]
[207.38787842 -204.64868164]
[214.06808472 -218.07907104]
[220.64810181 -231.55879211]
[227.12759399 -245.08714294]
[233.60710144 -258.61547852]
[221.06634521 -266.88854980]
[209.76896667 -276.79220581]
[199.92539978 -288.14202881]
[191.71905518 -300.72653198]
[185.30279541 -314.31127930]
[180.79615784 -328.64318848]
[178.28308105 -343.45529175]
[177.81040955 -358.47161865]
[179.38693237 -373.41244507]
[182.98327637 -387.99945068]
[188.53245544 -401.96081543]
[195.93109131 -415.03652954]
[205.04133606 -426.98297119]
[215.69348145 -437.57754517]
[227.68910217 -446.62295532]
[240.80468750 -453.95062256]
[254.79594421 -459.42407227]
[269.40219116 -462.94134521]
[284.35134888 -464.43688965]
[299.36489868 -463.88287354]
[314.16314697 -461.28961182]
[328.47045898 -456.70538330]
[342.02023315 -450.21560669]
[354.56008911 -441.94119263]
[365.85641479 -432.03631592]
[375.69873047 -420.68542480]
[383.90371704 -408.10003662]
[390.31851196 -394.51458740]
[394.82360840 -380.18218994]
[397.33505249 -365.36981201]
[397.80612183 -350.35342407]
[396.22796631 -335.41278076]
[392.63006592 -320.82617188]
[387.07937622 -306.86538696]
[379.67932129 -293.79049683]
[370.56777954 -281.84506226]
[359.91448975 -271.25161743]
[347.91790771 -262.20751953]
[334.80151367 -254.88125610]
[320.80966187 -249.40931702]
[306.20303345 -245.89363098]
[291.25372314 -244.39968872]
[276.24023438 -244.95533752]
[261.44223022 -247.55021667]
[247.13543701 -252.13600159]
[240.65594482 -238.60765076]
[234.17645264 -225.07929993]
[234.12219238 -217.68884277]
[227.49845886 -211.39886475]
[220.81825256 -197.96849060]
[214.43965149 -184.39228821]
[208.36581421 -170.67701721]
[202.29199219 -156.96176147]
[196.21815491 -143.24649048]
[203.83843994 -130.47663879]
[202.46183777 -115.49100494]
[192.40756226 -104.05575562]
[177.37396240 -100.69461060]
[171.30012512 -86.97933960]
[173.22119141 -72.20914459]
[160.55857849 -62.72394562]
[154.48474121 -49.00867844]
[149.65875244 -34.80622101]
[146.11907959 -20.22984695]
[160.09176636 -25.68548012]
[173.14491272 -18.29525375]
[175.65621948 -3.50697017]
[165.77444458 7.77799988]
[150.78405762 7.24079657]
[141.73576355 -4.72095680]
[145.18301392 9.76923847]
[133.57591248 20.52031898]
[128.96189880 34.79305267]
[124.34789276 49.06578445]
[127.79513550 63.55598068]
[116.18803406 74.30706024]
[111.57402039 88.57979584]
[115.50820160 104.88619232]
[102.93714142 115.99225616]
[99.28904724 130.54187012]
[96.40377808 145.26176453]
[93.51850128 159.98165894]
[90.63323212 174.70155334]
[87.74796295 189.42144775]
[94.11831665 206.69859314]
[82.07713318 219.46482849]
[79.41133881 234.22604370]
[76.74554443 248.98725891]
[74.07975006 263.74847412]
[75.63420868 272.74966431]
[71.26280975 278.70892334]
[68.37754059 293.42880249]
[65.49226379 308.14871216]
[62.60699081 322.86859131]
[59.72171783 337.58850098]
[56.83644485 352.30838013]
[54.50095749 367.12545776]
[52.71849442 382.01916504]
[51.04695129 396.92575073]
[57.30656815 411.45596313]
[48.28717422 423.30923462]
[46.72665024 438.22784424]
[45.16612625 453.14645386]
[43.71670914 468.07626343]
[42.37847519 483.01644897]
[50.51169205 499.53710938]
[39.86397934 513.48675537]
[38.74832916 528.44519043]
[37.63268280 543.40368652]
[50.87930298 550.98590088]
[59.51722336 563.56958008]
[61.83137894 578.65625000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[14 203]
[15 202]
[17 201]
[18 200]
[19 199]
[21 197]
[23 196]
[24 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 187]
[37 186]
[38 185]
[39 184]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[54 177]
[57 175]
[58 174]
[60 172]
[61 171]
[62 170]
[64 168]
[65 162]
[66 161]
[79 160]
[80 159]
[82 157]
[83 156]
[87 152]
[88 151]
[89 150]
[90 149]
[94 148]
[95 147]
[96 145]
[97 144]
[98 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
