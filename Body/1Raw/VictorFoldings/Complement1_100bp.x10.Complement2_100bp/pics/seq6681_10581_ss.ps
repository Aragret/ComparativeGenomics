%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[43.10680389 717.28308105]
[29.04561234 722.54492188]
[14.51791573 726.33306885]
[-0.32228690 728.60736084]
[-15.31768131 729.34368896]
[-30.30930710 728.53424072]
[-45.13824463 726.18762207]
[-59.64730072 722.32873535]
[-73.68267059 716.99835205]
[-87.09556580 710.25311279]
[-99.74381256 702.16448975]
[-111.49332428 692.81823730]
[-122.21955109 682.31335449]
[-131.80879211 670.76129150]
[-140.15939331 658.28442383]
[-147.18283081 645.01513672]
[-152.80465698 631.09393311]
[-156.96527100 616.66851807]
[-159.62059021 601.89172363]
[-160.74243164 586.92022705]
[-160.31892395 571.91271973]
[-158.35455322 557.02832031]
[-154.87014771 542.42480469]
[-149.90264893 528.25695801]
[-143.50468445 514.67498779]
[-135.74411011 501.82284546]
[-126.70318604 489.83679199]
[-116.47773743 478.84387207]
[-105.17616272 468.96063232]
[-92.91827393 460.29180908]
[-79.83400726 452.92935181]
[-66.06206512 446.95126343]
[-51.74843216 442.42089844]
[-37.04484558 439.38635254]
[-22.10717201 437.87973022]
[-7.09375572 437.91702271]
[7.83624935 439.49783325]
[10.94036007 424.82254028]
[14.04446983 410.14721680]
[17.14858055 395.47192383]
[20.25268936 380.79663086]
[23.35680008 366.12130737]
[21.66553307 358.92678833]
[26.61791611 351.25137329]
[14.11538124 345.71200562]
[2.85225773 337.94918823]
[-6.78035355 328.23043823]
[-14.44759941 316.89132690]
[-19.88251495 304.32366943]
[-22.89531708 290.96218872]
[-23.38003349 277.26937866]
[-21.31822968 263.71954346]
[-16.77969933 250.78227234]
[-9.92010784 238.90629578]
[-0.97565365 228.50381470]
[9.74506569 219.93626404]
[21.87170219 213.50170898]
[34.98494720 209.42453003]
[48.63103485 207.84750366]
[62.33744049 208.82691956]
[66.30953979 194.36239624]
[70.28163147 179.89787292]
[74.25373077 165.43334961]
[78.22582245 150.96882629]
[82.19792175 136.50430298]
[86.17001343 122.03977966]
[77.11668396 112.38442993]
[73.98473358 99.52443695]
[77.58460236 86.78750610]
[86.98476410 77.46949005]
[99.75280762 73.98155975]
[103.93981934 59.57778168]
[108.12683105 45.17399979]
[112.31384277 30.77021599]
[101.44522095 21.73584747]
[94.86081696 9.27912712]
[93.52554321 -4.70381069]
[97.60813141 -18.09869957]
[106.46060944 -28.89281654]
[118.72091675 -35.47741318]
[132.52236938 -36.88743591]
[136.92337036 -51.22728348]
[141.32435608 -65.56713104]
[145.72535706 -79.90697479]
[150.01948547 -94.27919006]
[154.20649719 -108.68297577]
[158.39350891 -123.08675385]
[144.52317810 -128.83804321]
[131.36975098 -136.08029175]
[119.09286499 -144.72560120]
[107.84156799 -154.66902161]
[97.75244904 -165.78985596]
[88.94795990 -177.95307922]
[81.53499603 -191.01107788]
[75.60353088 -204.80531311]
[71.22557831 -219.16835022]
[68.45427704 -233.92582703]
[67.32327271 -248.89859009]
[67.84629059 -263.90490723]
[70.01697540 -278.76260376]
[73.80899048 -293.29135132]
[79.17630005 -307.31472778]
[86.05374146 -320.66253662]
[94.35783386 -333.17272949]
[103.98777771 -344.69348145]
[114.82666779 -355.08489990]
[126.74293518 -364.22085571]
[139.59193420 -371.99044800]
[153.21766663 -378.29937744]
[167.45474243 -383.07101440]
[182.13034058 -386.24749756]
[197.06631470 -387.79022217]
[212.08134460 -387.68048096]
[226.99316406 -385.91958618]
[241.62077332 -382.52893066]
[255.78657532 -377.54968262]
[269.31863403 -371.04226685]
[282.05267334 -363.08569336]
[293.83413696 -353.77651978]
[304.51998901 -343.22775269]
[313.98049927 -331.56750488]
[322.10083008 -318.93725586]
[328.78244019 -305.49032593]
[333.94418335 -291.38998413]
[337.52340698 -276.80740356]
[339.47668457 -261.91955566]
[339.78030396 -246.90718079]
[338.43054199 -231.95254517]
[335.44381714 -217.23715210]
[330.85638428 -202.93965149]
[324.72393799 -189.23358154]
[317.12088013 -176.28535461]
[308.13952637 -164.25212097]
[297.88894653 -153.27995300]
[286.49349976 -143.50205994]
[274.09155273 -135.03712463]
[260.83364868 -127.98791504]
[246.88075256 -122.43999481]
[232.40220642 -118.46070862]
[217.57376099 -116.09835815]
[202.57545471 -115.38162994]
[187.58930969 -116.31922150]
[172.79728699 -118.89974213]
[168.61027527 -104.49596405]
[164.42326355 -90.09217834]
[165.57473755 -82.79177856]
[160.06520081 -75.50598145]
[155.66421509 -61.16613388]
[151.26321411 -46.82628632]
[146.86221313 -32.48643875]
[158.79724121 -21.86073112]
[164.92593384 -7.04004335]
[163.97442627 9.02788162]
[156.08251953 23.12320518]
[142.78593445 32.39921951]
[126.71762085 34.95722580]
[122.53060913 49.36100769]
[118.34359741 63.76478958]
[114.15658569 78.16857147]
[124.35137939 90.83318329]
[125.03876495 107.07675934]
[115.95037079 120.55738068]
[100.63454437 126.01187134]
[96.66244507 140.47639465]
[92.69034576 154.94091797]
[88.71825409 169.40544128]
[84.74615479 183.86996460]
[80.77406311 198.33448792]
[76.80196381 212.79901123]
[91.32312775 220.41052246]
[103.80140686 231.03492737]
[113.62327576 244.14608765]
[120.30665588 259.09567261]
[123.52458191 275.14526367]
[123.12117004 291.50277710]
[119.11920929 307.36157227]
[111.71883392 321.94027710]
[101.28759003 334.52120972]
[88.34211731 344.48574829]
[73.52260590 351.34478760]
[57.56110001 354.76266479]
[41.24537659 354.57363892]
[38.03210068 369.22543335]
[34.92799377 383.90072632]
[31.82388306 398.57604980]
[28.71977234 413.25134277]
[25.61566162 427.92663574]
[22.51155281 442.60195923]
[36.80292511 447.20202637]
[50.54555893 453.24719238]
[63.59377289 460.67337036]
[75.80924988 469.40182495]
[87.06250000 479.34005737]
[97.23423004 490.38269043]
[106.21661377 502.41268921]
[113.91443634 515.30249023]
[120.24609375 528.91552734]
[125.14447021 543.10742188]
[128.55763245 557.72778320]
[130.44940186 572.62158203]
[130.79974365 587.63092041]
[129.60490417 602.59680176]
[126.87758636 617.36047363]
[122.64668274 631.76544189]
[116.95704651 645.65905762]
[109.86899567 658.89398193]
[101.45766449 671.32995605]
[91.81221771 682.83514404]
[81.03489685 693.28759766]
[69.23995972 702.57647705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[44 182]
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[71 159]
[72 158]
[73 157]
[74 156]
[81 150]
[82 149]
[83 148]
[84 147]
[85 145]
[86 144]
[87 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
