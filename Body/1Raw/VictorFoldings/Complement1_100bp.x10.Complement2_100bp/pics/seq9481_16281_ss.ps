%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-35.69519806 262.31683350]
[-30.15054512 276.26800537]
[-26.02255249 290.70193481]
[-23.35224724 305.47515869]
[-22.16617012 320.44085693]
[-22.47610855 335.45025635]
[-24.27898216 350.35421753]
[-27.55687141 365.00463867]
[-32.27719879 379.25582886]
[-38.39305115 392.96624756]
[-45.84364700 405.99954224]
[-54.55493164 418.22625732]
[-64.44033051 429.52481079]
[-75.40158844 439.78295898]
[-87.32977295 448.89871216]
[-100.10633850 456.78146362]
[-113.60428619 463.35293579]
[-127.68946838 468.54776001]
[-142.22190857 472.31430054]
[-157.05715942 474.61514282]
[-172.04777527 475.42742920]
[-187.04478455 474.74307251]
[-201.89913940 472.56887817]
[-216.46318054 468.92645264]
[-230.59217834 463.85198975]
[-244.14569092 457.39596558]
[-256.98904419 449.62246704]
[-268.99456787 440.60882568]
[-280.04296875 430.44458008]
[-290.02438354 419.23077393]
[-298.83969116 407.07882690]
[-306.40118408 394.10955811]
[-312.63381958 380.45184326]
[-317.47555542 366.24142456]
[-320.87832642 351.61953735]
[-322.80828857 336.73147583]
[-323.24627686 321.72525024]
[-322.18792725 306.75000000]
[-319.64376831 291.95452881]
[-315.63906860 277.48590088]
[-310.21365356 263.48794556]
[-303.42141724 250.09971619]
[-295.32989502 237.45433044]
[-286.01947021 225.67744446]
[-275.58273315 214.88612366]
[-264.12335205 205.18760681]
[-251.75524902 196.67828369]
[-238.60133362 189.44271851]
[-224.79235840 183.55284119]
[-210.46554565 179.06718445]
[-195.76329041 176.03031921]
[-180.83172607 174.47244263]
[-165.81924438 174.40902710]
[-150.87506104 175.84071350]
[-136.14767456 178.75325012]
[-121.78348541 183.11772156]
[-107.92523956 188.89073181]
[-94.71067810 196.01490784]
[-82.27112579 204.41944885]
[-70.73022461 214.02081299]
[-60.20267868 224.72358704]
[-48.51509857 215.32142639]
[-36.82751465 205.91928101]
[-25.13993454 196.51713562]
[-13.45235348 187.11497498]
[-1.76477194 177.71282959]
[9.92280960 168.31066895]
[21.54007339 158.82177734]
[33.08637238 149.24665833]
[44.63267517 139.67153931]
[55.96226883 129.84095764]
[67.06950378 119.75981903]
[78.17673492 109.67868042]
[76.64218903 95.06600952]
[83.95536804 82.32228851]
[97.34611511 76.27472687]
[111.74212646 79.21408844]
[116.76085663 64.20999146]
[131.38522339 61.38563156]
[142.49246216 51.30449295]
[147.51118469 36.30039597]
[162.13555908 33.47603607]
[173.24279785 23.39489746]
[184.35002136 13.31375790]
[189.36875916 -1.69033897]
[203.99313354 -4.51469851]
[215.10035706 -14.59583759]
[205.77996826 -26.35591888]
[197.26588440 -38.71227646]
[189.59611511 -51.60971832]
[182.80494690 -64.99064636]
[176.92268372 -78.79529572]
[171.97561646 -92.96200562]
[167.98583984 -107.42751312]
[164.97114563 -122.12720490]
[162.94503784 -136.99543762]
[161.91653442 -151.96578979]
[161.89024353 -166.97140503]
[162.86628723 -181.94526672]
[164.84028625 -196.82049561]
[167.80345154 -211.53067017]
[171.74252319 -226.01005554]
[176.63992310 -240.19403076]
[182.47377014 -254.01919556]
[189.21801758 -267.42382812]
[196.84254456 -280.34808350]
[205.31327820 -292.73419189]
[214.59240723 -304.52685547]
[224.63848877 -315.67340088]
[235.40664673 -326.12405396]
[246.84877014 -335.83215332]
[258.91378784 -344.75430298]
[271.54779053 -352.85067749]
[284.69436646 -360.08508301]
[298.29479980 -366.42526245]
[312.28833008 -371.84286499]
[326.61245728 -376.31369019]
[341.20321655 -379.81777954]
[355.99545288 -382.33950806]
[370.92309570 -383.86758423]
[385.91946411 -384.39517212]
[400.91757202 -383.91995239]
[415.85046387 -382.44400024]
[430.65139771 -379.97393799]
[445.25430298 -376.52081299]
[459.59396362 -372.10000610]
[473.60632324 -366.73129272]
[487.22882080 -360.43865967]
[500.40054321 -353.25015259]
[513.06274414 -345.19796753]
[525.15881348 -336.31799316]
[536.63482666 -326.64990234]
[547.43939209 -316.23690796]
[557.52429199 -305.12551880]
[566.84454346 -293.36529541]
[575.35845947 -281.00885010]
[583.02807617 -268.11129761]
[589.81909180 -254.73030090]
[595.70117188 -240.92556763]
[600.64807129 -226.75878906]
[604.63769531 -212.29324341]
[607.65216064 -197.59350586]
[609.67810059 -182.72526550]
[610.70642090 -167.75489807]
[610.73248291 -152.74926758]
[609.75628662 -137.77542114]
[607.78210449 -122.90021515]
[604.81872559 -108.19008636]
[600.87951660 -93.71073914]
[595.98193359 -79.52684021]
[590.14788818 -65.70173645]
[583.40344238 -52.29718018]
[575.77880859 -39.37303925]
[567.30786133 -26.98703194]
[558.02862549 -15.19448090]
[547.98242188 -4.04805374]
[537.21411133 6.40246582]
[525.77185059 16.11040306]
[513.70672607 25.03240013]
[501.07263184 33.12860870]
[487.92596436 40.36286545]
[474.32546997 46.70286560]
[460.33184814 52.12029266]
[446.00765991 56.59094620]
[431.41683960 60.09486389]
[416.62457275 62.61639023]
[401.69692993 64.14427185]
[386.70056152 64.67167664]
[371.70245361 64.19625854]
[356.76959229 62.72012711]
[341.96868896 60.24988556]
[327.36581421 56.79656601]
[313.02621460 52.37559128]
[299.01391602 47.00670242]
[285.39151001 40.71388245]
[272.21984863 33.52523422]
[259.55776978 25.47286797]
[247.46177673 16.59274483]
[235.98594666 6.92452812]
[225.18150330 -3.48860359]
[214.07426453 6.59253502]
[209.85000610 20.87556267]
[194.43116760 24.42099190]
[183.32392883 34.50213242]
[172.21670532 44.58327103]
[167.99243164 58.86629486]
[152.57359314 62.41172409]
[141.46636963 72.49286652]
[137.24209595 86.77589417]
[121.82326508 90.32131958]
[123.35781097 104.93399048]
[116.04463196 117.67771149]
[102.65388489 123.72527313]
[88.25787354 120.78591156]
[77.15064240 130.86705017]
[66.04341125 140.94819641]
[64.45178223 145.91949463]
[61.41598129 149.43193054]
[57.73354340 151.17968750]
[54.20779419 151.21783447]
[42.66149521 160.79295349]
[31.11519241 170.36807251]
[26.50707245 178.25497437]
[19.32496071 179.99826050]
[7.63737917 189.40040588]
[-4.05020189 198.80255127]
[-15.73778343 208.20471191]
[-27.42536354 217.60685730]
[-39.11294556 227.00901794]
[-50.80052567 236.41116333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 210]
[62 209]
[63 208]
[64 207]
[65 206]
[66 205]
[67 204]
[68 202]
[69 201]
[70 200]
[71 196]
[72 195]
[73 194]
[77 190]
[79 188]
[80 187]
[82 185]
[83 184]
[84 183]
[86 181]
[87 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
