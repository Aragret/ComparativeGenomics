%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[65.13734436 506.74108887]
[50.21903992 505.18585205]
[35.36793518 503.08361816]
[20.60408592 500.43725586]
[5.94741535 497.25033569]
[-8.58228874 493.52713013]
[-22.96541214 489.27267456]
[-37.18253708 484.49273682]
[-51.21447372 479.19375610]
[-65.04227448 473.38287354]
[-78.64728546 467.06793213]
[-92.01112366 460.25747681]
[-105.11575317 452.96069336]
[-117.94348907 445.18740845]
[-130.47702026 436.94815063]
[-142.69940186 428.25402832]
[-154.59416199 419.11679077]
[-166.14523315 409.54876709]
[-177.33702087 399.56283569]
[-188.15440369 389.17251587]
[-198.58280945 378.39184570]
[-208.60813904 367.23535156]
[-218.21685791 355.71810913]
[-227.39599609 343.85565186]
[-236.13316345 331.66400146]
[-244.41658020 319.15960693]
[-252.23504639 306.35937500]
[-259.57800293 293.28054810]
[-266.43554688 279.94082642]
[-272.79843140 266.35818481]
[-278.65805054 252.55094910]
[-284.00650024 238.53779602]
[-288.83657837 224.33761597]
[-293.14172363 209.96958923]
[-296.91613770 195.45310974]
[-300.15475464 180.80776978]
[-302.85317993 166.05334473]
[-305.00775146 151.20974731]
[-306.61560059 136.29702759]
[-307.67453003 121.33529663]
[-308.18310547 106.34477234]
[-308.14068604 91.34568024]
[-307.54727173 76.35826874]
[-306.40371704 61.40277863]
[-304.71151733 46.49938965]
[-302.47296143 31.66822243]
[-299.69110107 16.92930222]
[-296.36968994 2.30252290]
[-292.51318359 -12.19236946]
[-288.12680054 -26.53580856]
[-283.21646118 -40.70842743]
[-277.78881836 -54.69110107]
[-271.85116577 -68.46494293]
[-265.41152954 -82.01136780]
[-258.47860718 -95.31208801]
[-251.06175232 -108.34915161]
[-243.17097473 -121.10494232]
[-234.81694031 -133.56225586]
[-226.01092529 -145.70426941]
[-216.76481628 -157.51460266]
[-207.09107971 -168.97729492]
[-197.00277710 -180.07688904]
[-186.51354980 -190.79838562]
[-175.63754272 -201.12731934]
[-164.38943481 -211.04974365]
[-152.78440857 -220.55227661]
[-140.83813477 -229.62207031]
[-128.56674194 -238.24688721]
[-115.98680115 -246.41510010]
[-103.11528778 -254.11566162]
[-89.96957397 -261.33816528]
[-76.56741333 -268.07290649]
[-62.92689514 -274.31076050]
[-49.06643295 -280.04330444]
[-35.00473785 -285.26281738]
[-20.76079178 -289.96224976]
[-6.35382605 -294.13522339]
[8.19671249 -297.77615356]
[5.09260273 -312.45144653]
[1.98849237 -327.12677002]
[-1.11561775 -341.80206299]
[-4.21972799 -356.47735596]
[-7.32383776 -371.15267944]
[-10.42794800 -385.82797241]
[-13.53205776 -400.50326538]
[-28.59503365 -400.73681641]
[-43.22825623 -404.31683350]
[-56.69773483 -411.06375122]
[-68.32784271 -420.63912964]
[-77.53521729 -432.56274414]
[-83.85802460 -446.23641968]
[-86.97911072 -460.97436523]
[-86.74192810 -476.03726196]
[-83.15837097 -490.66961670]
[-76.40818787 -504.13748169]
[-66.82997131 -515.76525879]
[-54.90414810 -524.96972656]
[-41.22892761 -531.28924561]
[-26.49024200 -534.40673828]
[-11.42738152 -534.16589355]
[3.20410609 -530.57879639]
[16.67031288 -523.82537842]
[28.29577827 -514.24432373]
[37.49737549 -502.31628418]
[43.81355667 -488.63952637]
[46.92750168 -473.90008545]
[46.68301773 -458.83728027]
[43.09236908 -444.20666504]
[36.33566284 -430.74209595]
[26.75180626 -419.11895752]
[14.82152843 -409.92025757]
[1.14324415 -403.60739136]
[4.24735451 -388.93209839]
[7.35146427 -374.25677490]
[10.45557499 -359.58148193]
[13.55968475 -344.90618896]
[16.66379547 -330.23086548]
[19.76790428 -315.55557251]
[22.87201500 -300.88027954]
[37.65060806 -303.44302368]
[52.51337051 -305.46115112]
[67.44023895 -306.93191528]
[82.41106415 -307.85333252]
[97.40562439 -308.22418213]
[112.40369415 -308.04394531]
[127.38501740 -307.31286621]
[142.32937622 -306.03195190]
[157.21658325 -304.20288086]
[172.02656555 -301.82818604]
[186.73930359 -298.91104126]
[201.33494568 -295.45535278]
[215.79379272 -291.46585083]
[230.09632874 -286.94787598]
[244.22323608 -281.90753174]
[258.15545654 -276.35165405]
[271.87417603 -270.28771973]
[285.36087036 -263.72387695]
[298.59732056 -256.66906738]
[311.56567383 -249.13275146]
[324.24844360 -241.12512207]
[336.62847900 -232.65699768]
[348.68908691 -223.73979187]
[360.41397095 -214.38555908]
[371.78729248 -204.60691833]
[382.79373169 -194.41708374]
[393.41842651 -183.82978821]
[403.64700317 -172.85932922]
[413.46566772 -161.52053833]
[422.86117554 -149.82870483]
[431.82083130 -137.79960632]
[440.33255005 -125.44950104]
[448.38482666 -112.79504395]
[455.96679688 -99.85332489]
[463.06823730 -86.64180756]
[469.67956543 -73.17833710]
[475.79183960 -59.48108673]
[481.39678955 -45.56854248]
[486.48690796 -31.45948601]
[491.05526733 -17.17296791]
[495.09570312 -2.72827101]
[498.60281372 11.85510445]
[501.57180786 26.55747032]
[503.99868774 41.35898209]
[505.88021851 56.23965454]
[507.21380615 71.17940521]
[507.99768066 86.15805817]
[508.23080444 101.15539551]
[507.91281128 116.15117645]
[507.04415894 131.12515259]
[505.62600708 146.05711365]
[503.66027832 160.92689514]
[501.14965820 175.71443176]
[498.09747314 190.39974976]
[494.50790405 204.96304321]
[490.38574219 219.38464355]
[485.73657227 233.64506531]
[480.56671143 247.72508240]
[474.88308716 261.60568237]
[468.69335938 275.26812744]
[462.00595093 288.69393921]
[454.82983398 301.86505127]
[447.17471313 314.76364136]
[439.05093384 327.37231445]
[430.46945190 339.67407227]
[421.44186401 351.65225220]
[411.98031616 363.29071045]
[402.09762573 374.57373047]
[391.80712891 385.48611450]
[381.12268066 396.01309204]
[370.05874634 406.14047241]
[358.63021851 415.85458374]
[346.85260010 425.14230347]
[334.74169922 433.99108887]
[322.31393433 442.38900757]
[309.58605957 450.32470703]
[296.57522583 457.78750610]
[283.29904175 464.76730347]
[269.77542114 471.25466919]
[256.02261353 477.24084473]
[242.05915833 482.71780396]
[227.90394592 487.67807007]
[213.57606506 492.11502075]
[199.09486389 496.02264404]
[184.47988892 499.39562988]
[169.75086975 502.22946167]
[154.92770386 504.52029419]
[140.03036499 506.26504517]
[125.07900238 507.46136475]
[110.09378052 508.10763550]
[95.09493256 508.20297241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
