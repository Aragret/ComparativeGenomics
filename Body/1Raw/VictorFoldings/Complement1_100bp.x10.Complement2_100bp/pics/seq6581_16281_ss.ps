%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[77.90480042 461.36215210]
[77.40778351 476.37994385]
[74.77848816 491.17410278]
[70.07044220 505.44348145]
[63.37950134 518.89758301]
[54.84188080 531.26245117]
[44.63139343 542.28631592]
[32.95591354 551.74487305]
[20.05314255 559.44549561]
[6.18575907 565.23138428]
[-8.36391258 568.98474121]
[-23.29965973 570.62921143]
[-38.31740952 570.13122559]
[-53.11141968 567.50103760]
[-67.38050079 562.79211426]
[-80.83415985 556.10034180]
[-93.19849396 547.56195068]
[-104.22177887 537.35076904]
[-113.67959595 525.67468262]
[-121.37939453 512.77148438]
[-127.16442108 498.90371704]
[-130.91690063 484.35382080]
[-132.56042480 469.41796875]
[-132.06155396 454.40023804]
[-129.43041992 439.60641479]
[-124.72061157 425.33761597]
[-118.02800751 411.88436890]
[-109.48885345 399.52056885]
[-99.27700043 388.49792480]
[-87.60034943 379.04080200]
[-74.69662476 371.34182739]
[-60.82852936 365.55764771]
[-46.27839279 361.80606079]
[-31.34244156 360.16348267]
[-16.32475281 360.66326904]
[-1.53106844 363.29531860]
[12.73743343 368.00601196]
[19.41762733 354.57562256]
[26.09782219 341.14526367]
[32.77801514 327.71487427]
[39.45820999 314.28451538]
[46.13840485 300.85412598]
[52.81859970 287.42376709]
[59.49879456 273.99337769]
[64.21893311 259.75540161]
[66.88472748 244.99417114]
[69.55052185 230.23295593]
[62.73534775 214.06137085]
[74.74652100 200.10382080]
[77.19225311 185.30455017]
[70.40508270 175.29150391]
[72.32154083 162.94197083]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[95.89952087 62.89545822]
[100.27092743 56.93621063]
[103.15619659 42.21632004]
[96.62132263 31.09614754]
[99.32751465 18.89531517]
[109.29154205 12.03640556]
[112.39565277 -2.63889718]
[115.49976349 -17.31419945]
[110.78576660 -32.41680908]
[120.98937225 -43.26741791]
[123.54520416 -58.04807281]
[125.54921722 -72.91359711]
[127.55323029 -87.77912903]
[129.55725098 -102.64465332]
[131.56126404 -117.51018524]
[116.91379547 -120.78635406]
[102.60219574 -125.30957794]
[88.73241425 -131.04635620]
[75.40714264 -137.95422363]
[62.72504425 -145.98202515]
[50.78000259 -155.07034302]
[39.66046143 -165.15187073]
[29.44874954 -176.15197754]
[20.22047043 -187.98922729]
[12.04394817 -200.57595825]
[4.97972012 -213.81900024]
[-0.91991234 -227.62030029]
[-5.61126900 -241.87767029]
[-9.05961704 -256.48556519]
[-11.23942375 -271.33581543]
[-12.13455296 -286.31845093]
[-11.73837471 -301.32260132]
[-10.05382347 -316.23715210]
[-7.09337187 -330.95169067]
[-2.87893748 -345.35723877]
[2.55827665 -359.34716797]
[9.17801476 -372.81790161]
[16.93126488 -385.66967773]
[25.76062584 -397.80740356]
[35.60072327 -409.14114380]
[46.37870789 -419.58703613]
[58.01477814 -429.06771851]
[70.42279053 -437.51300049]
[83.51086426 -444.86035156]
[97.18211365 -451.05538940]
[111.33530426 -456.05221558]
[125.86566925 -459.81390381]
[140.66560364 -462.31250000]
[155.62556458 -463.52960205]
[170.63476562 -463.45614624]
[185.58207703 -462.09268188]
[200.35685730 -459.44934082]
[214.84970093 -455.54562378]
[228.95332336 -450.41049194]
[242.56327820 -444.08193970]
[255.57881165 -436.60684204]
[267.90356445 -428.04052734]
[279.44628906 -418.44641113]
[290.12152100 -407.89553833]
[299.85021973 -396.46600342]
[308.56033325 -384.24246216]
[316.18743896 -371.31539917]
[322.67501831 -357.78051758]
[327.97503662 -343.73803711]
[332.04827881 -329.29193115]
[334.86456299 -314.54913330]
[336.40304565 -299.61883545]
[336.65234375 -284.61151123]
[335.61062622 -269.63833618]
[333.28555298 -254.81013489]
[329.69439697 -240.23669434]
[324.86373901 -226.02592468]
[318.82928467 -212.28303528]
[311.63577271 -199.10977173]
[303.33645630 -186.60366821]
[293.99276733 -174.85731506]
[283.67385864 -163.95768738]
[272.45617676 -153.98547363]
[260.42276001 -145.01449585]
[247.66270447 -137.11120605]
[234.27044678 -130.33409119]
[220.34518433 -124.73334503]
[205.99000549 -120.35041809]
[191.31117249 -117.21777344]
[176.41738892 -115.35858917]
[161.41891479 -114.78664398]
[146.42678833 -115.50617218]
[144.42277527 -100.64064026]
[142.41876221 -85.77511597]
[140.41474915 -70.90958405]
[138.41073608 -56.04405594]
[151.74002075 -62.92373276]
[165.49118042 -56.93159103]
[169.52735901 -42.48481750]
[160.87322998 -30.23303413]
[145.90830994 -29.20780182]
[135.66467285 -40.16330719]
[140.60069275 -26.11037445]
[130.17506409 -14.21008968]
[127.07096100 0.46521294]
[123.96685028 15.14051533]
[130.29751587 31.50785065]
[117.87609100 45.10159302]
[114.99081421 59.82148361]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[103.84130096 174.80618286]
[91.99152374 187.75027466]
[89.54579163 202.54954529]
[96.40885925 213.47021484]
[94.06713867 225.74621582]
[84.31173706 232.89874268]
[81.64594269 247.65997314]
[78.98014832 262.42117310]
[88.14576721 250.54721069]
[100.36940002 241.85336304]
[114.59358215 237.09178162]
[129.58776855 236.67436218]
[144.05482483 240.63722229]
[156.74319458 248.63754272]
[166.55522156 259.98321533]
[172.64205933 273.69271851]
[174.47712708 288.58004761]
[171.90168762 303.35729980]
[165.13853455 316.74609375]
[154.77275085 327.58816528]
[141.70106506 334.94555664]
[127.05433655 338.18179321]
[112.09963989 337.01690674]
[98.13070679 331.55166626]
[86.35597992 322.25888062]
[77.79410553 309.94247437]
[73.18576813 295.66790771]
[72.92916870 280.67358398]
[66.24897766 294.10394287]
[59.56878281 307.53433228]
[52.88858795 320.96469116]
[46.20839310 334.39508057]
[39.52819824 347.82543945]
[32.84800339 361.25582886]
[26.16780853 374.68621826]
[38.53319931 383.22305298]
[49.55774689 393.43286133]
[59.01700974 405.10775757]
[66.71840668 418.01004028]
[72.50514984 431.87707520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 205]
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 178]
[46 177]
[47 176]
[49 173]
[50 172]
[53 170]
[54 169]
[55 168]
[56 167]
[58 165]
[59 164]
[61 163]
[62 162]
[65 160]
[66 159]
[67 158]
[69 156]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
