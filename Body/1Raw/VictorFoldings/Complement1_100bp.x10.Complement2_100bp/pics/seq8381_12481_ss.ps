%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[123.97500610 386.51290894]
[125.35325623 371.55444336]
[128.67225647 356.90386963]
[133.87518311 342.81185913]
[140.87304688 329.51956177]
[149.54606628 317.25442505]
[159.74586487 306.22631836]
[171.29788208 296.62393188]
[184.00448608 288.61160278]
[177.72711182 274.98828125]
[171.44975281 261.36495972]
[165.17239380 247.74165344]
[158.89503479 234.11834717]
[152.61767578 220.49502563]
[146.34031677 206.87170410]
[139.76028442 193.39198303]
[132.88087463 180.06254578]
[126.00146484 166.73312378]
[111.56061554 170.68052673]
[96.61464691 171.53967285]
[81.81658936 169.27299500]
[67.81303406 163.97956848]
[55.21583557 155.89064026]
[44.57540512 145.35966492]
[36.35666275 132.84677124]
[30.91871452 118.89869690]
[28.49915886 104.12487793]
[29.20371628 89.17082214]
[33.00160217 74.68993378]
[39.72687531 61.31492233]
[49.08568192 49.63019562]
[60.66910934 40.14629364]
[53.78969574 26.81686592]
[46.91028214 13.48743725]
[40.03087234 0.15800788]
[33.15145874 -13.17142105]
[26.27204704 -26.50085068]
[19.39263344 -39.83028030]
[11.82825470 -52.78327942]
[3.59944701 -65.32467651]
[-4.62936068 -77.86608124]
[-12.85816860 -90.40747833]
[-25.95416832 -83.08056641]
[-39.53438187 -76.69567871]
[-53.53115082 -71.28463745]
[-67.87474823 -66.87440491]
[-82.49370575 -63.48693848]
[-97.31520081 -61.13912201]
[-112.26538849 -59.84265137]
[-127.26979065 -59.60398865]
[-142.25364685 -60.42431641]
[-157.14231873 -62.29955292]
[-171.86161804 -65.22035217]
[-186.33821106 -69.17217255]
[-200.50000000 -74.13530731]
[-214.27641296 -80.08505249]
[-227.59881592 -86.99174500]
[-240.40084839 -94.82099152]
[-252.61871338 -103.53378296]
[-264.19155884 -113.08670807]
[-275.06170654 -123.43217468]
[-285.17501831 -134.51864624]
[-294.48110962 -146.29087830]
[-302.93359375 -158.69024658]
[-310.49041748 -171.65495300]
[-317.11386108 -185.12040710]
[-322.77099609 -199.01954651]
[-327.43356323 -213.28311157]
[-331.07839966 -227.84004211]
[-333.68731689 -242.61781311]
[-335.24734497 -257.54278564]
[-335.75064087 -272.54064941]
[-335.19479370 -287.53665161]
[-333.58248901 -302.45608521]
[-330.92181396 -317.22460938]
[-327.22598267 -331.76867676]
[-322.51345825 -346.01580811]
[-316.80767822 -359.89505005]
[-310.13708496 -373.33721924]
[-302.53488159 -386.27536011]
[-294.03900146 -398.64505005]
[-284.69171143 -410.38458252]
[-274.53961182 -421.43557739]
[-263.63330078 -431.74288940]
[-252.02705383 -441.25518799]
[-239.77873230 -449.92510986]
[-226.94935608 -457.70947266]
[-213.60282898 -464.56942749]
[-199.80566406 -470.47088623]
[-185.62657166 -475.38436890]
[-171.13619995 -479.28543091]
[-156.40675354 -482.15463257]
[-141.51161194 -483.97769165]
[-126.52497864 -484.74551392]
[-111.52150726 -484.45428467]
[-96.57595062 -483.10543823]
[-81.76277924 -480.70571899]
[-67.15577698 -477.26702881]
[-52.82772064 -472.80657959]
[-38.84999466 -467.34652710]
[-25.29223633 -460.91409302]
[-12.22198868 -453.54135132]
[0.29563165 -445.26498413]
[12.19826221 -436.12625122]
[23.42660332 -426.17068481]
[33.92471695 -415.44787598]
[43.64030075 -404.01126099]
[52.52495193 -391.91778564]
[60.53440857 -379.22775269]
[67.62876129 -366.00430298]
[73.77267456 -352.31338501]
[78.93553925 -338.22320557]
[83.09162140 -323.80389404]
[86.22023010 -309.12738037]
[88.30577087 -294.26669312]
[89.33786011 -279.29592896]
[89.31134796 -264.28967285]
[88.22637177 -249.32264709]
[86.08833313 -234.46943665]
[82.90788269 -219.80404663]
[78.70087433 -205.39953613]
[73.48825836 -191.32766724]
[67.29600525 -177.65853882]
[60.15497208 -164.46026611]
[52.10072708 -151.79858398]
[43.17340088 -139.73658752]
[33.41746521 -128.33436584]
[22.88152885 -117.64872742]
[11.61807919 -107.73289490]
[-0.31676835 -98.63628387]
[7.91203928 -86.09488678]
[16.14084816 -73.55348969]
[24.36965561 -61.01208496]
[27.33312416 -75.71643066]
[38.97616577 -85.17368317]
[53.97573471 -85.06011200]
[65.47423553 -75.42764282]
[68.21469879 -60.68010330]
[60.94423294 -47.55987930]
[46.98678970 -42.06535721]
[32.72206116 -46.70969391]
[39.60147476 -33.38026428]
[46.48088837 -20.05083466]
[53.36030197 -6.72140455]
[60.23971176 6.60802460]
[67.11912537 19.93745422]
[73.99853516 33.26688385]
[88.43938446 29.31947136]
[103.38535309 28.46033096]
[118.18341064 30.72699928]
[132.18696594 36.02043915]
[144.78416443 44.10935974]
[155.42459106 54.64033508]
[163.64334106 67.15322113]
[169.08128357 81.10130310]
[171.50083923 95.87512207]
[170.79627991 110.82917786]
[166.99839783 125.31006622]
[160.27313232 138.68507385]
[150.91432190 150.36981201]
[139.33088684 159.85369873]
[146.21029663 173.18313599]
[153.08972168 186.51255798]
[157.48318481 189.33117676]
[160.09497070 193.16938782]
[160.83508301 197.17778015]
[159.96362305 200.59434509]
[166.24099731 214.21766663]
[172.51835632 227.84098816]
[178.79571533 241.46429443]
[185.07307434 255.08761597]
[191.35043335 268.71093750]
[197.62779236 282.33425903]
[211.97434998 277.88101196]
[226.77944946 275.33853149]
[241.78974915 274.75033569]
[256.74841309 276.12643433]
[271.39944458 279.44335938]
[285.49218750 284.64425659]
[298.78549194 291.64022827]
[311.05184937 300.31149292]
[322.08142090 310.50970459]
[331.68545532 322.06036377]
[339.69961548 334.76580811]
[345.98675537 348.40866089]
[350.43930054 362.75543213]
[352.98107910 377.56063843]
[353.56857300 392.57095337]
[352.19174194 407.52954102]
[348.87414551 422.18045044]
[343.67254639 436.27294922]
[336.67596436 449.56588745]
[328.00408936 461.83184814]
[317.80535889 472.86093140]
[306.25424194 482.46441650]
[293.54840088 490.47796631]
[279.90527344 496.76446533]
[265.55828857 501.21633911]
[250.75296021 503.75738525]
[235.74259949 504.34417725]
[220.78408813 502.96664429]
[206.13334656 499.64834595]
[192.04110718 494.44607544]
[178.74847412 487.44885254]
[166.48292542 478.77639771]
[155.45433044 468.57714844]
[145.85139465 457.02557373]
[137.83845520 444.31936646]
[131.55261230 430.67593384]
[127.10143280 416.32873535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[16 163]
[17 162]
[18 161]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 142]
[38 141]
[39 133]
[40 132]
[41 131]
[42 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
