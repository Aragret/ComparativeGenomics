%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[144.89747620 541.72827148]
[134.54798889 530.86419678]
[124.88005829 519.38934326]
[115.92966461 507.34643555]
[107.73011017 494.78027344]
[100.31188965 481.73764038]
[93.70259857 468.26699829]
[87.92683411 454.41848755]
[83.00607300 440.24359131]
[78.95861816 425.79510498]
[75.79953766 411.12673950]
[73.54058075 396.29306030]
[72.19013977 381.34927368]
[71.75325775 366.35092163]
[72.23153687 351.35385132]
[73.62322235 336.41384888]
[75.92311859 321.58645630]
[79.12267303 306.92687988]
[83.20999146 292.48959351]
[88.16986084 278.32836914]
[93.98383331 264.49584961]
[100.63027191 251.04350281]
[108.08446503 238.02136230]
[116.31867981 225.47790527]
[125.30227661 213.45974731]
[135.00184631 202.01164246]
[145.38128662 191.17614746]
[156.40200806 180.99357605]
[146.91310120 169.37631226]
[137.42420959 157.75904846]
[127.93531036 146.14178467]
[118.44641113 134.52452087]
[108.95751190 122.90726471]
[99.46861267 111.29000092]
[98.96307373 126.28147888]
[89.83355713 138.18324280]
[75.48513794 142.55621338]
[61.26942825 137.76939392]
[52.48853683 125.60814667]
[52.41751480 110.60831451]
[61.08285522 98.36446381]
[75.25260162 93.44325256]
[89.64274597 97.68081665]
[81.60157776 85.01829529]
[73.56040192 72.35576630]
[65.51923370 59.69324112]
[52.27189255 66.74524689]
[38.52359390 72.76248169]
[24.35502243 77.70962524]
[9.84931946 81.55766296]
[-4.90838528 84.28399658]
[-19.83148766 85.87262726]
[-34.83241272 86.31424713]
[-49.82312393 85.60624695]
[-64.71565247 83.75279236]
[-79.42260742 80.76476288]
[-93.85767365 76.65967560]
[-107.93613434 71.46164703]
[-121.57538605 65.20115662]
[-134.69537354 57.91496277]
[-147.21910095 49.64581680]
[-159.07308960 40.44224167]
[-170.18777466 30.35825729]
[-180.49789429 19.45303345]
[-189.94299316 7.79057217]
[-198.46760559 -4.56068850]
[-206.02172852 -17.52826500]
[-212.56101990 -31.03605652]
[-218.04710388 -45.00479507]
[-222.44778442 -59.35250092]
[-225.73724365 -73.99497986]
[-227.89617920 -88.84630585]
[-228.91189575 -103.81931305]
[-228.77847290 -118.82614899]
[-227.49665833 -133.77873230]
[-225.07400513 -148.58930969]
[-221.52470398 -163.17098999]
[-216.86959839 -177.43817139]
[-211.13598633 -191.30715942]
[-204.35754395 -204.69653320]
[-196.57405090 -217.52774048]
[-187.83116150 -229.72546387]
[-178.18019104 -241.21813965]
[-167.67776489 -251.93830872]
[-156.38554382 -261.82305908]
[-144.36978149 -270.81442261]
[-131.70098877 -278.85955811]
[-118.45352173 -285.91131592]
[-104.70510864 -291.92828369]
[-90.53644562 -296.87518311]
[-76.03067017 -300.72293091]
[-61.27291107 -303.44897461]
[-46.34977722 -305.03732300]
[-31.34884453 -305.47866821]
[-16.35814476 -304.77038574]
[-1.46565032 -302.91665649]
[13.24124336 -299.92834473]
[27.67622948 -295.82296753]
[41.75459671 -290.62466431]
[55.39372635 -284.36392212]
[68.51357269 -277.07748413]
[81.03715515 -268.80810547]
[92.89096832 -259.60430908]
[104.00544739 -249.52011108]
[114.31537628 -238.61468506]
[123.76024628 -226.95204163]
[132.28462219 -214.60063171]
[139.83850098 -201.63290405]
[146.37753296 -188.12498474]
[151.86335754 -174.15614319]
[156.26376343 -159.80836487]
[159.55294800 -145.16581726]
[161.71159363 -130.31445312]
[162.72703552 -115.34142303]
[162.59332275 -100.33459473]
[161.31123352 -85.38203430]
[158.88829041 -70.57149506]
[155.33871460 -55.98989105]
[150.68333435 -41.72278976]
[144.94947815 -27.85391808]
[138.17077637 -14.46466637]
[130.38702393 -1.63361037]
[121.64390564 10.56395340]
[111.99271393 22.05644226]
[101.49009705 32.77641296]
[90.19769287 42.66096115]
[78.18175507 51.65206909]
[86.22293091 64.31459808]
[94.26409912 76.97711945]
[102.30527496 89.63964844]
[111.08587646 101.80110168]
[120.57477570 113.41836548]
[130.06367493 125.03562927]
[139.55256653 136.65289307]
[149.04147339 148.27015686]
[158.53036499 159.88742065]
[168.01927185 171.50468445]
[180.19712830 162.73881531]
[192.88674927 154.73165894]
[206.04090881 147.51301575]
[219.61068726 141.10972595]
[233.54559326 135.54560852]
[247.79377747 130.84138489]
[262.30227661 127.01453400]
[277.01705933 124.07930756]
[291.88342285 122.04660797]
[306.84606934 120.92400360]
[321.84933472 120.71567535]
[336.83737183 121.42239380]
[351.75445557 123.04153442]
[366.54507446 125.56706238]
[381.15420532 128.98959351]
[395.52752686 133.29640198]
[409.61157227 138.47145081]
[423.35388184 144.49549866]
[436.70343018 151.34611511]
[449.61047363 158.99784851]
[462.02703857 167.42221069]
[473.90692139 176.58787537]
[485.20590210 186.46072388]
[495.88201904 197.00405884]
[505.89547729 208.17863464]
[515.20910645 219.94288635]
[523.78814697 232.25305176]
[531.60083008 245.06333923]
[538.61798096 258.32608032]
[544.81347656 271.99197388]
[550.16436768 286.01013184]
[554.65069580 300.32843018]
[558.25579834 314.89358521]
[560.96624756 329.65145874]
[562.77191162 344.54711914]
[563.66613770 359.52511597]
[563.64556885 374.52981567]
[562.71026611 389.50534058]
[560.86376953 404.39596558]
[558.11291504 419.14636230]
[554.46789551 433.70156860]
[549.94238281 448.00753784]
[544.55303955 462.01098633]
[538.32006836 475.65982056]
[531.26660156 488.90328979]
[523.41888428 501.69210815]
[514.80609131 513.97869873]
[505.46026611 525.71740723]
[495.41619873 536.86444092]
[484.71124268 547.37847900]
[473.38522339 557.22033691]
[461.48025513 566.35339355]
[449.04064941 574.74371338]
[436.11267090 582.35998535]
[422.74441528 589.17401123]
[408.98562622 595.16040039]
[394.88748169 600.29681396]
[380.50241089 604.56420898]
[365.88394165 607.94665527]
[351.08645630 610.43164062]
[336.16497803 612.00988770]
[321.17504883 612.67553711]
[306.17242432 612.42608643]
[291.21292114 611.26245117]
[276.35217285 609.18902588]
[261.64547729 606.21343994]
[247.14755249 602.34686279]
[232.91230774 597.60357666]
[218.99270630 592.00128174]
[205.44053650 585.56085205]
[192.30621338 578.30615234]
[179.63858032 570.26422119]
[167.48480225 561.46502686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 137]
[29 136]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[43 130]
[44 129]
[45 128]
[46 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
