%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[79.04856110 546.16766357]
[65.41736603 552.49603271]
[50.99520111 556.72198486]
[36.10425949 558.75115967]
[21.07720757 558.53814697]
[6.24975681 556.08776855]
[-8.04684067 551.45477295]
[-21.49319458 544.74255371]
[-33.78890610 536.10119629]
[-44.65929031 525.72369385]
[-53.86149216 513.84191895]
[-61.18993378 500.72125244]
[-66.48089600 486.65487671]
[-69.61617279 471.95700073]
[-70.52573395 456.95599365]
[-69.18923950 441.98696899]
[-65.63655853 427.38436890]
[-59.94706345 413.47439575]
[-52.24784851 400.56781006]
[-42.71092606 388.95294189]
[-31.54935265 378.88931274]
[-19.01247787 370.60171509]
[-5.38038349 364.27526855]
[9.04238510 360.05136108]
[23.93361855 358.02435303]
[38.96063995 358.23947144]
[41.40636826 343.44021606]
[43.85209274 328.64093018]
[42.10702896 325.57711792]
[41.75926208 321.51580811]
[43.26143646 317.12301636]
[46.75167465 313.24160767]
[49.85578537 298.56628418]
[52.95989227 283.89099121]
[56.06400299 269.21569824]
[51.12797928 255.16275024]
[61.55361176 243.26246643]
[64.65772247 228.58717346]
[67.76183319 213.91186523]
[66.15531158 210.77316284]
[65.98923492 206.70039368]
[67.68606567 202.37904358]
[71.34613800 198.65734863]
[75.10243988 184.13528442]
[78.85873413 169.61323547]
[82.61503601 155.09117126]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[85.92735291 82.01741028]
[71.15069580 84.59626007]
[57.28459549 78.87513733]
[48.62561417 66.62678528]
[47.85682678 51.64650345]
[55.21645737 38.57608414]
[68.42404175 31.46554184]
[83.38706207 32.51815796]
[95.46906281 41.40776443]
[100.92633820 55.38008118]
[105.32733917 41.04023361]
[109.72833252 26.70038605]
[114.12933350 12.36053848]
[118.20899963 -2.07401490]
[121.96530151 -16.59607315]
[125.72160339 -31.11813354]
[129.47790527 -45.64019394]
[133.23420715 -60.16225052]
[123.03505707 -49.16327667]
[109.84843445 -42.01394272]
[95.06594849 -39.46873856]
[80.24762726 -41.79626465]
[66.95729065 -48.75089264]
[56.59748840 -59.59868240]
[50.26152420 -73.19484711]
[48.61804581 -88.10453796]
[51.84048843 -102.75431061]
[59.58878708 -115.59813690]
[71.04524231 -125.28057861]
[85.00083160 -130.77981567]
[99.98277283 -131.51551819]
[114.41000366 -127.41002655]
[126.75997925 -118.89661407]
[135.72937012 -106.87371826]
[140.37162781 -92.61015320]
[140.19679260 -77.61097717]
[147.47001648 -90.72967529]
[154.74325562 -103.84836578]
[162.01647949 -116.96706390]
[169.28971863 -130.08575439]
[176.56294250 -143.20445251]
[183.83616638 -156.32315063]
[191.10940552 -169.44183350]
[198.38262939 -182.56053162]
[198.30720520 -198.38156128]
[211.24531555 -205.76089478]
[199.12471008 -214.63186646]
[188.21153259 -224.95204163]
[178.67793274 -236.55865479]
[170.67422485 -249.26866150]
[164.32667542 -262.88159180]
[159.73536682 -277.18273926]
[156.97273254 -291.94659424]
[156.08232117 -306.94027710]
[157.07820129 -321.92730713]
[159.94464111 -336.67135620]
[164.63644409 -350.93984985]
[171.07962036 -364.50778198]
[179.17254639 -377.16116333]
[188.78758240 -388.70040894]
[199.77308655 -398.94354248]
[211.95579529 -407.72903442]
[225.14358521 -414.91830444]
[239.12846375 -420.39794922]
[253.68984985 -424.08157349]
[268.59811401 -425.91107178]
[283.61810303 -425.85760498]
[298.51296997 -423.92199707]
[313.04776001 -420.13479614]
[326.99325562 -414.55572510]
[340.12951660 -407.27273560]
[352.24938965 -398.40075684]
[363.16168213 -388.07965088]
[372.69430542 -376.47222900]
[380.69692993 -363.76156616]
[387.04336548 -350.14810181]
[391.63345337 -335.84655762]
[394.39486694 -321.08248901]
[395.28399658 -306.08871460]
[394.28686523 -291.10177612]
[391.41918945 -276.35797119]
[386.72616577 -262.08984375]
[380.28186035 -248.52247620]
[372.18786621 -235.86978149]
[362.57186890 -224.33132935]
[351.58547974 -214.08912659]
[339.40203857 -205.30467224]
[326.21365356 -198.11651611]
[312.22830200 -192.63803101]
[297.66659546 -188.95562744]
[282.75820923 -187.12738037]
[267.73818970 -187.18211365]
[252.84350586 -189.11897278]
[238.30903625 -192.90740967]
[224.36399841 -198.48767090]
[224.95965576 -183.60498047]
[211.50132751 -175.28730774]
[204.22808838 -162.16860962]
[196.95486450 -149.04991150]
[189.68164062 -135.93121338]
[182.40840149 -122.81252289]
[175.13517761 -109.69383240]
[167.86195374 -96.57513428]
[160.58871460 -83.45644379]
[153.31549072 -70.33775330]
[147.75625610 -56.40595245]
[143.99995422 -41.88389206]
[140.24366760 -27.36183357]
[136.48736572 -12.83977318]
[132.73106384 1.68228590]
[134.19583130 4.88959074]
[134.17987061 8.96571541]
[132.29177856 13.20698929]
[128.46917725 16.76153564]
[124.06818390 31.10138321]
[119.66718292 45.44123077]
[115.26618958 59.78107834]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[113.31139374 135.02963257]
[127.92706299 138.40336609]
[135.99291992 151.05018616]
[132.88845825 165.72541809]
[120.39205933 174.02241516]
[105.66223145 171.18829346]
[97.13710022 158.84747314]
[93.38079834 173.36953735]
[89.62449646 187.89158630]
[85.86819458 202.41365051]
[82.43713379 217.01597595]
[79.33302307 231.69126892]
[76.22891235 246.36657715]
[80.94290924 261.46917725]
[70.73930359 272.31979370]
[67.63519287 286.99508667]
[64.53108215 301.67041016]
[61.42697525 316.34570312]
[58.65136337 331.08666992]
[56.20563889 345.88592529]
[53.75991058 360.68521118]
[68.05716705 365.31619263]
[81.50447845 372.02645874]
[93.80142212 380.66607666]
[104.67327881 391.04202271]
[113.87717438 402.92251587]
[121.20748901 416.04211426]
[126.50045013 430.10775757]
[129.63781738 444.80517578]
[130.54951477 459.80606079]
[129.21514893 474.77526855]
[125.66455841 489.37838745]
[119.97704315 503.28915405]
[112.27966309 516.19683838]
[102.74440002 527.81304932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 196]
[27 195]
[28 194]
[32 193]
[33 192]
[34 191]
[35 190]
[37 188]
[38 187]
[39 186]
[43 185]
[44 184]
[45 183]
[46 182]
[47 175]
[48 174]
[49 173]
[51 171]
[52 170]
[62 169]
[63 168]
[64 167]
[65 166]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 151]
[95 150]
[96 149]
[98 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
