%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[284.96322632 340.98764038]
[276.92205811 328.32510376]
[268.88088989 315.66259766]
[260.83972168 303.00006104]
[252.79855347 290.33752441]
[244.75737000 277.67501831]
[231.40298462 271.07885742]
[230.53659058 255.28138733]
[222.49542236 242.61886597]
[213.00651550 231.00160217]
[202.20436096 220.59422302]
[191.40220642 210.18684387]
[180.60005188 199.77947998]
[169.79789734 189.37210083]
[158.99574280 178.96473694]
[148.19357300 168.55735779]
[148.56048584 183.55287170]
[139.30123901 195.35398865]
[124.64904785 198.56539917]
[111.30268860 191.71888733]
[105.36393738 177.94459534]
[109.54792023 163.53993225]
[121.94176483 155.09051514]
[136.88085938 156.46009827]
[127.22005463 144.98539734]
[120.50737762 141.89317322]
[117.50236511 133.26718140]
[108.01346588 121.64992523]
[98.52457428 110.03266144]
[91.39178467 106.27821350]
[88.98242950 98.17106628]
[79.66754913 86.41381073]
[70.35266876 74.65656281]
[61.03778458 62.89931107]
[51.72290039 51.14205933]
[42.40801620 39.38480759]
[33.09313583 27.62755775]
[23.69098473 15.93997669]
[14.03017330 4.46527624]
[4.19959307 -6.86431694]
[-5.63098812 -18.19391060]
[-15.46156883 -29.52350235]
[-25.29215050 -40.85309601]
[-23.17028236 -26.00393105]
[-27.61875916 -11.67874241]
[-37.77864838 -0.64349759]
[-51.68823624 4.97106981]
[-66.66179657 4.08087540]
[-79.80817413 -3.14219928]
[-88.58900452 -15.30349064]
[-91.30885315 -30.05484581]
[-87.44255066 -44.54800797]
[-77.73662567 -55.98457336]
[-64.06513977 -62.15631866]
[-49.06784058 -61.87158585]
[-35.63948822 -55.18453598]
[-43.30008316 -68.08086395]
[-50.96068192 -80.97718811]
[-49.82351303 -66.02035522]
[-51.58602142 -51.12426376]
[-56.18230438 -36.84581375]
[-63.44053268 -23.71881294]
[-73.08935547 -12.23402882]
[-84.76803589 -2.82082582]
[-98.03996277 4.16887617]
[-112.40895844 8.47376251]
[-127.33782196 9.93289089]
[-142.26843262 8.49171162]
[-156.64257812 4.20410395]
[-169.92289734 -2.76963687]
[-181.61289978 -12.16879272]
[-191.27551270 -23.64196777]
[-198.54951477 -36.76023102]
[-203.16296387 -51.03314590]
[-204.94337463 -65.92710876]
[-203.82420349 -80.88529968]
[-199.84725952 -95.34849548]
[-193.16123962 -108.77597046]
[-184.01611328 -120.66574097]
[-172.75376892 -130.57328796]
[-159.79525757 -138.12821960]
[-145.62504578 -143.04809570]
[-130.77290344 -145.14897156]
[-115.79406738 -144.35229492]
[-101.24855804 -140.68786621]
[-87.68015289 -134.29267883]
[-75.59612274 -125.40582275]
[-65.44823456 -114.35954285]
[-57.61854935 -101.57228851]
[-66.55618286 -114.62713623]
[-59.98521042 -127.99394989]
[-61.32344437 -142.93412781]
[-62.66167831 -157.87431335]
[-63.99991226 -172.81449890]
[-78.65620422 -176.68348694]
[-91.10356903 -185.33442688]
[-99.83892822 -197.72270203]
[-103.80744934 -212.35235596]
[-102.52991486 -227.45678711]
[-96.16058350 -241.21205139]
[-85.46859741 -251.95715332]
[-71.74505615 -258.39456177]
[-56.64714432 -259.74691772]
[-41.99800873 -255.85093689]
[-29.56660843 -247.17706299]
[-20.85409164 -234.77270508]
[-16.91253662 -220.13577271]
[-18.21790695 -205.03372192]
[-24.61257172 -191.29022217]
[-35.32434464 -180.56483459]
[-49.05973053 -174.15274048]
[-47.72149277 -159.21255493]
[-46.38325882 -144.27236938]
[-45.04502487 -129.33218384]
[-36.20310974 -117.34594727]
[-42.67836380 -102.91052246]
[-38.06435394 -88.63778687]
[-30.40375710 -75.74146271]
[-22.74316025 -62.84513474]
[-13.96255684 -50.68367767]
[-4.13197565 -39.35408401]
[5.69860506 -28.02449036]
[15.52918625 -16.69489861]
[25.35976601 -5.36530447]
[29.97585297 -4.14023685]
[33.87136841 -0.00236388]
[35.30824661 6.45107794]
[41.97413635 9.64289951]
[44.85038757 18.31267548]
[54.16526794 30.06992531]
[63.48015213 41.82717896]
[72.79503632 53.58442688]
[82.10991669 65.34168243]
[91.42479706 77.09893036]
[100.73968506 88.85618591]
[110.14183807 100.54376221]
[119.63072968 112.16102600]
[129.11962891 123.77828979]
[138.69474792 135.32458496]
[148.35556030 146.79928589]
[158.60095215 157.75520325]
[169.40310669 168.16256714]
[180.20526123 178.56994629]
[191.00741577 188.97732544]
[201.80958557 199.38468933]
[212.61174011 209.79206848]
[223.41389465 220.19944763]
[218.99626160 205.86471558]
[219.67868042 190.88024902]
[225.38099670 177.00639343]
[235.43330383 165.87306213]
[248.65466309 158.78816223]
[263.49182129 156.58403015]
[278.20178223 159.51960754]
[291.05636597 167.25003052]
[300.54547119 178.86712646]
[305.55432129 193.00613403]
[305.49447632 208.00601196]
[300.37295532 222.10459900]
[290.79144287 233.64559937]
[277.87557983 241.27319336]
[263.14266968 244.09129333]
[248.32356262 241.76884460]
[235.15794373 234.57768250]
[243.19911194 247.24021912]
[257.12866211 254.74208069]
[257.41989136 269.63385010]
[265.46105957 282.29635620]
[273.50225830 294.95889282]
[281.54342651 307.62142944]
[289.58459473 320.28393555]
[297.62576294 332.94647217]
[311.39395142 326.91842651]
[325.92098999 323.06286621]
[340.86636353 321.47012329]
[355.87966919 322.17755127]
[370.60903931 325.16857910]
[384.70916748 330.37310791]
[397.84951782 337.66909790]
[409.72207642 346.88552856]
[420.04855347 357.80636597]
[428.58682251 370.17559814]
[435.13677979 383.70330811]
[439.54489136 398.07232666]
[441.70779419 412.94586182]
[441.57479858 427.97528076]
[439.14901733 442.80819702]
[434.48733521 457.09698486]
[427.69903564 470.50665283]
[418.94317627 482.72286987]
[408.42507935 493.45925903]
[396.39129639 502.46414185]
[383.12387085 509.52645874]
[368.93386841 514.48065186]
[354.15386963 517.21057129]
[339.13037109 517.65222168]
[324.21554565 515.79522705]
[309.75900269 511.68319702]
[296.09963989 505.41244507]
[283.55764771 497.13000488]
[272.42703247 487.03002930]
[262.96868896 475.34927368]
[255.40434265 462.36154175]
[249.91133118 448.37127686]
[246.61840820 433.70645142]
[245.60275269 418.71081543]
[246.88819885 403.73590088]
[250.44459534 389.13275146]
[256.18856812 375.24365234]
[263.98550415 362.39419556]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[4 169]
[5 168]
[6 167]
[8 165]
[9 164]
[10 147]
[11 146]
[12 145]
[13 144]
[14 143]
[15 142]
[16 141]
[24 140]
[25 139]
[27 138]
[28 137]
[29 136]
[31 135]
[32 134]
[33 133]
[34 132]
[35 131]
[36 130]
[37 129]
[38 127]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
[56 119]
[57 118]
[58 117]
[89 116]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
