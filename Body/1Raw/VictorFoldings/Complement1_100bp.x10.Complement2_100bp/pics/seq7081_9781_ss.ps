%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[149.27175903 516.51422119]
[139.62043762 505.02542114]
[130.68746948 492.96957397]
[122.50608826 480.39160156]
[115.10672760 467.33822632]
[108.51692200 453.85803223]
[102.76118469 440.00119019]
[97.86091614 425.81921387]
[93.83435822 411.36489868]
[90.69648743 396.69198608]
[88.45897675 381.85504150]
[87.13014984 366.90930176]
[86.71494293 351.91036987]
[87.21491241 336.91400146]
[88.62818909 321.97601318]
[90.94951630 307.15197754]
[94.17026520 292.49700928]
[98.27845001 278.06567383]
[103.25878906 263.91162109]
[109.09275055 250.08752441]
[115.75863647 236.64479065]
[123.23165131 223.63345337]
[131.48397827 211.10189819]
[140.48495483 199.09675598]
[150.20104980 187.66267395]
[160.59616089 176.84220886]
[150.43260193 165.81031799]
[140.26905823 154.77844238]
[130.10551453 143.74656677]
[119.94196320 132.71469116]
[109.77841949 121.68281555]
[99.61487579 110.65093994]
[88.50763702 100.56980133]
[76.54530334 91.51979828]
[60.87164307 89.36411285]
[55.38995361 75.51490784]
[43.42761612 66.46491241]
[31.46528053 57.41490936]
[21.42758369 68.57369232]
[10.47970963 78.84101868]
[-1.29946101 88.14289856]
[-13.82505703 96.41231537]
[-27.00683022 103.58969116]
[-40.74980545 109.62330627]
[-54.95495987 114.46968842]
[-69.51994324 118.09391785]
[-84.33981323 120.46988678]
[-99.30779266 121.58047485]
[-114.31604004 121.41767883]
[-129.25640869 119.98266602]
[-144.02125549 117.28578186]
[-158.50419617 113.34645844]
[-172.60087585 108.19307709]
[-186.20973206 101.86277008]
[-199.23271179 94.40114594]
[-211.57598877 85.86196899]
[-223.15060425 76.30676270]
[-233.87318420 65.80437469]
[-243.66645813 54.43048096]
[-252.45988464 42.26702499]
[-260.19006348 29.40164757]
[-266.80136108 15.92704773]
[-272.24609375 1.94031024]
[-276.48501587 -12.45778751]
[-279.48764038 -27.16350555]
[-281.23229980 -42.07088470]
[-281.70642090 -57.07252121]
[-280.90661621 -72.06031799]
[-278.83859253 -86.92629242]
[-275.51730347 -101.56333160]
[-270.96667480 -115.86597443]
[-265.21948242 -129.73117065]
[-258.31710815 -143.05900574]
[-250.30934143 -155.75346375]
[-241.25382996 -167.72308350]
[-231.21585083 -178.88160706]
[-220.26771545 -189.14865112]
[-208.48829651 -198.45022583]
[-195.96249390 -206.71931458]
[-182.78053284 -213.89634705]
[-169.03739929 -219.92961121]
[-154.83212280 -224.77561951]
[-140.26704407 -228.39947510]
[-125.44711304 -230.77507019]
[-110.47910309 -231.88526917]
[-95.47086334 -231.72207642]
[-80.53053284 -230.28668213]
[-65.76575470 -227.58941650]
[-51.28292084 -223.64971924]
[-37.18636703 -218.49597168]
[-23.57767296 -212.16531372]
[-10.55488491 -204.70335388]
[1.78816295 -196.16386414]
[13.36253834 -186.60835266]
[24.08484650 -176.10569763]
[33.87783051 -164.73155212]
[42.67093277 -152.56785583]
[50.40079498 -139.70228577]
[57.01172638 -126.22751617]
[62.45608902 -112.24063873]
[66.69465637 -97.84243011]
[69.69689941 -83.13663483]
[71.44116974 -68.22920990]
[71.91490936 -53.22756195]
[71.11470032 -38.23978043]
[69.04631805 -23.37386131]
[65.72465515 -8.73690701]
[61.17364883 5.56561613]
[55.42609024 19.43065834]
[48.52338791 32.75831985]
[40.51528168 45.45257187]
[52.47761536 54.50257111]
[64.43995667 63.55257416]
[79.25798798 65.06094360]
[85.59529877 79.55746460]
[97.55764008 88.60746002]
[92.40880585 74.51882935]
[93.79652405 59.58316422]
[101.45285034 46.68429947]
[113.89945984 38.31280518]
[128.73310852 36.08509445]
[143.08966064 40.43129349]
[154.19708252 50.51222229]
[159.91070557 64.38141632]
[159.12731934 79.36094666]
[151.99818420 92.55850220]
[139.89982605 101.42584229]
[125.16825104 104.25081635]
[110.64675140 100.48738861]
[120.81029510 111.51927185]
[130.97384644 122.55114746]
[141.13739014 133.58302307]
[151.30093384 144.61489868]
[161.46447754 155.64677429]
[171.62803650 166.67864990]
[183.26254272 157.20349121]
[195.45307922 148.45523071]
[208.15425110 140.46643066]
[221.31883240 133.26681519]
[234.89785767 126.88314819]
[248.84078979 121.33919525]
[263.09576416 116.65557098]
[277.60977173 112.84970093]
[292.32879639 109.93573761]
[307.19808960 107.92453766]
[322.16235352 106.82357025]
[337.16586304 106.63693237]
[352.15289307 107.36531830]
[367.06759644 109.00601959]
[381.85455322 111.55293274]
[396.45874023 114.99658203]
[410.82580566 119.32416534]
[424.90234375 124.51956940]
[438.63595581 130.56347656]
[451.97555542 137.43339539]
[464.87152100 145.10377502]
[477.27590942 153.54608154]
[489.14251709 162.72889709]
[500.42724609 172.61808777]
[511.08807373 183.17683411]
[521.08538818 194.36587524]
[530.38195801 206.14358521]
[538.94323730 218.46614075]
[546.73736572 231.28770447]
[553.73535156 244.56057739]
[559.91113281 258.23541260]
[565.24176025 272.26129150]
[569.70733643 286.58605957]
[573.29138184 301.15643311]
[575.98046875 315.91818237]
[577.76458740 330.81643677]
[578.63714600 345.79574585]
[578.59490967 360.80038452]
[577.63800049 375.77450562]
[575.76995850 390.66247559]
[572.99774170 405.40887451]
[569.33172607 419.95880127]
[564.78552246 434.25820923]
[559.37597656 448.25384521]
[553.12329102 461.89364624]
[546.05065918 475.12692261]
[538.18444824 487.90435791]
[529.55389404 500.17852783]
[520.19110107 511.90365601]
[510.13095093 523.03619385]
[499.41079712 533.53472900]
[488.07055664 543.36022949]
[476.15240479 552.47607422]
[463.70068359 560.84838867]
[450.76168823 568.44598389]
[437.38360596 575.24066162]
[423.61618042 581.20709229]
[409.51062012 586.32312012]
[395.11938477 590.56970215]
[380.49603271 593.93109131]
[365.69497681 596.39465332]
[350.77124023 597.95129395]
[335.78036499 598.59527588]
[320.77813721 598.32415771]
[305.82031250 597.13891602]
[290.96258545 595.04394531]
[276.26019287 592.04718018]
[261.76788330 588.15960693]
[247.53948975 583.39575195]
[233.62800598 577.77337646]
[220.08515930 571.31329346]
[206.96133423 564.03967285]
[194.30535889 555.97943115]
[182.16430664 547.16265869]
[170.58334351 537.62213135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 135]
[27 134]
[28 133]
[29 132]
[30 131]
[31 130]
[32 129]
[33 116]
[34 115]
[36 113]
[37 112]
[38 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
