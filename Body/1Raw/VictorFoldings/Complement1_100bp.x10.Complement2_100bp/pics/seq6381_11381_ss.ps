%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[97.07357025 571.03863525]
[83.89536285 578.22674561]
[70.10194397 584.14929199]
[55.81454086 588.75408936]
[41.15870667 592.00079346]
[26.26324463 593.86083984]
[11.25905704 594.31781006]
[-3.72199440 593.36773682]
[-18.54825211 591.01904297]
[-33.08942032 587.29223633]
[-47.21770859 582.22015381]
[-60.80895615 575.84741211]
[-73.74371338 568.22985840]
[-85.90830994 559.43457031]
[-97.19584656 549.53881836]
[-107.50711823 538.62957764]
[-116.75151062 526.80267334]
[-124.84777832 514.16204834]
[-131.72477722 500.81881714]
[-137.32205200 486.89025879]
[-141.59043884 472.49874878]
[-144.49240112 457.77078247]
[-146.00245667 442.83578491]
[-146.10733032 427.82501221]
[-144.80609131 412.87036133]
[-142.11016846 398.10330200]
[-138.04327393 383.65356445]
[-132.64114380 369.64816284]
[-125.95125580 356.21017456]
[-118.03238678 343.45767212]
[-108.95413971 331.50274658]
[-98.79629517 320.45050049]
[-87.64811707 310.39797974]
[-75.60759735 301.43359375]
[-62.78052521 293.63610840]
[-49.27964783 287.07406616]
[-35.22360229 281.80508423]
[-20.73592186 277.87548828]
[-5.94392681 275.31985474]
[9.02238846 274.16058350]
[24.03149605 274.40789795]
[38.95149231 276.05963135]
[53.65125656 279.10122681]
[58.05225372 264.76138306]
[62.45325089 250.42153931]
[66.85424805 236.08169556]
[63.19165039 221.64442444]
[74.63739777 210.72172546]
[77.95965576 196.09426880]
[80.18477631 181.26022339]
[82.40989685 166.42617798]
[84.63500977 151.59213257]
[86.86013031 136.75810242]
[89.08524323 121.92404938]
[91.31036377 107.09000397]
[79.30009460 116.07630157]
[64.31693268 115.36573792]
[53.21097946 105.28319550]
[51.05972672 90.43825531]
[58.84669495 77.61783600]
[73.01179504 72.68326569]
[87.07892609 77.89054871]
[94.61711884 90.86081696]
[98.37342072 76.33876038]
[102.12972260 61.81669998]
[88.81103516 50.97684860]
[81.59372711 35.45583344]
[81.88594818 18.39669991]
[89.58052063 3.23071647]
[103.08623505 -7.01279211]
[119.65663910 -10.31150913]
[122.97889709 -24.93896866]
[126.30116272 -39.56642914]
[129.62341309 -54.19388962]
[132.94567871 -68.82135010]
[123.35338593 -83.45033264]
[127.23268127 -100.16158295]
[141.70729065 -108.72455597]
[144.81140137 -123.39986420]
[147.91551208 -138.07516479]
[148.47372437 -153.06477356]
[146.46971130 -167.93029785]
[144.46569824 -182.79582214]
[142.46168518 -197.66136169]
[140.45767212 -212.52688599]
[125.43487549 -213.37086487]
[110.84336090 -217.04293823]
[97.21058655 -223.41035461]
[85.02937317 -232.24293518]
[74.74006653 -243.22140503]
[66.71461487 -255.94886780]
[61.24313736 -269.96527100]
[58.52341843 -284.76391602]
[58.65378189 -299.80981445]
[61.62950897 -314.55911255]
[67.34303284 -328.47860718]
[75.58780670 -341.06509399]
[86.06579590 -351.86364746]
[98.39822388 -360.48382568]
[112.13927460 -366.61407471]
[126.79222870 -370.03277588]
[141.82739258 -370.61630249]
[156.70123291 -368.34362793]
[170.87609863 -363.29687500]
[183.83955383 -355.65847778]
[195.12300110 -345.70455933]
[204.31852722 -333.79495239]
[211.09373474 -320.36016846]
[215.20368958 -305.88589478]
[216.49983215 -290.89535522]
[214.93531799 -275.93041992]
[210.56668091 -261.53210449]
[203.55184937 -248.22088623]
[194.14440918 -236.47795105]
[182.68444824 -226.72778320]
[169.58619690 -219.32287598]
[155.32319641 -214.53089905]
[157.32720947 -199.66537476]
[159.33122253 -184.79983521]
[161.33523560 -169.93431091]
[163.33924866 -155.06878662]
[168.16766357 -169.27041626]
[176.33337402 -181.85299683]
[187.33702087 -192.04708862]
[200.50575256 -199.22932434]
[215.03428650 -202.96051025]
[230.03419495 -203.01248169]
[244.58822632 -199.38204956]
[257.80639648 -192.29122925]
[268.88043213 -182.17361450]
[277.13311768 -169.64791870]
[282.05981445 -155.48007202]
[283.35925293 -140.53646851]
[280.95196533 -125.73089600]
[274.98516846 -111.96872711]
[265.82373047 -100.09152222]
[254.02786255 -90.82558441]
[240.31890869 -84.73751068]
[225.53517151 -82.19961548]
[210.58067322 -83.36706543]
[196.36988831 -88.16849518]
[183.77182007 -96.31027222]
[173.55683899 -107.29454803]
[166.34959412 -120.44960785]
[162.59082031 -134.97105408]
[159.48670959 -120.29575348]
[156.38259888 -105.62044525]
[164.85298157 -95.91055298]
[166.20439148 -82.90071869]
[159.72059631 -71.31750488]
[147.57313538 -65.49909210]
[144.25088501 -50.87163162]
[140.92861938 -36.24417114]
[137.60635376 -21.61670876]
[134.28410339 -6.98924923]
[145.07487488 0.24284050]
[152.78468323 10.73728466]
[156.47837830 23.25782204]
[155.69548035 36.32033157]
[150.50753784 48.36873627]
[141.51210022 57.96038818]
[129.76402283 63.93878174]
[116.65177917 65.57299805]
[112.89547729 80.09506226]
[109.13918304 94.61711884]
[106.14440918 109.31512451]
[103.91928864 124.14916992]
[101.69416809 138.98321533]
[99.46905518 153.81726074]
[97.24393463 168.65130615]
[95.01882172 183.48533630]
[92.79370117 198.31938171]
[103.34178925 187.65458679]
[117.78267670 183.59739685]
[132.34155273 187.20835876]
[143.21276855 197.54357910]
[147.55461121 211.90144348]
[144.23213196 226.52885437]
[134.11381531 237.60223389]
[119.84456635 242.22703552]
[105.15434265 239.19433594]
[93.88312531 229.29687500]
[88.97724915 215.12272644]
[92.32505798 230.58567810]
[81.19409943 240.48269653]
[76.79309845 254.82254028]
[72.39210510 269.16238403]
[67.99110413 283.50222778]
[81.86631775 289.23049927]
[95.14415741 296.23287964]
[107.70793152 304.44787598]
[119.44722748 313.80325317]
[130.25888062 324.21685791]
[140.04786682 335.59710693]
[148.72816467 347.84402466]
[156.22348022 360.84994507]
[162.46795654 374.50064087]
[167.40670776 388.67608643]
[170.99633789 403.25170898]
[173.20529175 418.09942627]
[174.01417542 433.08877563]
[173.41584778 448.08798218]
[171.41558838 462.96527100]
[168.03097534 477.58987427]
[163.29174805 491.83325195]
[157.23956299 505.57028198]
[149.92759705 518.68017578]
[141.42012024 531.04779053]
[131.79190063 542.56433105]
[121.12753296 553.12872314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 188]
[44 187]
[45 186]
[46 185]
[48 183]
[49 172]
[50 171]
[51 170]
[52 169]
[53 168]
[54 167]
[55 166]
[63 165]
[64 164]
[65 163]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[78 147]
[79 146]
[80 145]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
