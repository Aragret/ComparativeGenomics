%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[79.95198059 477.00842285]
[65.91856384 471.64401245]
[52.74633789 464.41864014]
[40.68069839 455.46685791]
[29.94642067 444.95547485]
[20.74347687 433.08032227]
[13.24331474 420.06259155]
[7.58565426 406.14480591]
[3.87589574 391.58624268]
[2.18314981 376.65814209]
[2.53895116 361.63858032]
[4.93667126 346.80737305]
[9.33164215 332.44082642]
[15.64198875 318.80654907]
[23.75015259 306.15856934]
[33.50508499 294.73251343]
[44.72505188 284.74121094]
[57.20103836 276.37081909]
[70.70062256 269.77725220]
[84.97232056 265.08337402]
[99.75024414 262.37661743]
[99.08045959 247.39157104]
[98.41067505 232.40652466]
[97.74089050 217.42149353]
[97.07110596 202.43644714]
[96.40132141 187.45141602]
[95.73153687 172.46636963]
[95.06175232 157.48133850]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[76.96014404 88.15454865]
[61.97171021 87.50656128]
[47.02621078 86.20083618]
[32.15248871 84.23989868]
[17.37925339 81.62754059]
[2.73502326 78.36879730]
[-11.75193596 74.46996307]
[-26.05365944 69.93856049]
[-40.14254379 64.78334045]
[-53.99138641 59.01425552]
[-67.57346344 52.64243317]
[-80.86255646 45.68017960]
[-93.83300781 38.14093399]
[-106.45978546 30.03924370]
[-118.71851349 21.39075279]
[-130.58554077 12.21215248]
[-142.03793335 2.52115989]
[-153.05361938 -7.66351748]
[-163.61131287 -18.32222176]
[-173.69064331 -29.43437767]
[-183.27215576 -40.97853470]
[-192.33734131 -52.93241119]
[-200.86872864 -65.27293396]
[-208.84982300 -77.97628021]
[-216.26522827 -91.01792908]
[-223.10063171 -104.37271118]
[-229.34283447 -118.01483917]
[-234.97979736 -131.91798401]
[-240.00064087 -146.05531311]
[-244.39566040 -160.39953613]
[-248.15638733 -174.92295837]
[-251.27554321 -189.59756470]
[-253.74711609 -204.39500427]
[-255.56634521 -219.28671265]
[-256.72970581 -234.24397278]
[-257.23495483 -249.23789978]
[-257.08111572 -264.23953247]
[-256.26849365 -279.21994019]
[-254.79866028 -294.15017700]
[-252.67443848 -309.00146484]
[-249.89993286 -323.74511719]
[-246.48051453 -338.35266113]
[-242.42276001 -352.79592896]
[-237.73451233 -367.04699707]
[-232.42481995 -381.07839966]
[-226.50393677 -394.86300659]
[-219.98327637 -408.37426758]
[-212.87544250 -421.58605957]
[-205.19416809 -434.47290039]
[-196.95423889 -447.00991821]
[-188.17160034 -459.17291260]
[-178.86317444 -470.93835449]
[-169.04695129 -482.28363037]
[-158.74186707 -493.18673706]
[-147.96781921 -503.62670898]
[-136.74560547 -513.58331299]
[-125.09687042 -523.03747559]
[-113.04412842 -531.97076416]
[-100.61061859 -540.36602783]
[-87.82035828 -548.20709229]
[-74.69802856 -555.47875977]
[-61.26896286 -562.16705322]
[-47.55907822 -568.25903320]
[-33.59484100 -573.74291992]
[-19.40320396 -578.60809326]
[-5.01156473 -582.84527588]
[9.55230045 -586.44622803]
[24.26027679 -589.40399170]
[39.08397675 -591.71282959]
[53.99478531 -593.36834717]
[68.96392059 -594.36730957]
[83.96247864 -594.70782471]
[98.96152496 -594.38916016]
[113.93209839 -593.41204834]
[128.84530640 -591.77825928]
[143.67234802 -589.49102783]
[158.38462830 -586.55468750]
[172.95372009 -582.97497559]
[187.35153198 -578.75878906]
[201.55023193 -573.91424561]
[215.52246094 -568.45074463]
[229.24119568 -562.37878418]
[242.68000793 -555.71008301]
[255.81292725 -548.45751953]
[268.61459351 -540.63513184]
[281.06033325 -532.25799561]
[293.12606812 -523.34222412]
[304.78857422 -513.90515137]
[316.02529907 -503.96484375]
[326.81454468 -493.54061890]
[337.13549805 -482.65252686]
[346.96826172 -471.32159424]
[356.29382324 -459.56970215]
[365.09417725 -447.41952515]
[373.35238647 -434.89456177]
[381.05242920 -422.01892090]
[388.17950439 -408.81750488]
[394.71984863 -395.31576538]
[400.66082764 -381.53976440]
[405.99096680 -367.51614380]
[410.69998169 -353.27191162]
[414.77877808 -338.83459473]
[418.21948242 -324.23202515]
[421.01547241 -309.49246216]
[423.16134644 -294.64428711]
[424.65295410 -279.71618652]
[425.48739624 -264.73696899]
[425.66311646 -249.73558044]
[425.17971802 -234.74093628]
[424.03814697 -219.78199768]
[422.24063110 -204.88764954]
[419.79061890 -190.08662415]
[416.69287109 -175.40750122]
[412.95330811 -160.87860107]
[408.57919312 -146.52799988]
[403.57897949 -132.38336182]
[397.96228027 -118.47201538]
[391.73995972 -104.82080078]
[384.92404175 -91.45606995]
[377.52764893 -78.40362549]
[369.56506348 -65.68865967]
[361.05169678 -53.33571625]
[352.00393677 -41.36863708]
[342.43927002 -29.81052589]
[332.37612915 -18.68368912]
[321.83398438 -8.00960922]
[310.83316040 2.19111395]
[299.39489746 11.89878845]
[287.54125977 21.09467697]
[275.29516602 29.76102638]
[262.68020630 37.88111115]
[249.72074890 45.43925858]
[236.44181824 52.42087173]
[222.86904907 58.81248474]
[209.02862549 64.60175323]
[194.94728088 69.77750397]
[180.65217590 74.32974243]
[166.17091370 78.24968719]
[151.53144836 81.52976990]
[136.76203918 84.16365814]
[121.89118195 86.14627075]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.04679108 156.81155396]
[110.71657562 171.79658508]
[111.38636017 186.78163147]
[112.05614471 201.76666260]
[112.72592926 216.75170898]
[113.39571381 231.73674011]
[114.06549835 246.72178650]
[114.73528290 261.70681763]
[129.69577026 263.08438110]
[144.32931519 266.48626709]
[158.36332703 271.84918213]
[171.53633118 279.07312012]
[183.60293579 288.02359009]
[194.33834839 298.53381348]
[203.54258728 310.40798950]
[211.04415894 323.42489624]
[216.70332336 337.34207153]
[220.41465759 351.90020752]
[222.10900879 366.82812500]
[221.75483704 381.84774780]
[219.35871887 396.67919922]
[214.96530151 411.04623413]
[208.65643311 424.68118286]
[200.54963684 437.33004761]
[190.79594421 448.75717163]
[179.57705688 458.74969482]
[167.10197449 467.12142944]
[153.60310364 473.71643066]
[139.33192444 478.41186523]
[124.55429077 481.12023926]
[109.54550171 481.79107666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[33 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
