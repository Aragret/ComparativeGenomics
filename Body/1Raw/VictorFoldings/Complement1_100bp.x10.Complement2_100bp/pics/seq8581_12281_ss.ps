%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[53.58256149 905.64147949]
[38.58063889 905.78131104]
[23.58772659 905.24304199]
[8.63444805 904.02789307]
[-6.24864435 902.13824463]
[-21.03114700 899.57800293]
[-35.68286133 896.35241699]
[-50.17385101 892.46807861]
[-64.47451019 887.93286133]
[-78.55563354 882.75604248]
[-92.38844299 876.94824219]
[-105.94467926 870.52130127]
[-119.19666290 863.48834229]
[-132.11729431 855.86376953]
[-144.68020630 847.66314697]
[-156.85971069 838.90319824]
[-168.63093567 829.60180664]
[-179.96983337 819.77801514]
[-190.85324097 809.45190430]
[-201.25891113 798.64459229]
[-211.16560364 787.37805176]
[-220.55307007 775.67535400]
[-229.40213013 763.56042480]
[-237.69471741 751.05804443]
[-245.41387939 738.19366455]
[-252.54383850 724.99365234]
[-259.07003784 711.48492432]
[-264.97915649 697.69506836]
[-270.25912476 683.65234375]
[-274.89913940 669.38531494]
[-278.88970947 654.92321777]
[-282.22268677 640.29553223]
[-284.89129639 625.53222656]
[-286.89004517 610.66339111]
[-288.21487427 595.71942139]
[-288.86309814 580.73089600]
[-288.83334351 565.72833252]
[-288.12567139 550.74243164]
[-286.74157715 535.80389404]
[-284.68386841 520.94305420]
[-281.95669556 506.19046021]
[-278.56570435 491.57614136]
[-274.51782227 477.12997437]
[-269.82125854 462.88150024]
[-264.48562622 448.85977173]
[-258.52185059 435.09350586]
[-251.94210815 421.61074829]
[-244.75984192 408.43911743]
[-236.98971558 395.60546875]
[-228.64759827 383.13607788]
[-219.75054932 371.05633545]
[-210.31674194 359.39099121]
[-200.36543274 348.16384888]
[-189.91697693 337.39785767]
[-178.99269104 327.11499023]
[-167.61491394 317.33627319]
[-155.80688477 308.08166504]
[-143.59272766 299.37011719]
[-130.99739075 291.21936035]
[-118.04660034 283.64608765]
[-104.76683044 276.66577148]
[-91.18520355 270.29266357]
[-77.32946014 264.53979492]
[-63.22792053 259.41888428]
[-48.90937805 254.94042969]
[-34.40309525 251.11357117]
[-19.73870277 247.94610596]
[-4.94616032 245.44454956]
[9.94431114 243.61396790]
[24.90229225 242.45811462]
[39.89722443 241.97937012]
[54.89847183 242.17868042]
[69.87538910 243.05566406]
[84.79737854 244.60852051]
[87.02249908 229.77447510]
[89.24761200 214.94042969]
[91.47273254 200.10639954]
[93.69784546 185.27235413]
[94.59066010 170.29895020]
[94.14405823 155.30558777]
[93.69744873 140.31224060]
[93.25084686 125.31889343]
[92.80423737 110.32554626]
[92.02291870 95.34590912]
[90.90727234 80.38745117]
[89.79161835 65.42900085]
[88.67597198 50.47054672]
[87.56032562 35.51209259]
[86.44467163 20.55363846]
[77.70239258 7.36716366]
[84.47165680 -5.90033054]
[83.35600281 -20.85878372]
[68.55432129 -23.82742119]
[55.10298157 -30.68044662]
[44.00015640 -40.90932083]
[36.06975174 -53.75498962]
[31.90025711 -68.26422882]
[31.80107498 -83.36034393]
[35.77956772 -97.92311096]
[43.54050446 -110.87187195]
[54.50796890 -121.24574280]
[67.86811066 -128.27491760]
[82.62950134 -131.43778992]
[97.69676971 -130.49963379]
[111.95181274 -125.53009033]
[124.33680725 -116.89791870]
[133.93270874 -105.24368286]
[140.02745056 -91.43220520]
[142.16873169 -76.48839569]
[140.19769287 -61.52118301]
[134.26055908 -47.64122772]
[124.79794312 -35.87851715]
[112.51200867 -27.10592461]
[98.31446075 -21.97443199]
[99.43010712 -7.01597929]
[108.09259033 5.10056686]
[101.40312958 19.43799019]
[102.51877594 34.39644241]
[103.63442230 49.35489655]
[104.75007629 64.31334686]
[105.86572266 79.27180481]
[106.98136902 94.23025513]
[109.51743317 97.13555908]
[110.76057434 101.14460754]
[110.24655151 105.65490723]
[107.79759216 109.87893677]
[108.24419403 124.87228394]
[108.69080353 139.86563110]
[109.13740540 154.85899353]
[109.58401489 169.85234070]
[117.33414459 157.00961304]
[129.84143066 148.72906494]
[144.69093323 146.60951233]
[159.01542664 151.06022644]
[170.04908752 161.22184753]
[175.66146851 175.13230896]
[174.76893616 190.10572815]
[167.54380798 203.25097656]
[155.38114929 212.02990723]
[140.62936401 214.74745178]
[126.13680267 210.87887573]
[114.70175934 201.17117310]
[108.53189087 187.49746704]
[106.30677795 202.33151245]
[104.08165741 217.16555786]
[101.85653687 231.99960327]
[99.63142395 246.83363342]
[114.35230255 249.72723389]
[128.92738342 253.28308105]
[143.32690430 257.49389648]
[157.52143860 262.35107422]
[171.48199463 267.84472656]
[185.18003845 273.96362305]
[198.58760071 280.69522095]
[211.67727661 288.02578735]
[224.42234802 295.94036865]
[236.79673767 304.42279053]
[248.77520752 313.45571899]
[260.33325195 323.02069092]
[271.44729614 333.09817505]
[282.09457397 343.66757202]
[292.25341797 354.70727539]
[301.90298462 366.19479370]
[311.02362061 378.10659790]
[319.59667969 390.41836548]
[327.60464478 403.10494995]
[335.03115845 416.14044189]
[341.86105347 429.49819946]
[348.08035278 443.15097046]
[353.67636108 457.07080078]
[358.63766479 471.22927856]
[362.95413208 485.59747314]
[366.61688232 500.14605713]
[369.61849976 514.84527588]
[371.95285034 529.66516113]
[373.61511230 544.57537842]
[374.60195923 559.54541016]
[374.91131592 574.54479980]
[374.54257202 589.54284668]
[373.49649048 604.50891113]
[371.77517700 619.41241455]
[369.38220215 634.22290039]
[366.32241821 648.91015625]
[362.60208130 663.44409180]
[358.22875977 677.79510498]
[353.21145630 691.93383789]
[347.56036377 705.83142090]
[341.28704834 719.45941162]
[334.40435791 732.79003906]
[326.92630005 745.79602051]
[318.86816406 758.45080566]
[310.24642944 770.72857666]
[301.07870483 782.60418701]
[291.38369751 794.05334473]
[281.18127441 805.05279541]
[270.49218750 815.57995605]
[259.33834839 825.61334229]
[247.74253845 835.13250732]
[235.72840881 844.11791992]
[223.32051086 852.55126953]
[210.54421997 860.41534424]
[197.42562866 867.69403076]
[183.99151611 874.37249756]
[170.26936340 880.43713379]
[156.28717041 885.87542725]
[142.07351685 890.67639160]
[127.65743256 894.83020020]
[113.06838226 898.32830811]
[98.33615875 901.16357422]
[83.49087524 903.33026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
