%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[133.94197083 639.38977051]
[121.38923645 631.16931152]
[109.37184906 622.18438721]
[97.93630219 612.46972656]
[87.12683105 602.06292725]
[76.98526764 591.00421143]
[67.55083466 579.33636475]
[58.86003876 567.10461426]
[50.94650269 554.35620117]
[43.84084702 541.14044189]
[37.57055283 527.50848389]
[32.15988541 513.51306152]
[27.62977600 499.20837402]
[23.99774933 484.64968872]
[21.27786064 469.89337158]
[19.48063087 454.99652100]
[18.61301231 440.01675415]
[18.67836380 425.01199341]
[19.67642975 410.04034424]
[21.60335159 395.15969849]
[24.45167160 380.42764282]
[28.21037292 365.90118408]
[32.86491013 351.63647461]
[38.39728165 337.68872070]
[44.78607559 324.11190796]
[52.00658035 310.95855713]
[60.03086090 298.27954102]
[68.82787323 286.12393188]
[78.36357880 274.53872681]
[88.60108948 263.56875610]
[99.50079346 253.25650024]
[111.02053070 243.64181519]
[123.11572266 234.76190186]
[135.73957825 226.65112305]
[148.84326172 219.34086609]
[142.36376953 205.81251526]
[135.88427734 192.28416443]
[129.40478516 178.75582886]
[122.92528534 165.22747803]
[116.44578552 151.69912720]
[109.96629333 138.17079163]
[97.49034882 130.03443909]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[75.00533295 65.17684937]
[69.01248932 78.92769623]
[55.10260773 84.54153442]
[41.24390411 78.80251312]
[35.37527466 64.99819946]
[40.85853577 51.03632355]
[54.55262375 44.91489410]
[68.61224365 50.13989258]
[63.36552811 36.08742142]
[51.97659302 30.03309059]
[47.89588547 18.22074127]
[52.79550171 7.16088867]
[47.75858688 -6.96814060]
[42.72166824 -21.09716988]
[28.18308830 -17.36288071]
[13.36516380 -14.96614075]
[-1.60931551 -13.92681122]
[-16.61626434 -14.25350285]
[-31.53132820 -15.94351006]
[-46.23091125 -18.98282814]
[-60.59321213 -23.34627151]
[-74.49920654 -28.99768448]
[-87.83367920 -35.89023209]
[-100.48611450 -43.96680450]
[-112.35168457 -53.16047287]
[-123.33205414 -63.39505386]
[-133.33624268 -74.58573914]
[-142.28135681 -86.63980103]
[-150.09324646 -99.45734406]
[-156.70719910 -112.93216705]
[-162.06842041 -126.95260620]
[-166.13246155 -141.40248108]
[-168.86564636 -156.16204834]
[-170.24534607 -171.10900879]
[-170.26010132 -186.11950684]
[-168.90982056 -201.06915283]
[-166.20565796 -215.83407593]
[-162.17005920 -230.29191589]
[-156.83642578 -244.32286072]
[-150.24899292 -257.81066895]
[-142.46231079 -270.64355469]
[-133.54093933 -282.71517944]
[-123.55878448 -293.92553711]
[-112.59856415 -304.18170166]
[-100.75109863 -313.39868164]
[-88.11457062 -321.50012207]
[-74.79369354 -328.41888428]
[-60.89883423 -334.09765625]
[-46.54514694 -338.48931885]
[-31.85157013 -341.55755615]
[-16.93985939 -343.27688599]
[-1.93358254 -343.63311768]
[13.04291248 -342.62322998]
[27.86552238 -340.25564575]
[42.41141891 -336.54995728]
[56.56007004 -331.53689575]
[70.19423676 -325.25796509]
[83.20092773 -317.76522827]
[95.47237396 -309.12075806]
[106.90688324 -299.39617920]
[117.40970612 -288.67211914]
[126.89381409 -277.03738403]
[135.28060913 -264.58840942]
[142.50059509 -251.42835999]
[148.49395752 -237.66627502]
[153.21101379 -223.41619873]
[156.61268616 -208.79621887]
[158.67079163 -193.92747498]
[159.36827087 -178.93318176]
[158.69934082 -163.93759155]
[156.66954041 -149.06495667]
[153.29568481 -134.43853760]
[148.60575867 -120.17950439]
[142.63861084 -106.40604401]
[135.44367981 -93.23226929]
[127.08058929 -80.76736450]
[117.61864471 -69.11460114]
[107.13624573 -58.37054825]
[95.72026825 -48.62423706]
[83.46529388 -39.95642853]
[70.47288513 -32.43894577]
[56.85069656 -26.13408661]
[61.88761520 -12.00505733]
[66.92453003 2.12397265]
[80.88610077 12.75607300]
[77.41799927 30.84070206]
[82.66471863 44.89317322]
[88.53367615 58.69734955]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[124.97507477 116.87044525]
[123.49463654 131.69128418]
[129.97413635 145.21963501]
[136.45362854 158.74798584]
[142.93312073 172.27632141]
[149.41262817 185.80467224]
[155.89212036 199.33302307]
[162.37161255 212.86135864]
[176.28108215 207.23348999]
[190.51353455 202.48124695]
[205.01391602 198.62301636]
[219.72608948 195.67375183]
[234.59317017 193.64483643]
[249.55763245 192.54412842]
[264.56155396 192.37590027]
[279.54693604 193.14077759]
[294.45578003 194.83581543]
[309.23037720 197.45445251]
[323.81362915 200.98657227]
[338.14904785 205.41848755]
[352.18124390 210.73306274]
[365.85586548 216.90972900]
[379.12002563 223.92460632]
[391.92242432 231.75053406]
[404.21350098 240.35725403]
[415.94573975 249.71145630]
[427.07373047 259.77694702]
[437.55444336 270.51480103]
[447.34729004 281.88348389]
[456.41439819 293.83895874]
[464.72070312 306.33505249]
[472.23406982 319.32333374]
[478.92541504 332.75360107]
[484.76885986 346.57391357]
[489.74182129 360.73077393]
[493.82498169 375.16940308]
[497.00262451 389.83395386]
[499.26245117 404.66769409]
[500.59567261 419.61322021]
[500.99713135 434.61273193]
[500.46533203 449.60818481]
[499.00228882 464.54156494]
[496.61364746 479.35510254]
[493.30868530 493.99148560]
[489.10018921 508.39410400]
[484.00439453 522.50720215]
[478.04107666 536.27618408]
[471.23327637 549.64782715]
[463.60733032 562.57031250]
[455.19271851 574.99377441]
[446.02206421 586.86999512]
[436.13076782 598.15313721]
[425.55715942 608.79949951]
[414.34210205 618.76788330]
[402.52902222 628.01983643]
[390.16360474 636.51940918]
[377.29370117 644.23376465]
[363.96905518 651.13311768]
[350.24127197 657.19073486]
[336.16345215 662.38311768]
[321.79003906 666.69030762]
[307.17666626 670.09558105]
[292.37985229 672.58569336]
[277.45684814 674.15112305]
[262.46539307 674.78576660]
[247.46348572 674.48712158]
[232.50915527 673.25640869]
[217.66027832 671.09838867]
[202.97427368 668.02136230]
[188.50798035 664.03729248]
[174.31736755 659.16156006]
[160.45732117 653.41296387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[40 141]
[41 140]
[43 138]
[45 136]
[46 135]
[47 134]
[54 133]
[55 132]
[58 130]
[59 129]
[60 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
