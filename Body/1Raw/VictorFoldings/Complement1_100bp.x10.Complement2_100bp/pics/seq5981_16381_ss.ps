%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[71.52998352 604.52587891]
[59.22206497 613.12005615]
[46.15294266 620.50537109]
[32.44097519 626.61492920]
[18.21034050 631.39337158]
[3.58991575 634.79748535]
[-11.28788948 636.79638672]
[-26.28833580 637.37200928]
[-41.27557755 636.51916504]
[-56.11387634 634.24548340]
[-70.66886139 630.57165527]
[-84.80870819 625.53088379]
[-98.40537262 619.16882324]
[-111.33570862 611.54315186]
[-123.48261261 602.72283936]
[-134.73608398 592.78784180]
[-144.99421692 581.82812500]
[-154.16407776 569.94293213]
[-162.16265869 557.23986816]
[-168.91749573 543.83398438]
[-174.36743164 529.84674072]
[-178.46308899 515.40478516]
[-181.16740417 500.63891602]
[-182.45585632 485.68283081]
[-182.31680298 470.67196655]
[-180.75148010 455.74234009]
[-177.77407837 441.02908325]
[-173.41157532 426.66546631]
[-167.70344543 412.78158569]
[-160.70140076 399.50317383]
[-152.46885681 386.95050049]
[-143.08036804 375.23721313]
[-132.62097168 364.46939087]
[-121.18537140 354.74459839]
[-108.87714386 346.15084839]
[-95.80774689 338.76602173]
[-82.09555817 332.65698242]
[-67.86474609 327.87902832]
[-53.24420166 324.47543335]
[-38.36632538 322.47708130]
[-23.36585617 321.90197754]
[-8.37864685 322.75540161]
[6.45957184 325.02963257]
[21.01442146 328.70401001]
[26.05133820 314.57498169]
[31.08825493 300.44595337]
[36.12517166 286.31692505]
[41.16208649 272.18789673]
[46.19900131 258.05886841]
[50.91913605 243.82086182]
[55.32013321 229.48101807]
[59.72113419 215.14117432]
[56.05853271 200.70390320]
[67.50428009 189.78120422]
[71.90528107 175.44136047]
[76.30627441 161.10151672]
[72.64367676 146.66424561]
[84.08942413 135.74154663]
[87.84572601 121.21949005]
[90.94983673 106.54418182]
[93.94461060 91.84618378]
[96.82988739 77.12628937]
[99.71515656 62.40639877]
[94.77682495 47.37564850]
[104.81774902 36.37432480]
[107.70302582 21.65443420]
[107.59135437 6.65484953]
[104.48724365 -8.02045250]
[101.38313293 -22.69575500]
[98.06087494 -37.32321548]
[94.52120209 -51.89958954]
[83.74588013 -63.48418808]
[88.26130676 -77.67785645]
[84.72163391 -92.25423431]
[81.18196106 -106.83060455]
[77.64228821 -121.40698242]
[64.62626648 -134.43252563]
[70.21977234 -151.06620789]
[66.46347809 -165.58827209]
[62.70717239 -180.11032104]
[58.95087433 -194.63238525]
[55.19457245 -209.15444946]
[51.43827057 -223.67651367]
[36.38815308 -223.12153625]
[21.57067490 -225.81530762]
[7.67888021 -231.63185120]
[-4.63748932 -240.29908752]
[-14.80237293 -251.41166687]
[-22.34034157 -264.44979858]
[-26.89883232 -278.80368042]
[-28.26463318 -293.80197144]
[-26.37386322 -308.74316406]
[-21.31496048 -322.92843628]
[-13.32453632 -335.69427490]
[-2.77631831 -346.44366455]
[9.83633423 -354.67379761]
[23.92350578 -359.99975586]
[38.82631302 -362.17239380]
[53.84772491 -361.09014893]
[68.28516388 -356.80358887]
[81.46335602 -349.51324463]
[92.76594543 -339.56008911]
[101.66428375 -327.40960693]
[107.74218750 -313.63015747]
[110.71537018 -298.86621094]
[110.44477081 -283.80828857]
[106.94305420 -269.16070557]
[100.37400055 -255.60852051]
[91.04485321 -243.78561401]
[79.39195251 -234.24496460]
[65.96033478 -227.43280029]
[69.71662903 -212.91075134]
[73.47293091 -198.38868713]
[77.22923279 -183.86662292]
[80.98553467 -169.34457397]
[84.74183655 -154.82250977]
[95.00218964 -148.41535950]
[98.25048065 -136.34753418]
[92.21866608 -124.94665527]
[95.75833893 -110.37027740]
[99.29801178 -95.79390717]
[102.83768463 -81.21752930]
[113.35982513 -70.67552948]
[109.09757996 -55.43926239]
[112.63725281 -40.86288834]
[116.17739105 -37.65719223]
[117.74131012 -32.19357300]
[116.05844116 -25.79986572]
[119.16255188 -11.12456322]
[122.26666260 3.55073929]
[125.96600342 -10.98593426]
[132.66406250 -24.40740776]
[142.05613708 -36.10309601]
[153.71492004 -45.54091644]
[167.11004639 -52.29151917]
[181.63211060 -56.04779434]
[196.62046814 -56.63885498]
[211.39323425 -54.03781509]
[225.27835083 -48.36299896]
[237.64413452 -39.87257767]
[247.92803955 -28.95280647]
[255.66220093 -16.10046387]
[260.49478149 -1.90024400]
[262.20590210 13.00183773]
[260.71774292 27.92783546]
[256.09802246 42.19871521]
[248.55685425 55.16524887]
[238.43736267 66.23754120]
[226.19989014 74.91188812]
[212.40115356 80.79364777]
[197.66893005 83.61525726]
[182.67341614 83.24833679]
[168.09681702 79.70958710]
[154.60226440 73.16000366]
[142.80368042 63.89753342]
[133.23780823 52.34356308]
[126.33984375 39.02372742]
[122.42291260 24.53970718]
[119.53764343 39.25959778]
[124.68235016 53.23748398]
[114.43505096 65.29167175]
[111.54977417 80.01155853]
[108.66450500 94.73145294]
[110.32765961 102.61856079]
[105.62513733 109.64829254]
[102.52102661 124.32360077]
[115.65096283 117.07067871]
[130.10140991 121.09367371]
[137.59449768 134.08804321]
[133.83786011 148.61001587]
[120.98344421 156.34074402]
[106.39485931 152.85171509]
[98.42927551 140.14254761]
[101.77708435 155.60549927]
[90.64612579 165.50251770]
[86.24512482 179.84236145]
[81.84413147 194.18220520]
[85.19194031 209.64515686]
[74.06098175 219.54217529]
[69.65998077 233.88201904]
[65.25898743 248.22186279]
[66.42945099 253.30882263]
[65.61322784 257.87905884]
[63.33982849 261.26235962]
[60.32803345 263.09576416]
[55.29111481 277.22479248]
[50.25419998 291.35382080]
[45.21728516 305.48284912]
[40.18036652 319.61187744]
[35.14345169 333.74093628]
[48.74034500 340.10247803]
[61.67095566 347.72769165]
[73.81818390 356.54751587]
[85.07202148 366.48211670]
[95.33054352 377.44146729]
[104.50084686 389.32635498]
[112.49988556 402.02911377]
[119.25521851 415.43472290]
[124.70565796 429.42175293]
[128.80184937 443.86355591]
[131.50669861 458.62936401]
[132.79570007 473.58538818]
[132.65718079 488.59625244]
[131.09240723 503.52597046]
[128.11555481 518.23931885]
[123.75355530 532.60308838]
[118.04593658 546.48718262]
[111.04438019 559.76586914]
[102.81229401 572.31884766]
[93.42424011 584.03247070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[50 181]
[51 180]
[52 179]
[54 177]
[55 176]
[56 175]
[58 173]
[59 166]
[60 165]
[61 163]
[62 162]
[63 161]
[65 159]
[66 158]
[67 130]
[68 129]
[69 128]
[70 125]
[71 124]
[73 122]
[74 121]
[75 120]
[76 119]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
