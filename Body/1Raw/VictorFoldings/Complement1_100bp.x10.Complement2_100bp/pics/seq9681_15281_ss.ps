%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[46.87652969 632.57647705]
[36.51628494 643.45666504]
[24.77096748 652.82476807]
[11.85938835 660.50622559]
[-1.97791839 666.35797119]
[-16.48317146 670.27093506]
[-31.38614845 672.17224121]
[-46.40921402 672.02655029]
[-61.27249908 669.83642578]
[-75.69911194 665.64276123]
[-89.42028809 659.52368164]
[-102.18041229 651.59320068]
[-113.74177551 641.99902344]
[-123.88898468 630.91986084]
[-132.43301392 618.56213379]
[-139.21470642 605.15606689]
[-144.10769653 590.95141602]
[-147.02084351 576.21276855]
[-147.89987183 561.21472168]
[-146.72840881 546.23669434]
[-143.52828979 531.55767822]
[-138.35911560 517.45117188]
[-131.31718445 504.17999268]
[-122.53369904 491.99130249]
[-112.17227936 481.11221313]
[-100.42594910 471.74539185]
[-87.51353455 464.06530762]
[-73.67559814 458.21508789]
[-59.16991806 454.30368042]
[-44.26673508 452.40396118]
[-29.24368477 452.55133057]
[-14.38063812 454.74304199]
[-10.19362640 440.33926392]
[-6.00661516 425.93548584]
[-1.81960404 411.53167725]
[-3.18822622 408.28219604]
[-3.05092239 404.20834351]
[-1.03738773 400.02517700]
[2.88935089 396.58602905]
[7.71534872 382.38357544]
[12.54134655 368.18112183]
[17.36734390 353.97863770]
[22.19334221 339.77618408]
[18.96221542 325.23626709]
[30.72809982 314.65921021]
[35.44823456 300.42120361]
[40.06224442 286.14846802]
[44.67625427 271.87576294]
[48.97037506 257.50354004]
[52.94247437 243.03901672]
[48.85164642 228.71719360]
[59.96710968 217.45855713]
[63.93920517 202.99403381]
[67.91130066 188.52951050]
[71.88339996 174.06498718]
[75.85549164 159.60046387]
[79.82759094 145.13594055]
[72.26020050 132.35821533]
[76.08241272 117.63254547]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[102.20259857 35.35127258]
[100.60530090 26.19811058]
[103.35735321 17.46767235]
[109.72084045 11.08013248]
[118.17879486 8.37900066]
[115.06157684 -7.13207626]
[126.33865356 -16.86227417]
[130.95266724 -31.13500786]
[135.56666565 -45.40774155]
[140.18067932 -59.68047714]
[137.06346130 -75.19155121]
[148.34054565 -84.92175293]
[152.95454407 -99.19448090]
[149.83732605 -114.70555878]
[161.11441040 -124.43576050]
[165.72840881 -138.70849609]
[154.11578369 -129.21392822]
[139.55415344 -125.61405945]
[124.85516357 -128.60395813]
[112.85694122 -137.60633850]
[105.87616730 -150.88296509]
[105.26071167 -165.87033081]
[111.12940979 -179.67462158]
[122.34912109 -189.63043213]
[136.75347900 -193.81546021]
[151.56123352 -191.42163086]
[163.91323853 -182.91117859]
[171.42451477 -169.92730713]
[172.64457703 -154.97576904]
[172.33360291 -170.79391479]
[185.16041565 -178.36506653]
[192.23751831 -191.59059143]
[199.31462097 -204.81611633]
[187.08489990 -213.53746033]
[176.07086182 -223.75115967]
[166.45339966 -235.28947449]
[158.39042664 -247.96293640]
[152.01434326 -261.56344604]
[147.42987061 -275.86767578]
[144.71226501 -290.64071655]
[143.90615845 -305.64001465]
[145.02479553 -320.61923218]
[148.04978943 -335.33239746]
[152.93148804 -349.53796387]
[159.58972168 -363.00259399]
[167.91516113 -375.50518799]
[177.77108765 -386.84051514]
[188.99565125 -396.82235718]
[201.40455627 -405.28683472]
[214.79400635 -412.09497070]
[228.94416809 -417.13494873]
[243.62266541 -420.32403564]
[258.58847046 -421.60980225]
[273.59579468 -420.97119141]
[288.39828491 -418.41870117]
[302.75277710 -413.99417114]
[316.42361450 -407.77032471]
[329.18630981 -399.84933472]
[340.83126831 -390.36129761]
[351.16729736 -379.46197510]
[360.02462769 -367.33035278]
[367.25784302 -354.16567993]
[372.74813843 -340.18408203]
[376.40542603 -325.61517334]
[378.16955566 -310.69821167]
[378.01162720 -295.67810059]
[375.93420410 -280.80151367]
[371.97143555 -266.31274414]
[366.18835449 -252.44969177]
[358.67993164 -239.44001770]
[349.56945801 -227.49732971]
[339.00656128 -216.81774902]
[327.16467285 -207.57664490]
[314.23825073 -199.92576599]
[300.43954468 -193.99075317]
[285.99517822 -189.86904907]
[271.14230347 -187.62834167]
[256.12484741 -187.30541992]
[241.18940735 -188.90560913]
[226.58120728 -192.40261841]
[212.54016113 -197.73901367]
[205.46304321 -184.51348877]
[198.38594055 -171.28796387]
[199.20312500 -156.41578674]
[185.87011719 -147.89866638]
[180.00114441 -134.09448242]
[175.38714600 -119.82175446]
[178.83438110 -105.33155823]
[167.22727966 -94.58047485]
[162.61326599 -80.30773926]
[166.06051636 -65.81754303]
[154.45341492 -55.06646729]
[149.83940125 -40.79373169]
[145.22540283 -26.52099991]
[140.61138916 -12.24826622]
[144.05862427 2.24192977]
[132.45152283 12.99301052]
[138.51426697 32.72136307]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[111.55821228 127.37454224]
[107.32388306 141.98704529]
[94.29211426 149.10803223]
[90.32002258 163.57255554]
[86.34792328 178.03707886]
[82.37582397 192.50160217]
[78.40373230 206.96612549]
[74.43163300 221.43064880]
[78.23834991 236.78706360]
[67.40699768 247.01110840]
[63.43490219 261.47564697]
[64.75630188 266.52548218]
[64.07651520 271.11801147]
[61.90486145 274.56747437]
[58.94898605 276.48974609]
[54.33497620 290.76248169]
[49.72096634 305.03521729]
[50.05892944 314.16339111]
[44.93055725 319.48519897]
[47.81649399 335.04098511]
[36.39579773 344.60220337]
[31.56979942 358.80465698]
[26.74380112 373.00711060]
[21.91780472 387.20956421]
[17.09180641 401.41201782]
[12.58417797 415.71868896]
[8.39716721 430.12249756]
[4.21015549 444.52627563]
[0.02314432 458.93005371]
[13.74498272 465.04763794]
[26.50596619 472.97677612]
[38.06836700 482.56970215]
[48.21678162 493.64776611]
[56.76214981 506.00457764]
[63.54528427 519.40991211]
[68.43981171 533.61401367]
[71.35455322 548.35235596]
[72.23520660 563.35028076]
[71.06537628 578.32843018]
[67.86683655 593.00781250]
[62.69919205 607.11486816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 198]
[33 197]
[34 196]
[35 195]
[39 194]
[40 193]
[41 192]
[42 191]
[43 190]
[45 188]
[46 186]
[47 185]
[48 184]
[49 180]
[50 179]
[52 177]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[60 169]
[62 167]
[63 166]
[64 165]
[65 164]
[70 162]
[72 160]
[73 159]
[74 158]
[75 157]
[77 155]
[78 154]
[80 152]
[81 151]
[94 150]
[96 148]
[97 147]
[98 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
