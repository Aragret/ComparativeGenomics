%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[74.30252075 518.72662354]
[59.48703384 524.88134766]
[45.50789261 517.00970459]
[43.08870316 501.15005493]
[54.08525467 489.46865845]
[54.97807312 474.49526978]
[55.87088776 459.52185059]
[56.76370239 444.54843140]
[49.79766083 431.38320923]
[58.34264755 418.06802368]
[59.23546219 403.09463501]
[60.12827682 388.12121582]
[61.02109146 373.14782715]
[58.57730865 369.04452515]
[58.68524170 363.36251831]
[62.16996384 357.74392700]
[55.59898758 344.37713623]
[64.53662109 331.32226562]
[56.30587006 315.82318115]
[67.02391815 300.84973145]
[68.13956451 285.89126587]
[69.14382935 270.92492676]
[70.03664398 255.95152283]
[70.92945862 240.97811890]
[71.82227325 226.00469971]
[69.08247375 219.14065552]
[72.84149170 210.81553650]
[73.95713806 195.85707092]
[67.18788147 182.58958435]
[75.93016052 169.40310669]
[66.88599396 181.36985779]
[53.58510208 188.30429077]
[38.59568024 188.86746216]
[24.81194496 182.95065308]
[14.89532280 171.69628906]
[10.76055908 157.27742004]
[13.20600986 142.47810364]
[21.75949860 130.15585327]
[34.76947784 122.68991089]
[49.72392654 121.52181244]
[63.73537827 126.87712097]
[74.09843445 137.72180176]
[78.81227875 151.96318054]
[82.56858063 137.44113159]
[86.32488251 122.91906738]
[90.08118439 108.39700317]
[93.40344238 93.76954651]
[96.28871155 79.04965210]
[99.17398834 64.32976532]
[102.05925751 49.60987091]
[97.12092590 34.57912064]
[107.16184998 23.57779884]
[110.04712677 8.85790730]
[112.93239594 -5.86198473]
[115.81767273 -20.58187675]
[118.70294189 -35.30176544]
[113.76461029 -50.33251953]
[123.80553436 -61.33383942]
[126.47132874 -76.09505463]
[128.91705322 -90.89432526]
[127.22875214 -99.87137604]
[131.51094055 -105.89505005]
[134.17674255 -120.65626526]
[136.62246704 -135.45553589]
[138.84757996 -150.28958130]
[141.07270813 -165.12362671]
[143.29782104 -179.95767212]
[145.52293396 -194.79171753]
[147.74804688 -209.62576294]
[138.62553406 -222.25181580]
[141.09344482 -237.26394653]
[153.18667603 -245.88307190]
[155.41178894 -260.71710205]
[148.27632141 -277.69256592]
[159.73545837 -290.98373413]
[161.73947144 -305.84927368]
[163.74348450 -320.71481323]
[151.65493774 -328.03695679]
[143.29554749 -339.37911987]
[139.90080261 -353.00927734]
[141.95120239 -366.86157227]
[149.10453796 -378.84945679]
[160.25242615 -387.17993164]
[173.69201660 -390.62167358]
[175.91712952 -405.45571899]
[178.14224243 -420.28976440]
[180.36737061 -435.12380981]
[165.92932129 -439.27081299]
[152.15611267 -445.26696777]
[139.28341675 -453.00961304]
[127.53150177 -462.36630249]
[117.10146332 -473.17691040]
[108.17177582 -485.25646973]
[100.89523315 -498.39828491]
[95.39634705 -512.37744141]
[91.76921082 -526.95477295]
[90.07588959 -541.88085938]
[90.34535980 -556.90026855]
[92.57300568 -571.75598145]
[96.72071075 -586.19384766]
[102.71750641 -599.96679688]
[110.46077728 -612.83911133]
[119.81802368 -624.59057617]
[130.62913513 -635.02008057]
[142.70912170 -643.94921875]
[155.85127258 -651.22509766]
[169.83070374 -656.72332764]
[184.40821838 -660.34979248]
[199.33436584 -662.04235840]
[214.35375977 -661.77221680]
[229.20938110 -659.54382324]
[243.64703369 -655.39544678]
[257.41967773 -649.39801025]
[270.29162598 -641.65411377]
[282.04263306 -632.29632568]
[292.47164917 -621.48468018]
[301.40017700 -609.40429688]
[308.67547607 -596.26177979]
[314.17303467 -582.28210449]
[317.79879761 -567.70440674]
[319.49069214 -552.77819824]
[319.21978760 -537.75878906]
[316.99072266 -522.90332031]
[312.84164429 -508.46585083]
[306.84353638 -494.69348145]
[299.09906006 -481.82189941]
[289.74069214 -470.07131958]
[278.92858887 -459.64282227]
[266.84774780 -450.71487427]
[253.70491028 -443.44021606]
[239.72494507 -437.94329834]
[225.14707947 -434.31826782]
[210.22076416 -432.62707520]
[195.20141602 -432.89868164]
[192.97628784 -418.06463623]
[190.75117493 -403.23059082]
[188.52606201 -388.39654541]
[201.90527344 -379.65884399]
[210.16467285 -365.91128540]
[211.60722351 -349.87997437]
[205.89355469 -334.76989746]
[194.12008667 -323.62408447]
[178.60900879 -318.71078491]
[176.60499573 -303.84527588]
[174.60098267 -288.97973633]
[181.68327332 -279.17321777]
[180.13536072 -266.77209473]
[170.24583435 -258.49200439]
[168.02072144 -243.65794373]
[177.05288696 -231.87001038]
[175.00761414 -216.79447937]
[162.58209229 -207.40063477]
[160.35697937 -192.56658936]
[158.13186646 -177.73255920]
[155.90675354 -162.89851379]
[153.68162537 -148.06446838]
[151.45651245 -133.23042297]
[153.52447510 -128.92547607]
[152.91004944 -123.27574158]
[148.93795776 -117.99047089]
[146.27215576 -103.22925568]
[143.71632385 -88.44860077]
[141.27059937 -73.64933014]
[143.27424622 -69.31407166]
[142.57575989 -63.67411041]
[138.52542114 -58.44856644]
[143.67013550 -44.47068405]
[133.42283630 -32.41649628]
[130.53756714 -17.69660378]
[127.65229034 -2.97671199]
[124.76701355 11.74317932]
[121.88174438 26.46306992]
[127.02645111 40.44095612]
[116.77915192 52.49514389]
[113.89387512 67.21503448]
[111.00860596 81.93492889]
[108.12332916 96.65481567]
[109.60319519 99.31930542]
[110.14627075 102.58114624]
[109.52943420 106.09440613]
[107.66049957 109.43556213]
[104.60324097 112.15330505]
[100.84693909 126.67536926]
[97.09063721 141.19741821]
[93.33433533 155.71948242]
[90.88861084 170.51875305]
[97.57807159 184.85617065]
[88.91558838 196.97271729]
[87.79994202 211.93118286]
[86.79568481 226.89752197]
[85.90286255 241.87092590]
[85.01004791 256.84432983]
[84.11723328 271.81774902]
[86.73030853 280.57043457]
[83.09802246 287.00692749]
[81.98237610 301.96536255]
[89.79236603 312.23019409]
[88.55519104 324.66616821]
[79.47680664 332.66052246]
[85.95206451 347.09594727]
[77.11014557 359.08218384]
[75.99449921 374.04061890]
[75.10168457 389.01403809]
[74.20886993 403.98742676]
[73.31604767 418.96084595]
[80.21823120 433.19708252]
[71.73710632 445.44125366]
[70.84429169 460.41467285]
[69.95147705 475.38806152]
[69.05866241 490.36148071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 210]
[6 209]
[7 208]
[8 207]
[10 205]
[11 204]
[12 203]
[13 202]
[16 201]
[18 199]
[20 196]
[21 195]
[22 193]
[23 192]
[24 191]
[25 190]
[27 189]
[28 188]
[30 186]
[43 185]
[44 184]
[45 183]
[46 182]
[47 177]
[48 176]
[49 175]
[50 174]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[58 166]
[59 163]
[60 162]
[62 161]
[63 160]
[64 157]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[72 149]
[73 148]
[75 145]
[76 144]
[77 143]
[84 137]
[85 136]
[86 135]
[87 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
