%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[69.88504028 505.66809082]
[60.15281677 517.17376709]
[48.02917862 526.12438965]
[34.16793823 532.03735352]
[19.31660843 534.59362793]
[4.27610970 533.65551758]
[-10.14244556 529.27349854]
[-23.16148376 521.68395996]
[-34.07890320 511.29614258]
[-42.30593872 498.67025757]
[-47.39892197 484.48724365]
[-49.08319092 469.51193237]
[-47.26791382 454.55194092]
[-42.05099106 440.41403198]
[-33.71376419 427.86065674]
[-22.70584488 417.56878662]
[-9.62088013 410.09344482]
[4.83547544 405.83782959]
[19.88360977 405.03134155]
[22.54940605 390.27014160]
[25.21520042 375.50891113]
[27.88099670 360.74771118]
[30.54679108 345.98648071]
[33.21258545 331.22528076]
[35.87838364 316.46405029]
[22.25518990 322.74166870]
[8.78531456 316.14151001]
[5.39824677 301.52890015]
[14.59080696 289.67578125]
[29.58658218 289.31979370]
[39.33081436 300.72177124]
[43.08711624 286.19970703]
[38.78350830 271.94036865]
[49.73011780 260.51748657]
[53.48641968 245.99543762]
[57.24272156 231.47337341]
[60.99901962 216.95130920]
[64.75532532 202.42926025]
[68.40341187 187.87963867]
[71.94308472 173.30325317]
[75.48275757 158.72688293]
[73.97039795 155.54174805]
[73.92565918 151.46583557]
[75.75039673 147.19691467]
[79.51965332 143.58584595]
[83.70666504 129.18206787]
[72.67094421 119.24028778]
[67.03284454 105.49844360]
[67.90593719 90.67063141]
[75.11776733 77.68541718]
[87.24397278 69.10744476]
[101.88955688 66.63092041]
[106.07656860 52.22713470]
[110.26357269 37.82335281]
[109.06090546 31.32219124]
[111.02686310 25.99002075]
[114.79562378 23.05650902]
[119.40962982 8.78377533]
[124.02364349 -5.48895788]
[113.84858704 -16.90891838]
[110.77610779 -31.79034042]
[115.53329468 -46.11638641]
[126.74749756 -56.07115936]
[141.34051514 -59.05605698]
[145.84814453 -73.36273956]
[150.24914551 -87.70259094]
[154.65013123 -102.04243469]
[159.05113220 -116.38228607]
[163.45213318 -130.72213745]
[162.28166199 -135.80908203]
[163.09788513 -140.37931824]
[165.37129211 -143.76261902]
[168.38308716 -145.59603882]
[173.41999817 -159.72506714]
[172.60641479 -166.28628540]
[174.88626099 -171.49198914]
[178.82295227 -174.19598389]
[184.27830505 -188.16877747]
[189.73367310 -202.14157104]
[195.18902588 -216.11437988]
[200.64437866 -230.08717346]
[187.16894531 -236.69619751]
[174.29380798 -244.40963745]
[162.10926819 -253.17341614]
[150.70080566 -262.92602539]
[140.14843750 -273.59909058]
[130.52618408 -285.11770630]
[121.90154266 -297.40112305]
[114.33500671 -310.36312866]
[107.87964630 -323.91287231]
[102.58074951 -337.95523071]
[98.47547913 -352.39175415]
[95.59263611 -367.12118530]
[93.95243835 -382.04016113]
[93.56639862 -397.04409790]
[94.43721008 -412.02767944]
[96.55877686 -426.88586426]
[99.91620636 -441.51440430]
[104.48596191 -455.81069946]
[110.23597717 -469.67446899]
[117.12593079 -483.00845337]
[125.10748291 -495.71911621]
[134.12464905 -507.71734619]
[144.11419678 -518.91894531]
[155.00602722 -529.24530029]
[166.72377014 -538.62408447]
[179.18519592 -546.98944092]
[192.30293274 -554.28271484]
[205.98495483 -560.45269775]
[220.13528442 -565.45617676]
[234.65466309 -569.25805664]
[249.44125366 -571.83160400]
[264.39132690 -573.15881348]
[279.40005493 -573.23034668]
[294.36212158 -572.04571533]
[309.17257690 -569.61328125]
[323.72753906 -565.95007324]
[337.92492676 -561.08172607]
[351.66516113 -555.04248047]
[364.85183716 -547.87463379]
[377.39248657 -539.62847900]
[389.19909668 -530.36181641]
[400.18890381 -520.13977051]
[410.28479004 -509.03393555]
[419.41595459 -497.12225342]
[427.51834106 -484.48825073]
[434.53512573 -471.22055054]
[440.41705322 -457.41226196]
[445.12292480 -443.16018677]
[448.61968994 -428.56433105]
[450.88281250 -413.72705078]
[451.89645386 -398.75244141]
[451.65347290 -383.74551392]
[450.15560913 -368.81155396]
[447.41333008 -354.05532837]
[443.44592285 -339.58032227]
[438.28115845 -325.48806763]
[431.95526123 -311.87741089]
[424.51266479 -298.84381104]
[416.00552368 -286.47872925]
[406.49356079 -274.86889648]
[396.04342651 -264.09570312]
[384.72848511 -254.23475647]
[372.62805176 -245.35520935]
[359.82705688 -237.51934814]
[346.41525269 -230.78213501]
[332.48672485 -225.19084167]
[318.13916016 -220.78466797]
[303.47323608 -217.59452820]
[288.59179688 -215.64279175]
[273.59921265 -214.94317627]
[258.60067749 -215.50056458]
[243.70140076 -217.31105042]
[229.00587463 -220.36192322]
[214.61717224 -224.63182068]
[209.16181946 -210.65901184]
[203.70646667 -196.68621826]
[198.25111389 -182.71342468]
[192.79574585 -168.74061584]
[187.54902649 -154.68815613]
[182.51211548 -140.55912781]
[177.79197693 -126.32113647]
[173.39097595 -111.98128510]
[168.98999023 -97.64144135]
[164.58898926 -83.30158997]
[160.18798828 -68.96174622]
[161.23065186 -61.64500809]
[155.61325073 -54.44204712]
[165.69744873 -43.47963715]
[168.96226501 -28.84416771]
[164.43312073 -14.44440079]
[153.23088074 -4.17763042]
[138.29637146 -0.87494880]
[133.68237305 13.39778423]
[129.06835938 27.67051888]
[124.66735840 42.01036453]
[120.48034668 56.41414642]
[116.29333496 70.81793213]
[127.32905579 80.75971222]
[132.96714783 94.50155640]
[132.09407043 109.32936859]
[124.88223267 122.31458282]
[112.75602722 130.89254761]
[98.11044312 133.36907959]
[93.92343140 147.77285767]
[90.05912781 162.26655579]
[86.51945496 176.84292603]
[82.97978210 191.41931152]
[83.99573517 200.49707031]
[79.27738190 206.18556213]
[75.52108002 220.70761108]
[71.76477814 235.22967529]
[68.00847626 249.75173950]
[64.25217438 264.27380371]
[68.28710938 279.57183838]
[57.60917282 289.95599365]
[53.85287476 304.47805786]
[50.63959885 319.12985229]
[47.97380447 333.89105225]
[45.30801010 348.65228271]
[42.64221191 363.41351318]
[39.97641754 378.17471313]
[37.31062317 392.93594360]
[34.64482498 407.69714355]
[48.46030807 413.71621704]
[60.51493073 422.75961304]
[70.15861511 434.33959961]
[76.87127686 447.83169556]
[80.29091644 462.50830078]
[80.23311615 477.57791138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[31 197]
[32 196]
[34 194]
[35 193]
[36 192]
[37 191]
[38 190]
[39 188]
[40 187]
[41 186]
[45 185]
[46 184]
[52 178]
[53 177]
[54 176]
[57 175]
[58 174]
[59 173]
[64 168]
[65 166]
[66 165]
[67 164]
[68 163]
[69 162]
[73 161]
[74 160]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
