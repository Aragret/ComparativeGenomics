%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[61.27769470 1001.40991211]
[46.28922272 1000.78289795]
[31.33244133 999.62438965]
[16.42620087 997.93572998]
[1.58928287 995.71911621]
[-13.15961838 992.97729492]
[-27.80191803 989.71380615]
[-42.31917191 985.93267822]
[-56.69308090 981.63867188]
[-70.90554047 976.83728027]
[-84.93863678 971.53448486]
[-98.77469635 965.73699951]
[-112.39627838 959.45208740]
[-125.78622437 952.68768311]
[-138.92765808 945.45233154]
[-151.80403137 937.75518799]
[-164.39910889 929.60583496]
[-176.69702148 921.01464844]
[-188.68228149 911.99237061]
[-200.33978271 902.55047607]
[-211.65484619 892.70074463]
[-222.61320496 882.45562744]
[-233.20104980 871.82806396]
[-243.40504456 860.83142090]
[-253.21232605 849.47961426]
[-262.61053467 837.78680420]
[-271.58786011 825.76788330]
[-280.13296509 813.43786621]
[-288.23507690 800.81237793]
[-295.88397217 787.90728760]
[-303.07006836 774.73883057]
[-309.78427124 761.32366943]
[-316.01812744 747.67864990]
[-321.76379395 733.82098389]
[-327.01400757 719.76812744]
[-331.76217651 705.53778076]
[-336.00228882 691.14788818]
[-339.72903442 676.61657715]
[-342.93771362 661.96215820]
[-345.62426758 647.20312500]
[-347.78530884 632.35797119]
[-349.41815186 617.44549561]
[-350.52069092 602.48449707]
[-351.09155273 587.49377441]
[-351.13003540 572.49224854]
[-350.63604736 557.49877930]
[-349.61026001 542.53234863]
[-348.05395508 527.61169434]
[-345.96908569 512.75567627]
[-343.35827637 497.98303223]
[-340.22482300 483.31237793]
[-336.57266235 468.76214600]
[-332.40640259 454.35067749]
[-327.73129272 440.09619141]
[-322.55322266 426.01657104]
[-316.87872314 412.12960815]
[-310.71493530 398.45281982]
[-304.06964111 385.00335693]
[-296.95120239 371.79824829]
[-289.36856079 358.85409546]
[-281.33132935 346.18719482]
[-272.84957886 333.81350708]
[-263.93405151 321.74865723]
[-254.59593201 310.00784302]
[-244.84700012 298.60583496]
[-234.69953918 287.55700684]
[-224.16635132 276.87527466]
[-213.26069641 266.57409668]
[-201.99630737 256.66647339]
[-190.38739014 247.16485596]
[-178.44856262 238.08123779]
[-166.19488525 229.42707825]
[-153.64176941 221.21325684]
[-140.80505371 213.45011902]
[-127.70090485 206.14746094]
[-114.34583282 199.31448364]
[-100.75666046 192.95979309]
[-86.95052338 187.09140015]
[-72.94481659 181.71669006]
[-58.75717163 176.84243774]
[-44.40547562 172.47479248]
[-29.90780830 168.61924744]
[-15.28244114 165.28067017]
[-0.54779792 162.46325684]
[14.27755451 160.17056274]
[29.17493629 158.40547180]
[44.12557602 157.17022705]
[59.11064148 156.46635437]
[74.11124420 156.29476929]
[89.10848236 156.65567017]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[93.57463837 72.37547302]
[93.35131073 57.37713242]
[93.12798309 42.37879562]
[79.10845947 36.43128204]
[68.72480774 25.29127884]
[63.77606201 10.88885689]
[65.11961365 -4.28067732]
[72.52268982 -17.58910942]
[84.70265961 -26.73067284]
[99.54927063 -30.12153816]
[114.49026489 -27.17421532]
[126.93701172 -18.39934731]
[134.73304749 -5.31723261]
[136.52766418 9.80557346]
[132.00991821 24.34895325]
[121.96254730 35.79317856]
[108.12631989 42.15546799]
[108.34964752 57.15380478]
[108.57297516 72.15214539]
[120.73426056 63.37129974]
[135.22215271 67.25728607]
[141.35671997 80.94548798]
[134.61579895 94.34548187]
[119.96852875 97.57929230]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.08188629 157.54849243]
[119.01575470 158.97227478]
[133.88967896 160.92518616]
[148.68492126 163.40475464]
[163.38284302 166.40786743]
[177.96492004 169.93070984]
[192.41279602 173.96887207]
[206.70823669 178.51725769]
[220.83325195 183.57012939]
[234.77003479 189.12112427]
[248.50102234 195.16325378]
[262.00894165 201.68890381]
[275.27673340 208.68983459]
[288.28768921 216.15725708]
[301.02542114 224.08174133]
[313.47390747 232.45329285]
[325.61743164 241.26138306]
[337.44067383 250.49491882]
[348.92880249 260.14224243]
[360.06726074 270.19119263]
[370.84210205 280.62915039]
[381.23965454 291.44293213]
[391.24691772 302.61892700]
[400.85119629 314.14303589]
[410.04043579 326.00076294]
[418.80303955 338.17715454]
[427.12799072 350.65682983]
[435.00476074 363.42413330]
[442.42346191 376.46295166]
[449.37472534 389.75683594]
[455.84979248 403.28903198]
[461.84051514 417.04254150]
[467.33935547 431.00000000]
[472.33935547 445.14379883]
[476.83422852 459.45617676]
[480.81832886 473.91903687]
[484.28662109 488.51419067]
[487.23471069 503.22323608]
[489.65893555 518.02764893]
[491.55618286 532.90875244]
[492.92410278 547.84783936]
[493.76098633 562.82611084]
[494.06573486 577.82458496]
[493.83798218 592.82446289]
[493.07800293 607.80676270]
[491.78677368 622.75268555]
[489.96594238 637.64331055]
[487.61773682 652.46002197]
[484.74517822 667.18402100]
[481.35186768 681.79675293]
[477.44207764 696.27990723]
[473.02072144 710.61511230]
[468.09338379 724.78442383]
[462.66625977 738.76989746]
[456.74621582 752.55395508]
[450.34069824 766.11926270]
[443.45776367 779.44866943]
[436.10607910 792.52539062]
[428.29495239 805.33294678]
[420.03417969 817.85522461]
[411.33419800 830.07641602]
[402.20596313 841.98114014]
[392.66094971 853.55438232]
[382.71121216 864.78161621]
[372.36926270 875.64862061]
[361.64819336 886.14172363]
[350.56143188 896.24774170]
[339.12298584 905.95391846]
[327.34729004 915.24798584]
[315.24914551 924.11834717]
[302.84381104 932.55364990]
[290.14691162 940.54345703]
[277.17443848 948.07751465]
[263.94274902 955.14648438]
[250.46853638 961.74139404]
[236.76873779 967.85394287]
[222.86062622 973.47637939]
[208.76173401 978.60168457]
[194.48983765 983.22338867]
[180.06288147 987.33569336]
[165.49908447 990.93334961]
[150.81677246 994.01184082]
[136.03445435 996.56732178]
[121.17074585 998.59655762]
[106.24438477 1000.09698486]
[91.27417755 1001.06671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 125]
[91 124]
[92 123]
[93 122]
[95 120]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
