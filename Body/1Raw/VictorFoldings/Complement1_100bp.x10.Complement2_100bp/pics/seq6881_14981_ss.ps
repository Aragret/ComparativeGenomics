%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[85.96199799 714.62200928]
[70.92508698 715.15832520]
[56.05844498 712.83892822]
[41.89950180 707.74768066]
[28.96009254 700.06860352]
[17.70796967 690.07934570]
[8.54988670 678.14086914]
[1.81690657 664.68493652]
[-2.24757981 650.19781494]
[-3.49664330 635.20324707]
[-1.88513124 620.24334717]
[2.52870154 605.85876465]
[9.58529758 592.56964111]
[19.02956581 580.85632324]
[30.52009964 571.14221191]
[43.64152527 563.77844238]
[57.91951370 559.03131104]
[72.83792114 557.07232666]
[73.73073578 542.09893799]
[74.62355042 527.12548828]
[75.51637268 512.15209961]
[76.40918732 497.17871094]
[77.30200195 482.20529175]
[78.19481659 467.23187256]
[79.08763123 452.25848389]
[79.98044586 437.28506470]
[65.25749207 432.13925171]
[52.56659317 423.04864502]
[42.93889236 410.74176025]
[37.15945816 396.20889282]
[35.70329666 380.62234497]
[38.69631195 365.24194336]
[45.90447235 351.31307983]
[56.75208282 339.96603394]
[70.36776733 332.12411499]
[85.65444183 328.42861938]
[86.32422638 313.44357300]
[83.48253632 306.62106323]
[87.11718750 298.24090576]
[88.01000214 283.26751709]
[80.21795654 274.01489258]
[80.83922577 261.53302002]
[90.08551025 252.54028320]
[91.20115662 237.58183289]
[92.31681061 222.62338257]
[93.43245697 207.66491699]
[93.87906647 192.67156982]
[93.65573883 177.67323303]
[93.43241119 162.67489624]
[93.20908356 147.67655945]
[92.98575592 132.67822266]
[79.51879120 126.41185760]
[70.09697723 114.92901611]
[66.58116913 100.49761200]
[69.66574860 85.96792603]
[78.74149323 74.20965576]
[92.01590729 67.54510498]
[76.81044006 64.78604889]
[62.43635941 59.12382507]
[49.44205093 50.77639771]
[38.32289886 40.06413651]
[29.50236511 27.39752960]
[23.31589890 13.26144028]
[19.99814987 -1.80344105]
[19.67408562 -17.22128105]
[22.35427666 -32.40311813]
[27.93456841 -46.76935577]
[36.20012283 -59.77189255]
[46.83368683 -70.91503143]
[59.42778015 -79.77436829]
[73.50029755 -86.01299286]
[88.51296997 -89.39424133]
[88.06636810 -104.38759613]
[87.61975861 -119.38094330]
[86.50411224 -134.33940125]
[84.72164917 -149.23310852]
[82.93917847 -164.12683105]
[81.15671539 -179.02055359]
[71.83435059 -191.80351257]
[78.00443268 -205.36003113]
[76.22196198 -220.25375366]
[74.43949890 -235.14746094]
[64.80089569 -243.71835327]
[63.62289047 -256.16006470]
[70.99401855 -265.75137329]
[69.43349457 -280.66995239]
[60.78668213 -268.41302490]
[46.62439728 -263.47036743]
[32.22882462 -267.68551636]
[22.96915054 -279.48629761]
[22.29900932 -294.47131348]
[30.46834373 -307.05154419]
[44.43019867 -312.53485107]
[58.97714233 -308.87609863]
[68.68397522 -297.43884277]
[68.90730286 -312.43719482]
[69.13063049 -327.43551636]
[69.35395813 -342.43386841]
[69.57728577 -357.43222046]
[55.74105835 -363.79449463]
[45.69369125 -375.23870850]
[41.17594910 -389.78210449]
[42.97055817 -404.90490723]
[50.76659393 -417.98703003]
[63.21334457 -426.76190186]
[78.15433502 -429.70919800]
[93.00094604 -426.31835938]
[105.18091583 -417.17678833]
[112.58399200 -403.86834717]
[113.92754364 -388.69882202]
[108.97879791 -374.29638672]
[98.59514618 -363.15640259]
[84.57562256 -357.20889282]
[84.35229492 -342.21054077]
[84.12896729 -327.21218872]
[83.90563965 -312.21386719]
[83.68231201 -297.21551514]
[84.35209656 -282.23049927]
[85.91262054 -267.31188965]
[96.97094727 -253.68542480]
[89.33321381 -236.92993164]
[91.11568451 -222.03620911]
[92.89814758 -207.14250183]
[102.09301758 -195.42483521]
[96.05043030 -180.80300903]
[97.83290100 -165.90930176]
[99.61536407 -151.01557922]
[101.39782715 -136.12185669]
[111.49613953 -147.21348572]
[126.47260284 -148.05357361]
[137.74800110 -138.16088867]
[138.86329651 -123.20240784]
[129.17958069 -111.74703217]
[114.24413300 -110.35691071]
[102.61311340 -119.82755280]
[103.05971527 -104.83419800]
[103.50632477 -89.84085083]
[117.90302277 -87.56473541]
[131.63739014 -82.67262268]
[144.23829651 -75.33071899]
[155.27313232 -65.78930664]
[164.36279297 -54.37419128]
[171.19459534 -41.47560120]
[175.53308105 -27.53483582]
[177.22814941 -13.02915573]
[176.22016907 1.54453290]
[172.54219055 15.68671799]
[166.31877136 28.91239357]
[157.76179504 40.76770020]
[147.16326904 50.84548950]
[134.88533020 58.79931641]
[121.34787750 64.35534668]
[107.01424408 67.32177734]
[120.48120880 73.58814240]
[129.90301514 85.07098389]
[133.41883850 99.50238800]
[130.33425903 114.03207397]
[121.25850677 125.79034424]
[107.98409271 132.45489502]
[108.20742035 147.45323181]
[108.43074799 162.45156860]
[108.65407562 177.44990540]
[108.87740326 192.44824219]
[120.07482910 182.46739197]
[135.05741882 183.18992615]
[145.24246216 194.20196533]
[144.79548645 209.19531250]
[133.97256470 219.58108521]
[118.97354126 219.40985107]
[108.39091492 208.78057861]
[107.27526093 223.73902893]
[106.15961456 238.69747925]
[105.04396820 253.65592957]
[113.42224884 270.05368042]
[102.98340607 284.16030884]
[102.09059143 299.13372803]
[101.30926514 314.11337280]
[100.63948059 329.09838867]
[114.38354492 333.57510376]
[126.48796082 341.45373535]
[136.12927246 352.19079590]
[142.65351868 365.04861450]
[145.62063599 379.14599609]
[144.83407593 393.51858521]
[140.35383606 407.18490601]
[132.49197388 419.21331787]
[121.79081726 428.78561401]
[108.98558044 435.25250244]
[94.95385742 438.17788696]
[94.06103516 453.15130615]
[93.16822052 468.12469482]
[92.27540588 483.09811401]
[91.38259125 498.07150269]
[90.48977661 513.04492188]
[89.59696198 528.01831055]
[88.70413971 542.99169922]
[87.81132507 557.96514893]
[102.39124298 561.68298340]
[116.00395203 568.09320068]
[128.15736389 576.96398926]
[138.41213989 587.97473145]
[146.39758301 600.72735596]
[151.82502747 614.76086426]
[154.49824524 629.56793213]
[154.32064819 644.61340332]
[151.29861450 659.35327148]
[145.54139709 673.25476074]
[137.25714111 685.81530762]
[126.74529266 696.58087158]
[114.38585663 705.16229248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 197]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 190]
[26 189]
[36 178]
[37 177]
[39 176]
[40 175]
[43 173]
[44 172]
[45 171]
[46 170]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[57 153]
[72 137]
[73 136]
[74 135]
[75 128]
[76 127]
[77 126]
[78 125]
[80 123]
[81 122]
[82 121]
[85 119]
[86 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
