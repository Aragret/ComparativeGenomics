%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[112.17985535 749.34741211]
[101.79960632 738.47558594]
[93.24799347 726.11370850]
[86.73559570 712.56616211]
[82.42279816 698.16662598]
[80.41580963 683.26971436]
[80.76403809 668.24224854]
[83.45892334 653.45428467]
[88.43408966 639.26995850]
[95.56702423 626.03863525]
[104.68207550 614.08618164]
[115.55477905 603.70678711]
[127.91737366 595.15618896]
[141.46542358 588.64495850]
[155.86531067 584.33331299]
[153.86129761 569.46777344]
[151.85728455 554.60229492]
[149.85327148 539.73675537]
[147.84925842 524.87121582]
[145.84524536 510.00567627]
[136.47692871 498.42623901]
[142.30114746 483.71606445]
[125.36339569 475.81634521]
[116.53873444 459.17141724]
[119.55300140 440.42245483]
[133.36688232 427.17434692]
[130.70109558 412.41311646]
[128.03529358 397.65191650]
[125.36949921 382.89068604]
[110.76221466 379.79931641]
[98.41790771 371.32797241]
[90.23528290 358.74191284]
[87.48735046 343.94201660]
[90.62346649 329.17791748]
[99.19619751 316.70590210]
[111.92485809 308.44415283]
[109.25906372 293.68292236]
[106.59326172 278.92169189]
[103.59848785 264.22369385]
[100.27622986 249.59623718]
[96.95397186 234.96878052]
[93.63171387 220.34132385]
[90.30945587 205.71385193]
[86.41658020 220.19990540]
[78.29056549 232.80815125]
[66.70594025 242.33686829]
[52.76686478 247.87782288]
[37.80193329 248.90290833]
[23.23750305 245.31440735]
[10.46176243 237.45436096]
[0.69241410 226.07191467]
[-5.13938951 212.25199890]
[-6.47779799 197.31182861]
[-3.19524336 182.67541504]
[4.39540243 169.73779297]
[15.57064819 159.73210144]
[29.26533890 153.61201477]
[44.17418671 151.96086121]
[58.87617111 154.93603516]
[71.96999359 162.25393677]
[82.20764160 173.21708679]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[92.31865692 33.80584335]
[95.85470581 27.31599617]
[96.74752045 12.34258938]
[97.64033508 -2.63081598]
[95.02763367 -8.70414448]
[95.76377106 -14.33931255]
[98.78920746 -18.03468704]
[100.12744141 -32.97487259]
[93.65218353 -47.41030121]
[102.49410248 -59.39653397]
[103.83233643 -74.33672333]
[97.35707855 -88.77214813]
[106.19899750 -100.75838470]
[93.19019318 -93.29038239]
[79.18519592 -98.66252899]
[74.50795746 -112.91466522]
[82.60637665 -125.54065704]
[97.51059723 -127.23308563]
[108.23320770 -116.74591064]
[110.67893219 -131.54518127]
[113.12466431 -146.34445190]
[115.57038879 -161.14372253]
[117.79550934 -175.97776794]
[119.79952240 -190.84329224]
[121.80353546 -205.70881653]
[107.73307037 -211.10499573]
[95.28665924 -219.60108948]
[85.13552094 -230.73892212]
[77.82710266 -243.91783142]
[73.75552368 -258.42709351]
[73.14037323 -273.48428345]
[76.01481628 -288.27731323]
[82.22383881 -302.00848389]
[91.43259430 -313.93725586]
[103.14447784 -323.42031860]
[116.72786713 -329.94628906]
[131.45024109 -333.16320801]
[146.51762390 -332.89758301]
[161.11746216 -329.16378784]
[174.46240234 -322.16311646]
[185.83277893 -312.27316284]
[194.61538696 -300.02722168]
[200.33659363 -286.08575439]
[202.68786621 -271.20059204]
[201.54240417 -256.17446899]
[196.96197510 -241.81770325]
[189.19358826 -228.90457153]
[178.65621948 -218.13143921]
[165.91809082 -210.07931519]
[151.66616821 -205.18240356]
[136.66906738 -203.70480347]
[134.66505432 -188.83927917]
[132.66104126 -173.97375488]
[134.79286194 -169.70007324]
[134.26261902 -164.04180908]
[130.36965942 -158.69799805]
[127.92393494 -143.89872742]
[125.47820282 -129.09945679]
[123.03247833 -114.30017853]
[121.13918304 -99.42015076]
[127.71015930 -86.05333710]
[118.77252197 -72.99848175]
[117.43428802 -58.05830002]
[124.00526428 -44.69149399]
[115.06762695 -31.63663864]
[113.72939301 -16.69645309]
[112.61374664 -1.73800015]
[111.72092438 13.23540592]
[110.82810974 28.20881081]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[104.93691254 202.39160156]
[108.25917053 217.01905823]
[111.58142853 231.64651489]
[114.90369415 246.27398682]
[118.22595215 260.90142822]
[121.77359009 264.73046875]
[123.34100342 269.10040283]
[123.05374146 273.16644287]
[121.35448456 276.25592041]
[124.02027893 291.01712036]
[126.68607330 305.77835083]
[141.50050354 309.06597900]
[153.89418030 317.75158691]
[161.99639893 330.48608398]
[164.59875488 345.31225586]
[161.33538818 359.96542358]
[152.73397827 372.21945190]
[140.13072205 380.22488403]
[142.79650879 394.98611450]
[145.46231079 409.74731445]
[148.12809753 424.50854492]
[159.16160583 427.61920166]
[168.19670105 434.59109497]
[173.95150757 444.38671875]
[175.62763977 455.57150269]
[173.02081299 466.52392578]
[166.54487610 475.67053223]
[157.16667175 481.71203613]
[166.67832947 494.35479736]
[160.71076965 508.00167847]
[162.71478271 522.86718750]
[164.71879578 537.73272705]
[166.72280884 552.59826660]
[168.72682190 567.46380615]
[170.73083496 582.32934570]
[185.75840759 582.67382812]
[200.54704285 585.36505127]
[214.73257446 590.33673096]
[227.96565247 597.46636963]
[239.92041016 606.57849121]
[250.30244446 617.44860840]
[258.85610962 629.80908203]
[265.37072754 643.35552979]
[269.68591309 657.75433350]
[271.69534302 672.65093994]
[271.34960938 687.67846680]
[268.65716553 702.46685791]
[263.68432617 716.65197754]
[256.55358887 729.88446045]
[247.44050598 741.83850098]
[236.56951904 752.21966553]
[224.20832825 760.77227783]
[210.66134644 767.28576660]
[196.26217651 771.59979248]
[181.36541748 773.60797119]
[166.33790588 773.26098633]
[151.54971313 770.56732178]
[137.36500549 765.59332275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[22 180]
[26 173]
[27 172]
[28 171]
[29 170]
[36 163]
[37 162]
[38 161]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[69 145]
[70 144]
[71 143]
[72 142]
[74 141]
[75 140]
[76 139]
[79 138]
[80 137]
[82 135]
[83 134]
[85 132]
[91 131]
[92 130]
[93 129]
[94 128]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
