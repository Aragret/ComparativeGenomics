%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[150.96301270 583.95739746]
[144.34915161 570.48535156]
[138.82655334 556.53039551]
[134.43014526 542.18078613]
[131.18772888 527.52722168]
[129.11979675 512.66235352]
[128.23942566 497.68020630]
[128.55218506 482.67544556]
[130.05607605 467.74298096]
[132.74162292 452.97723389]
[136.59182739 438.47149658]
[141.58235168 424.31753540]
[147.68164062 410.60479736]
[154.85113525 397.42001343]
[163.04550171 384.84655762]
[172.21293640 372.96386719]
[182.29548645 361.84710693]
[193.22938538 351.56655884]
[204.94552612 342.18719482]
[196.53089905 329.76971436]
[188.11628723 317.35220337]
[188.78538513 332.33728027]
[183.37757874 346.32855225]
[172.80418396 356.96823120]
[158.84698486 362.46337891]
[143.85803223 361.88796997]
[130.36320496 355.33892822]
[120.63665009 343.91989136]
[116.31743622 329.55520630]
[118.13344574 314.66552734]
[125.77863312 301.76007080]
[137.96466064 293.01361084]
[152.63796997 289.90005493]
[167.32583618 292.94415283]
[179.55424500 301.63406372]
[173.68527222 287.82989502]
[167.81631470 274.02572632]
[161.94735718 260.22155762]
[146.36018372 261.75976562]
[131.04158020 258.40179443]
[117.49366760 250.46456909]
[107.04871368 238.71472168]
[100.73814392 224.29444885]
[99.19071198 208.61053467]
[102.56983948 193.19709778]
[110.55647278 179.56552124]
[122.37917328 169.05627441]
[116.30533600 155.34100342]
[110.23150635 141.62573242]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[82.12706757 78.16336823]
[69.46445465 68.67816925]
[71.38551331 53.90797043]
[65.31167603 40.19270325]
[59.23784256 26.47743607]
[53.91650772 40.50182343]
[40.88728714 47.93413544]
[26.10695648 45.37642670]
[16.33288956 33.99804306]
[16.03365898 19.00102806]
[25.34606552 7.24181557]
[40.01260376 4.09655952]
[53.32918930 11.00458813]
[48.71518326 -3.26814556]
[44.10117340 -17.54087830]
[39.48716354 -31.81361198]
[34.87315369 -46.08634567]
[30.25914383 -60.35907745]
[25.64513588 -74.63181305]
[21.03112602 -88.90454865]
[6.23095417 -86.31590271]
[-8.78545475 -85.81232452]
[-23.72580147 -87.40359497]
[-38.29927063 -91.05875397]
[-52.22217941 -96.70664215]
[-65.22352600 -104.23732758]
[-77.05021667 -113.50422668]
[-87.47206116 -124.32695007]
[-96.28617859 -136.49482727]
[-103.32101440 -149.77102661]
[-108.43962097 -163.89709473]
[-111.54237366 -178.59808350]
[-112.56887054 -193.58782959]
[-111.49913025 -208.57455444]
[-108.35397339 -223.26652527]
[-103.19463348 -237.37777710]
[-96.12152100 -250.63362122]
[-87.27232361 -262.77600098]
[-76.81930542 -273.56863403]
[-64.96591949 -282.80136108]
[-51.94290161 -290.29449463]
[-38.00375366 -295.90219116]
[-23.41979980 -299.51528931]
[-8.47492409 -301.06344604]
[6.53996944 -300.51654053]
[21.33261108 -297.88522339]
[35.61505508 -293.22067261]
[49.10929489 -286.61373901]
[61.55265427 -278.19299316]
[72.70292664 -268.12237549]
[82.34306335 -256.59786987]
[90.28541565 -243.84384155]
[96.37538910 -230.10855103]
[100.49443817 -215.65934753]
[102.56237793 -200.77748108]
[102.53896332 -185.75265503]
[100.42465210 -170.87730408]
[96.26058960 -156.44100952]
[90.12784576 -142.72476196]
[82.14577484 -129.99554443]
[72.46977234 -118.50115967]
[61.28816605 -108.46533203]
[48.81862259 -100.08341217]
[35.30385971 -93.51855469]
[39.91786957 -79.24581909]
[44.53187943 -64.97309113]
[49.14588547 -50.70035553]
[53.75989532 -36.42761993]
[58.37390518 -22.15488815]
[62.98791504 -7.88215494]
[67.60192108 6.39057875]
[72.95310974 20.40360069]
[79.02694702 34.11886978]
[85.10077667 47.83413315]
[97.32894135 56.33832550]
[95.84233093 72.08953094]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[123.94676971 135.55189514]
[130.02059937 149.26716614]
[136.09443665 162.98243713]
[150.38607788 161.23898315]
[164.57400513 163.59176636]
[177.50923157 169.84115601]
[188.14683533 179.47232056]
[195.63027954 191.69767761]
[199.36041260 205.52124023]
[199.04345703 219.81982422]
[194.71408081 233.43418884]
[186.73188782 245.26315308]
[175.75152588 254.35258484]
[181.62049866 268.15676880]
[187.48945618 281.96093750]
[193.35841370 295.76510620]
[200.53378296 308.93759155]
[208.94839478 321.35507202]
[217.36302185 333.77258301]
[230.41661072 326.36691284]
[244.01731873 320.02178955]
[258.07916260 314.77728271]
[272.51324463 310.66659546]
[287.22827148 307.71569824]
[302.13122559 305.94323730]
[317.12792969 305.36044312]
[332.12350464 305.97100830]
[347.02316284 307.77102661]
[361.73269653 310.74914551]
[376.15914917 314.88653564]
[390.21127319 320.15704346]
[403.80020142 326.52731323]
[416.84005737 333.95712280]
[429.24841309 342.39947510]
[440.94677734 351.80099487]
[451.86120605 362.10220337]
[461.92269897 373.23803711]
[471.06762695 385.13806152]
[479.23818970 397.72702026]
[486.38269043 410.92535400]
[492.45602417 424.64959717]
[497.41973877 438.81298828]
[501.24249268 453.32595825]
[503.90008545 468.09680176]
[505.37570190 483.03207397]
[505.66006470 498.03738403]
[504.75134277 513.01782227]
[502.65527344 527.87872314]
[499.38513184 542.52612305]
[494.96157837 556.86743164]
[489.41256714 570.81188965]
[482.77322388 584.27142334]
[475.08547974 597.16094971]
[466.39797974 609.39886475]
[456.76559448 620.90789795]
[446.24929810 631.61523438]
[434.91552734 641.45318604]
[422.83593750 650.35961914]
[410.08691406 658.27813721]
[396.74908447 665.15869141]
[382.90673828 670.95776367]
[368.64743042 675.63879395]
[354.06124878 679.17205811]
[339.24047852 681.53527832]
[324.27880859 682.71350098]
[309.27081299 682.69927979]
[294.31140137 681.49273682]
[279.49511719 679.10150146]
[264.91567993 675.54058838]
[250.66523743 670.83264160]
[236.83389282 665.00732422]
[223.50909424 658.10156250]
[210.77510071 650.15893555]
[198.71238708 641.22967529]
[187.39726257 631.37030029]
[176.90122986 620.64306641]
[167.29066467 609.11578369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 152]
[20 151]
[21 150]
[35 149]
[36 148]
[37 147]
[38 146]
[47 136]
[48 135]
[49 134]
[50 133]
[51 132]
[53 130]
[54 129]
[56 127]
[57 126]
[58 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
