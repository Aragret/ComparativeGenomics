%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[13.94791317 544.07836914]
[-1.11072052 545.97625732]
[-15.83712864 542.30236816]
[-28.23968506 533.55358887]
[-36.64104462 520.91314697]
[-39.90499496 506.09048462]
[-37.59011078 491.09030151]
[-30.00946236 477.94122314]
[-18.18827248 468.42156982]
[-3.72525573 463.81878662]
[-2.83243990 448.84536743]
[-1.93962395 433.87197876]
[-1.04680812 418.89855957]
[-0.15399222 403.92517090]
[0.73882365 388.95175171]
[-8.12617111 401.05181885]
[-21.32234383 408.18353271]
[-36.30171967 408.96981812]
[-50.17201996 403.25888062]
[-60.25510406 392.15341187]
[-64.60408783 377.79769897]
[-62.37924576 362.96359253]
[-54.01016617 350.51538086]
[-41.11278534 342.85653687]
[-26.17738342 341.46594238]
[-12.08775425 346.61203003]
[-1.56438518 357.30123901]
[3.36097121 371.47085571]
[6.90064383 356.89447021]
[2.38521552 342.70080566]
[13.16054153 331.11621094]
[16.70021439 316.53982544]
[20.23988533 301.96347046]
[23.77955818 287.38708496]
[22.26720428 284.20193481]
[22.22246361 280.12603760]
[24.04720116 275.85711670]
[27.81645775 272.24606323]
[23.93931389 257.86492920]
[35.22117233 246.77301025]
[39.40818405 232.36923218]
[43.59519196 217.96545410]
[42.44371414 210.66505432]
[47.95325089 203.37925720]
[52.35425186 189.03941345]
[56.75524902 174.69955444]
[61.15624619 160.35971069]
[49.89970016 170.27384949]
[35.60842514 174.83010864]
[20.69075584 173.26068115]
[7.66057825 165.83003235]
[-1.28629184 153.79037476]
[-4.64215040 139.17057800]
[-1.84147596 124.43435669]
[6.64376831 112.06501770]
[19.38366890 104.14700317]
[34.23133087 102.01464844]
[48.68466187 106.02728271]
[60.30801773 115.50871277]
[67.14266205 128.86116028]
[68.03659821 143.83612061]
[67.21942139 128.96394348]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[98.83396149 69.88344574]
[111.66076660 62.31230164]
[118.73787689 49.08677673]
[125.81497955 35.86124802]
[125.50400543 20.04309845]
[138.33081055 12.47195148]
[145.40791321 -0.75357574]
[132.99662781 -14.84815311]
[126.94290924 -32.59127808]
[128.14682007 -51.26711273]
[136.39953613 -68.02723694]
[150.41908264 -80.32505035]
[168.04939270 -86.30274200]
[186.59190369 -85.07189941]
[185.10530090 -100.82310486]
[197.33346558 -109.32729340]
[195.84684753 -125.07850647]
[208.07501221 -133.58268738]
[214.14884949 -147.29795837]
[220.22268677 -161.01322937]
[226.29652405 -174.72850037]
[232.37034607 -188.44375610]
[238.44418335 -202.15902710]
[244.51802063 -215.87429810]
[243.03140259 -231.62550354]
[255.25956726 -240.12968445]
[261.33340454 -253.84495544]
[267.40722656 -267.56021118]
[273.48107910 -281.27548218]
[279.55490112 -294.99075317]
[278.06829834 -310.74197388]
[290.29644775 -319.24615479]
[296.37030029 -332.96142578]
[283.68829346 -341.02517700]
[272.34982300 -350.88909912]
[262.60821533 -362.33282471]
[254.68112183 -375.10070801]
[248.74559021 -388.90750122]
[244.93426514 -403.44473267]
[243.33226013 -418.38766479]
[243.97538757 -433.40246582]
[246.84925842 -448.15368652]
[251.88969421 -462.31176758]
[258.98406982 -475.56045532]
[267.97390747 -487.60372925]
[278.65835571 -498.17254639]
[290.79873657 -507.03082275]
[304.12384033 -513.98059082]
[318.33593750 -518.86669922]
[333.11755371 -521.57989502]
[348.13845825 -522.05963135]
[363.06307983 -520.29510498]
[377.55798340 -516.32586670]
[391.29937744 -510.24044800]
[403.98022461 -502.17486572]
[415.31729126 -492.30932617]
[425.05725098 -480.86422729]
[432.98254395 -468.09521484]
[438.91610718 -454.28759766]
[442.72537231 -439.74981689]
[444.32522583 -424.80664062]
[443.67996216 -409.79193115]
[440.80398560 -395.04113770]
[435.76153564 -380.88375854]
[428.66528320 -367.63607788]
[419.67373657 -355.59408569]
[408.98776245 -345.02679443]
[396.84613037 -336.17025757]
[383.52005005 -329.22235107]
[369.30725098 -324.33828735]
[354.52523804 -321.62719727]
[339.50427246 -321.14962769]
[324.57989502 -322.91622925]
[310.08557129 -326.88760376]
[304.01171875 -313.17233276]
[305.93276978 -298.40213013]
[293.27017212 -288.91693115]
[287.19635010 -275.20166016]
[281.12249756 -261.48638916]
[275.04867554 -247.77111816]
[268.97485352 -234.05586243]
[270.89590454 -219.28565979]
[258.23327637 -209.80046082]
[252.15945435 -196.08518982]
[246.08561707 -182.36991882]
[240.01177979 -168.65466309]
[233.93795776 -154.93939209]
[227.86412048 -141.22412109]
[221.79028320 -127.50885773]
[223.71133423 -112.73865509]
[211.04873657 -103.25346375]
[212.96978760 -88.48326111]
[200.30717468 -78.99806213]
[209.13761902 -71.68038177]
[215.96633911 -62.45190430]
[220.39161682 -51.84602356]
[222.15081787 -40.47743607]
[221.13606262 -29.00652122]
[217.40069580 -18.10096741]
[211.15666199 -8.39691639]
[202.76235962 -0.46185640]
[192.70213318 5.23856783]
[181.55836487 8.36787415]
[169.97767639 8.73860073]
[158.63345337 6.32352972]
[151.55633545 19.54905701]
[152.37351990 34.42123032]
[139.04051208 42.93835449]
[131.96339417 56.16387939]
[124.88629150 69.38941193]
[125.70346832 84.26158142]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[94.08893585 143.34207153]
[81.26212311 150.91322327]
[75.49609375 164.76071167]
[71.09509277 179.10055542]
[66.69409943 193.44039917]
[62.29309845 207.78025818]
[57.99897385 222.15246582]
[53.81196594 236.55624390]
[49.62495422 250.96002197]
[53.20261383 266.37142944]
[42.22023773 276.43307495]
[38.35593414 290.92675781]
[34.81626129 305.50314331]
[31.27658844 320.07949829]
[27.73691750 334.65588379]
[31.99916267 349.89215088]
[21.47701836 360.43414307]
[17.93734741 375.01052856]
[15.71222973 389.84457397]
[14.81941319 404.81796265]
[13.92659760 419.79138184]
[13.03378201 434.76477051]
[12.14096546 449.73818970]
[11.24814987 464.71160889]
[25.06173515 471.00042725]
[35.66793442 481.85736084]
[41.63235092 495.81408691]
[42.14834595 510.98306274]
[37.14612961 525.31280518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[28 199]
[29 198]
[31 196]
[32 195]
[33 194]
[34 193]
[38 192]
[40 190]
[41 189]
[42 188]
[44 187]
[45 186]
[46 185]
[47 184]
[61 183]
[63 181]
[64 180]
[66 178]
[68 176]
[69 175]
[70 174]
[72 172]
[73 171]
[80 159]
[82 157]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[90 149]
[92 147]
[93 146]
[94 145]
[95 144]
[96 143]
[98 141]
[99 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
