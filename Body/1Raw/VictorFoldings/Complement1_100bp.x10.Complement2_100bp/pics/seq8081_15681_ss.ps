%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[65.46762848 657.91333008]
[51.11972809 653.50659180]
[37.20376968 647.88275146]
[23.82278252 641.08343506]
[11.07583618 633.15899658]
[-0.94269365 624.16809082]
[-12.14382458 614.17730713]
[-22.44462395 603.26055908]
[-31.76883125 591.49871826]
[-40.04740906 578.97888184]
[-47.21906281 565.79370117]
[-53.23069763 552.04083252]
[-58.03780746 537.82208252]
[-61.60479355 523.24267578]
[-63.90525818 508.41064453]
[-64.92215729 493.43576050]
[-64.64797211 478.42889404]
[-63.08472443 463.50115967]
[-60.24399185 448.76303101]
[-56.14680862 434.32369995]
[-50.82350540 420.29003906]
[-44.31349564 406.76593018]
[-36.66498184 393.85153198]
[-27.93458748 381.64245605]
[-18.18695068 370.22909546]
[-7.49424410 359.69592285]
[4.06436920 350.12097168]
[16.40331078 341.57507324]
[29.43122482 334.12158203]
[43.05165482 327.81561279]
[57.16376114 322.70385742]
[71.66306305 318.82418823]
[86.44219971 316.20535278]
[85.10396576 301.26516724]
[83.76573181 286.32498169]
[74.92381287 274.33874512]
[81.39907074 259.90332031]
[80.06083679 244.96311951]
[78.72260284 230.02293396]
[77.38436890 215.08274841]
[71.32645416 228.80505371]
[60.99061203 239.67567444]
[47.59108734 246.41754150]
[32.70204163 248.23861694]
[18.07262611 244.92497253]
[5.42149067 236.86589050]
[-3.76512289 225.00814819]
[-8.40797997 210.74478149]
[-7.96164274 195.75141907]
[-2.47854590 181.78948975]
[7.39716101 170.49920654]
[20.50529099 163.20695496]
[35.30591202 160.76940918]
[50.06026459 163.47294617]
[63.03501892 170.99995422]
[72.70591736 182.46614075]
[77.93711853 196.52604675]
[80.16223145 181.69200134]
[74.39851379 167.95777893]
[84.09734344 155.45805359]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[95.39752197 71.85261536]
[95.17419434 56.85427856]
[94.95086670 41.85593796]
[94.72753906 26.85760117]
[94.50421143 11.85926437]
[94.28088379 -3.13907266]
[94.05755615 -18.13741112]
[93.16473389 -33.11081696]
[91.60421753 -48.02941895]
[90.04369354 -62.94802475]
[77.23902893 -64.57682800]
[65.06628418 -68.84975433]
[54.06475067 -75.57440948]
[44.72118378 -84.44986725]
[37.44827271 -95.08011627]
[32.56640244 -106.99172211]
[30.28955650 -119.65491486]
[30.71592712 -132.50717163]
[33.82368851 -144.97816467]
[39.47208786 -156.51512146]
[47.40784073 -166.60728455]
[57.27644730 -174.80851746]
[68.63806915 -180.75709534]
[80.98710632 -184.19157410]
[80.31732178 -199.17660522]
[79.64753723 -214.16165161]
[78.97775269 -229.14668274]
[78.30796814 -244.13172913]
[77.63818359 -259.11676025]
[76.96839905 -274.10180664]
[76.29860687 -289.08685303]
[61.90572739 -293.90444946]
[50.22757721 -303.59906006]
[42.84354019 -316.85952759]
[40.75224686 -331.89251709]
[44.23651886 -346.66494751]
[52.82514572 -359.17892456]
[65.35658264 -367.74209595]
[80.13606262 -371.19628906]
[95.16476440 -369.07440186]
[108.41020203 -361.66342163]
[118.08102417 -349.96557617]
[122.86933136 -335.56289673]
[122.12755585 -320.40328979]
[115.95600128 -306.53689575]
[105.18933105 -295.83908081]
[91.28364563 -289.75662231]
[91.95343781 -274.77157593]
[92.62322235 -259.78656006]
[93.29300690 -244.80151367]
[93.96279144 -229.81646729]
[94.63257599 -214.83143616]
[95.30236053 -199.84638977]
[95.97214508 -184.86135864]
[112.76237488 -181.14048767]
[127.85237122 -172.86422729]
[140.03327942 -160.68727112]
[148.32696533 -145.57713318]
[152.06455994 -128.73727417]
[150.94039917 -111.51125336]
[145.03701782 -95.27550507]
[134.81910706 -81.32940674]
[121.09698486 -70.79123688]
[104.96229553 -64.50854492]
[106.52281952 -49.58994293]
[108.08334351 -34.67133713]
[118.34567261 -45.61138153]
[133.33297729 -46.22840118]
[144.45983887 -36.16893768]
[145.35231018 -21.19551086]
[135.49911499 -9.88557816]
[120.54462433 -8.71798420]
[109.05589294 -18.36073875]
[109.27922058 -3.36240053]
[109.50254822 11.63593674]
[109.72587585 26.63427353]
[109.94920349 41.63261032]
[110.17253113 56.63095093]
[110.39585876 71.62928772]
[118.66839600 59.11668777]
[131.76348877 51.80105972]
[146.75567627 51.31672668]
[160.29563904 57.77189636]
[169.35853577 69.72446442]
[171.91967773 84.50420380]
[167.40692139 98.80926514]
[156.82839966 109.44387817]
[142.54740906 114.03224182]
[127.75433350 111.54929352]
[115.75399780 102.54973602]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[98.93138885 157.68316650]
[104.53594971 172.47842407]
[94.99627686 183.91712952]
[92.77116394 198.75117493]
[92.32455444 213.74452209]
[93.66278839 228.68470764]
[95.00102234 243.62489319]
[96.33925629 258.56506348]
[105.27689362 271.61993408]
[98.70591736 284.98672485]
[100.04415131 299.92691040]
[101.38238525 314.86709595]
[116.39168549 314.81771851]
[131.34967041 316.05880737]
[146.14558411 318.58117676]
[160.66989136 322.36614990]
[174.81504822 327.38571167]
[188.47633362 333.60266113]
[201.55261230 340.97100830]
[213.94705200 349.43618774]
[225.56790161 358.93551636]
[236.32910156 369.39868164]
[246.15100098 380.74822998]
[254.96087646 392.90005493]
[262.69351196 405.76428223]
[269.29162598 419.24560547]
[274.70639038 433.24426270]
[278.89770508 447.65655518]
[281.83453369 462.37579346]
[283.49514771 477.29302979]
[283.86727905 492.29779053]
[282.94808960 507.27899170]
[280.74447632 522.12573242]
[277.27267456 536.72808838]
[272.55847168 550.97790527]
[266.63668823 564.76971436]
[259.55123901 578.00140381]
[251.35452271 590.57501221]
[242.10726929 602.39739990]
[231.87791443 613.38110352]
[220.74221802 623.44482422]
[208.78260803 632.51397705]
[196.08764648 640.52142334]
[182.75131226 647.40789795]
[168.87234497 653.12237549]
[154.55349731 657.62261963]
[139.90080261 660.87530518]
[125.02272797 662.85632324]
[110.02943420 663.55096436]
[95.03192139 662.95416260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 172]
[34 171]
[35 170]
[37 168]
[38 167]
[39 166]
[40 165]
[57 164]
[58 163]
[60 161]
[61 160]
[62 159]
[63 158]
[65 156]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 131]
[74 130]
[75 129]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
