%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[46.95169830 678.51397705]
[32.27269363 675.16430664]
[18.61106682 668.83551025]
[6.56404591 659.80426025]
[-3.34172463 648.46545410]
[-10.67320633 635.31463623]
[-15.10989952 620.92681885]
[-16.45785141 605.93096924]
[-14.65813255 590.98254395]
[-9.78942204 576.73510742]
[-2.06455755 563.81146240]
[8.17876244 552.77661133]
[20.49274445 544.11291504]
[34.33907700 538.19915771]
[49.11244965 535.29382324]
[49.33577728 520.29547119]
[49.55910492 505.29711914]
[49.78243256 490.29879761]
[50.00576019 475.30044556]
[40.51539993 486.91653442]
[26.28478050 491.65881348]
[11.72341251 488.05792236]
[1.34329712 477.22955322]
[-1.63917530 462.52905273]
[3.70014691 448.51150513]
[15.70681667 439.52041626]
[30.66043663 438.34173584]
[43.92746735 445.34072876]
[51.39702988 458.34893799]
[53.62214661 443.51489258]
[47.85842896 429.78067017]
[57.55725861 417.28094482]
[59.78237534 402.44689941]
[62.00749207 387.61285400]
[64.23261261 372.77880859]
[50.64445114 366.52267456]
[39.35832977 356.68118286]
[31.29452133 344.04550171]
[27.11374092 329.63500977]
[27.16301537 314.61523438]
[31.44690514 300.20343018]
[39.62641907 287.56997681]
[51.04585266 277.74340820]
[64.78531647 271.52655029]
[79.73485565 269.43099976]
[81.95996857 254.59696960]
[76.19625092 240.86274719]
[85.89508057 228.36300659]
[88.12020111 213.52896118]
[90.34531403 198.69493103]
[84.58159637 184.96070862]
[94.28042603 172.46096802]
[95.06175232 157.48133850]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.28475952 43.23330307]
[87.28074646 28.36777496]
[85.27673340 13.50224590]
[83.16210938 -1.34795141]
[71.36006927 -15.48278141]
[78.41526031 -31.55111122]
[75.96953583 -46.35038376]
[73.52380371 -61.14965439]
[71.07807922 -75.94892120]
[68.41228485 -90.71014404]
[65.52700806 -105.43003082]
[55.27971268 -117.48422241]
[60.42441559 -131.46211243]
[57.53914261 -146.18199158]
[54.65386963 -160.90188599]
[51.76859665 -175.62178040]
[41.52130127 -187.67596436]
[46.66600418 -201.65385437]
[42.21868896 -187.32830811]
[33.41408157 -175.18421936]
[21.18135071 -166.50318909]
[6.81144619 -162.20133972]
[-8.17914009 -162.73266602]
[-22.20841789 -168.04109192]
[-33.79584122 -177.56640625]
[-41.71856689 -190.30337524]
[-45.14048386 -204.90783691]
[-43.70047379 -219.83856201]
[-37.55050659 -233.51986694]
[-27.33959579 -244.50791931]
[-14.14532757 -251.64312744]
[0.63987577 -254.17251587]
[15.45569706 -251.82911682]
[28.73858643 -244.86027527]
[39.08676910 -234.00140381]
[45.40822983 -220.39828491]
[46.30104446 -235.37168884]
[47.19386292 -250.34509277]
[48.08667755 -265.31851196]
[48.97949219 -280.29190063]
[35.29154587 -286.90316772]
[25.17927742 -298.25262451]
[20.18473434 -312.60961914]
[21.06954765 -327.78475952]
[27.69879150 -341.46401978]
[39.06155396 -351.56134033]
[53.42509460 -356.53698730]
[68.59908295 -355.63220215]
[82.26958466 -348.98498535]
[92.35195923 -337.60894775]
[97.30871582 -323.23886108]
[96.38397980 -308.06610107]
[89.71876526 -294.40432739]
[78.32948303 -284.33694458]
[63.95289993 -279.39907837]
[63.06008148 -264.42568970]
[62.16726685 -249.45228577]
[61.27445221 -234.47888184]
[60.38163376 -219.50547791]
[61.38589478 -204.53912354]
[71.42681885 -193.53779602]
[66.48848724 -178.50704956]
[69.37376404 -163.78715515]
[72.25903320 -149.06727600]
[75.14431000 -134.34738159]
[85.18523407 -123.34605408]
[80.24690247 -108.31530762]
[83.13217163 -93.59541321]
[86.52563477 -90.23484039]
[87.84403992 -84.70683289]
[85.87734985 -78.39465332]
[88.32307434 -63.59538269]
[90.76880646 -48.79610825]
[93.21453094 -33.99683762]
[102.86235809 -26.69985199]
[105.02104950 -14.39035225]
[97.99615479 -3.57306862]
[102.09709930 2.57542896]
[100.14226532 11.49823284]
[102.14627838 26.36375999]
[104.15029144 41.22929001]
[114.08234406 29.98854828]
[129.04463196 28.92557526]
[140.46607971 38.64929199]
[141.80395508 53.58950806]
[132.29187012 65.18778992]
[117.37876892 66.80011749]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.04679108 156.81155396]
[117.32061768 143.69319153]
[129.25210571 134.60255432]
[143.83059692 131.07159424]
[158.59934998 133.69531250]
[171.06956482 142.03158569]
[179.13981628 154.67561340]
[181.45010376 169.49662781]
[177.61109924 183.99703979]
[168.26976013 195.73329163]
[155.00025940 202.72758484]
[140.03874207 203.80130005]
[125.90647888 198.77345276]
[114.98500824 188.49136353]
[109.11447144 174.68609619]
[114.71903229 189.48133850]
[105.17935944 200.92004395]
[102.95424652 215.75408936]
[100.72912598 230.58813477]
[106.33368683 245.38337708]
[96.79401398 256.82208252]
[94.56890106 271.65612793]
[108.24567413 278.04562378]
[119.55643463 288.02005005]
[127.59017944 300.76461792]
[131.70306396 315.24191284]
[131.56999207 330.27636719]
[127.21029663 344.64956665]
[118.98548126 357.19918823]
[107.56925201 366.91287231]
[93.89234161 373.00988770]
[79.06665802 375.00393677]
[76.84153748 389.83798218]
[74.61641693 404.67199707]
[72.39130402 419.50604248]
[77.99586487 434.30130005]
[68.45619202 445.74002075]
[66.23107147 460.57403564]
[65.00409698 475.52377319]
[64.78076935 490.52212524]
[64.55744171 505.52044678]
[64.33411407 520.51879883]
[64.11078644 535.51715088]
[78.79110718 538.86108398]
[92.45522308 545.18444824]
[104.50579834 554.21093750]
[114.41603088 565.54589844]
[121.75268555 578.69378662]
[126.19503784 593.07989502]
[127.54888916 608.07525635]
[125.75505066 623.02435303]
[120.89194489 637.27368164]
[113.17216492 650.20037842]
[102.93318939 661.23925781]
[90.62261200 669.90777588]
[76.77861023 675.82702637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[29 192]
[30 191]
[32 189]
[33 188]
[34 187]
[35 186]
[45 176]
[46 175]
[48 173]
[49 172]
[50 171]
[52 169]
[53 155]
[54 154]
[55 153]
[56 152]
[58 150]
[59 149]
[60 148]
[61 141]
[62 140]
[63 139]
[64 137]
[66 134]
[67 133]
[68 132]
[69 131]
[70 128]
[71 127]
[73 125]
[74 124]
[75 123]
[76 122]
[78 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
