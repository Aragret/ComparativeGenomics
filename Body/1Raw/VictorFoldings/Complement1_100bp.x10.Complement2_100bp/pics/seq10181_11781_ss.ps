%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[99.49066162 593.06695557]
[87.26614380 584.33978271]
[76.23185730 574.14916992]
[66.56183624 562.65600586]
[58.40858841 550.04138184]
[51.90070724 536.50439453]
[47.14082718 522.25842285]
[44.20401764 507.52825928]
[43.13660049 492.54614258]
[43.95540619 477.54837036]
[46.64752579 462.77151489]
[51.17049408 448.44860840]
[57.45298386 434.80551147]
[65.39590454 422.05746460]
[74.87399292 410.40545654]
[85.73775482 400.03329468]
[97.81586456 391.10455322]
[110.91783142 383.76004028]
[124.83701324 378.11560059]
[139.35388184 374.26025391]
[137.34986877 359.39471436]
[135.34585571 344.52920532]
[122.16855621 337.63739014]
[115.49727631 324.14822388]
[118.07829285 309.14184570]
[129.12837219 298.40859985]
[127.12435150 283.54309082]
[125.12033844 268.67755127]
[115.75202942 257.09808350]
[121.57624817 242.38792419]
[119.57223511 227.52239990]
[117.01640320 212.74174500]
[113.91229248 198.06643677]
[110.80818176 183.39112854]
[107.70407104 168.71583557]
[104.49079895 154.06404114]
[101.16854095 139.43658447]
[97.84627533 124.80912781]
[94.52401733 110.18166351]
[89.01992035 124.13533783]
[77.72219086 134.00251770]
[63.15476608 137.57885742]
[48.57205200 134.06538391]
[37.23186111 124.24703217]
[31.66762352 110.31723022]
[33.12240219 95.38794708]
[41.27119827 82.79441071]
[54.29354477 75.35005188]
[69.28022003 74.71796417]
[82.88316345 81.03935242]
[92.06345367 92.90202332]
[91.17063141 77.92861938]
[90.27781677 62.95521164]
[89.38500214 47.98180771]
[88.49218750 33.00839996]
[87.59937286 18.03499603]
[86.70655823 3.06158972]
[85.81373596 -11.91181564]
[77.70096588 0.70495498]
[64.41226959 7.66272545]
[49.42128372 7.14275122]
[36.64661789 -0.71904832]
[29.42753792 -13.86761761]
[29.65109253 -28.86595154]
[37.25884628 -41.79352188]
[50.26214981 -49.27109146]
[65.26197052 -49.34404755]
[78.33739471 -41.99330902]
[86.07028961 -29.14120293]
[87.40852356 -44.08139038]
[77.55065918 -56.14208221]
[79.12065125 -71.27449036]
[90.67942810 -80.59812927]
[92.01766205 -95.53831482]
[84.36136627 -105.91828918]
[85.78355408 -118.33444977]
[94.97994995 -126.19274902]
[96.54047394 -141.11135864]
[98.10099792 -156.02996826]
[99.66152191 -170.94856262]
[101.22204590 -185.86717224]
[94.96242523 -200.39739990]
[103.98182678 -212.25067139]
[105.54234314 -227.16926575]
[107.10286713 -242.08787537]
[95.73812866 -252.48735046]
[92.71145630 -267.41024780]
[98.97815704 -281.09207153]
[111.94441986 -288.37313843]
[113.50494385 -303.29174805]
[115.06546783 -318.21035767]
[116.62599182 -333.12893677]
[118.18651581 -348.04754639]
[103.78715515 -352.41275024]
[90.47425079 -359.42437744]
[78.72906494 -368.82901001]
[68.97616577 -380.28665161]
[61.56812286 -393.38311768]
[56.77272797 -407.64498901]
[54.76333618 -422.55667114]
[55.61258316 -437.57916260]
[59.28977203 -452.16940308]
[65.66197205 -465.79995728]
[74.49882507 -477.97805786]
[85.48089600 -488.26351929]
[98.21118927 -496.28451538]
[112.22950745 -501.75106812]
[127.02909088 -504.46557617]
[142.07496643 -504.32995605]
[156.82321167 -501.34906006]
[170.74069214 -495.63064575]
[183.32431030 -487.38146973]
[194.11915588 -476.89968872]
[202.73503113 -464.56423950]
[208.86045837 -450.82104492]
[212.27400208 -436.16687012]
[212.85227966 -421.13153076]
[210.57437134 -406.25845337]
[205.52264404 -392.08538818]
[197.87969971 -379.12460327]
[187.92181396 -367.84463501]
[176.00898743 -358.65328979]
[162.57183838 -351.88281250]
[148.09611511 -347.77792358]
[133.10511780 -346.48703003]
[131.54460144 -331.56842041]
[129.98406982 -316.64981079]
[128.42355347 -301.73123169]
[126.86302948 -286.81262207]
[138.04187012 -277.00588989]
[141.34158325 -262.32339478]
[135.29228210 -248.34988403]
[122.02147675 -240.52735901]
[120.46095276 -225.60874939]
[118.90042877 -210.69013977]
[125.27165985 -197.22698975]
[116.14064789 -184.30664062]
[114.58012390 -169.38804626]
[113.01959991 -154.46943665]
[111.45908356 -139.55082703]
[109.89855957 -124.63222504]
[117.89764404 -109.01232147]
[106.95784760 -94.20008087]
[105.61961365 -79.25989532]
[115.33739471 -68.03045654]
[114.19306183 -52.85992050]
[102.34870911 -42.74315262]
[101.01047516 -27.80296898]
[100.78714752 -12.80463219]
[101.67996216 2.16877389]
[102.57277679 17.14217949]
[103.46559143 32.11558533]
[104.35840607 47.08898926]
[105.25122070 62.06239700]
[106.14404297 77.03580475]
[107.03685760 92.00920868]
[109.15148163 106.85940552]
[112.47373962 121.48686218]
[115.79599762 136.11431885]
[119.11825562 150.74179077]
[124.07064056 158.41719055]
[122.37937164 165.61172485]
[125.48348236 180.28703308]
[128.58760071 194.96232605]
[131.69171143 209.63763428]
[141.93687439 198.68151855]
[156.90170288 199.70816040]
[165.55467224 211.96076965]
[161.51712036 226.40716553]
[147.76541138 232.39799500]
[134.43775940 225.51838684]
[136.44177246 240.38391113]
[145.95343018 253.02665710]
[139.98587036 266.67355347]
[141.98988342 281.53906250]
[143.99389648 296.40460205]
[157.49171448 303.82852173]
[163.95439148 317.61575317]
[161.09329224 332.38998413]
[150.21138000 342.52517700]
[152.21539307 357.39071655]
[154.21940613 372.25622559]
[169.23896790 372.12979126]
[184.15594482 373.88684082]
[198.73506165 377.49966431]
[212.74639893 382.91131592]
[225.96894836 390.03640747]
[238.19421387 398.76260376]
[249.22935486 408.95223999]
[258.90036011 420.44464111]
[267.05465698 433.05856323]
[273.56365967 446.59500122]
[278.32476807 460.84054565]
[281.26278687 475.57049561]
[282.33148193 490.55252075]
[281.51394653 505.55035400]
[278.82305908 520.32745361]
[274.30130005 534.65075684]
[268.01995850 548.29437256]
[260.07809448 561.04309082]
[250.60099792 572.69586182]
[239.73811340 583.06896973]
[227.66075134 591.99871826]
[214.55940247 599.34429932]
[200.64070129 604.98992920]
[186.12416077 608.84649658]
[171.23870850 610.85321045]
[156.21913147 610.97839355]
[141.30232239 609.22009277]
[126.72350311 605.60601807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 182]
[21 181]
[22 180]
[26 176]
[27 175]
[28 174]
[30 172]
[31 171]
[32 165]
[33 164]
[34 163]
[35 162]
[36 160]
[37 159]
[38 158]
[39 157]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[69 148]
[70 147]
[73 144]
[74 143]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[83 135]
[84 134]
[85 133]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
