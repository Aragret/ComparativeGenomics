%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[59.74797440 572.09216309]
[52.04137039 585.02667236]
[41.81364441 596.07598877]
[29.51190758 604.75708008]
[15.67394447 610.69036865]
[0.90468657 613.61663818]
[-14.15021515 613.40777588]
[-28.83262634 610.07305908]
[-42.50069427 603.75817871]
[-54.55691147 594.73919678]
[-64.47422791 583.41046143]
[-71.81910706 570.26715088]
[-76.27045441 555.88385010]
[-77.63368225 540.88934326]
[-75.84919739 525.93914795]
[-70.99500275 511.68676758]
[-63.28330994 498.75527954]
[-53.05123901 487.70999146]
[-40.74608994 479.03375244]
[-26.90579033 473.10586548]
[-12.13538361 470.18545532]
[2.91943550 470.40020752]
[6.24169493 455.77273560]
[9.56395435 441.14529419]
[12.88621426 426.51782227]
[16.20847321 411.89038086]
[19.53073311 397.26290894]
[22.85299301 382.63543701]
[21.26902962 375.41653442]
[26.33513832 367.81570435]
[29.87481117 353.23934937]
[33.30587387 338.63702393]
[36.62813187 324.00955200]
[39.95038986 309.38208008]
[30.68767166 301.53497314]
[25.61023521 290.42855835]
[25.73745346 278.14501953]
[31.10655212 267.01614380]
[40.75388718 259.18048096]
[52.88735962 256.17269897]
[56.64365768 241.65065002]
[60.39995956 227.12860107]
[64.15625763 212.60653687]
[67.80435181 198.05691528]
[71.34401703 183.48054504]
[74.88368988 168.90415955]
[78.42336273 154.32778931]
[72.39972687 143.83767700]
[75.22939301 131.66490173]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.30757141 57.26306915]
[99.27264404 41.96503067]
[109.95057678 31.58086014]
[113.70687866 17.05880165]
[107.84547424 5.56938219]
[111.27307129 -6.44874334]
[121.62768555 -12.70242405]
[125.59978485 -27.16694832]
[129.57188416 -41.63146973]
[133.54397583 -56.09599686]
[137.51606750 -70.56051636]
[141.48817444 -85.02503967]
[140.16676331 -90.07489014]
[140.84654236 -94.66740417]
[143.01820374 -98.11688995]
[145.97407532 -100.03916931]
[150.58808899 -114.31190491]
[155.20210266 -128.58464050]
[154.14239502 -132.79545593]
[154.44711304 -136.72886658]
[155.86149597 -139.98999023]
[158.02871704 -142.30725098]
[160.53895569 -143.55500793]
[158.35049438 -159.22413635]
[170.18673706 -168.26585388]
[175.64208984 -182.23864746]
[179.61418152 -196.70317078]
[182.05990601 -211.50244141]
[184.50564575 -226.30171204]
[186.95137024 -241.10098267]
[189.39709473 -255.90025330]
[191.84281921 -270.69952393]
[177.43742371 -274.94973755]
[163.66354370 -280.93804932]
[150.72998047 -288.57363892]
[138.83279419 -297.74078369]
[128.15234375 -308.30050659]
[118.85055542 -320.09271240]
[111.06842804 -332.93865967]
[104.92395020 -346.64358521]
[100.51026917 -360.99972534]
[97.89427948 -375.78945923]
[97.11565399 -390.78857422]
[98.18619537 -405.76968384]
[101.08966827 -420.50567627]
[105.78205872 -434.77316284]
[112.19223022 -448.35586548]
[120.22301483 -461.04782104]
[129.75265503 -472.65667725]
[140.63668823 -483.00643921]
[152.71012878 -491.94018555]
[165.78991699 -499.32247925]
[179.67779541 -505.04144287]
[194.16322327 -509.01034546]
[209.02658081 -511.16903687]
[224.04257202 -511.48480225]
[238.98355103 -509.95281982]
[253.62300110 -506.59634399]
[267.73901367 -501.46624756]
[281.11758423 -494.64028931]
[293.55587769 -486.22195435]
[304.86535645 -476.33889771]
[314.87457275 -465.14086914]
[323.43179321 -452.79772949]
[330.40725708 -439.49649048]
[335.69525146 -425.43887329]
[339.21560669 -410.83798218]
[340.91497803 -395.91510010]
[340.76754761 -380.89651489]
[338.77557373 -366.00988770]
[334.96926880 -351.48089600]
[329.40634155 -337.52978516]
[322.17111206 -324.36807251]
[313.37322998 -312.19525146]
[303.14611816 -301.19589233]
[291.64480591 -291.53674316]
[279.04364014 -283.36419678]
[265.53366089 -276.80218506]
[251.31967163 -271.95019531]
[236.61715698 -268.88174438]
[221.64898682 -267.64334106]
[206.64208984 -268.25381470]
[204.19636536 -253.45452881]
[201.75064087 -238.65525818]
[199.30491638 -223.85598755]
[196.85917664 -209.05671692]
[194.41345215 -194.25744629]
[204.03753662 -205.76296997]
[217.29623413 -212.77774048]
[232.22270203 -214.26113892]
[246.60269165 -209.99311829]
[258.30300903 -200.60682678]
[265.58798218 -187.49464417]
[267.37695312 -172.60171509]
[263.40447998 -158.13728333]
[254.25993347 -146.24708557]
[241.29978943 -138.69494629]
[226.44664001 -136.60119629]
[211.90383911 -140.27641296]
[199.82875061 -149.17541504]
[192.01263428 -161.97807312]
[189.61488342 -176.78329468]
[184.15953064 -162.81050110]
[186.73818970 -148.14080811]
[174.51174927 -138.09965515]
[169.47483826 -123.97062683]
[164.86082458 -109.69789124]
[160.24681091 -95.42516327]
[155.95269775 -81.05294800]
[151.98059082 -66.58842468]
[148.00849915 -52.12389755]
[144.03640747 -37.65937424]
[140.06430054 -23.19485092]
[136.09220886 -8.73032761]
[141.43745422 7.98479605]
[128.22894287 20.81510162]
[124.47263336 35.33716202]
[128.77624512 49.59648132]
[117.82963562 61.01936722]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[105.77944183 145.84056091]
[92.99974060 157.86746216]
[89.46006775 172.44383240]
[85.92039490 187.02021790]
[82.38072205 201.59658813]
[83.39667511 210.67434692]
[78.67832184 216.36283875]
[74.92201996 230.88490295]
[71.16571808 245.40695190]
[67.40941620 259.92901611]
[79.35404968 273.57025146]
[80.70715332 291.49368286]
[71.11516571 306.50848389]
[54.57785034 312.70434570]
[51.25559235 327.33181763]
[47.93333054 341.95925903]
[49.08432388 351.02090454]
[44.45118713 356.77902222]
[40.91151428 371.35537720]
[37.48045349 385.95770264]
[34.15819168 400.58517456]
[30.83593369 415.21261597]
[27.51367378 429.84008789]
[24.19141388 444.46755981]
[20.86915588 459.09500122]
[17.54689598 473.72247314]
[31.21744728 480.03195190]
[43.27721024 489.04617310]
[53.19898224 500.37100220]
[60.54903030 513.51141357]
[65.00603485 527.89294434]
[66.37516785 542.88696289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[28 198]
[30 197]
[31 196]
[32 194]
[33 193]
[34 192]
[40 188]
[41 187]
[42 186]
[43 185]
[44 183]
[45 182]
[46 181]
[47 180]
[50 178]
[51 177]
[53 175]
[54 174]
[55 173]
[57 171]
[58 170]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[70 162]
[71 161]
[72 160]
[77 159]
[79 157]
[80 156]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
