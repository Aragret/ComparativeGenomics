%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[104.64591980 876.42370605]
[89.73512268 874.76300049]
[74.92287445 872.37829590]
[60.24428940 869.27526855]
[45.73419571 865.46124268]
[31.42700386 860.94525146]
[17.35665321 855.73803711]
[3.55651593 849.85198975]
[-9.94067574 843.30102539]
[-23.10290909 836.10064697]
[-35.89896393 828.26800537]
[-48.29848862 819.82159424]
[-60.27207184 810.78149414]
[-71.79131317 801.16918945]
[-82.82889557 791.00744629]
[-93.35863495 780.32031250]
[-103.35555267 769.13323975]
[-112.79594421 757.47265625]
[-121.65741730 745.36633301]
[-129.91894531 732.84283447]
[-137.56094360 719.93200684]
[-144.56526184 706.66442871]
[-150.91532898 693.07153320]
[-156.59603882 679.18560791]
[-161.59394836 665.03955078]
[-165.89720154 650.66699219]
[-169.49557495 636.10192871]
[-172.38053894 621.37890625]
[-174.54525757 606.53289795]
[-175.98458862 591.59912109]
[-176.69511414 576.61297607]
[-176.67515564 561.60998535]
[-175.92477417 546.62579346]
[-174.44572449 531.69586182]
[-172.24153137 516.85571289]
[-169.31742859 502.14041138]
[-165.68032837 487.58496094]
[-161.33886719 473.22387695]
[-156.30335999 459.09115601]
[-150.58572388 445.22039795]
[-144.19953918 431.64443970]
[-137.15994263 418.39553833]
[-129.48364258 405.50506592]
[-121.18882751 393.00363159]
[-112.29518890 380.92089844]
[-102.82382202 369.28549194]
[-92.79718018 358.12500000]
[-82.23905945 347.46594238]
[-71.17448425 337.33358765]
[-59.62971878 327.75192261]
[-47.63213348 318.74374390]
[-35.21018982 310.33035278]
[-22.39334869 302.53173828]
[-9.21201134 295.36642456]
[4.30255699 288.85134888]
[18.11830139 283.00201416]
[32.20244980 277.83224487]
[46.52160263 273.35433960]
[61.04179001 269.57894897]
[75.72856903 266.51495361]
[90.54711914 264.16964722]
[105.46227264 262.54861450]
[104.56945801 247.57522583]
[103.67664337 232.60182190]
[102.78382874 217.62840271]
[101.89100647 202.65499878]
[100.99819183 187.68159485]
[99.77121735 172.73185730]
[98.21069336 157.81326294]
[96.65016937 142.89465332]
[95.08964539 127.97605133]
[91.26733398 121.65056610]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[87.42646027 43.69372559]
[85.53317261 28.81369019]
[75.64931488 16.45974731]
[81.20790863 2.64123535]
[78.76218414 -12.15803528]
[76.31645203 -26.95730591]
[73.87072754 -41.75657654]
[67.90587616 -27.99356270]
[56.61700058 -18.11625290]
[42.18379974 -14.03180313]
[27.39310265 -16.52885437]
[15.10075951 -25.12526703]
[7.68022966 -38.16120911]
[6.56430149 -53.11964035]
[11.96844292 -67.11232758]
[22.84919930 -77.43750000]
[37.10566711 -82.10152435]
[51.98514557 -80.20385742]
[64.61463928 -72.11090088]
[72.55601501 -59.38408661]
[72.77934265 -74.38242340]
[73.00267029 -89.38076019]
[73.22599792 -104.37909698]
[59.75068283 -111.63681793]
[51.20132828 -124.33197784]
[49.54251862 -139.54733276]
[55.15542984 -153.78649902]
[66.75025940 -163.77742004]
[81.66260529 -167.22425842]
[96.46570587 -163.33494568]
[107.75792694 -153.00323486]
[112.94439697 -138.60327148]
[110.83330536 -123.44404602]
[101.90975952 -111.00906372]
[88.22433472 -104.15576935]
[88.00100708 -89.15743256]
[87.77767944 -74.15909576]
[87.55435181 -59.16075897]
[88.66999817 -44.20230484]
[91.11572266 -29.40303421]
[93.56145477 -14.60376263]
[96.00717926 0.19550803]
[105.71610260 11.49090958]
[100.33244324 26.36796379]
[111.05661011 15.88025093]
[125.96067047 17.57408905]
[134.05789185 30.20084572]
[129.37931824 44.45254135]
[115.37380219 49.82336044]
[102.36664581 42.35549164]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[110.00825500 126.41552734]
[111.56877899 141.33413696]
[113.12930298 156.25273132]
[114.68981934 171.17134094]
[117.75731659 175.39479065]
[118.79434204 179.92004395]
[118.02593994 183.92312622]
[115.97159576 186.78878784]
[116.86441803 201.76219177]
[117.75723267 216.73559570]
[118.65004730 231.70899963]
[119.54286194 246.68240356]
[120.43567657 261.65582275]
[135.43778992 261.49298096]
[150.43002319 262.06072998]
[165.37684631 263.35775757]
[180.24278259 265.38098145]
[194.99258423 268.12561035]
[209.59127808 271.58508301]
[224.00421143 275.75125122]
[238.19720459 280.61419678]
[252.13661194 286.16241455]
[265.78936768 292.38272095]
[279.12304688 299.26037598]
[292.10607910 306.77905273]
[304.70764160 314.92092896]
[316.89785767 323.66668701]
[328.64779663 332.99560547]
[339.92962646 342.88552856]
[350.71652222 353.31298828]
[360.98294067 364.25329590]
[370.70452881 375.68048096]
[379.85824585 387.56741333]
[388.42233276 399.88592529]
[396.37652588 412.60681152]
[403.70193481 425.69985962]
[410.38116455 439.13403320]
[416.39840698 452.87750244]
[421.73937988 466.89761353]
[426.39138794 481.16113281]
[430.34344482 495.63424683]
[433.58615112 510.28262329]
[436.11181641 525.07147217]
[437.91442871 539.96575928]
[438.98974609 554.93017578]
[439.33523560 569.92919922]
[438.95001221 584.92724609]
[437.83505249 599.88873291]
[435.99295044 614.77819824]
[433.42810059 629.56036377]
[430.14660645 644.20007324]
[426.15621948 658.66265869]
[421.46640015 672.91381836]
[416.08828735 686.91967773]
[410.03466797 700.64715576]
[403.31985474 714.06359863]
[395.95977783 727.13720703]
[387.97192383 739.83697510]
[379.37518311 752.13275146]
[370.19003296 763.99536133]
[360.43820190 775.39672852]
[350.14279175 786.30981445]
[339.32830811 796.70867920]
[328.02032471 806.56866455]
[316.24569702 815.86639404]
[304.03234863 824.57983398]
[291.40927124 832.68829346]
[278.40634155 840.17248535]
[265.05447388 847.01483154]
[251.38529968 853.19891357]
[237.43124390 858.71014404]
[223.22540283 863.53546143]
[208.80146790 867.66345215]
[194.19367981 871.08422852]
[179.43664551 873.78973389]
[164.56539917 875.77355957]
[149.61518860 877.03100586]
[134.62150574 877.55902100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 136]
[69 135]
[70 134]
[71 133]
[73 132]
[75 130]
[76 129]
[77 128]
[78 127]
[79 121]
[81 119]
[82 118]
[83 117]
[84 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
